{"map":"{\"version\":3,\"sources\":[\"webpack/universalModuleDefinition\",\"webpack/bootstrap\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/service/xmpp/XMPPEvents.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/strophe.js/strophe.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/JitsiConferenceEvents.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/modules/browser/index.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/jitsi-meet-logger/lib/index.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/modules/xmpp/SDPUtil.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/modules/statistics/statistics.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/service/RTC/RTCEvents.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/service/statistics/AnalyticsEvents.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/service/RTC/MediaType.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/modules/util/GlobalOnErrorHandler.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/modules/RTC/RTCUtils.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/JitsiTrackErrors.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/modules/RTC/RTC.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/service/RTC/VideoType.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/JitsiTrackError.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/sdp-transform/lib/index.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/JitsiTrackEvents.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/modules/xmpp/SDP.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/node_modules/js-utils/browser-detection/browsers.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/node_modules/js-utils/browser-detection/BrowserDetection.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/node_modules/js-utils/index.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/modules/videosipgw/VideoSIPGWConstants.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/JitsiConferenceErrors.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/JitsiConnectionEvents.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/service/statistics/Events.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/modules/util/Listenable.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/modules/settings/Settings.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/modules/RTC/ortc/utils.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/modules/RTC/ortc/errors.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/modules/xmpp/SdpTransformUtil.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/modules/proxyconnection/constants.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/events/events.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/service/RTC/Resolutions.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/modules/xmpp/JingleSessionState.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/modules/statistics/CallStats.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/service/connectivity/ConnectionQualityEvents.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/yaeti/index.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/modules/xmpp/ConnectionPlugin.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/modules/util/RandomUtil.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/modules/xmpp/xmpp.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/JitsiConnectionErrors.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/service/RTC/SignalingEvents.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/modules/RTC/ScreenObtainer.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/webrtc-adapter/src/js/utils.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/service/RTC/CameraFacingMode.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/webpack/buildin/global.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/modules/connectivity/ParticipantConnectionStatus.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/modules/recording/recordingXMLUtils.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/modules/xmpp/JingleSessionPC.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/JitsiMediaDevicesEvents.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/bowser/src/bowser.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/modules/xmpp/SDPDiffer.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/node-libs-browser/node_modules/process/browser.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/service/e2eping/E2ePingEvents.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/modules/statistics/LocalStatsCollector.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/modules/util/ScriptUtil.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/JitsiTranscriptionStatus.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/modules/RTC/JitsiTrack.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/modules/RTC/ortc/RTCSessionDescription.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/modules/util/MathUtil.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/modules/statistics/SpeakerStats.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/service/authentication/AuthenticationEvents.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/modules/RTC/JitsiLocalTrack.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/modules/recording/JibriSession.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/JitsiMediaDevices.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/jitsi-meet-logger/lib/Logger.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/webpack/buildin/module.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/sdp-transform/lib/grammar.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/sdp/sdp.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/modules/transcription/audioRecorder.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/modules/util/AuthUtil.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/JitsiConnection.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/JitsiConference.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lodash.isequal/index.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/JitsiConferenceEventManager.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/modules/util/EventEmitterForwarder.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/modules/statistics/AnalyticsAdapter.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/modules/browser/BrowserCapabilities.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/node_modules/js-md5/src/md5.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/modules/util/UsernameGenerator.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/modules/statistics/RTPStatsCollector.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/JitsiParticipant.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/authenticateAndUpgradeRole.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/modules/xmpp/strophe.emuc.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/modules/xmpp/ChatRoom.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/modules/xmpp/moderator.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/modules/xmpp/strophe.jingle.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/async/lib/async.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/modules/util/StringUtils.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/modules/xmpp/JingleSession.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/modules/xmpp/SignalingLayerImpl.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/service/RTC/SignalingLayer.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/modules/xmpp/strophe.util.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/modules/xmpp/strophe.ping.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/modules/xmpp/strophe.rayo.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/modules/xmpp/strophe.logger.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/modules/xmpp/Caps.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/modules/DTMF/JitsiDTMFManager.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/modules/P2PDominantSpeakerDetection.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/modules/RTC/BridgeChannel.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/modules/RTC/ortc/RTCPeerConnection.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/modules/RTC/TraceablePeerConnection.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/modules/RTC/JitsiRemoteTrack.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/modules/RTC/LocalSdpMunger.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/modules/xmpp/RtxModifier.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/modules/xmpp/SdpConsistency.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/modules/TalkMutedDetection.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/modules/connectivity/ConnectionQuality.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/modules/connectivity/IceFailedNotification.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/modules/e2eping/e2eping.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/modules/event/Jvb121EventGenerator.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/modules/recording/RecordingManager.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/modules/rttmonitor/rttmonitor.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/modules/statistics/AvgRTPStatsReporter.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/modules/statistics/SpeakerStatsCollector.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/modules/transcription/transcriber.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/modules/version/ComponentsVersions.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/modules/videosipgw/VideoSIPGW.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/modules/videosipgw/JitsiVideoSIPGWSession.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/modules/recording/recordingConstants.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/modules/proxyconnection/ProxyConnectionService.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/modules/proxyconnection/ProxyConnectionPC.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/index.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/JitsiMeetJS.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/jitsi-meet-logger/lib/LogCollector.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/webpack/buildin/amd-define.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/webpack/buildin/amd-options.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/current-executing-script/dist/currentExecutingScript.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/service/statistics/constants.js\",\"../src/strophe.disco.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/timers-browserify/main.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/setimmediate/setImmediate.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/yaeti/lib/EventTarget.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/yaeti/lib/Event.browser.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/sdp-transform/lib/parser.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/sdp-transform/lib/writer.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/webrtc-adapter/src/js/adapter_core.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/webrtc-adapter/src/js/adapter_factory.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/webrtc-adapter/src/js/chrome/chrome_shim.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/webrtc-adapter/src/js/chrome/getusermedia.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/webrtc-adapter/src/js/edge/edge_shim.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/rtcpeerconnection-shim/rtcpeerconnection.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/webrtc-adapter/src/js/edge/getusermedia.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/webrtc-adapter/src/js/firefox/firefox_shim.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/webrtc-adapter/src/js/firefox/getusermedia.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/webrtc-adapter/src/js/safari/safari_shim.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/webrtc-adapter/src/js/common_shim.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/@jitsi/sdp-interop/lib/index.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/@jitsi/sdp-interop/lib/interop.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/@jitsi/sdp-interop/lib/transform.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/@jitsi/sdp-interop/lib/array-equals.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/@jitsi/sdp-simulcast/lib/index.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/@jitsi/sdp-simulcast/lib/transform-utils.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/modules/transcription/recordingResult.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/modules/transcription/transcriptionServices/SphinxTranscriptionService.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/modules/transcription/transcriptionServices/AbstractTranscriptionService.js\",\"/Users/vikaskumar/Documents/video/jitsi-meet/node_modules/lib-jitsi-meet/modules/transcription/word.js\"],\"names\":[\"root\",\"factory\",\"exports\",\"module\",\"define\",\"amd\",\"window\",\"installedModules\",\"__webpack_require__\",\"moduleId\",\"i\",\"l\",\"modules\",\"call\",\"m\",\"c\",\"d\",\"name\",\"getter\",\"o\",\"Object\",\"defineProperty\",\"enumerable\",\"get\",\"r\",\"Symbol\",\"toStringTag\",\"value\",\"t\",\"mode\",\"__esModule\",\"ns\",\"create\",\"key\",\"bind\",\"n\",\"object\",\"property\",\"prototype\",\"hasOwnProperty\",\"p\",\"s\",\"ADD_ICE_CANDIDATE_FAILED\",\"AUDIO_MUTED_BY_FOCUS\",\"AUTHENTICATION_REQUIRED\",\"BRIDGE_DOWN\",\"CALL_ACCEPTED\",\"CALL_INCOMING\",\"CALL_ENDED\",\"CHAT_ERROR_RECEIVED\",\"CONFERENCE_PROPERTIES_CHANGED\",\"CONFERENCE_SETUP_FAILED\",\"CONNECTION_ESTABLISHED\",\"CONNECTION_FAILED\",\"CONNECTION_INTERRUPTED\",\"CONNECTION_RESTORED\",\"CONNECTION_ICE_FAILED\",\"DISPLAY_NAME_CHANGED\",\"EMUC_ROOM_ADDED\",\"EMUC_ROOM_REMOVED\",\"ETHERPAD\",\"FOCUS_DISCONNECTED\",\"FOCUS_LEFT\",\"GRACEFUL_SHUTDOWN\",\"ICE_RESTARTING\",\"ICE_RESTART_SUCCESS\",\"JINGLE_ERROR\",\"JINGLE_FATAL_ERROR\",\"KICKED\",\"LOCAL_ROLE_CHANGED\",\"MESSAGE_RECEIVED\",\"PRIVATE_MESSAGE_RECEIVED\",\"MUC_MEMBER_BOT_TYPE_CHANGED\",\"MUC_DESTROYED\",\"MUC_JOINED\",\"MUC_MEMBER_JOINED\",\"MUC_MEMBER_LEFT\",\"MUC_LEFT\",\"MUC_ROLE_CHANGED\",\"MUC_LOCK_CHANGED\",\"PARTICIPANT_AUDIO_MUTED\",\"PARTICIPANT_VIDEO_MUTED\",\"PARTICIPANT_VIDEO_TYPE_CHANGED\",\"PARTCIPANT_FEATURES_CHANGED\",\"PASSWORD_REQUIRED\",\"PEERCONNECTION_READY\",\"PHONE_NUMBER_CHANGED\",\"PRESENCE_RECEIVED\",\"PRESENCE_STATUS\",\"PROMPT_FOR_LOGIN\",\"READY_TO_JOIN\",\"RECORDER_STATE_CHANGED\",\"REMOTE_STATS\",\"RESERVATION_ERROR\",\"ROOM_CONNECT_ERROR\",\"ROOM_CONNECT_NOT_ALLOWED_ERROR\",\"ROOM_JOIN_ERROR\",\"ROOM_MAX_USERS_ERROR\",\"SENDING_CHAT_MESSAGE\",\"SENDING_PRIVATE_CHAT_MESSAGE\",\"SESSION_ACCEPT_TIMEOUT\",\"SPEAKER_STATS_RECEIVED\",\"START_MUTED_FROM_FOCUS\",\"SUBJECT_CHANGED\",\"SUSPEND_DETECTED\",\"TRANSCRIPTION_STATUS_CHANGED\",\"TRANSPORT_INFO\",\"VIDEO_SIP_GW_AVAILABILITY_CHANGED\",\"VIDEO_SIP_GW_SESSION_STATE_CHANGED\",\"ICE_CONNECTION_STATE_CHANGED\",\"JSON_MESSAGE_RECEIVED\",\"undefined\",\"__WEBPACK_AMD_DEFINE_RESULT__\",\"__WEBPACK_AMD_DEFINE_FACTORY__\",\"requirejs\",\"require\",\"undef\",\"main\",\"req\",\"makeMap\",\"handlers\",\"defined\",\"waiting\",\"config\",\"defining\",\"hasOwn\",\"aps\",\"slice\",\"jsSuffixRegExp\",\"hasProp\",\"obj\",\"prop\",\"normalize\",\"baseName\",\"nameParts\",\"nameSegment\",\"mapValue\",\"foundMap\",\"lastIndex\",\"foundI\",\"foundStarMap\",\"starI\",\"j\",\"part\",\"baseParts\",\"split\",\"map\",\"starMap\",\"length\",\"nodeIdCompat\",\"test\",\"replace\",\"charAt\",\"concat\",\"splice\",\"join\",\"makeRequire\",\"relName\",\"forceSync\",\"args\",\"arguments\",\"push\",\"apply\",\"makeLoad\",\"depName\",\"callDep\",\"Error\",\"splitPrefix\",\"prefix\",\"index\",\"indexOf\",\"substring\",\"makeRelParts\",\"makeConfig\",\"relParts\",\"plugin\",\"parts\",\"relResourceName\",\"f\",\"pr\",\"e\",\"id\",\"uri\",\"deps\",\"callback\",\"cjsModule\",\"ret\",\"usingExports\",\"callbackType\",\"_typeof\",\"load\",\"alt\",\"setTimeout\",\"cfg\",\"_defined\",\"jQuery\",\"this\",\"Function\",\"func\",\"_slice\",\"Array\",\"_concat\",\"_args\",\"isArray\",\"arg\",\"toString\",\"elt\",\"len\",\"from\",\"Number\",\"Math\",\"ceil\",\"floor\",\"forEach\",\"thisArg\",\"T\",\"k\",\"TypeError\",\"O\",\"kValue\",\"keyStr\",\"btoa\",\"input\",\"chr1\",\"chr2\",\"chr3\",\"enc1\",\"enc2\",\"enc3\",\"enc4\",\"output\",\"charCodeAt\",\"isNaN\",\"atob\",\"String\",\"fromCharCode\",\"SHA1\",\"core_sha1\",\"x\",\"olda\",\"oldb\",\"oldc\",\"oldd\",\"olde\",\"w\",\"a\",\"b\",\"rol\",\"safe_add\",\"sha1_ft\",\"sha1_kt\",\"core_hmac_sha1\",\"data\",\"bkey\",\"str2binb\",\"ipad\",\"opad\",\"hash\",\"y\",\"lsw\",\"num\",\"cnt\",\"str\",\"bin\",\"binb2str\",\"binb2b64\",\"binarray\",\"triplet\",\"b64_hmac_sha1\",\"b64_sha1\",\"str_hmac_sha1\",\"str_sha1\",\"MD5\",\"str2binl\",\"md5_cmn\",\"q\",\"md5_ff\",\"md5_gg\",\"md5_hh\",\"md5_ii\",\"core_md5\",\"hexdigest\",\"binl2hex\",\"binl2str\",\"stropheUtils\",\"utf16to8\",\"out\",\"addCookies\",\"cookies\",\"cookieName\",\"cookieObj\",\"isObj\",\"cookieValue\",\"expires\",\"domain\",\"path\",\"escape\",\"unescape\",\"document\",\"cookie\",\"Strophe\",\"$build\",\"$iq\",\"$msg\",\"$pres\",\"utils\",\"attrs\",\"Builder\",\"VERSION\",\"NS\",\"HTTPBIND\",\"BOSH\",\"CLIENT\",\"AUTH\",\"ROSTER\",\"PROFILE\",\"DISCO_INFO\",\"DISCO_ITEMS\",\"MUC\",\"SASL\",\"STREAM\",\"FRAMING\",\"BIND\",\"SESSION\",\"STANZAS\",\"XHTML_IM\",\"XHTML\",\"tags\",\"attributes\",\"blockquote\",\"br\",\"cite\",\"em\",\"img\",\"li\",\"ol\",\"span\",\"strong\",\"ul\",\"body\",\"css\",\"validTag\",\"tag\",\"validAttribute\",\"attribute\",\"validCSS\",\"style\",\"Status\",\"ERROR\",\"CONNECTING\",\"CONNFAIL\",\"AUTHENTICATING\",\"AUTHFAIL\",\"CONNECTED\",\"DISCONNECTED\",\"DISCONNECTING\",\"ATTACHED\",\"REDIRECT\",\"CONNTIMEOUT\",\"ErrorCondition\",\"BAD_FORMAT\",\"CONFLICT\",\"MISSING_JID_NODE\",\"NO_AUTH_MECH\",\"UNKNOWN_REASON\",\"LogLevel\",\"DEBUG\",\"INFO\",\"WARN\",\"FATAL\",\"ElementType\",\"NORMAL\",\"TEXT\",\"CDATA\",\"FRAGMENT\",\"TIMEOUT\",\"SECONDARY_TIMEOUT\",\"addNamespace\",\"forEachChild\",\"elem\",\"elemName\",\"childNode\",\"childNodes\",\"nodeType\",\"isTagEqual\",\"el\",\"tagName\",\"_xmlGenerator\",\"_makeGenerator\",\"doc\",\"implementation\",\"createDocument\",\"documentMode\",\"_getIEXmlDom\",\"appendChild\",\"createElement\",\"xmlGenerator\",\"docStrings\",\"ActiveXObject\",\"xmlElement\",\"node\",\"xmlTextNode\",\"sort\",\"attr\",\"setAttribute\",\"xmlescape\",\"text\",\"xmlunescape\",\"createTextNode\",\"xmlHtmlNode\",\"html\",\"DOMParser\",\"parseFromString\",\"async\",\"loadXML\",\"getText\",\"nodeValue\",\"copyElement\",\"nodeName\",\"createHtml\",\"cssAttrs\",\"cssName\",\"cssValue\",\"toLowerCase\",\"getAttribute\",\"cssText\",\"createDocumentFragment\",\"escapeNode\",\"unescapeNode\",\"getNodeFromJid\",\"jid\",\"getDomainFromJid\",\"bare\",\"getBareJidFromJid\",\"getResourceFromJid\",\"_handleError\",\"stack\",\"fatal\",\"sourceURL\",\"handler\",\"line\",\"message\",\"fileName\",\"lineNumber\",\"log\",\"level\",\"msg\",\"console\",\"error\",\"debug\",\"info\",\"warn\",\"serialize\",\"result\",\"tree\",\"child\",\"_requestId\",\"_connectionPlugins\",\"addConnectionPlugin\",\"ptype\",\"xmlns\",\"nodeTree\",\"up\",\"parentNode\",\"moreattrs\",\"removeAttribute\",\"cnode\",\"impNode\",\"xmlGen\",\"importNode\",\"newElem\",\"h\",\"fragment\",\"innerHTML\",\"xhtml\",\"Handler\",\"type\",\"options\",\"matchBareFromJid\",\"ignoreNamespaceFragment\",\"matchBare\",\"user\",\"getNamespace\",\"elNamespace\",\"namespaceMatch\",\"nsMatch\",\"that\",\"isMatch\",\"elem_type\",\"run\",\"TimedHandler\",\"period\",\"lastCalled\",\"Date\",\"getTime\",\"reset\",\"Connection\",\"service\",\"proto\",\"protocol\",\"_proto\",\"Websocket\",\"Bosh\",\"features\",\"_sasl_data\",\"do_session\",\"do_bind\",\"timedHandlers\",\"removeTimeds\",\"removeHandlers\",\"addTimeds\",\"addHandlers\",\"protocolErrorHandlers\",\"HTTP\",\"websocket\",\"_idleTimeout\",\"_disconnectTimeout\",\"authenticated\",\"connected\",\"disconnecting\",\"do_authentication\",\"paused\",\"restored\",\"_data\",\"_uniqueId\",\"_sasl_success_handler\",\"_sasl_failure_handler\",\"_sasl_challenge_handler\",\"maxRetries\",\"_onIdle\",\"registerSASLMechanisms\",\"mechanisms\",\"F\",\"init\",\"_reset\",\"_requests\",\"pause\",\"resume\",\"getUniqueId\",\"suffix\",\"uuid\",\"random\",\"addProtocolErrorHandler\",\"status_code\",\"connect\",\"pass\",\"wait\",\"hold\",\"route\",\"authcid\",\"authzid\",\"servtype\",\"connect_callback\",\"_changeConnectStatus\",\"_connect\",\"attach\",\"sid\",\"rid\",\"wind\",\"_attach\",\"restore\",\"_sessionCachingSupported\",\"_restore\",\"JSON\",\"sessionStorage\",\"setItem\",\"removeItem\",\"xmlInput\",\"xmlOutput\",\"rawInput\",\"rawOutput\",\"nextValidRid\",\"send\",\"_queueData\",\"_send\",\"flush\",\"clearTimeout\",\"sendPresence\",\"errback\",\"timeout\",\"timeoutHandler\",\"addHandler\",\"stanza\",\"deleteTimedHandler\",\"addTimedHandler\",\"deleteHandler\",\"sendIQ\",\"iqtype\",\"element\",\"_sendRestart\",\"thand\",\"handRef\",\"hand\",\"SASLAnonymous\",\"SASLExternal\",\"SASLMD5\",\"SASLOAuthBearer\",\"SASLXOAuth2\",\"SASLPlain\",\"SASLSHA1\",\"registerSASLMechanism\",\"mechanism\",\"disconnect\",\"reason\",\"pres\",\"_addSysTimedHandler\",\"_onDisconnectTimeout\",\"_disconnect\",\"_abortAllRequests\",\"_doDisconnect\",\"status\",\"condition\",\"statusChanged\",\"err\",\"_dataRecv\",\"raw\",\"_reqToData\",\"strip\",\"pop\",\"_emptyQueue\",\"cond\",\"conflict\",\"getElementsByTagName\",\"UNKOWN_REASON\",\"newList\",\"_connect_cb\",\"_callback\",\"bodyWrap\",\"getElementsByTagNameNS\",\"mech\",\"matched\",\"authenticate\",\"_no_auth_received\",\"sortMechanismsByPriority\",\"higher\",\"swap\",\"priority\",\"_attemptSASLAuth\",\"mechanism_found\",\"_addSysHandler\",\"_sasl_success_cb\",\"_sasl_failure_cb\",\"_sasl_challenge_cb\",\"_sasl_mechanism\",\"onStart\",\"request_auth_exchange\",\"isClientFirst\",\"response\",\"onChallenge\",\"_attemptLegacyAuth\",\"_auth1_cb\",\"to\",\"challenge\",\"iq\",\"_auth2_cb\",\"serverSignature\",\"matches\",\"match\",\"onSuccess\",\"streamfeature_handlers\",\"wrapper\",\"_sasl_auth1_cb\",\"_sasl_bind_cb\",\"resource\",\"jidNode\",\"_sasl_session_cb\",\"onFailure\",\"now\",\"SASLMechanism\",\"connection\",\"_connection\",\"auth_str\",\"test_cnonce\",\"cnonce\",\"nonce\",\"salt\",\"iter\",\"Hi\",\"U\",\"U_old\",\"clientKey\",\"serverKey\",\"clientSignature\",\"responseText\",\"authMessage\",\"attribMatch\",\"substr\",\"_quote\",\"realm\",\"host\",\"digest_uri\",\"cred\",\"A1\",\"A2\",\"core\",\"Request\",\"sends\",\"xmlData\",\"origFunc\",\"date\",\"NaN\",\"abort\",\"dead\",\"age\",\"timeDead\",\"xhr\",\"_newXHR\",\"getResponse\",\"responseXML\",\"documentElement\",\"querySelector\",\"textContent\",\"XMLHttpRequest\",\"overrideMimeType\",\"onreadystatechange\",\"_conn\",\"errors\",\"inactivity\",\"lastResponseHeaders\",\"_buildBody\",\"keepalive\",\"_cacheSession\",\"xml:lang\",\"content\",\"ver\",\"xmpp:version\",\"xmlns:xmpp\",\"_onRequestStateChange\",\"_throttledRequestHandler\",\"session\",\"parse\",\"getItem\",\"stringify\",\"typ\",\"parseInt\",\"_sendTerminate\",\"_callProtocolErrorHandlers\",\"err_callback\",\"reqStatus\",\"_getRequestStatus\",\"_hitError\",\"xmpp:restart\",\"time_elapsed\",\"def\",\"readyState\",\"getAllResponseHeaders\",\"valid_request\",\"too_many_retries\",\"_removeRequest\",\"reqIs0\",\"_restartRequest\",\"_processRequest\",\"self\",\"primaryTimeout\",\"secondaryTimeout\",\"requestCompletedWithServerError\",\"contentType\",\"open\",\"sync\",\"setRequestHeader\",\"withCredentials\",\"e2\",\"sendFunc\",\"customHeaders\",\"headers\",\"header\",\"backoff\",\"min\",\"pow\",\"abs\",\"new_service\",\"location\",\"pathname\",\"_buildStream\",\"version\",\"_check_streamerror\",\"connectstatus\",\"errorString\",\"_closeSocket\",\"socket\",\"WebSocket\",\"onopen\",\"_onOpen\",\"onerror\",\"_onError\",\"onclose\",\"_onClose\",\"onmessage\",\"_connect_cb_wrapper\",\"_handleStreamStart\",\"streamStart\",\"parsedMessage\",\"see_uri\",\"string\",\"_streamWrap\",\"_onMessage\",\"CLOSED\",\"close\",\"closeString\",\"code\",\"rawStanza\",\"search\",\"firstChild\",\"start\",\"startString\",\"__WEBPACK_AMD_DEFINE_ARRAY__\",\"__webpack_exports__\",\"AUTH_STATUS_CHANGED\",\"AVATAR_CHANGED\",\"BEFORE_STATISTICS_DISPOSED\",\"CONFERENCE_ERROR\",\"CONFERENCE_FAILED\",\"CONFERENCE_JOINED\",\"CONFERENCE_LEFT\",\"DATA_CHANNEL_OPENED\",\"DOMINANT_SPEAKER_CHANGED\",\"DTMF_SUPPORT_CHANGED\",\"ENDPOINT_MESSAGE_RECEIVED\",\"JVB121_STATUS\",\"LAST_N_ENDPOINTS_CHANGED\",\"LOCK_STATE_CHANGED\",\"SERVER_REGION_CHANGED\",\"PARTICIPANT_CONN_STATUS_CHANGED\",\"PARTICIPANT_PROPERTY_CHANGED\",\"P2P_STATUS\",\"PROPERTIES_CHANGED\",\"START_MUTED_POLICY_CHANGED\",\"STARTED_MUTED\",\"TALK_WHILE_MUTED\",\"TRACK_ADDED\",\"TRACK_AUDIO_LEVEL_CHANGED\",\"TRACK_MUTE_CHANGED\",\"TRACK_REMOVED\",\"USER_JOINED\",\"USER_LEFT\",\"USER_ROLE_CHANGED\",\"USER_STATUS_CHANGED\",\"BOT_TYPE_CHANGED\",\"_BrowserCapabilities__WEBPACK_IMPORTED_MODULE_0__\",\"BrowserCapabilities\",\"Logger\",\"LogCollector\",\"idLoggers\",\"loggers\",\"curLevel\",\"levels\",\"TRACE\",\"addGlobalTransport\",\"transport\",\"removeGlobalTransport\",\"getLogger\",\"transports\",\"format\",\"logger\",\"setLogLevelById\",\"setLevel\",\"setLogLevel\",\"__filename\",\"SDPUtil\",\"filterSpecialChars\",\"iceparams\",\"mediadesc\",\"sessiondesc\",\"pwd\",\"ufrag\",\"findLine\",\"parseICEUfrag\",\"parseICEPwd\",\"buildICEUfrag\",\"frag\",\"buildICEPwd\",\"parseMID\",\"parseMLine\",\"media\",\"shift\",\"port\",\"fmt\",\"buildMLine\",\"mline\",\"parseRTPMap\",\"clockrate\",\"channels\",\"parseSCTPMap\",\"buildRTPMap\",\"parseCrypto\",\"parseFingerprint\",\"fingerprint\",\"parseFmtp\",\"parseICECandidate\",\"candidate\",\"elems\",\"foundation\",\"component\",\"ip\",\"generation\",\"tcptype\",\"network\",\"buildICECandidate\",\"cand\",\"hasOwnAttribute\",\"parseSSRC\",\"desc\",\"Map\",\"lines\",\"ssrc\",\"set\",\"parseRTCPFB\",\"pt\",\"params\",\"parseExtmap\",\"direction\",\"haystack\",\"needle\",\"sessionpart\",\"findLines\",\"needles\",\"candidateToJingle\",\"candidateFromJingle\",\"browser\",\"isFirefox\",\"parsePrimaryVideoSsrc\",\"videoMLine\",\"numSsrcs\",\"ssrcs\",\"ssrcInfo\",\"filter\",\"array\",\"numGroups\",\"ssrcGroups\",\"primarySsrc\",\"fidGroup\",\"find\",\"group\",\"semantics\",\"simGroup\",\"generateSsrc\",\"RandomUtil\",\"randomInt\",\"getSsrcAttribute\",\"mLine\",\"attributeName\",\"ssrcLine\",\"parseGroupSsrcs\",\"ssrcGroup\",\"ssrcStr\",\"getMedia\",\"sdp\",\"getUfrag\",\"ufragLines\",\"startsWith\",\"preferVideoCodec\",\"codecName\",\"payloadType\",\"rtp\",\"codec\",\"payload\",\"payloadTypes\",\"payloads\",\"payloadIndex\",\"unshift\",\"stripVideoCodec\",\"removePts\",\"_iteratorNormalCompletion\",\"_didIteratorError\",\"_iteratorError\",\"_step\",\"_iterator\",\"iterator\",\"next\",\"done\",\"return\",\"rtxApts\",\"item\",\"rtxPts\",\"fmtp\",\"_toConsumableArray\",\"keepPts\",\"rtcpFb\",\"_instances\",\"isCallstatsLoaded\",\"_initCallStatsBackend\",\"CallStats\",\"isBackendInitialized\",\"userName\",\"Settings\",\"callStatsUserName\",\"initBackend\",\"callStatsID\",\"callStatsSecret\",\"swapUserNameAndAlias\",\"callStatsAliasName\",\"aliasName\",\"applicationName\",\"getWiFiStatsMethod\",\"Statistics\",\"xmpp\",\"rtpStatsMap\",\"eventEmitter\",\"EventEmitter\",\"callStatsIntegrationEnabled\",\"disableThirdPartyRequests\",\"isReactNative\",\"ScriptUtil\",\"loadScript\",\"customScriptUrl\",\"loadCallStatsAPI\",\"callStatsConfIDNamespace\",\"callsStatsInstances\",\"instances\",\"add\",\"audioLevelsEnabled\",\"disableAudioLevels\",\"audioLevelsInterval\",\"analytics\",\"Set\",\"startRemoteStats\",\"peerconnection\",\"stopRemoteStats\",\"rtpStats\",\"RTPStats\",\"localStats\",\"startLocalStats\",\"stream\",\"LocalStats\",\"addAudioLevelListener\",\"listener\",\"on\",\"StatisticsEvents\",\"removeAudioLevelListener\",\"removeListener\",\"addBeforeDisposedListener\",\"removeBeforeDisposedListener\",\"addConnectionStatsListener\",\"removeConnectionStatsListener\",\"addByteSentStatsListener\",\"removeByteSentStatsListener\",\"dispose\",\"size\",\"emit\",\"values\",\"callStats\",\"stopCallStats\",\"tpc\",\"_iteratorNormalCompletion2\",\"_didIteratorError2\",\"_iteratorError2\",\"_step2\",\"_iterator2\",\"keys\",\"tpcId\",\"_stopRemoteStats\",\"removeAllListeners\",\"delete\",\"stopLocalStats\",\"stop\",\"startCallStats\",\"remoteUserID\",\"has\",\"newInstance\",\"confID\",\"_getCallStatsConfID\",\"_getAllCallStatsInstances\",\"csInstances\",\"_iteratorNormalCompletion3\",\"_didIteratorError3\",\"_iteratorError3\",\"_step3\",\"_iterator3\",\"statistics\",\"_iteratorNormalCompletion4\",\"_didIteratorError4\",\"_iteratorError4\",\"_step4\",\"_iterator4\",\"cs\",\"roomName\",\"callStatsInstance\",\"sendTerminateEvent\",\"isCallstatsEnabled\",\"sendConnectionResumeOrHoldEvent\",\"isResume\",\"instance\",\"sendResumeOrHoldEvent\",\"sendIceConnectionFailedEvent\",\"sendMuteEvent\",\"muted\",\"sendScreenSharingEvent\",\"_iteratorNormalCompletion5\",\"_didIteratorError5\",\"_iteratorError5\",\"_step5\",\"_iterator5\",\"sendDominantSpeakerEvent\",\"roomJid\",\"_iteratorNormalCompletion6\",\"_didIteratorError6\",\"_iteratorError6\",\"_step6\",\"_iterator6\",\"sendActiveDeviceListEvent\",\"devicesData\",\"globalSet\",\"_iteratorNormalCompletion7\",\"_didIteratorError7\",\"_iteratorError7\",\"_step7\",\"_iterator7\",\"associateStreamWithVideoTag\",\"isLocal\",\"userId\",\"usageLabel\",\"containerId\",\"sendGetUserMediaFailed\",\"JitsiTrackError\",\"gum\",\"constraintName\",\"constraints\",\"formatJitsiTrackErrorForCallStats\",\"_iteratorNormalCompletion8\",\"_didIteratorError8\",\"_iteratorError8\",\"_step8\",\"_iterator8\",\"sendCreateOfferFailed\",\"sendCreateAnswerFailed\",\"sendSetLocalDescFailed\",\"sendSetRemoteDescFailed\",\"sendAddIceCandidateFailed\",\"sendLog\",\"globalSubSet\",\"_iteratorNormalCompletion9\",\"_didIteratorError9\",\"_iteratorError9\",\"_step9\",\"_iterator9\",\"stats\",\"_iteratorNormalCompletion10\",\"_didIteratorError10\",\"_iteratorError10\",\"_step10\",\"_iterator10\",\"csPerStats\",\"sendApplicationLog\",\"sendFeedback\",\"overall\",\"comment\",\"sendEvent\",\"FEEDBACK\",\"rating\",\"LOCAL_JID\",\"reportGlobalError\",\"sendAnalyticsAndLog\",\"event\",\"eventToLog\",\"properties\",\"sendAnalytics\",\"eventName\",\"CREATE_ANSWER_FAILED\",\"CREATE_OFFER_FAILED\",\"DATA_CHANNEL_OPEN\",\"ENDPOINT_CONN_STATUS_CHANGED\",\"LASTN_ENDPOINT_CHANGED\",\"GRANTED_PERMISSIONS\",\"IS_SELECTED_CHANGED\",\"LASTN_VALUE_CHANGED\",\"LOCAL_TRACK_SSRC_UPDATED\",\"TRACK_ATTACHED\",\"REMOTE_TRACK_ADDED\",\"REMOTE_TRACK_MUTE\",\"REMOTE_TRACK_REMOVED\",\"REMOTE_TRACK_UNMUTE\",\"SET_LOCAL_DESCRIPTION_FAILED\",\"SET_REMOTE_DESCRIPTION_FAILED\",\"AUDIO_OUTPUT_DEVICE_CHANGED\",\"DEVICE_LIST_CHANGED\",\"DEVICE_LIST_AVAILABLE\",\"LOCAL_UFRAG_CHANGED\",\"REMOTE_UFRAG_CHANGED\",\"TYPE_OPERATIONAL\",\"TYPE_PAGE\",\"TYPE_TRACK\",\"TYPE_UI\",\"ACTION_JINGLE_RESTART\",\"ACTION_JINGLE_SA_TIMEOUT\",\"ACTION_JINGLE_SI_RECEIVED\",\"ACTION_JINGLE_SI_TIMEOUT\",\"ACTION_JINGLE_TERMINATE\",\"ACTION_JINGLE_TR_RECEIVED\",\"ACTION_JINGLE_TR_SUCCESS\",\"ACTION_P2P_ESTABLISHED\",\"ACTION_P2P_FAILED\",\"ACTION_P2P_SWITCH_TO_JVB\",\"AVAILABLE_DEVICE\",\"CONNECTION_DISCONNECTED\",\"ICE_DURATION\",\"ICE_ESTABLISHMENT_DURATION_DIFF\",\"ICE_STATE_CHANGED\",\"TRACK_UNMUTED\",\"createBridgeDownEvent\",\"action\",\"actionSubject\",\"createConnectionFailedEvent\",\"errorType\",\"errorMessage\",\"details\",\"_objectSpread\",\"error_type\",\"error_message\",\"createConnectionStageReachedEvent\",\"stage\",\"source\",\"createE2eRttEvent\",\"participantId\",\"region\",\"rtt\",\"participant_id\",\"createFocusLeftEvent\",\"createGetUserMediaEvent\",\"createJingleEvent\",\"createNoDataFromSourceEvent\",\"mediaType\",\"media_type\",\"createP2PEvent\",\"createRemotelyMutedEvent\",\"createRtpStatsEvent\",\"createRttByRegionEvent\",\"createTtfmEvent\",\"AUDIO\",\"VIDEO\",\"oldOnErrorHandler\",\"oldOnUnhandledRejection\",\"onunhandledrejection\",\"_len\",\"_key\",\"GlobalOnErrorHandler\",\"callErrorHandler\",\"errHandler\",\"callUnhandledRejectionHandler\",\"usesAdapter\",\"availableDevices\",\"availableDevicesPollTimer\",\"OLD_GUM_DEFAULT_DEVICES\",\"DEFAULT_CONSTRAINTS\",\"video\",\"aspectRatio\",\"height\",\"ideal\",\"max\",\"SS_DEFAULT_FRAME_RATE\",\"audioOutputDeviceId\",\"audioOutputChanged\",\"disableAP\",\"disableAEC\",\"disableNS\",\"disableAGC\",\"disableHPF\",\"featureDetectionAudioEl\",\"isAudioOutputDeviceChangeAvailable\",\"setSinkId\",\"getConstraints\",\"um\",\"audio\",\"isNewStyleConstraintsSupported\",\"isSafariWithVP8\",\"isEdge\",\"mandatory\",\"optional\",\"cameraDeviceId\",\"deviceId\",\"sourceId\",\"facingMode\",\"CameraFacingMode\",\"USER\",\"minFps\",\"maxFps\",\"fps\",\"minFrameRate\",\"maxFrameRate\",\"resolution\",\"Resolutions\",\"width\",\"minWidth\",\"minHeight\",\"maxWidth\",\"maxHeight\",\"setResolutionConstraints\",\"micDeviceId\",\"echoCancellation\",\"googEchoCancellation\",\"googAutoGainControl\",\"googNoiseSuppression\",\"googHighpassFilter\",\"googNoiseSuppression2\",\"googEchoCancellation2\",\"googAutoGainControl2\",\"isChrome\",\"getSSConstraints\",\"mozMediaSource\",\"mediaSource\",\"frameRate\",\"errmsg\",\"bandwidth\",\"firefox_fake_device\",\"fake\",\"desktopStream\",\"_options$frameRate\",\"chromeMediaSource\",\"screen\",\"chromeMediaSourceId\",\"getTrackSSConstraints\",\"desktopSharingFrameRate\",\"updateGrantedPermissions\",\"audioTracksReceived\",\"Boolean\",\"getAudioTracks\",\"videoTracksReceived\",\"getVideoTracks\",\"grantedPermissions\",\"RTCEvents\",\"sendDeviceListToAnalytics\",\"deviceList\",\"audioInputDeviceCount\",\"kind\",\"audioOutputDeviceCount\",\"videoInputDeviceCount\",\"videoOutputDeviceCount\",\"device\",\"audio_input_device_count\",\"audio_output_device_count\",\"video_input_device_count\",\"video_output_device_count\",\"device_id\",\"device_group_id\",\"groupId\",\"device_kind\",\"device_label\",\"label\",\"defaultSetVideoSrc\",\"src\",\"srcObjectPropertyName\",\"jitsiObjectURL\",\"URL\",\"createObjectURL\",\"rtcUtils\",\"RTCUtils\",\"_classCallCheck\",\"_possibleConstructorReturn\",\"_getPrototypeOf\",\"Listenable\",\"_this\",\"clearInterval\",\"enumerateDevices\",\"navigator\",\"mediaDevices\",\"then\",\"initEnumerateDevicesWithCallback\",\"usesNewGumFlow\",\"RTCPeerConnectionType\",\"RTCPeerConnection\",\"attachMediaStream\",\"wrapAttachMediaStream\",\"srcObject\",\"getStreamID\",\"_ref\",\"getTrackID\",\"_ref2\",\"isChromiumBased\",\"_ref3\",\"_ref4\",\"MediaStream\",\"videoTracks\",\"audioTracks\",\"ortcRTCPeerConnection\",\"jitsiRemoteId\",\"track\",\"_initPCConstraints\",\"screenObtainer\",\"getUserMediaWithConstraints\",\"isDeviceListAvailable\",\"ds\",\"updateKnownDevices\",\"pds\",\"devicesReceived\",\"newDevices\",\"mediaDeviceInfoToJSON\",\"facing\",\"compareAvailableMediaDevices\",\"supportsDeviceChangeEvent\",\"addEventListener\",\"setInterval\",\"pcConstraints\",\"googHighStartBitrate\",\"googPayloadPadding\",\"googScreencastMinBitrate\",\"googCpuOveruseDetection\",\"googCpuOveruseEncodeUsage\",\"googCpuUnderuseThreshold\",\"googCpuOveruseThreshold\",\"useIPv6\",\"googIPv6\",\"p2pPcConstraints\",\"disableSuspendVideo\",\"googSuspendBelowMinBitrate\",\"Promise\",\"resolve\",\"reject\",\"getUserMedia\",\"catch\",\"umDevices\",\"_this2\",\"isSupported\",\"supportsVideo\",\"obtainStream\",\"_parseDesktopSharingOptions\",\"devices\",\"includes\",\"supportsMediaStreamConstructor\",\"_getAudioAndVideoStreams\",\"_getAudioAndVideoStreamsSeparately\",\"streams\",\"audioStream\",\"videoStream\",\"res\",\"audioVideo\",\"addTrack\",\"desktop\",\"_desktopStream\",\"sourceType\",\"MediaType\",\"videoType\",\"VideoType\",\"DESKTOP\",\"CAMERA\",\"handleLocalStream\",\"_this3\",\"requestingDesktop\",\"avStream\",\"missingTracks\",\"_getMissingTracks\",\"stopMediaStream\",\"desktopSharingSourceDevice\",\"requestedDevices\",\"missingDevices\",\"audioDeviceRequested\",\"videoDeviceRequested\",\"_this4\",\"obtainDevices\",\"context\",\"successCallback\",\"deviceGUM\",\"errorCallback\",\"_len2\",\"_key2\",\"_len3\",\"_key3\",\"desktopSharingExtensionExternalInstallation\",\"desktopSharingSources\",\"gumOptions\",\"trackOptions\",\"_this5\",\"mediaStreamsMetaData\",\"maybeRequestDesktopDevice\",\"matchingDevice\",\"_this$_parseDesktopSh\",\"exact\",\"_newGetUserMediaWithConstraints\",\"getTracks\",\"applyConstraints\",\"_newGetDesktopMedia\",\"maybeRequestCaptureDevices\",\"requestedCaptureDevices\",\"newGetConstraints\",\"_ref5\",\"deviceType\",\"mediaStream\",\"release\",\"url\",\"revokeObjectURL\",\"isDeviceChangeAvailable\",\"deviceData\",\"enable\",\"origAttachMediaStream\",\"getAudioOutputDevice\",\"ex\",\"promise\",\"CHROME_EXTENSION_GENERIC_ERROR\",\"CHROME_EXTENSION_INSTALLATION_ERROR\",\"CHROME_EXTENSION_USER_GESTURE_REQUIRED\",\"CHROME_EXTENSION_USER_CANCELED\",\"CONSTRAINT_FAILED\",\"ELECTRON_DESKTOP_PICKER_ERROR\",\"ELECTRON_DESKTOP_PICKER_NOT_FOUND\",\"FIREFOX_EXTENSION_NEEDED\",\"GENERAL\",\"NOT_FOUND\",\"PERMISSION_DENIED\",\"TRACK_IS_DISPOSED\",\"TRACK_NO_STREAM_FOUND\",\"UNSUPPORTED_RESOLUTION\",\"NO_DATA_FROM_SOURCE\",\"peerConnectionIdCounter\",\"rtcTrackIdCounter\",\"createLocalTracks\",\"tracksInfo\",\"newTracks\",\"trackInfo\",\"safeCounterIncrement\",\"localTrack\",\"JitsiLocalTrack\",\"rtcId\",\"_newCreateLocalTracks\",\"metaData\",\"_track$getSettings\",\"getSettings\",\"RTC\",\"conference\",\"peerConnections\",\"localTracks\",\"_channel\",\"_channelOpen\",\"_lastN\",\"_lastNEndpoints\",\"_maxFrameHeight\",\"_pinnedEndpoint\",\"_selectedEndpoints\",\"_lastNChangeListener\",\"_onLastNChanged\",\"_assertThisInitialized\",\"_onDeviceListChanged\",\"_updateAudioOutputForAudioTracks\",\"addListener\",\"newObtainAudioAndVideoPermissions\",\"obtainAudioAndVideoPermissions\",\"tracks\",\"some\",\"_isReceivingData\",\"JitsiTrackErrors\",\"eventType\",\"isP2P\",\"elSelector\",\"getCurrentlyAvailableMediaDevices\",\"getEventDataForActiveDevice\",\"setAudioOutputDevice\",\"isUserStreamById\",\"streamId\",\"isDesktopSharingEnabled\",\"_channelOpenListener\",\"wsUrl\",\"BridgeChannel\",\"sendPinnedEndpointMessage\",\"sendSelectedEndpointsMessage\",\"sendReceiverVideoConstraintMessage\",\"_selectedEndpoint\",\"sendSetLastNMessage\",\"leavingLastNEndpoints\",\"enteringLastNEndpoints\",\"lastNEndpoints\",\"oldLastNEndpoints\",\"isInLastN\",\"JitsiConferenceEvents\",\"maxFrameHeight\",\"ids\",\"signaling\",\"iceConfig\",\"getPCConstraints\",\"abtestSuspendVideo\",\"setSuspendVideo\",\"addPermanentProperties\",\"supportsSdpSemantics\",\"sdpSemantics\",\"newConnection\",\"TraceablePeerConnection\",\"traceablePeerConnection\",\"localVideo\",\"getLocalTracks\",\"localAudio\",\"getType\",\"remoteTracks\",\"pcRemoteTracks\",\"getRemoteTracks\",\"mutePromises\",\"audioTrack\",\"mute\",\"unmute\",\"all\",\"pos\",\"owner\",\"removedTracks\",\"pcRemovedTracks\",\"removeRemoteTracks\",\"audioLevel\",\"getTrackBySSRC\",\"isAudioTrack\",\"setAudioLevel\",\"sendMessage\",\"remoteAudioTracks\",\"setAudioOutput\",\"TRACK_ERROR_TO_MESSAGE_MAP\",\"constraint\",\"failedConstraintName\",\"getResolutionFromFailedConstraint\",\"constructor\",\"parser\",\"writer\",\"write\",\"parseFmtpConfig\",\"parseParams\",\"parsePayloads\",\"parseRemoteCandidates\",\"parseImageAttributes\",\"parseSimulcastStreamList\",\"LOCAL_TRACK_STOPPED\",\"TRACK_AUDIO_OUTPUT_CHANGED\",\"TRACK_VIDEOTYPE_CHANGED\",\"SDP\",\"mediaI\",\"failICE\",\"removeTcpCandidates\",\"removeUdpCandidates\",\"getMediaSsrcMap\",\"tmp\",\"mediaSSRCs\",\"_loop\",\"mediaindex\",\"mid\",\"linessrc\",\"idx\",\"containsSSRC\",\"medias\",\"mangle\",\"newdesc\",\"rtpmap\",\"removeSessionLines\",\"removeMediaLines\",\"toJingle\",\"thecreator\",\"assrcline\",\"creator\",\"amidline\",\"afmtpline\",\"rtcpFbToJingle\",\"crypto\",\"required\",\"ssrcMap\",\"_step$value\",\"_slicedToArray\",\"availableSsrc\",\"ssrcParameters\",\"ssrcSdpLine\",\"kv\",\"v\",\"ridLines\",\"rids\",\"ridLine\",\"ridInfo\",\"senders\",\"transportToJingle\",\"sctpmap\",\"sctpAttrs\",\"number\",\"setup\",\"payloadtype\",\"subtype\",\"rtcpFbFromJingle\",\"each\",\"$\",\"fromJingle\",\"jingle\",\"groups\",\"contents\",\"_\",\"jingle2media\",\"sctp\",\"streamCount\",\"CHROME\",\"OPERA\",\"FIREFOX\",\"INTERNET_EXPLORER\",\"EDGE\",\"SAFARI\",\"NWJS\",\"ELECTRON\",\"REACT_NATIVE\",\"UNKNOWN\",\"bowserNameToJitsiName\",\"Chrome\",\"Chromium\",\"Opera\",\"Firefox\",\"Internet Explorer\",\"Microsoft Edge\",\"Safari\",\"_detectElectron\",\"userAgent\",\"_detectNWJS\",\"_detectReactNative\",\"product\",\"_detect\",\"browserInfo\",\"detectors\",\"bowser\",\"chrome\",\"_detectChromiumBased\",\"BrowserDetection\",\"detectedBrowserInfo\",\"_name\",\"_version\",\"compareVersions\",\"compareVersion\",\"BrowserDetection_BrowserDetection\",\"browsers_namespaceObject\",\"STATUS_AVAILABLE\",\"STATUS_UNDEFINED\",\"STATUS_BUSY\",\"STATE_ON\",\"STATE_OFF\",\"STATE_PENDING\",\"STATE_RETRYING\",\"STATE_FAILED\",\"ERROR_NO_CONNECTION\",\"ERROR_SESSION_EXISTS\",\"CHAT_ERROR\",\"CONFERENCE_DESTROYED\",\"CONFERENCE_MAX_USERS\",\"CONNECTION_ERROR\",\"NOT_ALLOWED_ERROR\",\"INCOMPATIBLE_SERVER_VERSIONS\",\"PASSWORD_NOT_SUPPORTED\",\"SETUP_FAILED\",\"VIDEOBRIDGE_NOT_AVAILABLE\",\"WRONG_STATE\",\"AUDIO_LEVEL\",\"BEFORE_DISPOSED\",\"BYTE_SENT_STATS\",\"CONNECTION_STATS\",\"removeEventListener\",\"off\",\"_callStatsUserName\",\"_machineId\",\"jitsi_meet_logger__WEBPACK_IMPORTED_MODULE_0__\",\"_util_UsernameGenerator__WEBPACK_IMPORTED_MODULE_1__\",\"_util_UsernameGenerator__WEBPACK_IMPORTED_MODULE_1___default\",\"getLocalStorage\",\"storage\",\"localStorage\",\"_p8\",\"username\",\"UsernameGenerator\",\"generateUsername\",\"machineId\",\"jitsiMeetId\",\"sessionId\",\"extractCapabilities\",\"extractDtlsParameters\",\"extractIceCandidates\",\"extractIceParameters\",\"extractMids\",\"extractTrackInfos\",\"getLocalCapabilities\",\"sdp_transform__WEBPACK_IMPORTED_MODULE_0__\",\"sdp_transform__WEBPACK_IMPORTED_MODULE_0___default\",\"sdpObject\",\"codecsMap\",\"headerExtensions\",\"clockRate\",\"rate\",\"mimeType\",\"numChannels\",\"encoding\",\"parameters\",\"preferredPayloadType\",\"rtcpFeedback\",\"sdpTransform\",\"fb\",\"parameter\",\"ext\",\"preferredId\",\"headerExtension\",\"savedHeaderExtension\",\"codecs\",\"fecMechanisms\",\"role\",\"getFirstActiveMediaSection\",\"fingerprints\",\"algorithm\",\"candidates\",\"usernameFragment\",\"iceUfrag\",\"password\",\"icePwd\",\"icelite\",\"midToKind\",\"infos\",\"rtxMap\",\"rtxSet\",\"rtxSsrc\",\"ssrcObject\",\"cname\",\"trackId\",\"filterWithCapabilities\",\"localFullCapabilities\",\"RTCRtpReceiver\",\"getCapabilities\",\"localCapabilities\",\"remoteRtxMap\",\"_iteratorNormalCompletion11\",\"_didIteratorError11\",\"_iteratorError11\",\"_step11\",\"_loop2\",\"remoteCodec\",\"remoteCodecName\",\"apt\",\"localCodec\",\"_arr\",\"_i\",\"remoteParamName\",\"remoteParamValue\",\"_arr2\",\"_i2\",\"localParamName\",\"localParamValue\",\"_iteratorNormalCompletion15\",\"_didIteratorError15\",\"_iteratorError15\",\"_step15\",\"_loop3\",\"remoteFb\",\"localFb\",\"_iterator15\",\"_iterator11\",\"_iteratorNormalCompletion12\",\"_didIteratorError12\",\"_iteratorError12\",\"_step12\",\"_iterator12\",\"rtxCodec\",\"_iteratorNormalCompletion13\",\"_didIteratorError13\",\"_iteratorError13\",\"_step13\",\"_loop4\",\"remoteExtension\",\"localExtension\",\"extension\",\"preferredEncrypt\",\"_iterator13\",\"_iteratorNormalCompletion14\",\"_didIteratorError14\",\"_iteratorError14\",\"_step14\",\"_loop5\",\"remoteFecMechanism\",\"localFecMechanism\",\"fec\",\"_iterator14\",\"InvalidStateError\",\"_Error\",\"klass\",\"_inherits\",\"_wrapNativeSuper\",\"parsePrimarySSRC\",\"parseSecondarySSRC\",\"_getSSRCCount\",\"MLineWrap\",\"ssrcNumber\",\"attrName\",\"ssrcObj\",\"ssrcNum\",\"primarySSRC\",\"msid\",\"findGroup\",\"fecGroup\",\"findGroupByPrimarySSRC\",\"videoSSRCs\",\"getSSRCs\",\"ssrcGroupInfo\",\"secondarySsrc\",\"groupInfo\",\"oldSSRC\",\"newSSRC\",\"SdpTransformWrap\",\"rawSDP\",\"parsedSDP\",\"transform\",\"_createClass\",\"selectedMLine\",\"ACTIONS\",\"ACCEPT\",\"INITIATE\",\"TERMINATE\",\"UNAVAILABLE\",\"_events\",\"_maxListeners\",\"isFunction\",\"isObject\",\"isUndefined\",\"defaultMaxListeners\",\"setMaxListeners\",\"er\",\"listeners\",\"newListener\",\"warned\",\"trace\",\"once\",\"fired\",\"g\",\"list\",\"position\",\"listenerCount\",\"evlistener\",\"emitter\",\"1080\",\"order\",\"fullhd\",\"720\",\"hd\",\"960\",\"360\",\"640\",\"vga\",\"180\",\"320\",\"PENDING\",\"ACTIVE\",\"ENDED\",\"_fabrics\",\"wrtcFuncNames\",\"fabricEvent\",\"DEFAULT_REMOTE_USER\",\"reportType\",\"hasFabric\",\"fabrics\",\"backendInitialized\",\"_addNewFabric\",\"_emptyReportQueue\",\"backend\",\"atLeastOneFabric\",\"defaultInstance\",\"csInstance\",\"defaultConfID\",\"defaultPC\",\"reportsQueue\",\"report\",\"errorData\",\"_reportError\",\"pc\",\"eventData\",\"sendFabricEvent\",\"associateMstWithUserID\",\"callStatsId\",\"_error\",\"reportError\",\"theBackend\",\"tryCatchMethods\",\"methodName\",\"originalMethod\",\"theArguments\",\"debugMethods\",\"originalReportError\",\"exception\",\"configParams\",\"CallStatsBackend\",\"callstats\",\"_traceAndCatchBackendCalls\",\"userID\",\"applicationVersion\",\"getName\",\"initialize\",\"_initCallback\",\"attachWifiStatsHandler\",\"addresses\",\"_reportEvent\",\"conferenceID\",\"sendUserFeedback\",\"fabricAttributes\",\"remoteEndpointType\",\"endpointType\",\"peer\",\"server\",\"addNewFabric\",\"fabricUsage\",\"multiplex\",\"_addNewFabricCallback\",\"success\",\"streamEndpointId\",\"fabricTerminated\",\"LOCAL_STATS_UPDATED\",\"REMOTE_STATS_UPDATED\",\"EventTarget\",\"Event\",\"getConnectionPluginDefinition\",\"base\",\"_class\",\"_base\",\"_class2\",\"_getPrototypeOf2\",\"ConnectionPluginListenable\",\"ALPHANUM\",\"randomElement\",\"arr\",\"randomHexDigit\",\"randomHexString\",\"randomAlphanumStr\",\"DEFAULT_STUN_SERVERS\",\"urls\",\"JITSI_MEET_MUC_TYPE\",\"XMPP\",\"token\",\"disconnectInProgress\",\"connectionTimes\",\"authenticatedUser\",\"_initStrophePlugins\",\"bosh\",\"conn\",\"createConnection\",\"caps\",\"Caps\",\"clientNode\",\"initFeaturesList\",\"addFeature\",\"disableRtx\",\"supportsRtx\",\"enableLipSync\",\"rayo\",\"_pingSupported\",\"credentials\",\"performance\",\"statusStr\",\"getStatusString\",\"useStunTurn\",\"p2p\",\"getStunAndTurnCredentials\",\"pingJid\",\"getFeaturesAndIdentities\",\"identities\",\"PING\",\"ping\",\"startInterval\",\"identity\",\"speakerStatsComponentAddress\",\"_onPrivateMessage\",\"JitsiConnectionEvents\",\"anonymousConnectionFailed\",\"connectionFailed\",\"lastErrorMsg\",\"JitsiConnectionErrors\",\"stopInterval\",\"wasIntentionalDisconnect\",\"errMsg\",\"_getConnectionFailedReasonDetails\",\"lastErrorStatus\",\"getLastErrorStatus\",\"connectionHandler\",\"attaching\",\"_this$options$hosts\",\"hosts\",\"anonymousdomain\",\"configDomain\",\"hostname\",\"mucNickname\",\"roomjid\",\"muc\",\"cfgNickname\",\"useNicks\",\"nick\",\"emuc\",\"createRoom\",\"getLog\",\"_this$connection$rayo\",\"dial\",\"isPingSupported\",\"moderate\",\"setMute\",\"eject\",\"sessions\",\"ev\",\"evType\",\"jvb\",\"iceServers\",\"p2pStunServers\",\"stunServers\",\"iceTransportPolicy\",\"initEmuc\",\"initJingle\",\"initStropheUtil\",\"initPing\",\"initRayo\",\"initStropheLogger\",\"deploymentInfo\",\"shard\",\"headersArr\",\"trim\",\"shard_changed\",\"suspend_time\",\"getPingSuspendTime\",\"room\",\"jsonString\",\"json\",\"jsonMessage\",\"parsedJson\",\"tryParseJSONAndVerify\",\"users\",\"XMPPEvents\",\"CONNECTION_DROPPED_ERROR\",\"OTHER_ERROR\",\"SERVER_ERROR\",\"PEER_MUTED_CHANGED\",\"PEER_VIDEO_TYPE_CHANGED\",\"chromeExtInstalled\",\"chromeExtUpdateRequired\",\"gumFunction\",\"ScreenObtainer\",\"intChromeExtPromise\",\"desktopSharingChromeDisabled\",\"desktopSharingChromeExtId\",\"desktopSharingFirefoxDisabled\",\"_createObtainStreamMethod\",\"isNWJS\",\"JitsiMeetNW\",\"obtainDesktopStream\",\"jitsiError\",\"isElectron\",\"obtainScreenOnElectron\",\"isOpera\",\"supportsGetDisplayMedia\",\"obtainScreenFromGetDisplayMedia\",\"append\",\"getWebStoreInstallUrl\",\"initInlineInstalls\",\"checkChromeExtInstalled\",\"installed\",\"updateRequired\",\"initChromeExtension\",\"obtainScreenFromExtension\",\"obtainScreenOnFirefox\",\"streamCallback\",\"failCallback\",\"obtainWebRTCScreen\",\"JitsiMeetScreenObtainer\",\"openDesktopPicker\",\"desktopSharingChromeSources\",\"streamType\",\"onGetStreamResponse\",\"_this$options\",\"doGetStreamFromExtensionOptions\",\"runtime\",\"getStream\",\"sources\",\"lastError\",\"doGetStreamFromExtension\",\"alert\",\"handleExternalInstall\",\"webStoreInstallUrl\",\"checkForChromeExtensionOnInterval\",\"checkAgain\",\"waitInterval\",\"retries\",\"currentRetries\",\"interval\",\"waitForExtensionAfterInstall\",\"getDisplayMedia\",\"getVersion\",\"extVersion\",\"minVersion\",\"s1\",\"s2\",\"n1\",\"n2\",\"isUpdateRequired\",\"desktopSharingChromeMinExtVersion\",\"logDisabled_\",\"deprecationWarnings_\",\"disableLog\",\"bool\",\"disableWarnings\",\"deprecated\",\"oldMethod\",\"newMethod\",\"extractVersion\",\"uastring\",\"expr\",\"detectBrowser\",\"mozGetUserMedia\",\"webkitGetUserMedia\",\"webkitRTCPeerConnection\",\"shimCreateObjectURL\",\"ENVIRONMENT\",\"DEFAULT_NOT_IN_LAST_N_TIMEOUT\",\"DEFAULT_RTC_MUTE_TIMEOUT\",\"ParticipantConnectionStatus\",\"INACTIVE\",\"INTERRUPTED\",\"RESTORING\",\"ParticipantConnectionStatusHandler\",\"rtc\",\"trackTimers\",\"connStatusFromJvb\",\"outOfLastNTimeout\",\"rtcMuteTimeout\",\"rtcMutedTimestamp\",\"enteredLastNTimestamp\",\"restoringTimers\",\"isConnectionActiveByJvb\",\"isRestoringTimedout\",\"isVideoMuted\",\"isVideoTrackFrozen\",\"supportsVideoMuteOnConnInterrupted\",\"_onEndpointConnStatusChanged\",\"onEndpointConnStatusChanged\",\"_onP2PStatus\",\"refreshConnectionStatusForAll\",\"_onTrackRtcMuted\",\"onTrackRtcMuted\",\"_onTrackRtcUnmuted\",\"onTrackRtcUnmuted\",\"_onRemoteTrackAdded\",\"onRemoteTrackAdded\",\"_onRemoteTrackRemoved\",\"onRemoteTrackRemoved\",\"_onSignallingMuteChanged\",\"onSignallingMuteChanged\",\"_onLastNValueChanged\",\"participantIds\",\"clearRtcMutedTimestamp\",\"endpointId\",\"isActive\",\"myUserId\",\"figureOutConnectionStatus\",\"participant\",\"newStatus\",\"getConnectionStatus\",\"getId\",\"_setConnectionStatus\",\"remoteTrack\",\"getParticipantId\",\"JitsiTrackEvents\",\"hasAnyVideoRTCMuted\",\"hasAnyVideoTrackWebRTCMuted\",\"_getVideoFrozenTimeout\",\"participants\",\"getParticipants\",\"getParticipantById\",\"inP2PMode\",\"isP2PActive\",\"isRestoringTimedOut\",\"_isRestoringTimedout\",\"audioOnlyMode\",\"getLastN\",\"isConnActiveByJvb\",\"newState\",\"_getNewStateForP2PMode\",\"_getNewStateForJvbMode\",\"_clearRestoringTimer\",\"_changeConnectionStatus\",\"leavingLastN\",\"enteringLastN\",\"rTimer\",\"isMuted\",\"getFocusRecordingUpdate\",\"presence\",\"jibriStatus\",\"recordingMode\",\"sessionID\",\"getHiddenDomainUpdate\",\"liveStreamViewURLContainer\",\"liveStreamViewURL\",\"modeContainer\",\"sessionIDContainer\",\"getSessionIdFromIq\",\"jibri\",\"getSessionId\",\"sessionIdContainer\",\"isFromFocus\",\"JingleSessionPC\",\"localJid\",\"remoteJid\",\"mediaConstraints\",\"isInitiator\",\"_bridgeSessionId\",\"_iceCheckingStartedTimestamp\",\"_gatheringStartedTimestamp\",\"_localVideoActive\",\"_remoteVideoActive\",\"_gatheringReported\",\"lasticecandidate\",\"closed\",\"signalingLayer\",\"SignalingLayerImpl\",\"modificationQueue\",\"queue\",\"_processQueueTasks\",\"wasConnected\",\"establishmentDuration\",\"JingleSession\",\"jingleContents\",\"videoContents\",\"actionName\",\"state\",\"JingleSessionState\",\"isReconnect\",\"wasstable\",\"webrtcIceUdpDisable\",\"webrtcIceTcpDisable\",\"pcOptions\",\"gatherStats\",\"maxstats\",\"disableSimulcast\",\"disableH264\",\"preferH264\",\"_abtestSuspendVideoEnabled\",\"enableFirefoxSimulcast\",\"testing\",\"enableLayerSuspension\",\"createPeerConnection\",\"onicecandidate\",\"phase\",\"initiator\",\"sendIceCandidate\",\"onsignalingstatechange\",\"signalingState\",\"connectionState\",\"oniceconnectionstatechange\",\"_assertNotEnded\",\"iceConnectionState\",\"signaling_state\",\"reconnect\",\"iceStarted\",\"onnegotiationneeded\",\"setChatRoom\",\"isSelected\",\"setIsSelected\",\"finishedCallback\",\"_renegotiate\",\"localSDP\",\"localDescription\",\"ice\",\"sdpMLineIndex\",\"jcand\",\"usedrip\",\"dripContainer\",\"sendIceCandidates\",\"initiatorJid\",\"cands\",\"sdpMid\",\"fingerprintLine\",\"newJingleErrorHandler\",\"sessionInfo\",\"iceCandidates\",\"rtcCandidate\",\"RTCIceCandidate\",\"iceCandidate\",\"addIceCandidate\",\"outerHTML\",\"_this6\",\"ssrcElement\",\"setSSRCOwner\",\"i3\",\"ssrcInfoElement\",\"generateRecvonlySsrc\",\"jingleOffer\",\"failure\",\"_this7\",\"setOfferAnswerCycle\",\"sendSessionAccept\",\"_this8\",\"createOffer\",\"offerSdp\",\"setLocalDescription\",\"sendSessionInitiate\",\"jingleAnswer\",\"jingleOfferAnswerIq\",\"_this9\",\"newRemoteSdp\",\"_processNewJingleOfferIq\",\"oldLocalSdp\",\"bridgeSessionId\",\"sendContentModify\",\"newLocalSdp\",\"notifyMySSRCUpdate\",\"_onJingleFatalError\",\"jingleOfferElem\",\"_this10\",\"originalOffer\",\"clone\",\"remove\",\"sendTransportAccept\",\"_this11\",\"accept\",\"responder\",\"responderJid\",\"videoTransferActive\",\"newSendersValue\",\"sessionModify\",\"_this12\",\"transportAccept\",\"medialines\",\"transportReject\",\"sendSessionTerminate\",\"sessionTerminate\",\"reasonDescription\",\"terminate\",\"reasonCondition\",\"reasonText\",\"sourceAddElem\",\"currentRemoteSdp\",\"addSsrcInfo\",\"i1\",\"i2\",\"_addOrRemoveRemoteStream\",\"isAdd\",\"_this13\",\"logPrefix\",\"readSsrcInfo\",\"remoteDescription\",\"addOrRemoveSsrcInfo\",\"_parseSsrcInfoFromSourceAdd\",\"_parseSsrcInfoFromSourceRemove\",\"_processRemoteAddSource\",\"_processRemoteRemoveSource\",\"task\",\"offerIq\",\"remoteSdp\",\"removeSsrcInfo\",\"optionalRemoteSdp\",\"RTCSessionDescription\",\"_initiatorRenegotiate\",\"_responderRenegotiate\",\"_this14\",\"setRemoteDescription\",\"createAnswer\",\"answer\",\"_this15\",\"offer\",\"oldTrack\",\"newTrack\",\"_this16\",\"workFunction\",\"isVideoTrack\",\"clearRecvonlySsrc\",\"replaceTrack\",\"shouldRenegotiate\",\"newLocalSDP\",\"sourceRemoveElem\",\"ssrcLines\",\"operationName\",\"oldSDP\",\"currentLocalSDP\",\"sdpDiff\",\"SDPDiffer\",\"addedMedia\",\"getNewMedia\",\"removedMedia\",\"_addRemoveTrackAsMuteUnmute\",\"isMute\",\"_this17\",\"oldLocalSDP\",\"removeTrackMute\",\"addTrackUnmute\",\"_verifyNoSSRCChanged\",\"audioActive\",\"videoActive\",\"_this18\",\"logAudioStr\",\"logVideoStr\",\"isSessionActive\",\"audioActiveChanged\",\"setAudioTransferActive\",\"pcVideoActiveChanged\",\"setVideoTransferActive\",\"_this19\",\"newVideoSenders\",\"parseVideoSenders\",\"_modifyRemoteVideoActive\",\"remoteVideoSenders\",\"isRemoteVideoActive\",\"newSDP\",\"sdpDiffer\",\"request\",\"failureCb\",\"_this20\",\"errResponse\",\"errorElSel\",\"errorReasonSel\",\"errorMsgSel\",\"abTesting\",\"enableSuspendVideoTest\",\"_getInitiatorJid\",\"integerHash\",\"PERMISSION_PROMPT_IS_SHOWN\",\"definition\",\"detect\",\"ua\",\"getFirstMatch\",\"regex\",\"getSecondMatch\",\"iosdevice\",\"android\",\"nexusMobile\",\"nexusTablet\",\"chromeos\",\"silk\",\"sailfish\",\"tizen\",\"webos\",\"windowsphone\",\"windows\",\"mac\",\"linux\",\"edgeVersion\",\"versionIdentifier\",\"tablet\",\"mobile\",\"xbox\",\"opera\",\"samsungBrowser\",\"coast\",\"yandexbrowser\",\"ucbrowser\",\"maxthon\",\"epiphany\",\"puffin\",\"sleipnir\",\"kMeleon\",\"osname\",\"msedge\",\"msie\",\"chromeBook\",\"vivaldi\",\"seamonkey\",\"firefox\",\"firefoxos\",\"phantom\",\"slimer\",\"blackberry\",\"touchpad\",\"bada\",\"qupzilla\",\"chromium\",\"safari\",\"googlebot\",\"blink\",\"webkit\",\"gecko\",\"ios\",\"osVersion\",\"getWindowsVersion\",\"osversion\",\"osMajorVersion\",\"getVersionPrecision\",\"versions\",\"precision\",\"chunks\",\"delta\",\"chunk\",\"reverse\",\"isUnsupportedBrowser\",\"minVersions\",\"strictMode\",\"_bowser\",\"browserList\",\"browserItem\",\"check\",\"_SDPUtil__WEBPACK_IMPORTED_MODULE_0__\",\"arrayEquals\",\"array1\",\"array2\",\"equals\",\"mySDP\",\"otherSDP\",\"myMedias\",\"othersMedias\",\"newMedia\",\"othersMediaIdx\",\"myMedia\",\"othersMedia\",\"otherSsrcGroup\",\"mySsrcGroup\",\"modify\",\"sdpMediaSsrcs\",\"modified\",\"mediaSsrc\",\"nv\",\"cachedSetTimeout\",\"cachedClearTimeout\",\"process\",\"defaultSetTimout\",\"defaultClearTimeout\",\"runTimeout\",\"fun\",\"currentQueue\",\"draining\",\"queueIndex\",\"cleanUpNextTick\",\"drainQueue\",\"marker\",\"runClearTimeout\",\"Item\",\"noop\",\"nextTick\",\"title\",\"env\",\"argv\",\"prependListener\",\"prependOnceListener\",\"binding\",\"cwd\",\"chdir\",\"dir\",\"umask\",\"E2E_RTT_CHANGED\",\"LocalStatsCollector\",\"AudioContext\",\"webkitAudioContext\",\"intervalId\",\"intervalMilis\",\"suspend\",\"isLocalStatsSupported\",\"analyser\",\"createAnalyser\",\"smoothingTimeConstant\",\"fftSize\",\"createMediaStreamSource\",\"Uint8Array\",\"frequencyBinCount\",\"getByteTimeDomainData\",\"newLevel\",\"lastLevel\",\"diff\",\"samples\",\"maxVolume\",\"parseFloat\",\"toFixed\",\"timeDomainDataToAudioLevel\",\"currentExecutingScript\",\"prepend\",\"relativeURL\",\"loadCallback\",\"script\",\"referenceNode\",\"scriptEl\",\"scriptSrc\",\"baseScriptSrc\",\"lastIndexOf\",\"onload\",\"insertBefore\",\"ON\",\"OFF\",\"trackHandler2Prop\",\"track_mute\",\"track_unmute\",\"track_ended\",\"addMediaStreamInactiveHandler\",\"oninactive\",\"JitsiTrack\",\"streamInactiveHandler\",\"trackMediaType\",\"containers\",\"disposed\",\"_streamInactiveHandler\",\"_setStream\",\"_setHandler\",\"container\",\"_onTrackAttach\",\"_maybeFireTrackAttached\",\"_attachTTFMTracker\",\"active\",\"getStreamId\",\"getTrackId\",\"_sdp\",\"_sdpObject\",\"_type\",\"nextValue\",\"MAX_SAFE_INTEGER\",\"SpeakerStats\",\"displayName\",\"isLocalStats\",\"_userId\",\"setDisplayName\",\"_isLocalStats\",\"setDominantSpeaker\",\"totalDominantSpeakerTime\",\"_dominantSpeakerStart\",\"_hasLeft\",\"newName\",\"isNowDominantSpeaker\",\"isDominantSpeaker\",\"timeElapsed\",\"total\",\"IDENTITY_UPDATED\",\"_constraints\",\"_prevSetMuted\",\"_facingMode\",\"_trackEnded\",\"_hasSentData\",\"_testDataSent\",\"_realDeviceId\",\"_noDataFromSourceTimeout\",\"_setRealDeviceIdFromDeviceList\",\"getTrack\",\"_onAudioOutputDeviceChanged\",\"_initNoDataFromSourceHandlers\",\"_onNoDataFromSourceError\",\"_checkForCameraIssues\",\"_clearNoDataFromSourceMuteResources\",\"track_type\",\"_fireNoDataFromSourceEvent\",\"isReceivingData\",\"_get\",\"storedMSID\",\"getMSID\",\"_queueSetMuted\",\"setMuted\",\"_setMuted\",\"logMuteInfo\",\"doesVideoMuteByStreamRemove\",\"enabled\",\"_removeStreamFromConferenceAsMute\",\"_unregisterHandlers\",\"_stopStream\",\"streamOptions\",\"getDeviceId\",\"getCameraFacingMode\",\"assign\",\"streamsInfo\",\"streamInfo\",\"cont\",\"_addStreamToConferenceAsUnmute\",\"_sendMuteStatus\",\"_addLocalTrackAsUnmute\",\"_removeLocalTrackAsMute\",\"removeTrack\",\"detach\",\"bytesSent\",\"getConnectionState\",\"_bytesSent\",\"trackSettings\",\"_stopStreamInProgress\",\"_switchCamera\",\"JibriSession\",\"_mode\",\"_setSessionID\",\"setStatus\",\"_sessionID\",\"_liveStreamViewURL\",\"_status\",\"appData\",\"broadcastId\",\"focusMucJid\",\"_createIQ\",\"recordingXMLUtils\",\"_setErrorFromIq\",\"app_data\",\"recording_mode\",\"streamid\",\"you_tube_broadcast_id\",\"errorIq\",\"setError\",\"children\",\"VIDEO_PERMISSION_NAME\",\"JitsiMediaDevices\",\"_eventEmitter\",\"_grantedPermissions\",\"JitsiMediaDevicesEvents\",\"_logOutputDevice\",\"_handleGrantedPermissions\",\"_permissionsApiSupported\",\"permissions\",\"query\",\"deviceID\",\"supported\",\"promises\",\"results\",\"every\",\"permissionStatus\",\"_this$_eventEmitter\",\"consoleTransport\",\"globalTransports\",\"callerInfo\",\"fileLocation\",\"column\",\"getCallerInfo\",\"methods\",\"transportIdx\",\"LOG\",\"webpackPolyfill\",\"deprecate\",\"paths\",\"grammar\",\"reg\",\"names\",\"u\",\"z\",\"address\",\"sessionConfig\",\"raddr\",\"maxMessageSize\",\"RegExp\",\"dir2\",\"SDPUtils\",\"localCName\",\"generateIdentifier\",\"splitLines\",\"blob\",\"splitSections\",\"getDescription\",\"sections\",\"getMediaSections\",\"matchPrefix\",\"parseCandidate\",\"relatedAddress\",\"relatedPort\",\"tcpType\",\"writeCandidate\",\"toUpperCase\",\"parseIceOptions\",\"parseRtpMap\",\"parsed\",\"writeRtpMap\",\"writeExtmap\",\"writeFmtp\",\"param\",\"parseRtcpFb\",\"writeRtcpFb\",\"parseSsrcMedia\",\"sp\",\"colon\",\"parseSsrcGroup\",\"getMid\",\"mediaSection\",\"getDtlsParameters\",\"writeDtlsParameters\",\"setupType\",\"fp\",\"getIceParameters\",\"writeIceParameters\",\"parseRtpParameters\",\"description\",\"rtcp\",\"rtpmapline\",\"fmtps\",\"writeRtpDescription\",\"maxptime\",\"parseRtpEncodingParameters\",\"encodingParameters\",\"hasRed\",\"hasUlpfec\",\"flows\",\"encParam\",\"codecPayloadType\",\"rtx\",\"maxBitrate\",\"parseRtcpParameters\",\"rtcpParameters\",\"remoteSsrc\",\"rsize\",\"reducedSize\",\"compound\",\"mux\",\"parseMsid\",\"spec\",\"planB\",\"msidParts\",\"generateSessionId\",\"writeSessionBoilerplate\",\"sessId\",\"sessVer\",\"sessUser\",\"writeMediaSection\",\"transceiver\",\"iceGatherer\",\"getLocalParameters\",\"dtlsTransport\",\"rtpSender\",\"rtpReceiver\",\"sendEncodingParameters\",\"getDirection\",\"getKind\",\"isRejected\",\"parseOLine\",\"sessionVersion\",\"netType\",\"addressType\",\"isValidSDP\",\"RecordingResult\",\"AUDIO_WEBM\",\"AUDIO_OGG\",\"TrackRecorder\",\"recorder\",\"startTime\",\"startRecorder\",\"trackRecorder\",\"stopRecorder\",\"determineCorrectFileType\",\"MediaRecorder\",\"isTypeSupported\",\"AudioRecorder\",\"jitsiConference\",\"recorders\",\"fileType\",\"isRecording\",\"instantiateTrackRecorder\",\"updateNames\",\"originalStream\",\"getOriginalStream\",\"createEmptyStream\",\"ondataavailable\",\"dataEvent\",\"recorderToRemove\",\"getDisplayName\",\"download\",\"Blob\",\"href\",\"click\",\"getRecordingResults\",\"getFileType\",\"getTokenAuthUrl\",\"urlPattern\",\"roleUpgrade\",\"JitsiConnection\",\"_service_statistics_AnalyticsEvents__WEBPACK_IMPORTED_MODULE_0__\",\"_JitsiConference__WEBPACK_IMPORTED_MODULE_1__\",\"_JitsiConnectionEvents__WEBPACK_IMPORTED_MODULE_2__\",\"_modules_statistics_statistics__WEBPACK_IMPORTED_MODULE_3__\",\"_modules_xmpp_xmpp__WEBPACK_IMPORTED_MODULE_4__\",\"appID\",\"errType\",\"ANALYTICS_CONNECTION_DISCONNECTED\",\"_this$xmpp\",\"setToken\",\"initJitsiConference\",\"JitsiConference\",\"getConnectionTimes\",\"feature\",\"submit\",\"removeFeature\",\"eventManager\",\"JitsiConferenceEventManager\",\"_init\",\"componentsVersions\",\"ComponentsVersions\",\"jvbJingleSession\",\"lastDominantSpeaker\",\"dtmfManager\",\"somebodySupportsDTMF\",\"authEnabled\",\"startAudioMuted\",\"startVideoMuted\",\"startMutedPolicy\",\"isMutedByFocus\",\"wasStopped\",\"connectionQuality\",\"ConnectionQuality\",\"avgRtpStatsReporter\",\"AvgRTPStatsReporter\",\"avgRtpStatsN\",\"isJvbConnectionInterrupted\",\"speakerStatsCollector\",\"SpeakerStatsCollector\",\"deferredStartP2PTask\",\"delay\",\"backToP2PDelay\",\"isP2PConnectionInterrupted\",\"p2pJingleSession\",\"videoSIPGWHandler\",\"VideoSIPGW\",\"recordingManager\",\"RecordingManager\",\"setupXMPPListeners\",\"_onIceConnectionInterrupted\",\"_onIceConnectionRestored\",\"_onIceConnectionEstablished\",\"_updateProperties\",\"rttMonitor\",\"RttMonitor\",\"e2eping\",\"E2ePing\",\"setupRTCListeners\",\"participantConnectionStatus\",\"_peerConnStatusRtcMuteTimeout\",\"_peerConnStatusOutOfLastNTimeout\",\"windowLocation\",\"enableDisplayNameInStats\",\"callStatsCustomScriptUrl\",\"enableStatsID\",\"setupChatRoomListeners\",\"setupStatisticsListeners\",\"enableTalkWhileMuted\",\"TalkMutedDetection\",\"setLastN\",\"channelLastN\",\"jvb121Status\",\"Jvb121EventGenerator\",\"p2pDominantSpeakerDetection\",\"P2PDominantSpeakerDetection\",\"userRegion\",\"setLocalParticipantProperty\",\"_maybeSetSITimeout\",\"authenticateAndUpgradeRole\",\"isJoined\",\"joined\",\"isP2PEnabled\",\"isP2PTestModeEnabled\",\"p2pTestMode\",\"leave\",\"onLocalTrackRemoved\",\"closeBridgeChannel\",\"_delayedIceFailed\",\"cancel\",\"removeXMPPListeners\",\"onMemberLeft\",\"getJid\",\"getConnection\",\"isAuthEnabled\",\"isLoggedIn\",\"authIdentity\",\"getAuthLogin\",\"isExternalAuthEnabled\",\"moderator\",\"getExternalAuthUrl\",\"urlForPopup\",\"getPopupLoginUrl\",\"getLoginUrl\",\"getLocalAudioTrack\",\"getLocalVideoTrack\",\"eventId\",\"addCommandListener\",\"command\",\"addPresenceListener\",\"removeCommandListener\",\"removePresenceListener\",\"sendTextMessage\",\"elementName\",\"sendPrivateTextMessage\",\"sendPrivateMessage\",\"sendCommand\",\"addToPresence\",\"sendCommandOnce\",\"removeCommand\",\"removeFromPresence\",\"setSubject\",\"subject\",\"isModerator\",\"getTranscriber\",\"transcriber\",\"Transcriber\",\"localAudioTracks\",\"getTranscriptionStatus\",\"transcriptionStatus\",\"localVideoTrack\",\"_fireAudioLevelChangeEvent\",\"activeTpc\",\"getActivePeerConnection\",\"_fireMuteChangeEvent\",\"muteParticipant\",\"myroomjid\",\"_setConference\",\"removeLocalTrack\",\"muteHandler\",\"audioLevelHandler\",\"_doReplaceTrack\",\"_setupNewTrack\",\"replaceTrackPromises\",\"addLocalTrack\",\"setAudioMute\",\"setVideoMute\",\"addAsUnmutePromises\",\"addTrackAsUnmute\",\"removeAsMutePromises\",\"removeTrackAsMute\",\"getRole\",\"lock\",\"lockRoom\",\"JitsiConferenceErrors\",\"unlock\",\"selectParticipant\",\"selectParticipants\",\"selectEndpoints\",\"pinParticipant\",\"pinEndpoint\",\"lastN\",\"isInteger\",\"RangeError\",\"isVideoActive\",\"setMediaTransferActive\",\"getParticipantCount\",\"countHidden\",\"isHidden\",\"kickParticipant\",\"kick\",\"_maybeClearSITimeout\",\"_sessionInitiateTimeout\",\"onMemberJoined\",\"statsID\",\"botType\",\"JitsiParticipant\",\"_role\",\"_botType\",\"getFeatures\",\"_supportsDTMF\",\"updateDTMFSupport\",\"_maybeStartOrStopP2P\",\"_onMemberBotTypeChanged\",\"botParticipant\",\"onLocalRoleChanged\",\"onUserRoleChanged\",\"onDisplayNameChanged\",\"_displayName\",\"_tracks\",\"onCallAccepted\",\"setAnswer\",\"onTransportInfo\",\"transportInfo\",\"addIceCandidates\",\"removedTrack\",\"_onIncomingCallP2P\",\"jingleSession\",\"rejectReason\",\"getMemberRole\",\"errorMsg\",\"supportsP2P\",\"_rejectIncomingCall\",\"_acceptP2PIncomingCall\",\"onIncomingCall\",\"isFocus\",\"_acceptJvbIncomingCall\",\"serverRegion\",\"_setBridgeChannel\",\"acceptOffer\",\"_suspendMediaTransferForJvbConnection\",\"bridgeChannelType\",\"webSocket\",\"first\",\"openBridgeChannel\",\"supportsDataChannels\",\"initializeBridgeChannel\",\"onCallEnded\",\"forceJvb121\",\"p2pFailed\",\"_stopP2PSession\",\"onSuspendDetected\",\"supportsDTMF\",\"isDTMFSupported\",\"sendTones\",\"tones\",\"duration\",\"peerConnection\",\"JitsiDTMFManager\",\"startRecording\",\"stopRecording\",\"isSIPCallingSupported\",\"hangup\",\"startTranscriber\",\"stopTranscriber\",\"getPhoneNumber\",\"getPhonePin\",\"setStartMutedPolicy\",\"policy\",\"getStartMutedPolicy\",\"isStartAudioMuted\",\"isStartVideoMuted\",\"getLogs\",\"getJingleLog\",\"metadata\",\"time\",\"getXmppLog\",\"removeLocalParticipantProperty\",\"getLocalParticipantProperty\",\"presMap\",\"nodes\",\"overallFeedback\",\"detailedFeedback\",\"remoteUserId\",\"getLocalSSRC\",\"getSSRC\",\"getUsageLabel\",\"_isFocus\",\"mucJid\",\"_fireIncompatibleVersionsEvent\",\"sendEndpointMessage\",\"sendChannelMessage\",\"broadcastEndpointMessage\",\"sendThroughVideobridge\",\"messageType\",\"messageToSend\",\"isConnectionInterrupted\",\"_onIceConnectionFailed\",\"IceFailedNotification\",\"sendIceFailedNotification\",\"remoteID\",\"getStatsID\",\"_addRemoteJVBTracks\",\"_addRemoteTracks\",\"_addRemoteP2PTracks\",\"logName\",\"p2pEstablishmentDuration\",\"jvbEstablishmentDuration\",\"forceJVB121Ratio\",\"establishmentDurationDiff\",\"_setP2PStatus\",\"_removeRemoteJVBTracks\",\"changed\",\"isEqual\",\"_defineProperty\",\"getProperty\",\"_maybeClearDeferredStartP2P\",\"_removeRemoteTracks\",\"_removeRemoteP2PTracks\",\"sessionNickname\",\"_resumeMediaTransferForJvbConnection\",\"_startP2PSession\",\"newP2PJingleSession\",\"invite\",\"userLeftEvent\",\"peers\",\"peerCount\",\"hasBotPeer\",\"shouldBeInP2P\",\"myId\",\"peersId\",\"wasP2PEstablished\",\"getP2PConnectionState\",\"startP2PSession\",\"peerJid\",\"stopP2PSession\",\"getSpeakerStats\",\"getStats\",\"setReceiverVideoConstraint\",\"createVideoSIPGWSession\",\"sipAddress\",\"VideoSIPGWConstants\",\"LARGE_ARRAY_SIZE\",\"HASH_UNDEFINED\",\"COMPARE_PARTIAL_FLAG\",\"COMPARE_UNORDERED_FLAG\",\"argsTag\",\"arrayTag\",\"asyncTag\",\"boolTag\",\"dateTag\",\"errorTag\",\"funcTag\",\"genTag\",\"mapTag\",\"numberTag\",\"nullTag\",\"objectTag\",\"proxyTag\",\"regexpTag\",\"setTag\",\"stringTag\",\"symbolTag\",\"undefinedTag\",\"arrayBufferTag\",\"dataViewTag\",\"reIsHostCtor\",\"reIsUint\",\"typedArrayTags\",\"freeGlobal\",\"global\",\"freeSelf\",\"freeExports\",\"freeModule\",\"moduleExports\",\"freeProcess\",\"nodeUtil\",\"nodeIsTypedArray\",\"isTypedArray\",\"arraySome\",\"predicate\",\"mapToArray\",\"setToArray\",\"uid\",\"arrayProto\",\"funcProto\",\"objectProto\",\"coreJsData\",\"funcToString\",\"maskSrcKey\",\"exec\",\"IE_PROTO\",\"nativeObjectToString\",\"reIsNative\",\"Buffer\",\"propertyIsEnumerable\",\"symToStringTag\",\"nativeGetSymbols\",\"getOwnPropertySymbols\",\"nativeIsBuffer\",\"isBuffer\",\"nativeKeys\",\"DataView\",\"getNative\",\"WeakMap\",\"nativeCreate\",\"dataViewCtorString\",\"toSource\",\"mapCtorString\",\"promiseCtorString\",\"setCtorString\",\"weakMapCtorString\",\"symbolProto\",\"symbolValueOf\",\"valueOf\",\"Hash\",\"entries\",\"clear\",\"entry\",\"ListCache\",\"MapCache\",\"SetCache\",\"__data__\",\"Stack\",\"arrayLikeKeys\",\"inherited\",\"isArr\",\"isArg\",\"isArguments\",\"isBuff\",\"isType\",\"skipIndexes\",\"iteratee\",\"baseTimes\",\"isIndex\",\"assocIndexOf\",\"eq\",\"baseGetTag\",\"isOwn\",\"unmasked\",\"getRawTag\",\"objectToString\",\"baseIsArguments\",\"isObjectLike\",\"baseIsEqual\",\"other\",\"bitmask\",\"customizer\",\"equalFunc\",\"objIsArr\",\"othIsArr\",\"objTag\",\"getTag\",\"othTag\",\"objIsObj\",\"othIsObj\",\"isSameTag\",\"equalArrays\",\"byteLength\",\"byteOffset\",\"buffer\",\"convert\",\"isPartial\",\"stacked\",\"equalByTag\",\"objIsWrapped\",\"othIsWrapped\",\"objUnwrapped\",\"othUnwrapped\",\"objProps\",\"getAllKeys\",\"objLength\",\"othLength\",\"skipCtor\",\"objValue\",\"othValue\",\"compared\",\"objCtor\",\"othCtor\",\"equalObjects\",\"baseIsEqualDeep\",\"baseIsNative\",\"baseKeys\",\"Ctor\",\"arrLength\",\"seen\",\"arrValue\",\"othIndex\",\"keysFunc\",\"symbolsFunc\",\"offset\",\"arrayPush\",\"baseGetAllKeys\",\"getSymbols\",\"getMapData\",\"getValue\",\"pairs\",\"resIndex\",\"arrayFilter\",\"symbol\",\"ArrayBuffer\",\"ctorString\",\"isLength\",\"baseUnary\",\"strophe_js__WEBPACK_IMPORTED_MODULE_0__\",\"_service_statistics_AnalyticsEvents__WEBPACK_IMPORTED_MODULE_1__\",\"_service_authentication_AuthenticationEvents__WEBPACK_IMPORTED_MODULE_2__\",\"_service_authentication_AuthenticationEvents__WEBPACK_IMPORTED_MODULE_2___default\",\"_modules_util_EventEmitterForwarder__WEBPACK_IMPORTED_MODULE_3__\",\"_modules_util_EventEmitterForwarder__WEBPACK_IMPORTED_MODULE_3___default\",\"jitsi_meet_logger__WEBPACK_IMPORTED_MODULE_4__\",\"_JitsiConferenceErrors__WEBPACK_IMPORTED_MODULE_5__\",\"_JitsiConferenceEvents__WEBPACK_IMPORTED_MODULE_6__\",\"_service_RTC_MediaType__WEBPACK_IMPORTED_MODULE_7__\",\"_service_RTC_RTCEvents__WEBPACK_IMPORTED_MODULE_8__\",\"_service_RTC_RTCEvents__WEBPACK_IMPORTED_MODULE_8___default\",\"_service_RTC_VideoType__WEBPACK_IMPORTED_MODULE_9__\",\"_service_RTC_VideoType__WEBPACK_IMPORTED_MODULE_9___default\",\"_modules_statistics_statistics__WEBPACK_IMPORTED_MODULE_10__\",\"_service_xmpp_XMPPEvents__WEBPACK_IMPORTED_MODULE_11__\",\"_service_xmpp_XMPPEvents__WEBPACK_IMPORTED_MODULE_11___default\",\"xmppListeners\",\"chatRoom\",\"chatRoomForwarder\",\"EventEmitterForwarder\",\"forward\",\"setParticipantPropertyListener\",\"setProperty\",\"recorderSession\",\"logObject\",\"getError\",\"getStatus\",\"AuthenticationEvents\",\"txt\",\"myJid\",\"ts\",\"updated\",\"featuresChangedListener\",\"_addConferenceXMPPListener\",\"audioMuted\",\"videoMuted\",\"ignoreStartMuted\",\"_onByteSentStatsReceived\",\"dest\",\"srcEvent\",\"AnalyticsAdapter\",\"analyticsHandlers\",\"cache\",\"permanentProperties\",\"conferenceName\",\"callstats_name\",\"user_agent\",\"browser_name\",\"setAnalyticsHandlers\",\"_setUserProperties\",\"_sendEvent\",\"setUserProperties\",\"conference_name\",\"_verifyRequiredFields\",\"objectType\",\"containerType\",\"objectId\",\"_maybeCacheEvent\",\"isSafariWithWebrtc\",\"isSafari\",\"isVersionLessThan\",\"ondevicechange\",\"usesUnifiedPlan\",\"usesPlanB\",\"RTCRtpTransceiver\",\"_getChromiumBasedVersion\",\"WINDOW\",\"JS_MD5_NO_WINDOW\",\"WEB_WORKER\",\"NODE_JS\",\"JS_MD5_NO_NODE_JS\",\"COMMON_JS\",\"JS_MD5_NO_COMMON_JS\",\"AMD\",\"ARRAY_BUFFER\",\"JS_MD5_NO_ARRAY_BUFFER\",\"HEX_CHARS\",\"EXTRA\",\"SHIFT\",\"OUTPUT_TYPES\",\"BASE64_ENCODE_CHAR\",\"blocks\",\"buffer8\",\"Uint32Array\",\"JS_MD5_NO_ARRAY_BUFFER_IS_VIEW\",\"isView\",\"createOutputMethod\",\"outputType\",\"Md5\",\"update\",\"createMethod\",\"method\",\"nodeWrap\",\"eval\",\"nodeMethod\",\"createHash\",\"digest\",\"sharedMemory\",\"h0\",\"h1\",\"h2\",\"h3\",\"bytes\",\"hBytes\",\"finalized\",\"hashed\",\"notString\",\"lastByteIndex\",\"finalize\",\"bc\",\"da\",\"hex\",\"arrayBuffer\",\"base64\",\"v1\",\"v2\",\"v3\",\"base64Str\",\"md5\",\"KEYS_BY_BROWSER_TYPE\",\"calculatePacketLoss\",\"lostPackets\",\"totalPackets\",\"round\",\"SsrcStats\",\"loss\",\"bitrate\",\"upload\",\"framerate\",\"ConferenceStats\",\"packetLoss\",\"StatsCollector\",\"statsInterval\",\"_browserType\",\"_usesPromiseGetStats\",\"_getStatValue\",\"_defineNewGetStatValueMethod\",\"_defineGetStatValueMethod\",\"baselineAudioLevelsReport\",\"currentAudioLevelsReport\",\"currentStatsReport\",\"previousStatsReport\",\"audioLevelsIntervalId\",\"conferenceStats\",\"audioLevelsIntervalMilis\",\"statsIntervalId\",\"statsIntervalMilis\",\"ssrc2stats\",\"browsers\",\"packetsReceived\",\"packetsLost\",\"packetsSent\",\"bytesReceived\",\"framerateMean\",\"receiveBandwidth\",\"sendBandwidth\",\"remoteAddress\",\"transportType\",\"localAddress\",\"activeConnection\",\"googFrameHeightReceived\",\"googFrameWidthReceived\",\"googFrameHeightSent\",\"googFrameWidthSent\",\"googFrameRateReceived\",\"googFrameRateSent\",\"audioInputLevel\",\"audioOutputLevel\",\"currentRoundTripTime\",\"remoteCandidateType\",\"localCandidateType\",\"setLoss\",\"setResolution\",\"addBitrate\",\"resetBitrate\",\"setFramerate\",\"startAudioLevelStats\",\"processNewAudioLevelReport\",\"processAudioLevelReport\",\"supportsRtpStatistics\",\"processNewStatsReport\",\"processStatsReport\",\"itemStatByKey\",\"stat\",\"pair\",\"keyFromName\",\"getNonNegativeStat\",\"getStatValue\",\"byteSentStats\",\"localip\",\"conferenceStatsTransport\",\"selected\",\"local\",\"localCandidateId\",\"remote\",\"remoteCandidateId\",\"ipAddress\",\"portNumber\",\"candidateType\",\"msType\",\"before\",\"ssrcIds\",\"isRemote\",\"remoteSource\",\"ssrcStats\",\"isDownloadStream\",\"packetsNow\",\"packetsBefore\",\"packetsDiff\",\"packetsLostNow\",\"packetsLostBefore\",\"packetsLostDiff\",\"packetsTotal\",\"bytesReceivedNow\",\"bytesReceivedBefore\",\"nowBytesTransmitted\",\"timeMs\",\"timestamp\",\"bitrateReceivedKbps\",\"bitrateSentKbps\",\"_processAndEmitReport\",\"bitrateDownload\",\"bitrateUpload\",\"resolutions\",\"framerates\",\"audioBitrateDownload\",\"audioBitrateUpload\",\"videoBitrateDownload\",\"videoBitrateUpload\",\"userResolutions\",\"userFramerates\",\"getNonNegativeValue\",\"_calculateBitrate\",\"fieldName\",\"bytesNow\",\"bytesBefore\",\"bytesProcessed\",\"bitrateKbps\",\"nominated\",\"availableIncomingBitrate\",\"availableOutgoingBitrate\",\"remoteUsedCandidate\",\"localUsedCandidate\",\"remoteIpAddress\",\"remotePort\",\"localIpAddress\",\"localPort\",\"localIp\",\"networkType\",\"frameHeight\",\"frameWidth\",\"framesPerSecond\",\"framesSent\",\"trackIdentifier\",\"getSsrcByTrackId\",\"hidden\",\"_jid\",\"_id\",\"_conference\",\"_hidden\",\"_statsID\",\"_connectionStatus\",\"_properties\",\"jitsiTrack\",\"isWebRTCTrackMuted\",\"oldValue\",\"_isMediaTypeMuted\",\"reduce\",\"_JitsiConnectionEvents__WEBPACK_IMPORTED_MODULE_0__\",\"_modules_xmpp_xmpp__WEBPACK_IMPORTED_MODULE_1__\",\"rejectPromise\",\"onLoginSuccessful\",\"roomPassword\",\"canceled\",\"authenticationError\",\"connectionError\",\"MucConnectionPlugin\",\"rooms\",\"onPresence\",\"onPresenceUnavailable\",\"onPresenceError\",\"onMessage\",\"onMute\",\"ChatRoom\",\"createNonAnonymousRoom\",\"packet2JSON\",\"json2packet\",\"packet\",\"filterNodeFromPresenceJSON\",\"members\",\"presHandlers\",\"noBridgeAvailable\",\"Moderator\",\"initPresenceMap\",\"lastPresences\",\"phoneNumber\",\"phonePin\",\"participantPropertyListener\",\"locked\",\"JitsiTranscriptionStatus\",\"xns\",\"addVideoInfoToPresence\",\"disableFocus\",\"allocateConferenceFocus\",\"fromJoin\",\"getInfo\",\"getForm\",\"form\",\"formSubmit\",\"var\",\"member\",\"statusEl\",\"hasStatusUpdate\",\"xElement\",\"mucUserItem\",\"affiliation\",\"getFocusUserJid\",\"isHiddenDomain\",\"hiddenDomain\",\"fromHiddenDomain\",\"xEl\",\"extractIdentityInformation\",\"userInfo\",\"_arr3\",\"_i3\",\"newRole\",\"_initFocus\",\"memberOfThis\",\"displayJids\",\"att\",\"phone\",\"pin\",\"processNode\",\"tagHandlers\",\"nickname\",\"skipEvents\",\"onMucMemberLeft\",\"reasonSelect\",\"doLeave\",\"isSelfPresence\",\"isKick\",\"membersKeys\",\"onParticipantLeft\",\"subjectText\",\"stamp\",\"dateParts\",\"discoRoomInfo\",\"kickIQ\",\"onError\",\"onNotSupported\",\"formsubmit\",\"handlerIdx\",\"sendVideoInfoPresence\",\"sendAudioInfoPresence\",\"addAudioInfoToPresence\",\"mutedNode\",\"videoTypeNode\",\"isSipGatewayEnabled\",\"iqToFocus\",\"onMucLeft\",\"doReject\",\"_browser__WEBPACK_IMPORTED_MODULE_1__\",\"_settings_Settings__WEBPACK_IMPORTED_MODULE_2__\",\"createExpBackoffTimer\",\"step\",\"count\",\"origin\",\"xmppService\",\"getNextTimeout\",\"getNextErrorTimeout\",\"externalAuthEnabled\",\"sipGatewayEnabled\",\"call_control\",\"attachEvent\",\"setFocusUserJid\",\"focusJid\",\"focusUserJid\",\"getFocusComponent\",\"focusComponent\",\"focus\",\"createConferenceIq\",\"openSctp\",\"machineUID\",\"machine-uid\",\"session-id\",\"enforcedBridge\",\"enableTcc\",\"enableRemb\",\"minParticipants\",\"audioPacketDelay\",\"startBitrate\",\"minBitrate\",\"octo\",\"probability\",\"stereo\",\"useRoomAsSharedDocumentName\",\"parseSessionId\",\"resultIq\",\"parseConfigOptions\",\"authenticationEnabled\",\"_allocateConferenceFocusSuccess\",\"_allocateConferenceFocusError\",\"invalidSession\",\"reservationErr\",\"errorCode\",\"errorTextNode\",\"waitMs\",\"retrySec\",\"urlCallback\",\"failureCallback\",\"_getLoginUrl\",\"popup\",\"urlCb\",\"decodeURIComponent\",\"logout\",\"logoutUrl\",\"JingleConnectionPlugin\",\"jvbIceConfig\",\"p2pIceConfig\",\"offerToReceiveAudio\",\"offerToReceiveVideo\",\"ConnectionPlugin\",\"onJingle\",\"fromJid\",\"ack\",\"sess\",\"startMuted\",\"modifyContents\",\"replaceTransport\",\"successTime\",\"sendTransportReject\",\"addRemoteStream\",\"removeRemoteStream\",\"me\",\"onTerminated\",\"iceservers\",\"dict\",\"credential\",\"updateLog\",\"setImmediate\",\"previous_async\",\"only_once\",\"fn\",\"called\",\"noConflict\",\"_toString\",\"_isArray\",\"_each\",\"_map\",\"_keys\",\"completed\",\"eachSeries\",\"iterate\",\"forEachSeries\",\"eachLimit\",\"limit\",\"_eachLimit\",\"forEachLimit\",\"started\",\"running\",\"replenish\",\"doParallel\",\"doSeries\",\"_asyncMap\",\"eachfn\",\"mapSeries\",\"mapLimit\",\"_mapLimit\",\"doParallelLimit\",\"memo\",\"inject\",\"foldl\",\"reduceRight\",\"reversed\",\"foldr\",\"_filter\",\"filterSeries\",\"select\",\"selectSeries\",\"_reject\",\"rejectSeries\",\"main_callback\",\"detectSeries\",\"any\",\"sortBy\",\"criteria\",\"left\",\"right\",\"auto\",\"tasks\",\"remainingTasks\",\"taskComplete\",\"theCallback\",\"taskCallback\",\"safeResults\",\"rkey\",\"requires\",\"ready\",\"retry\",\"times\",\"attempts\",\"wrappedTask\",\"wrappedCallback\",\"wrappedResults\",\"retryAttempt\",\"finalAttempt\",\"seriesCallback\",\"series\",\"waterfall\",\"wrapIterator\",\"_parallel\",\"parallel\",\"parallelLimit\",\"makeCallback\",\"cb\",\"concatSeries\",\"whilst\",\"doWhilst\",\"until\",\"doUntil\",\"worker\",\"concurrency\",\"_insert\",\"drain\",\"saturated\",\"workers\",\"empty\",\"kill\",\"idle\",\"priorityQueue\",\"_compareTasks\",\"sequence\",\"compare\",\"beg\",\"end\",\"_binarySearch\",\"cargo\",\"working\",\"drained\",\"_console_fn\",\"memoize\",\"hasher\",\"queues\",\"memoized\",\"unmemoized\",\"unmemoize\",\"counter\",\"timesSeries\",\"seq\",\"fns\",\"newargs\",\"nextargs\",\"compose\",\"_applyEach\",\"go\",\"applyEach\",\"applyEachSeries\",\"forever\",\"doInitialize\",\"ssrcOwners\",\"SignalingLayer\",\"oldChatRoom\",\"_audioMuteHandler\",\"_videoMuteHandler\",\"_videoTypeHandler\",\"SignalingEvents\",\"getMediaPresenceInfo\",\"strophe_js__WEBPACK_IMPORTED_MODULE_1__\",\"_util_GlobalOnErrorHandler__WEBPACK_IMPORTED_MODULE_2__\",\"_util_GlobalOnErrorHandler__WEBPACK_IMPORTED_MODULE_2___default\",\"resetLastErrorStatusRegExpr\",\"lastErrorStatusRegExpr\",\"errStatusCapture\",\"PING_TIMESTAMPS_TO_KEEP\",\"PingConnectionPlugin\",\"failedPings\",\"pingExecIntervals\",\"_addPingExecutionTimestamp\",\"pingIntervals\",\"maxInterval\",\"previousTS\",\"currentInterval\",\"RayoConnectionPlugin\",\"onRayo\",\"roomPass\",\"callResource\",\"StropheLogger\",\"logIncoming\",\"logOutgoing\",\"IDENTITY_PROPERTIES\",\"IDENTITY_PROPERTIES_FOR_COMPARE\",\"compareIdentities\",\"disco\",\"versionToCapabilities\",\"jidToVersion\",\"_addChatRoom\",\"_removeChatRoom\",\"CAPS\",\"_handleCaps\",\"_onMucMemberLeft\",\"_removeJidToVersionEntry\",\"_generateVersion\",\"_getDiscoInfo\",\"category\",\"_fixChatRoomPresenceMap\",\"_identities\",\"accumulatedValue\",\"_features\",\"_notifyVersionChanged\",\"oldVersion\",\"dtmfSender\",\"createDTMFSender\",\"insertDTMF\",\"_audioLevel\",\"myUserID\",\"datachannel\",\"createDataChannel\",\"_handleChannel\",\"ws\",\"OPEN\",\"colibriClass\",\"msgPayload\",\"jsonObject\",\"pinnedEndpoint\",\"endpointIds\",\"selectedEndpoints\",\"maxFrameHeightPixels\",\"channel\",\"dominantSpeakerEndpoint\",\"endpoint\",\"isOpen\",\"RTCSignalingState\",\"stable\",\"haveLocalOffer\",\"haveRemoteOffer\",\"RTCIceGatheringState\",\"new\",\"gathering\",\"complete\",\"CNAME\",\"pcConfig\",\"_bufferedIceCandidates\",\"_closed\",\"_dtlsTransport\",\"_iceGatherer\",\"_iceGatheringState\",\"_resolveLocalIceGatheringPromise\",\"_iceGatheringCompletePromise\",\"_iceTransport\",\"_localCapabilities\",\"_localDescription\",\"_localTrackInfos\",\"_mids\",\"_remoteDescription\",\"_remoteStreams\",\"_remoteTrackInfos\",\"_sdpGlobalFields\",\"_signalingState\",\"_setIceGatherer\",\"_setIceTransport\",\"_setDtlsTransport\",\"yaeti\",\"RTCRtpSender\",\"_step2$value\",\"getTrackById\",\"_emitNegotiationNeeded\",\"_updateAndEmitSignalingStateChange\",\"_createLocalDescription\",\"hasAttemptedOffer\",\"usePromise\",\"selector\",\"_getStats\",\"_setLocalDescription\",\"_setRemoteDescription\",\"localIceParameters\",\"localIceCandidates\",\"getLocalCandidates\",\"localDtlsParameters\",\"remoteDtlsParameters\",\"getRemoteParameters\",\"localTrackInfos\",\"ipVer\",\"timing\",\"msidSemantic\",\"semantic\",\"mids\",\"hasVideoRtx\",\"_step7$value\",\"addMediaSection\",\"mediaObject\",\"candidateObject\",\"endOfCandidates\",\"rtpObject\",\"paramFmtp\",\"enableRtx\",\"rtcpMux\",\"rtcpRsize\",\"dispatchEvent\",\"sdpCandidate\",\"sdpMIndex\",\"sdpAttribute\",\"degradationPreference\",\"encodings\",\"muxId\",\"codecCapability\",\"ptime\",\"_iteratorNormalCompletion16\",\"_didIteratorError16\",\"_iteratorError16\",\"_step16\",\"_iterator16\",\"encrypt\",\"_iteratorNormalCompletion17\",\"_didIteratorError17\",\"_iteratorError17\",\"_step17\",\"_iterator17\",\"_iteratorNormalCompletion18\",\"_didIteratorError18\",\"_iteratorError18\",\"_step18\",\"_iterator18\",\"_iteratorNormalCompletion19\",\"_didIteratorError19\",\"_iteratorError19\",\"_step19\",\"_iterator19\",\"iceTransport\",\"rtpSenders\",\"rtpReceivers\",\"_iteratorNormalCompletion20\",\"_didIteratorError20\",\"_iteratorError20\",\"_step20\",\"_iterator20\",\"sending\",\"_iteratorNormalCompletion21\",\"_didIteratorError21\",\"_iteratorError21\",\"_step21\",\"_iterator21\",\"msGetStats\",\"isAudio\",\"_arr4\",\"_i6\",\"_i4\",\"_arr5\",\"_i7\",\"datas\",\"_iteratorNormalCompletion22\",\"_didIteratorError22\",\"_iteratorError22\",\"_step22\",\"_iterator22\",\"_i5\",\"remoteCapabilities\",\"_startIceAndDtls\",\"currentRemoteSsrcs\",\"newRemoteTrackInfos\",\"addedRemoteStreams\",\"addedRemoteTracks\",\"removedRemoteTracks\",\"_iteratorNormalCompletion23\",\"_didIteratorError23\",\"_iteratorError23\",\"_step23\",\"_iterator23\",\"_step23$value\",\"streamRemoteId\",\"trackRemoteId\",\"isNewStream\",\"_getParametersForRtpReceiver\",\"receive\",\"_iteratorNormalCompletion24\",\"_didIteratorError24\",\"_iteratorError24\",\"_step24\",\"_iterator24\",\"_iteratorNormalCompletion25\",\"_didIteratorError25\",\"_iteratorError25\",\"_step25\",\"_iterator25\",\"_step25$value\",\"_iteratorNormalCompletion26\",\"_didIteratorError26\",\"_iteratorError26\",\"_step26\",\"_iterator26\",\"_step26$value\",\"_iteratorNormalCompletion27\",\"_didIteratorError27\",\"_iteratorError27\",\"_step27\",\"_iterator27\",\"_emitAddStream\",\"_iteratorNormalCompletion28\",\"_didIteratorError28\",\"_iteratorError28\",\"_step28\",\"_iterator28\",\"_step28$value\",\"_emitRemoveStream\",\"_iteratorNormalCompletion29\",\"_didIteratorError29\",\"_iteratorError29\",\"_step29\",\"_iterator29\",\"_getParametersForRtpSender\",\"RTCDtlsTransport\",\"onstatechange\",\"_emitConnectionStateChange\",\"ondtlsstatechange\",\"iceGatherOptions\",\"gatherPolicy\",\"RTCIceGatherer\",\"_updateAndEmitIceGatheringStateChange\",\"onlocalcandidate\",\"_emitIceCandidate\",\"errorText\",\"gather\",\"RTCIceTransport\",\"_emitIceConnectionStateChange\",\"onicestatechange\",\"getNominatedCandidatePair\",\"oncandidatepairchange\",\"isLocalInitialAnswer\",\"_handleLocalInitialAnswer\",\"_handleLocalReAnswer\",\"_emitBufferedIceCandidates\",\"_sendMedia\",\"_receiveMedia\",\"isRemoteInitialOffer\",\"_handleRemoteInitialOffer\",\"_handleRemoteReOffer\",\"remoteIceParameters\",\"remoteIceCandidates\",\"_iteratorNormalCompletion30\",\"_didIteratorError30\",\"_iteratorError30\",\"_step30\",\"_iterator30\",\"addRemoteCandidate\",\"iceGatheringState\",\"SIMULCAST_LAYERS\",\"SIM_LAYER_RIDS\",\"audioTransferActive\",\"_addedStreams\",\"localSSRCs\",\"localUfrag\",\"remoteUfrag\",\"_peerVideoTypeChanged\",\"_peerMutedChanged\",\"statsinterval\",\"Interop\",\"interop\",\"Simulcast\",\"simulcast\",\"numOfLayers\",\"explodeRemoteSimulcast\",\"sdpConsistency\",\"SdpConsistency\",\"localSdpMunger\",\"LocalSdpMunger\",\"rtxModifier\",\"RtxModifier\",\"what\",\"onaddstream\",\"_remoteStreamAdded\",\"onremovestream\",\"_remoteStreamRemoved\",\"ondatachannel\",\"_processStat\",\"statValue\",\"endTime\",\"dumpSDP\",\"_getDesiredMediaDirection\",\"mediaTransferActive\",\"hasAnyTracksOfType\",\"isSimulcastOn\",\"supportsSimulcast\",\"videoTrack\",\"_setVideoType\",\"endpoints\",\"endpointTrackMap\",\"mediaTrack\",\"findTrackById\",\"onaddtrack\",\"_remoteTrackAdded\",\"onremovetrack\",\"_remoteTrackRemoved\",\"streamAudioTracks\",\"streamVideoTracks\",\"mediaLines\",\"mls\",\"trackSsrc\",\"ownerEndpointId\",\"getSSRCOwner\",\"peerMediaInfo\",\"getPeerMediaInfo\",\"_createRemoteTrack\",\"remoteTracksMap\",\"existingTrack\",\"JitsiRemoteTrack\",\"isUserStream\",\"_removeRemoteTrackById\",\"_getRemoteTrackById\",\"removedAudioTrack\",\"removedVideoTrack\",\"_removeRemoteTrack\",\"toBeRemoved\",\"normalizePlanB\",\"firstSsrcs\",\"newSsrcLines\",\"isVersionGreaterThan\",\"filteredLines\",\"ssrcId\",\"cnameLine\",\"replaceDefaultUnifiedPlanMsid\",\"resStr\",\"_getSSRC\",\"_injectSsrcGroupForUnifiedSimulcast\",\"simulcast_03\",\"getters\",\"toPlanB\",\"maybeAddMutedLocalVideoTracksToSDP\",\"transformer\",\"audioMedia\",\"selectMedia\",\"videoMedia\",\"toRawSDP\",\"enforceSendRecv\",\"transformStreamIdentifiers\",\"webrtcStream\",\"_addStream\",\"generateNewStreamSSRCInfo\",\"setPrimarySsrc\",\"setSsrcCache\",\"fidGroups\",\"rtxSsrcMapping\",\"_assertTrackBelongs\",\"webRtcStream\",\"addStream\",\"_removeStream\",\"supportsRtpSender\",\"_handleSenderRemoveStream\",\"removeStream\",\"doesBelong\",\"isMediaStreamInPc\",\"findSenderByStream\",\"getSenders\",\"sender\",\"extractPrimarySSRC\",\"opts\",\"_ensureSimulcastGroupIsLast\",\"localSdp\",\"sdpStr\",\"videoStartIndex\",\"simStartIndex\",\"otherStartIndex\",\"simEndIndex\",\"simStr\",\"otherEndIndex\",\"sdpHead\",\"simStrTrimmed\",\"sdpTail\",\"_adjustLocalMediaDirection\",\"modifiedDirection\",\"desiredAudioDirection\",\"desiredVideoDirection\",\"parsedSdp\",\"toUnifiedPlan\",\"_insertUnifiedPlanSimulcastReceive\",\"mungeRemoteDescription\",\"stripRtx\",\"_injectH264IfNotPresent\",\"dummyPayloadType\",\"payloadsArray\",\"clearVideoSsrcCache\",\"peerTracks\",\"_removePeerConnection\",\"simParams\",\"scaleResolutionDownBy\",\"setParameters\",\"_createOfferOrAnswer\",\"isOffer\",\"handleSuccess\",\"resultSdp\",\"resolveFn\",\"rejectFn\",\"hasPrimarySsrcCached\",\"makeVideoPrimarySsrcsConsistent\",\"mungeLocalDescription\",\"modifyRtxSsrcs\",\"groupsMap\",\"groupSSRCs\",\"extractSSRCMap\",\"_processLocalSSRCsMap\",\"handleFailure\",\"trackMSID\",\"newSSRCNum\",\"oldSSRCNum\",\"currNumSsrcs\",\"videoSender\",\"getParameters\",\"simIndex\",\"handleLayerSuspension\",\"ttfmTrackerAudioAttached\",\"ttfmTrackerVideoAttached\",\"hasBeenMuted\",\"_bindMuteHandlers\",\"_onTrackMute\",\"_onTrackUnmute\",\"gumStart\",\"gumEnd\",\"gumDuration\",\"ttfm\",\"_playCallback\",\"localVideos\",\"isInPeerConnection\",\"shouldFakeSdp\",\"requiredSSRCs\",\"ssrcCache\",\"cachedPrimarySsrc\",\"primaryCname\",\"removeSSRC\",\"addSSRCAttribute\",\"addSSRCGroup\",\"modifyRtxSsrcs2\",\"pcId\",\"streamAndTrackIDs\",\"_addMutedLocalVideoTracksToSDP\",\"sessionDesc\",\"audioMLine\",\"_transformMediaIdentifiers\",\"updateAssociatedRtxStream\",\"primarySsrcInfo\",\"primarySsrcMsid\",\"primarySsrcCname\",\"previousRtxSSRC\",\"getRtxSSRC\",\"dumpSSRCGroups\",\"removeGroupsWithSSRC\",\"correspondingRtxSsrcs\",\"ssrcMapping\",\"sdpTransformer\",\"getSSRCCount\",\"primaryVideoSsrcs\",\"getPrimaryVideoSSRCs\",\"getSSRCAttrValue\",\"correspondingRtxSsrc\",\"previousAssociatedRtxStream\",\"containsAnySSRCGroups\",\"findGroups\",\"removeGroupsBySemantics\",\"injectRecvOnly\",\"newPrimarySsrc\",\"getPrimaryVideoSsrc\",\"replaceSSRC\",\"_eventFired\",\"_trackMuteChanged\",\"_trackAdded\",\"_isLocalAudioTrack\",\"STATS_MESSAGE_TYPE\",\"kSimulcastFormats\",\"layers\",\"target\",\"videoBitrateCap\",\"getTarget\",\"millisSinceStart\",\"simulcastFormat\",\"targetHeight\",\"pixels\",\"rampUp\",\"_localStats\",\"jvbRTT\",\"_lastConnectionQualityUpdate\",\"_remoteStats\",\"_timeIceConnected\",\"_timeVideoUnmuted\",\"_timeLastBwCapRemoved\",\"ConferenceEvents\",\"_updateLocalConnectionQuality\",\"ConnectionQualityEvents\",\"_broadcastLocalStats\",\"_updateRemoteStats\",\"_updateLocalStats\",\"_maybeUpdateUnmuteTime\",\"bridgeCount\",\"resolutionName\",\"quality\",\"activeTPC\",\"newVideoBitrateCap\",\"bandwidthLimiter\",\"getBandwidthLimit\",\"prevConnectionQuality\",\"diffSeconds\",\"updateLocalConnectionQuality\",\"_calculateConnectionQuality\",\"_canceled\",\"_iceFailedTimeout\",\"ParticipantWrapper\",\"requests\",\"lastRequestId\",\"clearIntervals\",\"sendRequest\",\"handleResponse\",\"maybeSendAnalytics\",\"isDataChannelOpen\",\"pingInterval\",\"pingIntervalMs\",\"analyticsInterval\",\"analyticsIntervalMs\",\"requestId\",\"requestMessage\",\"timeSent\",\"E2ePingEvents\",\"Infinity\",\"participantJoined\",\"participantLeft\",\"messageReceived\",\"dataChannelOpened\",\"participantWrapper\",\"handleRequest\",\"_jvb121\",\"evaluateStatus\",\"oldStatus\",\"_sessions\",\"_chatRoom\",\"_handleFocusPresence\",\"_handleJibriPresence\",\"getSession\",\"getID\",\"_addSession\",\"_emitSessionUpdate\",\"_createSession\",\"_recordingXMLUtils$ge\",\"setLiveStreamViewURL\",\"offerOptions\",\"PCMonitor\",\"getStatsIntervalMs\",\"getStatsInterval\",\"rtts\",\"stopped\",\"startStatsInterval\",\"handleCandidateRtt\",\"rttTotal\",\"candidateKey\",\"responsesReceived\",\"requestsSent\",\"rttTotalDiff\",\"responsesReceivedDiff\",\"requestsResponsesDiff\",\"supportsLocalCandidateRttStatistics\",\"pcMonitors\",\"startPCMonitors\",\"initialDelay\",\"AverageStatReport\",\"sum\",\"calculate\",\"ConnectionAvgStats\",\"_n\",\"_sampleIdx\",\"_avgRTT\",\"_avgRemoteRTTMap\",\"_avgRtpStatsReporter\",\"_avgEnd2EndRTT\",\"_onConnectionStats\",\"_calculateAvgStats\",\"_onUserLeft\",\"_onRemoteStatsUpdated\",\"_processRemoteStats\",\"supportsRTTStatistics\",\"addNext\",\"batchReport\",\"conference_size\",\"local_candidate_type\",\"remote_candidate_type\",\"transport_type\",\"appendReport\",\"jvbEnd2EndRTT\",\"jvbStatsMonitor\",\"avgRemoteRTT\",\"_calculateAvgRemoteRTT\",\"avgLocalRTT\",\"_resetAvgStats\",\"remoteAvg\",\"avg\",\"validData\",\"rttAvg\",\"_avgAudioBitrateUp\",\"_avgAudioBitrateDown\",\"_avgVideoBitrateUp\",\"_avgVideoBitrateDown\",\"_avgBandwidthUp\",\"_avgBandwidthDown\",\"_avgPacketLossTotal\",\"_avgPacketLossUp\",\"_avgPacketLossDown\",\"_avgRemoteFPS\",\"_avgRemoteScreenFPS\",\"_avgLocalFPS\",\"_avgLocalScreenFPS\",\"_avgRemoteCameraPixels\",\"_avgRemoteScreenPixels\",\"_avgLocalCameraPixels\",\"_avgLocalScreenPixels\",\"_avgCQ\",\"_onLocalStatsUpdated\",\"_onP2PStatusChanged\",\"p2pStatsMonitor\",\"_onJvb121StatusChanged\",\"_resetAvgJvbStats\",\"confSize\",\"supportsBandwidthStatistics\",\"_calculateAvgVideoFps\",\"_calculateAvgVideoPixels\",\"peerResolutions\",\"peerPixelsSum\",\"myID\",\"peerID\",\"videosResolution\",\"peerAvgPixels\",\"_calculatePeerAvgVideoPixels\",\"videos\",\"getTracksByMediaType\",\"peerSsrcCount\",\"peerSsrcPixels\",\"peerFpsSum\",\"videosFps\",\"peerAvgFPS\",\"_calculatePeerAvgVideoFps\",\"peerSsrcFps\",\"dominantSpeakerId\",\"_onDominantSpeaker\",\"_onUserJoin\",\"_onUserLeave\",\"_onDisplayNameChange\",\"_updateStats\",\"oldDominantSpeaker\",\"newDominantSpeaker\",\"savedUser\",\"markAsHasLeft\",\"newStats\",\"speakerStatsToUpdate\",\"SphinxService\",\"BEFORE_STATE\",\"audioRecorder\",\"transcriptionService\",\"transcription\",\"lineLength\",\"hasPopulatedArrays\",\"twoDimensionalArray\",\"callBack\",\"wordArray\",\"getUTCMilliseconds\",\"wordObject\",\"begin\",\"word\",\"maybeMerge\",\"recordingResult\",\"merge\",\"arrays\",\"potentialWords\",\"pushWordToSortedArray\",\"lowestWordArray\",\"wordToAdd\",\"updateTranscription\",\"foundSmaller\",\"wordToCompare\",\"getTranscription\",\"getState\",\"_statistics_statistics__WEBPACK_IMPORTED_MODULE_0__\",\"processPresence\",\"FOCUS_COMPONENT\",\"VIDEOBRIDGE_COMPONENT\",\"XMPP_SERVER_COMPONENT\",\"mucResource\",\"componentName\",\"getComponentVersion\",\"sessionStateChangeListener\",\"sessionStateChanged\",\"handleJibriSIPState\",\"Constants\",\"sipaddress\",\"setState\",\"failure_reason\",\"JitsiVideoSIPGWSession\",\"addStateListener\",\"removeStateListener\",\"_sendJibriIQ\",\"failureReason\",\"oldState\",\"displayname\",\"BUSY\",\"RESOURCE_CONSTRAINT\",\"SERVICE_UNAVAILABLE\",\"FILE\",\"ProxyConnectionService\",\"jitsiConnection\",\"otherOptions\",\"_objectWithoutProperties\",\"_options\",\"_peerConnection\",\"_onFatalError\",\"_onSendMessage\",\"_onRemoteStream\",\"getPeerJid\",\"_convertStringToXML\",\"$jingle\",\"_createPeerConnection\",\"receiveVideo\",\"processMessage\",\"_selfCloseConnection\",\"xml\",\"xmlDom\",\"onRemoteStream\",\"onSendMessage\",\"ProxyConnectionPC\",\"jitsiRemoteTrack\",\"isVideo\",\"convertVideoToDesktop\",\"jitsiLocalTracks\",\"newCreateLocalTracks\",\"stringifiedIq\",\"XMLSerializer\",\"serializeToString\",\"onConnectionClosed\",\"receiveAudio\",\"_onSessionAccept\",\"_onSessionInitiate\",\"_onSessionTerminate\",\"_onTransportInfo\",\"connectionStub\",\"iceConfigStub\",\"roomStub\",\"_rtc\",\"destroy\",\"default\",\"getAnalyticsAttributesFromOptions\",\"audio_requested\",\"video_requested\",\"screen_sharing_requested\",\"_mergeNamespaceAndModule\",\"constants\",\"recording\",\"recordingConstants\",\"sipVideoGW\",\"events\",\"errorTypes\",\"logLevels\",\"enableAnalyticsLogging\",\"enableWindowOnErrorHandler\",\"getGlobalOnErrorHandler\",\"aprops\",\"isWebRtcSupported\",\"addGlobalLogTransport\",\"globalTransport\",\"removeGlobalLogTransport\",\"firePermissionPromptIsShownEvent\",\"originalOptions\",\"promiseFulfilled\",\"emitEvent\",\"mStream\",\"currentlyAvailableMediaDevices\",\"oldResolution\",\"newResolution\",\"resName\",\"getLowerResolution\",\"old_resolution\",\"new_resolution\",\"isMultipleAudioInputSupported\",\"isCollectingLocalStats\",\"lineno\",\"colno\",\"util\",\"AuthUtil\",\"JitsiMeetJS\",\"logStorage\",\"stringifyObjects\",\"storeInterval\",\"maxEntryLength\",\"logLevel\",\"_log\",\"storeLogsIntervalID\",\"totalLen\",\"outputCache\",\"someObject\",\"formatLogMessage\",\"prevMessage\",\"_flush\",\"_reschedulePublishInterval\",\"force\",\"reschedule\",\"isReady\",\"cachedQueue\",\"storeLogs\",\"__webpack_amd_options__\",\"scriptReadyRegex\",\"fullPageUrl\",\"pageUrl\",\"scripts\",\"supportsScriptReadyState\",\"isNotOpera\",\"hasNativeCurrentScriptAccessor\",\"stackTraceLimit\",\"hasStackBeforeThrowing\",\"hasStackAfterThrowing\",\"_nearestExecutingScript\",\"eligibleScripts\",\"skipStackDepth\",\"getScriptUrlFromStack\",\"remainingStack\",\"ignoreMessage\",\"getScriptFromUrl\",\"hasAttribute\",\"getSoleInlineScript\",\"currentScript\",\"thrownErr\",\"near\",\"far\",\"_items\",\"_onDiscoInfo\",\"_onDiscoItems\",\"addIdentity\",\"lang\",\"var_name\",\"addItem\",\"call_back\",\"items\",\"_buildIQResult\",\"query_attrs\",\"iqresult\",\"scope\",\"Timeout\",\"clearFn\",\"_clearFn\",\"unref\",\"ref\",\"enroll\",\"msecs\",\"_idleTimeoutId\",\"unenroll\",\"_unrefActive\",\"_onTimeout\",\"clearImmediate\",\"registerImmediate\",\"messagePrefix\",\"onGlobalMessage\",\"nextHandle\",\"tasksByHandle\",\"currentlyRunningATask\",\"attachTo\",\"getPrototypeOf\",\"handle\",\"runIfPresent\",\"postMessage\",\"importScripts\",\"postMessageIsAsynchronous\",\"oldOnMessage\",\"canUsePostMessage\",\"MessageChannel\",\"port1\",\"port2\",\"removeChild\",\"yaetiEventTarget\",\"_listeners\",\"defineProperties\",\"listenersType\",\"oldListener\",\"dummyListener\",\"stopImmediatePropagation\",\"_yaeti\",\"cancelable\",\"defaultPrevented\",\"toIntIfInt\",\"parseReg\",\"needsBlank\",\"keyLocation\",\"rawName\",\"attachProperties\",\"validLine\",\"paramReducer\",\"acc\",\"scid\",\"formatRegExp\",\"makeLine\",\"formatStr\",\"defaultOuterOrder\",\"defaultInnerOrder\",\"outerOrder\",\"innerOrder\",\"adapterFactory\",\"dependencies\",\"shimChrome\",\"shimFirefox\",\"shimEdge\",\"shimSafari\",\"logging\",\"browserDetails\",\"adapter\",\"chromeShim\",\"edgeShim\",\"firefoxShim\",\"safariShim\",\"commonShim\",\"shimPeerConnection\",\"browserShim\",\"shimGetUserMedia\",\"shimMediaStream\",\"shimSourceObject\",\"shimOnTrack\",\"shimAddTrackRemoveTrack\",\"shimGetSendersWithDtmf\",\"shimRTCIceCandidate\",\"shimReplaceTrack\",\"shimRTCIceServerUrls\",\"shimCallbacksAPI\",\"shimLocalStreamsAPI\",\"shimRemoteStreamsAPI\",\"shimTrackEventTransceiver\",\"shimCreateOfferLegacy\",\"webkitMediaStream\",\"_ontrack\",\"origSetRemoteDescription\",\"_ontrackpoly\",\"te\",\"receiver\",\"getReceivers\",\"shimSenderWithDtmf\",\"dtmf\",\"_dtmf\",\"_pc\",\"_senders\",\"origAddTrack\",\"origRemoveTrack\",\"origAddStream\",\"origRemoveStream\",\"origGetSenders\",\"HTMLMediaElement\",\"_srcObject\",\"origGetLocalStreams\",\"getLocalStreams\",\"nativeStreams\",\"_reverseStreams\",\"_streams\",\"DOMException\",\"newStream\",\"oldStream\",\"nativeMethod\",\"replaceInternalStreamId\",\"origSetLocalDescription\",\"internalId\",\"externalStream\",\"internalStream\",\"replaceExternalStreamId\",\"origLocalDescription\",\"getOwnPropertyDescriptor\",\"OrigPeerConnection\",\"newIceServers\",\"generateCertificate\",\"iceTransports\",\"origGetStats\",\"fixChromeStats_\",\"standardReport\",\"standardStats\",\"localcandidate\",\"remotecandidate\",\"makeMapStats\",\"nativeAddIceCandidate\",\"constraintsToChrome_\",\"cc\",\"oldname_\",\"oc\",\"mix\",\"advanced\",\"shimConstraints_\",\"remap\",\"face\",\"getSupportedFacingModeLies\",\"getSupportedConstraints\",\"dev\",\"shimError_\",\"PermissionDeniedError\",\"DevicesNotFoundError\",\"ConstraintNotSatisfiedError\",\"TrackStartError\",\"MediaDeviceFailedDueToShutdown\",\"MediaDeviceKillSwitchOn\",\"getUserMediaPromise_\",\"kinds\",\"MediaStreamTrack\",\"getSources\",\"origGetUserMedia\",\"shimRTCPeerConnection\",\"origMSTEnabled\",\"RTCDtmfSender\",\"setTrack\",\"dtlsRole\",\"_initialTrackId\",\"getCommonCapabilities\",\"commonCapabilities\",\"findCodecByPayloadType\",\"rtxCapabilityMatches\",\"lRtx\",\"rRtx\",\"lCodecs\",\"rCodecs\",\"lCodec\",\"rCodec\",\"lHeaderExtension\",\"rHeaderExtension\",\"isActionAllowedInSignalingState\",\"maybeAddCandidate\",\"alreadyAdded\",\"getRemoteCandidates\",\"remoteCandidate\",\"makeError\",\"NotSupportedError\",\"InvalidAccessError\",\"OperationError\",\"addTrackToStreamAndFireEvent\",\"MediaStreamTrackEvent\",\"fireAddTrack\",\"trackEvent\",\"_dispatchEvent\",\"_eventTarget\",\"canTrickleIceCandidates\",\"needNegotiation\",\"localStreams\",\"remoteStreams\",\"usingBundle\",\"bundlePolicy\",\"rtcpMuxPolicy\",\"hasTurn\",\"isString\",\"filterIceServers\",\"_iceGatherers\",\"iceCandidatePoolSize\",\"_config\",\"transceivers\",\"_sdpSessionId\",\"_sdpSessionVersion\",\"_dtlsRole\",\"_isClosed\",\"configurable\",\"ontrack\",\"onconnectionstatechange\",\"onicegatheringstatechange\",\"_emitGatheringStateChange\",\"getConfiguration\",\"getRemoteStreams\",\"_createTransceiver\",\"doNotAdd\",\"hasBundleTransport\",\"recvEncodingParameters\",\"associatedRemoteMediaStreams\",\"wantReceive\",\"_createIceAndDtlsTransports\",\"_maybeFireNegotiationNeeded\",\"clonedStream\",\"clonedTrack\",\"_createIceGatherer\",\"writable\",\"bufferedCandidateEvents\",\"bufferCandidates\",\"_gather\",\"evt\",\"serializedCandidate\",\"toJSON\",\"_updateIceConnectionState\",\"_updateConnectionState\",\"_disposeIceAndDtlsTransports\",\"_transceive\",\"recv\",\"isIceLite\",\"rejected\",\"_updateSignalingState\",\"receiverList\",\"iceOptions\",\"remoteMsid\",\"isComplete\",\"setTransport\",\"setRemoteCandidates\",\"isNewTrack\",\"nativeTrack\",\"states\",\"checking\",\"disconnected\",\"failed\",\"connecting\",\"numAudioTracks\",\"numVideoTracks\",\"hdrExt\",\"rHdrExt\",\"mediaSectionsInOffer\",\"candidateString\",\"senderOrReceiver\",\"allStats\",\"ortcObjectName\",\"nativeGetstats\",\"nativeStats\",\"mapStats\",\"inboundrtp\",\"outboundrtp\",\"candidatepair\",\"RTCTrackEvent\",\"mozSrcObject\",\"mozRTCPeerConnection\",\"newServer\",\"mozRTCSessionDescription\",\"mozRTCIceCandidate\",\"modernStatsTypes\",\"nativeGetStats\",\"onSucc\",\"onErr\",\"InternalError\",\"SecurityError\",\"The operation is insecure.\",\"getUserMedia_\",\"constraintsToFF37_\",\"orgEnumerateDevices\",\"nativeGetUserMedia\",\"nativeGetSettings\",\"nativeApplyConstraints\",\"_localStreams\",\"getStreamById\",\"_addTrack\",\"_onaddstream\",\"_onaddstreampoly\",\"withCallback\",\"errcb\",\"RTCTransceiver\",\"origCreateOffer\",\"audioTransceiver\",\"getTransceivers\",\"setDirection\",\"addTransceiver\",\"videoTransceiver\",\"NativeRTCIceCandidate\",\"nativeCandidate\",\"parsedCandidate\",\"augmentedCandidate\",\"eventNameToWrap\",\"nativeAddEventListener\",\"nativeEventName\",\"_eventMap\",\"nativeRemoveEventListener\",\"unwrappedCb\",\"wrapPeerConnectionEvent\",\"nativeCreateObjectURL\",\"nativeRevokeObjectURL\",\"newId\",\"dsc\",\"nativeSetAttribute\",\"midToString\",\"mlB2UMap\",\"mlU2BMap\",\"candidateToUnifiedPlan\",\"candidateToPlanB\",\"getFirstSendingIndexFromAnswer\",\"rewrite\",\"type2bl\",\"types\",\"directionResult\",\"uLine\",\"directionMasks\",\"bundleOnly\",\"cached\",\"hasBundle\",\"recvonlySsrcs\",\"mid2ul\",\"bIdx\",\"uIdx\",\"bLine\",\"uLineData\",\"ssrc2group\",\"ssrc2ml\",\"related\",\"inactive\",\"recvonly\",\"sendonly\",\"sendrecv\",\"transformUtils\",\"parseSsrcs\",\"writeSsrcs\",\"DEFAULT_NUM_OF_LAYERS\",\"processVideo\",\"validateDescription\",\"clearSsrcCache\",\"_parseSimLayers\",\"_buildNewToOldSsrcMap\",\"newSsrcList\",\"oldSsrcList\",\"newSsrc\",\"oldSsrc\",\"_fillInSourceDataFromCache\",\"newSimSsrcs\",\"newMsid\",\"newCname\",\"ssrcsToReplace\",\"ssrcsToAdd\",\"_generateSourceData\",\"addAssociatedStream\",\"simSsrcs\",\"simSsrc\",\"_restoreSimulcast\",\"simulcastSsrcs\",\"relatedGroup\",\"relatedSsrcs\",\"relatedSSRC\",\"simulcastGroup\",\"nuke\",\"implodeRemoteSimulcast\",\"invalid\",\"removeGoogConference\",\"assertGoogConference\",\"TranscriptionService\",\"Word\",\"sphinxURL\",\"toReturn\",\"getURL\",\"audioFileBlob\",\"DONE\",\"formatResponse\",\"objects\",\"filler\",\"verify\",\"audioBlob\",\"getWord\",\"getBeginTime\",\"getEndTime\"],\"mappings\":\"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\",\"sourcesContent\":[\"(function webpackUniversalModuleDefinition(root, factory) {\\n\\tif(typeof exports === 'object' && typeof module === 'object')\\n\\t\\tmodule.exports = factory();\\n\\telse if(typeof define === 'function' && define.amd)\\n\\t\\tdefine([], factory);\\n\\telse if(typeof exports === 'object')\\n\\t\\texports[\\\"JitsiMeetJS\\\"] = factory();\\n\\telse\\n\\t\\troot[\\\"JitsiMeetJS\\\"] = factory();\\n})(window, function() {\\nreturn \",\" \\t// The module cache\\n \\tvar installedModules = {};\\n\\n \\t// The require function\\n \\tfunction __webpack_require__(moduleId) {\\n\\n \\t\\t// Check if module is in cache\\n \\t\\tif(installedModules[moduleId]) {\\n \\t\\t\\treturn installedModules[moduleId].exports;\\n \\t\\t}\\n \\t\\t// Create a new module (and put it into the cache)\\n \\t\\tvar module = installedModules[moduleId] = {\\n \\t\\t\\ti: moduleId,\\n \\t\\t\\tl: false,\\n \\t\\t\\texports: {}\\n \\t\\t};\\n\\n \\t\\t// Execute the module function\\n \\t\\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\\n\\n \\t\\t// Flag the module as loaded\\n \\t\\tmodule.l = true;\\n\\n \\t\\t// Return the exports of the module\\n \\t\\treturn module.exports;\\n \\t}\\n\\n\\n \\t// expose the modules object (__webpack_modules__)\\n \\t__webpack_require__.m = modules;\\n\\n \\t// expose the module cache\\n \\t__webpack_require__.c = installedModules;\\n\\n \\t// define getter function for harmony exports\\n \\t__webpack_require__.d = function(exports, name, getter) {\\n \\t\\tif(!__webpack_require__.o(exports, name)) {\\n \\t\\t\\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\\n \\t\\t}\\n \\t};\\n\\n \\t// define __esModule on exports\\n \\t__webpack_require__.r = function(exports) {\\n \\t\\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\\n \\t\\t\\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\\n \\t\\t}\\n \\t\\tObject.defineProperty(exports, '__esModule', { value: true });\\n \\t};\\n\\n \\t// create a fake namespace object\\n \\t// mode & 1: value is a module id, require it\\n \\t// mode & 2: merge all properties of value into the ns\\n \\t// mode & 4: return value when already ns object\\n \\t// mode & 8|1: behave like require\\n \\t__webpack_require__.t = function(value, mode) {\\n \\t\\tif(mode & 1) value = __webpack_require__(value);\\n \\t\\tif(mode & 8) return value;\\n \\t\\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\\n \\t\\tvar ns = Object.create(null);\\n \\t\\t__webpack_require__.r(ns);\\n \\t\\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\\n \\t\\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\\n \\t\\treturn ns;\\n \\t};\\n\\n \\t// getDefaultExport function for compatibility with non-harmony modules\\n \\t__webpack_require__.n = function(module) {\\n \\t\\tvar getter = module && module.__esModule ?\\n \\t\\t\\tfunction getDefault() { return module['default']; } :\\n \\t\\t\\tfunction getModuleExports() { return module; };\\n \\t\\t__webpack_require__.d(getter, 'a', getter);\\n \\t\\treturn getter;\\n \\t};\\n\\n \\t// Object.prototype.hasOwnProperty.call\\n \\t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\\n\\n \\t// __webpack_public_path__\\n \\t__webpack_require__.p = \\\"\\\";\\n\\n\\n \\t// Load entry module and return exports\\n \\treturn __webpack_require__(__webpack_require__.s = 121);\\n\",\"const XMPPEvents = {\\n    /**\\n     * Indicates error while adding ice candidate.\\n     */\\n    ADD_ICE_CANDIDATE_FAILED: 'xmpp.add_ice_candidate_failed',\\n\\n    // Designates an event indicating that the focus has asked us to mute our\\n    // audio.\\n    AUDIO_MUTED_BY_FOCUS: 'xmpp.audio_muted_by_focus',\\n    AUTHENTICATION_REQUIRED: 'xmpp.authentication_required',\\n    BRIDGE_DOWN: 'xmpp.bridge_down',\\n\\n    /**\\n     * Triggered when 'session-accept' is received from the responder.\\n     */\\n    CALL_ACCEPTED: 'xmpp.callaccepted.jingle',\\n\\n    // Designates an event indicating that an offer (e.g. Jingle\\n    // session-initiate) was received.\\n    CALL_INCOMING: 'xmpp.callincoming.jingle',\\n\\n    // Triggered when Jicofo kills our media session, this can happen while\\n    // we're still in the MUC, when it decides to terminate the media session.\\n    // For example when the session is idle for too long, because we're the only\\n    // person in the conference room.\\n    CALL_ENDED: 'xmpp.callended.jingle',\\n    CHAT_ERROR_RECEIVED: 'xmpp.chat_error_received',\\n\\n    // The conference properties (as advertised by jicofo) have changed\\n    CONFERENCE_PROPERTIES_CHANGED: 'xmpp.conference_properties_changed',\\n\\n    CONFERENCE_SETUP_FAILED: 'xmpp.conference_setup_failed',\\n\\n    /**\\n     * This event is triggered when the ICE connects for the first time.\\n     */\\n    CONNECTION_ESTABLISHED: 'xmpp.connection.connected',\\n\\n    // Designates an event indicating that the connection to the XMPP server\\n    // failed.\\n    CONNECTION_FAILED: 'xmpp.connection.failed',\\n\\n    // Designates an event indicating that the media (ICE) connection was\\n    // interrupted. This should go to the RTC module.\\n    CONNECTION_INTERRUPTED: 'xmpp.connection.interrupted',\\n\\n    // Designates an event indicating that the media (ICE) connection was\\n    // restored. This should go to the RTC module.\\n    CONNECTION_RESTORED: 'xmpp.connection.restored',\\n\\n    // Designates an event indicating that the media (ICE) connection failed.\\n    // This should go to the RTC module.\\n    CONNECTION_ICE_FAILED: 'xmpp.connection.ice.failed',\\n\\n    // Designates an event indicating that the display name of a participant\\n    // has changed.\\n    DISPLAY_NAME_CHANGED: 'xmpp.display_name_changed',\\n\\n    /**\\n     * Chat room instance have been added to Strophe.emuc plugin.\\n     */\\n    EMUC_ROOM_ADDED: 'xmpp.emuc_room_added',\\n\\n    /**\\n     * Chat room instance have been removed from Strophe.emuc plugin.\\n     */\\n    EMUC_ROOM_REMOVED: 'xmpp.emuc_room_removed',\\n    ETHERPAD: 'xmpp.etherpad',\\n    FOCUS_DISCONNECTED: 'xmpp.focus_disconnected',\\n    FOCUS_LEFT: 'xmpp.focus_left',\\n    GRACEFUL_SHUTDOWN: 'xmpp.graceful_shutdown',\\n\\n    /**\\n     * Event fired when 'transport-replace' Jingle message has been received,\\n     * before the new offer is set on the PeerConnection.\\n     */\\n    ICE_RESTARTING: 'rtc.ice_restarting',\\n\\n    /**\\n     * Event fired after the 'transport-replace' message has been processed\\n     * and the new offer has been set successfully.\\n     */\\n    ICE_RESTART_SUCCESS: 'rtc.ice_restart_success',\\n\\n    /* Event fired when XMPP error is returned to any request, it is meant to be\\n     * used to report 'signaling' errors to CallStats\\n     *\\n     * {\\n     *   code: {XMPP error code}\\n     *   reason: {XMPP error condition}\\n     *   source = request.tree()\\n     *   session = {JingleSession instance}\\n     * }\\n     */\\n    JINGLE_ERROR: 'xmpp.jingle_error',\\n\\n    // Event fired when we have failed to set initial offer\\n    JINGLE_FATAL_ERROR: 'xmpp.jingle_fatal_error',\\n\\n    // Designates an event indicating that we were kicked from the XMPP MUC.\\n    KICKED: 'xmpp.kicked',\\n\\n    // Designates an event indicating that our role in the XMPP MUC has changed.\\n    LOCAL_ROLE_CHANGED: 'xmpp.localrole_changed',\\n\\n    // Designates an event indicating that an XMPP message in the MUC was\\n    // received.\\n    MESSAGE_RECEIVED: 'xmpp.message_received',\\n\\n    // Designates an event indicating that a private XMPP message in the MUC was\\n    // received.\\n    PRIVATE_MESSAGE_RECEIVED: 'xmpp.private_message_received',\\n\\n    // Designates an event indicating that a bot participant type had changed\\n    MUC_MEMBER_BOT_TYPE_CHANGED: 'xmpp.muc_member_bot_type_changed',\\n\\n    // Designates an event indicating that the XMPP MUC was destroyed.\\n    MUC_DESTROYED: 'xmpp.muc_destroyed',\\n\\n    // Designates an event indicating that we have joined the XMPP MUC.\\n    MUC_JOINED: 'xmpp.muc_joined',\\n\\n    // Designates an event indicating that a participant joined the XMPP MUC.\\n    MUC_MEMBER_JOINED: 'xmpp.muc_member_joined',\\n\\n    // Designates an event indicating that a participant left the XMPP MUC.\\n    MUC_MEMBER_LEFT: 'xmpp.muc_member_left',\\n\\n    // Designates an event indicating that local participant left the muc\\n    MUC_LEFT: 'xmpp.muc_left',\\n\\n    // Designates an event indicating that the MUC role of a participant has\\n    // changed.\\n    MUC_ROLE_CHANGED: 'xmpp.muc_role_changed',\\n\\n    // Designates an event indicating that the MUC has been locked or unlocked.\\n    MUC_LOCK_CHANGED: 'xmpp.muc_lock_changed',\\n\\n    // Designates an event indicating that a participant in the XMPP MUC has\\n    // advertised that they have audio muted (or unmuted).\\n    PARTICIPANT_AUDIO_MUTED: 'xmpp.audio_muted',\\n\\n    // Designates an event indicating that a participant in the XMPP MUC has\\n    // advertised that they have video muted (or unmuted).\\n    PARTICIPANT_VIDEO_MUTED: 'xmpp.video_muted',\\n\\n    // Designates an event indicating that the video type (e.g. 'camera' or\\n    // 'screen') for a participant has changed.\\n    // Note: currently this event fires every time we receive presence from\\n    // someone (regardless of whether or not the \\\"video type\\\" changed).\\n    PARTICIPANT_VIDEO_TYPE_CHANGED: 'xmpp.video_type',\\n\\n    /**\\n     * Indicates that the features of the participant has been changed.\\n     */\\n    PARTCIPANT_FEATURES_CHANGED: 'xmpp.partcipant_features_changed',\\n    PASSWORD_REQUIRED: 'xmpp.password_required',\\n    PEERCONNECTION_READY: 'xmpp.peerconnection_ready',\\n\\n    /**\\n     * Indicates that phone number changed.\\n     */\\n    PHONE_NUMBER_CHANGED: 'conference.phoneNumberChanged',\\n    PRESENCE_RECEIVED: 'xmpp.presence_received',\\n    PRESENCE_STATUS: 'xmpp.presence_status',\\n    PROMPT_FOR_LOGIN: 'xmpp.prompt_for_login',\\n\\n    // xmpp is connected and obtained user media\\n    READY_TO_JOIN: 'xmpp.ready_to_join',\\n\\n    /**\\n     * Indicates that recording state changed.\\n     */\\n    RECORDER_STATE_CHANGED: 'xmpp.recorderStateChanged',\\n\\n    // Designates an event indicating that we received statistics from a\\n    // participant in the MUC.\\n    REMOTE_STATS: 'xmpp.remote_stats',\\n    RESERVATION_ERROR: 'xmpp.room_reservation_error',\\n    ROOM_CONNECT_ERROR: 'xmpp.room_connect_error',\\n    ROOM_CONNECT_NOT_ALLOWED_ERROR: 'xmpp.room_connect_error.not_allowed',\\n    ROOM_JOIN_ERROR: 'xmpp.room_join_error',\\n\\n    /**\\n     * Indicates that max users limit has been reached.\\n     */\\n    ROOM_MAX_USERS_ERROR: 'xmpp.room_max_users_error',\\n\\n    // Designates an event indicating that we sent an XMPP message to the MUC.\\n    SENDING_CHAT_MESSAGE: 'xmpp.sending_chat_message',\\n\\n    // Designates an event indicating that we sent a private XMPP message to\\n    // a specific user of the muc.\\n    SENDING_PRIVATE_CHAT_MESSAGE: 'xmpp.sending_private_chat_message',\\n\\n    /**\\n     * Event fired when we do not get our 'session-accept' acknowledged by\\n     * Jicofo. It most likely means that there is serious problem with our\\n     * connection or XMPP server and we should reload the conference.\\n     *\\n     * We have seen that to happen in BOSH requests race condition when the BOSH\\n     * request table containing the 'session-accept' was discarded by Prosody.\\n     * Jicofo does send the RESULT immediately without any condition, so missing\\n     * packets means that most likely it has never seen our IQ.\\n     */\\n    SESSION_ACCEPT_TIMEOUT: 'xmpp.session_accept_timeout',\\n\\n    /**\\n     * Event fired when speaker stats update message is received.\\n     */\\n    SPEAKER_STATS_RECEIVED: 'xmpp.speaker_stats_received',\\n\\n    // Designates an event indicating that we should join the conference with\\n    // audio and/or video muted.\\n    START_MUTED_FROM_FOCUS: 'xmpp.start_muted_from_focus',\\n\\n    // Designates an event indicating that the subject of the XMPP MUC has\\n    // changed.\\n    SUBJECT_CHANGED: 'xmpp.subject_changed',\\n\\n    // FIXME: how does it belong to XMPP ? - it's detected by the PeerConnection\\n    // suspending detected\\n    SUSPEND_DETECTED: 'xmpp.suspend_detected',\\n\\n    /**\\n     * Notifies for transcription status changes. The event provides the\\n     * following parameters to its listeners:\\n     *\\n     * @param {String} status - The new status.\\n     */\\n    TRANSCRIPTION_STATUS_CHANGED: 'xmpp.transcription_status_changed',\\n\\n    /**\\n     * Event fired when 'transport-info' with new ICE candidates is received.\\n     */\\n    TRANSPORT_INFO: 'xmpp.transportinfo.jingle',\\n\\n    /**\\n     * Indicates that video SIP GW state changed.\\n     *\\n     * @param {VideoSIPGWConstants} status - Any of the following statuses:\\n     * STATUS_BUSY, STATUS_AVAILABLE or STATUS_UNDEFINED.\\n     */\\n    VIDEO_SIP_GW_AVAILABILITY_CHANGED: 'xmpp.videoSIPGWAvailabilityChanged',\\n\\n    /**\\n     * Indicates that video SIP GW Session state changed.\\n     * The statuses are any of the following statuses:\\n     * STATE_ON, STATE_OFF, STATE_PENDING, STATE_RETRYING, STATE_FAILED.\\n     * {@see VideoSIPGWConstants}\\n     *\\n     * @param {options} event - {address, oldState, newState, displayName}.\\n     */\\n    VIDEO_SIP_GW_SESSION_STATE_CHANGED:\\n        'xmpp.videoSIPGWSessionStateChanged',\\n\\n    // Designates an event indicating that the local ICE connection state has\\n    // changed.\\n    ICE_CONNECTION_STATE_CHANGED: 'xmpp.ice_connection_state_changed',\\n\\n    /**\\n     * Event which is emitted when the body in an XMPP message in the MUC\\n     * contains JSON\\n     */\\n    JSON_MESSAGE_RECEIVED: 'xmmp.json_message_received'\\n};\\n\\nmodule.exports = XMPPEvents;\\n\",\"/** File: strophe.js\\n *  A JavaScript library for writing XMPP clients.\\n *\\n *  This library uses either Bidirectional-streams Over Synchronous HTTP (BOSH)\\n *  to emulate a persistent, stateful, two-way connection to an XMPP server or\\n *  alternatively WebSockets.\\n *\\n *  More information on BOSH can be found in XEP 124.\\n *  For more information on XMPP-over WebSocket see this RFC:\\n *  http://tools.ietf.org/html/rfc7395\\n */\\n\\n/* All of the Strophe globals are defined in this special function below so\\n * that references to the globals become closures.  This will ensure that\\n * on page reload, these references will still be available to callbacks\\n * that are still executing.\\n */\\n\\n/* jshint ignore:start */\\n(function (root, factory) {\\n    if (typeof define === 'function' && define.amd) {\\n        //Allow using this built library as an AMD module\\n        //in another project. That other project will only\\n        //see this AMD call, not the internal modules in\\n        //the closure below.\\n        define([], factory);\\n    } else {\\n        //Browser globals case.\\n        var wrapper = factory();\\n        root.Strophe        = wrapper.Strophe;\\n        root.$build         = wrapper.$build;\\n        root.$iq            = wrapper.$iq;\\n        root.$msg           = wrapper.$msg;\\n        root.$pres          = wrapper.$pres;\\n        root.SHA1           = wrapper.SHA1;\\n        root.MD5            = wrapper.MD5;\\n        root.b64_hmac_sha1  = wrapper.b64_hmac_sha1;\\n        root.b64_sha1       = wrapper.b64_sha1;\\n        root.str_hmac_sha1  = wrapper.str_hmac_sha1;\\n        root.str_sha1       = wrapper.str_sha1;\\n    }\\n}(this, function () {\\n    //almond, and your modules will be inlined here\\n/* jshint ignore:end */\\n/**\\n * @license almond 0.3.3 Copyright jQuery Foundation and other contributors.\\n * Released under MIT license, http://github.com/requirejs/almond/LICENSE\\n */\\n//Going sloppy to avoid 'use strict' string cost, but strict practices should\\n//be followed.\\n/*global setTimeout: false */\\n\\nvar requirejs, require, define;\\n(function (undef) {\\n    var main, req, makeMap, handlers,\\n        defined = {},\\n        waiting = {},\\n        config = {},\\n        defining = {},\\n        hasOwn = Object.prototype.hasOwnProperty,\\n        aps = [].slice,\\n        jsSuffixRegExp = /\\\\.js$/;\\n\\n    function hasProp(obj, prop) {\\n        return hasOwn.call(obj, prop);\\n    }\\n\\n    /**\\n     * Given a relative module name, like ./something, normalize it to\\n     * a real name that can be mapped to a path.\\n     * @param {String} name the relative name\\n     * @param {String} baseName a real name that the name arg is relative\\n     * to.\\n     * @returns {String} normalized name\\n     */\\n    function normalize(name, baseName) {\\n        var nameParts, nameSegment, mapValue, foundMap, lastIndex,\\n            foundI, foundStarMap, starI, i, j, part, normalizedBaseParts,\\n            baseParts = baseName && baseName.split(\\\"/\\\"),\\n            map = config.map,\\n            starMap = (map && map['*']) || {};\\n\\n        //Adjust any relative paths.\\n        if (name) {\\n            name = name.split('/');\\n            lastIndex = name.length - 1;\\n\\n            // If wanting node ID compatibility, strip .js from end\\n            // of IDs. Have to do this here, and not in nameToUrl\\n            // because node allows either .js or non .js to map\\n            // to same file.\\n            if (config.nodeIdCompat && jsSuffixRegExp.test(name[lastIndex])) {\\n                name[lastIndex] = name[lastIndex].replace(jsSuffixRegExp, '');\\n            }\\n\\n            // Starts with a '.' so need the baseName\\n            if (name[0].charAt(0) === '.' && baseParts) {\\n                //Convert baseName to array, and lop off the last part,\\n                //so that . matches that 'directory' and not name of the baseName's\\n                //module. For instance, baseName of 'one/two/three', maps to\\n                //'one/two/three.js', but we want the directory, 'one/two' for\\n                //this normalization.\\n                normalizedBaseParts = baseParts.slice(0, baseParts.length - 1);\\n                name = normalizedBaseParts.concat(name);\\n            }\\n\\n            //start trimDots\\n            for (i = 0; i < name.length; i++) {\\n                part = name[i];\\n                if (part === '.') {\\n                    name.splice(i, 1);\\n                    i -= 1;\\n                } else if (part === '..') {\\n                    // If at the start, or previous value is still ..,\\n                    // keep them so that when converted to a path it may\\n                    // still work when converted to a path, even though\\n                    // as an ID it is less than ideal. In larger point\\n                    // releases, may be better to just kick out an error.\\n                    if (i === 0 || (i === 1 && name[2] === '..') || name[i - 1] === '..') {\\n                        continue;\\n                    } else if (i > 0) {\\n                        name.splice(i - 1, 2);\\n                        i -= 2;\\n                    }\\n                }\\n            }\\n            //end trimDots\\n\\n            name = name.join('/');\\n        }\\n\\n        //Apply map config if available.\\n        if ((baseParts || starMap) && map) {\\n            nameParts = name.split('/');\\n\\n            for (i = nameParts.length; i > 0; i -= 1) {\\n                nameSegment = nameParts.slice(0, i).join(\\\"/\\\");\\n\\n                if (baseParts) {\\n                    //Find the longest baseName segment match in the config.\\n                    //So, do joins on the biggest to smallest lengths of baseParts.\\n                    for (j = baseParts.length; j > 0; j -= 1) {\\n                        mapValue = map[baseParts.slice(0, j).join('/')];\\n\\n                        //baseName segment has  config, find if it has one for\\n                        //this name.\\n                        if (mapValue) {\\n                            mapValue = mapValue[nameSegment];\\n                            if (mapValue) {\\n                                //Match, update name to the new value.\\n                                foundMap = mapValue;\\n                                foundI = i;\\n                                break;\\n                            }\\n                        }\\n                    }\\n                }\\n\\n                if (foundMap) {\\n                    break;\\n                }\\n\\n                //Check for a star map match, but just hold on to it,\\n                //if there is a shorter segment match later in a matching\\n                //config, then favor over this star map.\\n                if (!foundStarMap && starMap && starMap[nameSegment]) {\\n                    foundStarMap = starMap[nameSegment];\\n                    starI = i;\\n                }\\n            }\\n\\n            if (!foundMap && foundStarMap) {\\n                foundMap = foundStarMap;\\n                foundI = starI;\\n            }\\n\\n            if (foundMap) {\\n                nameParts.splice(0, foundI, foundMap);\\n                name = nameParts.join('/');\\n            }\\n        }\\n\\n        return name;\\n    }\\n\\n    function makeRequire(relName, forceSync) {\\n        return function () {\\n            //A version of a require function that passes a moduleName\\n            //value for items that may need to\\n            //look up paths relative to the moduleName\\n            var args = aps.call(arguments, 0);\\n\\n            //If first arg is not require('string'), and there is only\\n            //one arg, it is the array form without a callback. Insert\\n            //a null so that the following concat is correct.\\n            if (typeof args[0] !== 'string' && args.length === 1) {\\n                args.push(null);\\n            }\\n            return req.apply(undef, args.concat([relName, forceSync]));\\n        };\\n    }\\n\\n    function makeNormalize(relName) {\\n        return function (name) {\\n            return normalize(name, relName);\\n        };\\n    }\\n\\n    function makeLoad(depName) {\\n        return function (value) {\\n            defined[depName] = value;\\n        };\\n    }\\n\\n    function callDep(name) {\\n        if (hasProp(waiting, name)) {\\n            var args = waiting[name];\\n            delete waiting[name];\\n            defining[name] = true;\\n            main.apply(undef, args);\\n        }\\n\\n        if (!hasProp(defined, name) && !hasProp(defining, name)) {\\n            throw new Error('No ' + name);\\n        }\\n        return defined[name];\\n    }\\n\\n    //Turns a plugin!resource to [plugin, resource]\\n    //with the plugin being undefined if the name\\n    //did not have a plugin prefix.\\n    function splitPrefix(name) {\\n        var prefix,\\n            index = name ? name.indexOf('!') : -1;\\n        if (index > -1) {\\n            prefix = name.substring(0, index);\\n            name = name.substring(index + 1, name.length);\\n        }\\n        return [prefix, name];\\n    }\\n\\n    //Creates a parts array for a relName where first part is plugin ID,\\n    //second part is resource ID. Assumes relName has already been normalized.\\n    function makeRelParts(relName) {\\n        return relName ? splitPrefix(relName) : [];\\n    }\\n\\n    /**\\n     * Makes a name map, normalizing the name, and using a plugin\\n     * for normalization if necessary. Grabs a ref to plugin\\n     * too, as an optimization.\\n     */\\n    makeMap = function (name, relParts) {\\n        var plugin,\\n            parts = splitPrefix(name),\\n            prefix = parts[0],\\n            relResourceName = relParts[1];\\n\\n        name = parts[1];\\n\\n        if (prefix) {\\n            prefix = normalize(prefix, relResourceName);\\n            plugin = callDep(prefix);\\n        }\\n\\n        //Normalize according\\n        if (prefix) {\\n            if (plugin && plugin.normalize) {\\n                name = plugin.normalize(name, makeNormalize(relResourceName));\\n            } else {\\n                name = normalize(name, relResourceName);\\n            }\\n        } else {\\n            name = normalize(name, relResourceName);\\n            parts = splitPrefix(name);\\n            prefix = parts[0];\\n            name = parts[1];\\n            if (prefix) {\\n                plugin = callDep(prefix);\\n            }\\n        }\\n\\n        //Using ridiculous property names for space reasons\\n        return {\\n            f: prefix ? prefix + '!' + name : name, //fullName\\n            n: name,\\n            pr: prefix,\\n            p: plugin\\n        };\\n    };\\n\\n    function makeConfig(name) {\\n        return function () {\\n            return (config && config.config && config.config[name]) || {};\\n        };\\n    }\\n\\n    handlers = {\\n        require: function (name) {\\n            return makeRequire(name);\\n        },\\n        exports: function (name) {\\n            var e = defined[name];\\n            if (typeof e !== 'undefined') {\\n                return e;\\n            } else {\\n                return (defined[name] = {});\\n            }\\n        },\\n        module: function (name) {\\n            return {\\n                id: name,\\n                uri: '',\\n                exports: defined[name],\\n                config: makeConfig(name)\\n            };\\n        }\\n    };\\n\\n    main = function (name, deps, callback, relName) {\\n        var cjsModule, depName, ret, map, i, relParts,\\n            args = [],\\n            callbackType = typeof callback,\\n            usingExports;\\n\\n        //Use name if no relName\\n        relName = relName || name;\\n        relParts = makeRelParts(relName);\\n\\n        //Call the callback to define the module, if necessary.\\n        if (callbackType === 'undefined' || callbackType === 'function') {\\n            //Pull out the defined dependencies and pass the ordered\\n            //values to the callback.\\n            //Default to [require, exports, module] if no deps\\n            deps = !deps.length && callback.length ? ['require', 'exports', 'module'] : deps;\\n            for (i = 0; i < deps.length; i += 1) {\\n                map = makeMap(deps[i], relParts);\\n                depName = map.f;\\n\\n                //Fast path CommonJS standard dependencies.\\n                if (depName === \\\"require\\\") {\\n                    args[i] = handlers.require(name);\\n                } else if (depName === \\\"exports\\\") {\\n                    //CommonJS module spec 1.1\\n                    args[i] = handlers.exports(name);\\n                    usingExports = true;\\n                } else if (depName === \\\"module\\\") {\\n                    //CommonJS module spec 1.1\\n                    cjsModule = args[i] = handlers.module(name);\\n                } else if (hasProp(defined, depName) ||\\n                           hasProp(waiting, depName) ||\\n                           hasProp(defining, depName)) {\\n                    args[i] = callDep(depName);\\n                } else if (map.p) {\\n                    map.p.load(map.n, makeRequire(relName, true), makeLoad(depName), {});\\n                    args[i] = defined[depName];\\n                } else {\\n                    throw new Error(name + ' missing ' + depName);\\n                }\\n            }\\n\\n            ret = callback ? callback.apply(defined[name], args) : undefined;\\n\\n            if (name) {\\n                //If setting exports via \\\"module\\\" is in play,\\n                //favor that over return value and exports. After that,\\n                //favor a non-undefined return value over exports use.\\n                if (cjsModule && cjsModule.exports !== undef &&\\n                        cjsModule.exports !== defined[name]) {\\n                    defined[name] = cjsModule.exports;\\n                } else if (ret !== undef || !usingExports) {\\n                    //Use the return value from the function.\\n                    defined[name] = ret;\\n                }\\n            }\\n        } else if (name) {\\n            //May just be an object definition for the module. Only\\n            //worry about defining if have a module name.\\n            defined[name] = callback;\\n        }\\n    };\\n\\n    requirejs = require = req = function (deps, callback, relName, forceSync, alt) {\\n        if (typeof deps === \\\"string\\\") {\\n            if (handlers[deps]) {\\n                //callback in this case is really relName\\n                return handlers[deps](callback);\\n            }\\n            //Just return the module wanted. In this scenario, the\\n            //deps arg is the module name, and second arg (if passed)\\n            //is just the relName.\\n            //Normalize module name, if it contains . or ..\\n            return callDep(makeMap(deps, makeRelParts(callback)).f);\\n        } else if (!deps.splice) {\\n            //deps is a config object, not an array.\\n            config = deps;\\n            if (config.deps) {\\n                req(config.deps, config.callback);\\n            }\\n            if (!callback) {\\n                return;\\n            }\\n\\n            if (callback.splice) {\\n                //callback is an array, which means it is a dependency list.\\n                //Adjust args if there are dependencies\\n                deps = callback;\\n                callback = relName;\\n                relName = null;\\n            } else {\\n                deps = undef;\\n            }\\n        }\\n\\n        //Support require(['a'])\\n        callback = callback || function () {};\\n\\n        //If relName is a function, it is an errback handler,\\n        //so remove it.\\n        if (typeof relName === 'function') {\\n            relName = forceSync;\\n            forceSync = alt;\\n        }\\n\\n        //Simulate async callback;\\n        if (forceSync) {\\n            main(undef, deps, callback, relName);\\n        } else {\\n            //Using a non-zero value because of concern for what old browsers\\n            //do, and latest browsers \\\"upgrade\\\" to 4 if lower value is used:\\n            //http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#dom-windowtimers-settimeout:\\n            //If want a value immediately, use require('id') instead -- something\\n            //that works in almond on the global level, but not guaranteed and\\n            //unlikely to work in other AMD implementations.\\n            setTimeout(function () {\\n                main(undef, deps, callback, relName);\\n            }, 4);\\n        }\\n\\n        return req;\\n    };\\n\\n    /**\\n     * Just drops the config on the floor, but returns req in case\\n     * the config return value is used.\\n     */\\n    req.config = function (cfg) {\\n        return req(cfg);\\n    };\\n\\n    /**\\n     * Expose module registry for debugging and tooling\\n     */\\n    requirejs._defined = defined;\\n\\n    define = function (name, deps, callback) {\\n        if (typeof name !== 'string') {\\n            throw new Error('See almond README: incorrect module build, no module name');\\n        }\\n\\n        //This module may not have dependencies\\n        if (!deps.splice) {\\n            //deps is not an array, so probably means\\n            //an object literal or factory function for\\n            //the value. Adjust args.\\n            callback = deps;\\n            deps = [];\\n        }\\n\\n        if (!hasProp(defined, name) && !hasProp(waiting, name)) {\\n            waiting[name] = [name, deps, callback];\\n        }\\n    };\\n\\n    define.amd = {\\n        jQuery: true\\n    };\\n}());\\n\\ndefine(\\\"node_modules/almond/almond.js\\\", function(){});\\n\\n/*\\n    This program is distributed under the terms of the MIT license.\\n    Please see the LICENSE file for details.\\n\\n    Copyright 2006-2008, OGG, LLC\\n*/\\n/* jshint undef: true, unused: true:, noarg: true, latedef: true */\\n/* global define */\\n\\n(function (root, factory) {\\n    if (typeof define === 'function' && define.amd) {\\n        define('strophe-polyfill',[], function () {\\n            return factory(root);\\n        });\\n    } else {\\n        // Browser globals\\n        return factory(root);\\n    }\\n}(this, function (root) {\\n\\n/** Function: Function.prototype.bind\\n *  Bind a function to an instance.\\n *\\n *  This Function object extension method creates a bound method similar\\n *  to those in Python.  This means that the 'this' object will point\\n *  to the instance you want.  See <MDC's bind() documentation at https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Function/bind>\\n *  and <Bound Functions and Function Imports in JavaScript at http://benjamin.smedbergs.us/blog/2007-01-03/bound-functions-and-function-imports-in-javascript/>\\n *  for a complete explanation.\\n *\\n *  This extension already exists in some browsers (namely, Firefox 3), but\\n *  we provide it to support those that don't.\\n *\\n *  Parameters:\\n *    (Object) obj - The object that will become 'this' in the bound function.\\n *    (Object) argN - An option argument that will be prepended to the\\n *      arguments given for the function call\\n *\\n *  Returns:\\n *    The bound function.\\n */\\nif (!Function.prototype.bind) {\\n    Function.prototype.bind = function (obj /*, arg1, arg2, ... */) {\\n        var func = this;\\n        var _slice = Array.prototype.slice;\\n        var _concat = Array.prototype.concat;\\n        var _args = _slice.call(arguments, 1);\\n        return function () {\\n            return func.apply(obj ? obj : this, _concat.call(_args, _slice.call(arguments, 0)));\\n        };\\n    };\\n}\\n\\n/** Function: Array.isArray\\n *  This is a polyfill for the ES5 Array.isArray method.\\n */\\nif (!Array.isArray) {\\n    Array.isArray = function(arg) {\\n        return Object.prototype.toString.call(arg) === '[object Array]';\\n    };\\n}\\n\\n/** Function: Array.prototype.indexOf\\n *  Return the index of an object in an array.\\n *\\n *  This function is not supplied by some JavaScript implementations, so\\n *  we provide it if it is missing.  This code is from:\\n *  http://developer.mozilla.org/En/Core_JavaScript_1.5_Reference:Objects:Array:indexOf\\n *\\n *  Parameters:\\n *    (Object) elt - The object to look for.\\n *    (Integer) from - The index from which to start looking. (optional).\\n *\\n *  Returns:\\n *    The index of elt in the array or -1 if not found.\\n */\\nif (!Array.prototype.indexOf) {\\n    Array.prototype.indexOf = function(elt /*, from*/) {\\n        var len = this.length;\\n        var from = Number(arguments[1]) || 0;\\n        from = (from < 0) ? Math.ceil(from) : Math.floor(from);\\n        if (from < 0) {\\n            from += len;\\n        }\\n\\n        for (; from < len; from++) {\\n            if (from in this && this[from] === elt) {\\n                return from;\\n            }\\n        }\\n        return -1;\\n    };\\n}\\n\\n/** Function: Array.prototype.forEach\\n *\\n *  This function is not available in IE < 9\\n *\\n *  See <forEach on developer.mozilla.org at https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach>\\n */\\nif (!Array.prototype.forEach) {\\n    Array.prototype.forEach = function(callback, thisArg) {\\n        var T, k;\\n        if (this === null) {\\n            throw new TypeError(' this is null or not defined');\\n        }\\n        // 1. Let O be the result of calling toObject() passing the\\n        // |this| value as the argument.\\n        var O = Object(this);\\n        // 2. Let lenValue be the result of calling the Get() internal\\n        // method of O with the argument \\\"length\\\".\\n        // 3. Let len be toUint32(lenValue).\\n        var len = O.length >>> 0;\\n        // 4. If isCallable(callback) is false, throw a TypeError exception.\\n        // See: http://es5.github.com/#x9.11\\n        if (typeof callback !== \\\"function\\\") {\\n            throw new TypeError(callback + ' is not a function');\\n        }\\n        // 5. If thisArg was supplied, let T be thisArg; else let\\n        // T be undefined.\\n        if (arguments.length > 1) {\\n            T = thisArg;\\n        }\\n        // 6. Let k be 0\\n        k = 0;\\n        // 7. Repeat, while k < len\\n        while (k < len) {\\n            var kValue;\\n            // a. Let Pk be ToString(k).\\n            //        This is implicit for LHS operands of the in operator\\n            // b. Let kPresent be the result of calling the HasProperty\\n            //        internal method of O with argument Pk.\\n            //        This step can be combined with c\\n            // c. If kPresent is true, then\\n            if (k in O) {\\n                // i. Let kValue be the result of calling the Get internal\\n                // method of O with argument Pk.\\n                kValue = O[k];\\n                // ii. Call the Call internal method of callback with T as\\n                // the this value and argument list containing kValue, k, and O.\\n                callback.call(T, kValue, k, O);\\n            }\\n            // d. Increase k by 1.\\n            k++;\\n        }\\n        // 8. return undefined\\n    };\\n}\\n\\n// This code was written by Tyler Akins and has been placed in the\\n// public domain.  It would be nice if you left this header intact.\\n// Base64 code from Tyler Akins -- http://rumkin.com\\nvar keyStr = \\\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\\\";\\nif (!root.btoa) {\\n    root.btoa = function (input) {\\n        /**\\n         * Encodes a string in base64\\n         * @param {String} input The string to encode in base64.\\n         */\\n        var output = \\\"\\\";\\n        var chr1, chr2, chr3;\\n        var enc1, enc2, enc3, enc4;\\n        var i = 0;\\n        do {\\n            chr1 = input.charCodeAt(i++);\\n            chr2 = input.charCodeAt(i++);\\n            chr3 = input.charCodeAt(i++);\\n\\n            enc1 = chr1 >> 2;\\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\\n            enc4 = chr3 & 63;\\n\\n            if (isNaN(chr2)) {\\n                enc2 = ((chr1 & 3) << 4);\\n                enc3 = enc4 = 64;\\n            } else if (isNaN(chr3)) {\\n                enc4 = 64;\\n            }\\n            output = output + keyStr.charAt(enc1) + keyStr.charAt(enc2) +\\n                keyStr.charAt(enc3) + keyStr.charAt(enc4);\\n        } while (i < input.length);\\n        return output;\\n    };\\n}\\n\\nif (!root.atob) {\\n    root.atob = function (input) {\\n        /**\\n         * Decodes a base64 string.\\n         * @param {String} input The string to decode.\\n         */\\n        var output = \\\"\\\";\\n        var chr1, chr2, chr3;\\n        var enc1, enc2, enc3, enc4;\\n        var i = 0;\\n        // remove all characters that are not A-Z, a-z, 0-9, +, /, or =\\n        input = input.replace(/[^A-Za-z0-9\\\\+\\\\/\\\\=]/g, \\\"\\\");\\n        do {\\n            enc1 = keyStr.indexOf(input.charAt(i++));\\n            enc2 = keyStr.indexOf(input.charAt(i++));\\n            enc3 = keyStr.indexOf(input.charAt(i++));\\n            enc4 = keyStr.indexOf(input.charAt(i++));\\n\\n            chr1 = (enc1 << 2) | (enc2 >> 4);\\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\\n            chr3 = ((enc3 & 3) << 6) | enc4;\\n\\n            output = output + String.fromCharCode(chr1);\\n\\n            if (enc3 !== 64) {\\n                output = output + String.fromCharCode(chr2);\\n            }\\n            if (enc4 !== 64) {\\n                output = output + String.fromCharCode(chr3);\\n            }\\n        } while (i < input.length);\\n        return output;\\n    };\\n}\\n}));\\n\\n/*\\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined\\n * in FIPS PUB 180-1\\n * Version 2.1a Copyright Paul Johnston 2000 - 2002.\\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\\n * Distributed under the BSD License\\n * See http://pajhome.org.uk/crypt/md5 for details.\\n */\\n\\n/* jshint undef: true, unused: true:, noarg: true, latedef: false */\\n/* global define */\\n\\n/* Some functions and variables have been stripped for use with Strophe */\\n\\n(function (root, factory) {\\n    if (typeof define === 'function' && define.amd) {\\n        define('strophe-sha1', [],function () {\\n            return factory();\\n        });\\n    } else if (typeof exports === 'object') {\\n        module.exports = factory();\\n    } else {\\n        // Browser globals\\n        root.SHA1 = factory();\\n    }\\n}(this, function () {\\n\\n/*\\n * Calculate the SHA-1 of an array of big-endian words, and a bit length\\n */\\nfunction core_sha1(x, len)\\n{\\n  /* append padding */\\n  x[len >> 5] |= 0x80 << (24 - len % 32);\\n  x[((len + 64 >> 9) << 4) + 15] = len;\\n\\n  var w = new Array(80);\\n  var a =  1732584193;\\n  var b = -271733879;\\n  var c = -1732584194;\\n  var d =  271733878;\\n  var e = -1009589776;\\n\\n  var i, j, t, olda, oldb, oldc, oldd, olde;\\n  for (i = 0; i < x.length; i += 16)\\n  {\\n    olda = a;\\n    oldb = b;\\n    oldc = c;\\n    oldd = d;\\n    olde = e;\\n\\n    for (j = 0; j < 80; j++)\\n    {\\n      if (j < 16) { w[j] = x[i + j]; }\\n      else { w[j] = rol(w[j-3] ^ w[j-8] ^ w[j-14] ^ w[j-16], 1); }\\n      t = safe_add(safe_add(rol(a, 5), sha1_ft(j, b, c, d)),\\n                       safe_add(safe_add(e, w[j]), sha1_kt(j)));\\n      e = d;\\n      d = c;\\n      c = rol(b, 30);\\n      b = a;\\n      a = t;\\n    }\\n\\n    a = safe_add(a, olda);\\n    b = safe_add(b, oldb);\\n    c = safe_add(c, oldc);\\n    d = safe_add(d, oldd);\\n    e = safe_add(e, olde);\\n  }\\n  return [a, b, c, d, e];\\n}\\n\\n/*\\n * Perform the appropriate triplet combination function for the current\\n * iteration\\n */\\nfunction sha1_ft(t, b, c, d)\\n{\\n  if (t < 20) { return (b & c) | ((~b) & d); }\\n  if (t < 40) { return b ^ c ^ d; }\\n  if (t < 60) { return (b & c) | (b & d) | (c & d); }\\n  return b ^ c ^ d;\\n}\\n\\n/*\\n * Determine the appropriate additive constant for the current iteration\\n */\\nfunction sha1_kt(t)\\n{\\n  return (t < 20) ?  1518500249 : (t < 40) ?  1859775393 :\\n         (t < 60) ? -1894007588 : -899497514;\\n}\\n\\n/*\\n * Calculate the HMAC-SHA1 of a key and some data\\n */\\nfunction core_hmac_sha1(key, data)\\n{\\n  var bkey = str2binb(key);\\n  if (bkey.length > 16) { bkey = core_sha1(bkey, key.length * 8); }\\n\\n  var ipad = new Array(16), opad = new Array(16);\\n  for (var i = 0; i < 16; i++)\\n  {\\n    ipad[i] = bkey[i] ^ 0x36363636;\\n    opad[i] = bkey[i] ^ 0x5C5C5C5C;\\n  }\\n\\n  var hash = core_sha1(ipad.concat(str2binb(data)), 512 + data.length * 8);\\n  return core_sha1(opad.concat(hash), 512 + 160);\\n}\\n\\n/*\\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\\n * to work around bugs in some JS interpreters.\\n */\\nfunction safe_add(x, y)\\n{\\n  var lsw = (x & 0xFFFF) + (y & 0xFFFF);\\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\\n  return (msw << 16) | (lsw & 0xFFFF);\\n}\\n\\n/*\\n * Bitwise rotate a 32-bit number to the left.\\n */\\nfunction rol(num, cnt)\\n{\\n  return (num << cnt) | (num >>> (32 - cnt));\\n}\\n\\n/*\\n * Convert an 8-bit or 16-bit string to an array of big-endian words\\n * In 8-bit function, characters >255 have their hi-byte silently ignored.\\n */\\nfunction str2binb(str)\\n{\\n  var bin = [];\\n  var mask = 255;\\n  for (var i = 0; i < str.length * 8; i += 8)\\n  {\\n    bin[i>>5] |= (str.charCodeAt(i / 8) & mask) << (24 - i%32);\\n  }\\n  return bin;\\n}\\n\\n/*\\n * Convert an array of big-endian words to a string\\n */\\nfunction binb2str(bin)\\n{\\n  var str = \\\"\\\";\\n  var mask = 255;\\n  for (var i = 0; i < bin.length * 32; i += 8)\\n  {\\n    str += String.fromCharCode((bin[i>>5] >>> (24 - i%32)) & mask);\\n  }\\n  return str;\\n}\\n\\n/*\\n * Convert an array of big-endian words to a base-64 string\\n */\\nfunction binb2b64(binarray)\\n{\\n  var tab = \\\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\\\";\\n  var str = \\\"\\\";\\n  var triplet, j;\\n  for (var i = 0; i < binarray.length * 4; i += 3)\\n  {\\n    triplet = (((binarray[i   >> 2] >> 8 * (3 -  i   %4)) & 0xFF) << 16) |\\n              (((binarray[i+1 >> 2] >> 8 * (3 - (i+1)%4)) & 0xFF) << 8 ) |\\n               ((binarray[i+2 >> 2] >> 8 * (3 - (i+2)%4)) & 0xFF);\\n    for (j = 0; j < 4; j++)\\n    {\\n      if (i * 8 + j * 6 > binarray.length * 32) { str += \\\"=\\\"; }\\n      else { str += tab.charAt((triplet >> 6*(3-j)) & 0x3F); }\\n    }\\n  }\\n  return str;\\n}\\n\\n/*\\n * These are the functions you'll usually want to call\\n * They take string arguments and return either hex or base-64 encoded strings\\n */\\nreturn {\\n    b64_hmac_sha1:  function (key, data){ return binb2b64(core_hmac_sha1(key, data)); },\\n    b64_sha1:       function (s) { return binb2b64(core_sha1(str2binb(s),s.length * 8)); },\\n    binb2str:       binb2str,\\n    core_hmac_sha1: core_hmac_sha1,\\n    str_hmac_sha1:  function (key, data){ return binb2str(core_hmac_sha1(key, data)); },\\n    str_sha1:       function (s) { return binb2str(core_sha1(str2binb(s),s.length * 8)); },\\n};\\n}));\\n\\n/*\\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\\n * Digest Algorithm, as defined in RFC 1321.\\n * Version 2.1 Copyright (C) Paul Johnston 1999 - 2002.\\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\\n * Distributed under the BSD License\\n * See http://pajhome.org.uk/crypt/md5 for more info.\\n */\\n/*\\n * Everything that isn't used by Strophe has been stripped here!\\n */\\n\\n(function (root, factory) {\\n    if (typeof define === 'function' && define.amd) {\\n        define('strophe-md5',[], function () {\\n            return factory();\\n        });\\n    } else if (typeof exports === 'object') {\\n        module.exports = factory();\\n    } else {\\n        // Browser globals\\n        root.MD5 = factory();\\n    }\\n}(this, function () {\\n    /*\\n     * Add integers, wrapping at 2^32. This uses 16-bit operations internally\\n     * to work around bugs in some JS interpreters.\\n     */\\n    var safe_add = function (x, y) {\\n        var lsw = (x & 0xFFFF) + (y & 0xFFFF);\\n        var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\\n        return (msw << 16) | (lsw & 0xFFFF);\\n    };\\n\\n    /*\\n     * Bitwise rotate a 32-bit number to the left.\\n     */\\n    var bit_rol = function (num, cnt) {\\n        return (num << cnt) | (num >>> (32 - cnt));\\n    };\\n\\n    /*\\n     * Convert a string to an array of little-endian words\\n     */\\n    var str2binl = function (str) {\\n        var bin = [];\\n        for(var i = 0; i < str.length * 8; i += 8)\\n        {\\n            bin[i>>5] |= (str.charCodeAt(i / 8) & 255) << (i%32);\\n        }\\n        return bin;\\n    };\\n\\n    /*\\n     * Convert an array of little-endian words to a string\\n     */\\n    var binl2str = function (bin) {\\n        var str = \\\"\\\";\\n        for(var i = 0; i < bin.length * 32; i += 8)\\n        {\\n            str += String.fromCharCode((bin[i>>5] >>> (i % 32)) & 255);\\n        }\\n        return str;\\n    };\\n\\n    /*\\n     * Convert an array of little-endian words to a hex string.\\n     */\\n    var binl2hex = function (binarray) {\\n        var hex_tab = \\\"0123456789abcdef\\\";\\n        var str = \\\"\\\";\\n        for(var i = 0; i < binarray.length * 4; i++)\\n        {\\n            str += hex_tab.charAt((binarray[i>>2] >> ((i%4)*8+4)) & 0xF) +\\n                hex_tab.charAt((binarray[i>>2] >> ((i%4)*8  )) & 0xF);\\n        }\\n        return str;\\n    };\\n\\n    /*\\n     * These functions implement the four basic operations the algorithm uses.\\n     */\\n    var md5_cmn = function (q, a, b, x, s, t) {\\n        return safe_add(bit_rol(safe_add(safe_add(a, q),safe_add(x, t)), s),b);\\n    };\\n\\n    var md5_ff = function (a, b, c, d, x, s, t) {\\n        return md5_cmn((b & c) | ((~b) & d), a, b, x, s, t);\\n    };\\n\\n    var md5_gg = function (a, b, c, d, x, s, t) {\\n        return md5_cmn((b & d) | (c & (~d)), a, b, x, s, t);\\n    };\\n\\n    var md5_hh = function (a, b, c, d, x, s, t) {\\n        return md5_cmn(b ^ c ^ d, a, b, x, s, t);\\n    };\\n\\n    var md5_ii = function (a, b, c, d, x, s, t) {\\n        return md5_cmn(c ^ (b | (~d)), a, b, x, s, t);\\n    };\\n\\n    /*\\n     * Calculate the MD5 of an array of little-endian words, and a bit length\\n     */\\n    var core_md5 = function (x, len) {\\n        /* append padding */\\n        x[len >> 5] |= 0x80 << ((len) % 32);\\n        x[(((len + 64) >>> 9) << 4) + 14] = len;\\n\\n        var a =  1732584193;\\n        var b = -271733879;\\n        var c = -1732584194;\\n        var d =  271733878;\\n\\n        var olda, oldb, oldc, oldd;\\n        for (var i = 0; i < x.length; i += 16)\\n        {\\n            olda = a;\\n            oldb = b;\\n            oldc = c;\\n            oldd = d;\\n\\n            a = md5_ff(a, b, c, d, x[i+ 0], 7 , -680876936);\\n            d = md5_ff(d, a, b, c, x[i+ 1], 12, -389564586);\\n            c = md5_ff(c, d, a, b, x[i+ 2], 17,  606105819);\\n            b = md5_ff(b, c, d, a, x[i+ 3], 22, -1044525330);\\n            a = md5_ff(a, b, c, d, x[i+ 4], 7 , -176418897);\\n            d = md5_ff(d, a, b, c, x[i+ 5], 12,  1200080426);\\n            c = md5_ff(c, d, a, b, x[i+ 6], 17, -1473231341);\\n            b = md5_ff(b, c, d, a, x[i+ 7], 22, -45705983);\\n            a = md5_ff(a, b, c, d, x[i+ 8], 7 ,  1770035416);\\n            d = md5_ff(d, a, b, c, x[i+ 9], 12, -1958414417);\\n            c = md5_ff(c, d, a, b, x[i+10], 17, -42063);\\n            b = md5_ff(b, c, d, a, x[i+11], 22, -1990404162);\\n            a = md5_ff(a, b, c, d, x[i+12], 7 ,  1804603682);\\n            d = md5_ff(d, a, b, c, x[i+13], 12, -40341101);\\n            c = md5_ff(c, d, a, b, x[i+14], 17, -1502002290);\\n            b = md5_ff(b, c, d, a, x[i+15], 22,  1236535329);\\n\\n            a = md5_gg(a, b, c, d, x[i+ 1], 5 , -165796510);\\n            d = md5_gg(d, a, b, c, x[i+ 6], 9 , -1069501632);\\n            c = md5_gg(c, d, a, b, x[i+11], 14,  643717713);\\n            b = md5_gg(b, c, d, a, x[i+ 0], 20, -373897302);\\n            a = md5_gg(a, b, c, d, x[i+ 5], 5 , -701558691);\\n            d = md5_gg(d, a, b, c, x[i+10], 9 ,  38016083);\\n            c = md5_gg(c, d, a, b, x[i+15], 14, -660478335);\\n            b = md5_gg(b, c, d, a, x[i+ 4], 20, -405537848);\\n            a = md5_gg(a, b, c, d, x[i+ 9], 5 ,  568446438);\\n            d = md5_gg(d, a, b, c, x[i+14], 9 , -1019803690);\\n            c = md5_gg(c, d, a, b, x[i+ 3], 14, -187363961);\\n            b = md5_gg(b, c, d, a, x[i+ 8], 20,  1163531501);\\n            a = md5_gg(a, b, c, d, x[i+13], 5 , -1444681467);\\n            d = md5_gg(d, a, b, c, x[i+ 2], 9 , -51403784);\\n            c = md5_gg(c, d, a, b, x[i+ 7], 14,  1735328473);\\n            b = md5_gg(b, c, d, a, x[i+12], 20, -1926607734);\\n\\n            a = md5_hh(a, b, c, d, x[i+ 5], 4 , -378558);\\n            d = md5_hh(d, a, b, c, x[i+ 8], 11, -2022574463);\\n            c = md5_hh(c, d, a, b, x[i+11], 16,  1839030562);\\n            b = md5_hh(b, c, d, a, x[i+14], 23, -35309556);\\n            a = md5_hh(a, b, c, d, x[i+ 1], 4 , -1530992060);\\n            d = md5_hh(d, a, b, c, x[i+ 4], 11,  1272893353);\\n            c = md5_hh(c, d, a, b, x[i+ 7], 16, -155497632);\\n            b = md5_hh(b, c, d, a, x[i+10], 23, -1094730640);\\n            a = md5_hh(a, b, c, d, x[i+13], 4 ,  681279174);\\n            d = md5_hh(d, a, b, c, x[i+ 0], 11, -358537222);\\n            c = md5_hh(c, d, a, b, x[i+ 3], 16, -722521979);\\n            b = md5_hh(b, c, d, a, x[i+ 6], 23,  76029189);\\n            a = md5_hh(a, b, c, d, x[i+ 9], 4 , -640364487);\\n            d = md5_hh(d, a, b, c, x[i+12], 11, -421815835);\\n            c = md5_hh(c, d, a, b, x[i+15], 16,  530742520);\\n            b = md5_hh(b, c, d, a, x[i+ 2], 23, -995338651);\\n\\n            a = md5_ii(a, b, c, d, x[i+ 0], 6 , -198630844);\\n            d = md5_ii(d, a, b, c, x[i+ 7], 10,  1126891415);\\n            c = md5_ii(c, d, a, b, x[i+14], 15, -1416354905);\\n            b = md5_ii(b, c, d, a, x[i+ 5], 21, -57434055);\\n            a = md5_ii(a, b, c, d, x[i+12], 6 ,  1700485571);\\n            d = md5_ii(d, a, b, c, x[i+ 3], 10, -1894986606);\\n            c = md5_ii(c, d, a, b, x[i+10], 15, -1051523);\\n            b = md5_ii(b, c, d, a, x[i+ 1], 21, -2054922799);\\n            a = md5_ii(a, b, c, d, x[i+ 8], 6 ,  1873313359);\\n            d = md5_ii(d, a, b, c, x[i+15], 10, -30611744);\\n            c = md5_ii(c, d, a, b, x[i+ 6], 15, -1560198380);\\n            b = md5_ii(b, c, d, a, x[i+13], 21,  1309151649);\\n            a = md5_ii(a, b, c, d, x[i+ 4], 6 , -145523070);\\n            d = md5_ii(d, a, b, c, x[i+11], 10, -1120210379);\\n            c = md5_ii(c, d, a, b, x[i+ 2], 15,  718787259);\\n            b = md5_ii(b, c, d, a, x[i+ 9], 21, -343485551);\\n\\n            a = safe_add(a, olda);\\n            b = safe_add(b, oldb);\\n            c = safe_add(c, oldc);\\n            d = safe_add(d, oldd);\\n        }\\n        return [a, b, c, d];\\n    };\\n\\n    var obj = {\\n        /*\\n         * These are the functions you'll usually want to call.\\n         * They take string arguments and return either hex or base-64 encoded\\n         * strings.\\n         */\\n        hexdigest: function (s) {\\n            return binl2hex(core_md5(str2binl(s), s.length * 8));\\n        },\\n\\n        hash: function (s) {\\n            return binl2str(core_md5(str2binl(s), s.length * 8));\\n        }\\n    };\\n    return obj;\\n}));\\n\\n(function (root, factory) {\\n    if (typeof define === 'function' && define.amd) {\\n        define('strophe-utils',[], function () {\\n            return factory();\\n        });\\n    } else if (typeof exports === 'object') {\\n        module.exports = factory();\\n    } else {\\n        // Browser globals\\n        root.stropheUtils = factory();\\n    }\\n}(this, function () {\\n\\n    var utils = {\\n\\n        utf16to8: function (str) {\\n            var i, c;\\n            var out = \\\"\\\";\\n            var len = str.length;\\n            for (i = 0; i < len; i++) {\\n                c = str.charCodeAt(i);\\n                if ((c >= 0x0000) && (c <= 0x007F)) {\\n                    out += str.charAt(i);\\n                } else if (c > 0x07FF) {\\n                    out += String.fromCharCode(0xE0 | ((c >> 12) & 0x0F));\\n                    out += String.fromCharCode(0x80 | ((c >>  6) & 0x3F));\\n                    out += String.fromCharCode(0x80 | ((c >>  0) & 0x3F));\\n                } else {\\n                    out += String.fromCharCode(0xC0 | ((c >>  6) & 0x1F));\\n                    out += String.fromCharCode(0x80 | ((c >>  0) & 0x3F));\\n                }\\n            }\\n            return out;\\n        },\\n\\n        addCookies: function (cookies) {\\n            /* Parameters:\\n             *  (Object) cookies - either a map of cookie names\\n             *    to string values or to maps of cookie values.\\n             *\\n             * For example:\\n             * { \\\"myCookie\\\": \\\"1234\\\" }\\n             *\\n             * or:\\n             * { \\\"myCookie\\\": {\\n             *      \\\"value\\\": \\\"1234\\\",\\n             *      \\\"domain\\\": \\\".example.org\\\",\\n             *      \\\"path\\\": \\\"/\\\",\\n             *      \\\"expires\\\": expirationDate\\n             *      }\\n             *  }\\n             *\\n             *  These values get passed to Strophe.Connection via\\n             *   options.cookies\\n             */\\n            var cookieName, cookieObj, isObj, cookieValue, expires, domain, path;\\n            for (cookieName in (cookies || {})) {\\n                expires = '';\\n                domain = '';\\n                path = '';\\n                cookieObj = cookies[cookieName];\\n                isObj = typeof cookieObj === \\\"object\\\";\\n                cookieValue = escape(unescape(isObj ? cookieObj.value : cookieObj));\\n                if (isObj) {\\n                    expires = cookieObj.expires ? \\\";expires=\\\"+cookieObj.expires : '';\\n                    domain = cookieObj.domain ? \\\";domain=\\\"+cookieObj.domain : '';\\n                    path = cookieObj.path ? \\\";path=\\\"+cookieObj.path : '';\\n                }\\n                document.cookie =\\n                    cookieName+'='+cookieValue + expires + domain + path;\\n            }\\n        }\\n    };\\n    return utils;\\n}));\\n\\n/*\\n    This program is distributed under the terms of the MIT license.\\n    Please see the LICENSE file for details.\\n\\n    Copyright 2006-2008, OGG, LLC\\n*/\\n\\n/* jshint undef: true, unused: true:, noarg: true, latedef: true */\\n/*global define, document, sessionStorage, setTimeout, clearTimeout, ActiveXObject, DOMParser, btoa, atob */\\n\\n(function (root, factory) {\\n    if (typeof define === 'function' && define.amd) {\\n        define('strophe-core',[\\n            'strophe-sha1',\\n            'strophe-md5',\\n            'strophe-utils'\\n        ], function () {\\n            return factory.apply(this, arguments);\\n        });\\n    }  else if (typeof exports === 'object') {\\n        module.exports = factory(\\n            require('./sha1'),\\n            require('./md5'),\\n            require('./utils')\\n        );\\n    } else {\\n        // Browser globals\\n        var o = factory(root.SHA1, root.MD5, root.stropheUtils);\\n        root.Strophe =        o.Strophe;\\n        root.$build =         o.$build;\\n        root.$iq =            o.$iq;\\n        root.$msg =           o.$msg;\\n        root.$pres =          o.$pres;\\n        root.SHA1 =           o.SHA1;\\n        root.MD5 =            o.MD5;\\n        root.b64_hmac_sha1 =  o.SHA1.b64_hmac_sha1;\\n        root.b64_sha1 =       o.SHA1.b64_sha1;\\n        root.str_hmac_sha1 =  o.SHA1.str_hmac_sha1;\\n        root.str_sha1 =       o.SHA1.str_sha1;\\n    }\\n}(this, function (SHA1, MD5, utils) {\\n\\nvar Strophe;\\n\\n/** Function: $build\\n *  Create a Strophe.Builder.\\n *  This is an alias for 'new Strophe.Builder(name, attrs)'.\\n *\\n *  Parameters:\\n *    (String) name - The root element name.\\n *    (Object) attrs - The attributes for the root element in object notation.\\n *\\n *  Returns:\\n *    A new Strophe.Builder object.\\n */\\nfunction $build(name, attrs) { return new Strophe.Builder(name, attrs); }\\n\\n/** Function: $msg\\n *  Create a Strophe.Builder with a <message/> element as the root.\\n *\\n *  Parameters:\\n *    (Object) attrs - The <message/> element attributes in object notation.\\n *\\n *  Returns:\\n *    A new Strophe.Builder object.\\n */\\nfunction $msg(attrs) { return new Strophe.Builder(\\\"message\\\", attrs); }\\n\\n/** Function: $iq\\n *  Create a Strophe.Builder with an <iq/> element as the root.\\n *\\n *  Parameters:\\n *    (Object) attrs - The <iq/> element attributes in object notation.\\n *\\n *  Returns:\\n *    A new Strophe.Builder object.\\n */\\nfunction $iq(attrs) { return new Strophe.Builder(\\\"iq\\\", attrs); }\\n\\n/** Function: $pres\\n *  Create a Strophe.Builder with a <presence/> element as the root.\\n *\\n *  Parameters:\\n *    (Object) attrs - The <presence/> element attributes in object notation.\\n *\\n *  Returns:\\n *    A new Strophe.Builder object.\\n */\\nfunction $pres(attrs) { return new Strophe.Builder(\\\"presence\\\", attrs); }\\n\\n/** Class: Strophe\\n *  An object container for all Strophe library functions.\\n *\\n *  This class is just a container for all the objects and constants\\n *  used in the library.  It is not meant to be instantiated, but to\\n *  provide a namespace for library objects, constants, and functions.\\n */\\nStrophe = {\\n    /** Constant: VERSION */\\n    VERSION: \\\"1.2.16\\\",\\n\\n    /** Constants: XMPP Namespace Constants\\n     *  Common namespace constants from the XMPP RFCs and XEPs.\\n     *\\n     *  NS.HTTPBIND - HTTP BIND namespace from XEP 124.\\n     *  NS.BOSH - BOSH namespace from XEP 206.\\n     *  NS.CLIENT - Main XMPP client namespace.\\n     *  NS.AUTH - Legacy authentication namespace.\\n     *  NS.ROSTER - Roster operations namespace.\\n     *  NS.PROFILE - Profile namespace.\\n     *  NS.DISCO_INFO - Service discovery info namespace from XEP 30.\\n     *  NS.DISCO_ITEMS - Service discovery items namespace from XEP 30.\\n     *  NS.MUC - Multi-User Chat namespace from XEP 45.\\n     *  NS.SASL - XMPP SASL namespace from RFC 3920.\\n     *  NS.STREAM - XMPP Streams namespace from RFC 3920.\\n     *  NS.BIND - XMPP Binding namespace from RFC 3920.\\n     *  NS.SESSION - XMPP Session namespace from RFC 3920.\\n     *  NS.XHTML_IM - XHTML-IM namespace from XEP 71.\\n     *  NS.XHTML - XHTML body namespace from XEP 71.\\n     */\\n    NS: {\\n        HTTPBIND: \\\"http://jabber.org/protocol/httpbind\\\",\\n        BOSH: \\\"urn:xmpp:xbosh\\\",\\n        CLIENT: \\\"jabber:client\\\",\\n        AUTH: \\\"jabber:iq:auth\\\",\\n        ROSTER: \\\"jabber:iq:roster\\\",\\n        PROFILE: \\\"jabber:iq:profile\\\",\\n        DISCO_INFO: \\\"http://jabber.org/protocol/disco#info\\\",\\n        DISCO_ITEMS: \\\"http://jabber.org/protocol/disco#items\\\",\\n        MUC: \\\"http://jabber.org/protocol/muc\\\",\\n        SASL: \\\"urn:ietf:params:xml:ns:xmpp-sasl\\\",\\n        STREAM: \\\"http://etherx.jabber.org/streams\\\",\\n        FRAMING: \\\"urn:ietf:params:xml:ns:xmpp-framing\\\",\\n        BIND: \\\"urn:ietf:params:xml:ns:xmpp-bind\\\",\\n        SESSION: \\\"urn:ietf:params:xml:ns:xmpp-session\\\",\\n        VERSION: \\\"jabber:iq:version\\\",\\n        STANZAS: \\\"urn:ietf:params:xml:ns:xmpp-stanzas\\\",\\n        XHTML_IM: \\\"http://jabber.org/protocol/xhtml-im\\\",\\n        XHTML: \\\"http://www.w3.org/1999/xhtml\\\"\\n    },\\n\\n    /** Constants: XHTML_IM Namespace\\n     *  contains allowed tags, tag attributes, and css properties.\\n     *  Used in the createHtml function to filter incoming html into the allowed XHTML-IM subset.\\n     *  See http://xmpp.org/extensions/xep-0071.html#profile-summary for the list of recommended\\n     *  allowed tags and their attributes.\\n     */\\n    XHTML: {\\n        tags: ['a','blockquote','br','cite','em','img','li','ol','p','span','strong','ul','body'],\\n        attributes: {\\n            'a':          ['href'],\\n            'blockquote': ['style'],\\n            'br':         [],\\n            'cite':       ['style'],\\n            'em':         [],\\n            'img':        ['src', 'alt', 'style', 'height', 'width'],\\n            'li':         ['style'],\\n            'ol':         ['style'],\\n            'p':          ['style'],\\n            'span':       ['style'],\\n            'strong':     [],\\n            'ul':         ['style'],\\n            'body':       []\\n        },\\n        css: ['background-color','color','font-family','font-size','font-style','font-weight','margin-left','margin-right','text-align','text-decoration'],\\n        /** Function: XHTML.validTag\\n         *\\n         * Utility method to determine whether a tag is allowed\\n         * in the XHTML_IM namespace.\\n         *\\n         * XHTML tag names are case sensitive and must be lower case.\\n         */\\n        validTag: function(tag) {\\n            for (var i = 0; i < Strophe.XHTML.tags.length; i++) {\\n                if (tag === Strophe.XHTML.tags[i]) {\\n                    return true;\\n                }\\n            }\\n            return false;\\n        },\\n        /** Function: XHTML.validAttribute\\n         *\\n         * Utility method to determine whether an attribute is allowed\\n         * as recommended per XEP-0071\\n         *\\n         * XHTML attribute names are case sensitive and must be lower case.\\n         */\\n        validAttribute: function(tag, attribute) {\\n            if (typeof Strophe.XHTML.attributes[tag] !== 'undefined' && Strophe.XHTML.attributes[tag].length > 0) {\\n                for (var i = 0; i < Strophe.XHTML.attributes[tag].length; i++) {\\n                    if (attribute === Strophe.XHTML.attributes[tag][i]) {\\n                        return true;\\n                    }\\n                }\\n            }\\n        return false;\\n        },\\n        validCSS: function(style) {\\n            for (var i = 0; i < Strophe.XHTML.css.length; i++) {\\n                if (style === Strophe.XHTML.css[i]) {\\n                    return true;\\n                }\\n            }\\n            return false;\\n        }\\n    },\\n\\n    /** Constants: Connection Status Constants\\n     *  Connection status constants for use by the connection handler\\n     *  callback.\\n     *\\n     *  Status.ERROR - An error has occurred\\n     *  Status.CONNECTING - The connection is currently being made\\n     *  Status.CONNFAIL - The connection attempt failed\\n     *  Status.AUTHENTICATING - The connection is authenticating\\n     *  Status.AUTHFAIL - The authentication attempt failed\\n     *  Status.CONNECTED - The connection has succeeded\\n     *  Status.DISCONNECTED - The connection has been terminated\\n     *  Status.DISCONNECTING - The connection is currently being terminated\\n     *  Status.ATTACHED - The connection has been attached\\n     *  Status.REDIRECT - The connection has been redirected\\n     *  Status.CONNTIMEOUT - The connection has timed out\\n     */\\n    Status: {\\n        ERROR: 0,\\n        CONNECTING: 1,\\n        CONNFAIL: 2,\\n        AUTHENTICATING: 3,\\n        AUTHFAIL: 4,\\n        CONNECTED: 5,\\n        DISCONNECTED: 6,\\n        DISCONNECTING: 7,\\n        ATTACHED: 8,\\n        REDIRECT: 9,\\n        CONNTIMEOUT: 10\\n    },\\n\\n    ErrorCondition: {\\n        BAD_FORMAT: \\\"bad-format\\\",\\n        CONFLICT: \\\"conflict\\\",\\n        MISSING_JID_NODE: \\\"x-strophe-bad-non-anon-jid\\\",\\n        NO_AUTH_MECH: \\\"no-auth-mech\\\",\\n        UNKNOWN_REASON: \\\"unknown\\\",\\n    },\\n\\n    /** Constants: Log Level Constants\\n     *  Logging level indicators.\\n     *\\n     *  LogLevel.DEBUG - Debug output\\n     *  LogLevel.INFO - Informational output\\n     *  LogLevel.WARN - Warnings\\n     *  LogLevel.ERROR - Errors\\n     *  LogLevel.FATAL - Fatal errors\\n     */\\n    LogLevel: {\\n        DEBUG: 0,\\n        INFO: 1,\\n        WARN: 2,\\n        ERROR: 3,\\n        FATAL: 4\\n    },\\n\\n    /** PrivateConstants: DOM Element Type Constants\\n     *  DOM element types.\\n     *\\n     *  ElementType.NORMAL - Normal element.\\n     *  ElementType.TEXT - Text data element.\\n     *  ElementType.FRAGMENT - XHTML fragment element.\\n     */\\n    ElementType: {\\n        NORMAL: 1,\\n        TEXT: 3,\\n        CDATA: 4,\\n        FRAGMENT: 11\\n    },\\n\\n    /** PrivateConstants: Timeout Values\\n     *  Timeout values for error states.  These values are in seconds.\\n     *  These should not be changed unless you know exactly what you are\\n     *  doing.\\n     *\\n     *  TIMEOUT - Timeout multiplier. A waiting request will be considered\\n     *      failed after Math.floor(TIMEOUT * wait) seconds have elapsed.\\n     *      This defaults to 1.1, and with default wait, 66 seconds.\\n     *  SECONDARY_TIMEOUT - Secondary timeout multiplier. In cases where\\n     *      Strophe can detect early failure, it will consider the request\\n     *      failed if it doesn't return after\\n     *      Math.floor(SECONDARY_TIMEOUT * wait) seconds have elapsed.\\n     *      This defaults to 0.1, and with default wait, 6 seconds.\\n     */\\n    TIMEOUT: 1.1,\\n    SECONDARY_TIMEOUT: 0.1,\\n\\n    /** Function: addNamespace\\n     *  This function is used to extend the current namespaces in\\n     *  Strophe.NS.  It takes a key and a value with the key being the\\n     *  name of the new namespace, with its actual value.\\n     *  For example:\\n     *  Strophe.addNamespace('PUBSUB', \\\"http://jabber.org/protocol/pubsub\\\");\\n     *\\n     *  Parameters:\\n     *    (String) name - The name under which the namespace will be\\n     *      referenced under Strophe.NS\\n     *    (String) value - The actual namespace.\\n     */\\n    addNamespace: function (name, value) {\\n        Strophe.NS[name] = value;\\n    },\\n\\n    /** Function: forEachChild\\n     *  Map a function over some or all child elements of a given element.\\n     *\\n     *  This is a small convenience function for mapping a function over\\n     *  some or all of the children of an element.  If elemName is null, all\\n     *  children will be passed to the function, otherwise only children\\n     *  whose tag names match elemName will be passed.\\n     *\\n     *  Parameters:\\n     *    (XMLElement) elem - The element to operate on.\\n     *    (String) elemName - The child element tag name filter.\\n     *    (Function) func - The function to apply to each child.  This\\n     *      function should take a single argument, a DOM element.\\n     */\\n    forEachChild: function (elem, elemName, func) {\\n        var i, childNode;\\n        for (i = 0; i < elem.childNodes.length; i++) {\\n            childNode = elem.childNodes[i];\\n            if (childNode.nodeType === Strophe.ElementType.NORMAL &&\\n                (!elemName || this.isTagEqual(childNode, elemName))) {\\n                func(childNode);\\n            }\\n        }\\n    },\\n\\n    /** Function: isTagEqual\\n     *  Compare an element's tag name with a string.\\n     *\\n     *  This function is case sensitive.\\n     *\\n     *  Parameters:\\n     *    (XMLElement) el - A DOM element.\\n     *    (String) name - The element name.\\n     *\\n     *  Returns:\\n     *    true if the element's tag name matches _el_, and false\\n     *    otherwise.\\n     */\\n    isTagEqual: function (el, name) {\\n        return el.tagName === name;\\n    },\\n\\n    /** PrivateVariable: _xmlGenerator\\n     *  _Private_ variable that caches a DOM document to\\n     *  generate elements.\\n     */\\n    _xmlGenerator: null,\\n\\n    /** PrivateFunction: _makeGenerator\\n     *  _Private_ function that creates a dummy XML DOM document to serve as\\n     *  an element and text node generator.\\n     */\\n    _makeGenerator: function () {\\n        var doc;\\n        // IE9 does implement createDocument(); however, using it will cause the browser to leak memory on page unload.\\n        // Here, we test for presence of createDocument() plus IE's proprietary documentMode attribute, which would be\\n                // less than 10 in the case of IE9 and below.\\n        if (document.implementation.createDocument === undefined ||\\n                        document.implementation.createDocument && document.documentMode && document.documentMode < 10) {\\n            doc = this._getIEXmlDom();\\n            doc.appendChild(doc.createElement('strophe'));\\n        } else {\\n            doc = document.implementation\\n                .createDocument('jabber:client', 'strophe', null);\\n        }\\n        return doc;\\n    },\\n\\n    /** Function: xmlGenerator\\n     *  Get the DOM document to generate elements.\\n     *\\n     *  Returns:\\n     *    The currently used DOM document.\\n     */\\n    xmlGenerator: function () {\\n        if (!Strophe._xmlGenerator) {\\n            Strophe._xmlGenerator = Strophe._makeGenerator();\\n        }\\n        return Strophe._xmlGenerator;\\n    },\\n\\n    /** PrivateFunction: _getIEXmlDom\\n     *  Gets IE xml doc object\\n     *\\n     *  Returns:\\n     *    A Microsoft XML DOM Object\\n     *  See Also:\\n     *    http://msdn.microsoft.com/en-us/library/ms757837%28VS.85%29.aspx\\n     */\\n    _getIEXmlDom : function() {\\n        var doc = null;\\n        var docStrings = [\\n            \\\"Msxml2.DOMDocument.6.0\\\",\\n            \\\"Msxml2.DOMDocument.5.0\\\",\\n            \\\"Msxml2.DOMDocument.4.0\\\",\\n            \\\"MSXML2.DOMDocument.3.0\\\",\\n            \\\"MSXML2.DOMDocument\\\",\\n            \\\"MSXML.DOMDocument\\\",\\n            \\\"Microsoft.XMLDOM\\\"\\n        ];\\n\\n        for (var d = 0; d < docStrings.length; d++) {\\n            if (doc === null) {\\n                try {\\n                    doc = new ActiveXObject(docStrings[d]);\\n                } catch (e) {\\n                    doc = null;\\n                }\\n            } else {\\n                break;\\n            }\\n        }\\n        return doc;\\n    },\\n\\n    /** Function: xmlElement\\n     *  Create an XML DOM element.\\n     *\\n     *  This function creates an XML DOM element correctly across all\\n     *  implementations. Note that these are not HTML DOM elements, which\\n     *  aren't appropriate for XMPP stanzas.\\n     *\\n     *  Parameters:\\n     *    (String) name - The name for the element.\\n     *    (Array|Object) attrs - An optional array or object containing\\n     *      key/value pairs to use as element attributes. The object should\\n     *      be in the format {'key': 'value'} or {key: 'value'}. The array\\n     *      should have the format [['key1', 'value1'], ['key2', 'value2']].\\n     *    (String) text - The text child data for the element.\\n     *\\n     *  Returns:\\n     *    A new XML DOM element.\\n     */\\n    xmlElement: function (name) {\\n        if (!name) { return null; }\\n\\n        var node = Strophe.xmlGenerator().createElement(name);\\n        // FIXME: this should throw errors if args are the wrong type or\\n        // there are more than two optional args\\n        var a, i, k;\\n        for (a = 1; a < arguments.length; a++) {\\n            var arg = arguments[a];\\n            if (!arg) { continue; }\\n            if (typeof(arg) === \\\"string\\\" ||\\n                typeof(arg) === \\\"number\\\") {\\n                node.appendChild(Strophe.xmlTextNode(arg));\\n            } else if (typeof(arg) === \\\"object\\\" &&\\n                       typeof(arg.sort) === \\\"function\\\") {\\n                for (i = 0; i < arg.length; i++) {\\n                    var attr = arg[i];\\n                    if (typeof(attr) === \\\"object\\\" &&\\n                        typeof(attr.sort) === \\\"function\\\" &&\\n                        attr[1] !== undefined &&\\n                        attr[1] !== null) {\\n                        node.setAttribute(attr[0], attr[1]);\\n                    }\\n                }\\n            } else if (typeof(arg) === \\\"object\\\") {\\n                for (k in arg) {\\n                    if (arg.hasOwnProperty(k)) {\\n                        if (arg[k] !== undefined &&\\n                            arg[k] !== null) {\\n                            node.setAttribute(k, arg[k]);\\n                        }\\n                    }\\n                }\\n            }\\n        }\\n\\n        return node;\\n    },\\n\\n    /*  Function: xmlescape\\n     *  Excapes invalid xml characters.\\n     *\\n     *  Parameters:\\n     *     (String) text - text to escape.\\n     *\\n     *  Returns:\\n     *      Escaped text.\\n     */\\n    xmlescape: function(text) {\\n        text = text.replace(/\\\\&/g, \\\"&amp;\\\");\\n        text = text.replace(/</g,  \\\"&lt;\\\");\\n        text = text.replace(/>/g,  \\\"&gt;\\\");\\n        text = text.replace(/'/g,  \\\"&apos;\\\");\\n        text = text.replace(/\\\"/g,  \\\"&quot;\\\");\\n        return text;\\n    },\\n\\n    /*  Function: xmlunescape\\n    *  Unexcapes invalid xml characters.\\n    *\\n    *  Parameters:\\n    *     (String) text - text to unescape.\\n    *\\n    *  Returns:\\n    *      Unescaped text.\\n    */\\n    xmlunescape: function(text) {\\n        text = text.replace(/\\\\&amp;/g, \\\"&\\\");\\n        text = text.replace(/&lt;/g,  \\\"<\\\");\\n        text = text.replace(/&gt;/g,  \\\">\\\");\\n        text = text.replace(/&apos;/g,  \\\"'\\\");\\n        text = text.replace(/&quot;/g,  \\\"\\\\\\\"\\\");\\n        return text;\\n    },\\n\\n    /** Function: xmlTextNode\\n     *  Creates an XML DOM text node.\\n     *\\n     *  Provides a cross implementation version of document.createTextNode.\\n     *\\n     *  Parameters:\\n     *    (String) text - The content of the text node.\\n     *\\n     *  Returns:\\n     *    A new XML DOM text node.\\n     */\\n    xmlTextNode: function (text) {\\n        return Strophe.xmlGenerator().createTextNode(text);\\n    },\\n\\n    /** Function: xmlHtmlNode\\n     *  Creates an XML DOM html node.\\n     *\\n     *  Parameters:\\n     *    (String) html - The content of the html node.\\n     *\\n     *  Returns:\\n     *    A new XML DOM text node.\\n     */\\n    xmlHtmlNode: function (html) {\\n        var node;\\n        //ensure text is escaped\\n        if (DOMParser) {\\n            var parser = new DOMParser();\\n            node = parser.parseFromString(html, \\\"text/xml\\\");\\n        } else {\\n            node = new ActiveXObject(\\\"Microsoft.XMLDOM\\\");\\n            node.async=\\\"false\\\";\\n            node.loadXML(html);\\n        }\\n        return node;\\n    },\\n\\n    /** Function: getText\\n     *  Get the concatenation of all text children of an element.\\n     *\\n     *  Parameters:\\n     *    (XMLElement) elem - A DOM element.\\n     *\\n     *  Returns:\\n     *    A String with the concatenated text of all text element children.\\n     */\\n    getText: function (elem) {\\n        if (!elem) { return null; }\\n\\n        var str = \\\"\\\";\\n        if (elem.childNodes.length === 0 && elem.nodeType === Strophe.ElementType.TEXT) {\\n            str += elem.nodeValue;\\n        }\\n\\n        for (var i = 0; i < elem.childNodes.length; i++) {\\n            if (elem.childNodes[i].nodeType === Strophe.ElementType.TEXT) {\\n                str += elem.childNodes[i].nodeValue;\\n            }\\n        }\\n\\n        return Strophe.xmlescape(str);\\n    },\\n\\n    /** Function: copyElement\\n     *  Copy an XML DOM element.\\n     *\\n     *  This function copies a DOM element and all its descendants and returns\\n     *  the new copy.\\n     *\\n     *  Parameters:\\n     *    (XMLElement) elem - A DOM element.\\n     *\\n     *  Returns:\\n     *    A new, copied DOM element tree.\\n     */\\n    copyElement: function (elem) {\\n        var i, el;\\n        if (elem.nodeType === Strophe.ElementType.NORMAL) {\\n            el = Strophe.xmlElement(elem.tagName);\\n\\n            for (i = 0; i < elem.attributes.length; i++) {\\n                el.setAttribute(elem.attributes[i].nodeName,\\n                                elem.attributes[i].value);\\n            }\\n\\n            for (i = 0; i < elem.childNodes.length; i++) {\\n                el.appendChild(Strophe.copyElement(elem.childNodes[i]));\\n            }\\n        } else if (elem.nodeType === Strophe.ElementType.TEXT) {\\n            el = Strophe.xmlGenerator().createTextNode(elem.nodeValue);\\n        }\\n        return el;\\n    },\\n\\n\\n    /** Function: createHtml\\n     *  Copy an HTML DOM element into an XML DOM.\\n     *\\n     *  This function copies a DOM element and all its descendants and returns\\n     *  the new copy.\\n     *\\n     *  Parameters:\\n     *    (HTMLElement) elem - A DOM element.\\n     *\\n     *  Returns:\\n     *    A new, copied DOM element tree.\\n     */\\n    createHtml: function (elem) {\\n        var i, el, j, tag, attribute, value, css, cssAttrs, attr, cssName, cssValue;\\n        if (elem.nodeType === Strophe.ElementType.NORMAL) {\\n            tag = elem.nodeName.toLowerCase(); // XHTML tags must be lower case.\\n            if(Strophe.XHTML.validTag(tag)) {\\n                try {\\n                    el = Strophe.xmlElement(tag);\\n                    for(i = 0; i < Strophe.XHTML.attributes[tag].length; i++) {\\n                        attribute = Strophe.XHTML.attributes[tag][i];\\n                        value = elem.getAttribute(attribute);\\n                        if(typeof value === 'undefined' || value === null || value === '' || value === false || value === 0) {\\n                            continue;\\n                        }\\n                        if(attribute === 'style' && typeof value === 'object') {\\n                            if(typeof value.cssText !== 'undefined') {\\n                                value = value.cssText; // we're dealing with IE, need to get CSS out\\n                            }\\n                        }\\n                        // filter out invalid css styles\\n                        if(attribute === 'style') {\\n                            css = [];\\n                            cssAttrs = value.split(';');\\n                            for(j = 0; j < cssAttrs.length; j++) {\\n                                attr = cssAttrs[j].split(':');\\n                                cssName = attr[0].replace(/^\\\\s*/, \\\"\\\").replace(/\\\\s*$/, \\\"\\\").toLowerCase();\\n                                if(Strophe.XHTML.validCSS(cssName)) {\\n                                    cssValue = attr[1].replace(/^\\\\s*/, \\\"\\\").replace(/\\\\s*$/, \\\"\\\");\\n                                    css.push(cssName + ': ' + cssValue);\\n                                }\\n                            }\\n                            if(css.length > 0) {\\n                                value = css.join('; ');\\n                                el.setAttribute(attribute, value);\\n                            }\\n                        } else {\\n                            el.setAttribute(attribute, value);\\n                        }\\n                    }\\n\\n                    for (i = 0; i < elem.childNodes.length; i++) {\\n                        el.appendChild(Strophe.createHtml(elem.childNodes[i]));\\n                    }\\n                } catch(e) { // invalid elements\\n                  el = Strophe.xmlTextNode('');\\n                }\\n            } else {\\n                el = Strophe.xmlGenerator().createDocumentFragment();\\n                for (i = 0; i < elem.childNodes.length; i++) {\\n                    el.appendChild(Strophe.createHtml(elem.childNodes[i]));\\n                }\\n            }\\n        } else if (elem.nodeType === Strophe.ElementType.FRAGMENT) {\\n            el = Strophe.xmlGenerator().createDocumentFragment();\\n            for (i = 0; i < elem.childNodes.length; i++) {\\n                el.appendChild(Strophe.createHtml(elem.childNodes[i]));\\n            }\\n        } else if (elem.nodeType === Strophe.ElementType.TEXT) {\\n            el = Strophe.xmlTextNode(elem.nodeValue);\\n        }\\n        return el;\\n    },\\n\\n    /** Function: escapeNode\\n     *  Escape the node part (also called local part) of a JID.\\n     *\\n     *  Parameters:\\n     *    (String) node - A node (or local part).\\n     *\\n     *  Returns:\\n     *    An escaped node (or local part).\\n     */\\n    escapeNode: function (node) {\\n        if (typeof node !== \\\"string\\\") { return node; }\\n        return node.replace(/^\\\\s+|\\\\s+$/g, '')\\n            .replace(/\\\\\\\\/g,  \\\"\\\\\\\\5c\\\")\\n            .replace(/ /g,   \\\"\\\\\\\\20\\\")\\n            .replace(/\\\\\\\"/g,  \\\"\\\\\\\\22\\\")\\n            .replace(/\\\\&/g,  \\\"\\\\\\\\26\\\")\\n            .replace(/\\\\'/g,  \\\"\\\\\\\\27\\\")\\n            .replace(/\\\\//g,  \\\"\\\\\\\\2f\\\")\\n            .replace(/:/g,   \\\"\\\\\\\\3a\\\")\\n            .replace(/</g,   \\\"\\\\\\\\3c\\\")\\n            .replace(/>/g,   \\\"\\\\\\\\3e\\\")\\n            .replace(/@/g,   \\\"\\\\\\\\40\\\");\\n    },\\n\\n    /** Function: unescapeNode\\n     *  Unescape a node part (also called local part) of a JID.\\n     *\\n     *  Parameters:\\n     *    (String) node - A node (or local part).\\n     *\\n     *  Returns:\\n     *    An unescaped node (or local part).\\n     */\\n    unescapeNode: function (node) {\\n        if (typeof node !== \\\"string\\\") { return node; }\\n        return node.replace(/\\\\\\\\20/g, \\\" \\\")\\n            .replace(/\\\\\\\\22/g, '\\\"')\\n            .replace(/\\\\\\\\26/g, \\\"&\\\")\\n            .replace(/\\\\\\\\27/g, \\\"'\\\")\\n            .replace(/\\\\\\\\2f/g, \\\"/\\\")\\n            .replace(/\\\\\\\\3a/g, \\\":\\\")\\n            .replace(/\\\\\\\\3c/g, \\\"<\\\")\\n            .replace(/\\\\\\\\3e/g, \\\">\\\")\\n            .replace(/\\\\\\\\40/g, \\\"@\\\")\\n            .replace(/\\\\\\\\5c/g, \\\"\\\\\\\\\\\");\\n    },\\n\\n    /** Function: getNodeFromJid\\n     *  Get the node portion of a JID String.\\n     *\\n     *  Parameters:\\n     *    (String) jid - A JID.\\n     *\\n     *  Returns:\\n     *    A String containing the node.\\n     */\\n    getNodeFromJid: function (jid) {\\n        if (jid.indexOf(\\\"@\\\") < 0) { return null; }\\n        return jid.split(\\\"@\\\")[0];\\n    },\\n\\n    /** Function: getDomainFromJid\\n     *  Get the domain portion of a JID String.\\n     *\\n     *  Parameters:\\n     *    (String) jid - A JID.\\n     *\\n     *  Returns:\\n     *    A String containing the domain.\\n     */\\n    getDomainFromJid: function (jid) {\\n        var bare = Strophe.getBareJidFromJid(jid);\\n        if (bare.indexOf(\\\"@\\\") < 0) {\\n            return bare;\\n        } else {\\n            var parts = bare.split(\\\"@\\\");\\n            parts.splice(0, 1);\\n            return parts.join('@');\\n        }\\n    },\\n\\n    /** Function: getResourceFromJid\\n     *  Get the resource portion of a JID String.\\n     *\\n     *  Parameters:\\n     *    (String) jid - A JID.\\n     *\\n     *  Returns:\\n     *    A String containing the resource.\\n     */\\n    getResourceFromJid: function (jid) {\\n        var s = jid.split(\\\"/\\\");\\n        if (s.length < 2) { return null; }\\n        s.splice(0, 1);\\n        return s.join('/');\\n    },\\n\\n    /** Function: getBareJidFromJid\\n     *  Get the bare JID from a JID String.\\n     *\\n     *  Parameters:\\n     *    (String) jid - A JID.\\n     *\\n     *  Returns:\\n     *    A String containing the bare JID.\\n     */\\n    getBareJidFromJid: function (jid) {\\n        return jid ? jid.split(\\\"/\\\")[0] : null;\\n    },\\n\\n    /** PrivateFunction: _handleError\\n     *  _Private_ function that properly logs an error to the console\\n     */\\n    _handleError: function (e) {\\n        if (typeof e.stack !== \\\"undefined\\\") {\\n            Strophe.fatal(e.stack);\\n        }\\n        if (e.sourceURL) {\\n            Strophe.fatal(\\\"error: \\\" + this.handler + \\\" \\\" + e.sourceURL + \\\":\\\" +\\n                          e.line + \\\" - \\\" + e.name + \\\": \\\" + e.message);\\n        } else if (e.fileName) {\\n            Strophe.fatal(\\\"error: \\\" + this.handler + \\\" \\\" +\\n                          e.fileName + \\\":\\\" + e.lineNumber + \\\" - \\\" +\\n                          e.name + \\\": \\\" + e.message);\\n        } else {\\n            Strophe.fatal(\\\"error: \\\" + e.message);\\n        }\\n    },\\n\\n    /** Function: log\\n     *  User overrideable logging function.\\n     *\\n     *  This function is called whenever the Strophe library calls any\\n     *  of the logging functions.  The default implementation of this\\n     *  function logs only fatal errors.  If client code wishes to handle the logging\\n     *  messages, it should override this with\\n     *  > Strophe.log = function (level, msg) {\\n     *  >   (user code here)\\n     *  > };\\n     *\\n     *  Please note that data sent and received over the wire is logged\\n     *  via Strophe.Connection.rawInput() and Strophe.Connection.rawOutput().\\n     *\\n     *  The different levels and their meanings are\\n     *\\n     *    DEBUG - Messages useful for debugging purposes.\\n     *    INFO - Informational messages.  This is mostly information like\\n     *      'disconnect was called' or 'SASL auth succeeded'.\\n     *    WARN - Warnings about potential problems.  This is mostly used\\n     *      to report transient connection errors like request timeouts.\\n     *    ERROR - Some error occurred.\\n     *    FATAL - A non-recoverable fatal error occurred.\\n     *\\n     *  Parameters:\\n     *    (Integer) level - The log level of the log message.  This will\\n     *      be one of the values in Strophe.LogLevel.\\n     *    (String) msg - The log message.\\n     */\\n    log: function (level, msg) {\\n        if (level === this.LogLevel.FATAL &&\\n            typeof window.console === 'object' &&\\n            typeof window.console.error === 'function') {\\n            window.console.error(msg);\\n        }\\n    },\\n\\n    /** Function: debug\\n     *  Log a message at the Strophe.LogLevel.DEBUG level.\\n     *\\n     *  Parameters:\\n     *    (String) msg - The log message.\\n     */\\n    debug: function(msg) {\\n        this.log(this.LogLevel.DEBUG, msg);\\n    },\\n\\n    /** Function: info\\n     *  Log a message at the Strophe.LogLevel.INFO level.\\n     *\\n     *  Parameters:\\n     *    (String) msg - The log message.\\n     */\\n    info: function (msg) {\\n        this.log(this.LogLevel.INFO, msg);\\n    },\\n\\n    /** Function: warn\\n     *  Log a message at the Strophe.LogLevel.WARN level.\\n     *\\n     *  Parameters:\\n     *    (String) msg - The log message.\\n     */\\n    warn: function (msg) {\\n        this.log(this.LogLevel.WARN, msg);\\n    },\\n\\n    /** Function: error\\n     *  Log a message at the Strophe.LogLevel.ERROR level.\\n     *\\n     *  Parameters:\\n     *    (String) msg - The log message.\\n     */\\n    error: function (msg) {\\n        this.log(this.LogLevel.ERROR, msg);\\n    },\\n\\n    /** Function: fatal\\n     *  Log a message at the Strophe.LogLevel.FATAL level.\\n     *\\n     *  Parameters:\\n     *    (String) msg - The log message.\\n     */\\n    fatal: function (msg) {\\n        this.log(this.LogLevel.FATAL, msg);\\n    },\\n\\n    /** Function: serialize\\n     *  Render a DOM element and all descendants to a String.\\n     *\\n     *  Parameters:\\n     *    (XMLElement) elem - A DOM element.\\n     *\\n     *  Returns:\\n     *    The serialized element tree as a String.\\n     */\\n    serialize: function (elem) {\\n        var result;\\n\\n        if (!elem) { return null; }\\n\\n        if (typeof(elem.tree) === \\\"function\\\") {\\n            elem = elem.tree();\\n        }\\n\\n        var nodeName = elem.nodeName;\\n        var i, child;\\n\\n        if (elem.getAttribute(\\\"_realname\\\")) {\\n            nodeName = elem.getAttribute(\\\"_realname\\\");\\n        }\\n\\n        result = \\\"<\\\" + nodeName;\\n        for (i = 0; i < elem.attributes.length; i++) {\\n             if(elem.attributes[i].nodeName !== \\\"_realname\\\") {\\n               result += \\\" \\\" + elem.attributes[i].nodeName +\\n                   \\\"='\\\" + Strophe.xmlescape(elem.attributes[i].value) + \\\"'\\\";\\n             }\\n        }\\n\\n        if (elem.childNodes.length > 0) {\\n            result += \\\">\\\";\\n            for (i = 0; i < elem.childNodes.length; i++) {\\n                child = elem.childNodes[i];\\n                switch( child.nodeType ){\\n                  case Strophe.ElementType.NORMAL:\\n                    // normal element, so recurse\\n                    result += Strophe.serialize(child);\\n                    break;\\n                  case Strophe.ElementType.TEXT:\\n                    // text element to escape values\\n                    result += Strophe.xmlescape(child.nodeValue);\\n                    break;\\n                  case Strophe.ElementType.CDATA:\\n                    // cdata section so don't escape values\\n                    result += \\\"<![CDATA[\\\"+child.nodeValue+\\\"]]>\\\";\\n                }\\n            }\\n            result += \\\"</\\\" + nodeName + \\\">\\\";\\n        } else {\\n            result += \\\"/>\\\";\\n        }\\n\\n        return result;\\n    },\\n\\n    /** PrivateVariable: _requestId\\n     *  _Private_ variable that keeps track of the request ids for\\n     *  connections.\\n     */\\n    _requestId: 0,\\n\\n    /** PrivateVariable: Strophe.connectionPlugins\\n     *  _Private_ variable Used to store plugin names that need\\n     *  initialization on Strophe.Connection construction.\\n     */\\n    _connectionPlugins: {},\\n\\n    /** Function: addConnectionPlugin\\n     *  Extends the Strophe.Connection object with the given plugin.\\n     *\\n     *  Parameters:\\n     *    (String) name - The name of the extension.\\n     *    (Object) ptype - The plugin's prototype.\\n     */\\n    addConnectionPlugin: function (name, ptype) {\\n        Strophe._connectionPlugins[name] = ptype;\\n    }\\n};\\n\\n/** Class: Strophe.Builder\\n *  XML DOM builder.\\n *\\n *  This object provides an interface similar to JQuery but for building\\n *  DOM elements easily and rapidly.  All the functions except for toString()\\n *  and tree() return the object, so calls can be chained.  Here's an\\n *  example using the $iq() builder helper.\\n *  > $iq({to: 'you', from: 'me', type: 'get', id: '1'})\\n *  >     .c('query', {xmlns: 'strophe:example'})\\n *  >     .c('example')\\n *  >     .toString()\\n *\\n *  The above generates this XML fragment\\n *  > <iq to='you' from='me' type='get' id='1'>\\n *  >   <query xmlns='strophe:example'>\\n *  >     <example/>\\n *  >   </query>\\n *  > </iq>\\n *  The corresponding DOM manipulations to get a similar fragment would be\\n *  a lot more tedious and probably involve several helper variables.\\n *\\n *  Since adding children makes new operations operate on the child, up()\\n *  is provided to traverse up the tree.  To add two children, do\\n *  > builder.c('child1', ...).up().c('child2', ...)\\n *  The next operation on the Builder will be relative to the second child.\\n */\\n\\n/** Constructor: Strophe.Builder\\n *  Create a Strophe.Builder object.\\n *\\n *  The attributes should be passed in object notation.  For example\\n *  > var b = new Builder('message', {to: 'you', from: 'me'});\\n *  or\\n *  > var b = new Builder('messsage', {'xml:lang': 'en'});\\n *\\n *  Parameters:\\n *    (String) name - The name of the root element.\\n *    (Object) attrs - The attributes for the root element in object notation.\\n *\\n *  Returns:\\n *    A new Strophe.Builder.\\n */\\nStrophe.Builder = function (name, attrs) {\\n    // Set correct namespace for jabber:client elements\\n    if (name === \\\"presence\\\" || name === \\\"message\\\" || name === \\\"iq\\\") {\\n        if (attrs && !attrs.xmlns) {\\n            attrs.xmlns = Strophe.NS.CLIENT;\\n        } else if (!attrs) {\\n            attrs = {xmlns: Strophe.NS.CLIENT};\\n        }\\n    }\\n\\n    // Holds the tree being built.\\n    this.nodeTree = Strophe.xmlElement(name, attrs);\\n\\n    // Points to the current operation node.\\n    this.node = this.nodeTree;\\n};\\n\\nStrophe.Builder.prototype = {\\n    /** Function: tree\\n     *  Return the DOM tree.\\n     *\\n     *  This function returns the current DOM tree as an element object.  This\\n     *  is suitable for passing to functions like Strophe.Connection.send().\\n     *\\n     *  Returns:\\n     *    The DOM tree as a element object.\\n     */\\n    tree: function () {\\n        return this.nodeTree;\\n    },\\n\\n    /** Function: toString\\n     *  Serialize the DOM tree to a String.\\n     *\\n     *  This function returns a string serialization of the current DOM\\n     *  tree.  It is often used internally to pass data to a\\n     *  Strophe.Request object.\\n     *\\n     *  Returns:\\n     *    The serialized DOM tree in a String.\\n     */\\n    toString: function () {\\n        return Strophe.serialize(this.nodeTree);\\n    },\\n\\n    /** Function: up\\n     *  Make the current parent element the new current element.\\n     *\\n     *  This function is often used after c() to traverse back up the tree.\\n     *  For example, to add two children to the same element\\n     *  > builder.c('child1', {}).up().c('child2', {});\\n     *\\n     *  Returns:\\n     *    The Stophe.Builder object.\\n     */\\n    up: function () {\\n        this.node = this.node.parentNode;\\n        return this;\\n    },\\n\\n    /** Function: root\\n     *  Make the root element the new current element.\\n     *\\n     *  When at a deeply nested element in the tree, this function can be used\\n     *  to jump back to the root of the tree, instead of having to repeatedly\\n     *  call up().\\n     *\\n     *  Returns:\\n     *    The Stophe.Builder object.\\n     */\\n    root: function () {\\n        this.node = this.nodeTree;\\n        return this;\\n    },\\n\\n    /** Function: attrs\\n     *  Add or modify attributes of the current element.\\n     *\\n     *  The attributes should be passed in object notation.  This function\\n     *  does not move the current element pointer.\\n     *\\n     *  Parameters:\\n     *    (Object) moreattrs - The attributes to add/modify in object notation.\\n     *\\n     *  Returns:\\n     *    The Strophe.Builder object.\\n     */\\n    attrs: function (moreattrs) {\\n        for (var k in moreattrs) {\\n            if (moreattrs.hasOwnProperty(k)) {\\n                if (moreattrs[k] === undefined) {\\n                    this.node.removeAttribute(k);\\n                } else {\\n                    this.node.setAttribute(k, moreattrs[k]);\\n                }\\n            }\\n        }\\n        return this;\\n    },\\n\\n    /** Function: c\\n     *  Add a child to the current element and make it the new current\\n     *  element.\\n     *\\n     *  This function moves the current element pointer to the child,\\n     *  unless text is provided.  If you need to add another child, it\\n     *  is necessary to use up() to go back to the parent in the tree.\\n     *\\n     *  Parameters:\\n     *    (String) name - The name of the child.\\n     *    (Object) attrs - The attributes of the child in object notation.\\n     *    (String) text - The text to add to the child.\\n     *\\n     *  Returns:\\n     *    The Strophe.Builder object.\\n     */\\n    c: function (name, attrs, text) {\\n        var child = Strophe.xmlElement(name, attrs, text);\\n        this.node.appendChild(child);\\n        if (typeof text !== \\\"string\\\" && typeof text !==\\\"number\\\") {\\n            this.node = child;\\n        }\\n        return this;\\n    },\\n\\n    /** Function: cnode\\n     *  Add a child to the current element and make it the new current\\n     *  element.\\n     *\\n     *  This function is the same as c() except that instead of using a\\n     *  name and an attributes object to create the child it uses an\\n     *  existing DOM element object.\\n     *\\n     *  Parameters:\\n     *    (XMLElement) elem - A DOM element.\\n     *\\n     *  Returns:\\n     *    The Strophe.Builder object.\\n     */\\n    cnode: function (elem) {\\n        var impNode;\\n        var xmlGen = Strophe.xmlGenerator();\\n        try {\\n            impNode = (xmlGen.importNode !== undefined);\\n        } catch (e) {\\n            impNode = false;\\n        }\\n        var newElem = impNode ?\\n                      xmlGen.importNode(elem, true) :\\n                      Strophe.copyElement(elem);\\n        this.node.appendChild(newElem);\\n        this.node = newElem;\\n        return this;\\n    },\\n\\n    /** Function: t\\n     *  Add a child text element.\\n     *\\n     *  This *does not* make the child the new current element since there\\n     *  are no children of text elements.\\n     *\\n     *  Parameters:\\n     *    (String) text - The text data to append to the current element.\\n     *\\n     *  Returns:\\n     *    The Strophe.Builder object.\\n     */\\n    t: function (text) {\\n        var child = Strophe.xmlTextNode(text);\\n        this.node.appendChild(child);\\n        return this;\\n    },\\n\\n    /** Function: h\\n     *  Replace current element contents with the HTML passed in.\\n     *\\n     *  This *does not* make the child the new current element\\n     *\\n     *  Parameters:\\n     *    (String) html - The html to insert as contents of current element.\\n     *\\n     *  Returns:\\n     *    The Strophe.Builder object.\\n     */\\n    h: function (html) {\\n        var fragment = document.createElement('body');\\n\\n        // force the browser to try and fix any invalid HTML tags\\n        fragment.innerHTML = html;\\n\\n        // copy cleaned html into an xml dom\\n        var xhtml = Strophe.createHtml(fragment);\\n\\n        while(xhtml.childNodes.length > 0) {\\n            this.node.appendChild(xhtml.childNodes[0]);\\n        }\\n        return this;\\n    }\\n};\\n\\n/** PrivateClass: Strophe.Handler\\n *  _Private_ helper class for managing stanza handlers.\\n *\\n *  A Strophe.Handler encapsulates a user provided callback function to be\\n *  executed when matching stanzas are received by the connection.\\n *  Handlers can be either one-off or persistant depending on their\\n *  return value. Returning true will cause a Handler to remain active, and\\n *  returning false will remove the Handler.\\n *\\n *  Users will not use Strophe.Handler objects directly, but instead they\\n *  will use Strophe.Connection.addHandler() and\\n *  Strophe.Connection.deleteHandler().\\n */\\n\\n/** PrivateConstructor: Strophe.Handler\\n *  Create and initialize a new Strophe.Handler.\\n *\\n *  Parameters:\\n *    (Function) handler - A function to be executed when the handler is run.\\n *    (String) ns - The namespace to match.\\n *    (String) name - The element name to match.\\n *    (String) type - The element type to match.\\n *    (String) id - The element id attribute to match.\\n *    (String) from - The element from attribute to match.\\n *    (Object) options - Handler options\\n *\\n *  Returns:\\n *    A new Strophe.Handler object.\\n */\\nStrophe.Handler = function (handler, ns, name, type, id, from, options) {\\n    this.handler = handler;\\n    this.ns = ns;\\n    this.name = name;\\n    this.type = type;\\n    this.id = id;\\n    this.options = options || {'matchBareFromJid': false, 'ignoreNamespaceFragment': false};\\n    // BBB: Maintain backward compatibility with old `matchBare` option\\n    if (this.options.matchBare) {\\n        Strophe.warn('The \\\"matchBare\\\" option is deprecated, use \\\"matchBareFromJid\\\" instead.');\\n        this.options.matchBareFromJid = this.options.matchBare;\\n        delete this.options.matchBare;\\n    }\\n\\n    if (this.options.matchBareFromJid) {\\n        this.from = from ? Strophe.getBareJidFromJid(from) : null;\\n    } else {\\n        this.from = from;\\n    }\\n    // whether the handler is a user handler or a system handler\\n    this.user = true;\\n};\\n\\nStrophe.Handler.prototype = {\\n    /** PrivateFunction: getNamespace\\n     *  Returns the XML namespace attribute on an element.\\n     *  If `ignoreNamespaceFragment` was passed in for this handler, then the\\n     *  URL fragment will be stripped.\\n     *\\n     *  Parameters:\\n     *    (XMLElement) elem - The XML element with the namespace.\\n     *\\n     *  Returns:\\n     *    The namespace, with optionally the fragment stripped.\\n     */\\n    getNamespace: function (elem) {\\n        var elNamespace = elem.getAttribute(\\\"xmlns\\\");\\n        if (elNamespace && this.options.ignoreNamespaceFragment) {\\n            elNamespace = elNamespace.split('#')[0];\\n        }\\n        return elNamespace;\\n    },\\n\\n    /** PrivateFunction: namespaceMatch\\n     *  Tests if a stanza matches the namespace set for this Strophe.Handler.\\n     *\\n     *  Parameters:\\n     *    (XMLElement) elem - The XML element to test.\\n     *\\n     *  Returns:\\n     *    true if the stanza matches and false otherwise.\\n     */\\n    namespaceMatch: function (elem) {\\n        var nsMatch = false;\\n        if (!this.ns) {\\n            return true;\\n        } else {\\n            var that = this;\\n            Strophe.forEachChild(elem, null, function (elem) {\\n                if (that.getNamespace(elem) === that.ns) {\\n                    nsMatch = true;\\n                }\\n            });\\n            nsMatch = nsMatch || this.getNamespace(elem) === this.ns;\\n        }\\n        return nsMatch;\\n    },\\n\\n    /** PrivateFunction: isMatch\\n     *  Tests if a stanza matches the Strophe.Handler.\\n     *\\n     *  Parameters:\\n     *    (XMLElement) elem - The XML element to test.\\n     *\\n     *  Returns:\\n     *    true if the stanza matches and false otherwise.\\n     */\\n    isMatch: function (elem) {\\n        var from = elem.getAttribute('from');\\n        if (this.options.matchBareFromJid) {\\n            from = Strophe.getBareJidFromJid(from);\\n        }\\n        var elem_type = elem.getAttribute(\\\"type\\\");\\n        if (this.namespaceMatch(elem) &&\\n            (!this.name || Strophe.isTagEqual(elem, this.name)) &&\\n            (!this.type || (Array.isArray(this.type) ? this.type.indexOf(elem_type) !== -1 : elem_type === this.type)) &&\\n            (!this.id || elem.getAttribute(\\\"id\\\") === this.id) &&\\n            (!this.from || from === this.from)) {\\n                return true;\\n        }\\n        return false;\\n    },\\n\\n    /** PrivateFunction: run\\n     *  Run the callback on a matching stanza.\\n     *\\n     *  Parameters:\\n     *    (XMLElement) elem - The DOM element that triggered the\\n     *      Strophe.Handler.\\n     *\\n     *  Returns:\\n     *    A boolean indicating if the handler should remain active.\\n     */\\n    run: function (elem) {\\n        var result = null;\\n        try {\\n            result = this.handler(elem);\\n        } catch (e) {\\n            Strophe._handleError(e);\\n            throw e;\\n        }\\n        return result;\\n    },\\n\\n    /** PrivateFunction: toString\\n     *  Get a String representation of the Strophe.Handler object.\\n     *\\n     *  Returns:\\n     *    A String.\\n     */\\n    toString: function () {\\n        return \\\"{Handler: \\\" + this.handler + \\\"(\\\" + this.name + \\\",\\\" +\\n            this.id + \\\",\\\" + this.ns + \\\")}\\\";\\n    }\\n};\\n\\n/** PrivateClass: Strophe.TimedHandler\\n *  _Private_ helper class for managing timed handlers.\\n *\\n *  A Strophe.TimedHandler encapsulates a user provided callback that\\n *  should be called after a certain period of time or at regular\\n *  intervals.  The return value of the callback determines whether the\\n *  Strophe.TimedHandler will continue to fire.\\n *\\n *  Users will not use Strophe.TimedHandler objects directly, but instead\\n *  they will use Strophe.Connection.addTimedHandler() and\\n *  Strophe.Connection.deleteTimedHandler().\\n */\\n\\n/** PrivateConstructor: Strophe.TimedHandler\\n *  Create and initialize a new Strophe.TimedHandler object.\\n *\\n *  Parameters:\\n *    (Integer) period - The number of milliseconds to wait before the\\n *      handler is called.\\n *    (Function) handler - The callback to run when the handler fires.  This\\n *      function should take no arguments.\\n *\\n *  Returns:\\n *    A new Strophe.TimedHandler object.\\n */\\nStrophe.TimedHandler = function (period, handler) {\\n    this.period = period;\\n    this.handler = handler;\\n    this.lastCalled = new Date().getTime();\\n    this.user = true;\\n};\\n\\nStrophe.TimedHandler.prototype = {\\n    /** PrivateFunction: run\\n     *  Run the callback for the Strophe.TimedHandler.\\n     *\\n     *  Returns:\\n     *    true if the Strophe.TimedHandler should be called again, and false\\n     *      otherwise.\\n     */\\n    run: function () {\\n        this.lastCalled = new Date().getTime();\\n        return this.handler();\\n    },\\n\\n    /** PrivateFunction: reset\\n     *  Reset the last called time for the Strophe.TimedHandler.\\n     */\\n    reset: function () {\\n        this.lastCalled = new Date().getTime();\\n    },\\n\\n    /** PrivateFunction: toString\\n     *  Get a string representation of the Strophe.TimedHandler object.\\n     *\\n     *  Returns:\\n     *    The string representation.\\n     */\\n    toString: function () {\\n        return \\\"{TimedHandler: \\\" + this.handler + \\\"(\\\" + this.period +\\\")}\\\";\\n    }\\n};\\n\\n/** Class: Strophe.Connection\\n *  XMPP Connection manager.\\n *\\n *  This class is the main part of Strophe.  It manages a BOSH or websocket\\n *  connection to an XMPP server and dispatches events to the user callbacks\\n *  as data arrives. It supports SASL PLAIN, SASL DIGEST-MD5, SASL SCRAM-SHA1\\n *  and legacy authentication.\\n *\\n *  After creating a Strophe.Connection object, the user will typically\\n *  call connect() with a user supplied callback to handle connection level\\n *  events like authentication failure, disconnection, or connection\\n *  complete.\\n *\\n *  The user will also have several event handlers defined by using\\n *  addHandler() and addTimedHandler().  These will allow the user code to\\n *  respond to interesting stanzas or do something periodically with the\\n *  connection. These handlers will be active once authentication is\\n *  finished.\\n *\\n *  To send data to the connection, use send().\\n */\\n\\n/** Constructor: Strophe.Connection\\n *  Create and initialize a Strophe.Connection object.\\n *\\n *  The transport-protocol for this connection will be chosen automatically\\n *  based on the given service parameter. URLs starting with \\\"ws://\\\" or\\n *  \\\"wss://\\\" will use WebSockets, URLs starting with \\\"http://\\\", \\\"https://\\\"\\n *  or without a protocol will use BOSH.\\n *\\n *  To make Strophe connect to the current host you can leave out the protocol\\n *  and host part and just pass the path, e.g.\\n *\\n *  > var conn = new Strophe.Connection(\\\"/http-bind/\\\");\\n *\\n *  Options common to both Websocket and BOSH:\\n *  ------------------------------------------\\n *\\n *  cookies:\\n *\\n *  The *cookies* option allows you to pass in cookies to be added to the\\n *  document. These cookies will then be included in the BOSH XMLHttpRequest\\n *  or in the websocket connection.\\n *\\n *  The passed in value must be a map of cookie names and string values.\\n *\\n *  > { \\\"myCookie\\\": {\\n *  >     \\\"value\\\": \\\"1234\\\",\\n *  >     \\\"domain\\\": \\\".example.org\\\",\\n *  >     \\\"path\\\": \\\"/\\\",\\n *  >     \\\"expires\\\": expirationDate\\n *  >     }\\n *  > }\\n *\\n *  Note that cookies can't be set in this way for other domains (i.e. cross-domain).\\n *  Those cookies need to be set under those domains, for example they can be\\n *  set server-side by making a XHR call to that domain to ask it to set any\\n *  necessary cookies.\\n *\\n *  mechanisms:\\n *\\n *  The *mechanisms* option allows you to specify the SASL mechanisms that this\\n *  instance of Strophe.Connection (and therefore your XMPP client) will\\n *  support.\\n *\\n *  The value must be an array of objects with Strophe.SASLMechanism\\n *  prototypes.\\n *\\n *  If nothing is specified, then the following mechanisms (and their\\n *  priorities) are registered:\\n *\\n *      SCRAM-SHA1 - 70\\n *      DIGEST-MD5 - 60\\n *      PLAIN - 50\\n *      OAUTH-BEARER - 40\\n *      OAUTH-2 - 30\\n *      ANONYMOUS - 20\\n *      EXTERNAL - 10\\n *\\n *  WebSocket options:\\n *  ------------------\\n *\\n *  If you want to connect to the current host with a WebSocket connection you\\n *  can tell Strophe to use WebSockets through a \\\"protocol\\\" attribute in the\\n *  optional options parameter. Valid values are \\\"ws\\\" for WebSocket and \\\"wss\\\"\\n *  for Secure WebSocket.\\n *  So to connect to \\\"wss://CURRENT_HOSTNAME/xmpp-websocket\\\" you would call\\n *\\n *  > var conn = new Strophe.Connection(\\\"/xmpp-websocket/\\\", {protocol: \\\"wss\\\"});\\n *\\n *  Note that relative URLs _NOT_ starting with a \\\"/\\\" will also include the path\\n *  of the current site.\\n *\\n *  Also because downgrading security is not permitted by browsers, when using\\n *  relative URLs both BOSH and WebSocket connections will use their secure\\n *  variants if the current connection to the site is also secure (https).\\n *\\n *  BOSH options:\\n *  -------------\\n *\\n *  By adding \\\"sync\\\" to the options, you can control if requests will\\n *  be made synchronously or not. The default behaviour is asynchronous.\\n *  If you want to make requests synchronous, make \\\"sync\\\" evaluate to true.\\n *  > var conn = new Strophe.Connection(\\\"/http-bind/\\\", {sync: true});\\n *\\n *  You can also toggle this on an already established connection.\\n *  > conn.options.sync = true;\\n *\\n *  The *customHeaders* option can be used to provide custom HTTP headers to be\\n *  included in the XMLHttpRequests made.\\n *\\n *  The *keepalive* option can be used to instruct Strophe to maintain the\\n *  current BOSH session across interruptions such as webpage reloads.\\n *\\n *  It will do this by caching the sessions tokens in sessionStorage, and when\\n *  \\\"restore\\\" is called it will check whether there are cached tokens with\\n *  which it can resume an existing session.\\n *\\n *  The *withCredentials* option should receive a Boolean value and is used to\\n *  indicate wether cookies should be included in ajax requests (by default\\n *  they're not).\\n *  Set this value to true if you are connecting to a BOSH service\\n *  and for some reason need to send cookies to it.\\n *  In order for this to work cross-domain, the server must also enable\\n *  credentials by setting the Access-Control-Allow-Credentials response header\\n *  to \\\"true\\\". For most usecases however this setting should be false (which\\n *  is the default).\\n *  Additionally, when using Access-Control-Allow-Credentials, the\\n *  Access-Control-Allow-Origin header can't be set to the wildcard \\\"*\\\", but\\n *  instead must be restricted to actual domains.\\n *\\n *  The *contentType* option can be set to change the default Content-Type\\n *  of \\\"text/xml; charset=utf-8\\\", which can be useful to reduce the amount of\\n *  CORS preflight requests that are sent to the server.\\n *\\n *  Parameters:\\n *    (String) service - The BOSH or WebSocket service URL.\\n *    (Object) options - A hash of configuration options\\n *\\n *  Returns:\\n *    A new Strophe.Connection object.\\n */\\nStrophe.Connection = function (service, options) {\\n    // The service URL\\n    this.service = service;\\n    // Configuration options\\n    this.options = options || {};\\n    var proto = this.options.protocol || \\\"\\\";\\n\\n    // Select protocal based on service or options\\n    if (service.indexOf(\\\"ws:\\\") === 0 || service.indexOf(\\\"wss:\\\") === 0 ||\\n            proto.indexOf(\\\"ws\\\") === 0) {\\n        this._proto = new Strophe.Websocket(this);\\n    } else {\\n        this._proto = new Strophe.Bosh(this);\\n    }\\n\\n    /* The connected JID. */\\n    this.jid = \\\"\\\";\\n    /* the JIDs domain */\\n    this.domain = null;\\n    /* stream:features */\\n    this.features = null;\\n\\n    // SASL\\n    this._sasl_data = {};\\n    this.do_session = false;\\n    this.do_bind = false;\\n\\n    // handler lists\\n    this.timedHandlers = [];\\n    this.handlers = [];\\n    this.removeTimeds = [];\\n    this.removeHandlers = [];\\n    this.addTimeds = [];\\n    this.addHandlers = [];\\n    this.protocolErrorHandlers = {\\n        'HTTP': {},\\n        'websocket': {}\\n    };\\n\\n    this._idleTimeout = null;\\n    this._disconnectTimeout = null;\\n\\n    this.authenticated = false;\\n    this.connected = false;\\n    this.disconnecting = false;\\n    this.do_authentication = true;\\n    this.paused = false;\\n    this.restored = false;\\n\\n    this._data = [];\\n    this._uniqueId = 0;\\n\\n    this._sasl_success_handler = null;\\n    this._sasl_failure_handler = null;\\n    this._sasl_challenge_handler = null;\\n\\n    // Max retries before disconnecting\\n    this.maxRetries = 5;\\n\\n    // Call onIdle callback every 1/10th of a second\\n    // XXX: setTimeout should be called only with function expressions (23974bc1)\\n    this._idleTimeout = setTimeout(function() {\\n        this._onIdle();\\n    }.bind(this), 100);\\n\\n    utils.addCookies(this.options.cookies);\\n    this.registerSASLMechanisms(this.options.mechanisms);\\n\\n    // initialize plugins\\n    for (var k in Strophe._connectionPlugins) {\\n        if (Strophe._connectionPlugins.hasOwnProperty(k)) {\\n            var ptype = Strophe._connectionPlugins[k];\\n            // jslint complaints about the below line, but this is fine\\n            var F = function () {}; // jshint ignore:line\\n            F.prototype = ptype;\\n            this[k] = new F();\\n            this[k].init(this);\\n        }\\n    }\\n};\\n\\nStrophe.Connection.prototype = {\\n    /** Function: reset\\n     *  Reset the connection.\\n     *\\n     *  This function should be called after a connection is disconnected\\n     *  before that connection is reused.\\n     */\\n    reset: function () {\\n        this._proto._reset();\\n\\n        // SASL\\n        this.do_session = false;\\n        this.do_bind = false;\\n\\n        // handler lists\\n        this.timedHandlers = [];\\n        this.handlers = [];\\n        this.removeTimeds = [];\\n        this.removeHandlers = [];\\n        this.addTimeds = [];\\n        this.addHandlers = [];\\n\\n        this.authenticated = false;\\n        this.connected = false;\\n        this.disconnecting = false;\\n        this.restored = false;\\n\\n        this._data = [];\\n        this._requests = [];\\n        this._uniqueId = 0;\\n    },\\n\\n    /** Function: pause\\n     *  Pause the request manager.\\n     *\\n     *  This will prevent Strophe from sending any more requests to the\\n     *  server.  This is very useful for temporarily pausing\\n     *  BOSH-Connections while a lot of send() calls are happening quickly.\\n     *  This causes Strophe to send the data in a single request, saving\\n     *  many request trips.\\n     */\\n    pause: function () {\\n        this.paused = true;\\n    },\\n\\n    /** Function: resume\\n     *  Resume the request manager.\\n     *\\n     *  This resumes after pause() has been called.\\n     */\\n    resume: function () {\\n        this.paused = false;\\n    },\\n\\n    /** Function: getUniqueId\\n     *  Generate a unique ID for use in <iq/> elements.\\n     *\\n     *  All <iq/> stanzas are required to have unique id attributes.  This\\n     *  function makes creating these easy.  Each connection instance has\\n     *  a counter which starts from zero, and the value of this counter\\n     *  plus a colon followed by the suffix becomes the unique id. If no\\n     *  suffix is supplied, the counter is used as the unique id.\\n     *\\n     *  Suffixes are used to make debugging easier when reading the stream\\n     *  data, and their use is recommended.  The counter resets to 0 for\\n     *  every new connection for the same reason.  For connections to the\\n     *  same server that authenticate the same way, all the ids should be\\n     *  the same, which makes it easy to see changes.  This is useful for\\n     *  automated testing as well.\\n     *\\n     *  Parameters:\\n     *    (String) suffix - A optional suffix to append to the id.\\n     *\\n     *  Returns:\\n     *    A unique string to be used for the id attribute.\\n     */\\n    getUniqueId: function(suffix) {\\n        var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\\n            var r = Math.random() * 16 | 0,\\n                v = c === 'x' ? r : r & 0x3 | 0x8;\\n            return v.toString(16);\\n        });\\n        if (typeof(suffix) === \\\"string\\\" || typeof(suffix) === \\\"number\\\") {\\n            return uuid + \\\":\\\" + suffix;\\n        } else {\\n            return uuid + \\\"\\\";\\n        }\\n    },\\n\\n    /** Function: addProtocolErrorHandler\\n     *  Register a handler function for when a protocol (websocker or HTTP)\\n     *  error occurs.\\n     *\\n     *  NOTE: Currently only HTTP errors for BOSH requests are handled.\\n     *  Patches that handle websocket errors would be very welcome.\\n     *\\n     *  Parameters:\\n     *    (String) protocol - 'HTTP' or 'websocket'\\n     *    (Integer) status_code - Error status code (e.g 500, 400 or 404)\\n     *    (Function) callback - Function that will fire on Http error\\n     *\\n     *  Example:\\n     *  function onError(err_code){\\n     *    //do stuff\\n     *  }\\n     *\\n     *  var conn = Strophe.connect('http://example.com/http-bind');\\n     *  conn.addProtocolErrorHandler('HTTP', 500, onError);\\n     *  // Triggers HTTP 500 error and onError handler will be called\\n     *  conn.connect('user_jid@incorrect_jabber_host', 'secret', onConnect);\\n     */\\n    addProtocolErrorHandler: function(protocol, status_code, callback){\\n        this.protocolErrorHandlers[protocol][status_code] = callback;\\n    },\\n\\n\\n    /** Function: connect\\n     *  Starts the connection process.\\n     *\\n     *  As the connection process proceeds, the user supplied callback will\\n     *  be triggered multiple times with status updates.  The callback\\n     *  should take two arguments - the status code and the error condition.\\n     *\\n     *  The status code will be one of the values in the Strophe.Status\\n     *  constants.  The error condition will be one of the conditions\\n     *  defined in RFC 3920 or the condition 'strophe-parsererror'.\\n     *\\n     *  The Parameters _wait_, _hold_ and _route_ are optional and only relevant\\n     *  for BOSH connections. Please see XEP 124 for a more detailed explanation\\n     *  of the optional parameters.\\n     *\\n     *  Parameters:\\n     *    (String) jid - The user's JID.  This may be a bare JID,\\n     *      or a full JID.  If a node is not supplied, SASL OAUTHBEARER or\\n     *      SASL ANONYMOUS authentication will be attempted (OAUTHBEARER will\\n     *      process the provided password value as an access token).\\n     *    (String) pass - The user's password.\\n     *    (Function) callback - The connect callback function.\\n     *    (Integer) wait - The optional HTTPBIND wait value.  This is the\\n     *      time the server will wait before returning an empty result for\\n     *      a request.  The default setting of 60 seconds is recommended.\\n     *    (Integer) hold - The optional HTTPBIND hold value.  This is the\\n     *      number of connections the server will hold at one time.  This\\n     *      should almost always be set to 1 (the default).\\n     *    (String) route - The optional route value.\\n     *    (String) authcid - The optional alternative authentication identity\\n     *      (username) if intending to impersonate another user.\\n     *      When using the SASL-EXTERNAL authentication mechanism, for example\\n     *      with client certificates, then the authcid value is used to\\n     *      determine whether an authorization JID (authzid) should be sent to\\n     *      the server. The authzid should not be sent to the server if the\\n     *      authzid and authcid are the same. So to prevent it from being sent\\n     *      (for example when the JID is already contained in the client\\n     *      certificate), set authcid to that same JID. See XEP-178 for more\\n     *      details.\\n     */\\n    connect: function (jid, pass, callback, wait, hold, route, authcid) {\\n        this.jid = jid;\\n        /** Variable: authzid\\n         *  Authorization identity.\\n         */\\n        this.authzid = Strophe.getBareJidFromJid(this.jid);\\n\\n        /** Variable: authcid\\n         *  Authentication identity (User name).\\n         */\\n        this.authcid = authcid || Strophe.getNodeFromJid(this.jid);\\n\\n        /** Variable: pass\\n         *  Authentication identity (User password).\\n         */\\n        this.pass = pass;\\n\\n        /** Variable: servtype\\n         *  Digest MD5 compatibility.\\n         */\\n        this.servtype = \\\"xmpp\\\";\\n\\n        this.connect_callback = callback;\\n        this.disconnecting = false;\\n        this.connected = false;\\n        this.authenticated = false;\\n        this.restored = false;\\n\\n        // parse jid for domain\\n        this.domain = Strophe.getDomainFromJid(this.jid);\\n\\n        this._changeConnectStatus(Strophe.Status.CONNECTING, null);\\n\\n        this._proto._connect(wait, hold, route);\\n    },\\n\\n    /** Function: attach\\n     *  Attach to an already created and authenticated BOSH session.\\n     *\\n     *  This function is provided to allow Strophe to attach to BOSH\\n     *  sessions which have been created externally, perhaps by a Web\\n     *  application.  This is often used to support auto-login type features\\n     *  without putting user credentials into the page.\\n     *\\n     *  Parameters:\\n     *    (String) jid - The full JID that is bound by the session.\\n     *    (String) sid - The SID of the BOSH session.\\n     *    (String) rid - The current RID of the BOSH session.  This RID\\n     *      will be used by the next request.\\n     *    (Function) callback The connect callback function.\\n     *    (Integer) wait - The optional HTTPBIND wait value.  This is the\\n     *      time the server will wait before returning an empty result for\\n     *      a request.  The default setting of 60 seconds is recommended.\\n     *      Other settings will require tweaks to the Strophe.TIMEOUT value.\\n     *    (Integer) hold - The optional HTTPBIND hold value.  This is the\\n     *      number of connections the server will hold at one time.  This\\n     *      should almost always be set to 1 (the default).\\n     *    (Integer) wind - The optional HTTBIND window value.  This is the\\n     *      allowed range of request ids that are valid.  The default is 5.\\n     */\\n    attach: function (jid, sid, rid, callback, wait, hold, wind) {\\n        if (this._proto instanceof Strophe.Bosh) {\\n            this._proto._attach(jid, sid, rid, callback, wait, hold, wind);\\n        } else {\\n            throw {\\n                name: 'StropheSessionError',\\n                message: 'The \\\"attach\\\" method can only be used with a BOSH connection.'\\n            };\\n        }\\n    },\\n\\n    /** Function: restore\\n     *  Attempt to restore a cached BOSH session.\\n     *\\n     *  This function is only useful in conjunction with providing the\\n     *  \\\"keepalive\\\":true option when instantiating a new Strophe.Connection.\\n     *\\n     *  When \\\"keepalive\\\" is set to true, Strophe will cache the BOSH tokens\\n     *  RID (Request ID) and SID (Session ID) and then when this function is\\n     *  called, it will attempt to restore the session from those cached\\n     *  tokens.\\n     *\\n     *  This function must therefore be called instead of connect or attach.\\n     *\\n     *  For an example on how to use it, please see examples/restore.js\\n     *\\n     *  Parameters:\\n     *    (String) jid - The user's JID.  This may be a bare JID or a full JID.\\n     *    (Function) callback - The connect callback function.\\n     *    (Integer) wait - The optional HTTPBIND wait value.  This is the\\n     *      time the server will wait before returning an empty result for\\n     *      a request.  The default setting of 60 seconds is recommended.\\n     *    (Integer) hold - The optional HTTPBIND hold value.  This is the\\n     *      number of connections the server will hold at one time.  This\\n     *      should almost always be set to 1 (the default).\\n     *    (Integer) wind - The optional HTTBIND window value.  This is the\\n     *      allowed range of request ids that are valid.  The default is 5.\\n     */\\n    restore: function (jid, callback, wait, hold, wind) {\\n        if (this._sessionCachingSupported()) {\\n            this._proto._restore(jid, callback, wait, hold, wind);\\n        } else {\\n            throw {\\n                name: 'StropheSessionError',\\n                message: 'The \\\"restore\\\" method can only be used with a BOSH connection.'\\n            };\\n        }\\n    },\\n\\n    /** PrivateFunction: _sessionCachingSupported\\n     * Checks whether sessionStorage and JSON are supported and whether we're\\n     * using BOSH.\\n     */\\n    _sessionCachingSupported: function () {\\n        if (this._proto instanceof Strophe.Bosh) {\\n            if (!JSON) { return false; }\\n            try {\\n                sessionStorage.setItem('_strophe_', '_strophe_');\\n                sessionStorage.removeItem('_strophe_');\\n            } catch (e) {\\n                return false;\\n            }\\n            return true;\\n        }\\n        return false;\\n    },\\n\\n    /** Function: xmlInput\\n     *  User overrideable function that receives XML data coming into the\\n     *  connection.\\n     *\\n     *  The default function does nothing.  User code can override this with\\n     *  > Strophe.Connection.xmlInput = function (elem) {\\n     *  >   (user code)\\n     *  > };\\n     *\\n     *  Due to limitations of current Browsers' XML-Parsers the opening and closing\\n     *  <stream> tag for WebSocket-Connoctions will be passed as selfclosing here.\\n     *\\n     *  BOSH-Connections will have all stanzas wrapped in a <body> tag. See\\n     *  <Strophe.Bosh.strip> if you want to strip this tag.\\n     *\\n     *  Parameters:\\n     *    (XMLElement) elem - The XML data received by the connection.\\n     */\\n    /* jshint unused:false */\\n    xmlInput: function (elem) {\\n        return;\\n    },\\n    /* jshint unused:true */\\n\\n    /** Function: xmlOutput\\n     *  User overrideable function that receives XML data sent to the\\n     *  connection.\\n     *\\n     *  The default function does nothing.  User code can override this with\\n     *  > Strophe.Connection.xmlOutput = function (elem) {\\n     *  >   (user code)\\n     *  > };\\n     *\\n     *  Due to limitations of current Browsers' XML-Parsers the opening and closing\\n     *  <stream> tag for WebSocket-Connoctions will be passed as selfclosing here.\\n     *\\n     *  BOSH-Connections will have all stanzas wrapped in a <body> tag. See\\n     *  <Strophe.Bosh.strip> if you want to strip this tag.\\n     *\\n     *  Parameters:\\n     *    (XMLElement) elem - The XMLdata sent by the connection.\\n     */\\n    /* jshint unused:false */\\n    xmlOutput: function (elem) {\\n        return;\\n    },\\n    /* jshint unused:true */\\n\\n    /** Function: rawInput\\n     *  User overrideable function that receives raw data coming into the\\n     *  connection.\\n     *\\n     *  The default function does nothing.  User code can override this with\\n     *  > Strophe.Connection.rawInput = function (data) {\\n     *  >   (user code)\\n     *  > };\\n     *\\n     *  Parameters:\\n     *    (String) data - The data received by the connection.\\n     */\\n    /* jshint unused:false */\\n    rawInput: function (data) {\\n        return;\\n    },\\n    /* jshint unused:true */\\n\\n    /** Function: rawOutput\\n     *  User overrideable function that receives raw data sent to the\\n     *  connection.\\n     *\\n     *  The default function does nothing.  User code can override this with\\n     *  > Strophe.Connection.rawOutput = function (data) {\\n     *  >   (user code)\\n     *  > };\\n     *\\n     *  Parameters:\\n     *    (String) data - The data sent by the connection.\\n     */\\n    /* jshint unused:false */\\n    rawOutput: function (data) {\\n        return;\\n    },\\n    /* jshint unused:true */\\n\\n    /** Function: nextValidRid\\n     *  User overrideable function that receives the new valid rid.\\n     *\\n     *  The default function does nothing. User code can override this with\\n     *  > Strophe.Connection.nextValidRid = function (rid) {\\n     *  >    (user code)\\n     *  > };\\n     *\\n     *  Parameters:\\n     *    (Number) rid - The next valid rid\\n     */\\n    /* jshint unused:false */\\n    nextValidRid: function (rid) {\\n        return;\\n    },\\n    /* jshint unused:true */\\n\\n    /** Function: send\\n     *  Send a stanza.\\n     *\\n     *  This function is called to push data onto the send queue to\\n     *  go out over the wire.  Whenever a request is sent to the BOSH\\n     *  server, all pending data is sent and the queue is flushed.\\n     *\\n     *  Parameters:\\n     *    (XMLElement |\\n     *     [XMLElement] |\\n     *     Strophe.Builder) elem - The stanza to send.\\n     */\\n    send: function (elem) {\\n        if (elem === null) { return ; }\\n        if (typeof(elem.sort) === \\\"function\\\") {\\n            for (var i = 0; i < elem.length; i++) {\\n                this._queueData(elem[i]);\\n            }\\n        } else if (typeof(elem.tree) === \\\"function\\\") {\\n            this._queueData(elem.tree());\\n        } else {\\n            this._queueData(elem);\\n        }\\n\\n        this._proto._send();\\n    },\\n\\n    /** Function: flush\\n     *  Immediately send any pending outgoing data.\\n     *\\n     *  Normally send() queues outgoing data until the next idle period\\n     *  (100ms), which optimizes network use in the common cases when\\n     *  several send()s are called in succession. flush() can be used to\\n     *  immediately send all pending data.\\n     */\\n    flush: function () {\\n        // cancel the pending idle period and run the idle function\\n        // immediately\\n        clearTimeout(this._idleTimeout);\\n        this._onIdle();\\n    },\\n\\n    /** Function: sendPresence\\n     *  Helper function to send presence stanzas. The main benefit is for\\n     *  sending presence stanzas for which you expect a responding presence\\n     *  stanza with the same id (for example when leaving a chat room).\\n     *\\n     *  Parameters:\\n     *    (XMLElement) elem - The stanza to send.\\n     *    (Function) callback - The callback function for a successful request.\\n     *    (Function) errback - The callback function for a failed or timed\\n     *      out request.  On timeout, the stanza will be null.\\n     *    (Integer) timeout - The time specified in milliseconds for a\\n     *      timeout to occur.\\n     *\\n     *  Returns:\\n     *    The id used to send the presence.\\n     */\\n    sendPresence: function(elem, callback, errback, timeout) {\\n        var timeoutHandler = null;\\n        var that = this;\\n        if (typeof(elem.tree) === \\\"function\\\") {\\n            elem = elem.tree();\\n        }\\n        var id = elem.getAttribute('id');\\n        if (!id) { // inject id if not found\\n            id = this.getUniqueId(\\\"sendPresence\\\");\\n            elem.setAttribute(\\\"id\\\", id);\\n        }\\n\\n        if (typeof callback === \\\"function\\\" || typeof errback === \\\"function\\\") {\\n            var handler = this.addHandler(function (stanza) {\\n                // remove timeout handler if there is one\\n                if (timeoutHandler) {\\n                    that.deleteTimedHandler(timeoutHandler);\\n                }\\n                var type = stanza.getAttribute('type');\\n                if (type === 'error') {\\n                    if (errback) {\\n                        errback(stanza);\\n                    }\\n                } else if (callback) {\\n                    callback(stanza);\\n                }\\n            }, null, 'presence', null, id);\\n\\n            // if timeout specified, set up a timeout handler.\\n            if (timeout) {\\n                timeoutHandler = this.addTimedHandler(timeout, function () {\\n                    // get rid of normal handler\\n                    that.deleteHandler(handler);\\n                    // call errback on timeout with null stanza\\n                    if (errback) {\\n                        errback(null);\\n                    }\\n                    return false;\\n                });\\n            }\\n        }\\n        this.send(elem);\\n        return id;\\n    },\\n\\n    /** Function: sendIQ\\n     *  Helper function to send IQ stanzas.\\n     *\\n     *  Parameters:\\n     *    (XMLElement) elem - The stanza to send.\\n     *    (Function) callback - The callback function for a successful request.\\n     *    (Function) errback - The callback function for a failed or timed\\n     *      out request.  On timeout, the stanza will be null.\\n     *    (Integer) timeout - The time specified in milliseconds for a\\n     *      timeout to occur.\\n     *\\n     *  Returns:\\n     *    The id used to send the IQ.\\n    */\\n    sendIQ: function(elem, callback, errback, timeout) {\\n        var timeoutHandler = null;\\n        var that = this;\\n        if (typeof(elem.tree) === \\\"function\\\") {\\n            elem = elem.tree();\\n        }\\n        var id = elem.getAttribute('id');\\n        if (!id) { // inject id if not found\\n            id = this.getUniqueId(\\\"sendIQ\\\");\\n            elem.setAttribute(\\\"id\\\", id);\\n        }\\n\\n        if (typeof callback === \\\"function\\\" || typeof errback === \\\"function\\\") {\\n            var handler = this.addHandler(function (stanza) {\\n                // remove timeout handler if there is one\\n                if (timeoutHandler) {\\n                    that.deleteTimedHandler(timeoutHandler);\\n                }\\n                var iqtype = stanza.getAttribute('type');\\n                if (iqtype === 'result') {\\n                    if (callback) {\\n                        callback(stanza);\\n                    }\\n                } else if (iqtype === 'error') {\\n                    if (errback) {\\n                        errback(stanza);\\n                    }\\n                } else {\\n                    throw {\\n                        name: \\\"StropheError\\\",\\n                        message: \\\"Got bad IQ type of \\\" + iqtype\\n                    };\\n                }\\n            }, null, 'iq', ['error', 'result'], id);\\n\\n            // if timeout specified, set up a timeout handler.\\n            if (timeout) {\\n                timeoutHandler = this.addTimedHandler(timeout, function () {\\n                    // get rid of normal handler\\n                    that.deleteHandler(handler);\\n                    // call errback on timeout with null stanza\\n                    if (errback) {\\n                        errback(null);\\n                    }\\n                    return false;\\n                });\\n            }\\n        }\\n        this.send(elem);\\n        return id;\\n    },\\n\\n    /** PrivateFunction: _queueData\\n     *  Queue outgoing data for later sending.  Also ensures that the data\\n     *  is a DOMElement.\\n     */\\n    _queueData: function (element) {\\n        if (element === null ||\\n            !element.tagName ||\\n            !element.childNodes) {\\n            throw {\\n                name: \\\"StropheError\\\",\\n                message: \\\"Cannot queue non-DOMElement.\\\"\\n            };\\n        }\\n        this._data.push(element);\\n    },\\n\\n    /** PrivateFunction: _sendRestart\\n     *  Send an xmpp:restart stanza.\\n     */\\n    _sendRestart: function () {\\n        this._data.push(\\\"restart\\\");\\n        this._proto._sendRestart();\\n        // XXX: setTimeout should be called only with function expressions (23974bc1)\\n        this._idleTimeout = setTimeout(function() {\\n            this._onIdle();\\n        }.bind(this), 100);\\n    },\\n\\n    /** Function: addTimedHandler\\n     *  Add a timed handler to the connection.\\n     *\\n     *  This function adds a timed handler.  The provided handler will\\n     *  be called every period milliseconds until it returns false,\\n     *  the connection is terminated, or the handler is removed.  Handlers\\n     *  that wish to continue being invoked should return true.\\n     *\\n     *  Because of method binding it is necessary to save the result of\\n     *  this function if you wish to remove a handler with\\n     *  deleteTimedHandler().\\n     *\\n     *  Note that user handlers are not active until authentication is\\n     *  successful.\\n     *\\n     *  Parameters:\\n     *    (Integer) period - The period of the handler.\\n     *    (Function) handler - The callback function.\\n     *\\n     *  Returns:\\n     *    A reference to the handler that can be used to remove it.\\n     */\\n    addTimedHandler: function (period, handler) {\\n        var thand = new Strophe.TimedHandler(period, handler);\\n        this.addTimeds.push(thand);\\n        return thand;\\n    },\\n\\n    /** Function: deleteTimedHandler\\n     *  Delete a timed handler for a connection.\\n     *\\n     *  This function removes a timed handler from the connection.  The\\n     *  handRef parameter is *not* the function passed to addTimedHandler(),\\n     *  but is the reference returned from addTimedHandler().\\n     *\\n     *  Parameters:\\n     *    (Strophe.TimedHandler) handRef - The handler reference.\\n     */\\n    deleteTimedHandler: function (handRef) {\\n        // this must be done in the Idle loop so that we don't change\\n        // the handlers during iteration\\n        this.removeTimeds.push(handRef);\\n    },\\n\\n    /** Function: addHandler\\n     *  Add a stanza handler for the connection.\\n     *\\n     *  This function adds a stanza handler to the connection.  The\\n     *  handler callback will be called for any stanza that matches\\n     *  the parameters.  Note that if multiple parameters are supplied,\\n     *  they must all match for the handler to be invoked.\\n     *\\n     *  The handler will receive the stanza that triggered it as its argument.\\n     *  *The handler should return true if it is to be invoked again;\\n     *  returning false will remove the handler after it returns.*\\n     *\\n     *  As a convenience, the ns parameters applies to the top level element\\n     *  and also any of its immediate children.  This is primarily to make\\n     *  matching /iq/query elements easy.\\n     *\\n     *  Options\\n     *  ~~~~~~~\\n     *  With the options argument, you can specify boolean flags that affect how\\n     *  matches are being done.\\n     *\\n     *  Currently two flags exist:\\n     *\\n     *  - matchBareFromJid:\\n     *      When set to true, the from parameter and the\\n     *      from attribute on the stanza will be matched as bare JIDs instead\\n     *      of full JIDs. To use this, pass {matchBareFromJid: true} as the\\n     *      value of options. The default value for matchBareFromJid is false.\\n     *\\n     *  - ignoreNamespaceFragment:\\n     *      When set to true, a fragment specified on the stanza's namespace\\n     *      URL will be ignored when it's matched with the one configured for\\n     *      the handler.\\n     *\\n     *      This means that if you register like this:\\n     *      >   connection.addHandler(\\n     *      >       handler,\\n     *      >       'http://jabber.org/protocol/muc',\\n     *      >       null, null, null, null,\\n     *      >       {'ignoreNamespaceFragment': true}\\n     *      >   );\\n     *\\n     *      Then a stanza with XML namespace of\\n     *      'http://jabber.org/protocol/muc#user' will also be matched. If\\n     *      'ignoreNamespaceFragment' is false, then only stanzas with\\n     *      'http://jabber.org/protocol/muc' will be matched.\\n     *\\n     *  Deleting the handler\\n     *  ~~~~~~~~~~~~~~~~~~~~\\n     *  The return value should be saved if you wish to remove the handler\\n     *  with deleteHandler().\\n     *\\n     *  Parameters:\\n     *    (Function) handler - The user callback.\\n     *    (String) ns - The namespace to match.\\n     *    (String) name - The stanza name to match.\\n     *    (String|Array) type - The stanza type (or types if an array) to match.\\n     *    (String) id - The stanza id attribute to match.\\n     *    (String) from - The stanza from attribute to match.\\n     *    (String) options - The handler options\\n     *\\n     *  Returns:\\n     *    A reference to the handler that can be used to remove it.\\n     */\\n    addHandler: function (handler, ns, name, type, id, from, options) {\\n        var hand = new Strophe.Handler(handler, ns, name, type, id, from, options);\\n        this.addHandlers.push(hand);\\n        return hand;\\n    },\\n\\n    /** Function: deleteHandler\\n     *  Delete a stanza handler for a connection.\\n     *\\n     *  This function removes a stanza handler from the connection.  The\\n     *  handRef parameter is *not* the function passed to addHandler(),\\n     *  but is the reference returned from addHandler().\\n     *\\n     *  Parameters:\\n     *    (Strophe.Handler) handRef - The handler reference.\\n     */\\n    deleteHandler: function (handRef) {\\n        // this must be done in the Idle loop so that we don't change\\n        // the handlers during iteration\\n        this.removeHandlers.push(handRef);\\n        // If a handler is being deleted while it is being added,\\n        // prevent it from getting added\\n        var i = this.addHandlers.indexOf(handRef);\\n        if (i >= 0) {\\n            this.addHandlers.splice(i, 1);\\n        }\\n    },\\n\\n    /** Function: registerSASLMechanisms\\n     *\\n     * Register the SASL mechanisms which will be supported by this instance of\\n     * Strophe.Connection (i.e. which this XMPP client will support).\\n     *\\n     *  Parameters:\\n     *    (Array) mechanisms - Array of objects with Strophe.SASLMechanism prototypes\\n     *\\n     */\\n    registerSASLMechanisms: function (mechanisms) {\\n        this.mechanisms = {};\\n        mechanisms = mechanisms || [\\n            Strophe.SASLAnonymous,\\n            Strophe.SASLExternal,\\n            Strophe.SASLMD5,\\n            Strophe.SASLOAuthBearer,\\n            Strophe.SASLXOAuth2,\\n            Strophe.SASLPlain,\\n            Strophe.SASLSHA1\\n        ];\\n        mechanisms.forEach(this.registerSASLMechanism.bind(this));\\n    },\\n\\n    /** Function: registerSASLMechanism\\n     *\\n     * Register a single SASL mechanism, to be supported by this client.\\n     *\\n     *  Parameters:\\n     *    (Object) mechanism - Object with a Strophe.SASLMechanism prototype\\n     *\\n     */\\n    registerSASLMechanism: function (mechanism) {\\n        this.mechanisms[mechanism.prototype.name] = mechanism;\\n    },\\n\\n    /** Function: disconnect\\n     *  Start the graceful disconnection process.\\n     *\\n     *  This function starts the disconnection process.  This process starts\\n     *  by sending unavailable presence and sending BOSH body of type\\n     *  terminate.  A timeout handler makes sure that disconnection happens\\n     *  even if the BOSH server does not respond.\\n     *  If the Connection object isn't connected, at least tries to abort all pending requests\\n     *  so the connection object won't generate successful requests (which were already opened).\\n     *\\n     *  The user supplied connection callback will be notified of the\\n     *  progress as this process happens.\\n     *\\n     *  Parameters:\\n     *    (String) reason - The reason the disconnect is occuring.\\n     */\\n    disconnect: function (reason) {\\n        this._changeConnectStatus(Strophe.Status.DISCONNECTING, reason);\\n\\n        Strophe.info(\\\"Disconnect was called because: \\\" + reason);\\n        if (this.connected) {\\n            var pres = false;\\n            this.disconnecting = true;\\n            if (this.authenticated) {\\n                pres = $pres({\\n                    xmlns: Strophe.NS.CLIENT,\\n                    type: 'unavailable'\\n                });\\n            }\\n            // setup timeout handler\\n            this._disconnectTimeout = this._addSysTimedHandler(\\n                3000, this._onDisconnectTimeout.bind(this));\\n            this._proto._disconnect(pres);\\n        } else {\\n            Strophe.info(\\\"Disconnect was called before Strophe connected to the server\\\");\\n            this._proto._abortAllRequests();\\n            this._doDisconnect();\\n        }\\n    },\\n\\n    /** PrivateFunction: _changeConnectStatus\\n     *  _Private_ helper function that makes sure plugins and the user's\\n     *  callback are notified of connection status changes.\\n     *\\n     *  Parameters:\\n     *    (Integer) status - the new connection status, one of the values\\n     *      in Strophe.Status\\n     *    (String) condition - the error condition or null\\n     *    (XMLElement) elem - The triggering stanza.\\n     */\\n    _changeConnectStatus: function (status, condition, elem) {\\n        // notify all plugins listening for status changes\\n        for (var k in Strophe._connectionPlugins) {\\n            if (Strophe._connectionPlugins.hasOwnProperty(k)) {\\n                var plugin = this[k];\\n                if (plugin.statusChanged) {\\n                    try {\\n                        plugin.statusChanged(status, condition);\\n                    } catch (err) {\\n                        Strophe.error(\\\"\\\" + k + \\\" plugin caused an exception \\\" +\\n                                      \\\"changing status: \\\" + err);\\n                    }\\n                }\\n            }\\n        }\\n\\n        // notify the user's callback\\n        if (this.connect_callback) {\\n            try {\\n                this.connect_callback(status, condition, elem);\\n            } catch (e) {\\n                Strophe._handleError(e);\\n                Strophe.error(\\n                    \\\"User connection callback caused an \\\"+\\\"exception: \\\"+e);\\n            }\\n        }\\n    },\\n\\n    /** PrivateFunction: _doDisconnect\\n     *  _Private_ function to disconnect.\\n     *\\n     *  This is the last piece of the disconnection logic.  This resets the\\n     *  connection and alerts the user's connection callback.\\n     */\\n    _doDisconnect: function (condition) {\\n        if (typeof this._idleTimeout === \\\"number\\\") {\\n            clearTimeout(this._idleTimeout);\\n        }\\n\\n        // Cancel Disconnect Timeout\\n        if (this._disconnectTimeout !== null) {\\n            this.deleteTimedHandler(this._disconnectTimeout);\\n            this._disconnectTimeout = null;\\n        }\\n\\n        Strophe.info(\\\"_doDisconnect was called\\\");\\n        this._proto._doDisconnect();\\n\\n        this.authenticated = false;\\n        this.disconnecting = false;\\n        this.restored = false;\\n\\n        // delete handlers\\n        this.handlers = [];\\n        this.timedHandlers = [];\\n        this.removeTimeds = [];\\n        this.removeHandlers = [];\\n        this.addTimeds = [];\\n        this.addHandlers = [];\\n\\n        // tell the parent we disconnected\\n        this._changeConnectStatus(Strophe.Status.DISCONNECTED, condition);\\n        this.connected = false;\\n    },\\n\\n    /** PrivateFunction: _dataRecv\\n     *  _Private_ handler to processes incoming data from the the connection.\\n     *\\n     *  Except for _connect_cb handling the initial connection request,\\n     *  this function handles the incoming data for all requests.  This\\n     *  function also fires stanza handlers that match each incoming\\n     *  stanza.\\n     *\\n     *  Parameters:\\n     *    (Strophe.Request) req - The request that has data ready.\\n     *    (string) req - The stanza a raw string (optiona).\\n     */\\n    _dataRecv: function (req, raw) {\\n        Strophe.info(\\\"_dataRecv called\\\");\\n        var elem = this._proto._reqToData(req);\\n        if (elem === null) { return; }\\n\\n        if (this.xmlInput !== Strophe.Connection.prototype.xmlInput) {\\n            if (elem.nodeName === this._proto.strip && elem.childNodes.length) {\\n                this.xmlInput(elem.childNodes[0]);\\n            } else {\\n                this.xmlInput(elem);\\n            }\\n        }\\n        if (this.rawInput !== Strophe.Connection.prototype.rawInput) {\\n            if (raw) {\\n                this.rawInput(raw);\\n            } else {\\n                this.rawInput(Strophe.serialize(elem));\\n            }\\n        }\\n\\n        // remove handlers scheduled for deletion\\n        var i, hand;\\n        while (this.removeHandlers.length > 0) {\\n            hand = this.removeHandlers.pop();\\n            i = this.handlers.indexOf(hand);\\n            if (i >= 0) {\\n                this.handlers.splice(i, 1);\\n            }\\n        }\\n\\n        // add handlers scheduled for addition\\n        while (this.addHandlers.length > 0) {\\n            this.handlers.push(this.addHandlers.pop());\\n        }\\n\\n        // handle graceful disconnect\\n        if (this.disconnecting && this._proto._emptyQueue()) {\\n            this._doDisconnect();\\n            return;\\n        }\\n\\n        var type = elem.getAttribute(\\\"type\\\");\\n        var cond, conflict;\\n        if (type !== null && type === \\\"terminate\\\") {\\n            // Don't process stanzas that come in after disconnect\\n            if (this.disconnecting) {\\n                return;\\n            }\\n\\n            // an error occurred\\n            cond = elem.getAttribute(\\\"condition\\\");\\n            conflict = elem.getElementsByTagName(\\\"conflict\\\");\\n            if (cond !== null) {\\n                if (cond === \\\"remote-stream-error\\\" && conflict.length > 0) {\\n                    cond = \\\"conflict\\\";\\n                }\\n                this._changeConnectStatus(Strophe.Status.CONNFAIL, cond);\\n            } else {\\n                this._changeConnectStatus(\\n                    Strophe.Status.CONNFAIL,\\n                    Strophe.ErrorCondition.UNKOWN_REASON\\n                );\\n            }\\n            this._doDisconnect(cond);\\n            return;\\n        }\\n\\n        // send each incoming stanza through the handler chain\\n        var that = this;\\n        Strophe.forEachChild(elem, null, function (child) {\\n            var i, newList;\\n            // process handlers\\n            newList = that.handlers;\\n            that.handlers = [];\\n            for (i = 0; i < newList.length; i++) {\\n                var hand = newList[i];\\n                // encapsulate 'handler.run' not to lose the whole handler list if\\n                // one of the handlers throws an exception\\n                try {\\n                    if (hand.isMatch(child) &&\\n                        (that.authenticated || !hand.user)) {\\n                        if (hand.run(child)) {\\n                            that.handlers.push(hand);\\n                        }\\n                    } else {\\n                        that.handlers.push(hand);\\n                    }\\n                } catch(e) {\\n                    // if the handler throws an exception, we consider it as false\\n                    Strophe.warn('Removing Strophe handlers due to uncaught exception: '+e.message);\\n                }\\n            }\\n        });\\n    },\\n\\n\\n    /** Attribute: mechanisms\\n     *  SASL Mechanisms available for Connection.\\n     */\\n    mechanisms: {},\\n\\n    /** PrivateFunction: _connect_cb\\n     *  _Private_ handler for initial connection request.\\n     *\\n     *  This handler is used to process the initial connection request\\n     *  response from the BOSH server. It is used to set up authentication\\n     *  handlers and start the authentication process.\\n     *\\n     *  SASL authentication will be attempted if available, otherwise\\n     *  the code will fall back to legacy authentication.\\n     *\\n     *  Parameters:\\n     *    (Strophe.Request) req - The current request.\\n     *    (Function) _callback - low level (xmpp) connect callback function.\\n     *      Useful for plugins with their own xmpp connect callback (when they\\n     *      want to do something special).\\n     */\\n    _connect_cb: function (req, _callback, raw) {\\n        Strophe.info(\\\"_connect_cb was called\\\");\\n        this.connected = true;\\n\\n        var bodyWrap;\\n        try {\\n            bodyWrap = this._proto._reqToData(req);\\n        } catch (e) {\\n            if (e !== \\\"badformat\\\") { throw e; }\\n            this._changeConnectStatus(\\n                Strophe.Status.CONNFAIL,\\n                Strophe.ErrorCondition.BAD_FORMAT\\n            );\\n            this._doDisconnect(Strophe.ErrorCondition.BAD_FORMAT);\\n        }\\n        if (!bodyWrap) { return; }\\n\\n        if (this.xmlInput !== Strophe.Connection.prototype.xmlInput) {\\n            if (bodyWrap.nodeName === this._proto.strip && bodyWrap.childNodes.length) {\\n                this.xmlInput(bodyWrap.childNodes[0]);\\n            } else {\\n                this.xmlInput(bodyWrap);\\n            }\\n        }\\n        if (this.rawInput !== Strophe.Connection.prototype.rawInput) {\\n            if (raw) {\\n                this.rawInput(raw);\\n            } else {\\n                this.rawInput(Strophe.serialize(bodyWrap));\\n            }\\n        }\\n\\n        var conncheck = this._proto._connect_cb(bodyWrap);\\n        if (conncheck === Strophe.Status.CONNFAIL) {\\n            return;\\n        }\\n\\n        // Check for the stream:features tag\\n        var hasFeatures;\\n        if (bodyWrap.getElementsByTagNameNS) {\\n            hasFeatures = bodyWrap.getElementsByTagNameNS(Strophe.NS.STREAM, \\\"features\\\").length > 0;\\n        } else {\\n            hasFeatures = bodyWrap.getElementsByTagName(\\\"stream:features\\\").length > 0 ||\\n                            bodyWrap.getElementsByTagName(\\\"features\\\").length > 0;\\n        }\\n        if (!hasFeatures) {\\n            this._proto._no_auth_received(_callback);\\n            return;\\n        }\\n\\n        var matched = [], i, mech;\\n        var mechanisms = bodyWrap.getElementsByTagName(\\\"mechanism\\\");\\n        if (mechanisms.length > 0) {\\n            for (i = 0; i < mechanisms.length; i++) {\\n                mech = Strophe.getText(mechanisms[i]);\\n                if (this.mechanisms[mech]) matched.push(this.mechanisms[mech]);\\n            }\\n        }\\n        if (matched.length === 0) {\\n            if (bodyWrap.getElementsByTagName(\\\"auth\\\").length === 0) {\\n                // There are no matching SASL mechanisms and also no legacy\\n                // auth available.\\n                this._proto._no_auth_received(_callback);\\n                return;\\n            }\\n        }\\n        if (this.do_authentication !== false) {\\n            this.authenticate(matched);\\n        }\\n    },\\n\\n    /** Function: sortMechanismsByPriority\\n     *\\n     *  Sorts an array of objects with prototype SASLMechanism according to\\n     *  their priorities.\\n     *\\n     *  Parameters:\\n     *    (Array) mechanisms - Array of SASL mechanisms.\\n     *\\n     */\\n    sortMechanismsByPriority: function (mechanisms) {\\n        // Sorting mechanisms according to priority.\\n        var i, j, higher, swap;\\n        for (i = 0; i < mechanisms.length - 1; ++i) {\\n            higher = i;\\n            for (j = i + 1; j < mechanisms.length; ++j) {\\n                if (mechanisms[j].prototype.priority > mechanisms[higher].prototype.priority) {\\n                    higher = j;\\n                }\\n            }\\n            if (higher !== i) {\\n                swap = mechanisms[i];\\n                mechanisms[i] = mechanisms[higher];\\n                mechanisms[higher] = swap;\\n            }\\n        }\\n        return mechanisms;\\n    },\\n\\n    /** PrivateFunction: _attemptSASLAuth\\n     *\\n     *  Iterate through an array of SASL mechanisms and attempt authentication\\n     *  with the highest priority (enabled) mechanism.\\n     *\\n     *  Parameters:\\n     *    (Array) mechanisms - Array of SASL mechanisms.\\n     *\\n     *  Returns:\\n     *    (Boolean) mechanism_found - true or false, depending on whether a\\n     *          valid SASL mechanism was found with which authentication could be\\n     *          started.\\n     */\\n    _attemptSASLAuth: function (mechanisms) {\\n        mechanisms = this.sortMechanismsByPriority(mechanisms || []);\\n        var i = 0, mechanism_found = false;\\n        for (i = 0; i < mechanisms.length; ++i) {\\n            if (!mechanisms[i].prototype.test(this)) {\\n                continue;\\n            }\\n            this._sasl_success_handler = this._addSysHandler(\\n                this._sasl_success_cb.bind(this), null,\\n                \\\"success\\\", null, null);\\n            this._sasl_failure_handler = this._addSysHandler(\\n                this._sasl_failure_cb.bind(this), null,\\n                \\\"failure\\\", null, null);\\n            this._sasl_challenge_handler = this._addSysHandler(\\n                this._sasl_challenge_cb.bind(this), null,\\n                \\\"challenge\\\", null, null);\\n\\n            this._sasl_mechanism = new mechanisms[i]();\\n            this._sasl_mechanism.onStart(this);\\n\\n            var request_auth_exchange = $build(\\\"auth\\\", {\\n                xmlns: Strophe.NS.SASL,\\n                mechanism: this._sasl_mechanism.name\\n            });\\n            if (this._sasl_mechanism.isClientFirst) {\\n                var response = this._sasl_mechanism.onChallenge(this, null);\\n                request_auth_exchange.t(btoa(response));\\n            }\\n            this.send(request_auth_exchange.tree());\\n            mechanism_found = true;\\n            break;\\n        }\\n        return mechanism_found;\\n    },\\n\\n    /** PrivateFunction: _attemptLegacyAuth\\n     *\\n     *  Attempt legacy (i.e. non-SASL) authentication.\\n     *\\n     */\\n    _attemptLegacyAuth: function () {\\n        if (Strophe.getNodeFromJid(this.jid) === null) {\\n            // we don't have a node, which is required for non-anonymous\\n            // client connections\\n            this._changeConnectStatus(\\n                Strophe.Status.CONNFAIL,\\n                Strophe.ErrorCondition.MISSING_JID_NODE\\n            );\\n            this.disconnect(Strophe.ErrorCondition.MISSING_JID_NODE);\\n        } else {\\n            // Fall back to legacy authentication\\n            this._changeConnectStatus(Strophe.Status.AUTHENTICATING, null);\\n            this._addSysHandler(\\n                this._auth1_cb.bind(this),\\n                null, null, null, \\\"_auth_1\\\"\\n            );\\n            this.send($iq({\\n                    'type': \\\"get\\\",\\n                    'to': this.domain,\\n                    'id': \\\"_auth_1\\\"\\n                }).c(\\\"query\\\", {xmlns: Strophe.NS.AUTH})\\n                .c(\\\"username\\\", {}).t(Strophe.getNodeFromJid(this.jid))\\n                .tree());\\n        }\\n    },\\n\\n    /** Function: authenticate\\n     * Set up authentication\\n     *\\n     *  Continues the initial connection request by setting up authentication\\n     *  handlers and starting the authentication process.\\n     *\\n     *  SASL authentication will be attempted if available, otherwise\\n     *  the code will fall back to legacy authentication.\\n     *\\n     *  Parameters:\\n     *    (Array) matched - Array of SASL mechanisms supported.\\n     *\\n     */\\n    authenticate: function (matched) {\\n        if (!this._attemptSASLAuth(matched)) {\\n            this._attemptLegacyAuth();\\n        }\\n    },\\n\\n    /** PrivateFunction: _sasl_challenge_cb\\n     *  _Private_ handler for the SASL challenge\\n     *\\n     */\\n    _sasl_challenge_cb: function(elem) {\\n      var challenge = atob(Strophe.getText(elem));\\n      var response = this._sasl_mechanism.onChallenge(this, challenge);\\n      var stanza = $build('response', {\\n          'xmlns': Strophe.NS.SASL\\n      });\\n      if (response !== \\\"\\\") {\\n        stanza.t(btoa(response));\\n      }\\n      this.send(stanza.tree());\\n      return true;\\n    },\\n\\n    /** PrivateFunction: _auth1_cb\\n     *  _Private_ handler for legacy authentication.\\n     *\\n     *  This handler is called in response to the initial <iq type='get'/>\\n     *  for legacy authentication.  It builds an authentication <iq/> and\\n     *  sends it, creating a handler (calling back to _auth2_cb()) to\\n     *  handle the result\\n     *\\n     *  Parameters:\\n     *    (XMLElement) elem - The stanza that triggered the callback.\\n     *\\n     *  Returns:\\n     *    false to remove the handler.\\n     */\\n    /* jshint unused:false */\\n    _auth1_cb: function (elem) {\\n        // build plaintext auth iq\\n        var iq = $iq({type: \\\"set\\\", id: \\\"_auth_2\\\"})\\n            .c('query', {xmlns: Strophe.NS.AUTH})\\n            .c('username', {}).t(Strophe.getNodeFromJid(this.jid))\\n            .up()\\n            .c('password').t(this.pass);\\n\\n        if (!Strophe.getResourceFromJid(this.jid)) {\\n            // since the user has not supplied a resource, we pick\\n            // a default one here.  unlike other auth methods, the server\\n            // cannot do this for us.\\n            this.jid = Strophe.getBareJidFromJid(this.jid) + '/strophe';\\n        }\\n        iq.up().c('resource', {}).t(Strophe.getResourceFromJid(this.jid));\\n\\n        this._addSysHandler(this._auth2_cb.bind(this), null,\\n                            null, null, \\\"_auth_2\\\");\\n        this.send(iq.tree());\\n        return false;\\n    },\\n    /* jshint unused:true */\\n\\n    /** PrivateFunction: _sasl_success_cb\\n     *  _Private_ handler for succesful SASL authentication.\\n     *\\n     *  Parameters:\\n     *    (XMLElement) elem - The matching stanza.\\n     *\\n     *  Returns:\\n     *    false to remove the handler.\\n     */\\n    _sasl_success_cb: function (elem) {\\n        if (this._sasl_data[\\\"server-signature\\\"]) {\\n            var serverSignature;\\n            var success = atob(Strophe.getText(elem));\\n            var attribMatch = /([a-z]+)=([^,]+)(,|$)/;\\n            var matches = success.match(attribMatch);\\n            if (matches[1] === \\\"v\\\") {\\n                serverSignature = matches[2];\\n            }\\n\\n            if (serverSignature !== this._sasl_data[\\\"server-signature\\\"]) {\\n              // remove old handlers\\n              this.deleteHandler(this._sasl_failure_handler);\\n              this._sasl_failure_handler = null;\\n              if (this._sasl_challenge_handler) {\\n                this.deleteHandler(this._sasl_challenge_handler);\\n                this._sasl_challenge_handler = null;\\n              }\\n\\n              this._sasl_data = {};\\n              return this._sasl_failure_cb(null);\\n            }\\n        }\\n        Strophe.info(\\\"SASL authentication succeeded.\\\");\\n\\n        if (this._sasl_mechanism) {\\n          this._sasl_mechanism.onSuccess();\\n        }\\n\\n        // remove old handlers\\n        this.deleteHandler(this._sasl_failure_handler);\\n        this._sasl_failure_handler = null;\\n        if (this._sasl_challenge_handler) {\\n            this.deleteHandler(this._sasl_challenge_handler);\\n            this._sasl_challenge_handler = null;\\n        }\\n\\n        var streamfeature_handlers = [];\\n        var wrapper = function(handlers, elem) {\\n            while (handlers.length) {\\n                this.deleteHandler(handlers.pop());\\n            }\\n            this._sasl_auth1_cb.bind(this)(elem);\\n            return false;\\n        };\\n        streamfeature_handlers.push(this._addSysHandler(function(elem) {\\n            wrapper.bind(this)(streamfeature_handlers, elem);\\n        }.bind(this), null, \\\"stream:features\\\", null, null));\\n        streamfeature_handlers.push(this._addSysHandler(function(elem) {\\n            wrapper.bind(this)(streamfeature_handlers, elem);\\n        }.bind(this), Strophe.NS.STREAM, \\\"features\\\", null, null));\\n\\n        // we must send an xmpp:restart now\\n        this._sendRestart();\\n\\n        return false;\\n    },\\n\\n    /** PrivateFunction: _sasl_auth1_cb\\n     *  _Private_ handler to start stream binding.\\n     *\\n     *  Parameters:\\n     *    (XMLElement) elem - The matching stanza.\\n     *\\n     *  Returns:\\n     *    false to remove the handler.\\n     */\\n    _sasl_auth1_cb: function (elem) {\\n        // save stream:features for future usage\\n        this.features = elem;\\n        var i, child;\\n        for (i = 0; i < elem.childNodes.length; i++) {\\n            child = elem.childNodes[i];\\n            if (child.nodeName === 'bind') {\\n                this.do_bind = true;\\n            }\\n\\n            if (child.nodeName === 'session') {\\n                this.do_session = true;\\n            }\\n        }\\n\\n        if (!this.do_bind) {\\n            this._changeConnectStatus(Strophe.Status.AUTHFAIL, null);\\n            return false;\\n        } else {\\n            this._addSysHandler(this._sasl_bind_cb.bind(this), null, null,\\n                                null, \\\"_bind_auth_2\\\");\\n\\n            var resource = Strophe.getResourceFromJid(this.jid);\\n            if (resource) {\\n                this.send($iq({type: \\\"set\\\", id: \\\"_bind_auth_2\\\"})\\n                          .c('bind', {xmlns: Strophe.NS.BIND})\\n                          .c('resource', {}).t(resource).tree());\\n            } else {\\n                this.send($iq({type: \\\"set\\\", id: \\\"_bind_auth_2\\\"})\\n                          .c('bind', {xmlns: Strophe.NS.BIND})\\n                          .tree());\\n            }\\n        }\\n        return false;\\n    },\\n\\n    /** PrivateFunction: _sasl_bind_cb\\n     *  _Private_ handler for binding result and session start.\\n     *\\n     *  Parameters:\\n     *    (XMLElement) elem - The matching stanza.\\n     *\\n     *  Returns:\\n     *    false to remove the handler.\\n     */\\n    _sasl_bind_cb: function (elem) {\\n        if (elem.getAttribute(\\\"type\\\") === \\\"error\\\") {\\n            Strophe.info(\\\"SASL binding failed.\\\");\\n            var conflict = elem.getElementsByTagName(\\\"conflict\\\"), condition;\\n            if (conflict.length > 0) {\\n                condition = Strophe.ErrorCondition.CONFLICT;\\n            }\\n            this._changeConnectStatus(Strophe.Status.AUTHFAIL, condition, elem);\\n            return false;\\n        }\\n\\n        // TODO - need to grab errors\\n        var bind = elem.getElementsByTagName(\\\"bind\\\");\\n        var jidNode;\\n        if (bind.length > 0) {\\n            // Grab jid\\n            jidNode = bind[0].getElementsByTagName(\\\"jid\\\");\\n            if (jidNode.length > 0) {\\n                this.jid = Strophe.getText(jidNode[0]);\\n\\n                if (this.do_session) {\\n                    this._addSysHandler(this._sasl_session_cb.bind(this),\\n                                        null, null, null, \\\"_session_auth_2\\\");\\n\\n                    this.send($iq({type: \\\"set\\\", id: \\\"_session_auth_2\\\"})\\n                                  .c('session', {xmlns: Strophe.NS.SESSION})\\n                                  .tree());\\n                } else {\\n                    this.authenticated = true;\\n                    this._changeConnectStatus(Strophe.Status.CONNECTED, null);\\n                }\\n            }\\n        } else {\\n            Strophe.info(\\\"SASL binding failed.\\\");\\n            this._changeConnectStatus(Strophe.Status.AUTHFAIL, null, elem);\\n            return false;\\n        }\\n    },\\n\\n    /** PrivateFunction: _sasl_session_cb\\n     *  _Private_ handler to finish successful SASL connection.\\n     *\\n     *  This sets Connection.authenticated to true on success, which\\n     *  starts the processing of user handlers.\\n     *\\n     *  Parameters:\\n     *    (XMLElement) elem - The matching stanza.\\n     *\\n     *  Returns:\\n     *    false to remove the handler.\\n     */\\n    _sasl_session_cb: function (elem) {\\n        if (elem.getAttribute(\\\"type\\\") === \\\"result\\\") {\\n            this.authenticated = true;\\n            this._changeConnectStatus(Strophe.Status.CONNECTED, null);\\n        } else if (elem.getAttribute(\\\"type\\\") === \\\"error\\\") {\\n            Strophe.info(\\\"Session creation failed.\\\");\\n            this._changeConnectStatus(Strophe.Status.AUTHFAIL, null, elem);\\n            return false;\\n        }\\n        return false;\\n    },\\n\\n    /** PrivateFunction: _sasl_failure_cb\\n     *  _Private_ handler for SASL authentication failure.\\n     *\\n     *  Parameters:\\n     *    (XMLElement) elem - The matching stanza.\\n     *\\n     *  Returns:\\n     *    false to remove the handler.\\n     */\\n    /* jshint unused:false */\\n    _sasl_failure_cb: function (elem) {\\n        // delete unneeded handlers\\n        if (this._sasl_success_handler) {\\n            this.deleteHandler(this._sasl_success_handler);\\n            this._sasl_success_handler = null;\\n        }\\n        if (this._sasl_challenge_handler) {\\n            this.deleteHandler(this._sasl_challenge_handler);\\n            this._sasl_challenge_handler = null;\\n        }\\n\\n        if(this._sasl_mechanism)\\n          this._sasl_mechanism.onFailure();\\n        this._changeConnectStatus(Strophe.Status.AUTHFAIL, null, elem);\\n        return false;\\n    },\\n    /* jshint unused:true */\\n\\n    /** PrivateFunction: _auth2_cb\\n     *  _Private_ handler to finish legacy authentication.\\n     *\\n     *  This handler is called when the result from the jabber:iq:auth\\n     *  <iq/> stanza is returned.\\n     *\\n     *  Parameters:\\n     *    (XMLElement) elem - The stanza that triggered the callback.\\n     *\\n     *  Returns:\\n     *    false to remove the handler.\\n     */\\n    _auth2_cb: function (elem) {\\n        if (elem.getAttribute(\\\"type\\\") === \\\"result\\\") {\\n            this.authenticated = true;\\n            this._changeConnectStatus(Strophe.Status.CONNECTED, null);\\n        } else if (elem.getAttribute(\\\"type\\\") === \\\"error\\\") {\\n            this._changeConnectStatus(Strophe.Status.AUTHFAIL, null, elem);\\n            this.disconnect('authentication failed');\\n        }\\n        return false;\\n    },\\n\\n    /** PrivateFunction: _addSysTimedHandler\\n     *  _Private_ function to add a system level timed handler.\\n     *\\n     *  This function is used to add a Strophe.TimedHandler for the\\n     *  library code.  System timed handlers are allowed to run before\\n     *  authentication is complete.\\n     *\\n     *  Parameters:\\n     *    (Integer) period - The period of the handler.\\n     *    (Function) handler - The callback function.\\n     */\\n    _addSysTimedHandler: function (period, handler) {\\n        var thand = new Strophe.TimedHandler(period, handler);\\n        thand.user = false;\\n        this.addTimeds.push(thand);\\n        return thand;\\n    },\\n\\n    /** PrivateFunction: _addSysHandler\\n     *  _Private_ function to add a system level stanza handler.\\n     *\\n     *  This function is used to add a Strophe.Handler for the\\n     *  library code.  System stanza handlers are allowed to run before\\n     *  authentication is complete.\\n     *\\n     *  Parameters:\\n     *    (Function) handler - The callback function.\\n     *    (String) ns - The namespace to match.\\n     *    (String) name - The stanza name to match.\\n     *    (String) type - The stanza type attribute to match.\\n     *    (String) id - The stanza id attribute to match.\\n     */\\n    _addSysHandler: function (handler, ns, name, type, id) {\\n        var hand = new Strophe.Handler(handler, ns, name, type, id);\\n        hand.user = false;\\n        this.addHandlers.push(hand);\\n        return hand;\\n    },\\n\\n    /** PrivateFunction: _onDisconnectTimeout\\n     *  _Private_ timeout handler for handling non-graceful disconnection.\\n     *\\n     *  If the graceful disconnect process does not complete within the\\n     *  time allotted, this handler finishes the disconnect anyway.\\n     *\\n     *  Returns:\\n     *    false to remove the handler.\\n     */\\n    _onDisconnectTimeout: function () {\\n        Strophe.info(\\\"_onDisconnectTimeout was called\\\");\\n        this._changeConnectStatus(Strophe.Status.CONNTIMEOUT, null);\\n        this._proto._onDisconnectTimeout();\\n        // actually disconnect\\n        this._doDisconnect();\\n        return false;\\n    },\\n\\n    /** PrivateFunction: _onIdle\\n     *  _Private_ handler to process events during idle cycle.\\n     *\\n     *  This handler is called every 100ms to fire timed handlers that\\n     *  are ready and keep poll requests going.\\n     */\\n    _onIdle: function () {\\n        var i, thand, since, newList;\\n\\n        // add timed handlers scheduled for addition\\n        // NOTE: we add before remove in the case a timed handler is\\n        // added and then deleted before the next _onIdle() call.\\n        while (this.addTimeds.length > 0) {\\n            this.timedHandlers.push(this.addTimeds.pop());\\n        }\\n\\n        // remove timed handlers that have been scheduled for deletion\\n        while (this.removeTimeds.length > 0) {\\n            thand = this.removeTimeds.pop();\\n            i = this.timedHandlers.indexOf(thand);\\n            if (i >= 0) {\\n                this.timedHandlers.splice(i, 1);\\n            }\\n        }\\n\\n        // call ready timed handlers\\n        var now = new Date().getTime();\\n        newList = [];\\n        for (i = 0; i < this.timedHandlers.length; i++) {\\n            thand = this.timedHandlers[i];\\n            if (this.authenticated || !thand.user) {\\n                since = thand.lastCalled + thand.period;\\n                if (since - now <= 0) {\\n                    if (thand.run()) {\\n                        newList.push(thand);\\n                    }\\n                } else {\\n                    newList.push(thand);\\n                }\\n            }\\n        }\\n        this.timedHandlers = newList;\\n\\n        clearTimeout(this._idleTimeout);\\n\\n        this._proto._onIdle();\\n\\n        // reactivate the timer only if connected\\n        if (this.connected) {\\n            // XXX: setTimeout should be called only with function expressions (23974bc1)\\n            this._idleTimeout = setTimeout(function() {\\n                this._onIdle();\\n            }.bind(this), 100);\\n        }\\n    }\\n};\\n\\n/** Class: Strophe.SASLMechanism\\n *\\n *  encapsulates SASL authentication mechanisms.\\n *\\n *  User code may override the priority for each mechanism or disable it completely.\\n *  See <priority> for information about changing priority and <test> for informatian on\\n *  how to disable a mechanism.\\n *\\n *  By default, all mechanisms are enabled and the priorities are\\n *\\n *      OAUTHBEARER - 60\\n *      SCRAM-SHA1 - 50\\n *      DIGEST-MD5 - 40\\n *      PLAIN - 30\\n *      ANONYMOUS - 20\\n *      EXTERNAL - 10\\n *\\n *  See: Strophe.Connection.addSupportedSASLMechanisms\\n */\\n\\n/**\\n * PrivateConstructor: Strophe.SASLMechanism\\n * SASL auth mechanism abstraction.\\n *\\n *  Parameters:\\n *    (String) name - SASL Mechanism name.\\n *    (Boolean) isClientFirst - If client should send response first without challenge.\\n *    (Number) priority - Priority.\\n *\\n *  Returns:\\n *    A new Strophe.SASLMechanism object.\\n */\\nStrophe.SASLMechanism = function(name, isClientFirst, priority) {\\n  /** PrivateVariable: name\\n   *  Mechanism name.\\n   */\\n  this.name = name;\\n  /** PrivateVariable: isClientFirst\\n   *  If client sends response without initial server challenge.\\n   */\\n  this.isClientFirst = isClientFirst;\\n  /** Variable: priority\\n   *  Determines which <SASLMechanism> is chosen for authentication (Higher is better).\\n   *  Users may override this to prioritize mechanisms differently.\\n   *\\n   *  In the default configuration the priorities are\\n   *\\n   *  SCRAM-SHA1 - 40\\n   *  DIGEST-MD5 - 30\\n   *  Plain - 20\\n   *\\n   *  Example: (This will cause Strophe to choose the mechanism that the server sent first)\\n   *\\n   *  > Strophe.SASLMD5.priority = Strophe.SASLSHA1.priority;\\n   *\\n   *  See <SASL mechanisms> for a list of available mechanisms.\\n   *\\n   */\\n  this.priority = priority;\\n};\\n\\nStrophe.SASLMechanism.prototype = {\\n  /**\\n   *  Function: test\\n   *  Checks if mechanism able to run.\\n   *  To disable a mechanism, make this return false;\\n   *\\n   *  To disable plain authentication run\\n   *  > Strophe.SASLPlain.test = function() {\\n   *  >   return false;\\n   *  > }\\n   *\\n   *  See <SASL mechanisms> for a list of available mechanisms.\\n   *\\n   *  Parameters:\\n   *    (Strophe.Connection) connection - Target Connection.\\n   *\\n   *  Returns:\\n   *    (Boolean) If mechanism was able to run.\\n   */\\n  /* jshint unused:false */\\n  test: function(connection) {\\n    return true;\\n  },\\n  /* jshint unused:true */\\n\\n  /** PrivateFunction: onStart\\n   *  Called before starting mechanism on some connection.\\n   *\\n   *  Parameters:\\n   *    (Strophe.Connection) connection - Target Connection.\\n   */\\n  onStart: function(connection) {\\n    this._connection = connection;\\n  },\\n\\n  /** PrivateFunction: onChallenge\\n   *  Called by protocol implementation on incoming challenge. If client is\\n   *  first (isClientFirst === true) challenge will be null on the first call.\\n   *\\n   *  Parameters:\\n   *    (Strophe.Connection) connection - Target Connection.\\n   *    (String) challenge - current challenge to handle.\\n   *\\n   *  Returns:\\n   *    (String) Mechanism response.\\n   */\\n  /* jshint unused:false */\\n  onChallenge: function(connection, challenge) {\\n    throw new Error(\\\"You should implement challenge handling!\\\");\\n  },\\n  /* jshint unused:true */\\n\\n  /** PrivateFunction: onFailure\\n   *  Protocol informs mechanism implementation about SASL failure.\\n   */\\n  onFailure: function() {\\n    this._connection = null;\\n  },\\n\\n  /** PrivateFunction: onSuccess\\n   *  Protocol informs mechanism implementation about SASL success.\\n   */\\n  onSuccess: function() {\\n    this._connection = null;\\n  }\\n};\\n\\n  /** Constants: SASL mechanisms\\n   *  Available authentication mechanisms\\n   *\\n   *  Strophe.SASLAnonymous - SASL ANONYMOUS authentication.\\n   *  Strophe.SASLPlain - SASL PLAIN authentication.\\n   *  Strophe.SASLMD5 - SASL DIGEST-MD5 authentication\\n   *  Strophe.SASLSHA1 - SASL SCRAM-SHA1 authentication\\n   *  Strophe.SASLOAuthBearer - SASL OAuth Bearer authentication\\n   *  Strophe.SASLExternal - SASL EXTERNAL authentication\\n   *  Strophe.SASLXOAuth2 - SASL X-OAuth2 authentication\\n   */\\n\\n// Building SASL callbacks\\n\\n/** PrivateConstructor: SASLAnonymous\\n *  SASL ANONYMOUS authentication.\\n */\\nStrophe.SASLAnonymous = function() {};\\nStrophe.SASLAnonymous.prototype = new Strophe.SASLMechanism(\\\"ANONYMOUS\\\", false, 20);\\n\\nStrophe.SASLAnonymous.prototype.test = function(connection) {\\n    return connection.authcid === null;\\n};\\n\\n\\n/** PrivateConstructor: SASLPlain\\n *  SASL PLAIN authentication.\\n */\\nStrophe.SASLPlain = function() {};\\nStrophe.SASLPlain.prototype = new Strophe.SASLMechanism(\\\"PLAIN\\\", true, 50);\\n\\nStrophe.SASLPlain.prototype.test = function(connection) {\\n    return connection.authcid !== null;\\n};\\n\\nStrophe.SASLPlain.prototype.onChallenge = function(connection) {\\n    var auth_str = connection.authzid;\\n    auth_str = auth_str + \\\"\\\\u0000\\\";\\n    auth_str = auth_str + connection.authcid;\\n    auth_str = auth_str + \\\"\\\\u0000\\\";\\n    auth_str = auth_str + connection.pass;\\n    return utils.utf16to8(auth_str);\\n};\\n\\n\\n/** PrivateConstructor: SASLSHA1\\n *  SASL SCRAM SHA 1 authentication.\\n */\\nStrophe.SASLSHA1 = function() {};\\nStrophe.SASLSHA1.prototype = new Strophe.SASLMechanism(\\\"SCRAM-SHA-1\\\", true, 70);\\n\\nStrophe.SASLSHA1.prototype.test = function(connection) {\\n    return connection.authcid !== null;\\n};\\n\\nStrophe.SASLSHA1.prototype.onChallenge = function(connection, challenge, test_cnonce) {\\n  var cnonce = test_cnonce || MD5.hexdigest(Math.random() * 1234567890);\\n  var auth_str = \\\"n=\\\" + utils.utf16to8(connection.authcid);\\n  auth_str += \\\",r=\\\";\\n  auth_str += cnonce;\\n  connection._sasl_data.cnonce = cnonce;\\n  connection._sasl_data[\\\"client-first-message-bare\\\"] = auth_str;\\n\\n  auth_str = \\\"n,,\\\" + auth_str;\\n\\n  this.onChallenge = function (connection, challenge) {\\n    var nonce, salt, iter, Hi, U, U_old, i, k, pass;\\n    var clientKey, serverKey, clientSignature;\\n    var responseText = \\\"c=biws,\\\";\\n    var authMessage = connection._sasl_data[\\\"client-first-message-bare\\\"] + \\\",\\\" +\\n      challenge + \\\",\\\";\\n    var cnonce = connection._sasl_data.cnonce;\\n    var attribMatch = /([a-z]+)=([^,]+)(,|$)/;\\n\\n    while (challenge.match(attribMatch)) {\\n      var matches = challenge.match(attribMatch);\\n      challenge = challenge.replace(matches[0], \\\"\\\");\\n      switch (matches[1]) {\\n      case \\\"r\\\":\\n        nonce = matches[2];\\n        break;\\n      case \\\"s\\\":\\n        salt = matches[2];\\n        break;\\n      case \\\"i\\\":\\n        iter = matches[2];\\n        break;\\n      }\\n    }\\n\\n    if (nonce.substr(0, cnonce.length) !== cnonce) {\\n      connection._sasl_data = {};\\n      return connection._sasl_failure_cb();\\n    }\\n\\n    responseText += \\\"r=\\\" + nonce;\\n    authMessage += responseText;\\n\\n    salt = atob(salt);\\n    salt += \\\"\\\\x00\\\\x00\\\\x00\\\\x01\\\";\\n\\n    pass = utils.utf16to8(connection.pass);\\n    Hi = U_old = SHA1.core_hmac_sha1(pass, salt);\\n    for (i = 1; i < iter; i++) {\\n      U = SHA1.core_hmac_sha1(pass, SHA1.binb2str(U_old));\\n      for (k = 0; k < 5; k++) {\\n        Hi[k] ^= U[k];\\n      }\\n      U_old = U;\\n    }\\n    Hi = SHA1.binb2str(Hi);\\n\\n    clientKey = SHA1.core_hmac_sha1(Hi, \\\"Client Key\\\");\\n    serverKey = SHA1.str_hmac_sha1(Hi, \\\"Server Key\\\");\\n    clientSignature = SHA1.core_hmac_sha1(SHA1.str_sha1(SHA1.binb2str(clientKey)), authMessage);\\n    connection._sasl_data[\\\"server-signature\\\"] = SHA1.b64_hmac_sha1(serverKey, authMessage);\\n\\n    for (k = 0; k < 5; k++) {\\n      clientKey[k] ^= clientSignature[k];\\n    }\\n\\n    responseText += \\\",p=\\\" + btoa(SHA1.binb2str(clientKey));\\n    return responseText;\\n  }.bind(this);\\n\\n  return auth_str;\\n};\\n\\n\\n/** PrivateConstructor: SASLMD5\\n *  SASL DIGEST MD5 authentication.\\n */\\nStrophe.SASLMD5 = function() {};\\nStrophe.SASLMD5.prototype = new Strophe.SASLMechanism(\\\"DIGEST-MD5\\\", false, 60);\\n\\nStrophe.SASLMD5.prototype.test = function(connection) {\\n    return connection.authcid !== null;\\n};\\n\\n/** PrivateFunction: _quote\\n *  _Private_ utility function to backslash escape and quote strings.\\n *\\n *  Parameters:\\n *    (String) str - The string to be quoted.\\n *\\n *  Returns:\\n *    quoted string\\n */\\nStrophe.SASLMD5.prototype._quote = function (str) {\\n    return '\\\"' + str.replace(/\\\\\\\\/g, \\\"\\\\\\\\\\\\\\\\\\\").replace(/\\\"/g, '\\\\\\\\\\\"') + '\\\"';\\n    //\\\" end string workaround for emacs\\n};\\n\\nStrophe.SASLMD5.prototype.onChallenge = function(connection, challenge, test_cnonce) {\\n  var attribMatch = /([a-z]+)=(\\\"[^\\\"]+\\\"|[^,\\\"]+)(?:,|$)/;\\n  var cnonce = test_cnonce || MD5.hexdigest(\\\"\\\" + (Math.random() * 1234567890));\\n  var realm = \\\"\\\";\\n  var host = null;\\n  var nonce = \\\"\\\";\\n  var qop = \\\"\\\";\\n  var matches;\\n\\n  while (challenge.match(attribMatch)) {\\n    matches = challenge.match(attribMatch);\\n    challenge = challenge.replace(matches[0], \\\"\\\");\\n    matches[2] = matches[2].replace(/^\\\"(.+)\\\"$/, \\\"$1\\\");\\n    switch (matches[1]) {\\n    case \\\"realm\\\":\\n      realm = matches[2];\\n      break;\\n    case \\\"nonce\\\":\\n      nonce = matches[2];\\n      break;\\n    case \\\"qop\\\":\\n      qop = matches[2];\\n      break;\\n    case \\\"host\\\":\\n      host = matches[2];\\n      break;\\n    }\\n  }\\n\\n  var digest_uri = connection.servtype + \\\"/\\\" + connection.domain;\\n  if (host !== null) {\\n    digest_uri = digest_uri + \\\"/\\\" + host;\\n  }\\n\\n  var cred = utils.utf16to8(connection.authcid + \\\":\\\" + realm + \\\":\\\" + this._connection.pass);\\n  var A1 = MD5.hash(cred) + \\\":\\\" + nonce + \\\":\\\" + cnonce;\\n  var A2 = 'AUTHENTICATE:' + digest_uri;\\n\\n  var responseText = \\\"\\\";\\n  responseText += 'charset=utf-8,';\\n  responseText += 'username=' + this._quote(utils.utf16to8(connection.authcid)) + ',';\\n  responseText += 'realm=' + this._quote(realm) + ',';\\n  responseText += 'nonce=' + this._quote(nonce) + ',';\\n  responseText += 'nc=00000001,';\\n  responseText += 'cnonce=' + this._quote(cnonce) + ',';\\n  responseText += 'digest-uri=' + this._quote(digest_uri) + ',';\\n  responseText += 'response=' + MD5.hexdigest(MD5.hexdigest(A1) + \\\":\\\" +\\n                                              nonce + \\\":00000001:\\\" +\\n                                              cnonce + \\\":auth:\\\" +\\n                                              MD5.hexdigest(A2)) + \\\",\\\";\\n  responseText += 'qop=auth';\\n\\n  this.onChallenge = function () {\\n      return \\\"\\\";\\n  };\\n  return responseText;\\n};\\n\\n\\n/** PrivateConstructor: SASLOAuthBearer\\n *  SASL OAuth Bearer authentication.\\n */\\nStrophe.SASLOAuthBearer = function() {};\\nStrophe.SASLOAuthBearer.prototype = new Strophe.SASLMechanism(\\\"OAUTHBEARER\\\", true, 40);\\n\\nStrophe.SASLOAuthBearer.prototype.test = function(connection) {\\n    return connection.pass !== null;\\n};\\n\\nStrophe.SASLOAuthBearer.prototype.onChallenge = function(connection) {\\n    var auth_str = 'n,';\\n    if (connection.authcid !== null) {\\n      auth_str = auth_str + 'a=' + connection.authzid;\\n    }\\n    auth_str = auth_str + ',';\\n    auth_str = auth_str + \\\"\\\\u0001\\\";\\n    auth_str = auth_str + 'auth=Bearer ';\\n    auth_str = auth_str + connection.pass;\\n    auth_str = auth_str + \\\"\\\\u0001\\\";\\n    auth_str = auth_str + \\\"\\\\u0001\\\";\\n\\n    return utils.utf16to8(auth_str);\\n};\\n\\n\\n/** PrivateConstructor: SASLExternal\\n *  SASL EXTERNAL authentication.\\n *\\n *  The EXTERNAL mechanism allows a client to request the server to use\\n *  credentials established by means external to the mechanism to\\n *  authenticate the client. The external means may be, for instance,\\n *  TLS services.\\n */\\nStrophe.SASLExternal = function() {};\\nStrophe.SASLExternal.prototype = new Strophe.SASLMechanism(\\\"EXTERNAL\\\", true, 10);\\n\\nStrophe.SASLExternal.prototype.onChallenge = function(connection) {\\n    /** According to XEP-178, an authzid SHOULD NOT be presented when the\\n     * authcid contained or implied in the client certificate is the JID (i.e.\\n     * authzid) with which the user wants to log in as.\\n     *\\n     * To NOT send the authzid, the user should therefore set the authcid equal\\n     * to the JID when instantiating a new Strophe.Connection object.\\n     */\\n    return connection.authcid === connection.authzid ? '' : connection.authzid;\\n};\\n\\n\\n/** PrivateConstructor: SASLXOAuth2\\n *  SASL X-OAuth2 authentication.\\n */\\nStrophe.SASLXOAuth2 = function () { };\\nStrophe.SASLXOAuth2.prototype = new Strophe.SASLMechanism(\\\"X-OAUTH2\\\", true, 30);\\n\\nStrophe.SASLXOAuth2.prototype.test = function (connection) {\\n    return connection.pass !== null;\\n};\\n\\nStrophe.SASLXOAuth2.prototype.onChallenge = function (connection) {\\n    var auth_str = '\\\\u0000';\\n    if (connection.authcid !== null) {\\n        auth_str = auth_str + connection.authzid;\\n    }\\n    auth_str = auth_str + \\\"\\\\u0000\\\";\\n    auth_str = auth_str + connection.pass;\\n\\n    return utils.utf16to8(auth_str);\\n};\\n\\n\\nreturn {\\n    'Strophe':         Strophe,\\n    '$build':          $build,\\n    '$iq':             $iq,\\n    '$msg':            $msg,\\n    '$pres':           $pres,\\n    'SHA1':            SHA1,\\n    'MD5':             MD5,\\n    'b64_hmac_sha1':   SHA1.b64_hmac_sha1,\\n    'b64_sha1':        SHA1.b64_sha1,\\n    'str_hmac_sha1':   SHA1.str_hmac_sha1,\\n    'str_sha1':        SHA1.str_sha1\\n};\\n}));\\n\\n/*\\n    This program is distributed under the terms of the MIT license.\\n    Please see the LICENSE file for details.\\n\\n    Copyright 2006-2008, OGG, LLC\\n*/\\n\\n/* jshint undef: true, unused: true:, noarg: true, latedef: true */\\n/* global define, window, setTimeout, clearTimeout, XMLHttpRequest, ActiveXObject, Strophe, $build */\\n\\n(function (root, factory) {\\n    if (typeof define === 'function' && define.amd) {\\n        define('strophe-bosh',['strophe-core'], function (core) {\\n            return factory(\\n                core.Strophe,\\n                core.$build\\n            );\\n        });\\n    } else if (typeof exports === 'object') {\\n        var core = require('./core');\\n\\n        module.exports = factory(core.Strophe, core.$build);\\n    } else {\\n        // Browser globals\\n        return factory(Strophe, $build);\\n    }\\n}(this, function (Strophe, $build) {\\n\\n/** PrivateClass: Strophe.Request\\n *  _Private_ helper class that provides a cross implementation abstraction\\n *  for a BOSH related XMLHttpRequest.\\n *\\n *  The Strophe.Request class is used internally to encapsulate BOSH request\\n *  information.  It is not meant to be used from user's code.\\n */\\n\\n/** PrivateConstructor: Strophe.Request\\n *  Create and initialize a new Strophe.Request object.\\n *\\n *  Parameters:\\n *    (XMLElement) elem - The XML data to be sent in the request.\\n *    (Function) func - The function that will be called when the\\n *      XMLHttpRequest readyState changes.\\n *    (Integer) rid - The BOSH rid attribute associated with this request.\\n *    (Integer) sends - The number of times this same request has been sent.\\n */\\nStrophe.Request = function (elem, func, rid, sends) {\\n    this.id = ++Strophe._requestId;\\n    this.xmlData = elem;\\n    this.data = Strophe.serialize(elem);\\n    // save original function in case we need to make a new request\\n    // from this one.\\n    this.origFunc = func;\\n    this.func = func;\\n    this.rid = rid;\\n    this.date = NaN;\\n    this.sends = sends || 0;\\n    this.abort = false;\\n    this.dead = null;\\n\\n    this.age = function () {\\n        if (!this.date) { return 0; }\\n        var now = new Date();\\n        return (now - this.date) / 1000;\\n    };\\n    this.timeDead = function () {\\n        if (!this.dead) { return 0; }\\n        var now = new Date();\\n        return (now - this.dead) / 1000;\\n    };\\n    this.xhr = this._newXHR();\\n};\\n\\nStrophe.Request.prototype = {\\n    /** PrivateFunction: getResponse\\n     *  Get a response from the underlying XMLHttpRequest.\\n     *\\n     *  This function attempts to get a response from the request and checks\\n     *  for errors.\\n     *\\n     *  Throws:\\n     *    \\\"parsererror\\\" - A parser error occured.\\n     *    \\\"badformat\\\" - The entity has sent XML that cannot be processed.\\n     *\\n     *  Returns:\\n     *    The DOM element tree of the response.\\n     */\\n    getResponse: function () {\\n        var node = null;\\n        if (this.xhr.responseXML && this.xhr.responseXML.documentElement) {\\n            node = this.xhr.responseXML.documentElement;\\n            if (node.tagName === \\\"parsererror\\\") {\\n                Strophe.error(\\\"invalid response received\\\");\\n                Strophe.error(\\\"responseText: \\\" + this.xhr.responseText);\\n                Strophe.error(\\\"responseXML: \\\" +\\n                              Strophe.serialize(this.xhr.responseXML));\\n                throw \\\"parsererror\\\";\\n            }\\n        } else if (this.xhr.responseText) {\\n            // In React Native, we may get responseText but no responseXML.  We can try to parse it manually.\\n            Strophe.debug(\\\"Got responseText but no responseXML; attempting to parse it with DOMParser...\\\");\\n            node = new DOMParser().parseFromString(this.xhr.responseText, 'application/xml').documentElement;\\n            if (!node) {\\n                throw new Error('Parsing produced null node');\\n            } else if (node.querySelector('parsererror')) {\\n                Strophe.error(\\\"invalid response received: \\\" + node.querySelector('parsererror').textContent);\\n                Strophe.error(\\\"responseText: \\\" + this.xhr.responseText);\\n                throw \\\"badformat\\\";\\n            }\\n        }\\n        return node;\\n    },\\n\\n    /** PrivateFunction: _newXHR\\n     *  _Private_ helper function to create XMLHttpRequests.\\n     *\\n     *  This function creates XMLHttpRequests across all implementations.\\n     *\\n     *  Returns:\\n     *    A new XMLHttpRequest.\\n     */\\n    _newXHR: function () {\\n        var xhr = null;\\n        if (window.XMLHttpRequest) {\\n            xhr = new XMLHttpRequest();\\n            if (xhr.overrideMimeType) {\\n                xhr.overrideMimeType(\\\"text/xml; charset=utf-8\\\");\\n            }\\n        } else if (window.ActiveXObject) {\\n            xhr = new ActiveXObject(\\\"Microsoft.XMLHTTP\\\");\\n        }\\n        // use Function.bind() to prepend ourselves as an argument\\n        xhr.onreadystatechange = this.func.bind(null, this);\\n        return xhr;\\n    }\\n};\\n\\n/** Class: Strophe.Bosh\\n *  _Private_ helper class that handles BOSH Connections\\n *\\n *  The Strophe.Bosh class is used internally by Strophe.Connection\\n *  to encapsulate BOSH sessions. It is not meant to be used from user's code.\\n */\\n\\n/** File: bosh.js\\n *  A JavaScript library to enable BOSH in Strophejs.\\n *\\n *  this library uses Bidirectional-streams Over Synchronous HTTP (BOSH)\\n *  to emulate a persistent, stateful, two-way connection to an XMPP server.\\n *  More information on BOSH can be found in XEP 124.\\n */\\n\\n/** PrivateConstructor: Strophe.Bosh\\n *  Create and initialize a Strophe.Bosh object.\\n *\\n *  Parameters:\\n *    (Strophe.Connection) connection - The Strophe.Connection that will use BOSH.\\n *\\n *  Returns:\\n *    A new Strophe.Bosh object.\\n */\\nStrophe.Bosh = function(connection) {\\n    this._conn = connection;\\n    /* request id for body tags */\\n    this.rid = Math.floor(Math.random() * 4294967295);\\n    /* The current session ID. */\\n    this.sid = null;\\n\\n    // default BOSH values\\n    this.hold = 1;\\n    this.wait = 60;\\n    this.window = 5;\\n    this.errors = 0;\\n    this.inactivity = null;\\n\\n    this.lastResponseHeaders = null;\\n\\n    this._requests = [];\\n};\\n\\nStrophe.Bosh.prototype = {\\n    /** Variable: strip\\n     *\\n     *  BOSH-Connections will have all stanzas wrapped in a <body> tag when\\n     *  passed to <Strophe.Connection.xmlInput> or <Strophe.Connection.xmlOutput>.\\n     *  To strip this tag, User code can set <Strophe.Bosh.strip> to \\\"body\\\":\\n     *\\n     *  > Strophe.Bosh.prototype.strip = \\\"body\\\";\\n     *\\n     *  This will enable stripping of the body tag in both\\n     *  <Strophe.Connection.xmlInput> and <Strophe.Connection.xmlOutput>.\\n     */\\n    strip: null,\\n\\n    /** PrivateFunction: _buildBody\\n     *  _Private_ helper function to generate the <body/> wrapper for BOSH.\\n     *\\n     *  Returns:\\n     *    A Strophe.Builder with a <body/> element.\\n     */\\n    _buildBody: function () {\\n        var bodyWrap = $build('body', {\\n            rid: this.rid++,\\n            xmlns: Strophe.NS.HTTPBIND\\n        });\\n        if (this.sid !== null) {\\n            bodyWrap.attrs({sid: this.sid});\\n        }\\n        if (this._conn.options.keepalive && this._conn._sessionCachingSupported()) {\\n            this._cacheSession();\\n        }\\n        return bodyWrap;\\n    },\\n\\n    /** PrivateFunction: _reset\\n     *  Reset the connection.\\n     *\\n     *  This function is called by the reset function of the Strophe Connection\\n     */\\n    _reset: function () {\\n        this.rid = Math.floor(Math.random() * 4294967295);\\n        this.sid = null;\\n        this.errors = 0;\\n        if (this._conn._sessionCachingSupported()) {\\n            window.sessionStorage.removeItem('strophe-bosh-session');\\n        }\\n\\n        this._conn.nextValidRid(this.rid);\\n    },\\n\\n    /** PrivateFunction: _connect\\n     *  _Private_ function that initializes the BOSH connection.\\n     *\\n     *  Creates and sends the Request that initializes the BOSH connection.\\n     */\\n    _connect: function (wait, hold, route) {\\n        this.wait = wait || this.wait;\\n        this.hold = hold || this.hold;\\n        this.errors = 0;\\n\\n        // build the body tag\\n        var body = this._buildBody().attrs({\\n            to: this._conn.domain,\\n            \\\"xml:lang\\\": \\\"en\\\",\\n            wait: this.wait,\\n            hold: this.hold,\\n            content: \\\"text/xml; charset=utf-8\\\",\\n            ver: \\\"1.6\\\",\\n            \\\"xmpp:version\\\": \\\"1.0\\\",\\n            \\\"xmlns:xmpp\\\": Strophe.NS.BOSH\\n        });\\n\\n        if(route){\\n            body.attrs({\\n                route: route\\n            });\\n        }\\n\\n        var _connect_cb = this._conn._connect_cb;\\n\\n        this._requests.push(\\n            new Strophe.Request(body.tree(),\\n                                this._onRequestStateChange.bind(\\n                                    this, _connect_cb.bind(this._conn)),\\n                                body.tree().getAttribute(\\\"rid\\\")));\\n        this._throttledRequestHandler();\\n    },\\n\\n    /** PrivateFunction: _attach\\n     *  Attach to an already created and authenticated BOSH session.\\n     *\\n     *  This function is provided to allow Strophe to attach to BOSH\\n     *  sessions which have been created externally, perhaps by a Web\\n     *  application.  This is often used to support auto-login type features\\n     *  without putting user credentials into the page.\\n     *\\n     *  Parameters:\\n     *    (String) jid - The full JID that is bound by the session.\\n     *    (String) sid - The SID of the BOSH session.\\n     *    (String) rid - The current RID of the BOSH session.  This RID\\n     *      will be used by the next request.\\n     *    (Function) callback The connect callback function.\\n     *    (Integer) wait - The optional HTTPBIND wait value.  This is the\\n     *      time the server will wait before returning an empty result for\\n     *      a request.  The default setting of 60 seconds is recommended.\\n     *      Other settings will require tweaks to the Strophe.TIMEOUT value.\\n     *    (Integer) hold - The optional HTTPBIND hold value.  This is the\\n     *      number of connections the server will hold at one time.  This\\n     *      should almost always be set to 1 (the default).\\n     *    (Integer) wind - The optional HTTBIND window value.  This is the\\n     *      allowed range of request ids that are valid.  The default is 5.\\n     */\\n    _attach: function (jid, sid, rid, callback, wait, hold, wind) {\\n        this._conn.jid = jid;\\n        this.sid = sid;\\n        this.rid = rid;\\n\\n        this._conn.connect_callback = callback;\\n\\n        this._conn.domain = Strophe.getDomainFromJid(this._conn.jid);\\n\\n        this._conn.authenticated = true;\\n        this._conn.connected = true;\\n\\n        this.wait = wait || this.wait;\\n        this.hold = hold || this.hold;\\n        this.window = wind || this.window;\\n\\n        this._conn._changeConnectStatus(Strophe.Status.ATTACHED, null);\\n    },\\n\\n    /** PrivateFunction: _restore\\n     *  Attempt to restore a cached BOSH session\\n     *\\n     *  Parameters:\\n     *    (String) jid - The full JID that is bound by the session.\\n     *      This parameter is optional but recommended, specifically in cases\\n     *      where prebinded BOSH sessions are used where it's important to know\\n     *      that the right session is being restored.\\n     *    (Function) callback The connect callback function.\\n     *    (Integer) wait - The optional HTTPBIND wait value.  This is the\\n     *      time the server will wait before returning an empty result for\\n     *      a request.  The default setting of 60 seconds is recommended.\\n     *      Other settings will require tweaks to the Strophe.TIMEOUT value.\\n     *    (Integer) hold - The optional HTTPBIND hold value.  This is the\\n     *      number of connections the server will hold at one time.  This\\n     *      should almost always be set to 1 (the default).\\n     *    (Integer) wind - The optional HTTBIND window value.  This is the\\n     *      allowed range of request ids that are valid.  The default is 5.\\n     */\\n    _restore: function (jid, callback, wait, hold, wind) {\\n        var session = JSON.parse(window.sessionStorage.getItem('strophe-bosh-session'));\\n        if (typeof session !== \\\"undefined\\\" &&\\n                   session !== null &&\\n                   session.rid &&\\n                   session.sid &&\\n                   session.jid &&\\n                   (    typeof jid === \\\"undefined\\\" ||\\n                        jid === null ||\\n                        Strophe.getBareJidFromJid(session.jid) === Strophe.getBareJidFromJid(jid) ||\\n                        // If authcid is null, then it's an anonymous login, so\\n                        // we compare only the domains:\\n                        ((Strophe.getNodeFromJid(jid) === null) && (Strophe.getDomainFromJid(session.jid) === jid))\\n                    )\\n        ) {\\n            this._conn.restored = true;\\n            this._attach(session.jid, session.sid, session.rid, callback, wait, hold, wind);\\n        } else {\\n            throw { name: \\\"StropheSessionError\\\", message: \\\"_restore: no restoreable session.\\\" };\\n        }\\n    },\\n\\n    /** PrivateFunction: _cacheSession\\n     *  _Private_ handler for the beforeunload event.\\n     *\\n     *  This handler is used to process the Bosh-part of the initial request.\\n     *  Parameters:\\n     *    (Strophe.Request) bodyWrap - The received stanza.\\n     */\\n    _cacheSession: function () {\\n        if (this._conn.authenticated) {\\n            if (this._conn.jid && this.rid && this.sid) {\\n                window.sessionStorage.setItem('strophe-bosh-session', JSON.stringify({\\n                    'jid': this._conn.jid,\\n                    'rid': this.rid,\\n                    'sid': this.sid\\n                }));\\n            }\\n        } else {\\n            window.sessionStorage.removeItem('strophe-bosh-session');\\n        }\\n    },\\n\\n    /** PrivateFunction: _connect_cb\\n     *  _Private_ handler for initial connection request.\\n     *\\n     *  This handler is used to process the Bosh-part of the initial request.\\n     *  Parameters:\\n     *    (Strophe.Request) bodyWrap - The received stanza.\\n     */\\n    _connect_cb: function (bodyWrap) {\\n        var typ = bodyWrap.getAttribute(\\\"type\\\");\\n        var cond, conflict;\\n        if (typ !== null && typ === \\\"terminate\\\") {\\n            // an error occurred\\n            cond = bodyWrap.getAttribute(\\\"condition\\\");\\n            Strophe.error(\\\"BOSH-Connection failed: \\\" + cond);\\n            conflict = bodyWrap.getElementsByTagName(\\\"conflict\\\");\\n            if (cond !== null) {\\n                if (cond === \\\"remote-stream-error\\\" && conflict.length > 0) {\\n                    cond = \\\"conflict\\\";\\n                }\\n                this._conn._changeConnectStatus(Strophe.Status.CONNFAIL, cond);\\n            } else {\\n                this._conn._changeConnectStatus(Strophe.Status.CONNFAIL, \\\"unknown\\\");\\n            }\\n            this._conn._doDisconnect(cond);\\n            return Strophe.Status.CONNFAIL;\\n        }\\n\\n        // check to make sure we don't overwrite these if _connect_cb is\\n        // called multiple times in the case of missing stream:features\\n        if (!this.sid) {\\n            this.sid = bodyWrap.getAttribute(\\\"sid\\\");\\n        }\\n        var wind = bodyWrap.getAttribute('requests');\\n        if (wind) { this.window = parseInt(wind, 10); }\\n        var hold = bodyWrap.getAttribute('hold');\\n        if (hold) { this.hold = parseInt(hold, 10); }\\n        var wait = bodyWrap.getAttribute('wait');\\n        if (wait) { this.wait = parseInt(wait, 10); }\\n        var inactivity = bodyWrap.getAttribute('inactivity');\\n        if (inactivity) { this.inactivity = parseInt(inactivity, 10); }\\n    },\\n\\n    /** PrivateFunction: _disconnect\\n     *  _Private_ part of Connection.disconnect for Bosh\\n     *\\n     *  Parameters:\\n     *    (Request) pres - This stanza will be sent before disconnecting.\\n     */\\n    _disconnect: function (pres) {\\n        this._sendTerminate(pres);\\n    },\\n\\n    /** PrivateFunction: _doDisconnect\\n     *  _Private_ function to disconnect.\\n     *\\n     *  Resets the SID and RID.\\n     */\\n    _doDisconnect: function () {\\n        this.sid = null;\\n        this.rid = Math.floor(Math.random() * 4294967295);\\n        if (this._conn._sessionCachingSupported()) {\\n            window.sessionStorage.removeItem('strophe-bosh-session');\\n        }\\n\\n        this._conn.nextValidRid(this.rid);\\n    },\\n\\n    /** PrivateFunction: _emptyQueue\\n     * _Private_ function to check if the Request queue is empty.\\n     *\\n     *  Returns:\\n     *    True, if there are no Requests queued, False otherwise.\\n     */\\n    _emptyQueue: function () {\\n        return this._requests.length === 0;\\n    },\\n\\n    /** PrivateFunction: _callProtocolErrorHandlers\\n     *  _Private_ function to call error handlers registered for HTTP errors.\\n     *\\n     *  Parameters:\\n     *    (Strophe.Request) req - The request that is changing readyState.\\n     */\\n    _callProtocolErrorHandlers: function (req) {\\n        var reqStatus = this._getRequestStatus(req),\\n            err_callback;\\n        err_callback = this._conn.protocolErrorHandlers.HTTP[reqStatus];\\n        if (err_callback) {\\n            err_callback.call(this, reqStatus);\\n        }\\n    },\\n\\n    /** PrivateFunction: _hitError\\n     *  _Private_ function to handle the error count.\\n     *\\n     *  Requests are resent automatically until their error count reaches\\n     *  5.  Each time an error is encountered, this function is called to\\n     *  increment the count and disconnect if the count is too high.\\n     *\\n     *  Parameters:\\n     *    (Integer) reqStatus - The request status.\\n     */\\n    _hitError: function (reqStatus) {\\n        this.errors++;\\n        Strophe.warn(\\\"request errored, status: \\\" + reqStatus +\\n                     \\\", number of errors: \\\" + this.errors);\\n        if (this.errors > 4) {\\n            this._conn._onDisconnectTimeout();\\n        }\\n    },\\n\\n    /** PrivateFunction: _no_auth_received\\n     *\\n     * Called on stream start/restart when no stream:features\\n     * has been received and sends a blank poll request.\\n     */\\n    _no_auth_received: function (callback) {\\n        Strophe.warn(\\\"Server did not yet offer a supported authentication \\\"+\\n                     \\\"mechanism. Sending a blank poll request.\\\");\\n        if (callback) {\\n            callback = callback.bind(this._conn);\\n        } else {\\n            callback = this._conn._connect_cb.bind(this._conn);\\n        }\\n        var body = this._buildBody();\\n        this._requests.push(\\n            new Strophe.Request(\\n                body.tree(),\\n                this._onRequestStateChange.bind(this, callback),\\n                body.tree().getAttribute(\\\"rid\\\")\\n            )\\n        );\\n        this._throttledRequestHandler();\\n    },\\n\\n    /** PrivateFunction: _onDisconnectTimeout\\n     *  _Private_ timeout handler for handling non-graceful disconnection.\\n     *\\n     *  Cancels all remaining Requests and clears the queue.\\n     */\\n    _onDisconnectTimeout: function () {\\n        this._abortAllRequests();\\n    },\\n\\n    /** PrivateFunction: _abortAllRequests\\n     *  _Private_ helper function that makes sure all pending requests are aborted.\\n     */\\n    _abortAllRequests: function _abortAllRequests() {\\n        var req;\\n        while (this._requests.length > 0) {\\n            req = this._requests.pop();\\n            req.abort = true;\\n            req.xhr.abort();\\n            // jslint complains, but this is fine. setting to empty func\\n            // is necessary for IE6\\n            req.xhr.onreadystatechange = function () {}; // jshint ignore:line\\n        }\\n    },\\n\\n    /** PrivateFunction: _onIdle\\n     *  _Private_ handler called by Strophe.Connection._onIdle\\n     *\\n     *  Sends all queued Requests or polls with empty Request if there are none.\\n     */\\n    _onIdle: function () {\\n        var data = this._conn._data;\\n        // if no requests are in progress, poll\\n        if (this._conn.authenticated && this._requests.length === 0 &&\\n            data.length === 0 && !this._conn.disconnecting) {\\n            Strophe.info(\\\"no requests during idle cycle, sending \\\" +\\n                         \\\"blank request\\\");\\n            data.push(null);\\n        }\\n\\n        if (this._conn.paused) {\\n            return;\\n        }\\n\\n        if (this._requests.length < 2 && data.length > 0) {\\n            var body = this._buildBody();\\n            for (var i = 0; i < data.length; i++) {\\n                if (data[i] !== null) {\\n                    if (data[i] === \\\"restart\\\") {\\n                        body.attrs({\\n                            to: this._conn.domain,\\n                            \\\"xml:lang\\\": \\\"en\\\",\\n                            \\\"xmpp:restart\\\": \\\"true\\\",\\n                            \\\"xmlns:xmpp\\\": Strophe.NS.BOSH\\n                        });\\n                    } else {\\n                        body.cnode(data[i]).up();\\n                    }\\n                }\\n            }\\n            delete this._conn._data;\\n            this._conn._data = [];\\n            this._requests.push(\\n                new Strophe.Request(body.tree(),\\n                                    this._onRequestStateChange.bind(\\n                                        this, this._conn._dataRecv.bind(this._conn)),\\n                                    body.tree().getAttribute(\\\"rid\\\")));\\n            this._throttledRequestHandler();\\n        }\\n\\n        if (this._requests.length > 0) {\\n            var time_elapsed = this._requests[0].age();\\n            if (this._requests[0].dead !== null) {\\n                if (this._requests[0].timeDead() >\\n                    Math.floor(Strophe.SECONDARY_TIMEOUT * this.wait)) {\\n                    this._throttledRequestHandler();\\n                }\\n            }\\n\\n            if (time_elapsed > Math.floor(Strophe.TIMEOUT * this.wait)) {\\n                Strophe.warn(\\\"Request \\\" +\\n                             this._requests[0].id +\\n                             \\\" timed out, over \\\" + Math.floor(Strophe.TIMEOUT * this.wait) +\\n                             \\\" seconds since last activity\\\");\\n                this._throttledRequestHandler();\\n            }\\n        }\\n    },\\n\\n    /** PrivateFunction: _getRequestStatus\\n     *\\n     *  Returns the HTTP status code from a Strophe.Request\\n     *\\n     *  Parameters:\\n     *    (Strophe.Request) req - The Strophe.Request instance.\\n     *    (Integer) def - The default value that should be returned if no\\n     *          status value was found.\\n     */\\n    _getRequestStatus: function (req, def) {\\n        var reqStatus;\\n        if (req.xhr.readyState === 4) {\\n            try {\\n                reqStatus = req.xhr.status;\\n            } catch (e) {\\n                // ignore errors from undefined status attribute. Works\\n                // around a browser bug\\n                Strophe.error(\\n                    \\\"Caught an error while retrieving a request's status, \\\" +\\n                    \\\"reqStatus: \\\" + reqStatus);\\n            }\\n        }\\n        if (typeof(reqStatus) === \\\"undefined\\\") {\\n            reqStatus = typeof def === 'number' ? def : 0;\\n        }\\n        return reqStatus;\\n    },\\n\\n    /** PrivateFunction: _onRequestStateChange\\n     *  _Private_ handler for Strophe.Request state changes.\\n     *\\n     *  This function is called when the XMLHttpRequest readyState changes.\\n     *  It contains a lot of error handling logic for the many ways that\\n     *  requests can fail, and calls the request callback when requests\\n     *  succeed.\\n     *\\n     *  Parameters:\\n     *    (Function) func - The handler for the request.\\n     *    (Strophe.Request) req - The request that is changing readyState.\\n     */\\n    _onRequestStateChange: function (func, req) {\\n        Strophe.debug(\\\"request id \\\"+req.id+\\\".\\\"+req.sends+\\n                      \\\" state changed to \\\"+req.xhr.readyState);\\n        if (req.abort) {\\n            req.abort = false;\\n            return;\\n        }\\n        if (req.xhr.readyState !== 4) {\\n            // The request is not yet complete\\n            return;\\n        }\\n        var reqStatus = this._getRequestStatus(req);\\n        this.lastResponseHeaders = req.xhr.getAllResponseHeaders();\\n        if (this.disconnecting && reqStatus >= 400) {\\n            this._hitError(reqStatus);\\n            this._callProtocolErrorHandlers(req);\\n            return;\\n        }\\n\\n        var valid_request = reqStatus > 0 && reqStatus < 500;\\n        var too_many_retries = req.sends > this._conn.maxRetries;\\n        if (valid_request || too_many_retries) {\\n            // remove from internal queue\\n            this._removeRequest(req);\\n            Strophe.debug(\\\"request id \\\"+req.id+\\\" should now be removed\\\");\\n        }\\n\\n        if (reqStatus === 200) {\\n            // request succeeded\\n            var reqIs0 = (this._requests[0] === req);\\n            var reqIs1 = (this._requests[1] === req);\\n            // if request 1 finished, or request 0 finished and request\\n            // 1 is over Strophe.SECONDARY_TIMEOUT seconds old, we need to\\n            // restart the other - both will be in the first spot, as the\\n            // completed request has been removed from the queue already\\n            if (reqIs1 ||\\n                (reqIs0 && this._requests.length > 0 &&\\n                    this._requests[0].age() > Math.floor(Strophe.SECONDARY_TIMEOUT * this.wait))) {\\n                this._restartRequest(0);\\n            }\\n            this._conn.nextValidRid(Number(req.rid) + 1);\\n            Strophe.debug(\\\"request id \\\"+req.id+\\\".\\\"+req.sends+\\\" got 200\\\");\\n            func(req); // call handler\\n            this.errors = 0;\\n        } else if (reqStatus === 0 ||\\n                   (reqStatus >= 400 && reqStatus < 600) ||\\n                   reqStatus >= 12000) {\\n            // request failed\\n            Strophe.error(\\\"request id \\\"+req.id+\\\".\\\"+req.sends+\\\" error \\\"+reqStatus+\\\" happened\\\");\\n            this._hitError(reqStatus);\\n            this._callProtocolErrorHandlers(req);\\n            if (reqStatus >= 400 && reqStatus < 500) {\\n                this._conn._changeConnectStatus(Strophe.Status.DISCONNECTING, null);\\n                this._conn._doDisconnect();\\n            }\\n        } else {\\n            Strophe.error(\\\"request id \\\"+req.id+\\\".\\\"+req.sends+\\\" error \\\"+reqStatus+\\\" happened\\\");\\n        }\\n\\n        if (!valid_request && !too_many_retries) {\\n            this._throttledRequestHandler();\\n        } else if (too_many_retries && !this._conn.connected) {\\n            this._conn._changeConnectStatus(Strophe.Status.CONNFAIL, \\\"giving-up\\\");\\n        }\\n    },\\n\\n    /** PrivateFunction: _processRequest\\n     *  _Private_ function to process a request in the queue.\\n     *\\n     *  This function takes requests off the queue and sends them and\\n     *  restarts dead requests.\\n     *\\n     *  Parameters:\\n     *    (Integer) i - The index of the request in the queue.\\n     */\\n    _processRequest: function (i) {\\n        var self = this;\\n        var req = this._requests[i];\\n        var reqStatus = this._getRequestStatus(req, -1);\\n\\n        // make sure we limit the number of retries\\n        if (req.sends > this._conn.maxRetries) {\\n            this._conn._onDisconnectTimeout();\\n            return;\\n        }\\n\\n        var time_elapsed = req.age();\\n        var primaryTimeout = (!isNaN(time_elapsed) &&\\n                              time_elapsed > Math.floor(Strophe.TIMEOUT * this.wait));\\n        var secondaryTimeout = (req.dead !== null &&\\n                                req.timeDead() > Math.floor(Strophe.SECONDARY_TIMEOUT * this.wait));\\n        var requestCompletedWithServerError = (req.xhr.readyState === 4 &&\\n                                               (reqStatus < 1 || reqStatus >= 500));\\n        if (primaryTimeout || secondaryTimeout ||\\n            requestCompletedWithServerError) {\\n            if (secondaryTimeout) {\\n                Strophe.error(\\\"Request \\\" + this._requests[i].id +\\n                              \\\" timed out (secondary), restarting\\\");\\n            }\\n            req.abort = true;\\n            req.xhr.abort();\\n            // setting to null fails on IE6, so set to empty function\\n            req.xhr.onreadystatechange = function () {};\\n            this._requests[i] = new Strophe.Request(req.xmlData,\\n                                                    req.origFunc,\\n                                                    req.rid,\\n                                                    req.sends);\\n            req = this._requests[i];\\n        }\\n\\n        if (req.xhr.readyState === 0) {\\n            Strophe.debug(\\\"request id \\\"+req.id+\\\".\\\"+req.sends+\\\" posting\\\");\\n\\n            try {\\n                var contentType = this._conn.options.contentType || \\\"text/xml; charset=utf-8\\\";\\n                req.xhr.open(\\\"POST\\\", this._conn.service, this._conn.options.sync ? false : true);\\n                if (typeof req.xhr.setRequestHeader !== 'undefined') {\\n                    // IE9 doesn't have setRequestHeader\\n                    req.xhr.setRequestHeader(\\\"Content-Type\\\", contentType);\\n                }\\n                if (this._conn.options.withCredentials) {\\n                    req.xhr.withCredentials = true;\\n                }\\n            } catch (e2) {\\n                Strophe.error(\\\"XHR open failed: \\\" + e2.toString());\\n                if (!this._conn.connected) {\\n                    this._conn._changeConnectStatus(\\n                            Strophe.Status.CONNFAIL, \\\"bad-service\\\");\\n                }\\n                this._conn.disconnect();\\n                return;\\n            }\\n\\n            // Fires the XHR request -- may be invoked immediately\\n            // or on a gradually expanding retry window for reconnects\\n            var sendFunc = function () {\\n                req.date = new Date();\\n                if (self._conn.options.customHeaders){\\n                    var headers = self._conn.options.customHeaders;\\n                    for (var header in headers) {\\n                        if (headers.hasOwnProperty(header)) {\\n                            req.xhr.setRequestHeader(header, headers[header]);\\n                        }\\n                    }\\n                }\\n                req.xhr.send(req.data);\\n            };\\n\\n            // Implement progressive backoff for reconnects --\\n            // First retry (send === 1) should also be instantaneous\\n            if (req.sends > 1) {\\n                // Using a cube of the retry number creates a nicely\\n                // expanding retry window\\n                var backoff = Math.min(Math.floor(Strophe.TIMEOUT * this.wait),\\n                                       Math.pow(req.sends, 3)) * 1000;\\n                setTimeout(function() {\\n                    // XXX: setTimeout should be called only with function expressions (23974bc1)\\n                    sendFunc();\\n                }, backoff);\\n            } else {\\n                sendFunc();\\n            }\\n\\n            req.sends++;\\n\\n            if (this._conn.xmlOutput !== Strophe.Connection.prototype.xmlOutput) {\\n                if (req.xmlData.nodeName === this.strip && req.xmlData.childNodes.length) {\\n                    this._conn.xmlOutput(req.xmlData.childNodes[0]);\\n                } else {\\n                    this._conn.xmlOutput(req.xmlData);\\n                }\\n            }\\n            if (this._conn.rawOutput !== Strophe.Connection.prototype.rawOutput) {\\n                this._conn.rawOutput(req.data);\\n            }\\n        } else {\\n            Strophe.debug(\\\"_processRequest: \\\" +\\n                          (i === 0 ? \\\"first\\\" : \\\"second\\\") +\\n                          \\\" request has readyState of \\\" +\\n                          req.xhr.readyState);\\n        }\\n    },\\n\\n    /** PrivateFunction: _removeRequest\\n     *  _Private_ function to remove a request from the queue.\\n     *\\n     *  Parameters:\\n     *    (Strophe.Request) req - The request to remove.\\n     */\\n    _removeRequest: function (req) {\\n        Strophe.debug(\\\"removing request\\\");\\n        var i;\\n        for (i = this._requests.length - 1; i >= 0; i--) {\\n            if (req === this._requests[i]) {\\n                this._requests.splice(i, 1);\\n            }\\n        }\\n        // IE6 fails on setting to null, so set to empty function\\n        req.xhr.onreadystatechange = function () {};\\n        this._throttledRequestHandler();\\n    },\\n\\n    /** PrivateFunction: _restartRequest\\n     *  _Private_ function to restart a request that is presumed dead.\\n     *\\n     *  Parameters:\\n     *    (Integer) i - The index of the request in the queue.\\n     */\\n    _restartRequest: function (i) {\\n        var req = this._requests[i];\\n        if (req.dead === null) {\\n            req.dead = new Date();\\n        }\\n\\n        this._processRequest(i);\\n    },\\n\\n    /** PrivateFunction: _reqToData\\n     * _Private_ function to get a stanza out of a request.\\n     *\\n     * Tries to extract a stanza out of a Request Object.\\n     * When this fails the current connection will be disconnected.\\n     *\\n     *  Parameters:\\n     *    (Object) req - The Request.\\n     *\\n     *  Returns:\\n     *    The stanza that was passed.\\n     */\\n    _reqToData: function (req) {\\n        try {\\n            return req.getResponse();\\n        } catch (e) {\\n            if (e !== \\\"parsererror\\\") { throw e; }\\n            this._conn.disconnect(\\\"strophe-parsererror\\\");\\n        }\\n    },\\n\\n    /** PrivateFunction: _sendTerminate\\n     *  _Private_ function to send initial disconnect sequence.\\n     *\\n     *  This is the first step in a graceful disconnect.  It sends\\n     *  the BOSH server a terminate body and includes an unavailable\\n     *  presence if authentication has completed.\\n     */\\n    _sendTerminate: function (pres) {\\n        Strophe.info(\\\"_sendTerminate was called\\\");\\n        var body = this._buildBody().attrs({type: \\\"terminate\\\"});\\n        if (pres) {\\n            body.cnode(pres.tree());\\n        }\\n        var req = new Strophe.Request(\\n            body.tree(),\\n            this._onRequestStateChange.bind(\\n            this, this._conn._dataRecv.bind(this._conn)),\\n            body.tree().getAttribute(\\\"rid\\\")\\n        );\\n        this._requests.push(req);\\n        this._throttledRequestHandler();\\n    },\\n\\n    /** PrivateFunction: _send\\n     *  _Private_ part of the Connection.send function for BOSH\\n     *\\n     * Just triggers the RequestHandler to send the messages that are in the queue\\n     */\\n    _send: function () {\\n        clearTimeout(this._conn._idleTimeout);\\n        this._throttledRequestHandler();\\n\\n        // XXX: setTimeout should be called only with function expressions (23974bc1)\\n        this._conn._idleTimeout = setTimeout(function() {\\n            this._onIdle();\\n        }.bind(this._conn), 100);\\n    },\\n\\n    /** PrivateFunction: _sendRestart\\n     *\\n     *  Send an xmpp:restart stanza.\\n     */\\n    _sendRestart: function () {\\n        this._throttledRequestHandler();\\n        clearTimeout(this._conn._idleTimeout);\\n    },\\n\\n    /** PrivateFunction: _throttledRequestHandler\\n     *  _Private_ function to throttle requests to the connection window.\\n     *\\n     *  This function makes sure we don't send requests so fast that the\\n     *  request ids overflow the connection window in the case that one\\n     *  request died.\\n     */\\n    _throttledRequestHandler: function () {\\n        if (!this._requests) {\\n            Strophe.debug(\\\"_throttledRequestHandler called with \\\" +\\n                          \\\"undefined requests\\\");\\n        } else {\\n            Strophe.debug(\\\"_throttledRequestHandler called with \\\" +\\n                          this._requests.length + \\\" requests\\\");\\n        }\\n\\n        if (!this._requests || this._requests.length === 0) {\\n            return;\\n        }\\n\\n        if (this._requests.length > 0) {\\n            this._processRequest(0);\\n        }\\n\\n        if (this._requests.length > 1 &&\\n            Math.abs(this._requests[0].rid -\\n                     this._requests[1].rid) < this.window) {\\n            this._processRequest(1);\\n        }\\n    }\\n};\\nreturn Strophe;\\n}));\\n\\n/*\\n    This program is distributed under the terms of the MIT license.\\n    Please see the LICENSE file for details.\\n\\n    Copyright 2006-2008, OGG, LLC\\n*/\\n\\n/* jshint undef: true, unused: true:, noarg: true, latedef: true */\\n/* global define, window, clearTimeout, WebSocket, DOMParser, Strophe, $build */\\n\\n(function (root, factory) {\\n    if (typeof define === 'function' && define.amd) {\\n        define('strophe-websocket',['strophe-core'], function (core) {\\n            return factory(\\n                core.Strophe,\\n                core.$build\\n            );\\n        });\\n    } else if (typeof exports === 'object') {\\n        var core = require('./core');\\n\\n        module.exports = factory(core.Strophe, core.$build);\\n    } else {\\n        // Browser globals\\n        return factory(Strophe, $build);\\n    }\\n}(this, function (Strophe, $build) {\\n\\n/** Class: Strophe.WebSocket\\n *  _Private_ helper class that handles WebSocket Connections\\n *\\n *  The Strophe.WebSocket class is used internally by Strophe.Connection\\n *  to encapsulate WebSocket sessions. It is not meant to be used from user's code.\\n */\\n\\n/** File: websocket.js\\n *  A JavaScript library to enable XMPP over Websocket in Strophejs.\\n *\\n *  This file implements XMPP over WebSockets for Strophejs.\\n *  If a Connection is established with a Websocket url (ws://...)\\n *  Strophe will use WebSockets.\\n *  For more information on XMPP-over-WebSocket see RFC 7395:\\n *  http://tools.ietf.org/html/rfc7395\\n *\\n *  WebSocket support implemented by Andreas Guth (andreas.guth@rwth-aachen.de)\\n */\\n\\n/** PrivateConstructor: Strophe.Websocket\\n *  Create and initialize a Strophe.WebSocket object.\\n *  Currently only sets the connection Object.\\n *\\n *  Parameters:\\n *    (Strophe.Connection) connection - The Strophe.Connection that will use WebSockets.\\n *\\n *  Returns:\\n *    A new Strophe.WebSocket object.\\n */\\nStrophe.Websocket = function(connection) {\\n    this._conn = connection;\\n    this.strip = \\\"wrapper\\\";\\n\\n    var service = connection.service;\\n    if (service.indexOf(\\\"ws:\\\") !== 0 && service.indexOf(\\\"wss:\\\") !== 0) {\\n        // If the service is not an absolute URL, assume it is a path and put the absolute\\n        // URL together from options, current URL and the path.\\n        var new_service = \\\"\\\";\\n\\n        if (connection.options.protocol === \\\"ws\\\" && window.location.protocol !== \\\"https:\\\") {\\n            new_service += \\\"ws\\\";\\n        } else {\\n            new_service += \\\"wss\\\";\\n        }\\n\\n        new_service += \\\"://\\\" + window.location.host;\\n\\n        if (service.indexOf(\\\"/\\\") !== 0) {\\n            new_service += window.location.pathname + service;\\n        } else {\\n            new_service += service;\\n        }\\n\\n        connection.service = new_service;\\n    }\\n};\\n\\nStrophe.Websocket.prototype = {\\n    /** PrivateFunction: _buildStream\\n     *  _Private_ helper function to generate the <stream> start tag for WebSockets\\n     *\\n     *  Returns:\\n     *    A Strophe.Builder with a <stream> element.\\n     */\\n    _buildStream: function () {\\n        return $build(\\\"open\\\", {\\n            \\\"xmlns\\\": Strophe.NS.FRAMING,\\n            \\\"to\\\": this._conn.domain,\\n            \\\"version\\\": '1.0'\\n        });\\n    },\\n\\n    /** PrivateFunction: _check_streamerror\\n     * _Private_ checks a message for stream:error\\n     *\\n     *  Parameters:\\n     *    (Strophe.Request) bodyWrap - The received stanza.\\n     *    connectstatus - The ConnectStatus that will be set on error.\\n     *  Returns:\\n     *     true if there was a streamerror, false otherwise.\\n     */\\n    _check_streamerror: function (bodyWrap, connectstatus) {\\n        var errors;\\n        if (bodyWrap.getElementsByTagNameNS) {\\n            errors = bodyWrap.getElementsByTagNameNS(Strophe.NS.STREAM, \\\"error\\\");\\n        } else {\\n            errors = bodyWrap.getElementsByTagName(\\\"stream:error\\\");\\n        }\\n        if (errors.length === 0) {\\n            return false;\\n        }\\n        var error = errors[0];\\n\\n        var condition = \\\"\\\";\\n        var text = \\\"\\\";\\n\\n        var ns = \\\"urn:ietf:params:xml:ns:xmpp-streams\\\";\\n        for (var i = 0; i < error.childNodes.length; i++) {\\n            var e = error.childNodes[i];\\n            if (e.getAttribute(\\\"xmlns\\\") !== ns) {\\n                break;\\n            } if (e.nodeName === \\\"text\\\") {\\n                text = e.textContent;\\n            } else {\\n                condition = e.nodeName;\\n            }\\n        }\\n\\n        var errorString = \\\"WebSocket stream error: \\\";\\n\\n        if (condition) {\\n            errorString += condition;\\n        } else {\\n            errorString += \\\"unknown\\\";\\n        }\\n\\n        if (text) {\\n            errorString += \\\" - \\\" + text;\\n        }\\n\\n        Strophe.error(errorString);\\n\\n        // close the connection on stream_error\\n        this._conn._changeConnectStatus(connectstatus, condition);\\n        this._conn._doDisconnect();\\n        return true;\\n    },\\n\\n    /** PrivateFunction: _reset\\n     *  Reset the connection.\\n     *\\n     *  This function is called by the reset function of the Strophe Connection.\\n     *  Is not needed by WebSockets.\\n     */\\n    _reset: function () {\\n        return;\\n    },\\n\\n    /** PrivateFunction: _connect\\n     *  _Private_ function called by Strophe.Connection.connect\\n     *\\n     *  Creates a WebSocket for a connection and assigns Callbacks to it.\\n     *  Does nothing if there already is a WebSocket.\\n     */\\n    _connect: function () {\\n        // Ensure that there is no open WebSocket from a previous Connection.\\n        this._closeSocket();\\n\\n        // Create the new WobSocket\\n        this.socket = new WebSocket(this._conn.service, \\\"xmpp\\\");\\n        this.socket.onopen = this._onOpen.bind(this);\\n        this.socket.onerror = this._onError.bind(this);\\n        this.socket.onclose = this._onClose.bind(this);\\n        this.socket.onmessage = this._connect_cb_wrapper.bind(this);\\n    },\\n\\n    /** PrivateFunction: _connect_cb\\n     *  _Private_ function called by Strophe.Connection._connect_cb\\n     *\\n     * checks for stream:error\\n     *\\n     *  Parameters:\\n     *    (Strophe.Request) bodyWrap - The received stanza.\\n     */\\n    _connect_cb: function(bodyWrap) {\\n        var error = this._check_streamerror(bodyWrap, Strophe.Status.CONNFAIL);\\n        if (error) {\\n            return Strophe.Status.CONNFAIL;\\n        }\\n    },\\n\\n    /** PrivateFunction: _handleStreamStart\\n     * _Private_ function that checks the opening <open /> tag for errors.\\n     *\\n     * Disconnects if there is an error and returns false, true otherwise.\\n     *\\n     *  Parameters:\\n     *    (Node) message - Stanza containing the <open /> tag.\\n     */\\n    _handleStreamStart: function(message) {\\n        var error = false;\\n\\n        // Check for errors in the <open /> tag\\n        var ns = message.getAttribute(\\\"xmlns\\\");\\n        if (typeof ns !== \\\"string\\\") {\\n            error = \\\"Missing xmlns in <open />\\\";\\n        } else if (ns !== Strophe.NS.FRAMING) {\\n            error = \\\"Wrong xmlns in <open />: \\\" + ns;\\n        }\\n\\n        var ver = message.getAttribute(\\\"version\\\");\\n        if (typeof ver !== \\\"string\\\") {\\n            error = \\\"Missing version in <open />\\\";\\n        } else if (ver !== \\\"1.0\\\") {\\n            error = \\\"Wrong version in <open />: \\\" + ver;\\n        }\\n\\n        if (error) {\\n            this._conn._changeConnectStatus(Strophe.Status.CONNFAIL, error);\\n            this._conn._doDisconnect();\\n            return false;\\n        }\\n\\n        return true;\\n    },\\n\\n    /** PrivateFunction: _connect_cb_wrapper\\n     * _Private_ function that handles the first connection messages.\\n     *\\n     * On receiving an opening stream tag this callback replaces itself with the real\\n     * message handler. On receiving a stream error the connection is terminated.\\n     */\\n    _connect_cb_wrapper: function(message) {\\n        if (message.data.indexOf(\\\"<open \\\") === 0 || message.data.indexOf(\\\"<?xml\\\") === 0) {\\n            // Strip the XML Declaration, if there is one\\n            var data = message.data.replace(/^(<\\\\?.*?\\\\?>\\\\s*)*/, \\\"\\\");\\n            if (data === '') return;\\n\\n            var streamStart = new DOMParser().parseFromString(data, \\\"text/xml\\\").documentElement;\\n            this._conn.xmlInput(streamStart);\\n            this._conn.rawInput(message.data);\\n\\n            //_handleStreamSteart will check for XML errors and disconnect on error\\n            if (this._handleStreamStart(streamStart)) {\\n                //_connect_cb will check for stream:error and disconnect on error\\n                this._connect_cb(streamStart);\\n            }\\n        } else if (message.data.indexOf(\\\"<close \\\") === 0) { // <close xmlns=\\\"urn:ietf:params:xml:ns:xmpp-framing />\\n            // Parse the raw string to an XML element\\n            var parsedMessage = new DOMParser().parseFromString(message.data, \\\"text/xml\\\").documentElement;\\n            // Report this input to the raw and xml handlers\\n            this._conn.xmlInput(parsedMessage);\\n            this._conn.rawInput(message.data);\\n            var see_uri = parsedMessage.getAttribute(\\\"see-other-uri\\\");\\n            if (see_uri) {\\n                var service = this._conn.service;\\n                // Valid scenarios: WSS->WSS, WS->ANY\\n                var isSecureRedirect = (service.indexOf(\\\"wss:\\\") >= 0 && see_uri.indexOf(\\\"wss:\\\") >= 0) || (service.indexOf(\\\"ws:\\\") >= 0);\\n                if(isSecureRedirect) {\\n                    this._conn._changeConnectStatus(\\n                        Strophe.Status.REDIRECT,\\n                        \\\"Received see-other-uri, resetting connection\\\"\\n                    );\\n                    this._conn.reset();\\n                    this._conn.service = see_uri;\\n                    this._connect();\\n                }\\n            } else {\\n                this._conn._changeConnectStatus(\\n                    Strophe.Status.CONNFAIL,\\n                    \\\"Received closing stream\\\"\\n                );\\n                this._conn._doDisconnect();\\n            }\\n        } else {\\n            var string = this._streamWrap(message.data);\\n            var elem = new DOMParser().parseFromString(string, \\\"text/xml\\\").documentElement;\\n            this.socket.onmessage = this._onMessage.bind(this);\\n            this._conn._connect_cb(elem, null, message.data);\\n        }\\n    },\\n\\n    /** PrivateFunction: _disconnect\\n     *  _Private_ function called by Strophe.Connection.disconnect\\n     *\\n     *  Disconnects and sends a last stanza if one is given\\n     *\\n     *  Parameters:\\n     *    (Request) pres - This stanza will be sent before disconnecting.\\n     */\\n    _disconnect: function (pres) {\\n        if (this.socket && this.socket.readyState !== WebSocket.CLOSED) {\\n            if (pres) {\\n                this._conn.send(pres);\\n            }\\n            var close = $build(\\\"close\\\", { \\\"xmlns\\\": Strophe.NS.FRAMING });\\n            this._conn.xmlOutput(close.tree());\\n            var closeString = Strophe.serialize(close);\\n            this._conn.rawOutput(closeString);\\n            try {\\n                this.socket.send(closeString);\\n            } catch (e) {\\n                Strophe.info(\\\"Couldn't send <close /> tag.\\\");\\n            }\\n        }\\n        this._conn._doDisconnect();\\n    },\\n\\n    /** PrivateFunction: _doDisconnect\\n     *  _Private_ function to disconnect.\\n     *\\n     *  Just closes the Socket for WebSockets\\n     */\\n    _doDisconnect: function () {\\n        Strophe.info(\\\"WebSockets _doDisconnect was called\\\");\\n        this._closeSocket();\\n    },\\n\\n    /** PrivateFunction _streamWrap\\n     *  _Private_ helper function to wrap a stanza in a <stream> tag.\\n     *  This is used so Strophe can process stanzas from WebSockets like BOSH\\n     */\\n    _streamWrap: function (stanza) {\\n        return \\\"<wrapper>\\\" + stanza + '</wrapper>';\\n    },\\n\\n\\n    /** PrivateFunction: _closeSocket\\n     *  _Private_ function to close the WebSocket.\\n     *\\n     *  Closes the socket if it is still open and deletes it\\n     */\\n    _closeSocket: function () {\\n        if (this.socket) { try {\\n            this.socket.onerror = null;\\n            this.socket.close();\\n        } catch (e) {} }\\n        this.socket = null;\\n    },\\n\\n    /** PrivateFunction: _emptyQueue\\n     * _Private_ function to check if the message queue is empty.\\n     *\\n     *  Returns:\\n     *    True, because WebSocket messages are send immediately after queueing.\\n     */\\n    _emptyQueue: function () {\\n        return true;\\n    },\\n\\n    /** PrivateFunction: _onClose\\n     * _Private_ function to handle websockets closing.\\n     *\\n     * Nothing to do here for WebSockets\\n     */\\n    _onClose: function(e) {\\n        if(this._conn.connected && !this._conn.disconnecting) {\\n            Strophe.error(\\\"Websocket closed unexpectedly\\\");\\n            this._conn._doDisconnect();\\n        } else if (e && e.code === 1006 && !this._conn.connected && this.socket) {\\n            // in case the onError callback was not called (Safari 10 does not\\n            // call onerror when the initial connection fails) we need to\\n            // dispatch a CONNFAIL status update to be consistent with the\\n            // behavior on other browsers.\\n            Strophe.error(\\\"Websocket closed unexcectedly\\\");\\n            this._conn._changeConnectStatus(\\n                Strophe.Status.CONNFAIL,\\n                \\\"The WebSocket connection could not be established or was disconnected.\\\"\\n            );\\n            this._conn._doDisconnect();\\n        } else {\\n            Strophe.info(\\\"Websocket closed\\\");\\n        }\\n    },\\n\\n    /** PrivateFunction: _no_auth_received\\n     *\\n     * Called on stream start/restart when no stream:features\\n     * has been received.\\n     */\\n    _no_auth_received: function (callback) {\\n        Strophe.error(\\\"Server did not offer a supported authentication mechanism\\\");\\n        this._changeConnectStatus(\\n            Strophe.Status.CONNFAIL,\\n            Strophe.ErrorCondition.NO_AUTH_MECH\\n        );\\n        if (callback) {\\n            callback.call(this._conn);\\n        }\\n        this._conn._doDisconnect();\\n    },\\n\\n    /** PrivateFunction: _onDisconnectTimeout\\n     *  _Private_ timeout handler for handling non-graceful disconnection.\\n     *\\n     *  This does nothing for WebSockets\\n     */\\n    _onDisconnectTimeout: function () {},\\n\\n    /** PrivateFunction: _abortAllRequests\\n     *  _Private_ helper function that makes sure all pending requests are aborted.\\n     */\\n    _abortAllRequests: function () {},\\n\\n    /** PrivateFunction: _onError\\n     * _Private_ function to handle websockets errors.\\n     *\\n     * Parameters:\\n     * (Object) error - The websocket error.\\n     */\\n    _onError: function(error) {\\n        Strophe.error(\\\"Websocket error \\\" + error);\\n        this._conn._changeConnectStatus(\\n            Strophe.Status.CONNFAIL,\\n            \\\"The WebSocket connection could not be established or was disconnected.\\\"\\n        );\\n        this._disconnect();\\n    },\\n\\n    /** PrivateFunction: _onIdle\\n     *  _Private_ function called by Strophe.Connection._onIdle\\n     *\\n     *  sends all queued stanzas\\n     */\\n    _onIdle: function () {\\n        var data = this._conn._data;\\n        if (data.length > 0 && !this._conn.paused) {\\n            for (var i = 0; i < data.length; i++) {\\n                if (data[i] !== null) {\\n                    var stanza, rawStanza;\\n                    if (data[i] === \\\"restart\\\") {\\n                        stanza = this._buildStream().tree();\\n                    } else {\\n                        stanza = data[i];\\n                    }\\n                    rawStanza = Strophe.serialize(stanza);\\n                    this._conn.xmlOutput(stanza);\\n                    this._conn.rawOutput(rawStanza);\\n                    this.socket.send(rawStanza);\\n                }\\n            }\\n            this._conn._data = [];\\n        }\\n    },\\n\\n    /** PrivateFunction: _onMessage\\n     * _Private_ function to handle websockets messages.\\n     *\\n     * This function parses each of the messages as if they are full documents.\\n     * [TODO : We may actually want to use a SAX Push parser].\\n     *\\n     * Since all XMPP traffic starts with\\n     *  <stream:stream version='1.0'\\n     *                 xml:lang='en'\\n     *                 xmlns='jabber:client'\\n     *                 xmlns:stream='http://etherx.jabber.org/streams'\\n     *                 id='3697395463'\\n     *                 from='SERVER'>\\n     *\\n     * The first stanza will always fail to be parsed.\\n     *\\n     * Additionally, the seconds stanza will always be <stream:features> with\\n     * the stream NS defined in the previous stanza, so we need to 'force'\\n     * the inclusion of the NS in this stanza.\\n     *\\n     * Parameters:\\n     * (string) message - The websocket message.\\n     */\\n    _onMessage: function(message) {\\n        var elem, data;\\n        // check for closing stream\\n        var close = '<close xmlns=\\\"urn:ietf:params:xml:ns:xmpp-framing\\\" />';\\n        if (message.data === close) {\\n            this._conn.rawInput(close);\\n            this._conn.xmlInput(message);\\n            if (!this._conn.disconnecting) {\\n                this._conn._doDisconnect();\\n            }\\n            return;\\n        } else if (message.data.search(\\\"<open \\\") === 0) {\\n            // This handles stream restarts\\n            elem = new DOMParser().parseFromString(message.data, \\\"text/xml\\\").documentElement;\\n            if (!this._handleStreamStart(elem)) {\\n                return;\\n            }\\n        } else {\\n            data = this._streamWrap(message.data);\\n            elem = new DOMParser().parseFromString(data, \\\"text/xml\\\").documentElement;\\n        }\\n\\n        if (this._check_streamerror(elem, Strophe.Status.ERROR)) {\\n            return;\\n        }\\n\\n        //handle unavailable presence stanza before disconnecting\\n        if (this._conn.disconnecting &&\\n                elem.firstChild.nodeName === \\\"presence\\\" &&\\n                elem.firstChild.getAttribute(\\\"type\\\") === \\\"unavailable\\\") {\\n            this._conn.xmlInput(elem);\\n            this._conn.rawInput(Strophe.serialize(elem));\\n            // if we are already disconnecting we will ignore the unavailable stanza and\\n            // wait for the </stream:stream> tag before we close the connection\\n            return;\\n        }\\n        this._conn._dataRecv(elem, message.data);\\n    },\\n\\n    /** PrivateFunction: _onOpen\\n     * _Private_ function to handle websockets connection setup.\\n     *\\n     * The opening stream tag is sent here.\\n     */\\n    _onOpen: function() {\\n        Strophe.info(\\\"Websocket open\\\");\\n        var start = this._buildStream();\\n        this._conn.xmlOutput(start.tree());\\n\\n        var startString = Strophe.serialize(start);\\n        this._conn.rawOutput(startString);\\n        this.socket.send(startString);\\n    },\\n\\n    /** PrivateFunction: _reqToData\\n     * _Private_ function to get a stanza out of a request.\\n     *\\n     * WebSockets don't use requests, so the passed argument is just returned.\\n     *\\n     *  Parameters:\\n     *    (Object) stanza - The stanza.\\n     *\\n     *  Returns:\\n     *    The stanza that was passed.\\n     */\\n    _reqToData: function (stanza) {\\n        return stanza;\\n    },\\n\\n    /** PrivateFunction: _send\\n     *  _Private_ part of the Connection.send function for WebSocket\\n     *\\n     * Just flushes the messages that are in the queue\\n     */\\n    _send: function () {\\n        this._conn.flush();\\n    },\\n\\n    /** PrivateFunction: _sendRestart\\n     *\\n     *  Send an xmpp:restart stanza.\\n     */\\n    _sendRestart: function () {\\n        clearTimeout(this._conn._idleTimeout);\\n        this._conn._onIdle.bind(this._conn)();\\n    }\\n};\\nreturn Strophe;\\n}));\\n\\n(function(root){\\n    if(typeof define === 'function' && define.amd){\\n        define('strophe',[\\n            \\\"strophe-core\\\",\\n            \\\"strophe-bosh\\\",\\n            \\\"strophe-websocket\\\"\\n        ], function (wrapper) {\\n            return wrapper;\\n        });\\n    } else if (typeof exports === 'object') {\\n        var core = require('./core');\\n        require('./bosh');\\n        require('./websocket');\\n        module.exports = core;\\n    }\\n})(this);\\n\\n\\nrequire([\\\"strophe-polyfill\\\"]);\\n/* jshint ignore:start */\\n    //The modules for your project will be inlined above\\n    //this snippet. Ask almond to synchronously require the\\n    //module value for 'main' here and return it as the\\n    //value to use for the public API for the built file.\\n    return require('strophe');\\n}));\\n/* jshint ignore:end */\\n\",\"/**\\n * The events for the conference.\\n */\\n\\n/**\\n * Indicates that authentication status changed.\\n */\\nexport const AUTH_STATUS_CHANGED = 'conference.auth_status_changed';\\n\\n/**\\n * A participant avatar has changed.\\n */\\nexport const AVATAR_CHANGED = 'conference.avatarChanged';\\n\\n/**\\n * Fired just before the statistics module is disposed and it's the last chance\\n * to submit some logs to the statistics service (ex. CallStats if enabled),\\n * before it's disconnected.\\n */\\nexport const BEFORE_STATISTICS_DISPOSED = 'conference.beforeStatisticsDisposed';\\n\\n/**\\n * Indicates that an error occured.\\n */\\nexport const CONFERENCE_ERROR = 'conference.error';\\n\\n/**\\n * Indicates that conference failed.\\n */\\nexport const CONFERENCE_FAILED = 'conference.failed';\\n\\n/**\\n * Indicates that conference has been joined. The event does NOT provide any\\n * parameters to its listeners.\\n */\\nexport const CONFERENCE_JOINED = 'conference.joined';\\n\\n/**\\n * Indicates that conference has been left.\\n */\\nexport const CONFERENCE_LEFT = 'conference.left';\\n\\n/**\\n * Indicates that the connection to the conference has been established\\n * XXX This is currently fired whenVthe *ICE* connection enters 'connected'\\n * state for the first time.\\n */\\nexport const CONNECTION_ESTABLISHED = 'conference.connectionEstablished';\\n\\n/**\\n * Indicates that the connection to the conference has been interrupted for some\\n * reason.\\n * XXX This is currently fired when the *ICE* connection is interrupted.\\n */\\nexport const CONNECTION_INTERRUPTED = 'conference.connectionInterrupted';\\n\\n/**\\n * Indicates that the connection to the conference has been restored.\\n * XXX This is currently fired when the *ICE* connection is restored.\\n */\\nexport const CONNECTION_RESTORED = 'conference.connectionRestored';\\n\\n/**\\n * A connection to the video bridge's data channel has been established.\\n */\\nexport const DATA_CHANNEL_OPENED = 'conference.dataChannelOpened';\\n\\n/**\\n * A user has changed it display name\\n */\\nexport const DISPLAY_NAME_CHANGED = 'conference.displayNameChanged';\\n\\n/**\\n * The dominant speaker was changed.\\n */\\nexport const DOMINANT_SPEAKER_CHANGED = 'conference.dominantSpeaker';\\n\\n/**\\n * Indicates that DTMF support changed.\\n */\\nexport const DTMF_SUPPORT_CHANGED = 'conference.dtmfSupportChanged';\\n\\n/**\\n * Indicates that a message from another participant is received on data\\n * channel.\\n */\\nexport const ENDPOINT_MESSAGE_RECEIVED = 'conference.endpoint_message_received';\\n\\n/**\\n * NOTE This is lib-jitsi-meet internal event and can be removed at any time !\\n *\\n * Event emitted when conference transits, between one to one and multiparty JVB\\n * conference. If the conference switches to P2P it's neither one to one nor\\n * a multiparty JVB conference, but P2P (the status argument of this event will\\n * be <tt>false</tt>).\\n *\\n * The first argument is a boolean which carries the previous value and\\n * the seconds argument is a boolean with the new status. The event is emitted\\n * only if the previous and the new values are different.\\n *\\n * @type {string}\\n */\\nexport const JVB121_STATUS = 'conference.jvb121Status';\\n\\n/**\\n * You are kicked from the conference.\\n */\\nexport const KICKED = 'conference.kicked';\\n\\n/**\\n * The Last N set is changed.\\n *\\n * @param {Array<string>|null} leavingEndpointIds the ids of all the endpoints\\n * which are leaving Last N\\n * @param {Array<string>|null} enteringEndpointIds the ids of all the endpoints\\n * which are entering Last N\\n */\\nexport const LAST_N_ENDPOINTS_CHANGED = 'conference.lastNEndpointsChanged';\\n\\n/**\\n * Indicates that the room has been locked or unlocked.\\n */\\nexport const LOCK_STATE_CHANGED = 'conference.lock_state_changed';\\n\\n/**\\n * Indicates that the region of the media server (jitsi-videobridge) that we\\n * are connected to changed (or was initially set).\\n * @type {string} the region.\\n */\\nexport const SERVER_REGION_CHANGED = 'conference.server_region_changed';\\n\\n/**\\n * New text message was received.\\n */\\nexport const MESSAGE_RECEIVED = 'conference.messageReceived';\\n\\n/**\\n * New private text message was received.\\n */\\nexport const PRIVATE_MESSAGE_RECEIVED = 'conference.privateMessageReceived';\\n\\n/**\\n * Event fired when JVB sends notification about interrupted/restored user's\\n * ICE connection status or we detect local problem with the video track.\\n * First argument is the ID of the participant and\\n * the seconds is a string indicating if the connection is currently\\n * - active - the connection is active\\n * - inactive - the connection is inactive, was intentionally interrupted by\\n * the bridge\\n * - interrupted - a network problem occurred\\n * - restoring - the connection was inactive and is restoring now\\n *\\n * The current status value can be obtained by calling\\n * JitsiParticipant.getConnectionStatus().\\n */\\nexport const PARTICIPANT_CONN_STATUS_CHANGED\\n    = 'conference.participant_conn_status_changed';\\n\\n/**\\n * Indicates that the features of the participant has been changed.\\n */\\nexport const PARTCIPANT_FEATURES_CHANGED\\n    = 'conference.partcipant_features_changed';\\n\\n/**\\n * Indicates that a the value of a specific property of a specific participant\\n * has changed.\\n */\\nexport const PARTICIPANT_PROPERTY_CHANGED\\n    = 'conference.participant_property_changed';\\n\\n/**\\n * Indicates that the conference has switched between JVB and P2P connections.\\n * The first argument of this event is a <tt>boolean</tt> which when set to\\n * <tt>true</tt> means that the conference is running on the P2P connection.\\n */\\nexport const P2P_STATUS = 'conference.p2pStatus';\\n\\n/**\\n * Indicates that phone number changed.\\n */\\nexport const PHONE_NUMBER_CHANGED = 'conference.phoneNumberChanged';\\n\\n/**\\n * The conference properties changed.\\n * @type {string}\\n */\\nexport const PROPERTIES_CHANGED = 'conference.propertiesChanged';\\n\\n/**\\n * Indicates that recording state changed.\\n */\\nexport const RECORDER_STATE_CHANGED = 'conference.recorderStateChanged';\\n\\n/**\\n * Indicates that video SIP GW state changed.\\n * @param {VideoSIPGWConstants} status.\\n */\\nexport const VIDEO_SIP_GW_AVAILABILITY_CHANGED\\n    = 'conference.videoSIPGWAvailabilityChanged';\\n\\n/**\\n * Indicates that video SIP GW Session state changed.\\n * @param {options} event - {\\n *     {string} address,\\n *     {VideoSIPGWConstants} oldState,\\n *     {VideoSIPGWConstants} newState,\\n *     {string} displayName}\\n * }.\\n */\\nexport const VIDEO_SIP_GW_SESSION_STATE_CHANGED\\n    = 'conference.videoSIPGWSessionStateChanged';\\n\\n/**\\n * Indicates that start muted settings changed.\\n */\\nexport const START_MUTED_POLICY_CHANGED\\n    = 'conference.start_muted_policy_changed';\\n\\n/**\\n * Indicates that the local user has started muted.\\n */\\nexport const STARTED_MUTED = 'conference.started_muted';\\n\\n/**\\n * Indicates that subject of the conference has changed.\\n */\\nexport const SUBJECT_CHANGED = 'conference.subjectChanged';\\n\\n/**\\n * Indicates that DTMF support changed.\\n */\\nexport const SUSPEND_DETECTED = 'conference.suspendDetected';\\n\\n/**\\n * Event indicates that local user is talking while he muted himself\\n */\\nexport const TALK_WHILE_MUTED = 'conference.talk_while_muted';\\n\\n/**\\n * A new media track was added to the conference. The event provides the\\n * following parameters to its listeners:\\n *\\n * @param {JitsiTrack} track the added JitsiTrack\\n */\\nexport const TRACK_ADDED = 'conference.trackAdded';\\n\\n/**\\n * Audio levels of a media track ( attached to the conference) was changed.\\n */\\nexport const TRACK_AUDIO_LEVEL_CHANGED = 'conference.audioLevelsChanged';\\n\\n/**\\n * A media track ( attached to the conference) mute status was changed.\\n */\\nexport const TRACK_MUTE_CHANGED = 'conference.trackMuteChanged';\\n\\n/**\\n * The media track was removed from the conference. The event provides the\\n * following parameters to its listeners:\\n *\\n * @param {JitsiTrack} track the removed JitsiTrack\\n */\\nexport const TRACK_REMOVED = 'conference.trackRemoved';\\n\\n/**\\n * Notifies for transcription status changes. The event provides the\\n * following parameters to its listeners:\\n *\\n * @param {String} status - The new status.\\n */\\nexport const TRANSCRIPTION_STATUS_CHANGED\\n    = 'conference.transcriptionStatusChanged';\\n\\n\\n/**\\n * A new user joined the conference.\\n */\\nexport const USER_JOINED = 'conference.userJoined';\\n\\n/**\\n * A user has left the conference.\\n */\\nexport const USER_LEFT = 'conference.userLeft';\\n\\n/**\\n * User role changed.\\n */\\nexport const USER_ROLE_CHANGED = 'conference.roleChanged';\\n\\n/**\\n * User status changed.\\n */\\nexport const USER_STATUS_CHANGED = 'conference.statusChanged';\\n\\n/**\\n * Event indicates that the bot participant type changed.\\n */\\nexport const BOT_TYPE_CHANGED = 'conference.bot_type_changed';\\n\",\"import BrowserCapabilities from './BrowserCapabilities';\\n\\nexport default new BrowserCapabilities();\\n\",\"/* Copyright @ 2015 Atlassian Pty Ltd\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *     http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */\\nvar Logger = require(\\\"./Logger\\\");\\nvar LogCollector = require(\\\"./LogCollector\\\");\\n\\n/**\\n * Definition of the log method\\n * @name log_method\\n * @function\\n * @param {...*} log_args the arguments to be logged\\n */\\n/**\\n * The logger's transport type definition.\\n *\\n * @typedef {object} LoggerTransport\\n *\\n * @property {log_method} trace method called to log on {@link Logger.levels.TRACE} logging level\\n * @property {log_method} debug method called to log on {@link Logger.levels.DEBUG} logging level\\n * @property {log_method} info method called to log on {@link Logger.levels.INFO} logging level\\n * @property {log_method} log method called to log on {@link Logger.levels.LOG} logging level\\n * @property {log_method} warn method called to log on {@link Logger.levels.WARN} logging level\\n * @property {log_method} error method called to log on {@link Logger.levels.ERROR} logging level\\n */\\n\\n/**\\n * Map with the created loggers with ID.\\n */\\nvar idLoggers = {};\\n\\n/**\\n * Array with the loggers without id.\\n */\\nvar loggers = [];\\n\\n/**\\n * Log level for the lbrary.\\n */\\nvar curLevel = Logger.levels.TRACE;\\n\\n\\nmodule.exports = {\\n    /**\\n     * Adds given {@link LoggerTransport} instance to the list of global\\n     * transports which means that it'll be used by all {@link Logger}s\\n     * @param {LoggerTransport} transport\\n     */\\n    addGlobalTransport: function(transport) {\\n        Logger.addGlobalTransport(transport);\\n    },\\n    /**\\n     * Removes given {@link LoggerTransport} instance from the list of global\\n     * transports\\n     * @param {LoggerTransport} transport\\n     */\\n    removeGlobalTransport: function(transport) {\\n        Logger.removeGlobalTransport(transport);\\n    },\\n    /**\\n     * Creates new logger.\\n     * @arguments the same as Logger constructor\\n     */\\n    getLogger: function(id, transports, format) {\\n        var logger = new Logger(curLevel, id, transports, format);\\n        if(id) {\\n            idLoggers[id] = idLoggers[id] || [];\\n            idLoggers[id].push(logger);\\n        } else {\\n            loggers.push(logger);\\n        }\\n        return logger;\\n    },\\n    /**\\n     * Changes the log level for the existing loggers by id.\\n     * @param level the new log level.\\n     * @param id if specified the level will be changed only for loggers with the\\n     * same id. Otherwise the operation will affect all loggers that don't\\n     * have id.\\n     */\\n    setLogLevelById: function(level, id) {\\n        var l = id? (idLoggers[id] || []) : loggers;\\n        for(var i = 0; i < l.length; i++) {\\n            l[i].setLevel(level);\\n        }\\n    },\\n    /**\\n     * Changes the log level for all existing loggers.\\n     * @param level the new log level.\\n     */\\n    setLogLevel: function (level) {\\n        curLevel = level;\\n        var i = 0;\\n        for(; i < loggers.length; i++) {\\n            loggers[i].setLevel(level);\\n        }\\n\\n        for(var id in idLoggers) {\\n            var l = idLoggers[id] || [];\\n            for(i = 0; i < l.length; i++) {\\n                l[i].setLevel(level);\\n            }\\n        }\\n    },\\n    /**\\n     * The supported log levels.\\n     */\\n    levels: Logger.levels,\\n    /**\\n     * Exports the <tt>LogCollector</tt>.\\n     */\\n    LogCollector: LogCollector\\n};\\n\",\"import { getLogger } from 'jitsi-meet-logger';\\nconst logger = getLogger(__filename);\\n\\nimport RandomUtil from '../util/RandomUtil';\\nimport browser from '../browser';\\n\\nconst SDPUtil = {\\n    filterSpecialChars(text) {\\n        // XXX Neither one of the falsy values (e.g. null, undefined, false,\\n        // \\\"\\\", etc.) \\\"contain\\\" special chars.\\n        // eslint-disable-next-line no-useless-escape\\n        return text ? text.replace(/[\\\\\\\\\\\\/\\\\{,\\\\}\\\\+]/g, '') : text;\\n    },\\n    iceparams(mediadesc, sessiondesc) {\\n        let data = null;\\n        let pwd, ufrag;\\n\\n        if ((ufrag = SDPUtil.findLine(mediadesc, 'a=ice-ufrag:', sessiondesc))\\n                && (pwd\\n                    = SDPUtil.findLine(\\n                        mediadesc,\\n                        'a=ice-pwd:',\\n                        sessiondesc))) {\\n            data = {\\n                ufrag: SDPUtil.parseICEUfrag(ufrag),\\n                pwd: SDPUtil.parseICEPwd(pwd)\\n            };\\n        }\\n\\n        return data;\\n    },\\n    parseICEUfrag(line) {\\n        return line.substring(12);\\n    },\\n    buildICEUfrag(frag) {\\n        return `a=ice-ufrag:${frag}`;\\n    },\\n    parseICEPwd(line) {\\n        return line.substring(10);\\n    },\\n    buildICEPwd(pwd) {\\n        return `a=ice-pwd:${pwd}`;\\n    },\\n    parseMID(line) {\\n        return line.substring(6);\\n    },\\n    parseMLine(line) {\\n        const data = {};\\n        const parts = line.substring(2).split(' ');\\n\\n        data.media = parts.shift();\\n        data.port = parts.shift();\\n        data.proto = parts.shift();\\n        if (parts[parts.length - 1] === '') { // trailing whitespace\\n            parts.pop();\\n        }\\n        data.fmt = parts;\\n\\n        return data;\\n    },\\n    buildMLine(mline) {\\n        return (\\n            `m=${mline.media} ${mline.port} ${mline.proto} ${\\n                mline.fmt.join(' ')}`);\\n    },\\n    parseRTPMap(line) {\\n        const data = {};\\n        let parts = line.substring(9).split(' ');\\n\\n        data.id = parts.shift();\\n        parts = parts[0].split('/');\\n        data.name = parts.shift();\\n        data.clockrate = parts.shift();\\n        data.channels = parts.length ? parts.shift() : '1';\\n\\n        return data;\\n    },\\n\\n    /**\\n     * Parses SDP line \\\"a=sctpmap:...\\\" and extracts SCTP port from it.\\n     * @param line eg. \\\"a=sctpmap:5000 webrtc-datachannel\\\"\\n     * @returns [SCTP port number, protocol, streams]\\n     */\\n    parseSCTPMap(line) {\\n        const parts = line.substring(10).split(' ');\\n        const sctpPort = parts[0];\\n        const protocol = parts[1];\\n\\n        // Stream count is optional\\n        const streamCount = parts.length > 2 ? parts[2] : null;\\n\\n\\n        return [ sctpPort, protocol, streamCount ];// SCTP port\\n    },\\n    buildRTPMap(el) {\\n        let line\\n            = `a=rtpmap:${el.getAttribute('id')} ${el.getAttribute('name')}/${\\n                el.getAttribute('clockrate')}`;\\n\\n        if (el.getAttribute('channels')\\n            && el.getAttribute('channels') !== '1') {\\n            line += `/${el.getAttribute('channels')}`;\\n        }\\n\\n        return line;\\n    },\\n    parseCrypto(line) {\\n        const data = {};\\n        const parts = line.substring(9).split(' ');\\n\\n        data.tag = parts.shift();\\n        data['crypto-suite'] = parts.shift();\\n        data['key-params'] = parts.shift();\\n        if (parts.length) {\\n            data['session-params'] = parts.join(' ');\\n        }\\n\\n        return data;\\n    },\\n    parseFingerprint(line) { // RFC 4572\\n        const data = {};\\n        const parts = line.substring(14).split(' ');\\n\\n        data.hash = parts.shift();\\n        data.fingerprint = parts.shift();\\n\\n        // TODO assert that fingerprint satisfies 2UHEX *(\\\":\\\" 2UHEX) ?\\n        return data;\\n    },\\n    parseFmtp(line) {\\n        const data = [];\\n        let parts = line.split(' ');\\n\\n        parts.shift();\\n        parts = parts.join(' ').split(';');\\n        for (let i = 0; i < parts.length; i++) {\\n            let key = parts[i].split('=')[0];\\n\\n            while (key.length && key[0] === ' ') {\\n                key = key.substring(1);\\n            }\\n            const value = parts[i].split('=')[1];\\n\\n            if (key && value) {\\n                data.push({ name: key,\\n                    value });\\n            } else if (key) {\\n                // rfc 4733 (DTMF) style stuff\\n                data.push({ name: '',\\n                    value: key });\\n            }\\n        }\\n\\n        return data;\\n    },\\n    parseICECandidate(line) {\\n        const candidate = {};\\n        const elems = line.split(' ');\\n\\n        candidate.foundation = elems[0].substring(12);\\n        candidate.component = elems[1];\\n        candidate.protocol = elems[2].toLowerCase();\\n        candidate.priority = elems[3];\\n        candidate.ip = elems[4];\\n        candidate.port = elems[5];\\n\\n        // elems[6] => \\\"typ\\\"\\n        candidate.type = elems[7];\\n        candidate.generation = 0; // default value, may be overwritten below\\n        for (let i = 8; i < elems.length; i += 2) {\\n            switch (elems[i]) {\\n            case 'raddr':\\n                candidate['rel-addr'] = elems[i + 1];\\n                break;\\n            case 'rport':\\n                candidate['rel-port'] = elems[i + 1];\\n                break;\\n            case 'generation':\\n                candidate.generation = elems[i + 1];\\n                break;\\n            case 'tcptype':\\n                candidate.tcptype = elems[i + 1];\\n                break;\\n            default: // TODO\\n                logger.log(\\n                    `parseICECandidate not translating \\\"${\\n                        elems[i]}\\\" = \\\"${elems[i + 1]}\\\"`);\\n            }\\n        }\\n        candidate.network = '1';\\n\\n        // not applicable to SDP -- FIXME: should be unique, not just random\\n        // eslint-disable-next-line newline-per-chained-call\\n        candidate.id = Math.random().toString(36).substr(2, 10);\\n\\n        return candidate;\\n    },\\n    buildICECandidate(cand) {\\n        let line = [\\n            `a=candidate:${cand.foundation}`,\\n            cand.component,\\n            cand.protocol,\\n            cand.priority,\\n            cand.ip,\\n            cand.port,\\n            'typ',\\n            cand.type\\n        ].join(' ');\\n\\n        line += ' ';\\n        switch (cand.type) {\\n        case 'srflx':\\n        case 'prflx':\\n        case 'relay':\\n            if (cand.hasOwnAttribute('rel-addr')\\n                    && cand.hasOwnAttribute('rel-port')) {\\n                line += 'raddr';\\n                line += ' ';\\n                line += cand['rel-addr'];\\n                line += ' ';\\n                line += 'rport';\\n                line += ' ';\\n                line += cand['rel-port'];\\n                line += ' ';\\n            }\\n            break;\\n        }\\n        if (cand.hasOwnAttribute('tcptype')) {\\n            line += 'tcptype';\\n            line += ' ';\\n            line += cand.tcptype;\\n            line += ' ';\\n        }\\n        line += 'generation';\\n        line += ' ';\\n        line += cand.hasOwnAttribute('generation') ? cand.generation : '0';\\n\\n        return line;\\n    },\\n    parseSSRC(desc) {\\n        // proprietary mapping of a=ssrc lines\\n        // TODO: see \\\"Jingle RTP Source Description\\\" by Juberti and P. Thatcher\\n        // on google docs and parse according to that\\n        const data = new Map();\\n        const lines = desc.split('\\\\r\\\\n');\\n\\n        for (let i = 0; i < lines.length; i++) {\\n            if (lines[i].substring(0, 7) === 'a=ssrc:') {\\n                // FIXME: Use regex to smartly find the ssrc.\\n                const ssrc = lines[i].split('a=ssrc:')[1].split(' ')[0];\\n\\n                if (!data.get(ssrc)) {\\n                    data.set(ssrc, []);\\n                }\\n\\n                data.get(ssrc).push(lines[i]);\\n            }\\n        }\\n\\n        return data;\\n    },\\n    parseRTCPFB(line) {\\n        const parts = line.substr(10).split(' ');\\n        const data = {};\\n\\n        data.pt = parts.shift();\\n        data.type = parts.shift();\\n        data.params = parts;\\n\\n        return data;\\n    },\\n    parseExtmap(line) {\\n        const parts = line.substr(9).split(' ');\\n        const data = {};\\n\\n        data.value = parts.shift();\\n        if (data.value.indexOf('/') === -1) {\\n            data.direction = 'both';\\n        } else {\\n            data.direction = data.value.substr(data.value.indexOf('/') + 1);\\n            data.value = data.value.substr(0, data.value.indexOf('/'));\\n        }\\n        data.uri = parts.shift();\\n        data.params = parts;\\n\\n        return data;\\n    },\\n    findLine(haystack, needle, sessionpart) {\\n        let lines = haystack.split('\\\\r\\\\n');\\n\\n        for (let i = 0; i < lines.length; i++) {\\n            if (lines[i].substring(0, needle.length) === needle) {\\n                return lines[i];\\n            }\\n        }\\n        if (!sessionpart) {\\n            return false;\\n        }\\n\\n        // search session part\\n        lines = sessionpart.split('\\\\r\\\\n');\\n        for (let j = 0; j < lines.length; j++) {\\n            if (lines[j].substring(0, needle.length) === needle) {\\n                return lines[j];\\n            }\\n        }\\n\\n        return false;\\n    },\\n    findLines(haystack, needle, sessionpart) {\\n        let lines = haystack.split('\\\\r\\\\n');\\n        const needles = [];\\n\\n        for (let i = 0; i < lines.length; i++) {\\n            if (lines[i].substring(0, needle.length) === needle) {\\n                needles.push(lines[i]);\\n            }\\n        }\\n        if (needles.length || !sessionpart) {\\n            return needles;\\n        }\\n\\n        // search session part\\n        lines = sessionpart.split('\\\\r\\\\n');\\n        for (let j = 0; j < lines.length; j++) {\\n            if (lines[j].substring(0, needle.length) === needle) {\\n                needles.push(lines[j]);\\n            }\\n        }\\n\\n        return needles;\\n    },\\n    candidateToJingle(line) {\\n        // a=candidate:2979166662 1 udp 2113937151 192.168.2.100 57698 typ host\\n        // generation 0\\n        //      <candidate component=... foundation=... generation=... id=...\\n        // ip=... network=... port=... priority=... protocol=... type=.../>\\n        if (line.indexOf('candidate:') === 0) {\\n            // eslint-disable-next-line no-param-reassign\\n            line = `a=${line}`;\\n        } else if (line.substring(0, 12) !== 'a=candidate:') {\\n            logger.log(\\n                'parseCandidate called with a line that is not a candidate'\\n                    + ' line');\\n            logger.log(line);\\n\\n            return null;\\n        }\\n        if (line.substring(line.length - 2) === '\\\\r\\\\n') { // chomp it\\n            // eslint-disable-next-line no-param-reassign\\n            line = line.substring(0, line.length - 2);\\n        }\\n        const candidate = {};\\n        const elems = line.split(' ');\\n\\n        if (elems[6] !== 'typ') {\\n            logger.log('did not find typ in the right place');\\n            logger.log(line);\\n\\n            return null;\\n        }\\n        candidate.foundation = elems[0].substring(12);\\n        candidate.component = elems[1];\\n        candidate.protocol = elems[2].toLowerCase();\\n        candidate.priority = elems[3];\\n        candidate.ip = elems[4];\\n        candidate.port = elems[5];\\n\\n        // elems[6] => \\\"typ\\\"\\n        candidate.type = elems[7];\\n\\n        candidate.generation = '0'; // default, may be overwritten below\\n        for (let i = 8; i < elems.length; i += 2) {\\n            switch (elems[i]) {\\n            case 'raddr':\\n                candidate['rel-addr'] = elems[i + 1];\\n                break;\\n            case 'rport':\\n                candidate['rel-port'] = elems[i + 1];\\n                break;\\n            case 'generation':\\n                candidate.generation = elems[i + 1];\\n                break;\\n            case 'tcptype':\\n                candidate.tcptype = elems[i + 1];\\n                break;\\n            default: // TODO\\n                logger.log(`not translating \\\"${elems[i]}\\\" = \\\"${elems[i + 1]}\\\"`);\\n            }\\n        }\\n        candidate.network = '1';\\n\\n        // not applicable to SDP -- FIXME: should be unique, not just random\\n        // eslint-disable-next-line newline-per-chained-call\\n        candidate.id = Math.random().toString(36).substr(2, 10);\\n\\n        return candidate;\\n    },\\n    candidateFromJingle(cand) {\\n        let line = 'a=candidate:';\\n\\n        line += cand.getAttribute('foundation');\\n        line += ' ';\\n        line += cand.getAttribute('component');\\n        line += ' ';\\n\\n        let protocol = cand.getAttribute('protocol');\\n\\n        // use tcp candidates for FF\\n\\n        if (browser.isFirefox() && protocol.toLowerCase() === 'ssltcp') {\\n            protocol = 'tcp';\\n        }\\n\\n        line += protocol; // .toUpperCase(); // chrome M23 doesn't like this\\n        line += ' ';\\n        line += cand.getAttribute('priority');\\n        line += ' ';\\n        line += cand.getAttribute('ip');\\n        line += ' ';\\n        line += cand.getAttribute('port');\\n        line += ' ';\\n        line += 'typ';\\n        line += ` ${cand.getAttribute('type')}`;\\n        line += ' ';\\n        switch (cand.getAttribute('type')) {\\n        case 'srflx':\\n        case 'prflx':\\n        case 'relay':\\n            if (cand.getAttribute('rel-addr')\\n                    && cand.getAttribute('rel-port')) {\\n                line += 'raddr';\\n                line += ' ';\\n                line += cand.getAttribute('rel-addr');\\n                line += ' ';\\n                line += 'rport';\\n                line += ' ';\\n                line += cand.getAttribute('rel-port');\\n                line += ' ';\\n            }\\n            break;\\n        }\\n        if (protocol.toLowerCase() === 'tcp') {\\n            line += 'tcptype';\\n            line += ' ';\\n            line += cand.getAttribute('tcptype');\\n            line += ' ';\\n        }\\n        line += 'generation';\\n        line += ' ';\\n        line += cand.getAttribute('generation') || '0';\\n\\n        return `${line}\\\\r\\\\n`;\\n    },\\n\\n    /**\\n     * Parse the 'most' primary video ssrc from the given m line\\n     * @param {object} mLine object as parsed from transform.parse\\n     * @return {number} the primary video ssrc from the given m line\\n     */\\n    parsePrimaryVideoSsrc(videoMLine) {\\n        const numSsrcs = videoMLine.ssrcs\\n            .map(ssrcInfo => ssrcInfo.id)\\n            .filter((ssrc, index, array) => array.indexOf(ssrc) === index)\\n            .length;\\n        const numGroups\\n            = (videoMLine.ssrcGroups && videoMLine.ssrcGroups.length) || 0;\\n\\n        if (numSsrcs > 1 && numGroups === 0) {\\n            // Ambiguous, can't figure out the primary\\n            return;\\n        }\\n        let primarySsrc = null;\\n\\n        if (numSsrcs === 1) {\\n            primarySsrc = videoMLine.ssrcs[0].id;\\n        } else if (numSsrcs === 2) {\\n            // Can figure it out if there's an FID group\\n            const fidGroup\\n                = videoMLine.ssrcGroups.find(\\n                    group => group.semantics === 'FID');\\n\\n            if (fidGroup) {\\n                primarySsrc = fidGroup.ssrcs.split(' ')[0];\\n            }\\n        } else if (numSsrcs >= 3) {\\n            // Can figure it out if there's a sim group\\n            const simGroup\\n                = videoMLine.ssrcGroups.find(\\n                    group => group.semantics === 'SIM');\\n\\n            if (simGroup) {\\n                primarySsrc = simGroup.ssrcs.split(' ')[0];\\n            }\\n        }\\n\\n        return primarySsrc;\\n    },\\n\\n    /**\\n     * Generate an ssrc\\n     * @returns {number} an ssrc\\n     */\\n    generateSsrc() {\\n        return RandomUtil.randomInt(1, 0xffffffff);\\n    },\\n\\n    /**\\n     * Get an attribute for the given ssrc with the given attributeName\\n     *  from the given mline\\n     * @param {object} mLine an mLine object as parsed from transform.parse\\n     * @param {number} ssrc the ssrc for which an attribtue is desired\\n     * @param {string} attributeName the name of the desired attribute\\n     * @returns {string} the value corresponding to the given ssrc\\n     *  and attributeName\\n     */\\n    getSsrcAttribute(mLine, ssrc, attributeName) {\\n        for (let i = 0; i < mLine.ssrcs.length; ++i) {\\n            const ssrcLine = mLine.ssrcs[i];\\n\\n            if (ssrcLine.id === ssrc\\n                && ssrcLine.attribute === attributeName) {\\n                return ssrcLine.value;\\n            }\\n        }\\n    },\\n\\n    /**\\n     * Parses the ssrcs from the group sdp line and\\n     *  returns them as a list of numbers\\n     * @param {object} the ssrcGroup object as parsed from\\n     *  sdp-transform\\n     * @returns {list<number>} a list of the ssrcs in the group\\n     *  parsed as numbers\\n     */\\n    parseGroupSsrcs(ssrcGroup) {\\n        return ssrcGroup\\n            .ssrcs\\n            .split(' ')\\n            .map(ssrcStr => parseInt(ssrcStr, 10));\\n    },\\n\\n    /**\\n     * Get the mline of the given type from the given sdp\\n     * @param {object} sdp sdp as parsed from transform.parse\\n     * @param {string} type the type of the desired mline (e.g. \\\"video\\\")\\n     * @returns {object} a media object\\n     */\\n    getMedia(sdp, type) {\\n        return sdp.media.find(m => m.type === type);\\n    },\\n\\n    /**\\n     * Extracts the ICE username fragment from an SDP string.\\n     * @param {string} sdp the SDP in raw text format\\n     */\\n    getUfrag(sdp) {\\n        const ufragLines\\n            = sdp.split('\\\\n').filter(line => line.startsWith('a=ice-ufrag:'));\\n\\n        if (ufragLines.length > 0) {\\n            return ufragLines[0].substr('a=ice-ufrag:'.length);\\n        }\\n    },\\n\\n    /**\\n     * Sets the given codecName as the preferred codec by\\n     *  moving it to the beginning of the payload types\\n     *  list (modifies the given mline in place).  If there\\n     *  are multiple options within the same codec (multiple h264\\n     *  profiles, for instance), this will prefer the first one\\n     *  that is found.\\n     * @param {object} videoMLine the video mline object from\\n     *  an sdp as parsed by transform.parse\\n     * @param {string} codecName the name of the preferred codec\\n     */\\n    preferVideoCodec(videoMLine, codecName) {\\n        let payloadType = null;\\n\\n        if (!videoMLine || !codecName) {\\n            return;\\n        }\\n\\n        for (let i = 0; i < videoMLine.rtp.length; ++i) {\\n            const rtp = videoMLine.rtp[i];\\n\\n            if (rtp.codec\\n                && rtp.codec.toLowerCase() === codecName.toLowerCase()) {\\n                payloadType = rtp.payload;\\n                break;\\n            }\\n        }\\n        if (payloadType) {\\n            // Call toString() on payloads to get around an issue within\\n            // SDPTransform that sets payloads as a number, instead of a string,\\n            // when there is only one payload.\\n            const payloadTypes\\n                = videoMLine.payloads\\n                    .toString()\\n                    .split(' ')\\n                    .map(p => parseInt(p, 10));\\n            const payloadIndex = payloadTypes.indexOf(payloadType);\\n\\n            payloadTypes.splice(payloadIndex, 1);\\n            payloadTypes.unshift(payloadType);\\n            videoMLine.payloads = payloadTypes.join(' ');\\n        }\\n    },\\n\\n    /**\\n     * Strips the given codec from the given mline. All related RTX payload\\n     * types are also stripped. If the resulting mline would have no codecs,\\n     * it's disabled.\\n     *\\n     * @param {object} videoMLine the video mline object from an sdp as parsed\\n     * by transform.parse.\\n     * @param {string} codecName the name of the codec which will be stripped.\\n     */\\n    stripVideoCodec(videoMLine, codecName) {\\n        if (!videoMLine || !codecName) {\\n            return;\\n        }\\n\\n        const removePts = [];\\n\\n        for (const rtp of videoMLine.rtp) {\\n            if (rtp.codec\\n                && rtp.codec.toLowerCase() === codecName.toLowerCase()) {\\n                removePts.push(rtp.payload);\\n            }\\n        }\\n\\n        if (removePts.length > 0) {\\n            // We also need to remove the payload types that are related to RTX\\n            // for the codecs we want to disable.\\n            const rtxApts = removePts.map(item => `apt=${item}`);\\n            const rtxPts = videoMLine.fmtp.filter(\\n                item => rtxApts.indexOf(item.config) !== -1);\\n\\n            removePts.push(...rtxPts.map(item => item.payload));\\n\\n            // Call toString() on payloads to get around an issue within\\n            // SDPTransform that sets payloads as a number, instead of a string,\\n            // when there is only one payload.\\n            const allPts = videoMLine.payloads\\n                .toString()\\n                .split(' ')\\n                .map(Number);\\n            const keepPts = allPts.filter(pt => removePts.indexOf(pt) === -1);\\n\\n            if (keepPts.length === 0) {\\n                // There are no other video codecs, disable the stream.\\n                videoMLine.port = 0;\\n                videoMLine.direction = 'inactive';\\n                videoMLine.payloads = '*';\\n            } else {\\n                videoMLine.payloads = keepPts.join(' ');\\n            }\\n\\n            videoMLine.rtp = videoMLine.rtp.filter(\\n                item => keepPts.indexOf(item.payload) !== -1);\\n            videoMLine.fmtp = videoMLine.fmtp.filter(\\n                item => keepPts.indexOf(item.payload) !== -1);\\n            if (videoMLine.rtcpFb) {\\n                videoMLine.rtcpFb = videoMLine.rtcpFb.filter(\\n                    item => keepPts.indexOf(item.payload) !== -1);\\n            }\\n        }\\n    }\\n};\\n\\nexport default SDPUtil;\\n\",\"import EventEmitter from 'events';\\n\\nimport { FEEDBACK } from '../../service/statistics/AnalyticsEvents';\\nimport analytics from './AnalyticsAdapter';\\nimport CallStats from './CallStats';\\nimport LocalStats from './LocalStatsCollector';\\nimport RTPStats from './RTPStatsCollector';\\n\\nimport browser from '../browser';\\nimport Settings from '../settings/Settings';\\nimport ScriptUtil from '../util/ScriptUtil';\\nimport JitsiTrackError from '../../JitsiTrackError';\\nimport * as StatisticsEvents from '../../service/statistics/Events';\\n\\nconst logger = require('jitsi-meet-logger').getLogger(__filename);\\n\\n/**\\n * Stores all active {@link Statistics} instances.\\n * @type {Set<Statistics>}\\n */\\nlet _instances;\\n\\n/**\\n * True if callstats API is loaded\\n */\\nlet isCallstatsLoaded = false;\\n\\n/**\\n * Since callstats.io is a third party, we cannot guarantee the quality of their\\n * service. More specifically, their server may take noticeably long time to\\n * respond. Consequently, it is in our best interest (in the sense that the\\n * intergration of callstats.io is pretty important to us but not enough to\\n * allow it to prevent people from joining a conference) to (1) start\\n * downloading their API as soon as possible and (2) do the downloading\\n * asynchronously.\\n *\\n * @param {StatisticsOptions} options - Options to use for downloading and\\n * initializing callstats backend.\\n */\\nfunction loadCallStatsAPI(options) {\\n    if (!isCallstatsLoaded) {\\n        ScriptUtil.loadScript(\\n            options.customScriptUrl\\n                || 'https://api.callstats.io/static/callstats-ws.min.js',\\n            /* async */ true,\\n            /* prepend */ true,\\n            /* relativeURL */ undefined,\\n            /* loadCallback */ () => _initCallStatsBackend(options)\\n        );\\n        isCallstatsLoaded = true;\\n    }\\n}\\n\\n/**\\n * Initializes Callstats backend.\\n *\\n * @param {StatisticsOptions} options - The options to use for initializing\\n * callstats backend.\\n * @private\\n */\\nfunction _initCallStatsBackend(options) {\\n    if (CallStats.isBackendInitialized()) {\\n        return;\\n    }\\n\\n    const userName = Settings.callStatsUserName;\\n\\n    if (!CallStats.initBackend({\\n        callStatsID: options.callStatsID,\\n        callStatsSecret: options.callStatsSecret,\\n        userName: options.swapUserNameAndAlias\\n            ? options.callStatsAliasName : userName,\\n        aliasName: options.swapUserNameAndAlias\\n            ? userName : options.callStatsAliasName,\\n        applicationName: options.applicationName,\\n        getWiFiStatsMethod: options.getWiFiStatsMethod\\n    })) {\\n        logger.error('CallStats Backend initialization failed bad');\\n    }\\n}\\n\\n/**\\n * callstats strips any additional fields from Error except for \\\"name\\\", \\\"stack\\\",\\n * \\\"message\\\" and \\\"constraintName\\\". So we need to bundle additional information\\n * from JitsiTrackError into error passed to callstats to preserve valuable\\n * information about error.\\n * @param {JitsiTrackError} error\\n */\\nfunction formatJitsiTrackErrorForCallStats(error) {\\n    const err = new Error();\\n\\n    // Just copy original stack from error\\n    err.stack = error.stack;\\n\\n    // Combine name from error's name plus (possibly) name of original GUM error\\n    err.name = (error.name || 'Unknown error') + (error.gum && error.gum.error\\n        && error.gum.error.name ? ` - ${error.gum.error.name}` : '');\\n\\n    // Put all constraints into this field. For constraint failed errors we will\\n    // still know which exactly constraint failed as it will be a part of\\n    // message.\\n    err.constraintName = error.gum && error.gum.constraints\\n        ? JSON.stringify(error.gum.constraints) : '';\\n\\n    // Just copy error's message.\\n    err.message = error.message;\\n\\n    return err;\\n}\\n\\n/**\\n * Init statistic options\\n * @param options\\n */\\nStatistics.init = function(options) {\\n    Statistics.audioLevelsEnabled = !options.disableAudioLevels;\\n\\n    if (typeof options.audioLevelsInterval === 'number') {\\n        Statistics.audioLevelsInterval = options.audioLevelsInterval;\\n    }\\n\\n    Statistics.disableThirdPartyRequests = options.disableThirdPartyRequests;\\n};\\n\\n/**\\n * The options to configure Statistics.\\n * @typedef {Object} StatisticsOptions\\n * @property {string} applicationName - The application name to pass to\\n * callstats.\\n * @property {string} callStatsAliasName - The alias name to use when\\n * initializing callstats.\\n * @property {string} callStatsConfIDNamespace - A namespace to prepend the\\n * callstats conference ID with.\\n * @property {string} callStatsID - Callstats credentials - the id.\\n * @property {string} callStatsSecret - Callstats credentials - the secret.\\n * @property {string} customScriptUrl - A custom lib url to use when downloading\\n * callstats library.\\n * @property {string} roomName - The room name we are currently in.\\n * @property {boolean} swapUserNameAndAlias - Whether to swap the places of\\n * username and alias when initiating callstats.\\n */\\n/**\\n *\\n * @param xmpp\\n * @param {StatisticsOptions} options - The options to use creating the\\n * Statistics.\\n */\\nexport default function Statistics(xmpp, options) {\\n    /**\\n     * {@link RTPStats} mapped by {@link TraceablePeerConnection.id} which\\n     * collect RTP statistics for each peerconnection.\\n     * @type {Map<string, RTPStats}\\n     */\\n    this.rtpStatsMap = new Map();\\n    this.eventEmitter = new EventEmitter();\\n    this.xmpp = xmpp;\\n    this.options = options || {};\\n\\n    this.callStatsIntegrationEnabled\\n        = this.options.callStatsID && this.options.callStatsSecret\\n\\n            // Even though AppID and AppSecret may be specified, the integration\\n            // of callstats.io may be disabled because of globally-disallowed\\n            // requests to any third parties.\\n            && (Statistics.disableThirdPartyRequests !== true);\\n    if (this.callStatsIntegrationEnabled) {\\n        if (browser.isReactNative()) {\\n            _initCallStatsBackend(this.options);\\n        } else {\\n            loadCallStatsAPI(this.options);\\n        }\\n\\n        if (!this.options.callStatsConfIDNamespace) {\\n            logger.warn('\\\"callStatsConfIDNamespace\\\" is not defined');\\n        }\\n    }\\n\\n    /**\\n     * Stores {@link CallStats} instances for each\\n     * {@link TraceablePeerConnection} (one {@link CallStats} instance serves\\n     * one TPC). The instances are mapped by {@link TraceablePeerConnection.id}.\\n     * @type {Map<number, CallStats>}\\n     */\\n    this.callsStatsInstances = new Map();\\n\\n    Statistics.instances.add(this);\\n}\\nStatistics.audioLevelsEnabled = false;\\nStatistics.audioLevelsInterval = 200;\\nStatistics.disableThirdPartyRequests = false;\\nStatistics.analytics = analytics;\\n\\nObject.defineProperty(Statistics, 'instances', {\\n    /**\\n     * Returns the Set holding all active {@link Statistics} instances. Lazily\\n     * initializes the Set to allow any Set polyfills to be applied.\\n     * @type {Set<Statistics>}\\n     */\\n    get() {\\n        if (!_instances) {\\n            _instances = new Set();\\n        }\\n\\n        return _instances;\\n    }\\n});\\n\\n/**\\n * Starts collecting RTP stats for given peerconnection.\\n * @param {TraceablePeerConnection} peerconnection\\n */\\nStatistics.prototype.startRemoteStats = function(peerconnection) {\\n    this.stopRemoteStats(peerconnection);\\n\\n    try {\\n        const rtpStats\\n            = new RTPStats(\\n                peerconnection,\\n                Statistics.audioLevelsInterval,\\n                2000,\\n                this.eventEmitter);\\n\\n        rtpStats.start(Statistics.audioLevelsEnabled);\\n        this.rtpStatsMap.set(peerconnection.id, rtpStats);\\n    } catch (e) {\\n        logger.error(`Failed to start collecting remote statistics: ${e}`);\\n    }\\n};\\n\\nStatistics.localStats = [];\\n\\nStatistics.startLocalStats = function(stream, callback) {\\n    if (!Statistics.audioLevelsEnabled) {\\n        return;\\n    }\\n    const localStats = new LocalStats(stream, Statistics.audioLevelsInterval,\\n        callback);\\n\\n    this.localStats.push(localStats);\\n    localStats.start();\\n};\\n\\nStatistics.prototype.addAudioLevelListener = function(listener) {\\n    if (!Statistics.audioLevelsEnabled) {\\n        return;\\n    }\\n    this.eventEmitter.on(StatisticsEvents.AUDIO_LEVEL, listener);\\n};\\n\\nStatistics.prototype.removeAudioLevelListener = function(listener) {\\n    if (!Statistics.audioLevelsEnabled) {\\n        return;\\n    }\\n    this.eventEmitter.removeListener(StatisticsEvents.AUDIO_LEVEL, listener);\\n};\\n\\nStatistics.prototype.addBeforeDisposedListener = function(listener) {\\n    this.eventEmitter.on(StatisticsEvents.BEFORE_DISPOSED, listener);\\n};\\n\\nStatistics.prototype.removeBeforeDisposedListener = function(listener) {\\n    this.eventEmitter.removeListener(\\n        StatisticsEvents.BEFORE_DISPOSED, listener);\\n};\\n\\nStatistics.prototype.addConnectionStatsListener = function(listener) {\\n    this.eventEmitter.on(StatisticsEvents.CONNECTION_STATS, listener);\\n};\\n\\nStatistics.prototype.removeConnectionStatsListener = function(listener) {\\n    this.eventEmitter.removeListener(\\n        StatisticsEvents.CONNECTION_STATS,\\n        listener);\\n};\\n\\nStatistics.prototype.addByteSentStatsListener = function(listener) {\\n    this.eventEmitter.on(StatisticsEvents.BYTE_SENT_STATS, listener);\\n};\\n\\nStatistics.prototype.removeByteSentStatsListener = function(listener) {\\n    this.eventEmitter.removeListener(StatisticsEvents.BYTE_SENT_STATS,\\n        listener);\\n};\\n\\nStatistics.prototype.dispose = function() {\\n    try {\\n        // NOTE Before reading this please see the comment in stopCallStats...\\n        //\\n        // Here we prevent from emitting the event twice in case it will be\\n        // triggered from stopCallStats.\\n        // If the event is triggered from here it means that the logs will not\\n        // be submitted anyway (because there is no CallStats instance), but\\n        // we're doing that for the sake of some kind of consistency.\\n        if (!this.callsStatsInstances.size) {\\n            this.eventEmitter.emit(StatisticsEvents.BEFORE_DISPOSED);\\n        }\\n        for (const callStats of this.callsStatsInstances.values()) {\\n            this.stopCallStats(callStats.tpc);\\n        }\\n        for (const tpcId of this.rtpStatsMap.keys()) {\\n            this._stopRemoteStats(tpcId);\\n        }\\n        if (this.eventEmitter) {\\n            this.eventEmitter.removeAllListeners();\\n        }\\n    } finally {\\n        Statistics.instances.delete(this);\\n    }\\n};\\n\\nStatistics.stopLocalStats = function(stream) {\\n    if (!Statistics.audioLevelsEnabled) {\\n        return;\\n    }\\n\\n    for (let i = 0; i < Statistics.localStats.length; i++) {\\n        if (Statistics.localStats[i].stream === stream) {\\n            const localStats = Statistics.localStats.splice(i, 1);\\n\\n            localStats[0].stop();\\n            break;\\n        }\\n    }\\n};\\n\\n/**\\n * Stops remote RTP stats for given peerconnection ID.\\n * @param {string} tpcId {@link TraceablePeerConnection.id}\\n * @private\\n */\\nStatistics.prototype._stopRemoteStats = function(tpcId) {\\n    const rtpStats = this.rtpStatsMap.get(tpcId);\\n\\n    if (rtpStats) {\\n        rtpStats.stop();\\n        this.rtpStatsMap.delete(tpcId);\\n    }\\n};\\n\\n/**\\n * Stops collecting RTP stats for given peerconnection\\n * @param {TraceablePeerConnection} tpc\\n */\\nStatistics.prototype.stopRemoteStats = function(tpc) {\\n    this._stopRemoteStats(tpc.id);\\n};\\n\\n// CALSTATS METHODS\\n\\n/**\\n * Initializes the callstats.io API.\\n * @param {TraceablePeerConnection} tpc the {@link TraceablePeerConnection}\\n * instance for which CalStats will be started.\\n * @param {string} remoteUserID\\n */\\nStatistics.prototype.startCallStats = function(tpc, remoteUserID) {\\n    if (!this.callStatsIntegrationEnabled) {\\n        return;\\n    } else if (this.callsStatsInstances.has(tpc.id)) {\\n        logger.error('CallStats instance for ${tpc} exists already');\\n\\n        return;\\n    }\\n\\n    logger.info(`Starting CallStats for ${tpc}...`);\\n\\n    const newInstance\\n        = new CallStats(\\n            tpc,\\n            {\\n                confID: this._getCallStatsConfID(),\\n                remoteUserID\\n            });\\n\\n    this.callsStatsInstances.set(tpc.id, newInstance);\\n};\\n\\n/**\\n * Obtains the list of *all* {@link CallStats} instances collected from every\\n * valid {@link Statistics} instance.\\n * @return {Set<CallStats>}\\n * @private\\n */\\nStatistics._getAllCallStatsInstances = function() {\\n    const csInstances = new Set();\\n\\n    for (const statistics of Statistics.instances) {\\n        for (const cs of statistics.callsStatsInstances.values()) {\\n            csInstances.add(cs);\\n        }\\n    }\\n\\n    return csInstances;\\n};\\n\\n/**\\n * Constructs the CallStats conference ID based on the options currently\\n * configured in this instance.\\n * @return {string}\\n * @private\\n */\\nStatistics.prototype._getCallStatsConfID = function() {\\n    // The conference ID is case sensitive!!!\\n    return this.options.callStatsConfIDNamespace\\n        ? `${this.options.callStatsConfIDNamespace}/${this.options.roomName}`\\n        : this.options.roomName;\\n};\\n\\n/**\\n * Removes the callstats.io instances.\\n */\\nStatistics.prototype.stopCallStats = function(tpc) {\\n    const callStatsInstance = this.callsStatsInstances.get(tpc.id);\\n\\n    if (callStatsInstance) {\\n        // FIXME the original purpose of adding BEFORE_DISPOSED event was to be\\n        // able to submit the last log batch from jitsi-meet to CallStats. After\\n        // recent changes we dispose the CallStats earlier\\n        // (before Statistics.dispose), so we need to emit this event here to\\n        // give this last chance for final log batch submission.\\n        //\\n        // Eventually there should be a separate module called \\\"log storage\\\"\\n        // which should emit proper events when it's underlying\\n        // CallStats instance is going away.\\n        if (this.callsStatsInstances.size === 1) {\\n            this.eventEmitter.emit(StatisticsEvents.BEFORE_DISPOSED);\\n        }\\n        this.callsStatsInstances.delete(tpc.id);\\n\\n        // The fabric needs to be terminated when being stopped\\n        callStatsInstance.sendTerminateEvent();\\n    }\\n};\\n\\n/**\\n * Returns true if the callstats integration is enabled, otherwise returns\\n * false.\\n *\\n * @returns true if the callstats integration is enabled, otherwise returns\\n * false.\\n */\\nStatistics.prototype.isCallstatsEnabled = function() {\\n    return this.callStatsIntegrationEnabled;\\n};\\n\\n/**\\n * Logs either resume or hold event for the given peer connection.\\n * @param {TraceablePeerConnection} tpc the connection for which event will be\\n * reported\\n * @param {boolean} isResume true for resume or false for hold\\n */\\nStatistics.prototype.sendConnectionResumeOrHoldEvent = function(tpc, isResume) {\\n    const instance = this.callsStatsInstances.get(tpc.id);\\n\\n    if (instance) {\\n        instance.sendResumeOrHoldEvent(isResume);\\n    }\\n};\\n\\n/**\\n * Notifies CallStats and analytics (if present) for ice connection failed\\n * @param {TraceablePeerConnection} tpc connection on which failure occurred.\\n */\\nStatistics.prototype.sendIceConnectionFailedEvent = function(tpc) {\\n    const instance = this.callsStatsInstances.get(tpc.id);\\n\\n    if (instance) {\\n        instance.sendIceConnectionFailedEvent();\\n    }\\n};\\n\\n/**\\n * Notifies CallStats for mute events\\n * @param {TraceablePeerConnection} tpc connection on which failure occurred.\\n * @param {boolean} muted true for muted and false for not muted\\n * @param {String} type \\\"audio\\\"/\\\"video\\\"\\n */\\nStatistics.prototype.sendMuteEvent = function(tpc, muted, type) {\\n    const instance = tpc && this.callsStatsInstances.get(tpc.id);\\n\\n    CallStats.sendMuteEvent(muted, type, instance);\\n};\\n\\n/**\\n * Notifies CallStats for screen sharing events\\n * @param start {boolean} true for starting screen sharing and\\n * false for not stopping\\n * @param {string|null} ssrc - optional ssrc value, used only when\\n * starting screen sharing.\\n */\\nStatistics.prototype.sendScreenSharingEvent\\n    = function(start, ssrc) {\\n        for (const cs of this.callsStatsInstances.values()) {\\n            cs.sendScreenSharingEvent(start, ssrc);\\n        }\\n    };\\n\\n/**\\n * Notifies the statistics module that we are now the dominant speaker of the\\n * conference.\\n * @param {String} roomJid - The room jid where the speaker event occurred.\\n */\\nStatistics.prototype.sendDominantSpeakerEvent = function(roomJid) {\\n    for (const cs of this.callsStatsInstances.values()) {\\n        cs.sendDominantSpeakerEvent();\\n    }\\n\\n    // xmpp send dominant speaker event\\n    this.xmpp.sendDominantSpeakerEvent(roomJid);\\n};\\n\\n/**\\n * Notifies about active device.\\n * @param {{deviceList: {String:String}}} devicesData - list of devices with\\n *      their data\\n */\\nStatistics.sendActiveDeviceListEvent = function(devicesData) {\\n    const globalSet = Statistics._getAllCallStatsInstances();\\n\\n    if (globalSet.size) {\\n        for (const cs of globalSet) {\\n            CallStats.sendActiveDeviceListEvent(devicesData, cs);\\n        }\\n    } else {\\n        CallStats.sendActiveDeviceListEvent(devicesData, null);\\n    }\\n};\\n\\n/* eslint-disable max-params */\\n\\n/**\\n * Lets the underlying statistics module know where is given SSRC rendered by\\n * providing renderer tag ID.\\n * @param {TraceablePeerConnection} tpc the connection to which the stream\\n * belongs to\\n * @param {number} ssrc the SSRC of the stream\\n * @param {boolean} isLocal\\n * @param {string} userId\\n * @param {string} usageLabel  meaningful usage label of this stream like\\n *        'microphone', 'camera' or 'screen'.\\n * @param {string} containerId the id of media 'audio' or 'video' tag which\\n *        renders the stream.\\n */\\nStatistics.prototype.associateStreamWithVideoTag = function(\\n        tpc,\\n        ssrc,\\n        isLocal,\\n        userId,\\n        usageLabel,\\n        containerId) {\\n    const instance = this.callsStatsInstances.get(tpc.id);\\n\\n    if (instance) {\\n        instance.associateStreamWithVideoTag(\\n            ssrc,\\n            isLocal,\\n            userId,\\n            usageLabel,\\n            containerId);\\n    }\\n};\\n\\n/* eslint-enable max-params */\\n\\n/**\\n * Notifies CallStats that getUserMedia failed.\\n *\\n * @param {Error} e error to send\\n */\\nStatistics.sendGetUserMediaFailed = function(e) {\\n    const error\\n        = e instanceof JitsiTrackError\\n            ? formatJitsiTrackErrorForCallStats(e) : e;\\n    const globalSet = Statistics._getAllCallStatsInstances();\\n\\n    if (globalSet.size) {\\n        for (const cs of globalSet) {\\n            CallStats.sendGetUserMediaFailed(error, cs);\\n        }\\n    } else {\\n        CallStats.sendGetUserMediaFailed(error, null);\\n    }\\n};\\n\\n/**\\n * Notifies CallStats that peer connection failed to create offer.\\n *\\n * @param {Error} e error to send\\n * @param {TraceablePeerConnection} tpc connection on which failure occurred.\\n */\\nStatistics.prototype.sendCreateOfferFailed = function(e, tpc) {\\n    const instance = this.callsStatsInstances.get(tpc.id);\\n\\n    if (instance) {\\n        instance.sendCreateOfferFailed(e);\\n    }\\n};\\n\\n/**\\n * Notifies CallStats that peer connection failed to create answer.\\n *\\n * @param {Error} e error to send\\n * @param {TraceablePeerConnection} tpc connection on which failure occured.\\n */\\nStatistics.prototype.sendCreateAnswerFailed = function(e, tpc) {\\n    const instance = this.callsStatsInstances.get(tpc.id);\\n\\n    if (instance) {\\n        instance.sendCreateAnswerFailed(e);\\n    }\\n};\\n\\n/**\\n * Notifies CallStats that peer connection failed to set local description.\\n *\\n * @param {Error} e error to send\\n * @param {TraceablePeerConnection} tpc connection on which failure occurred.\\n */\\nStatistics.prototype.sendSetLocalDescFailed = function(e, tpc) {\\n    const instance = this.callsStatsInstances.get(tpc.id);\\n\\n    if (instance) {\\n        instance.sendSetLocalDescFailed(e);\\n    }\\n};\\n\\n/**\\n * Notifies CallStats that peer connection failed to set remote description.\\n *\\n * @param {Error} e error to send\\n * @param {TraceablePeerConnection} tpc connection on which failure occurred.\\n */\\nStatistics.prototype.sendSetRemoteDescFailed = function(e, tpc) {\\n    const instance = this.callsStatsInstances.get(tpc.id);\\n\\n    if (instance) {\\n        instance.sendSetRemoteDescFailed(e);\\n    }\\n};\\n\\n/**\\n * Notifies CallStats that peer connection failed to add ICE candidate.\\n *\\n * @param {Error} e error to send\\n * @param {TraceablePeerConnection} tpc connection on which failure occurred.\\n */\\nStatistics.prototype.sendAddIceCandidateFailed = function(e, tpc) {\\n    const instance = this.callsStatsInstances.get(tpc.id);\\n\\n    if (instance) {\\n        instance.sendAddIceCandidateFailed(e);\\n    }\\n};\\n\\n/**\\n * Adds to CallStats an application log.\\n *\\n * @param {String} m a log message to send or an {Error} object to be reported\\n */\\nStatistics.sendLog = function(m) {\\n    const globalSubSet = new Set();\\n\\n    // FIXME we don't want to duplicate logs over P2P instance, but\\n    // here we should go over instances and call this method for each\\n    // unique conference ID rather than selecting the first one.\\n    // We don't have such use case though, so leaving as is for now.\\n    for (const stats of Statistics.instances) {\\n        if (stats.callsStatsInstances.size) {\\n            globalSubSet.add(stats.callsStatsInstances.values().next().value);\\n        }\\n    }\\n\\n    if (globalSubSet.size) {\\n        for (const csPerStats of globalSubSet) {\\n            CallStats.sendApplicationLog(m, csPerStats);\\n        }\\n    } else {\\n        CallStats.sendApplicationLog(m, null);\\n    }\\n};\\n\\n/**\\n * Sends the given feedback through CallStats.\\n *\\n * @param overall an integer between 1 and 5 indicating the user's rating.\\n * @param comment the comment from the user.\\n */\\nStatistics.prototype.sendFeedback = function(overall, comment) {\\n    CallStats.sendFeedback(this._getCallStatsConfID(), overall, comment);\\n    Statistics.analytics.sendEvent(\\n        FEEDBACK,\\n        {\\n            rating: overall,\\n            comment\\n        });\\n};\\n\\nStatistics.LOCAL_JID = require('../../service/statistics/constants').LOCAL_JID;\\n\\n/**\\n * Reports global error to CallStats.\\n *\\n * @param {Error} error\\n */\\nStatistics.reportGlobalError = function(error) {\\n    if (error instanceof JitsiTrackError && error.gum) {\\n        Statistics.sendGetUserMediaFailed(error);\\n    } else {\\n        Statistics.sendLog(error);\\n    }\\n};\\n\\n/**\\n * Sends event to analytics and logs a message to the logger/console. Console\\n * messages might also be logged to callstats automatically.\\n *\\n * @param {string | Object} event the event name, or an object which\\n * represents the entire event.\\n * @param {Object} properties properties to attach to the event (if an event\\n * name as opposed to an event object is provided).\\n */\\nStatistics.sendAnalyticsAndLog = function(event, properties = {}) {\\n    if (!event) {\\n        logger.warn('No event or event name given.');\\n\\n        return;\\n    }\\n\\n    let eventToLog;\\n\\n    // Also support an API with a single object as an event.\\n    if (typeof event === 'object') {\\n        eventToLog = event;\\n    } else {\\n        eventToLog = {\\n            name: event,\\n            properties\\n        };\\n    }\\n\\n    logger.log(JSON.stringify(eventToLog));\\n\\n    // We do this last, because it may modify the object which is passed.\\n    this.analytics.sendEvent(event, properties);\\n};\\n\\n/**\\n * Sends event to analytics.\\n *\\n * @param {string | Object} eventName the event name, or an object which\\n * represents the entire event.\\n * @param {Object} properties properties to attach to the event\\n */\\nStatistics.sendAnalytics = function(eventName, properties = {}) {\\n    this.analytics.sendEvent(eventName, properties);\\n};\\n\",\"const RTCEvents = {\\n    /**\\n     * Indicates error while create answer call.\\n     */\\n    CREATE_ANSWER_FAILED: 'rtc.create_answer_failed',\\n\\n    /**\\n     * Indicates error while create offer call.\\n     */\\n    CREATE_OFFER_FAILED: 'rtc.create_offer_failed',\\n    DATA_CHANNEL_OPEN: 'rtc.data_channel_open',\\n    ENDPOINT_CONN_STATUS_CHANGED: 'rtc.endpoint_conn_status_changed',\\n    DOMINANT_SPEAKER_CHANGED: 'rtc.dominant_speaker_changed',\\n    LASTN_ENDPOINT_CHANGED: 'rtc.lastn_endpoint_changed',\\n\\n    /**\\n     * Event emitted when the user granted a permission for the camera / mic.\\n     * Used to keep track of the granted permissions on browsers which don't\\n     * support the Permissions API.\\n     */\\n    GRANTED_PERMISSIONS: 'rtc.granted_permissions',\\n\\n    IS_SELECTED_CHANGED: 'rtc.is_selected_change',\\n\\n    /**\\n     * Event emitted when {@link RTC.setLastN} method is called to update with\\n     * the new value set.\\n     * The first argument is the value passed to {@link RTC.setLastN}.\\n     */\\n    LASTN_VALUE_CHANGED: 'rtc.lastn_value_changed',\\n\\n    /**\\n     * Event emitted when ssrc for a local track is extracted and stored\\n     * in {@link TraceablePeerConnection}.\\n     * @param {JitsiLocalTrack} track which ssrc was updated\\n     * @param {string} ssrc that was stored\\n     */\\n    LOCAL_TRACK_SSRC_UPDATED: 'rtc.local_track_ssrc_updated',\\n\\n    TRACK_ATTACHED: 'rtc.track_attached',\\n\\n    /**\\n     * Event fired when we remote track is added to the conference.\\n     * 1st event argument is the added <tt>JitsiRemoteTrack</tt> instance.\\n     **/\\n    REMOTE_TRACK_ADDED: 'rtc.remote_track_added',\\n\\n    // FIXME get rid of this event in favour of NO_DATA_FROM_SOURCE event\\n    // (currently implemented for local tracks only)\\n    REMOTE_TRACK_MUTE: 'rtc.remote_track_mute',\\n\\n    /**\\n     * Indicates that the remote track has been removed from the conference.\\n     * 1st event argument is the removed {@link JitsiRemoteTrack} instance.\\n     */\\n    REMOTE_TRACK_REMOVED: 'rtc.remote_track_removed',\\n\\n    // FIXME get rid of this event in favour of NO_DATA_FROM_SOURCE event\\n    // (currently implemented for local tracks only)\\n    REMOTE_TRACK_UNMUTE: 'rtc.remote_track_unmute',\\n\\n    /**\\n     * Indicates error while set local description.\\n     */\\n    SET_LOCAL_DESCRIPTION_FAILED: 'rtc.set_local_description_failed',\\n\\n    /**\\n     * Indicates error while set remote description.\\n     */\\n    SET_REMOTE_DESCRIPTION_FAILED: 'rtc.set_remote_description_failed',\\n    AUDIO_OUTPUT_DEVICE_CHANGED: 'rtc.audio_output_device_changed',\\n    DEVICE_LIST_CHANGED: 'rtc.device_list_changed',\\n    DEVICE_LIST_AVAILABLE: 'rtc.device_list_available',\\n\\n    /**\\n     * Indicates that a message from another participant is received on\\n     * data channel.\\n     */\\n    ENDPOINT_MESSAGE_RECEIVED: 'rtc.endpoint_message_received',\\n\\n    /**\\n     * Designates an event indicating that the local ICE username fragment of\\n     * the jingle session has changed.\\n     * The first argument of the vent is <tt>TraceablePeerConnection</tt> which\\n     * is the source of the event.\\n     * The second argument is the actual \\\"ufrag\\\" string.\\n     */\\n    LOCAL_UFRAG_CHANGED: 'rtc.local_ufrag_changed',\\n\\n    /**\\n     * Designates an event indicating that the local ICE username fragment of\\n     * the jingle session has changed.\\n     * The first argument of the vent is <tt>TraceablePeerConnection</tt> which\\n     * is the source of the event.\\n     * The second argument is the actual \\\"ufrag\\\" string.\\n     */\\n    REMOTE_UFRAG_CHANGED: 'rtc.remote_ufrag_changed'\\n};\\n\\nmodule.exports = RTCEvents;\\n\",\"/**\\n * This class exports constants and factory methods related to the analytics\\n * API provided by AnalyticsAdapter. In order for entries in a database to be\\n * somewhat easily traceable back to the code which produced them, events sent\\n * through analytics should be defined here.\\n *\\n * Since the AnalyticsAdapter API can be used in different ways, for some events\\n * it is more convenient to just define the event name as a constant. For other\\n * events a factory function is easier.\\n *\\n * A general approach for adding a new event:\\n * 1. Determine the event type: track, UI, page, or operational. If in doubt use\\n * operational.\\n * 2. Determine whether the event is related to other existing events, and\\n * which fields are desired to be set: name, action, actionSubject, source.\\n * 3. If the name is sufficient (the other fields are not important), use a\\n * constant. Otherwise use a factory function.\\n *\\n * Note that the AnalyticsAdapter uses the events passed to its functions for\\n * its own purposes, and might modify them. Because of this, factory functions\\n * should create new objects.\\n *\\n */\\n\\n/**\\n * The constant which identifies an event of type \\\"operational\\\".\\n * @type {string}\\n */\\nexport const TYPE_OPERATIONAL = 'operational';\\n\\n/**\\n * The constant which identifies an event of type \\\"page\\\".\\n * @type {string}\\n */\\nexport const TYPE_PAGE = 'page';\\n\\n/**\\n * The constant which identifies an event of type \\\"track\\\".\\n * @type {string}\\n */\\nexport const TYPE_TRACK = 'track';\\n\\n/**\\n * The constant which identifies an event of type \\\"ui\\\".\\n * @type {string}\\n */\\nexport const TYPE_UI = 'ui';\\n\\n/**\\n * The \\\"action\\\" value for Jingle events which indicates that the Jingle session\\n * was restarted (TODO: verify/fix the documentation)\\n * @type {string}\\n */\\nexport const ACTION_JINGLE_RESTART = 'restart';\\n\\n/**\\n * The \\\"action\\\" value for Jingle events which indicates that a session-accept\\n * timed out (TODO: verify/fix the documentation)\\n * @type {string}\\n */\\nexport const ACTION_JINGLE_SA_TIMEOUT = 'session-accept.timeout';\\n\\n/**\\n * The \\\"action\\\" value for Jingle events which indicates that a session-initiate\\n * was received.\\n * @type {string}\\n */\\nexport const ACTION_JINGLE_SI_RECEIVED = 'session-initiate.received';\\n\\n/**\\n * The \\\"action\\\" value for Jingle events which indicates that a session-initiate\\n * not arrived within a timeout (the value is specified in\\n * the {@link JingleSessionPC}.\\n * @type {string}\\n */\\nexport const ACTION_JINGLE_SI_TIMEOUT = 'session-initiate.timeout';\\n\\n/**\\n * A constant for the \\\"terminate\\\" action for Jingle events. TODO: verify/fix\\n * the documentation)\\n * @type {string}\\n */\\nexport const ACTION_JINGLE_TERMINATE = 'terminate';\\n\\n/**\\n * The \\\"action\\\" value for Jingle events which indicates that a transport-replace\\n * was received.\\n * @type {string}\\n */\\nexport const ACTION_JINGLE_TR_RECEIVED\\n    = 'transport-replace.received';\\n\\n/**\\n * The \\\"action\\\" value for Jingle events which indicates that a transport-replace\\n * succeeded (TODO: verify/fix the documentation)\\n * @type {string}\\n */\\nexport const ACTION_JINGLE_TR_SUCCESS\\n    = 'transport-replace.success';\\n\\n/**\\n * The \\\"action\\\" value for P2P events which indicates that a connection was\\n * established (TODO: verify/fix the documentation)\\n * @type {string}\\n */\\nexport const ACTION_P2P_ESTABLISHED = 'established';\\n\\n/**\\n * The \\\"action\\\" value for P2P events which indicates that something failed.\\n * @type {string}\\n */\\nexport const ACTION_P2P_FAILED = 'failed';\\n\\n/**\\n * The \\\"action\\\" value for P2P events which indicates that a switch to\\n * jitsi-videobridge happened.\\n * @type {string}\\n */\\nexport const ACTION_P2P_SWITCH_TO_JVB = 'switch.to.jvb';\\n\\n/**\\n * The name of an event which indicates an available device. We send one such\\n * event per available device once when the available devices are first known,\\n * and every time that they change\\n * @type {string}\\n *\\n * Properties:\\n *      audio_input_device_count: the number of audio input devices available at\\n *          the time the event was sent.\\n *      audio_output_device_count: the number of audio output devices available\\n *          at the time the event was sent.\\n *      video_input_device_count: the number of video input devices available at\\n *          the time the event was sent.\\n *      video_output_device_count: the number of video output devices available\\n *          at the time the event was sent.\\n *      device_id: an identifier of the device described in this event.\\n *      device_group_id:\\n *      device_kind: one of 'audioinput', 'audiooutput', 'videoinput' or\\n *          'videooutput'.\\n *      device_label: a string which describes the device.\\n */\\nexport const AVAILABLE_DEVICE = 'available.device';\\n\\n/**\\n * This appears to be fired only in certain cases when the XMPP connection\\n * disconnects (and it was intentional?). It is currently never observed to\\n * fire in production.\\n *\\n * TODO: document\\n *\\n * Properties:\\n *      message: an error message\\n */\\nexport const CONNECTION_DISCONNECTED = 'connection.disconnected';\\n\\n/**\\n * Indicates that the user of the application provided feedback in terms of a\\n * rating (an integer from 1 to 5) and an optional comment.\\n * Properties:\\n *      value: the user's rating (an integer from 1 to 5)\\n *      comment: the user's comment\\n */\\nexport const FEEDBACK = 'feedback';\\n\\n/**\\n * Indicates the duration of a particular phase of the ICE connectivity\\n * establishment.\\n *\\n * Properties:\\n *      phase: the ICE phase (e.g. 'gathering', 'checking', 'establishment')\\n *      value: the duration in milliseconds.\\n *      p2p: whether the associated ICE connection is p2p or towards a\\n *          jitsi-videobridge\\n *      initiator: whether the local Jingle peer is the initiator or responder\\n *          in the Jingle session. XXX we probably actually care about the ICE\\n *          role (controlling vs controlled), and we assume that this correlates\\n *          with the Jingle initiator.\\n */\\nexport const ICE_DURATION = 'ice.duration';\\n\\n/**\\n * Indicates the difference in milliseconds between the ICE establishment time\\n * for the P2P and JVB connections (e.g. a value of 10 would indicate that the\\n * P2P connection took 10ms more than JVB connection to establish).\\n *\\n * Properties:\\n *      value: the difference in establishment durations in milliseconds.\\n *\\n */\\nexport const ICE_ESTABLISHMENT_DURATION_DIFF\\n    = 'ice.establishment.duration.diff';\\n\\n/**\\n * Indicates that the ICE state has changed.\\n *\\n * Properties:\\n *      state: the ICE state which was entered (e.g. 'checking', 'connected',\\n *          'completed', etc).\\n *      value: the time in milliseconds (as reported by\\n *          window.performance.now()) that the state change occurred.\\n *      p2p: whether the associated ICE connection is p2p or towards a\\n *          jitsi-videobridge\\n *      signalingState: The signaling state of the associated PeerConnection\\n *      reconnect: whether the associated Jingle session is in the process of\\n *          reconnecting (or is it ICE? TODO: verify/fix the documentation)\\n */\\nexport const ICE_STATE_CHANGED = 'ice.state.changed';\\n\\n/**\\n * Indicates that a track was unmuted (?).\\n *\\n * Properties:\\n *      mediaType: the media type of the local track ('audio' or 'video').\\n *      trackType: the type of the track ('local' or 'remote').\\n *      value: TODO: document\\n */\\nexport const TRACK_UNMUTED = 'track.unmuted';\\n\\n/**\\n * Creates an operational event which indicates that we have received a\\n * \\\"bridge down\\\" event from jicofo.\\n */\\nexport const createBridgeDownEvent = function() {\\n    const bridgeDown = 'bridge.down';\\n\\n    return {\\n        action: bridgeDown,\\n        actionSubject: bridgeDown,\\n        type: TYPE_OPERATIONAL\\n    };\\n};\\n\\n/**\\n * Creates an event which indicates that the XMPP connection failed\\n * @param errorType TODO\\n * @param errorMessage TODO\\n * @param detail connection failed details.\\n */\\nexport const createConnectionFailedEvent\\n    = function(errorType, errorMessage, details) {\\n        return {\\n            type: TYPE_OPERATIONAL,\\n            action: 'connection.failed',\\n            attributes: {\\n                'error_type': errorType,\\n                'error_message': errorMessage,\\n                ...details\\n            }\\n        };\\n    };\\n\\n/**\\n * Creates an operational event which indicates that a particular connection\\n * stage was reached (i.e. the XMPP connection transitioned to the \\\"connected\\\"\\n * state).\\n *\\n * @param stage the stage which was reached\\n * @param attributes additional attributes for the event. This should be an\\n * object with a \\\"value\\\" property indicating a timestamp in milliseconds\\n * relative to the beginning of the document's lifetime.\\n *\\n */\\nexport const createConnectionStageReachedEvent = function(stage, attributes) {\\n    const action = 'connection.stage.reached';\\n\\n    return {\\n        action,\\n        actionSubject: stage,\\n        attributes,\\n        source: action,\\n        type: TYPE_OPERATIONAL\\n    };\\n};\\n\\n/**\\n * Creates an operational event for the end-to-end round trip time to a\\n * specific remote participant.\\n * @param participantId the ID of the remote participant.\\n * @param region the region of the remote participant\\n * @param rtt the rtt\\n */\\nexport const createE2eRttEvent = function(participantId, region, rtt) {\\n    const attributes = {\\n        'participant_id': participantId,\\n        region,\\n        rtt\\n    };\\n\\n    return {\\n        attributes,\\n        name: 'e2e_rtt',\\n        type: TYPE_OPERATIONAL\\n    };\\n};\\n\\n/**\\n * Creates an event which indicates that the focus has left the MUC.\\n */\\nexport const createFocusLeftEvent = function() {\\n    const action = 'focus.left';\\n\\n    return {\\n        action,\\n        actionSubject: action,\\n        type: TYPE_OPERATIONAL\\n    };\\n};\\n\\n/**\\n * Creates an event related to a getUserMedia call.\\n *\\n * @param action the type of the result that the event represents: 'error',\\n * 'success', 'warning', etc.\\n * @param attributes the attributes to attach to the event.\\n * @returns {{type: string, source: string, name: string}}\\n */\\nexport const createGetUserMediaEvent = function(action, attributes = {}) {\\n    return {\\n        type: TYPE_OPERATIONAL,\\n        source: 'get.user.media',\\n        action,\\n        attributes\\n    };\\n};\\n\\n/**\\n * Creates an event for a Jingle-related event.\\n * @param action the action of the event\\n * @param attributes attributes to add to the event.\\n */\\nexport const createJingleEvent = function(action, attributes = {}) {\\n    return {\\n        type: TYPE_OPERATIONAL,\\n        action,\\n        source: 'jingle',\\n        attributes\\n    };\\n};\\n\\n/**\\n * Creates an event which indicates that a local track was not able to read\\n * data from its source (a camera or a microphone).\\n *\\n * @param mediaType {String} the media type of the local track ('audio' or\\n * 'video').\\n */\\nexport const createNoDataFromSourceEvent = function(mediaType) {\\n    return {\\n        attributes: { 'media_type': mediaType },\\n        action: 'track.no.data.from.source',\\n        type: TYPE_OPERATIONAL\\n    };\\n};\\n\\n/**\\n * Creates an event for a p2p-related event.\\n * @param action the action of the event\\n * @param attributes attributes to add to the event.\\n */\\nexport const createP2PEvent = function(action, attributes = {}) {\\n    return {\\n        type: TYPE_OPERATIONAL,\\n        action,\\n        source: 'p2p',\\n        attributes\\n    };\\n};\\n\\n/**\\n * Indicates that we received a remote command to mute.\\n */\\nexport const createRemotelyMutedEvent = function() {\\n    return {\\n        type: TYPE_OPERATIONAL,\\n        action: 'remotely.muted'\\n    };\\n};\\n\\n/**\\n * Creates an event which contains RTP statistics such as RTT and packet loss.\\n *\\n * All average RTP stats are currently reported under 1 event name, but with\\n * different properties that allows to distinguish between a P2P call, a\\n * call relayed through TURN or the JVB, and multiparty vs 1:1.\\n *\\n * The structure of the event is:\\n *\\n * {\\n *      p2p: true,\\n *      conferenceSize: 2,\\n *      localCandidateType: \\\"relay\\\",\\n *      remoteCandidateType: \\\"relay\\\",\\n *      transportType: \\\"udp\\\",\\n *\\n *      // Average RTT of 200ms\\n *      \\\"rtt.avg\\\": 200,\\n *      \\\"rtt.samples\\\": \\\"[100, 200, 300]\\\",\\n *\\n *      // Average packet loss of 10%\\n *      \\\"packet.loss.avg\\\": 10,\\n *      \\\"packet.loss.samples\\\": '[5, 10, 15]'\\n *\\n *      // Difference in milliseconds in the end-to-end RTT between p2p and jvb.\\n *      // The e2e RTT through jvb is 15ms shorter:\\n *      \\\"rtt.diff\\\": 15,\\n *\\n *      // End-to-end RTT through JVB is ms.\\n *      \\\"end2end.rtt.avg\\\" = 100\\n * }\\n *\\n * Note that the value of the \\\"samples\\\" properties are (JSON encoded) strings,\\n * and not JSON arrays, as events' attributes can not be nested. The samples are\\n * currently included for debug purposes only and can be removed anytime soon\\n * from the structure.\\n *\\n * Also note that not all of values are present in each event, as values are\\n * obtained and calculated as part of different process/event pipe. For example\\n * {@link ConnectionAvgStats} instances are doing the reports for each\\n * {@link TraceablePeerConnection} and work independently from the main stats\\n * pipe.\\n */\\nexport const createRtpStatsEvent = function(attributes) {\\n    return {\\n        type: TYPE_OPERATIONAL,\\n        action: 'rtp.stats',\\n        attributes\\n    };\\n};\\n\\n/**\\n * Creates an event which contains the round trip time (RTT) to a set of\\n * regions.\\n *\\n * @param attributes\\n * @returns {{type: string, action: string, attributes: *}}\\n */\\nexport const createRttByRegionEvent = function(attributes) {\\n    return {\\n        type: TYPE_OPERATIONAL,\\n        action: 'rtt.by.region',\\n        attributes\\n    };\\n};\\n\\n/**\\n * Creates an event which indicates the Time To First Media (TTFM).\\n * It is measured in milliseconds relative to the beginning of the document's\\n * lifetime (i.e. the origin used by window.performance.now()), and it excludes\\n * the following:\\n * 1. The delay due to getUserMedia()\\n * 2. The period between the MUC being joined and the reception of the Jingle\\n * session-initiate from jicofo. This is because jicofo will not start a Jingle\\n * session until there are at least 2 participants in the room.\\n *\\n * @param attributes the attributes to add to the event. Currently used fields:\\n *      mediaType: the media type of the local track ('audio' or 'video').\\n *      muted: whether the track has ever been muted (?)\\n *      value: the TTMF in milliseconds.\\n */\\nexport const createTtfmEvent = function(attributes) {\\n    return createConnectionStageReachedEvent('ttfm', attributes);\\n};\\n\",\"/**\\n * The audio type.\\n */\\nexport const AUDIO = 'audio';\\n\\n/**\\n * The video type.\\n */\\nexport const VIDEO = 'video';\\n\",\"/**\\n * This utility class defines custom onerror and onunhandledrejection functions.\\n * The custom error handlers respect the previously-defined error handlers.\\n * GlobalOnErrorHandler class provides utilities to add many custom error\\n * handlers and to execute the error handlers directly.\\n */\\n\\n\\n/**\\n * List with global error handlers that will be executed.\\n */\\nconst handlers = [];\\n\\n// If an old handler exists, also fire its events.\\nconst oldOnErrorHandler = window.onerror;\\n\\n/**\\n * Custom error handler that calls the old global error handler and executes\\n * all handlers that were previously added.\\n */\\nfunction JitsiGlobalErrorHandler(...args) {\\n    handlers.forEach(handler => handler(...args));\\n    oldOnErrorHandler && oldOnErrorHandler(...args);\\n}\\n\\n// If an old handler exists, also fire its events.\\nconst oldOnUnhandledRejection = window.onunhandledrejection;\\n\\n/**\\n * Custom handler that calls the old global handler and executes all handlers\\n * that were previously added. This handler handles rejected Promises.\\n */\\nfunction JitsiGlobalUnhandledRejection(event) {\\n    handlers.forEach(handler => handler(null, null, null, null, event.reason));\\n    oldOnUnhandledRejection && oldOnUnhandledRejection(event);\\n}\\n\\n// Setting the custom error handlers.\\nwindow.onerror = JitsiGlobalErrorHandler;\\nwindow.onunhandledrejection = JitsiGlobalUnhandledRejection;\\n\\nconst GlobalOnErrorHandler = {\\n    /**\\n     * Adds new error handlers.\\n     * @param handler the new handler.\\n     */\\n    addHandler(handler) {\\n        handlers.push(handler);\\n    },\\n\\n    /**\\n     * Calls the global error handler if there is one.\\n     * @param error the error to pass to the error handler\\n     */\\n    callErrorHandler(error) {\\n        const errHandler = window.onerror;\\n\\n        if (!errHandler) {\\n            return;\\n        }\\n        errHandler(null, null, null, null, error);\\n    },\\n\\n    /**\\n     * Calls the global rejection handler if there is one.\\n     * @param error the error to pass to the rejection handler.\\n     */\\n    callUnhandledRejectionHandler(error) {\\n        const errHandler = window.onunhandledrejection;\\n\\n        if (!errHandler) {\\n            return;\\n        }\\n        errHandler(error);\\n    }\\n};\\n\\n\\nmodule.exports = GlobalOnErrorHandler;\\n\",\"/* global\\n          __filename,\\n          MediaStreamTrack,\\n          RTCIceCandidate: true,\\n          RTCPeerConnection,\\n          RTCSessionDescription: true\\n*/\\n\\nimport { AVAILABLE_DEVICE } from '../../service/statistics/AnalyticsEvents';\\nimport CameraFacingMode from '../../service/RTC/CameraFacingMode';\\nimport EventEmitter from 'events';\\nimport { getLogger } from 'jitsi-meet-logger';\\nimport GlobalOnErrorHandler from '../util/GlobalOnErrorHandler';\\nimport JitsiTrackError from '../../JitsiTrackError';\\nimport Listenable from '../util/Listenable';\\nimport * as MediaType from '../../service/RTC/MediaType';\\nimport Resolutions from '../../service/RTC/Resolutions';\\nimport browser from '../browser';\\nimport RTCEvents from '../../service/RTC/RTCEvents';\\nimport ortcRTCPeerConnection from './ortc/RTCPeerConnection';\\nimport screenObtainer from './ScreenObtainer';\\nimport SDPUtil from '../xmpp/SDPUtil';\\nimport Statistics from '../statistics/statistics';\\nimport VideoType from '../../service/RTC/VideoType';\\n\\nconst logger = getLogger(__filename);\\n\\n// Require adapter only for certain browsers. This is being done for\\n// react-native, which has its own shims, and while browsers are being migrated\\n// over to use adapter's shims.\\nif (browser.usesAdapter()) {\\n    require('webrtc-adapter');\\n}\\n\\nconst eventEmitter = new EventEmitter();\\n\\nconst AVAILABLE_DEVICES_POLL_INTERVAL_TIME = 3000; // ms\\n\\n/**\\n * Default resolution to obtain for video tracks if no resolution is specified.\\n * This default is used for old gum flow only, as new gum flow uses\\n * {@link DEFAULT_CONSTRAINTS}.\\n */\\nconst OLD_GUM_DEFAULT_RESOLUTION = 720;\\n\\n/**\\n * Default devices to obtain when no specific devices are specified. This\\n * default is used for old gum flow only.\\n */\\nconst OLD_GUM_DEFAULT_DEVICES = [ 'audio', 'video' ];\\n\\n/**\\n * Default MediaStreamConstraints to use for calls to getUserMedia.\\n *\\n * @private\\n */\\nconst DEFAULT_CONSTRAINTS = {\\n    video: {\\n        aspectRatio: 16 / 9,\\n        height: {\\n            ideal: 720,\\n            max: 720,\\n            min: 240\\n        }\\n    }\\n};\\n\\n/**\\n * The default frame rate for Screen Sharing.\\n */\\nconst SS_DEFAULT_FRAME_RATE = 5;\\n\\n// Currently audio output device change is supported only in Chrome and\\n// default output always has 'default' device ID\\nlet audioOutputDeviceId = 'default'; // default device\\n// whether user has explicitly set a device to use\\nlet audioOutputChanged = false;\\n\\n// Disables all audio processing\\nlet disableAP = false;\\n\\n// Disables Acoustic Echo Cancellation\\nlet disableAEC = false;\\n\\n// Disables Noise Suppression\\nlet disableNS = false;\\n\\n// Disables Automatic Gain Control\\nlet disableAGC = false;\\n\\n// Disables Highpass Filter\\nlet disableHPF = false;\\n\\nconst featureDetectionAudioEl = document.createElement('audio');\\nconst isAudioOutputDeviceChangeAvailable\\n    = typeof featureDetectionAudioEl.setSinkId !== 'undefined';\\n\\nlet availableDevices;\\nlet availableDevicesPollTimer;\\n\\n/**\\n * Initialize wrapper function for enumerating devices.\\n * TODO: remove this, it should no longer be needed.\\n *\\n * @returns {?Function}\\n */\\nfunction initEnumerateDevicesWithCallback() {\\n    if (navigator.mediaDevices && navigator.mediaDevices.enumerateDevices) {\\n        return callback => {\\n            navigator.mediaDevices.enumerateDevices()\\n                .then(callback, () => callback([]));\\n        };\\n    }\\n}\\n\\n/**\\n *\\n * @param constraints\\n * @param isNewStyleConstraintsSupported\\n * @param resolution\\n */\\nfunction setResolutionConstraints(\\n        constraints,\\n        isNewStyleConstraintsSupported,\\n        resolution) {\\n    if (Resolutions[resolution]) {\\n        if (isNewStyleConstraintsSupported) {\\n            constraints.video.width = {\\n                ideal: Resolutions[resolution].width\\n            };\\n            constraints.video.height = {\\n                ideal: Resolutions[resolution].height\\n            };\\n        }\\n\\n        constraints.video.mandatory.minWidth = Resolutions[resolution].width;\\n        constraints.video.mandatory.minHeight = Resolutions[resolution].height;\\n    }\\n\\n    if (constraints.video.mandatory.minWidth) {\\n        constraints.video.mandatory.maxWidth\\n            = constraints.video.mandatory.minWidth;\\n    }\\n\\n    if (constraints.video.mandatory.minHeight) {\\n        constraints.video.mandatory.maxHeight\\n            = constraints.video.mandatory.minHeight;\\n    }\\n}\\n\\n/**\\n * @param {string[]} um required user media types\\n *\\n * @param {Object} [options={}] optional parameters\\n * @param {string} options.resolution\\n * @param {number} options.bandwidth\\n * @param {number} options.fps\\n * @param {string} options.desktopStream\\n * @param {string} options.cameraDeviceId\\n * @param {string} options.micDeviceId\\n * @param {CameraFacingMode} options.facingMode\\n * @param {bool} firefox_fake_device\\n * @param {Object} options.frameRate - used only for dekstop sharing.\\n * @param {Object} options.frameRate.min - Minimum fps\\n * @param {Object} options.frameRate.max - Maximum fps\\n */\\nfunction getConstraints(um, options = {}) {\\n    const constraints = {\\n        audio: false,\\n        video: false\\n    };\\n\\n    // Don't mix new and old style settings for Chromium as this leads\\n    // to TypeError in new Chromium versions. @see\\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=614716\\n    // This is a temporary solution, in future we will fully split old and\\n    // new style constraints when new versions of Chromium and Firefox will\\n    // have stable support of new constraints format. For more information\\n    // @see https://github.com/jitsi/lib-jitsi-meet/pull/136\\n    const isNewStyleConstraintsSupported\\n        = browser.isFirefox()\\n            || browser.isSafariWithVP8()\\n            || browser.isEdge()\\n            || browser.isReactNative();\\n\\n    if (um.indexOf('video') >= 0) {\\n        // same behaviour as true\\n        constraints.video = { mandatory: {},\\n            optional: [] };\\n\\n        if (options.cameraDeviceId) {\\n            if (isNewStyleConstraintsSupported) {\\n                // New style of setting device id.\\n                constraints.video.deviceId = options.cameraDeviceId;\\n            }\\n\\n            // Old style.\\n            constraints.video.mandatory.sourceId = options.cameraDeviceId;\\n        } else {\\n            // Prefer the front i.e. user-facing camera (to the back i.e.\\n            // environment-facing camera, for example).\\n            // TODO: Maybe use \\\"exact\\\" syntax if options.facingMode is defined,\\n            // but this probably needs to be decided when updating other\\n            // constraints, as we currently don't use \\\"exact\\\" syntax anywhere.\\n            const facingMode = options.facingMode || CameraFacingMode.USER;\\n\\n            if (isNewStyleConstraintsSupported) {\\n                constraints.video.facingMode = facingMode;\\n            }\\n            constraints.video.optional.push({\\n                facingMode\\n            });\\n        }\\n\\n        if (options.minFps || options.maxFps || options.fps) {\\n            // for some cameras it might be necessary to request 30fps\\n            // so they choose 30fps mjpg over 10fps yuy2\\n            if (options.minFps || options.fps) {\\n                // Fall back to options.fps for backwards compatibility\\n                options.minFps = options.minFps || options.fps;\\n                constraints.video.mandatory.minFrameRate = options.minFps;\\n            }\\n            if (options.maxFps) {\\n                constraints.video.mandatory.maxFrameRate = options.maxFps;\\n            }\\n        }\\n\\n        setResolutionConstraints(\\n            constraints, isNewStyleConstraintsSupported, options.resolution);\\n    }\\n    if (um.indexOf('audio') >= 0) {\\n        if (browser.isReactNative()) {\\n            // The react-native-webrtc project that we're currently using\\n            // expects the audio constraint to be a boolean.\\n            constraints.audio = true;\\n        } else if (browser.isFirefox()) {\\n            if (options.micDeviceId) {\\n                constraints.audio = {\\n                    mandatory: {},\\n                    deviceId: options.micDeviceId, // new style\\n                    optional: [ {\\n                        sourceId: options.micDeviceId // old style\\n                    } ] };\\n            } else {\\n                constraints.audio = true;\\n            }\\n        } else {\\n            // same behaviour as true\\n            constraints.audio = { mandatory: {},\\n                optional: [] };\\n            if (options.micDeviceId) {\\n                if (isNewStyleConstraintsSupported) {\\n                    // New style of setting device id.\\n                    constraints.audio.deviceId = options.micDeviceId;\\n                }\\n\\n                // Old style.\\n                constraints.audio.optional.push({\\n                    sourceId: options.micDeviceId\\n                });\\n            }\\n\\n            // if it is good enough for hangouts...\\n            constraints.audio.optional.push(\\n                { echoCancellation: !disableAEC && !disableAP },\\n                { googEchoCancellation: !disableAEC && !disableAP },\\n                { googAutoGainControl: !disableAGC && !disableAP },\\n                { googNoiseSuppression: !disableNS && !disableAP },\\n                { googHighpassFilter: !disableHPF && !disableAP },\\n                { googNoiseSuppression2: !disableNS && !disableAP },\\n                { googEchoCancellation2: !disableAEC && !disableAP },\\n                { googAutoGainControl2: !disableAGC && !disableAP }\\n            );\\n        }\\n    }\\n    if (um.indexOf('screen') >= 0) {\\n        if (browser.isChrome()) {\\n            constraints.video = {\\n                mandatory: getSSConstraints({\\n                    ...options,\\n                    source: 'screen'\\n                }),\\n                optional: []\\n            };\\n\\n        } else if (browser.isFirefox()) {\\n            constraints.video = {\\n                mozMediaSource: 'window',\\n                mediaSource: 'window',\\n                frameRate: options.frameRate || {\\n                    min: SS_DEFAULT_FRAME_RATE,\\n                    max: SS_DEFAULT_FRAME_RATE\\n                }\\n            };\\n\\n        } else {\\n            const errmsg\\n                = '\\\\'screen\\\\' WebRTC media source is supported only in Chrome'\\n                    + ' and Firefox';\\n\\n            GlobalOnErrorHandler.callErrorHandler(new Error(errmsg));\\n            logger.error(errmsg);\\n        }\\n    }\\n    if (um.indexOf('desktop') >= 0) {\\n        constraints.video = {\\n            mandatory: getSSConstraints({\\n                ...options,\\n                source: 'desktop'\\n            }),\\n            optional: []\\n        };\\n    }\\n\\n    if (options.bandwidth) {\\n        if (!constraints.video) {\\n            // same behaviour as true\\n            constraints.video = { mandatory: {},\\n                optional: [] };\\n        }\\n        constraints.video.optional.push({ bandwidth: options.bandwidth });\\n    }\\n\\n    // we turn audio for both audio and video tracks, the fake audio & video\\n    // seems to work only when enabled in one getUserMedia call, we cannot get\\n    // fake audio separate by fake video this later can be a problem with some\\n    // of the tests\\n    if (browser.isFirefox() && options.firefox_fake_device) {\\n        // seems to be fixed now, removing this experimental fix, as having\\n        // multiple audio tracks brake the tests\\n        // constraints.audio = true;\\n        constraints.fake = true;\\n    }\\n\\n    return constraints;\\n}\\n\\n/**\\n * Creates a constraints object to be passed into a call to getUserMedia.\\n *\\n * @param {Array} um - An array of user media types to get. The accepted\\n * types are \\\"video\\\", \\\"audio\\\", and \\\"desktop.\\\"\\n * @param {Object} options - Various values to be added to the constraints.\\n * @param {string} options.cameraDeviceId - The device id for the video\\n * capture device to get video from.\\n * @param {Object} options.constraints - Default constraints object to use\\n * as a base for the returned constraints.\\n * @param {Object} options.desktopStream - The desktop source id from which\\n * to capture a desktop sharing video.\\n * @param {string} options.facingMode - Which direction the camera is\\n * pointing to.\\n * @param {string} options.micDeviceId - The device id for the audio capture\\n * device to get audio from.\\n * @param {Object} options.frameRate - used only for dekstop sharing.\\n * @param {Object} options.frameRate.min - Minimum fps\\n * @param {Object} options.frameRate.max - Maximum fps\\n * @private\\n * @returns {Object}\\n */\\nfunction newGetConstraints(um = [], options = {}) {\\n    // Create a deep copy of the constraints to avoid any modification of\\n    // the passed in constraints object.\\n    const constraints = JSON.parse(JSON.stringify(\\n        options.constraints || DEFAULT_CONSTRAINTS));\\n\\n    if (um.indexOf('video') >= 0) {\\n        if (!constraints.video) {\\n            constraints.video = {};\\n        }\\n\\n        if (options.cameraDeviceId) {\\n            constraints.video.deviceId = options.cameraDeviceId;\\n        } else {\\n            const facingMode = options.facingMode || CameraFacingMode.USER;\\n\\n            constraints.video.facingMode = facingMode;\\n        }\\n    } else {\\n        constraints.video = false;\\n    }\\n\\n    if (um.indexOf('audio') >= 0) {\\n        if (!constraints.audio || typeof constraints.audio === 'boolean') {\\n            constraints.audio = {};\\n        }\\n\\n        // NOTE(brian): the new-style ('advanced' instead of 'optional')\\n        // doesn't seem to carry through the googXXX constraints\\n        // Changing back to 'optional' here (even with video using\\n        // the 'advanced' style) allows them to be passed through\\n        // but also requires the device id to capture to be set in optional\\n        // as sourceId otherwise the constraints are considered malformed.\\n        if (!constraints.audio.optional) {\\n            constraints.audio.optional = [];\\n        }\\n\\n        constraints.audio.optional.push(\\n            { sourceId: options.micDeviceId },\\n            { echoCancellation: !disableAEC && !disableAP },\\n            { googEchoCancellation: !disableAEC && !disableAP },\\n            { googAutoGainControl: !disableAGC && !disableAP },\\n            { googNoiseSuppression: !disableNS && !disableAP },\\n            { googHighpassFilter: !disableHPF && !disableAP },\\n            { googNoiseSuppression2: !disableNS && !disableAP },\\n            { googEchoCancellation2: !disableAEC && !disableAP },\\n            { googAutoGainControl2: !disableAGC && !disableAP }\\n        );\\n    } else {\\n        constraints.audio = false;\\n    }\\n\\n    if (um.indexOf('desktop') >= 0) {\\n        if (!constraints.video || typeof constraints.video === 'boolean') {\\n            constraints.video = {};\\n        }\\n\\n        constraints.video = {\\n            mandatory: getSSConstraints({\\n                ...options,\\n                source: 'desktop'\\n            })\\n        };\\n    }\\n\\n    return constraints;\\n}\\n\\n/**\\n * Generates GUM constraints for screen sharing.\\n *\\n * @param {Object} options - The options passed to\\n * <tt>obtainAudioAndVideoPermissions</tt>.\\n * @returns {Object} - GUM constraints.\\n *\\n * TODO: Currently only the new GUM flow and Chrome is using the method. We\\n * should make it work for all use cases.\\n */\\nfunction getSSConstraints(options = {}) {\\n    const {\\n        desktopStream,\\n        frameRate = {\\n            min: SS_DEFAULT_FRAME_RATE,\\n            max: SS_DEFAULT_FRAME_RATE\\n        }\\n    } = options;\\n    const { max, min } = frameRate;\\n\\n    const constraints = {\\n        chromeMediaSource: options.source,\\n        maxWidth: window.screen.width,\\n        maxHeight: window.screen.height\\n    };\\n\\n    if (typeof min === 'number') {\\n        constraints.minFrameRate = min;\\n    }\\n\\n    if (typeof max === 'number') {\\n        constraints.maxFrameRate = max;\\n    }\\n\\n    if (typeof desktopStream !== 'undefined') {\\n        constraints.chromeMediaSourceId = desktopStream;\\n    }\\n\\n    return constraints;\\n}\\n\\n/**\\n * Generates constraints for screen sharing when using getDisplayMedia.\\n * The constraints(MediaTrackConstraints) are applied to the resulting track.\\n *\\n * @returns {Object} - MediaTrackConstraints constraints.\\n */\\nfunction getTrackSSConstraints(options = {}) {\\n    // we used to set height and width in the constraints, but this can lead\\n    // to inconsistencies if the browser is on a lower resolution screen\\n    // and we share a screen with bigger resolution, so they are now not set\\n    const constraints = {\\n        frameRate: SS_DEFAULT_FRAME_RATE\\n    };\\n    const { desktopSharingFrameRate } = options;\\n\\n    if (desktopSharingFrameRate && desktopSharingFrameRate.max) {\\n        constraints.frameRate = desktopSharingFrameRate.max;\\n    }\\n\\n    return constraints;\\n}\\n\\n/**\\n * Updates the granted permissions based on the options we requested and the\\n * streams we received.\\n * @param um the options we requested to getUserMedia.\\n * @param stream the stream we received from calling getUserMedia.\\n */\\nfunction updateGrantedPermissions(um, stream) {\\n    const audioTracksReceived\\n        = Boolean(stream) && stream.getAudioTracks().length > 0;\\n    const videoTracksReceived\\n        = Boolean(stream) && stream.getVideoTracks().length > 0;\\n    const grantedPermissions = {};\\n\\n    if (um.indexOf('video') !== -1) {\\n        grantedPermissions.video = videoTracksReceived;\\n    }\\n    if (um.indexOf('audio') !== -1) {\\n        grantedPermissions.audio = audioTracksReceived;\\n    }\\n\\n    eventEmitter.emit(RTCEvents.GRANTED_PERMISSIONS, grantedPermissions);\\n}\\n\\n/**\\n * Checks if new list of available media devices differs from previous one.\\n * @param {MediaDeviceInfo[]} newDevices - list of new devices.\\n * @returns {boolean} - true if list is different, false otherwise.\\n */\\nfunction compareAvailableMediaDevices(newDevices) {\\n    if (newDevices.length !== availableDevices.length) {\\n        return true;\\n    }\\n\\n    /* eslint-disable newline-per-chained-call */\\n\\n    return (\\n        newDevices.map(mediaDeviceInfoToJSON).sort().join('')\\n            !== availableDevices\\n                .map(mediaDeviceInfoToJSON).sort().join(''));\\n\\n    /* eslint-enable newline-per-chained-call */\\n\\n    /**\\n     *\\n     * @param info\\n     */\\n    function mediaDeviceInfoToJSON(info) {\\n        return JSON.stringify({\\n            kind: info.kind,\\n            deviceId: info.deviceId,\\n            groupId: info.groupId,\\n            label: info.label,\\n            facing: info.facing\\n        });\\n    }\\n}\\n\\n/**\\n * Sends analytics event with the passed device list.\\n *\\n * @param {Array<MediaDeviceInfo>} deviceList - List with info about the\\n * available devices.\\n * @returns {void}\\n */\\nfunction sendDeviceListToAnalytics(deviceList) {\\n    const audioInputDeviceCount\\n        = deviceList.filter(d => d.kind === 'audioinput').length;\\n    const audioOutputDeviceCount\\n        = deviceList.filter(d => d.kind === 'audiooutput').length;\\n    const videoInputDeviceCount\\n        = deviceList.filter(d => d.kind === 'videoinput').length;\\n    const videoOutputDeviceCount\\n        = deviceList.filter(d => d.kind === 'videooutput').length;\\n\\n    deviceList.forEach(device => {\\n        const attributes = {\\n            'audio_input_device_count': audioInputDeviceCount,\\n            'audio_output_device_count': audioOutputDeviceCount,\\n            'video_input_device_count': videoInputDeviceCount,\\n            'video_output_device_count': videoOutputDeviceCount,\\n            'device_id': device.deviceId,\\n            'device_group_id': device.groupId,\\n            'device_kind': device.kind,\\n            'device_label': device.label\\n        };\\n\\n        Statistics.sendAnalytics(AVAILABLE_DEVICE, attributes);\\n    });\\n}\\n\\n/**\\n * Event handler for the 'devicechange' event.\\n *\\n * @param {MediaDeviceInfo[]} devices - list of media devices.\\n * @emits RTCEvents.DEVICE_LIST_CHANGED\\n */\\nfunction onMediaDevicesListChanged(devicesReceived) {\\n    availableDevices = devicesReceived.slice(0);\\n    logger.info(\\n        'list of media devices has changed:',\\n        availableDevices);\\n\\n    sendDeviceListToAnalytics(availableDevices);\\n\\n    eventEmitter.emit(RTCEvents.DEVICE_LIST_CHANGED, devicesReceived);\\n}\\n\\n/**\\n * Handles the newly created Media Streams.\\n * @param streams the new Media Streams\\n * @param resolution the resolution of the video streams\\n * @returns {*[]} object that describes the new streams\\n */\\nfunction handleLocalStream(streams, resolution) {\\n    let audioStream, desktopStream, videoStream;\\n    const res = [];\\n\\n    // XXX The function obtainAudioAndVideoPermissions has examined the type of\\n    // the browser, its capabilities, etc. and has taken the decision whether to\\n    // invoke getUserMedia per device (e.g. Firefox) or once for both audio and\\n    // video (e.g. Chrome). In order to not duplicate the logic here, examine\\n    // the specified streams and figure out what we've received based on\\n    // obtainAudioAndVideoPermissions' decision.\\n    if (streams) {\\n        // As mentioned above, certian types of browser (e.g. Chrome) support\\n        // (with a result which meets our requirements expressed bellow) calling\\n        // getUserMedia once for both audio and video.\\n        const audioVideo = streams.audioVideo;\\n\\n        if (audioVideo) {\\n            const audioTracks = audioVideo.getAudioTracks();\\n\\n            if (audioTracks.length) {\\n                audioStream = new MediaStream();\\n                for (let i = 0; i < audioTracks.length; i++) {\\n                    audioStream.addTrack(audioTracks[i]);\\n                }\\n            }\\n\\n            const videoTracks = audioVideo.getVideoTracks();\\n\\n            if (videoTracks.length) {\\n                videoStream = new MediaStream();\\n                for (let j = 0; j < videoTracks.length; j++) {\\n                    videoStream.addTrack(videoTracks[j]);\\n                }\\n            }\\n        } else {\\n            // On other types of browser (e.g. Firefox) we choose (namely,\\n            // obtainAudioAndVideoPermissions) to call getUserMedia per device\\n            // (type).\\n            audioStream = streams.audio;\\n            videoStream = streams.video;\\n        }\\n\\n        desktopStream = streams.desktop;\\n    }\\n\\n    if (desktopStream) {\\n        const { stream, sourceId, sourceType } = desktopStream;\\n\\n        res.push({\\n            stream,\\n            sourceId,\\n            sourceType,\\n            track: stream.getVideoTracks()[0],\\n            mediaType: MediaType.VIDEO,\\n            videoType: VideoType.DESKTOP\\n        });\\n    }\\n    if (audioStream) {\\n        res.push({\\n            stream: audioStream,\\n            track: audioStream.getAudioTracks()[0],\\n            mediaType: MediaType.AUDIO,\\n            videoType: null\\n        });\\n    }\\n    if (videoStream) {\\n        res.push({\\n            stream: videoStream,\\n            track: videoStream.getVideoTracks()[0],\\n            mediaType: MediaType.VIDEO,\\n            videoType: VideoType.CAMERA,\\n            resolution\\n        });\\n    }\\n\\n    return res;\\n}\\n\\n/**\\n * Represents a default implementation of setting a <tt>MediaStream</tt> as the\\n * source of a video element that tries to be browser-agnostic through feature\\n * checking. Note though that it was not completely clear from the predating\\n * browser-specific implementations what &quot;videoSrc&quot; was because one\\n * implementation of {@link RTCUtils#getVideoSrc} would return\\n * <tt>MediaStream</tt> (e.g. Firefox), another a <tt>string</tt> representation\\n * of the <tt>URL</tt> of the <tt>MediaStream</tt> (e.g. Chrome) and the return\\n * value was only used by {@link RTCUIHelper#getVideoId} which itself did not\\n * appear to be used anywhere. Generally, the implementation will try to follow\\n * the related standards i.e. work with the <tt>srcObject</tt> and <tt>src</tt>\\n * properties of the specified <tt>element</tt> taking into account vender\\n * prefixes.\\n *\\n * @param element the element whose video source/src is to be set to the\\n * specified <tt>stream</tt>\\n * @param {MediaStream} stream the <tt>MediaStream</tt> to set as the video\\n * source/src of <tt>element</tt>\\n */\\nfunction defaultSetVideoSrc(element, stream) {\\n    // srcObject\\n    let srcObjectPropertyName = 'srcObject';\\n\\n    if (!(srcObjectPropertyName in element)) {\\n        srcObjectPropertyName = 'mozSrcObject';\\n        if (!(srcObjectPropertyName in element)) {\\n            srcObjectPropertyName = null;\\n        }\\n    }\\n    if (srcObjectPropertyName) {\\n        element[srcObjectPropertyName] = stream;\\n\\n        return;\\n    }\\n\\n    // src\\n    let src;\\n\\n    if (stream) {\\n        src = stream.jitsiObjectURL;\\n\\n        // Save the created URL for stream so we can reuse it and not keep\\n        // creating URLs.\\n        if (!src) {\\n            stream.jitsiObjectURL = src = URL.createObjectURL(stream);\\n        }\\n    }\\n    element.src = src || '';\\n}\\n\\n/**\\n *\\n */\\nclass RTCUtils extends Listenable {\\n    /**\\n     *\\n     */\\n    constructor() {\\n        super(eventEmitter);\\n    }\\n\\n    /**\\n     * Depending on the browser, sets difference instance methods for\\n     * interacting with user media and adds methods to native WebRTC-related\\n     * objects. Also creates an instance variable for peer connection\\n     * constraints.\\n     *\\n     * @param {Object} options\\n     * @returns {void}\\n     */\\n    init(options = {}) {\\n        if (typeof options.disableAEC === 'boolean') {\\n            disableAEC = options.disableAEC;\\n            logger.info(`Disable AEC: ${disableAEC}`);\\n        }\\n        if (typeof options.disableNS === 'boolean') {\\n            disableNS = options.disableNS;\\n            logger.info(`Disable NS: ${disableNS}`);\\n        }\\n        if (typeof options.disableAP === 'boolean') {\\n            disableAP = options.disableAP;\\n            logger.info(`Disable AP: ${disableAP}`);\\n        }\\n        if (typeof options.disableAGC === 'boolean') {\\n            disableAGC = options.disableAGC;\\n            logger.info(`Disable AGC: ${disableAGC}`);\\n        }\\n        if (typeof options.disableHPF === 'boolean') {\\n            disableHPF = options.disableHPF;\\n            logger.info(`Disable HPF: ${disableHPF}`);\\n        }\\n\\n        availableDevices = undefined;\\n        window.clearInterval(availableDevicesPollTimer);\\n        availableDevicesPollTimer = undefined;\\n\\n        this.enumerateDevices = initEnumerateDevicesWithCallback();\\n\\n        if (browser.usesNewGumFlow()) {\\n            this.RTCPeerConnectionType = RTCPeerConnection;\\n\\n            this.attachMediaStream\\n                = wrapAttachMediaStream((element, stream) => {\\n                    if (element) {\\n                        element.srcObject = stream;\\n                    }\\n                });\\n\\n            this.getStreamID = ({ id }) => id;\\n            this.getTrackID = ({ id }) => id;\\n        } else if (browser.isChromiumBased() // this is chrome < 61\\n                || browser.isReactNative()) {\\n\\n            this.RTCPeerConnectionType = RTCPeerConnection;\\n\\n            this.attachMediaStream\\n                = wrapAttachMediaStream((element, stream) => {\\n                    defaultSetVideoSrc(element, stream);\\n\\n                    return element;\\n                });\\n\\n            this.getStreamID = function({ id }) {\\n                // A. MediaStreams from FF endpoints have the characters '{' and\\n                // '}' that make jQuery choke.\\n                // B. The react-native-webrtc implementation that we use at the\\n                // time of this writing returns a number for the id of\\n                // MediaStream. Let's just say that a number contains no special\\n                // characters.\\n                return (\\n                    typeof id === 'number'\\n                        ? id\\n                        : SDPUtil.filterSpecialChars(id));\\n            };\\n            this.getTrackID = ({ id }) => id;\\n\\n            if (!MediaStream.prototype.getVideoTracks) {\\n                MediaStream.prototype.getVideoTracks = function() {\\n                    return this.videoTracks;\\n                };\\n            }\\n            if (!MediaStream.prototype.getAudioTracks) {\\n                MediaStream.prototype.getAudioTracks = function() {\\n                    return this.audioTracks;\\n                };\\n            }\\n        } else if (browser.isEdge()) {\\n            this.RTCPeerConnectionType = ortcRTCPeerConnection;\\n\\n            this.attachMediaStream\\n                = wrapAttachMediaStream((element, stream) => {\\n                    defaultSetVideoSrc(element, stream);\\n                });\\n\\n            // ORTC does not generate remote MediaStreams so those are\\n            // manually created by the ORTC shim. This means that their\\n            // id (internally generated) does not match the stream id\\n            // signaled into the remote SDP. Therefore, the shim adds a\\n            // custom jitsiRemoteId property with the original stream id.\\n            this.getStreamID = function(stream) {\\n                const id = stream.jitsiRemoteId || stream.id;\\n\\n                return SDPUtil.filterSpecialChars(id);\\n            };\\n\\n            // Remote MediaStreamTracks generated by ORTC (within a\\n            // RTCRtpReceiver) have an internally/random id which does not match\\n            // the track id signaled in the remote SDP. The shim adds a custom\\n            // jitsi-id property with the original track id.\\n            this.getTrackID = track => track.jitsiRemoteId || track.id;\\n        } else {\\n            const message = 'Endpoint does not appear to be WebRTC-capable';\\n\\n            logger.error(message);\\n            throw new Error(message);\\n        }\\n\\n        this._initPCConstraints(options);\\n\\n        screenObtainer.init(\\n            options,\\n            this.getUserMediaWithConstraints.bind(this));\\n\\n        if (this.isDeviceListAvailable()) {\\n            this.enumerateDevices(ds => {\\n                availableDevices = ds.splice(0);\\n\\n                logger.debug('Available devices: ', availableDevices);\\n                sendDeviceListToAnalytics(availableDevices);\\n\\n                eventEmitter.emit(\\n                    RTCEvents.DEVICE_LIST_AVAILABLE,\\n                    availableDevices);\\n\\n\\n                // Use a shared callback to handle both the devicechange event\\n                // and the polling implementations. This prevents duplication\\n                // and works around a chrome bug (verified to occur on 68) where\\n                // devicechange fires twice in a row, which can cause async post\\n                // devicechange processing to collide.\\n                const updateKnownDevices = () => this.enumerateDevices(pds => {\\n                    if (compareAvailableMediaDevices(pds)) {\\n                        onMediaDevicesListChanged(pds);\\n                    }\\n                });\\n\\n                if (browser.supportsDeviceChangeEvent()) {\\n                    navigator.mediaDevices.addEventListener(\\n                        'devicechange',\\n                        updateKnownDevices);\\n                } else {\\n                    // Periodically poll enumerateDevices() method to check if\\n                    // list of media devices has changed.\\n                    availableDevicesPollTimer = window.setInterval(\\n                        updateKnownDevices,\\n                        AVAILABLE_DEVICES_POLL_INTERVAL_TIME);\\n                }\\n            });\\n        }\\n    }\\n\\n    /**\\n     * Creates instance objects for peer connection constraints both for p2p\\n     * and outside of p2p.\\n     *\\n     * @params {Object} options - Configuration for setting RTCUtil's instance\\n     * objects for peer connection constraints.\\n     * @params {boolean} options.useIPv6 - Set to true if IPv6 should be used.\\n     * @params {boolean} options.disableSuspendVideo - Whether or not video\\n     * should become suspended if bandwidth estimation becomes low.\\n     * @params {Object} options.testing - Additional configuration for work in\\n     * development.\\n     * @params {Object} options.testing.forceP2PSuspendVideoRatio - True if\\n     * video should become suspended if bandwidth estimation becomes low while\\n     * in peer to peer connection mode.\\n     */\\n    _initPCConstraints(options) {\\n        if (browser.isFirefox()) {\\n            this.pcConstraints = {};\\n        } else if (browser.isChromiumBased() || browser.isReactNative()) {\\n            this.pcConstraints = { optional: [\\n                { googHighStartBitrate: 0 },\\n                { googPayloadPadding: true },\\n                { googScreencastMinBitrate: 400 },\\n                { googCpuOveruseDetection: true },\\n                { googCpuOveruseEncodeUsage: true },\\n                { googCpuUnderuseThreshold: 55 },\\n                { googCpuOveruseThreshold: 85 }\\n            ] };\\n\\n            if (options.useIPv6) {\\n                // https://code.google.com/p/webrtc/issues/detail?id=2828\\n                this.pcConstraints.optional.push({ googIPv6: true });\\n            }\\n\\n            this.p2pPcConstraints\\n                = JSON.parse(JSON.stringify(this.pcConstraints));\\n\\n            // Allows sending of video to be suspended if the bandwidth\\n            // estimation is too low.\\n            if (!options.disableSuspendVideo) {\\n                this.pcConstraints.optional.push(\\n                    { googSuspendBelowMinBitrate: true });\\n            }\\n\\n            // There's no reason not to use this for p2p\\n            this.p2pPcConstraints.optional.push({\\n                googSuspendBelowMinBitrate: true\\n            });\\n        }\\n\\n        this.p2pPcConstraints = this.p2pPcConstraints || this.pcConstraints;\\n    }\\n\\n    /* eslint-disable max-params */\\n\\n    /**\\n    * @param {string[]} um required user media types\\n    * @param {Object} [options] optional parameters\\n    * @param {string} options.resolution\\n    * @param {number} options.bandwidth\\n    * @param {number} options.fps\\n    * @param {string} options.desktopStream\\n    * @param {string} options.cameraDeviceId\\n    * @param {string} options.micDeviceId\\n    * @param {Object} options.frameRate - used only for dekstop sharing.\\n    * @param {Object} options.frameRate.min - Minimum fps\\n    * @param {Object} options.frameRate.max - Maximum fps\\n    * @returns {Promise} Returns a media stream on success or a JitsiTrackError\\n    * on failure.\\n    **/\\n    getUserMediaWithConstraints(um, options = {}) {\\n        const constraints = getConstraints(um, options);\\n\\n        logger.info('Get media constraints', constraints);\\n\\n        return new Promise((resolve, reject) => {\\n            navigator.mediaDevices.getUserMedia(constraints)\\n                .then(stream => {\\n                    logger.log('onUserMediaSuccess');\\n                    updateGrantedPermissions(um, stream);\\n                    resolve(stream);\\n                })\\n                .catch(error => {\\n                    logger.warn('Failed to get access to local media. '\\n                        + ` ${error} ${constraints} `);\\n                    updateGrantedPermissions(um, undefined);\\n                    reject(new JitsiTrackError(error, constraints, um));\\n                });\\n        });\\n    }\\n\\n    /**\\n     * Acquires a media stream via getUserMedia that\\n     * matches the given constraints\\n     *\\n     * @param {array} umDevices which devices to acquire (e.g. audio, video)\\n     * @param {Object} constraints - Stream specifications to use.\\n     * @returns {Promise}\\n     */\\n    _newGetUserMediaWithConstraints(umDevices, constraints = {}) {\\n        return new Promise((resolve, reject) => {\\n            navigator.mediaDevices.getUserMedia(constraints)\\n                .then(stream => {\\n                    logger.log('onUserMediaSuccess');\\n                    updateGrantedPermissions(umDevices, stream);\\n                    resolve(stream);\\n                })\\n                .catch(error => {\\n                    logger.warn('Failed to get access to local media. '\\n                        + ` ${error} ${constraints} `);\\n                    updateGrantedPermissions(umDevices, undefined);\\n                    reject(new JitsiTrackError(error, constraints, umDevices));\\n                });\\n        });\\n    }\\n\\n    /**\\n     * Acquire a display stream via the screenObtainer. This requires extra\\n     * logic compared to use screenObtainer versus normal device capture logic\\n     * in RTCUtils#_newGetUserMediaWithConstraints.\\n     *\\n     * @param {Object} options\\n     * @param {Object} options.desktopSharingExtensionExternalInstallation\\n     * @param {string[]} options.desktopSharingSources\\n     * @param {Object} options.desktopSharingFrameRate\\n     * @param {Object} options.desktopSharingFrameRate.min - Minimum fps\\n     * @param {Object} options.desktopSharingFrameRate.max - Maximum fps\\n     * @returns {Promise} A promise which will be resolved with an object which\\n     * contains the acquired display stream. If desktop sharing is not supported\\n     * then a rejected promise will be returned.\\n     */\\n    _newGetDesktopMedia(options) {\\n        if (!screenObtainer.isSupported() || !browser.supportsVideo()) {\\n            return Promise.reject(\\n                new Error('Desktop sharing is not supported!'));\\n        }\\n\\n        return new Promise((resolve, reject) => {\\n            screenObtainer.obtainStream(\\n                this._parseDesktopSharingOptions(options),\\n                stream => {\\n                    resolve(stream);\\n                },\\n                error => {\\n                    reject(error);\\n                });\\n        });\\n    }\\n\\n    /* eslint-enable max-params */\\n\\n    /**\\n     * Creates the local MediaStreams.\\n     * @param {Object} [options] optional parameters\\n     * @param {Array} options.devices the devices that will be requested\\n     * @param {string} options.resolution resolution constraints\\n     * @param {string} options.cameraDeviceId\\n     * @param {string} options.micDeviceId\\n     * @param {Object} options.desktopSharingFrameRate\\n     * @param {Object} options.desktopSharingFrameRate.min - Minimum fps\\n     * @param {Object} options.desktopSharingFrameRate.max - Maximum fps\\n     * @returns {*} Promise object that will receive the new JitsiTracks\\n     */\\n    obtainAudioAndVideoPermissions(options = {}) {\\n        options.devices = options.devices || [ ...OLD_GUM_DEFAULT_DEVICES ];\\n        options.resolution = options.resolution || OLD_GUM_DEFAULT_RESOLUTION;\\n\\n        const requestingDesktop = options.devices.includes('desktop');\\n\\n        if (requestingDesktop && !screenObtainer.isSupported()) {\\n            return Promise.reject(\\n                new Error('Desktop sharing is not supported!'));\\n        }\\n\\n        let gumPromise;\\n\\n        if (browser.supportsMediaStreamConstructor()) {\\n            gumPromise = this._getAudioAndVideoStreams(options);\\n        } else {\\n            // If the MediaStream constructor is not supported, then get tracks\\n            // in separate GUM calls in order to keep different tracks separate.\\n            gumPromise = this._getAudioAndVideoStreamsSeparately(options);\\n        }\\n\\n        return gumPromise.then(streams =>\\n            handleLocalStream(streams, options.resolution));\\n    }\\n\\n    /**\\n     * Performs one call to getUserMedia for audio and/or video and another call\\n     * for desktop.\\n     *\\n     * @param {Object} options - An object describing how the gUM request should\\n     * be executed. See {@link obtainAudioAndVideoPermissions} for full options.\\n     * @returns {*} Promise object that will receive the new JitsiTracks on\\n     * success or a JitsiTrackError on failure.\\n     */\\n    _getAudioAndVideoStreams(options) {\\n        const requestingDesktop = options.devices.includes('desktop');\\n\\n        options.devices = options.devices.filter(device =>\\n            device !== 'desktop');\\n\\n        const gumPromise = options.devices.length\\n            ? this.getUserMediaWithConstraints(options.devices, options)\\n            : Promise.resolve(null);\\n\\n        return gumPromise\\n            .then(avStream => {\\n                // If any requested devices are missing, call gum again in\\n                // an attempt to obtain the actual error. For example, the\\n                // requested video device is missing or permission was\\n                // denied.\\n                const missingTracks\\n                    = this._getMissingTracks(options.devices, avStream);\\n\\n                if (missingTracks.length) {\\n                    this.stopMediaStream(avStream);\\n\\n                    return this.getUserMediaWithConstraints(\\n                        missingTracks, options)\\n\\n                        // GUM has already failed earlier and this success\\n                        // handling should not be reached.\\n                        .then(() => Promise.reject(new JitsiTrackError(\\n                            { name: 'UnknownError' },\\n                            getConstraints(options.devices, options),\\n                            missingTracks)));\\n                }\\n\\n                return avStream;\\n            })\\n            .then(audioVideo => {\\n                if (!requestingDesktop) {\\n                    return { audioVideo };\\n                }\\n\\n                if (options.desktopSharingSourceDevice) {\\n                    this.stopMediaStream(audioVideo);\\n\\n                    throw new Error('Using a camera as screenshare source is'\\n                        + 'not supported on this browser.');\\n                }\\n\\n                return new Promise((resolve, reject) => {\\n                    screenObtainer.obtainStream(\\n                        this._parseDesktopSharingOptions(options),\\n                        desktop => resolve({\\n                            audioVideo,\\n                            desktop\\n                        }),\\n                        error => {\\n                            if (audioVideo) {\\n                                this.stopMediaStream(audioVideo);\\n                            }\\n                            reject(error);\\n                        });\\n                });\\n            });\\n    }\\n\\n    /**\\n     * Private utility for determining if the passed in MediaStream contains\\n     * tracks of the type(s) specified in the requested devices.\\n     *\\n     * @param {string[]} requestedDevices - The track types that are expected to\\n     * be includes in the stream.\\n     * @param {MediaStream} stream - The MediaStream to check if it has the\\n     * expected track types.\\n     * @returns {string[]} An array of string with the missing track types. The\\n     * array will be empty if all requestedDevices are found in the stream.\\n     */\\n    _getMissingTracks(requestedDevices = [], stream) {\\n        const missingDevices = [];\\n\\n        const audioDeviceRequested = requestedDevices.includes('audio');\\n        const audioTracksReceived\\n            = stream && stream.getAudioTracks().length > 0;\\n\\n        if (audioDeviceRequested && !audioTracksReceived) {\\n            missingDevices.push('audio');\\n        }\\n\\n        const videoDeviceRequested = requestedDevices.includes('video');\\n        const videoTracksReceived\\n            = stream && stream.getVideoTracks().length > 0;\\n\\n        if (videoDeviceRequested && !videoTracksReceived) {\\n            missingDevices.push('video');\\n        }\\n\\n        return missingDevices;\\n    }\\n\\n    /**\\n     * Performs separate getUserMedia calls for audio and video instead of in\\n     * one call. Will also request desktop if specified.\\n     *\\n     * @param {Object} options - An object describing how the gUM request should\\n     * be executed. See {@link obtainAudioAndVideoPermissions} for full options.\\n     * @returns {*} Promise object that will receive the new JitsiTracks on\\n     * success or a JitsiTrackError on failure.\\n     */\\n    _getAudioAndVideoStreamsSeparately(options) {\\n        return new Promise((resolve, reject) => {\\n            const deviceGUM = {\\n                audio: (...args) =>\\n                    this.getUserMediaWithConstraints([ 'audio' ], ...args),\\n                video: (...args) =>\\n                    this.getUserMediaWithConstraints([ 'video' ], ...args),\\n                desktop: (...args) =>\\n                    screenObtainer.obtainStream(\\n                        this._parseDesktopSharingOptions(options), ...args)\\n            };\\n\\n            obtainDevices({\\n                options,\\n                streams: {},\\n                successCallback: resolve,\\n                errorCallback: reject,\\n                deviceGUM\\n            });\\n        });\\n    }\\n\\n    /**\\n     * Returns an object formatted for specifying desktop sharing parameters.\\n     *\\n     * @param {Object} options - Takes in the same options object as\\n     * {@link obtainAudioAndVideoPermissions}.\\n     * @returns {Object}\\n     */\\n    _parseDesktopSharingOptions(options) {\\n        return {\\n            ...options.desktopSharingExtensionExternalInstallation,\\n            desktopSharingSources: options.desktopSharingSources,\\n            gumOptions: {\\n                frameRate: options.desktopSharingFrameRate\\n            },\\n            trackOptions: getTrackSSConstraints(options)\\n        };\\n    }\\n\\n    /**\\n     * Gets streams from specified device types. This function intentionally\\n     * ignores errors for upstream to catch and handle instead.\\n     *\\n     * @param {Object} options - A hash describing what devices to get and\\n     * relevant constraints.\\n     * @param {string[]} options.devices - The types of media to capture. Valid\\n     * values are \\\"desktop\\\", \\\"audio\\\", and \\\"video\\\".\\n     * @param {Object} options.desktopSharingFrameRate\\n     * @param {Object} options.desktopSharingFrameRate.min - Minimum fps\\n     * @param {Object} options.desktopSharingFrameRate.max - Maximum fps\\n     * @param {String} options.desktopSharingSourceDevice - The device id or\\n     * label for a video input source that should be used for screensharing.\\n     * @returns {Promise} The promise, when successful, will return an array of\\n     * meta data for the requested device type, which includes the stream and\\n     * track. If an error occurs, it will be deferred to the caller for\\n     * handling.\\n     */\\n    newObtainAudioAndVideoPermissions(options) {\\n        logger.info('Using the new gUM flow');\\n\\n        const mediaStreamsMetaData = [];\\n\\n        // Declare private functions to be used in the promise chain below.\\n        // These functions are declared in the scope of this function because\\n        // they are not being used anywhere else, so only this function needs to\\n        // know about them.\\n\\n        /**\\n         * Executes a request for desktop media if specified in options.\\n         *\\n         * @returns {Promise}\\n         */\\n        const maybeRequestDesktopDevice = function() {\\n            const umDevices = options.devices || [];\\n            const isDesktopDeviceRequested\\n                = umDevices.indexOf('desktop') !== -1;\\n\\n            if (!isDesktopDeviceRequested) {\\n                return Promise.resolve();\\n            }\\n\\n            const {\\n                desktopSharingExtensionExternalInstallation,\\n                desktopSharingSourceDevice,\\n                desktopSharingSources,\\n                desktopSharingFrameRate\\n            } = options;\\n\\n            // Attempt to use a video input device as a screenshare source if\\n            // the option is defined.\\n            if (desktopSharingSourceDevice) {\\n                const matchingDevice\\n                    = availableDevices && availableDevices.find(device =>\\n                        device.kind === 'videoinput'\\n                            && (device.deviceId === desktopSharingSourceDevice\\n                            || device.label === desktopSharingSourceDevice));\\n                const requestedDevices = [ 'video' ];\\n\\n                // Leverage the helper used by {@link _newGetDesktopMedia} to\\n                // get constraints for the desktop stream.\\n                const { gumOptions, trackOptions }\\n                    = this._parseDesktopSharingOptions(options);\\n\\n                // Create a custom constraints object to use exact device\\n                // matching to make sure there is no fallthrough to another\\n                // camera device. If a matching device could not be found, try\\n                // anyways and let the caller handle errors.\\n                const constraints = {\\n                    video: {\\n                        ...gumOptions,\\n                        deviceId: {\\n                            exact: (matchingDevice && matchingDevice.deviceId)\\n                                || desktopSharingSourceDevice\\n                        }\\n                    }\\n                };\\n\\n                return this._newGetUserMediaWithConstraints(\\n                    requestedDevices, constraints)\\n                    .then(stream => {\\n                        const track = stream && stream.getTracks()[0];\\n                        const applyConstrainsPromise\\n                            = track && track.applyConstraints\\n                                ? track.applyConstraints(trackOptions)\\n                                : Promise.resolve();\\n\\n                        return applyConstrainsPromise\\n                            .then(() => {\\n                                return {\\n                                    sourceType: 'device',\\n                                    stream\\n                                };\\n                            });\\n                    });\\n            }\\n\\n            return this._newGetDesktopMedia({\\n                desktopSharingExtensionExternalInstallation,\\n                desktopSharingSources,\\n                desktopSharingFrameRate\\n            });\\n        }.bind(this);\\n\\n        /**\\n         * Creates a meta data object about the passed in desktopStream and\\n         * pushes the meta data to the internal array mediaStreamsMetaData to be\\n         * returned later.\\n         *\\n         * @param {MediaStreamTrack} desktopStream - A track for a desktop\\n         * capture.\\n         * @returns {void}\\n         */\\n        const maybeCreateAndAddDesktopTrack = function(desktopStream) {\\n            if (!desktopStream) {\\n                return;\\n            }\\n\\n            const { stream, sourceId, sourceType } = desktopStream;\\n\\n            mediaStreamsMetaData.push({\\n                stream,\\n                sourceId,\\n                sourceType,\\n                track: stream.getVideoTracks()[0],\\n                videoType: VideoType.DESKTOP\\n            });\\n        };\\n\\n        /**\\n         * Executes a request for audio and/or video, as specified in options.\\n         * By default both audio and video will be captured if options.devices\\n         * is not defined.\\n         *\\n         * @returns {Promise}\\n         */\\n        const maybeRequestCaptureDevices = function() {\\n            const umDevices = options.devices || [ 'audio', 'video' ];\\n            const requestedCaptureDevices = umDevices.filter(device =>\\n                device === 'audio'\\n                || (device === 'video' && browser.supportsVideo()));\\n\\n            if (!requestedCaptureDevices.length) {\\n                return Promise.resolve();\\n            }\\n\\n            const constraints = newGetConstraints(\\n                requestedCaptureDevices, options);\\n\\n            logger.info('Got media constraints: ', constraints);\\n\\n            return this._newGetUserMediaWithConstraints(\\n                requestedCaptureDevices, constraints);\\n        }.bind(this);\\n\\n        /**\\n         * Splits the passed in media stream into separate audio and video\\n         * streams and creates meta data objects for each and pushes them to the\\n         * internal array mediaStreamsMetaData to be returned later.\\n         *\\n         * @param {MediaStreamTrack} avStream - A track for with audio and/or\\n         * video track.\\n         * @returns {void}\\n         */\\n        const maybeCreateAndAddAVTracks = function(avStream) {\\n            if (!avStream) {\\n                return;\\n            }\\n\\n            const audioTracks = avStream.getAudioTracks();\\n\\n            if (audioTracks.length) {\\n                const audioStream = new MediaStream(audioTracks);\\n\\n                mediaStreamsMetaData.push({\\n                    stream: audioStream,\\n                    track: audioStream.getAudioTracks()[0]\\n                });\\n            }\\n\\n            const videoTracks = avStream.getVideoTracks();\\n\\n            if (videoTracks.length) {\\n                const videoStream = new MediaStream(videoTracks);\\n\\n                mediaStreamsMetaData.push({\\n                    stream: videoStream,\\n                    track: videoStream.getVideoTracks()[0],\\n                    videoType: VideoType.CAMERA\\n                });\\n            }\\n        };\\n\\n        return maybeRequestDesktopDevice()\\n            .then(maybeCreateAndAddDesktopTrack)\\n            .then(maybeRequestCaptureDevices)\\n            .then(maybeCreateAndAddAVTracks)\\n            .then(() => mediaStreamsMetaData)\\n            .catch(error => {\\n                mediaStreamsMetaData.forEach(({ stream }) => {\\n                    this.stopMediaStream(stream);\\n                });\\n\\n                return Promise.reject(error);\\n            });\\n    }\\n\\n    /**\\n     * Checks whether it is possible to enumerate available cameras/microphones.\\n     *\\n     * @returns {boolean} {@code true} if the device listing is available;\\n     * {@code false}, otherwise.\\n     */\\n    isDeviceListAvailable() {\\n        return Boolean(\\n            navigator.mediaDevices\\n                && navigator.mediaDevices.enumerateDevices);\\n    }\\n\\n    /**\\n     * Returns true if changing the input (camera / microphone) or output\\n     * (audio) device is supported and false if not.\\n     * @params {string} [deviceType] - type of device to change. Default is\\n     *      undefined or 'input', 'output' - for audio output device change.\\n     * @returns {boolean} true if available, false otherwise.\\n     */\\n    isDeviceChangeAvailable(deviceType) {\\n        return deviceType === 'output' || deviceType === 'audiooutput'\\n            ? isAudioOutputDeviceChangeAvailable\\n            : browser.isChromiumBased()\\n                || browser.isFirefox() || browser.isEdge();\\n    }\\n\\n    /**\\n     * A method to handle stopping of the stream.\\n     * One point to handle the differences in various implementations.\\n     * @param mediaStream MediaStream object to stop.\\n     */\\n    stopMediaStream(mediaStream) {\\n        mediaStream.getTracks().forEach(track => {\\n            if (track.stop) {\\n                track.stop();\\n            }\\n        });\\n\\n        // leave stop for implementation still using it\\n        if (mediaStream.stop) {\\n            mediaStream.stop();\\n        }\\n\\n        // The MediaStream implementation of the react-native-webrtc project has\\n        // an explicit release method that is to be invoked in order to release\\n        // used resources such as memory.\\n        if (mediaStream.release) {\\n            mediaStream.release();\\n        }\\n\\n        // if we have done createObjectURL, lets clean it\\n        const url = mediaStream.jitsiObjectURL;\\n\\n        if (url) {\\n            delete mediaStream.jitsiObjectURL;\\n            URL.revokeObjectURL(url);\\n        }\\n    }\\n\\n    /**\\n     * Returns whether the desktop sharing is enabled or not.\\n     * @returns {boolean}\\n     */\\n    isDesktopSharingEnabled() {\\n        return screenObtainer.isSupported();\\n    }\\n\\n    /**\\n     * Sets current audio output device.\\n     * @param {string} deviceId - id of 'audiooutput' device from\\n     *      navigator.mediaDevices.enumerateDevices(), 'default' for default\\n     *      device\\n     * @returns {Promise} - resolves when audio output is changed, is rejected\\n     *      otherwise\\n     */\\n    setAudioOutputDevice(deviceId) {\\n        if (!this.isDeviceChangeAvailable('output')) {\\n            return Promise.reject(\\n                new Error('Audio output device change is not supported'));\\n        }\\n\\n        return featureDetectionAudioEl.setSinkId(deviceId)\\n            .then(() => {\\n                audioOutputDeviceId = deviceId;\\n                audioOutputChanged = true;\\n\\n                logger.log(`Audio output device set to ${deviceId}`);\\n\\n                eventEmitter.emit(RTCEvents.AUDIO_OUTPUT_DEVICE_CHANGED,\\n                    deviceId);\\n            });\\n    }\\n\\n    /**\\n     * Returns currently used audio output device id, '' stands for default\\n     * device\\n     * @returns {string}\\n     */\\n    getAudioOutputDevice() {\\n        return audioOutputDeviceId;\\n    }\\n\\n    /**\\n     * Returns list of available media devices if its obtained, otherwise an\\n     * empty array is returned/\\n     * @returns {Array} list of available media devices.\\n     */\\n    getCurrentlyAvailableMediaDevices() {\\n        return availableDevices;\\n    }\\n\\n    /**\\n     * Returns event data for device to be reported to stats.\\n     * @returns {MediaDeviceInfo} device.\\n     */\\n    getEventDataForActiveDevice(device) {\\n        const deviceList = [];\\n        const deviceData = {\\n            'deviceId': device.deviceId,\\n            'kind': device.kind,\\n            'label': device.label,\\n            'groupId': device.groupId\\n        };\\n\\n        deviceList.push(deviceData);\\n\\n        return { deviceList };\\n    }\\n\\n    /**\\n     * Configures the given PeerConnection constraints to either enable or\\n     * disable (according to the value of the 'enable' parameter) the\\n     * 'googSuspendBelowMinBitrate' option.\\n     * @param constraints the constraints on which to operate.\\n     * @param enable {boolean} whether to enable or disable the suspend video\\n     * option.\\n     */\\n    setSuspendVideo(constraints, enable) {\\n        if (!constraints.optional) {\\n            constraints.optional = [];\\n        }\\n\\n        // Get rid of all \\\"googSuspendBelowMinBitrate\\\" constraints (we assume\\n        // that the elements of constraints.optional contain a single property).\\n        constraints.optional\\n            = constraints.optional.filter(\\n                c => !c.hasOwnProperty('googSuspendBelowMinBitrate'));\\n\\n        if (enable) {\\n            constraints.optional.push({ googSuspendBelowMinBitrate: 'true' });\\n        }\\n    }\\n}\\n\\nconst rtcUtils = new RTCUtils();\\n\\n/**\\n *\\n * @param context Execution context, containing options and callbacks\\n */\\nfunction obtainDevices(context) {\\n    if (!context.options.devices || context.options.devices.length === 0) {\\n        return context.successCallback(context.streams || {});\\n    }\\n\\n    const device = context.options.devices.splice(0, 1);\\n\\n    context.deviceGUM[device](context.options)\\n        .then(stream => {\\n            context.streams = context.streams || {};\\n            context.streams[device] = stream;\\n            obtainDevices(context);\\n        }, error => {\\n            Object.keys(context.streams).forEach(\\n                d => rtcUtils.stopMediaStream(context.streams[d]));\\n            logger.error(\\n                `failed to obtain ${device} stream - stop`, error);\\n\\n            context.errorCallback(error);\\n        });\\n}\\n\\n/**\\n * Wraps original attachMediaStream function to set current audio output device\\n * if this is supported.\\n * @param {Function} origAttachMediaStream\\n * @returns {Function}\\n */\\nfunction wrapAttachMediaStream(origAttachMediaStream) {\\n    return function(element, stream) {\\n        // eslint-disable-next-line prefer-rest-params\\n        const res = origAttachMediaStream.apply(rtcUtils, arguments);\\n\\n        if (stream\\n                && rtcUtils.isDeviceChangeAvailable('output')\\n                && stream.getAudioTracks\\n                && stream.getAudioTracks().length\\n\\n                // we skip setting audio output if there was no explicit change\\n                && audioOutputChanged) {\\n            element.setSinkId(rtcUtils.getAudioOutputDevice())\\n                .catch(function(ex) {\\n                    const err\\n                        = new JitsiTrackError(ex, null, [ 'audiooutput' ]);\\n\\n                    GlobalOnErrorHandler.callUnhandledRejectionHandler({\\n                        promise: this, // eslint-disable-line no-invalid-this\\n                        reason: err\\n                    });\\n\\n                    logger.warn(\\n                        'Failed to set audio output device for the element.'\\n                            + ' Default audio output device will be used'\\n                            + ' instead',\\n                        element,\\n                        err);\\n                });\\n        }\\n\\n        return res;\\n    };\\n}\\n\\nexport default rtcUtils;\\n\",\"/**\\n * The errors for the JitsiTrack objects.\\n */\\n\\n/**\\n * Generic error for jidesha extension for Chrome.\\n */\\nexport const CHROME_EXTENSION_GENERIC_ERROR\\n    = 'gum.chrome_extension_generic_error';\\n\\n/**\\n * An error which indicates that the jidesha extension for Chrome is\\n * failed to install.\\n */\\nexport const CHROME_EXTENSION_INSTALLATION_ERROR\\n    = 'gum.chrome_extension_installation_error';\\n\\n/**\\n * This error indicates that the attempt to start screensharing was initiated by\\n * a script which did not originate in user gesture handler. It means that\\n * you should to trigger the action again in response to a button click for\\n * example.\\n * @type {string}\\n */\\nexport const CHROME_EXTENSION_USER_GESTURE_REQUIRED\\n    = 'gum.chrome_extension_user_gesture_required';\\n\\n/**\\n * An error which indicates that user canceled screen sharing window\\n * selection dialog in jidesha extension for Chrome.\\n */\\nexport const CHROME_EXTENSION_USER_CANCELED\\n    = 'gum.chrome_extension_user_canceled';\\n\\n/**\\n * An error which indicates that some of requested constraints in\\n * getUserMedia call were not satisfied.\\n */\\nexport const CONSTRAINT_FAILED = 'gum.constraint_failed';\\n\\n/**\\n * A generic error which indicates an error occurred while selecting\\n * a DesktopCapturerSource from the electron app.\\n */\\nexport const ELECTRON_DESKTOP_PICKER_ERROR\\n    = 'gum.electron_desktop_picker_error';\\n\\n/**\\n * An error which indicates a custom desktop picker could not be detected\\n * for the electron app.\\n */\\nexport const ELECTRON_DESKTOP_PICKER_NOT_FOUND\\n    = 'gum.electron_desktop_picker_not_found';\\n\\n/**\\n * An error which indicates that the jidesha extension for Firefox is\\n * needed to proceed with screen sharing, and that it is not installed.\\n */\\nexport const FIREFOX_EXTENSION_NEEDED = 'gum.firefox_extension_needed';\\n\\n/**\\n * Generic getUserMedia error.\\n */\\nexport const GENERAL = 'gum.general';\\n\\n/**\\n * An error which indicates that requested device was not found.\\n */\\nexport const NOT_FOUND = 'gum.not_found';\\n\\n/**\\n * An error which indicates that user denied permission to share requested\\n * device.\\n */\\nexport const PERMISSION_DENIED = 'gum.permission_denied';\\n\\n/**\\n * An error which indicates that track has been already disposed and cannot\\n * be longer used.\\n */\\nexport const TRACK_IS_DISPOSED = 'track.track_is_disposed';\\n\\n/**\\n * An error which indicates that track has no MediaStream associated.\\n */\\nexport const TRACK_NO_STREAM_FOUND = 'track.no_stream_found';\\n\\n/**\\n * An error which indicates that requested video resolution is not supported\\n * by a webcam.\\n */\\nexport const UNSUPPORTED_RESOLUTION = 'gum.unsupported_resolution';\\n\\n/**\\n * Indicates that the track is no receiving any data without reason(the\\n * stream was stopped, etc)\\n */\\nexport const NO_DATA_FROM_SOURCE = 'track.no_data_from_source';\\n\",\"/* global __filename */\\n\\nimport { getLogger } from 'jitsi-meet-logger';\\n\\nimport BridgeChannel from './BridgeChannel';\\nimport GlobalOnErrorHandler from '../util/GlobalOnErrorHandler';\\nimport * as JitsiConferenceEvents from '../../JitsiConferenceEvents';\\nimport JitsiLocalTrack from './JitsiLocalTrack';\\nimport JitsiTrackError from '../../JitsiTrackError';\\nimport * as JitsiTrackErrors from '../../JitsiTrackErrors';\\nimport Listenable from '../util/Listenable';\\nimport { safeCounterIncrement } from '../util/MathUtil';\\nimport * as MediaType from '../../service/RTC/MediaType';\\nimport browser from '../browser';\\nimport RTCEvents from '../../service/RTC/RTCEvents';\\nimport RTCUtils from './RTCUtils';\\nimport Statistics from '../statistics/statistics';\\nimport TraceablePeerConnection from './TraceablePeerConnection';\\nimport VideoType from '../../service/RTC/VideoType';\\n\\nconst logger = getLogger(__filename);\\n\\n/**\\n * The counter used to generated id numbers assigned to peer connections\\n * @type {number}\\n */\\nlet peerConnectionIdCounter = 0;\\n\\n/**\\n * The counter used to generate id number for the local\\n * <code>MediaStreamTrack</code>s.\\n * @type {number}\\n */\\nlet rtcTrackIdCounter = 0;\\n\\n/**\\n *\\n * @param tracksInfo\\n * @param options\\n */\\nfunction createLocalTracks(tracksInfo, options) {\\n    const newTracks = [];\\n    let deviceId = null;\\n\\n    tracksInfo.forEach(trackInfo => {\\n        if (trackInfo.mediaType === MediaType.AUDIO) {\\n            deviceId = options.micDeviceId;\\n        } else if (trackInfo.videoType === VideoType.CAMERA) {\\n            deviceId = options.cameraDeviceId;\\n        }\\n        rtcTrackIdCounter = safeCounterIncrement(rtcTrackIdCounter);\\n        const localTrack = new JitsiLocalTrack({\\n            ...trackInfo,\\n            deviceId,\\n            facingMode: options.facingMode,\\n            rtcId: rtcTrackIdCounter\\n        });\\n\\n        newTracks.push(localTrack);\\n    });\\n\\n    return newTracks;\\n}\\n\\n/**\\n * Creates {@code JitsiLocalTrack} instances from the passed in meta information\\n * about MedieaTracks.\\n *\\n * @param {Object[]} mediaStreamMetaData - An array of meta information with\\n * MediaTrack instances. Each can look like:\\n * {{\\n *     stream: MediaStream instance that holds a track with audio or video,\\n *     track: MediaTrack within the MediaStream,\\n *     videoType: \\\"camera\\\" or \\\"desktop\\\" or falsy,\\n *     sourceId: ID of the desktopsharing source,\\n *     sourceType: The desktopsharing source type\\n * }}\\n */\\nfunction _newCreateLocalTracks(mediaStreamMetaData = []) {\\n    return mediaStreamMetaData.map(metaData => {\\n        const {\\n            sourceId,\\n            sourceType,\\n            stream,\\n            track,\\n            videoType\\n        } = metaData;\\n\\n        const { deviceId, facingMode } = track.getSettings();\\n\\n        // FIXME Move rtcTrackIdCounter to a static method in JitsiLocalTrack\\n        // so RTC does not need to handle ID management. This move would be\\n        // safer to do once the old createLocalTracks is removed.\\n        rtcTrackIdCounter = safeCounterIncrement(rtcTrackIdCounter);\\n\\n        return new JitsiLocalTrack({\\n            deviceId,\\n            facingMode,\\n            mediaType: track.kind,\\n            rtcId: rtcTrackIdCounter,\\n            sourceId,\\n            sourceType,\\n            stream,\\n            track,\\n            videoType: videoType || null\\n        });\\n    });\\n}\\n\\n/**\\n *\\n */\\nexport default class RTC extends Listenable {\\n    /**\\n     *\\n     * @param conference\\n     * @param options\\n     */\\n    constructor(conference, options = {}) {\\n        super();\\n        this.conference = conference;\\n\\n        /**\\n         * A map of active <tt>TraceablePeerConnection</tt>.\\n         * @type {Map.<number, TraceablePeerConnection>}\\n         */\\n        this.peerConnections = new Map();\\n\\n        this.localTracks = [];\\n\\n        this.options = options;\\n\\n        // BridgeChannel instance.\\n        // @private\\n        // @type {BridgeChannel}\\n        this._channel = null;\\n\\n        // A flag whether we had received that the channel had opened we can\\n        // get this flag out of sync if for some reason channel got closed\\n        // from server, a desired behaviour so we can see errors when this\\n        // happen.\\n        // @private\\n        // @type {boolean}\\n        this._channelOpen = false;\\n\\n        /**\\n         * The value specified to the last invocation of setLastN before the\\n         * channel completed opening. If non-null, the value will be sent\\n         * through a channel (once) as soon as it opens and will then be\\n         * discarded.\\n         * @private\\n         * @type {number}\\n         */\\n        this._lastN = -1;\\n\\n        /**\\n         * Defines the last N endpoints list. It can be null or an array once\\n         * initialised with a channel last N event.\\n         * @type {Array<string>|null}\\n         * @private\\n         */\\n        this._lastNEndpoints = null;\\n\\n        /**\\n         * The number representing the maximum video height the local client\\n         * should receive from the bridge.\\n         *\\n         * @type {number|undefined}\\n         * @private\\n         */\\n        this._maxFrameHeight = undefined;\\n\\n        /**\\n         * The endpoint ID of currently pinned participant or <tt>null</tt> if\\n         * no user is pinned.\\n         * @type {string|null}\\n         * @private\\n         */\\n        this._pinnedEndpoint = null;\\n\\n        /**\\n         * The endpoint IDs of currently selected participants.\\n         *\\n         * @type {Array}\\n         * @private\\n         */\\n        this._selectedEndpoints = [];\\n\\n        // The last N change listener.\\n        this._lastNChangeListener = this._onLastNChanged.bind(this);\\n\\n        this._onDeviceListChanged = this._onDeviceListChanged.bind(this);\\n        this._updateAudioOutputForAudioTracks\\n            = this._updateAudioOutputForAudioTracks.bind(this);\\n\\n        // Switch audio output device on all remote audio tracks. Local audio\\n        // tracks handle this event by themselves.\\n        if (RTCUtils.isDeviceChangeAvailable('output')) {\\n            RTCUtils.addListener(\\n                RTCEvents.AUDIO_OUTPUT_DEVICE_CHANGED,\\n                this._updateAudioOutputForAudioTracks\\n            );\\n\\n            RTCUtils.addListener(\\n                RTCEvents.DEVICE_LIST_CHANGED,\\n                this._onDeviceListChanged\\n            );\\n        }\\n    }\\n\\n    /**\\n     * Removes any listeners and stored state from this {@code RTC} instance.\\n     *\\n     * @returns {void}\\n     */\\n    destroy() {\\n        RTCUtils.removeListener(\\n            RTCEvents.AUDIO_OUTPUT_DEVICE_CHANGED,\\n            this._updateAudioOutputForAudioTracks\\n        );\\n\\n        RTCUtils.removeListener(\\n            RTCEvents.DEVICE_LIST_CHANGED,\\n            this._onDeviceListChanged\\n        );\\n\\n        this.removeListener(\\n            RTCEvents.LASTN_ENDPOINT_CHANGED,\\n            this._lastNChangeListener\\n        );\\n\\n        if (this._channelOpenListener) {\\n            this.removeListener(\\n                RTCEvents.DATA_CHANNEL_OPEN,\\n                this._channelOpenListener\\n            );\\n        }\\n    }\\n\\n    /**\\n     * Exposes the private helper for converting a WebRTC MediaStream to a\\n     * JitsiLocalTrack.\\n     *\\n     * @param {Array<Object>} tracksInfo\\n     * @returns {Array<JitsiLocalTrack>}\\n     */\\n    static newCreateLocalTracks(tracksInfo) {\\n        return _newCreateLocalTracks(tracksInfo);\\n    }\\n\\n    /**\\n     * Creates the local MediaStreams.\\n     * @param {object} [options] Optional parameters.\\n     * @param {array} options.devices The devices that will be requested.\\n     * @param {string} options.resolution Resolution constraints.\\n     * @param {string} options.cameraDeviceId\\n     * @param {string} options.micDeviceId\\n     * @returns {*} Promise object that will receive the new JitsiTracks\\n     */\\n    static obtainAudioAndVideoPermissions(options) {\\n        const usesNewGumFlow = browser.usesNewGumFlow();\\n        const obtainMediaPromise = usesNewGumFlow\\n            ? RTCUtils.newObtainAudioAndVideoPermissions(options)\\n            : RTCUtils.obtainAudioAndVideoPermissions(options);\\n\\n        return obtainMediaPromise.then(\\n            tracksInfo => {\\n                const tracks = usesNewGumFlow\\n                    ? _newCreateLocalTracks(tracksInfo)\\n                    : createLocalTracks(tracksInfo, options);\\n\\n                return tracks.some(track => !track._isReceivingData())\\n                    ? Promise.reject(\\n                        new JitsiTrackError(\\n                            JitsiTrackErrors.NO_DATA_FROM_SOURCE))\\n                    : tracks;\\n            });\\n    }\\n\\n    /**\\n     * Initializes the bridge channel of this instance.\\n     * At least one of both, peerconnection or wsUrl parameters, must be\\n     * given.\\n     * @param {RTCPeerConnection} [peerconnection] WebRTC peer connection\\n     * instance.\\n     * @param {string} [wsUrl] WebSocket URL.\\n     */\\n    initializeBridgeChannel(peerconnection, wsUrl) {\\n        this._channel = new BridgeChannel(\\n            peerconnection, wsUrl, this.eventEmitter);\\n\\n        this._channelOpenListener = () => {\\n            // Mark that channel as opened.\\n            this._channelOpen = true;\\n\\n            // When the channel becomes available, tell the bridge about\\n            // video selections so that it can do adaptive simulcast,\\n            // we want the notification to trigger even if userJid\\n            // is undefined, or null.\\n            try {\\n                this._channel.sendPinnedEndpointMessage(\\n                    this._pinnedEndpoint);\\n                this._channel.sendSelectedEndpointsMessage(\\n                    this._selectedEndpoints);\\n\\n                if (typeof this._maxFrameHeight !== 'undefined') {\\n                    this._channel.sendReceiverVideoConstraintMessage(\\n                        this._maxFrameHeight);\\n                }\\n            } catch (error) {\\n                GlobalOnErrorHandler.callErrorHandler(error);\\n                logger.error(\\n                    `Cannot send selected(${this._selectedEndpoint})`\\n                    + `pinned(${this._pinnedEndpoint})`\\n                    + `frameHeight(${this._maxFrameHeight}) endpoint message`,\\n                    error);\\n            }\\n\\n            this.removeListener(RTCEvents.DATA_CHANNEL_OPEN,\\n                this._channelOpenListener);\\n            this._channelOpenListener = null;\\n\\n            // If setLastN was invoked before the bridge channel completed\\n            // opening, apply the specified value now that the channel\\n            // is open. NOTE that -1 is the default value assumed by both\\n            // RTC module and the JVB.\\n            if (this._lastN !== -1) {\\n                this._channel.sendSetLastNMessage(this._lastN);\\n            }\\n        };\\n\\n        this.addListener(RTCEvents.DATA_CHANNEL_OPEN,\\n            this._channelOpenListener);\\n\\n        // Add Last N change listener.\\n        this.addListener(RTCEvents.LASTN_ENDPOINT_CHANGED,\\n            this._lastNChangeListener);\\n    }\\n\\n    /**\\n     * Callback invoked when the list of known audio and video devices has\\n     * been updated. Attempts to update the known available audio output\\n     * devices.\\n     *\\n     * @private\\n     * @returns {void}\\n     */\\n    _onDeviceListChanged() {\\n        this._updateAudioOutputForAudioTracks(RTCUtils.getAudioOutputDevice());\\n    }\\n\\n    /**\\n     * Receives events when Last N had changed.\\n     * @param {array} lastNEndpoints The new Last N endpoints.\\n     * @private\\n     */\\n    _onLastNChanged(lastNEndpoints = []) {\\n        const oldLastNEndpoints = this._lastNEndpoints || [];\\n        let leavingLastNEndpoints = [];\\n        let enteringLastNEndpoints = [];\\n\\n        this._lastNEndpoints = lastNEndpoints;\\n\\n        leavingLastNEndpoints = oldLastNEndpoints.filter(\\n            id => !this.isInLastN(id));\\n\\n        enteringLastNEndpoints = lastNEndpoints.filter(\\n            id => oldLastNEndpoints.indexOf(id) === -1);\\n\\n        this.conference.eventEmitter.emit(\\n            JitsiConferenceEvents.LAST_N_ENDPOINTS_CHANGED,\\n            leavingLastNEndpoints,\\n            enteringLastNEndpoints);\\n    }\\n\\n    /**\\n     * Should be called when current media session ends and after the\\n     * PeerConnection has been closed using PeerConnection.close() method.\\n     */\\n    onCallEnded() {\\n        if (this._channel) {\\n            // The BridgeChannel is not explicitly closed as the PeerConnection\\n            // is closed on call ended which triggers datachannel onclose\\n            // events. If using a WebSocket, the channel must be closed since\\n            // it is not managed by the PeerConnection.\\n            // The reference is cleared to disable any logic related to the\\n            // channel.\\n            if (this._channel && this._channel.mode === 'websocket') {\\n                this._channel.close();\\n            }\\n\\n            this._channel = null;\\n            this._channelOpen = false;\\n        }\\n    }\\n\\n    /**\\n     * Sets the maximum video size the local participant should receive from\\n     * remote participants. Will cache the value and send it through the channel\\n     * once it is created.\\n     *\\n     * @param {number} maxFrameHeightPixels the maximum frame height, in pixels,\\n     * this receiver is willing to receive.\\n     * @returns {void}\\n     */\\n    setReceiverVideoConstraint(maxFrameHeight) {\\n        this._maxFrameHeight = maxFrameHeight;\\n\\n        if (this._channel && this._channelOpen) {\\n            this._channel.sendReceiverVideoConstraintMessage(maxFrameHeight);\\n        }\\n    }\\n\\n    /**\\n     * Elects the participants with the given ids to be the selected\\n     * participants in order to always receive video for this participant (even\\n     * when last n is enabled). If there is no channel we store it and send it\\n     * through the channel once it is created.\\n     *\\n     * @param {Array<string>} ids - The user ids.\\n     * @throws NetworkError or InvalidStateError or Error if the operation\\n     * fails.\\n     * @returns {void}\\n     */\\n    selectEndpoints(ids) {\\n        this._selectedEndpoints = ids;\\n\\n        if (this._channel && this._channelOpen) {\\n            this._channel.sendSelectedEndpointsMessage(ids);\\n        }\\n    }\\n\\n    /**\\n     * Elects the participant with the given id to be the pinned participant in\\n     * order to always receive video for this participant (even when last n is\\n     * enabled).\\n     * @param {stirng} id The user id.\\n     * @throws NetworkError or InvalidStateError or Error if the operation\\n     * fails.\\n     */\\n    pinEndpoint(id) {\\n        // Cache the value if channel is missing, till we open it.\\n        this._pinnedEndpoint = id;\\n        if (this._channel && this._channelOpen) {\\n            this._channel.sendPinnedEndpointMessage(id);\\n        }\\n    }\\n\\n    /**\\n     *\\n     * @param eventType\\n     * @param listener\\n     */\\n    static addListener(eventType, listener) {\\n        RTCUtils.addListener(eventType, listener);\\n    }\\n\\n    /**\\n     *\\n     * @param eventType\\n     * @param listener\\n     */\\n    static removeListener(eventType, listener) {\\n        RTCUtils.removeListener(eventType, listener);\\n    }\\n\\n    /**\\n     *\\n     * @param options\\n     */\\n    static init(options = {}) {\\n        this.options = options;\\n\\n        return RTCUtils.init(this.options);\\n    }\\n\\n    /* eslint-disable max-params */\\n\\n    /**\\n     * Creates new <tt>TraceablePeerConnection</tt>\\n     * @param {SignalingLayer} signaling The signaling layer that will\\n     *      provide information about the media or participants which is not\\n     *      carried over SDP.\\n     * @param {object} iceConfig An object describing the ICE config like\\n     *      defined in the WebRTC specification.\\n     * @param {boolean} isP2P Indicates whether or not the new TPC will be used\\n     *      in a peer to peer type of session.\\n     * @param {object} options The config options.\\n     * @param {boolean} options.disableSimulcast If set to 'true' will disable\\n     *      the simulcast.\\n     * @param {boolean} options.disableRtx If set to 'true' will disable the\\n     *      RTX.\\n     * @param {boolean} options.disableH264 If set to 'true' H264 will be\\n     *      disabled by removing it from the SDP.\\n     * @param {boolean} options.preferH264 If set to 'true' H264 will be\\n     *      preferred over other video codecs.\\n     * @return {TraceablePeerConnection}\\n     */\\n    createPeerConnection(signaling, iceConfig, isP2P, options) {\\n        const pcConstraints = RTC.getPCConstraints(isP2P);\\n\\n        if (typeof options.abtestSuspendVideo !== 'undefined') {\\n            RTCUtils.setSuspendVideo(pcConstraints, options.abtestSuspendVideo);\\n\\n            Statistics.analytics.addPermanentProperties(\\n                { abtestSuspendVideo: options.abtestSuspendVideo });\\n        }\\n\\n        // FIXME: We should rename iceConfig to pcConfig.\\n        if (browser.supportsSdpSemantics()) {\\n            iceConfig.sdpSemantics = 'plan-b';\\n        }\\n\\n        peerConnectionIdCounter = safeCounterIncrement(peerConnectionIdCounter);\\n\\n        const newConnection\\n            = new TraceablePeerConnection(\\n                this,\\n                peerConnectionIdCounter,\\n                signaling,\\n                iceConfig, pcConstraints,\\n                isP2P, options);\\n\\n        this.peerConnections.set(newConnection.id, newConnection);\\n\\n        return newConnection;\\n    }\\n\\n    /* eslint-enable max-params */\\n\\n    /**\\n     * Removed given peer connection from this RTC module instance.\\n     * @param {TraceablePeerConnection} traceablePeerConnection\\n     * @return {boolean} <tt>true</tt> if the given peer connection was removed\\n     * successfully or <tt>false</tt> if there was no peer connection mapped in\\n     * this RTC instance.\\n     */\\n    _removePeerConnection(traceablePeerConnection) {\\n        const id = traceablePeerConnection.id;\\n\\n        if (this.peerConnections.has(id)) {\\n            // NOTE Remote tracks are not removed here.\\n            this.peerConnections.delete(id);\\n\\n            return true;\\n        }\\n\\n        return false;\\n\\n    }\\n\\n    /**\\n     *\\n     * @param track\\n     */\\n    addLocalTrack(track) {\\n        if (!track) {\\n            throw new Error('track must not be null nor undefined');\\n        }\\n\\n        this.localTracks.push(track);\\n\\n        track.conference = this.conference;\\n    }\\n\\n    /**\\n     * Returns the current value for \\\"lastN\\\" - the amount of videos are going\\n     * to be delivered. When set to -1 for unlimited or all available videos.\\n     * @return {number}\\n     */\\n    getLastN() {\\n        return this._lastN;\\n    }\\n\\n    /**\\n     * Get local video track.\\n     * @returns {JitsiLocalTrack|undefined}\\n     */\\n    getLocalVideoTrack() {\\n        const localVideo = this.getLocalTracks(MediaType.VIDEO);\\n\\n\\n        return localVideo.length ? localVideo[0] : undefined;\\n    }\\n\\n    /**\\n     * Get local audio track.\\n     * @returns {JitsiLocalTrack|undefined}\\n     */\\n    getLocalAudioTrack() {\\n        const localAudio = this.getLocalTracks(MediaType.AUDIO);\\n\\n\\n        return localAudio.length ? localAudio[0] : undefined;\\n    }\\n\\n    /**\\n     * Returns the local tracks of the given media type, or all local tracks if\\n     * no specific type is given.\\n     * @param {MediaType} [mediaType] Optional media type filter.\\n     * (audio or video).\\n     */\\n    getLocalTracks(mediaType) {\\n        let tracks = this.localTracks.slice();\\n\\n        if (mediaType !== undefined) {\\n            tracks = tracks.filter(\\n                track => track.getType() === mediaType);\\n        }\\n\\n        return tracks;\\n    }\\n\\n    /**\\n     * Obtains all remote tracks currently known to this RTC module instance.\\n     * @param {MediaType} [mediaType] The remote tracks will be filtered\\n     *      by their media type if this argument is specified.\\n     * @return {Array<JitsiRemoteTrack>}\\n     */\\n    getRemoteTracks(mediaType) {\\n        let remoteTracks = [];\\n\\n        for (const tpc of this.peerConnections.values()) {\\n            const pcRemoteTracks = tpc.getRemoteTracks(undefined, mediaType);\\n\\n            if (pcRemoteTracks) {\\n                remoteTracks = remoteTracks.concat(pcRemoteTracks);\\n            }\\n        }\\n\\n        return remoteTracks;\\n    }\\n\\n    /**\\n     * Set mute for all local audio streams attached to the conference.\\n     * @param value The mute value.\\n     * @returns {Promise}\\n     */\\n    setAudioMute(value) {\\n        const mutePromises = [];\\n\\n        this.getLocalTracks(MediaType.AUDIO).forEach(audioTrack => {\\n            // this is a Promise\\n            mutePromises.push(value ? audioTrack.mute() : audioTrack.unmute());\\n        });\\n\\n        // We return a Promise from all Promises so we can wait for their\\n        // execution.\\n        return Promise.all(mutePromises);\\n    }\\n\\n    /**\\n     *\\n     * @param track\\n     */\\n    removeLocalTrack(track) {\\n        const pos = this.localTracks.indexOf(track);\\n\\n        if (pos === -1) {\\n            return;\\n        }\\n\\n        this.localTracks.splice(pos, 1);\\n    }\\n\\n    /**\\n     * Removes all JitsiRemoteTracks associated with given MUC nickname\\n     * (resource part of the JID). Returns array of removed tracks.\\n     *\\n     * @param {string} Owner The resource part of the MUC JID.\\n     * @returns {JitsiRemoteTrack[]}\\n     */\\n    removeRemoteTracks(owner) {\\n        let removedTracks = [];\\n\\n        for (const tpc of this.peerConnections.values()) {\\n            const pcRemovedTracks = tpc.removeRemoteTracks(owner);\\n\\n            removedTracks = removedTracks.concat(pcRemovedTracks);\\n        }\\n\\n        logger.debug(\\n            `Removed remote tracks for ${owner}`\\n                + ` count: ${removedTracks.length}`);\\n\\n        return removedTracks;\\n    }\\n\\n    /**\\n     *\\n     */\\n    static getPCConstraints(isP2P) {\\n        const pcConstraints\\n            = isP2P ? RTCUtils.p2pPcConstraints : RTCUtils.pcConstraints;\\n\\n        if (!pcConstraints) {\\n            return {};\\n        }\\n\\n        return JSON.parse(JSON.stringify(pcConstraints));\\n    }\\n\\n    /**\\n     *\\n     * @param elSelector\\n     * @param stream\\n     */\\n    static attachMediaStream(elSelector, stream) {\\n        return RTCUtils.attachMediaStream(elSelector, stream);\\n    }\\n\\n    /**\\n     * Returns the id of the given stream.\\n     * @param {MediaStream} stream\\n     */\\n    static getStreamID(stream) {\\n        return RTCUtils.getStreamID(stream);\\n    }\\n\\n    /**\\n     * Returns the id of the given track.\\n     * @param {MediaStreamTrack} track\\n     */\\n    static getTrackID(track) {\\n        return RTCUtils.getTrackID(track);\\n    }\\n\\n    /**\\n     * Returns true if retrieving the the list of input devices is supported\\n     * and false if not.\\n     */\\n    static isDeviceListAvailable() {\\n        return RTCUtils.isDeviceListAvailable();\\n    }\\n\\n    /**\\n     * Returns true if changing the input (camera / microphone) or output\\n     * (audio) device is supported and false if not.\\n     * @param {string} [deviceType] Type of device to change. Default is\\n     *      undefined or 'input', 'output' - for audio output device change.\\n     * @returns {boolean} true if available, false otherwise.\\n     */\\n    static isDeviceChangeAvailable(deviceType) {\\n        return RTCUtils.isDeviceChangeAvailable(deviceType);\\n    }\\n\\n    /**\\n     * Returns whether the current execution environment supports WebRTC (for\\n     * use within this library).\\n     *\\n     * @returns {boolean} {@code true} if WebRTC is supported in the current\\n     * execution environment (for use within this library); {@code false},\\n     * otherwise.\\n     */\\n    static isWebRtcSupported() {\\n        return browser.isSupported();\\n    }\\n\\n    /**\\n     * Returns currently used audio output device id, '' stands for default\\n     * device\\n     * @returns {string}\\n     */\\n    static getAudioOutputDevice() {\\n        return RTCUtils.getAudioOutputDevice();\\n    }\\n\\n    /**\\n     * Returns list of available media devices if its obtained, otherwise an\\n     * empty array is returned/\\n     * @returns {array} list of available media devices.\\n     */\\n    static getCurrentlyAvailableMediaDevices() {\\n        return RTCUtils.getCurrentlyAvailableMediaDevices();\\n    }\\n\\n    /**\\n     * Returns event data for device to be reported to stats.\\n     * @returns {MediaDeviceInfo} device.\\n     */\\n    static getEventDataForActiveDevice(device) {\\n        return RTCUtils.getEventDataForActiveDevice(device);\\n    }\\n\\n    /**\\n     * Sets current audio output device.\\n     * @param {string} deviceId Id of 'audiooutput' device from\\n     *      navigator.mediaDevices.enumerateDevices().\\n     * @returns {Promise} resolves when audio output is changed, is rejected\\n     *      otherwise\\n     */\\n    static setAudioOutputDevice(deviceId) {\\n        return RTCUtils.setAudioOutputDevice(deviceId);\\n    }\\n\\n    /**\\n     * Returns <tt>true<tt/> if given WebRTC MediaStream is considered a valid\\n     * \\\"user\\\" stream which means that it's not a \\\"receive only\\\" stream nor a\\n     * \\\"mixed\\\" JVB stream.\\n     *\\n     * Clients that implement Unified Plan, such as Firefox use recvonly\\n     * \\\"streams/channels/tracks\\\" for receiving remote stream/tracks, as opposed\\n     * to Plan B where there are only 3 channels: audio, video and data.\\n     *\\n     * @param {MediaStream} stream The WebRTC MediaStream instance.\\n     * @returns {boolean}\\n     */\\n    static isUserStream(stream) {\\n        return RTC.isUserStreamById(RTCUtils.getStreamID(stream));\\n    }\\n\\n    /**\\n     * Returns <tt>true<tt/> if a WebRTC MediaStream identified by given stream\\n     * ID is considered a valid \\\"user\\\" stream which means that it's not a\\n     * \\\"receive only\\\" stream nor a \\\"mixed\\\" JVB stream.\\n     *\\n     * Clients that implement Unified Plan, such as Firefox use recvonly\\n     * \\\"streams/channels/tracks\\\" for receiving remote stream/tracks, as opposed\\n     * to Plan B where there are only 3 channels: audio, video and data.\\n     *\\n     * @param {string} streamId The id of WebRTC MediaStream.\\n     * @returns {boolean}\\n     */\\n    static isUserStreamById(streamId) {\\n        return streamId && streamId !== 'mixedmslabel'\\n            && streamId !== 'default';\\n    }\\n\\n    /**\\n     * Allows to receive list of available cameras/microphones.\\n     * @param {function} callback Would receive array of devices as an\\n     *      argument.\\n     */\\n    static enumerateDevices(callback) {\\n        RTCUtils.enumerateDevices(callback);\\n    }\\n\\n    /**\\n     * A method to handle stopping of the stream.\\n     * One point to handle the differences in various implementations.\\n     * @param {MediaStream} mediaStream MediaStream object to stop.\\n     */\\n    static stopMediaStream(mediaStream) {\\n        RTCUtils.stopMediaStream(mediaStream);\\n    }\\n\\n    /**\\n     * Returns whether the desktop sharing is enabled or not.\\n     * @returns {boolean}\\n     */\\n    static isDesktopSharingEnabled() {\\n        return RTCUtils.isDesktopSharingEnabled();\\n    }\\n\\n    /**\\n     * Closes the currently opened bridge channel.\\n     */\\n    closeBridgeChannel() {\\n        if (this._channel) {\\n            this._channel.close();\\n            this._channelOpen = false;\\n\\n            this.removeListener(RTCEvents.LASTN_ENDPOINT_CHANGED,\\n                this._lastNChangeListener);\\n        }\\n    }\\n\\n    /* eslint-disable max-params */\\n    /**\\n     *\\n     * @param {TraceablePeerConnection} tpc\\n     * @param {number} ssrc\\n     * @param {number} audioLevel\\n     * @param {boolean} isLocal\\n     */\\n    setAudioLevel(tpc, ssrc, audioLevel, isLocal) {\\n        const track = tpc.getTrackBySSRC(ssrc);\\n\\n        if (!track) {\\n            return;\\n        } else if (!track.isAudioTrack()) {\\n            logger.warn(`Received audio level for non-audio track: ${ssrc}`);\\n\\n            return;\\n        } else if (track.isLocal() !== isLocal) {\\n            logger.error(\\n                `${track} was expected to ${isLocal ? 'be' : 'not be'} local`);\\n        }\\n\\n        track.setAudioLevel(audioLevel, tpc);\\n    }\\n\\n    /* eslint-enable max-params */\\n\\n    /**\\n     * Sends message via the bridge channel.\\n     * @param {string} to The id of the endpoint that should receive the\\n     *      message. If \\\"\\\" the message will be sent to all participants.\\n     * @param {object} payload The payload of the message.\\n     * @throws NetworkError or InvalidStateError or Error if the operation\\n     * fails or there is no data channel created.\\n     */\\n    sendChannelMessage(to, payload) {\\n        if (this._channel) {\\n            this._channel.sendMessage(to, payload);\\n        } else {\\n            throw new Error('Channel support is disabled!');\\n        }\\n    }\\n\\n    /**\\n     * Selects a new value for \\\"lastN\\\". The requested amount of videos are going\\n     * to be delivered after the value is in effect. Set to -1 for unlimited or\\n     * all available videos.\\n     * @param {number} value the new value for lastN.\\n     */\\n    setLastN(value) {\\n        if (this._lastN !== value) {\\n            this._lastN = value;\\n            if (this._channel && this._channelOpen) {\\n                this._channel.sendSetLastNMessage(value);\\n            }\\n            this.eventEmitter.emit(RTCEvents.LASTN_VALUE_CHANGED, value);\\n        }\\n    }\\n\\n    /**\\n     * Indicates if the endpoint id is currently included in the last N.\\n     * @param {string} id The endpoint id that we check for last N.\\n     * @returns {boolean} true if the endpoint id is in the last N or if we\\n     * don't have bridge channel support, otherwise we return false.\\n     */\\n    isInLastN(id) {\\n        return !this._lastNEndpoints // lastNEndpoints not initialised yet.\\n            || this._lastNEndpoints.indexOf(id) > -1;\\n    }\\n\\n    /**\\n     * Updates the target audio output device for all remote audio tracks.\\n     *\\n     * @param {string} deviceId - The device id of the audio ouput device to\\n     * use for all remote tracks.\\n     * @private\\n     * @returns {void}\\n     */\\n    _updateAudioOutputForAudioTracks(deviceId) {\\n        const remoteAudioTracks = this.getRemoteTracks(MediaType.AUDIO);\\n\\n        for (const track of remoteAudioTracks) {\\n            track.setAudioOutput(deviceId);\\n        }\\n    }\\n}\\n\",\"/* global module */\\n/**\\n * Enumeration of the video types\\n * @type {{CAMERA: string, DESKTOP: string}}\\n */\\nconst VideoType = {\\n    /**\\n     * The camera video type.\\n     */\\n    CAMERA: 'camera',\\n\\n    /**\\n     * The desktop video type.\\n     */\\n    DESKTOP: 'desktop'\\n};\\n\\nmodule.exports = VideoType;\\n\",\"import * as JitsiTrackErrors from './JitsiTrackErrors';\\n\\nconst TRACK_ERROR_TO_MESSAGE_MAP = {};\\n\\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.UNSUPPORTED_RESOLUTION]\\n    = 'Video resolution is not supported: ';\\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.CHROME_EXTENSION_INSTALLATION_ERROR]\\n    = 'Failed to install Chrome extension';\\nTRACK_ERROR_TO_MESSAGE_MAP[\\n    JitsiTrackErrors.CHROME_EXTENSION_USER_GESTURE_REQUIRED]\\n    = 'Failed to install Chrome extension - installations can only be initiated'\\n        + ' by a user gesture.';\\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.CHROME_EXTENSION_USER_CANCELED]\\n    = 'User canceled Chrome\\\\'s screen sharing prompt';\\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.CHROME_EXTENSION_GENERIC_ERROR]\\n    = 'Unknown error from Chrome extension';\\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.ELECTRON_DESKTOP_PICKER_ERROR]\\n    = 'Unkown error from desktop picker';\\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.ELECTRON_DESKTOP_PICKER_NOT_FOUND]\\n    = 'Failed to detect desktop picker';\\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.GENERAL]\\n    = 'Generic getUserMedia error';\\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.PERMISSION_DENIED]\\n    = 'User denied permission to use device(s): ';\\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.NOT_FOUND]\\n    = 'Requested device(s) was/were not found: ';\\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.CONSTRAINT_FAILED]\\n    = 'Constraint could not be satisfied: ';\\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.TRACK_IS_DISPOSED]\\n    = 'Track has been already disposed';\\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.TRACK_NO_STREAM_FOUND]\\n    = 'Track does not have an associated Media Stream';\\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.NO_DATA_FROM_SOURCE]\\n    = 'The track has stopped receiving data from it\\\\'s source';\\n\\n\\n// FIXME: Using prototype inheritance because otherwise instanceof is not\\n// working properly (see https://github.com/babel/babel/issues/3083)\\n\\n/**\\n *\\n * Represents an error that occurred to a JitsiTrack. Can represent various\\n * types of errors. For error descriptions (@see JitsiTrackErrors).\\n *\\n * @extends Error\\n *\\n *\\n * @constructor\\n * @param {Object|string} error - error object or error name\\n * @param {Object|string} (options) - getUserMedia constraints object or\\n * error message\\n * @param {('audio'|'video'|'desktop'|'screen'|'audiooutput')[]} (devices) -\\n * list of getUserMedia requested devices\\n */\\nfunction JitsiTrackError(error, options, devices) {\\n    if (typeof error === 'object' && typeof error.name !== 'undefined') {\\n        /**\\n         * Additional information about original getUserMedia error\\n         * and constraints.\\n         * @type {{\\n         *     error: Object,\\n         *     constraints: Object,\\n         *     devices: Array.<'audio'|'video'|'desktop'|'screen'>\\n         * }}\\n         */\\n        this.gum = {\\n            error,\\n            constraints: options,\\n            devices: devices && Array.isArray(devices)\\n                ? devices.slice(0)\\n                : undefined\\n        };\\n\\n        switch (error.name) {\\n        case 'NotAllowedError':\\n        case 'PermissionDeniedError':\\n        case 'SecurityError':\\n            this.name = JitsiTrackErrors.PERMISSION_DENIED;\\n            this.message\\n                = TRACK_ERROR_TO_MESSAGE_MAP[this.name]\\n                    + (this.gum.devices || []).join(', ');\\n            break;\\n        case 'DevicesNotFoundError':\\n        case 'NotFoundError':\\n            this.name = JitsiTrackErrors.NOT_FOUND;\\n            this.message\\n                = TRACK_ERROR_TO_MESSAGE_MAP[this.name]\\n                    + (this.gum.devices || []).join(', ');\\n            break;\\n        case 'ConstraintNotSatisfiedError':\\n        case 'OverconstrainedError': {\\n            const constraintName = error.constraintName || error.constraint;\\n\\n            // we treat deviceId as unsupported resolution, as we want to\\n            // retry and finally if everything fails to remove deviceId from\\n            // mandatory constraints\\n            if (options\\n                    && options.video\\n                    && (!devices || devices.indexOf('video') > -1)\\n                    && (constraintName === 'minWidth'\\n                        || constraintName === 'maxWidth'\\n                        || constraintName === 'minHeight'\\n                        || constraintName === 'maxHeight'\\n                        || constraintName === 'width'\\n                        || constraintName === 'height'\\n                        || constraintName === 'deviceId')) {\\n                this.name = JitsiTrackErrors.UNSUPPORTED_RESOLUTION;\\n                this.message\\n                    = TRACK_ERROR_TO_MESSAGE_MAP[this.name]\\n                        + getResolutionFromFailedConstraint(\\n                            constraintName,\\n                            options);\\n            } else {\\n                this.name = JitsiTrackErrors.CONSTRAINT_FAILED;\\n                this.message\\n                    = TRACK_ERROR_TO_MESSAGE_MAP[this.name]\\n                        + error.constraintName;\\n            }\\n            break;\\n        }\\n\\n        default:\\n            this.name = JitsiTrackErrors.GENERAL;\\n            this.message\\n                = error.message || TRACK_ERROR_TO_MESSAGE_MAP[this.name];\\n            break;\\n        }\\n    } else if (typeof error === 'string') {\\n        if (TRACK_ERROR_TO_MESSAGE_MAP[error]) {\\n            this.name = error;\\n            this.message = options || TRACK_ERROR_TO_MESSAGE_MAP[error];\\n        } else {\\n            // this is some generic error that do not fit any of our\\n            // pre-defined errors, so don't give it any specific name, just\\n            // store message\\n            this.message = error;\\n        }\\n    } else {\\n        throw new Error('Invalid arguments');\\n    }\\n\\n    this.stack = error.stack || (new Error()).stack;\\n}\\n\\nJitsiTrackError.prototype = Object.create(Error.prototype);\\nJitsiTrackError.prototype.constructor = JitsiTrackError;\\n\\n/**\\n * Gets failed resolution constraint from corresponding object.\\n * @param {string} failedConstraintName\\n * @param {Object} constraints\\n * @returns {string|number}\\n */\\nfunction getResolutionFromFailedConstraint(failedConstraintName, constraints) {\\n    if (constraints && constraints.video && constraints.video.mandatory) {\\n        switch (failedConstraintName) {\\n        case 'width':\\n            return constraints.video.mandatory.minWidth;\\n        case 'height':\\n            return constraints.video.mandatory.minHeight;\\n        default:\\n            return constraints.video.mandatory[failedConstraintName] || '';\\n        }\\n    }\\n\\n    return '';\\n}\\n\\nexport default JitsiTrackError;\\n\",\"var parser = require('./parser');\\nvar writer = require('./writer');\\n\\nexports.write = writer;\\nexports.parse = parser.parse;\\nexports.parseFmtpConfig = parser.parseFmtpConfig;\\nexports.parseParams = parser.parseParams;\\nexports.parsePayloads = parser.parsePayloads;\\nexports.parseRemoteCandidates = parser.parseRemoteCandidates;\\nexports.parseImageAttributes = parser.parseImageAttributes;\\nexports.parseSimulcastStreamList = parser.parseSimulcastStreamList;\\n\",\"/**\\n * The media track was removed to the conference.\\n */\\nexport const LOCAL_TRACK_STOPPED = 'track.stopped';\\n\\n/**\\n * Audio levels of a this track was changed.\\n * The first argument is a number with audio level value in range [0, 1].\\n * The second argument is a <tt>TraceablePeerConnection</tt> which is the peer\\n * connection which measured the audio level (one audio track can be added\\n * to multiple peer connection at the same time). This argument is optional for\\n * local tracks for which we can measure audio level without the peer\\n * connection (the value will be <tt>undefined</tt>).\\n *\\n * NOTE The second argument should be treated as library internal and can be\\n * removed at any time.\\n */\\nexport const TRACK_AUDIO_LEVEL_CHANGED = 'track.audioLevelsChanged';\\n\\n/**\\n * The audio output of the track was changed.\\n */\\nexport const TRACK_AUDIO_OUTPUT_CHANGED = 'track.audioOutputChanged';\\n\\n/**\\n * A media track mute status was changed.\\n */\\nexport const TRACK_MUTE_CHANGED = 'track.trackMuteChanged';\\n\\n/**\\n * The video type(\\\"camera\\\" or \\\"desktop\\\") of the track was changed.\\n */\\nexport const TRACK_VIDEOTYPE_CHANGED = 'track.videoTypeChanged';\\n\\n/**\\n * Indicates that the track is not receiving any data even though we expect it\\n * to receive data (i.e. the stream is not stopped).\\n */\\nexport const NO_DATA_FROM_SOURCE = 'track.no_data_from_source';\\n\",\"/* global $ */\\n\\nimport SDPUtil from './SDPUtil';\\n\\n/**\\n *\\n * @param sdp\\n */\\nexport default function SDP(sdp) {\\n    const media = sdp.split('\\\\r\\\\nm=');\\n\\n    for (let i = 1, length = media.length; i < length; i++) {\\n        let mediaI = `m=${media[i]}`;\\n\\n        if (i !== length - 1) {\\n            mediaI += '\\\\r\\\\n';\\n        }\\n        media[i] = mediaI;\\n    }\\n    const session = `${media.shift()}\\\\r\\\\n`;\\n\\n    this.media = media;\\n    this.raw = session + media.join('');\\n    this.session = session;\\n}\\n\\n/**\\n * A flag will make {@link transportToJingle} and {@link jingle2media} replace\\n * ICE candidates IPs with invalid value of '1.1.1.1' which will cause ICE\\n * failure. The flag is used in the automated testing.\\n * @type {boolean}\\n */\\nSDP.prototype.failICE = false;\\n\\n/**\\n * Whether or not to remove TCP ice candidates when translating from/to jingle.\\n * @type {boolean}\\n */\\nSDP.prototype.removeTcpCandidates = false;\\n\\n/**\\n * Whether or not to remove UDP ice candidates when translating from/to jingle.\\n * @type {boolean}\\n */\\nSDP.prototype.removeUdpCandidates = false;\\n\\n/**\\n * Returns map of MediaChannel mapped per channel idx.\\n */\\nSDP.prototype.getMediaSsrcMap = function() {\\n    const self = this;\\n    const mediaSSRCs = {};\\n    let tmp;\\n\\n    for (let mediaindex = 0; mediaindex < self.media.length; mediaindex++) {\\n        tmp = SDPUtil.findLines(self.media[mediaindex], 'a=ssrc:');\\n        const mid\\n            = SDPUtil.parseMID(\\n                SDPUtil.findLine(self.media[mediaindex], 'a=mid:'));\\n        const media = {\\n            mediaindex,\\n            mid,\\n            ssrcs: {},\\n            ssrcGroups: []\\n        };\\n\\n        mediaSSRCs[mediaindex] = media;\\n        tmp.forEach(line => {\\n            const linessrc = line.substring(7).split(' ')[0];\\n\\n            // allocate new ChannelSsrc\\n\\n            if (!media.ssrcs[linessrc]) {\\n                media.ssrcs[linessrc] = {\\n                    ssrc: linessrc,\\n                    lines: []\\n                };\\n            }\\n            media.ssrcs[linessrc].lines.push(line);\\n        });\\n        tmp = SDPUtil.findLines(self.media[mediaindex], 'a=ssrc-group:');\\n        tmp.forEach(line => {\\n            const idx = line.indexOf(' ');\\n            const semantics = line.substr(0, idx).substr(13);\\n            const ssrcs = line.substr(14 + semantics.length).split(' ');\\n\\n            if (ssrcs.length) {\\n                media.ssrcGroups.push({\\n                    semantics,\\n                    ssrcs\\n                });\\n            }\\n        });\\n    }\\n\\n    return mediaSSRCs;\\n};\\n\\n/**\\n * Returns <tt>true</tt> if this SDP contains given SSRC.\\n * @param ssrc the ssrc to check.\\n * @returns {boolean} <tt>true</tt> if this SDP contains given SSRC.\\n */\\nSDP.prototype.containsSSRC = function(ssrc) {\\n    // FIXME this code is really strange - improve it if you can\\n    const medias = this.getMediaSsrcMap();\\n    let result = false;\\n\\n    Object.keys(medias).forEach(mediaindex => {\\n        if (result) {\\n            return;\\n        }\\n        if (medias[mediaindex].ssrcs[ssrc]) {\\n            result = true;\\n        }\\n    });\\n\\n    return result;\\n};\\n\\n// remove iSAC and CN from SDP\\nSDP.prototype.mangle = function() {\\n    let i, j, lines, mline, newdesc, rtpmap;\\n\\n    for (i = 0; i < this.media.length; i++) {\\n        lines = this.media[i].split('\\\\r\\\\n');\\n        lines.pop(); // remove empty last element\\n        mline = SDPUtil.parseMLine(lines.shift());\\n        if (mline.media !== 'audio') {\\n            continue; // eslint-disable-line no-continue\\n        }\\n        newdesc = '';\\n        mline.fmt.length = 0;\\n        for (j = 0; j < lines.length; j++) {\\n            if (lines[j].substr(0, 9) === 'a=rtpmap:') {\\n                rtpmap = SDPUtil.parseRTPMap(lines[j]);\\n                if (rtpmap.name === 'CN' || rtpmap.name === 'ISAC') {\\n                    continue; // eslint-disable-line no-continue\\n                }\\n                mline.fmt.push(rtpmap.id);\\n            }\\n            newdesc += `${lines[j]}\\\\r\\\\n`;\\n        }\\n        this.media[i] = `${SDPUtil.buildMLine(mline)}\\\\r\\\\n${newdesc}`;\\n    }\\n    this.raw = this.session + this.media.join('');\\n};\\n\\n// remove lines matching prefix from session section\\nSDP.prototype.removeSessionLines = function(prefix) {\\n    const self = this;\\n    const lines = SDPUtil.findLines(this.session, prefix);\\n\\n    lines.forEach(line => {\\n        self.session = self.session.replace(`${line}\\\\r\\\\n`, '');\\n    });\\n    this.raw = this.session + this.media.join('');\\n\\n    return lines;\\n};\\n\\n// remove lines matching prefix from a media section specified by mediaindex\\n// TODO: non-numeric mediaindex could match mid\\nSDP.prototype.removeMediaLines = function(mediaindex, prefix) {\\n    const self = this;\\n    const lines = SDPUtil.findLines(this.media[mediaindex], prefix);\\n\\n    lines.forEach(line => {\\n        self.media[mediaindex]\\n            = self.media[mediaindex].replace(`${line}\\\\r\\\\n`, '');\\n    });\\n    this.raw = this.session + this.media.join('');\\n\\n    return lines;\\n};\\n\\n// add content's to a jingle element\\nSDP.prototype.toJingle = function(elem, thecreator) {\\n    let i, j, k, lines, mline, rtpmap, ssrc, tmp;\\n\\n    // new bundle plan\\n\\n    lines = SDPUtil.findLines(this.session, 'a=group:');\\n    if (lines.length) {\\n        for (i = 0; i < lines.length; i++) {\\n            tmp = lines[i].split(' ');\\n            const semantics = tmp.shift().substr(8);\\n\\n            elem.c('group', { xmlns: 'urn:xmpp:jingle:apps:grouping:0',\\n                semantics });\\n            for (j = 0; j < tmp.length; j++) {\\n                elem.c('content', { name: tmp[j] }).up();\\n            }\\n            elem.up();\\n        }\\n    }\\n    for (i = 0; i < this.media.length; i++) {\\n        mline = SDPUtil.parseMLine(this.media[i].split('\\\\r\\\\n')[0]);\\n        if (!(mline.media === 'audio'\\n              || mline.media === 'video'\\n              || mline.media === 'application')) {\\n            continue; // eslint-disable-line no-continue\\n        }\\n        const assrcline = SDPUtil.findLine(this.media[i], 'a=ssrc:');\\n\\n        if (assrcline) {\\n            ssrc = assrcline.substring(7).split(' ')[0]; // take the first\\n        } else {\\n            ssrc = false;\\n        }\\n\\n        elem.c('content', { creator: thecreator,\\n            name: mline.media });\\n        const amidline = SDPUtil.findLine(this.media[i], 'a=mid:');\\n\\n        if (amidline) {\\n            // prefer identifier from a=mid if present\\n            const mid = SDPUtil.parseMID(amidline);\\n\\n            elem.attrs({ name: mid });\\n        }\\n\\n        if (SDPUtil.findLine(this.media[i], 'a=rtpmap:').length) {\\n            elem.c('description',\\n                { xmlns: 'urn:xmpp:jingle:apps:rtp:1',\\n                    media: mline.media });\\n            if (ssrc) {\\n                elem.attrs({ ssrc });\\n            }\\n            for (j = 0; j < mline.fmt.length; j++) {\\n                rtpmap\\n                    = SDPUtil.findLine(\\n                        this.media[i],\\n                        `a=rtpmap:${mline.fmt[j]}`);\\n                elem.c('payload-type', SDPUtil.parseRTPMap(rtpmap));\\n\\n                // put any 'a=fmtp:' + mline.fmt[j] lines into <param name=foo\\n                // value=bar/>\\n                const afmtpline\\n                    = SDPUtil.findLine(\\n                        this.media[i],\\n                        `a=fmtp:${mline.fmt[j]}`);\\n\\n                if (afmtpline) {\\n                    tmp = SDPUtil.parseFmtp(afmtpline);\\n\\n                    // eslint-disable-next-line max-depth\\n                    for (k = 0; k < tmp.length; k++) {\\n                        elem.c('parameter', tmp[k]).up();\\n                    }\\n                }\\n\\n                // XEP-0293 -- map a=rtcp-fb\\n                this.rtcpFbToJingle(i, elem, mline.fmt[j]);\\n\\n                elem.up();\\n            }\\n            const crypto\\n                = SDPUtil.findLines(this.media[i], 'a=crypto:', this.session);\\n\\n            if (crypto.length) {\\n                elem.c('encryption', { required: 1 });\\n                crypto.forEach(\\n                    line => elem.c('crypto', SDPUtil.parseCrypto(line)).up());\\n                elem.up(); // end of encryption\\n            }\\n\\n            if (ssrc) {\\n                const ssrcMap = SDPUtil.parseSSRC(this.media[i]);\\n\\n                for (const [ availableSsrc, ssrcParameters ] of ssrcMap) {\\n                    elem.c('source', {\\n                        ssrc: availableSsrc,\\n                        xmlns: 'urn:xmpp:jingle:apps:rtp:ssma:0'\\n                    });\\n\\n                    ssrcParameters.forEach(ssrcSdpLine => {\\n                        // get everything after first space\\n                        const idx = ssrcSdpLine.indexOf(' ');\\n                        const kv = ssrcSdpLine.substr(idx + 1);\\n\\n                        elem.c('parameter');\\n                        if (kv.indexOf(':') === -1) {\\n                            elem.attrs({ name: kv });\\n                        } else {\\n                            const name = kv.split(':', 2)[0];\\n\\n                            elem.attrs({ name });\\n\\n                            let v = kv.split(':', 2)[1];\\n\\n                            v = SDPUtil.filterSpecialChars(v);\\n                            elem.attrs({ value: v });\\n                        }\\n                        elem.up();\\n                    });\\n\\n                    elem.up();\\n                }\\n\\n                // XEP-0339 handle ssrc-group attributes\\n                const ssrcGroupLines\\n                    = SDPUtil.findLines(this.media[i], 'a=ssrc-group:');\\n\\n                ssrcGroupLines.forEach(line => {\\n                    const idx = line.indexOf(' ');\\n                    const semantics = line.substr(0, idx).substr(13);\\n                    const ssrcs = line.substr(14 + semantics.length).split(' ');\\n\\n                    if (ssrcs.length) {\\n                        elem.c('ssrc-group', { semantics,\\n                            xmlns: 'urn:xmpp:jingle:apps:rtp:ssma:0' });\\n                        ssrcs.forEach(s => elem.c('source', { ssrc: s }).up());\\n                        elem.up();\\n                    }\\n                });\\n            }\\n\\n            const ridLines = SDPUtil.findLines(this.media[i], 'a=rid');\\n\\n            if (ridLines.length) {\\n                // Map a line which looks like \\\"a=rid:2 send\\\" to just\\n                // the rid (\\\"2\\\")\\n                const rids = ridLines\\n                    .map(ridLine => ridLine.split(':')[1])\\n                    .map(ridInfo => ridInfo.split(' ')[0]);\\n\\n                rids.forEach(rid => {\\n                    elem.c('source', {\\n                        rid,\\n                        xmlns: 'urn:xmpp:jingle:apps:rtp:ssma:0'\\n                    });\\n                    elem.up();\\n                });\\n                const unifiedSimulcast\\n                    = SDPUtil.findLine(this.media[i], 'a=simulcast');\\n\\n                if (unifiedSimulcast) {\\n                    elem.c('rid-group', {\\n                        semantics: 'SIM',\\n                        xmlns: 'urn:xmpp:jingle:apps:rtp:ssma:0'\\n                    });\\n                    rids.forEach(rid => {\\n                        elem.c('source', { rid }).up();\\n                    });\\n                    elem.up();\\n                }\\n            }\\n\\n            if (SDPUtil.findLine(this.media[i], 'a=rtcp-mux')) {\\n                elem.c('rtcp-mux').up();\\n            }\\n\\n            // XEP-0293 -- map a=rtcp-fb:*\\n            this.rtcpFbToJingle(i, elem, '*');\\n\\n            // XEP-0294\\n            lines = SDPUtil.findLines(this.media[i], 'a=extmap:');\\n            if (lines.length) {\\n                for (j = 0; j < lines.length; j++) {\\n                    tmp = SDPUtil.parseExtmap(lines[j]);\\n                    elem.c('rtp-hdrext', {\\n                        xmlns: 'urn:xmpp:jingle:apps:rtp:rtp-hdrext:0',\\n                        uri: tmp.uri,\\n                        id: tmp.value\\n                    });\\n\\n                    // eslint-disable-next-line max-depth\\n                    if (tmp.hasOwnProperty('direction')) {\\n\\n                        // eslint-disable-next-line max-depth\\n                        switch (tmp.direction) {\\n                        case 'sendonly':\\n                            elem.attrs({ senders: 'responder' });\\n                            break;\\n                        case 'recvonly':\\n                            elem.attrs({ senders: 'initiator' });\\n                            break;\\n                        case 'sendrecv':\\n                            elem.attrs({ senders: 'both' });\\n                            break;\\n                        case 'inactive':\\n                            elem.attrs({ senders: 'none' });\\n                            break;\\n                        }\\n                    }\\n\\n                    // TODO: handle params\\n                    elem.up();\\n                }\\n            }\\n            elem.up(); // end of description\\n        }\\n\\n        // map ice-ufrag/pwd, dtls fingerprint, candidates\\n        this.transportToJingle(i, elem);\\n\\n        const m = this.media[i];\\n\\n        if (SDPUtil.findLine(m, 'a=sendrecv', this.session)) {\\n            elem.attrs({ senders: 'both' });\\n        } else if (SDPUtil.findLine(m, 'a=sendonly', this.session)) {\\n            elem.attrs({ senders: 'initiator' });\\n        } else if (SDPUtil.findLine(m, 'a=recvonly', this.session)) {\\n            elem.attrs({ senders: 'responder' });\\n        } else if (SDPUtil.findLine(m, 'a=inactive', this.session)) {\\n            elem.attrs({ senders: 'none' });\\n        }\\n        if (mline.port === '0') {\\n            // estos hack to reject an m-line\\n            elem.attrs({ senders: 'rejected' });\\n        }\\n        elem.up(); // end of content\\n    }\\n    elem.up();\\n\\n    return elem;\\n};\\n\\nSDP.prototype.transportToJingle = function(mediaindex, elem) {\\n    let tmp;\\n    const self = this;\\n\\n    elem.c('transport');\\n\\n    // XEP-0343 DTLS/SCTP\\n    const sctpmap\\n        = SDPUtil.findLine(this.media[mediaindex], 'a=sctpmap:', self.session);\\n\\n    if (sctpmap) {\\n        const sctpAttrs = SDPUtil.parseSCTPMap(sctpmap);\\n\\n        elem.c('sctpmap', {\\n            xmlns: 'urn:xmpp:jingle:transports:dtls-sctp:1',\\n            number: sctpAttrs[0], /* SCTP port */\\n            protocol: sctpAttrs[1] /* protocol */\\n        });\\n\\n        // Optional stream count attribute\\n        if (sctpAttrs.length > 2) {\\n            elem.attrs({ streams: sctpAttrs[2] });\\n        }\\n        elem.up();\\n    }\\n\\n    // XEP-0320\\n    const fingerprints\\n        = SDPUtil.findLines(\\n            this.media[mediaindex],\\n            'a=fingerprint:',\\n            this.session);\\n\\n    fingerprints.forEach(line => {\\n        tmp = SDPUtil.parseFingerprint(line);\\n        tmp.xmlns = 'urn:xmpp:jingle:apps:dtls:0';\\n        elem.c('fingerprint').t(tmp.fingerprint);\\n        delete tmp.fingerprint;\\n\\n        // eslint-disable-next-line no-param-reassign\\n        line\\n            = SDPUtil.findLine(\\n                self.media[mediaindex],\\n                'a=setup:',\\n                self.session);\\n        if (line) {\\n            tmp.setup = line.substr(8);\\n        }\\n        elem.attrs(tmp);\\n        elem.up(); // end of fingerprint\\n    });\\n    tmp = SDPUtil.iceparams(this.media[mediaindex], this.session);\\n    if (tmp) {\\n        tmp.xmlns = 'urn:xmpp:jingle:transports:ice-udp:1';\\n        elem.attrs(tmp);\\n\\n        // XEP-0176\\n        const lines\\n            = SDPUtil.findLines(\\n                this.media[mediaindex],\\n                'a=candidate:',\\n                this.session);\\n\\n        if (lines.length) { // add any a=candidate lines\\n            lines.forEach(line => {\\n                const candidate = SDPUtil.candidateToJingle(line);\\n\\n                if (self.failICE) {\\n                    candidate.ip = '1.1.1.1';\\n                }\\n                const protocol\\n                    = candidate && typeof candidate.protocol === 'string'\\n                        ? candidate.protocol.toLowerCase()\\n                        : '';\\n\\n                if ((self.removeTcpCandidates\\n                        && (protocol === 'tcp' || protocol === 'ssltcp'))\\n                    || (self.removeUdpCandidates && protocol === 'udp')) {\\n                    return;\\n                }\\n                elem.c('candidate', candidate).up();\\n            });\\n        }\\n    }\\n    elem.up(); // end of transport\\n};\\n\\n// XEP-0293\\nSDP.prototype.rtcpFbToJingle = function(mediaindex, elem, payloadtype) {\\n    const lines\\n        = SDPUtil.findLines(\\n            this.media[mediaindex],\\n            `a=rtcp-fb:${payloadtype}`);\\n\\n    lines.forEach(line => {\\n        const tmp = SDPUtil.parseRTCPFB(line);\\n\\n        if (tmp.type === 'trr-int') {\\n            elem.c('rtcp-fb-trr-int', {\\n                xmlns: 'urn:xmpp:jingle:apps:rtp:rtcp-fb:0',\\n                value: tmp.params[0]\\n            });\\n            elem.up();\\n        } else {\\n            elem.c('rtcp-fb', {\\n                xmlns: 'urn:xmpp:jingle:apps:rtp:rtcp-fb:0',\\n                type: tmp.type\\n            });\\n            if (tmp.params.length > 0) {\\n                elem.attrs({ 'subtype': tmp.params[0] });\\n            }\\n            elem.up();\\n        }\\n    });\\n};\\n\\nSDP.prototype.rtcpFbFromJingle = function(elem, payloadtype) { // XEP-0293\\n    let media = '';\\n    let tmp\\n        = elem.find(\\n            '>rtcp-fb-trr-int[xmlns=\\\"urn:xmpp:jingle:apps:rtp:rtcp-fb:0\\\"]');\\n\\n    if (tmp.length) {\\n        media += 'a=rtcp-fb:* trr-int ';\\n        if (tmp.attr('value')) {\\n            media += tmp.attr('value');\\n        } else {\\n            media += '0';\\n        }\\n        media += '\\\\r\\\\n';\\n    }\\n    tmp = elem.find('>rtcp-fb[xmlns=\\\"urn:xmpp:jingle:apps:rtp:rtcp-fb:0\\\"]');\\n    tmp.each(function() {\\n        /* eslint-disable no-invalid-this */\\n        media += `a=rtcp-fb:${payloadtype} ${$(this).attr('type')}`;\\n        if ($(this).attr('subtype')) {\\n            media += ` ${$(this).attr('subtype')}`;\\n        }\\n        media += '\\\\r\\\\n';\\n\\n        /* eslint-enable no-invalid-this */\\n    });\\n\\n    return media;\\n};\\n\\n// construct an SDP from a jingle stanza\\nSDP.prototype.fromJingle = function(jingle) {\\n    const self = this;\\n\\n    this.raw = 'v=0\\\\r\\\\n'\\n        + 'o=- 1923518516 2 IN IP4 0.0.0.0\\\\r\\\\n'// FIXME\\n        + 's=-\\\\r\\\\n'\\n        + 't=0 0\\\\r\\\\n';\\n\\n    // http://tools.ietf.org/html/draft-ietf-mmusic-sdp-bundle-negotiation-04\\n    // #section-8\\n    const groups\\n        = $(jingle).find('>group[xmlns=\\\"urn:xmpp:jingle:apps:grouping:0\\\"]');\\n\\n    if (groups.length) {\\n        groups.each((idx, group) => {\\n            const contents\\n                = $(group)\\n                    .find('>content')\\n                    .map((_, content) => content.getAttribute('name'))\\n                    .get();\\n\\n            if (contents.length > 0) {\\n                self.raw\\n                    += `a=group:${\\n                        group.getAttribute('semantics')\\n                            || group.getAttribute('type')} ${\\n                        contents.join(' ')}\\\\r\\\\n`;\\n            }\\n        });\\n    }\\n\\n    this.session = this.raw;\\n    jingle.find('>content').each(function() {\\n        // eslint-disable-next-line no-invalid-this\\n        const m = self.jingle2media($(this));\\n\\n        self.media.push(m);\\n    });\\n\\n    // reconstruct msid-semantic -- apparently not necessary\\n    /*\\n     var msid = SDPUtil.parseSSRC(this.raw);\\n     if (msid.hasOwnProperty('mslabel')) {\\n     this.session += \\\"a=msid-semantic: WMS \\\" + msid.mslabel + \\\"\\\\r\\\\n\\\";\\n     }\\n     */\\n\\n    this.raw = this.session + this.media.join('');\\n};\\n\\n// translate a jingle content element into an an SDP media part\\nSDP.prototype.jingle2media = function(content) {\\n    const desc = content.find('description');\\n    let media = '';\\n    const self = this;\\n    const sctp = content.find(\\n        '>transport>sctpmap[xmlns=\\\"urn:xmpp:jingle:transports:dtls-sctp:1\\\"]');\\n\\n    let tmp = { media: desc.attr('media') };\\n\\n    tmp.port = '1';\\n    if (content.attr('senders') === 'rejected') {\\n        // estos hack to reject an m-line.\\n        tmp.port = '0';\\n    }\\n    if (content.find('>transport>fingerprint').length\\n            || desc.find('encryption').length) {\\n        tmp.proto = sctp.length ? 'DTLS/SCTP' : 'RTP/SAVPF';\\n    } else {\\n        tmp.proto = 'RTP/AVPF';\\n    }\\n    if (sctp.length) {\\n        media += `m=application ${tmp.port} DTLS/SCTP ${\\n            sctp.attr('number')}\\\\r\\\\n`;\\n        media += `a=sctpmap:${sctp.attr('number')} ${sctp.attr('protocol')}`;\\n\\n        const streamCount = sctp.attr('streams');\\n\\n        if (streamCount) {\\n            media += ` ${streamCount}\\\\r\\\\n`;\\n        } else {\\n            media += '\\\\r\\\\n';\\n        }\\n    } else {\\n        tmp.fmt\\n            = desc\\n                .find('payload-type')\\n                .map(function() {\\n                    // eslint-disable-next-line no-invalid-this\\n                    return this.getAttribute('id');\\n                })\\n                .get();\\n        media += `${SDPUtil.buildMLine(tmp)}\\\\r\\\\n`;\\n    }\\n\\n    media += 'c=IN IP4 0.0.0.0\\\\r\\\\n';\\n    if (!sctp.length) {\\n        media += 'a=rtcp:1 IN IP4 0.0.0.0\\\\r\\\\n';\\n    }\\n    tmp\\n        = content.find(\\n            '>transport[xmlns=\\\"urn:xmpp:jingle:transports:ice-udp:1\\\"]');\\n    if (tmp.length) {\\n        if (tmp.attr('ufrag')) {\\n            media += `${SDPUtil.buildICEUfrag(tmp.attr('ufrag'))}\\\\r\\\\n`;\\n        }\\n        if (tmp.attr('pwd')) {\\n            media += `${SDPUtil.buildICEPwd(tmp.attr('pwd'))}\\\\r\\\\n`;\\n        }\\n        tmp.find('>fingerprint').each(function() {\\n            /* eslint-disable no-invalid-this */\\n            // FIXME: check namespace at some point\\n            media += `a=fingerprint:${this.getAttribute('hash')}`;\\n            media += ` ${$(this).text()}`;\\n            media += '\\\\r\\\\n';\\n            if (this.getAttribute('setup')) {\\n                media += `a=setup:${this.getAttribute('setup')}\\\\r\\\\n`;\\n            }\\n\\n            /* eslint-enable no-invalid-this */\\n        });\\n    }\\n    switch (content.attr('senders')) {\\n    case 'initiator':\\n        media += 'a=sendonly\\\\r\\\\n';\\n        break;\\n    case 'responder':\\n        media += 'a=recvonly\\\\r\\\\n';\\n        break;\\n    case 'none':\\n        media += 'a=inactive\\\\r\\\\n';\\n        break;\\n    case 'both':\\n        media += 'a=sendrecv\\\\r\\\\n';\\n        break;\\n    }\\n    media += `a=mid:${content.attr('name')}\\\\r\\\\n`;\\n\\n    // <description><rtcp-mux/></description>\\n    // see http://code.google.com/p/libjingle/issues/detail?id=309 -- no spec\\n    // though\\n    // and http://mail.jabber.org/pipermail/jingle/2011-December/001761.html\\n    if (desc.find('rtcp-mux').length) {\\n        media += 'a=rtcp-mux\\\\r\\\\n';\\n    }\\n\\n    if (desc.find('encryption').length) {\\n        desc.find('encryption>crypto').each(function() {\\n            /* eslint-disable no-invalid-this */\\n            media += `a=crypto:${this.getAttribute('tag')}`;\\n            media += ` ${this.getAttribute('crypto-suite')}`;\\n            media += ` ${this.getAttribute('key-params')}`;\\n            if (this.getAttribute('session-params')) {\\n                media += ` ${this.getAttribute('session-params')}`;\\n            }\\n            media += '\\\\r\\\\n';\\n\\n            /* eslint-enable no-invalid-this */\\n        });\\n    }\\n    desc.find('payload-type').each(function() {\\n        /* eslint-disable no-invalid-this */\\n        media += `${SDPUtil.buildRTPMap(this)}\\\\r\\\\n`;\\n        if ($(this).find('>parameter').length) {\\n            media += `a=fmtp:${this.getAttribute('id')} `;\\n            media\\n                += $(this)\\n                    .find('parameter')\\n                    .map(function() {\\n                        const name = this.getAttribute('name');\\n\\n                        return (\\n                            (name ? `${name}=` : '')\\n                                + this.getAttribute('value'));\\n                    })\\n                    .get()\\n                    .join('; ');\\n            media += '\\\\r\\\\n';\\n        }\\n\\n        // xep-0293\\n        media += self.rtcpFbFromJingle($(this), this.getAttribute('id'));\\n\\n        /* eslint-enable no-invalid-this */\\n    });\\n\\n    // xep-0293\\n    media += self.rtcpFbFromJingle(desc, '*');\\n\\n    // xep-0294\\n    tmp\\n        = desc.find(\\n            '>rtp-hdrext[xmlns=\\\"urn:xmpp:jingle:apps:rtp:rtp-hdrext:0\\\"]');\\n    tmp.each(function() {\\n        /* eslint-disable no-invalid-this */\\n        media\\n            += `a=extmap:${this.getAttribute('id')} ${\\n                this.getAttribute('uri')}\\\\r\\\\n`;\\n\\n        /* eslint-enable no-invalid-this */\\n    });\\n\\n    content\\n        .find(\\n            '>transport[xmlns=\\\"urn:xmpp:jingle:transports:ice-udp:1\\\"]'\\n                + '>candidate')\\n        .each(function() {\\n            /* eslint-disable no-invalid-this */\\n            let protocol = this.getAttribute('protocol');\\n\\n            protocol\\n                = typeof protocol === 'string' ? protocol.toLowerCase() : '';\\n\\n            if ((self.removeTcpCandidates\\n                    && (protocol === 'tcp' || protocol === 'ssltcp'))\\n                || (self.removeUdpCandidates && protocol === 'udp')) {\\n                return;\\n            } else if (self.failICE) {\\n                this.setAttribute('ip', '1.1.1.1');\\n            }\\n\\n            media += SDPUtil.candidateFromJingle(this);\\n\\n            /* eslint-enable no-invalid-this */\\n        });\\n\\n    // XEP-0339 handle ssrc-group attributes\\n    content\\n        .find('description>ssrc-group[xmlns=\\\"urn:xmpp:jingle:apps:rtp:ssma:0\\\"]')\\n        .each(function() {\\n            /* eslint-disable no-invalid-this */\\n            const semantics = this.getAttribute('semantics');\\n            const ssrcs\\n                = $(this)\\n                    .find('>source')\\n                    .map(function() {\\n                        return this.getAttribute('ssrc');\\n                    })\\n                    .get();\\n\\n            if (ssrcs.length) {\\n                media += `a=ssrc-group:${semantics} ${ssrcs.join(' ')}\\\\r\\\\n`;\\n            }\\n\\n            /* eslint-enable no-invalid-this */\\n        });\\n\\n    tmp\\n        = content.find(\\n            'description>source[xmlns=\\\"urn:xmpp:jingle:apps:rtp:ssma:0\\\"]');\\n    tmp.each(function() {\\n        /* eslint-disable no-invalid-this */\\n        const ssrc = this.getAttribute('ssrc');\\n\\n        // eslint-disable-next-line newline-per-chained-call\\n        $(this).find('>parameter').each(function() {\\n            const name = this.getAttribute('name');\\n            let value = this.getAttribute('value');\\n\\n            value = SDPUtil.filterSpecialChars(value);\\n            media += `a=ssrc:${ssrc} ${name}`;\\n            if (value && value.length) {\\n                media += `:${value}`;\\n            }\\n            media += '\\\\r\\\\n';\\n        });\\n\\n        /* eslint-enable no-invalid-this */\\n    });\\n\\n    return media;\\n};\\n\",\"// TODO: Maybe fix the values to 'Chrome', 'Internet Explorer', etc. Currently\\n// this values needs to be as they are becuse they are going to analytics,\\n// callstats, etc.\\n\\nexport const CHROME = 'chrome';\\n\\nexport const OPERA = 'opera';\\n\\nexport const FIREFOX = 'firefox';\\n\\nexport const INTERNET_EXPLORER = 'iexplorer';\\n\\nexport const EDGE = 'edge';\\n\\nexport const SAFARI = 'safari';\\n\\nexport const NWJS = 'nwjs';\\n\\nexport const ELECTRON = 'electron';\\n\\nexport const REACT_NATIVE = 'react-native';\\n\\nexport const UNKNOWN = 'unknown';\\n\",\"import bowser from 'bowser';\\n\\nimport {\\n    CHROME,\\n    OPERA,\\n    FIREFOX,\\n    INTERNET_EXPLORER,\\n    EDGE,\\n    SAFARI,\\n    NWJS,\\n    ELECTRON,\\n    REACT_NATIVE,\\n    UNKNOWN\\n} from './browsers';\\n\\n/**\\n * Maps the names of the browsers from bowser to the internal names defined in\\n * ./browsers.js\\n */\\nconst bowserNameToJitsiName = {\\n    'Chrome': CHROME,\\n    'Chromium': CHROME,\\n    'Opera': OPERA,\\n    'Firefox': FIREFOX,\\n    'Internet Explorer': INTERNET_EXPLORER,\\n    'Microsoft Edge': EDGE,\\n    'Safari': SAFARI\\n};\\n\\n/**\\n * Detects a Chromium based environent.\\n * \\n * NOTE: Here we cannot check solely for \\\"Chrome\\\" in the UA string and the\\n * \\\"window.chrome\\\" property, because Edge has both, so we add an explicit\\n * check for NOT Edge.\\n *\\n * @returns {Object|undefined} - The name (CHROME) and version.\\n */\\nfunction _detectChromiumBased() {\\n    const userAgent = navigator.userAgent;\\n\\n    if (Boolean(window.chrome)\\n            && !userAgent.match(/Edge/) && userAgent.match(/Chrome/)) {\\n        const version = userAgent.match(/Chrome\\\\/([\\\\d.]+)/)[1];\\n\\n        return {\\n            name: CHROME,\\n            version\\n        };\\n    }\\n}\\n\\n/**\\n * Detects Electron environment.\\n *\\n * @returns {Object|undefined} - The name (ELECTRON) and version.\\n */\\nfunction _detectElectron() {\\n    const userAgent = navigator.userAgent;\\n\\n    if (userAgent.match(/Electron/)) {\\n        const version = userAgent.match(/Electron\\\\/([\\\\d.]+)/)[1];\\n\\n        return {\\n            name: ELECTRON,\\n            version\\n        };\\n    }\\n}\\n\\n/**\\n * Detects NWJS environment.\\n *\\n * @returns {Object|undefined} - The name (NWJS) and version.\\n */\\nfunction _detectNWJS() {\\n    const userAgent = navigator.userAgent;\\n\\n    if (userAgent.match(/JitsiMeetNW/)) {\\n        const version = userAgent.match(/JitsiMeetNW\\\\/([\\\\d.]+)/)[1];\\n\\n        return {\\n            name: NWJS,\\n            version\\n        };\\n    }\\n}\\n\\n/**\\n * Detects React Native environment.\\n * @returns {Object|undefined} - The name (REACT_NATIVE) and version.\\n */\\nfunction _detectReactNative() {\\n    const match\\n        = navigator.userAgent.match(/\\\\b(react[ \\\\t_-]*native)(?:\\\\/(\\\\S+))?/i);\\n    let version;\\n\\n    // If we're remote debugging a React Native app, it may be treated as\\n    // Chrome. Check navigator.product as well and always return some version\\n    // even if we can't get the real one.\\n\\n    if (match || navigator.product === 'ReactNative') {\\n        let name;\\n\\n        if (match && match.length > 2) {\\n            name = match[1];\\n            version = match[2];\\n        }\\n        name || (name = 'react-native');\\n        version || (version = 'unknown');\\n\\n        return {\\n            name: REACT_NATIVE,\\n            version\\n        };\\n    }\\n}\\n\\n/**\\n * Returns information about the current browser.\\n *\\n * @returns {Object} - The name and version of the browser.\\n */\\nfunction _detect() {\\n    let browserInfo;\\n    const detectors = [\\n        _detectReactNative,\\n        _detectElectron,\\n        _detectNWJS\\n    ];\\n\\n    // Try all browser detectors\\n    for (let i = 0; i < detectors.length; i++) {\\n        browserInfo = detectors[i]();\\n        if (browserInfo) {\\n            return browserInfo;\\n        }\\n    }\\n\\n    const { name, version } = bowser;\\n\\n    if (name in bowserNameToJitsiName) {\\n        return {\\n            name: bowserNameToJitsiName[name],\\n            version\\n        };\\n    }\\n\\n    // Detect other browsers with the Chrome engine, such as Vivaldi.\\n    browserInfo = _detectChromiumBased();\\n    if (browserInfo) {\\n        return browserInfo;\\n    }\\n\\n    return {\\n        name: UNKNOWN,\\n        version: undefined\\n    };\\n}\\n\\n/**\\n * Implements browser detection.\\n */\\nexport default class BrowserDetection {\\n    /**\\n     * Creates new BrowserDetection instance.\\n     *\\n     * @param {Object} [browserInfo] - Information about the browser.\\n     * @param {string} browserInfo.name - The name of the browser.\\n     * @param {string} browserInfo.version - The version of the browser.\\n     */\\n    constructor(browserInfo) {\\n        let name, version;\\n\\n        if (typeof browserInfo === 'undefined') {\\n            const detectedBrowserInfo = _detect();\\n\\n            name = detectedBrowserInfo.name;\\n            version = detectedBrowserInfo.version;\\n        } else if (browserInfo.name in bowserNameToJitsiName) {\\n            name = bowserNameToJitsiName[browserInfo.name];\\n            version = browserInfo.version;\\n        } else {\\n            name = UNKNOWN;\\n            version = undefined;\\n        }\\n\\n        this._name = name;\\n        this._version = version;\\n    }\\n\\n    /**\\n     * Gets current browser name.\\n     * @returns {string}\\n     */\\n    getName() {\\n        return this._name;\\n    }\\n\\n    /**\\n     * Checks if current browser is Chrome.\\n     * @returns {boolean}\\n     */\\n    isChrome() {\\n        return this._name === CHROME;\\n    }\\n\\n    /**\\n     * Checks if current browser is Opera.\\n     * @returns {boolean}\\n     */\\n    isOpera() {\\n        return this._name === OPERA;\\n    }\\n\\n    /**\\n     * Checks if current browser is Firefox.\\n     * @returns {boolean}\\n     */\\n    isFirefox() {\\n        return this._name === FIREFOX;\\n    }\\n\\n    /**\\n     * Checks if current browser is Internet Explorer.\\n     * @returns {boolean}\\n     */\\n    isIExplorer() {\\n        return this._name === INTERNET_EXPLORER;\\n    }\\n\\n    /**\\n     * Checks if current browser is Microsoft Edge.\\n     * @returns {boolean}\\n     */\\n    isEdge() {\\n        return this._name === EDGE;\\n    }\\n\\n    /**\\n     * Checks if current browser is Safari.\\n     * @returns {boolean}\\n     */\\n    isSafari() {\\n        return this._name === SAFARI;\\n    }\\n\\n    /**\\n     * Checks if current environment is NWJS.\\n     * @returns {boolean}\\n     */\\n    isNWJS() {\\n        return this._name === NWJS;\\n    }\\n\\n    /**\\n     * Checks if current environment is Electron.\\n     * @returns {boolean}\\n     */\\n    isElectron() {\\n        return this._name === ELECTRON;\\n    }\\n\\n    /**\\n     * Checks if current environment is React Native.\\n     * @returns {boolean}\\n     */\\n    isReactNative() {\\n        return this._name === REACT_NATIVE;\\n    }\\n\\n    /**\\n     * Returns the version of the current browser.\\n     * @returns {string}\\n     */\\n    getVersion() {\\n        return this._version;\\n    }\\n\\n    /**\\n     * Compares the passed version with the current browser version.\\n     * {@see https://github.com/lancedikson/bowser}\\n     */\\n    static compareVersions = bowser.compareVersions;\\n\\n    /**\\n     * Compares the passed version with the current browser version.\\n     *\\n     * @param {*} version - The version to compare with. Anything different\\n     * than string will be converted to string.\\n     * @returns {number|undefined} - Returns 0 if the version is equal to the\\n     * current one, 1 if the version is greater than the current one, -1 if the\\n     * version is lower than the current one and undefined if the current\\n     * browser version is unknown.\\n     */\\n    compareVersion(version) {\\n        if (this._version) {\\n            return bowser.compareVersions([ String(version), this._version ]);\\n        }\\n    }\\n\\n    /**\\n     * Compares the passed version with the current browser version.\\n     *\\n     * @param {*} version - The version to compare with. Anything different\\n     * than string will be converted to string.\\n     * @returns {boolean|undefined} - Returns true if the current version is\\n     * greater than the passed version and false otherwise. Returns undefined if\\n     * the current browser version is unknown.\\n     */\\n    isVersionGreaterThan(version) {\\n        return this.compareVersion(version) === -1;\\n    }\\n\\n    /**\\n     * Compares the passed version with the current browser version.\\n     *\\n     * @param {*} version - The version to compare with. Anything different\\n     * than string will be converted to string.\\n     * @returns {boolean|undefined} - Returns true if the current version is\\n     * lower than the passed version and false otherwise. Returns undefined if\\n     * the current browser version is unknown.\\n     */\\n    isVersionLessThan(version) {\\n        return this.compareVersion(version) === 1;\\n    }\\n\\n    /**\\n     * Compares the passed version with the current browser version.\\n     *\\n     * @param {*} version - The version to compare with. Anything different\\n     * than string will be converted to string.\\n     * @returns {boolean|undefined} - Returns true if the current version is\\n     * equal to the passed version and false otherwise. Returns undefined if\\n     * the current browser version is unknown.\\n     */\\n    isVersionEqualTo(version) {\\n        return this.compareVersion(version) === 0;\\n    }\\n}\\n\",\"export * from './browser-capabilities';\\nexport * from './browser-detection';\\nexport * from './avatar';\\n\",\"/**\\n * Status that video SIP GW service is available.\\n * @type {string}\\n */\\nexport const STATUS_AVAILABLE = 'available';\\n\\n/**\\n * Status that video SIP GW service is not available.\\n * @type {string}\\n */\\nexport const STATUS_UNDEFINED = 'undefined';\\n\\n/**\\n * Status that video SIP GW service is available but there are no free nodes\\n * at the moment to serve new requests.\\n * @type {string}\\n */\\nexport const STATUS_BUSY = 'busy';\\n\\n/**\\n * Video SIP GW session state, currently running.\\n * @type {string}\\n */\\nexport const STATE_ON = 'on';\\n\\n/**\\n * Video SIP GW session state, currently stopped and not running.\\n * @type {string}\\n */\\nexport const STATE_OFF = 'off';\\n\\n/**\\n * Video SIP GW session state, currently is starting.\\n * @type {string}\\n */\\nexport const STATE_PENDING = 'pending';\\n\\n/**\\n * Video SIP GW session state, has observed some issues and is retrying at the\\n * moment.\\n * @type {string}\\n */\\nexport const STATE_RETRYING = 'retrying';\\n\\n/**\\n * Video SIP GW session state, tried to start but it failed.\\n * @type {string}\\n */\\nexport const STATE_FAILED = 'failed';\\n\\n/**\\n * Error on trying to create video SIP GW session in conference where\\n * there is no room connection (hasn't joined or has left the room).\\n * @type {string}\\n */\\nexport const ERROR_NO_CONNECTION = 'error_no_connection';\\n\\n/**\\n * Error on trying to create video SIP GW session with address for which\\n * there is an already created session.\\n * @type {string}\\n */\\nexport const ERROR_SESSION_EXISTS = 'error_session_already_exists';\\n\",\"/**\\n * The errors for the conference.\\n */\\n\\n/**\\n * Indicates that client must be authenticated to create the conference.\\n */\\nexport const AUTHENTICATION_REQUIRED = 'conference.authenticationRequired';\\n\\n/**\\n * Indicates that chat error occurred.\\n */\\nexport const CHAT_ERROR = 'conference.chatError';\\n\\n/**\\n * Indicates that conference has been destroyed.\\n */\\nexport const CONFERENCE_DESTROYED = 'conference.destroyed';\\n\\n/**\\n * Indicates that max users limit has been reached.\\n */\\nexport const CONFERENCE_MAX_USERS = 'conference.max_users';\\n\\n/**\\n * Indicates that a connection error occurred when trying to join a conference.\\n */\\nexport const CONNECTION_ERROR = 'conference.connectionError';\\n\\n/**\\n * Indicates that a connection error is due to not allowed,\\n * occurred when trying to join a conference.\\n */\\nexport const NOT_ALLOWED_ERROR = 'conference.connectionError.notAllowed';\\n\\n/**\\n * Indicates that focus error happened.\\n */\\nexport const FOCUS_DISCONNECTED = 'conference.focusDisconnected';\\n\\n/**\\n * Indicates that focus left the conference.\\n */\\nexport const FOCUS_LEFT = 'conference.focusLeft';\\n\\n/**\\n * Indicates that graceful shutdown happened.\\n */\\nexport const GRACEFUL_SHUTDOWN = 'conference.gracefulShutdown';\\n\\n/**\\n * Indicates that the versions of the server side components are incompatible\\n * with the client side.\\n */\\nexport const INCOMPATIBLE_SERVER_VERSIONS\\n    = 'conference.incompatible_server_versions';\\n\\n/**\\n * Indicates that jingle fatal error happened.\\n */\\nexport const JINGLE_FATAL_ERROR = 'conference.jingleFatalError';\\n\\n/**\\n * Indicates that password cannot be set for this conference.\\n */\\nexport const PASSWORD_NOT_SUPPORTED = 'conference.passwordNotSupported';\\n\\n/**\\n * Indicates that a password is required in order to join the conference.\\n */\\nexport const PASSWORD_REQUIRED = 'conference.passwordRequired';\\n\\n/**\\n * Indicates that reservation system returned error.\\n */\\nexport const RESERVATION_ERROR = 'conference.reservationError';\\n\\n/**\\n * Indicates that the conference setup failed.\\n */\\nexport const SETUP_FAILED = 'conference.setup_failed';\\n\\n/**\\n * Indicates that there is no available videobridge.\\n */\\nexport const VIDEOBRIDGE_NOT_AVAILABLE = 'conference.videobridgeNotAvailable';\\n\",\"/**\\n * The events for the connection.\\n */\\n\\n/**\\n * Indicates that the connection has been disconnected. The event provides\\n * the following parameters to its listeners:\\n *\\n * @param msg {string} a message associated with the disconnect such as the\\n * last (known) error message\\n */\\nexport const CONNECTION_DISCONNECTED = 'connection.connectionDisconnected';\\n\\n/**\\n * Indicates that the connection has been established. The event provides\\n * the following parameters to its listeners:\\n *\\n * @param id {string} the ID of the local endpoint/participant/peer (within\\n * the context of the established connection)\\n */\\nexport const CONNECTION_ESTABLISHED = 'connection.connectionEstablished';\\n\\n/**\\n * Indicates that the connection has been failed for some reason. The event\\n * provides the following parameters to its listeners:\\n *\\n * @param errType {JitsiConnectionErrors} the type of error associated with\\n * the failure\\n * @param errReason {string} the error (message) associated with the failure\\n * @param credentials {object} the credentials used to connect (if any)\\n * @param errReasonDetails {object} an optional object with details about\\n * the error, like shard moving, suspending. Used for analytics purposes.\\n */\\nexport const CONNECTION_FAILED = 'connection.connectionFailed';\\n\\n/**\\n * Indicates that the performed action cannot be executed because the\\n * connection is not in the correct state(connected, disconnected, etc.)\\n */\\nexport const WRONG_STATE = 'connection.wrongState';\\n\",\"/**\\n * Notifies about audio level in RTP statistics by SSRC.\\n *\\n * @param ssrc - The synchronization source identifier (SSRC) of the\\n * endpoint/participant whose audio level is being reported.\\n * @param {number} audioLevel - The audio level of <tt>ssrc</tt> according to\\n * RTP statistics.\\n * @param {boolean} isLocal - <tt>true</tt> if <tt>ssrc</tt> identifies the\\n * local endpoint/participant; otherwise, <tt>false</tt>.\\n */\\nexport const AUDIO_LEVEL = 'statistics.audioLevel';\\n\\n/**\\n * An event fired just before the statistics module gets disposes and it's\\n * the last chance to submit some logs that will end up in stats services like\\n * CallStats (if enabled).\\n */\\nexport const BEFORE_DISPOSED = 'statistics.before_disposed';\\n\\n/**\\n * An event carrying all statistics by ssrc.\\n */\\nexport const BYTE_SENT_STATS = 'statistics.byte_sent_stats';\\n\\n/**\\n * An event carrying connection statistics.\\n *\\n * @param {object} connectionStats - The connection statistics carried by the\\n * event such as <tt>bandwidth</tt>, <tt>bitrate</tt>, <tt>packetLoss</tt>,\\n * <tt>resolution</tt>, and <tt>transport</tt>.\\n */\\nexport const CONNECTION_STATS = 'statistics.connectionstats';\\n\",\"import EventEmitter from 'events';\\n\\n/**\\n * The class implements basic event operations - add/remove listener.\\n * NOTE: The purpose of the class is to be extended in order to add\\n * this functionality to other classes.\\n */\\nexport default class Listenable {\\n    /**\\n     * Creates new instance.\\n     * @param {EventEmitter} eventEmitter\\n     * @constructor\\n     */\\n    constructor(eventEmitter = new EventEmitter()) {\\n        this.eventEmitter = eventEmitter;\\n\\n        // aliases for addListener/removeListener\\n        this.addEventListener = this.on = this.addListener;\\n        this.removeEventListener = this.off = this.removeListener;\\n    }\\n\\n    /**\\n     * Adds new listener.\\n     * @param {String} eventName the name of the event\\n     * @param {Function} listener the listener.\\n     */\\n    addListener(eventName, listener) {\\n        this.eventEmitter.addListener(eventName, listener);\\n    }\\n\\n    /**\\n     * Removes listener.\\n     * @param {String} eventName the name of the event that triggers the\\n     * listener\\n     * @param {Function} listener the listener.\\n     */\\n    removeListener(eventName, listener) {\\n        this.eventEmitter.removeListener(eventName, listener);\\n    }\\n}\\n\",\"import { getLogger } from 'jitsi-meet-logger';\\nconst logger = getLogger(__filename);\\n\\nimport UsernameGenerator from '../util/UsernameGenerator';\\n\\nlet _callStatsUserName;\\n\\nlet _machineId;\\n\\n/**\\n *\\n */\\nexport default {\\n    /**\\n     * Returns fake username for callstats\\n     * @returns {string} fake username for callstats\\n     */\\n    get callStatsUserName() {\\n        if (!_callStatsUserName) {\\n            const localStorage = getLocalStorage();\\n\\n            if (localStorage) {\\n                _callStatsUserName = localStorage.getItem('callStatsUserName');\\n            }\\n            if (!_callStatsUserName) {\\n                _callStatsUserName = generateCallStatsUserName();\\n                if (localStorage) {\\n                    localStorage.setItem(\\n                        'callStatsUserName',\\n                        _callStatsUserName);\\n                }\\n            }\\n        }\\n\\n        return _callStatsUserName;\\n    },\\n\\n    /**\\n     * Returns current machine id.\\n     * @returns {string} machine id\\n     */\\n    get machineId() {\\n        if (!_machineId) {\\n            const localStorage = getLocalStorage();\\n\\n            if (localStorage) {\\n                _machineId = localStorage.getItem('jitsiMeetId');\\n            }\\n            if (!_machineId) {\\n                _machineId = generateJitsiMeetId();\\n                if (localStorage) {\\n                    localStorage.setItem('jitsiMeetId', _machineId);\\n                }\\n            }\\n        }\\n\\n        return _machineId;\\n    },\\n\\n    /**\\n     * Returns current session id.\\n     * @returns {string} current session id\\n     */\\n    get sessionId() {\\n        // We may update sessionId in localStorage from another JitsiConference\\n        // instance and that's why we should always re-read it.\\n        const localStorage = getLocalStorage();\\n\\n        return localStorage ? localStorage.getItem('sessionId') : undefined;\\n    },\\n\\n    /**\\n     * Save current session id.\\n     * @param {string} sessionId session id\\n     */\\n    set sessionId(sessionId) {\\n        const localStorage = getLocalStorage();\\n\\n        if (localStorage) {\\n            if (sessionId) {\\n                localStorage.setItem('sessionId', sessionId);\\n            } else {\\n                localStorage.removeItem('sessionId');\\n            }\\n        }\\n    }\\n};\\n\\n/**\\n * Generate fake username for callstats.\\n * @returns {string} fake random username\\n */\\nfunction generateCallStatsUserName() {\\n    const username = UsernameGenerator.generateUsername();\\n\\n    logger.log('generated callstats uid', username);\\n\\n    return username;\\n}\\n\\n/**\\n * Generate unique id.\\n * @returns {string} random unique id\\n */\\nfunction generateJitsiMeetId() {\\n    const jitsiMeetId = generateUniqueId();\\n\\n    logger.log('generated id', jitsiMeetId);\\n\\n    return jitsiMeetId;\\n}\\n\\n/**\\n * Gets the localStorage of the browser. (Technically, gets the localStorage of\\n * the global object because there may be no browser but React Native for\\n * example).\\n * @returns {Storage} the local Storage object (if any)\\n */\\nfunction getLocalStorage() {\\n    let storage;\\n\\n    try {\\n        // eslint-disable-next-line no-invalid-this\\n        storage = (window || this).localStorage;\\n    } catch (error) {\\n        logger.error(error);\\n    }\\n\\n    return storage;\\n}\\n\\n/**\\n *\\n */\\nfunction generateUniqueId() {\\n    return _p8() + _p8() + _p8() + _p8();\\n}\\n\\n/**\\n *\\n */\\nfunction _p8() {\\n    return `${Math.random().toString(16)}000000000`.substr(2, 8);\\n}\\n\",\"/* global RTCRtpReceiver */\\n\\nimport sdpTransform from 'sdp-transform';\\n\\n/**\\n * Extract RTP capabilities from remote description.\\n * @param {Object} sdpObject - Remote SDP object generated by sdp-transform.\\n * @return {RTCRtpCapabilities}\\n */\\nexport function extractCapabilities(sdpObject) {\\n    // Map of RtpCodecParameters indexed by payload type.\\n    const codecsMap = new Map();\\n\\n    // Array of RtpHeaderExtensions.\\n    const headerExtensions = [];\\n\\n    for (const m of sdpObject.media) {\\n        // Media kind.\\n        const kind = m.type;\\n\\n        if (kind !== 'audio' && kind !== 'video') {\\n            continue; // eslint-disable-line no-continue\\n        }\\n\\n        // Get codecs.\\n        for (const rtp of m.rtp) {\\n            const codec = {\\n                clockRate: rtp.rate,\\n                kind,\\n                mimeType: `${kind}/${rtp.codec}`,\\n                name: rtp.codec,\\n                numChannels: rtp.encoding || 1,\\n                parameters: {},\\n                preferredPayloadType: rtp.payload,\\n                rtcpFeedback: []\\n            };\\n\\n            codecsMap.set(codec.preferredPayloadType, codec);\\n        }\\n\\n        // Get codec parameters.\\n        for (const fmtp of m.fmtp || []) {\\n            const parameters = sdpTransform.parseFmtpConfig(fmtp.config);\\n            const codec = codecsMap.get(fmtp.payload);\\n\\n            if (!codec) {\\n                continue; // eslint-disable-line no-continue\\n            }\\n\\n            codec.parameters = parameters;\\n        }\\n\\n        // Get RTCP feedback for each codec.\\n        for (const fb of m.rtcpFb || []) {\\n            const codec = codecsMap.get(fb.payload);\\n\\n            if (!codec) {\\n                continue; // eslint-disable-line no-continue\\n            }\\n\\n            codec.rtcpFeedback.push({\\n                parameter: fb.subtype || '',\\n                type: fb.type\\n            });\\n        }\\n\\n        // Get RTP header extensions.\\n        for (const ext of m.ext || []) {\\n            const preferredId = ext.value;\\n            const uri = ext.uri;\\n            const headerExtension = {\\n                kind,\\n                uri,\\n                preferredId\\n            };\\n\\n            // Check if already present.\\n            const duplicated = headerExtensions.find(savedHeaderExtension =>\\n                headerExtension.kind === savedHeaderExtension.kind\\n                    && headerExtension.uri === savedHeaderExtension.uri\\n            );\\n\\n            if (!duplicated) {\\n                headerExtensions.push(headerExtension);\\n            }\\n        }\\n    }\\n\\n    return {\\n        codecs: Array.from(codecsMap.values()),\\n        fecMechanisms: [], // TODO\\n        headerExtensions\\n    };\\n}\\n\\n/**\\n * Extract DTLS parameters from remote description.\\n * @param {Object} sdpObject - Remote SDP object generated by sdp-transform.\\n * @return {RTCDtlsParameters}\\n */\\nexport function extractDtlsParameters(sdpObject) {\\n    const media = getFirstActiveMediaSection(sdpObject);\\n    const fingerprint = media.fingerprint || sdpObject.fingerprint;\\n    let role;\\n\\n    switch (media.setup) {\\n    case 'active':\\n        role = 'client';\\n        break;\\n    case 'passive':\\n        role = 'server';\\n        break;\\n    case 'actpass':\\n        role = 'auto';\\n        break;\\n    }\\n\\n    return {\\n        role,\\n        fingerprints: [\\n            {\\n                algorithm: fingerprint.type,\\n                value: fingerprint.hash\\n            }\\n        ]\\n    };\\n}\\n\\n/**\\n * Extract ICE candidates from remote description.\\n * NOTE: This implementation assumes a single BUNDLEd transport and rtcp-mux.\\n * @param {Object} sdpObject - Remote SDP object generated by sdp-transform.\\n * @return {sequence<RTCIceCandidate>}\\n */\\nexport function extractIceCandidates(sdpObject) {\\n    const media = getFirstActiveMediaSection(sdpObject);\\n    const candidates = [];\\n\\n    for (const c of media.candidates) {\\n        // Ignore RTCP candidates (we assume rtcp-mux).\\n        if (c.component !== 1) {\\n            continue; // eslint-disable-line no-continue\\n        }\\n\\n        const candidate = {\\n            foundation: c.foundation,\\n            ip: c.ip,\\n            port: c.port,\\n            priority: c.priority,\\n            protocol: c.transport.toLowerCase(),\\n            type: c.type\\n        };\\n\\n        candidates.push(candidate);\\n    }\\n\\n    return candidates;\\n}\\n\\n/**\\n * Extract ICE parameters from remote description.\\n * NOTE: This implementation assumes a single BUNDLEd transport.\\n * @param {Object} sdpObject - Remote SDP object generated by sdp-transform.\\n * @return {RTCIceParameters}\\n */\\nexport function extractIceParameters(sdpObject) {\\n    const media = getFirstActiveMediaSection(sdpObject);\\n    const usernameFragment = media.iceUfrag;\\n    const password = media.icePwd;\\n    const icelite = sdpObject.icelite === 'ice-lite';\\n\\n    return {\\n        icelite,\\n        password,\\n        usernameFragment\\n    };\\n}\\n\\n/**\\n * Extract MID values from remote description.\\n * @param {Object} sdpObject - Remote SDP object generated by sdp-transform.\\n * @return {map<String, String>} Ordered Map with MID as key and kind as value.\\n */\\nexport function extractMids(sdpObject) {\\n    const midToKind = new Map();\\n\\n    // Ignore disabled media sections.\\n    for (const m of sdpObject.media) {\\n        midToKind.set(m.mid, m.type);\\n    }\\n\\n    return midToKind;\\n}\\n\\n/**\\n * Extract tracks information.\\n * @param {Object} sdpObject - Remote SDP object generated by sdp-transform.\\n * @return {Map}\\n */\\nexport function extractTrackInfos(sdpObject) {\\n    // Map with info about receiving media.\\n    // - index: Media SSRC\\n    // - value: Object\\n    //   - kind: 'audio' / 'video'\\n    //   - ssrc: Media SSRC\\n    //   - rtxSsrc: RTX SSRC (may be unset)\\n    //   - streamId: MediaStream.jitsiRemoteId\\n    //   - trackId: MediaStreamTrack.jitsiRemoteId\\n    //   - cname: CNAME\\n    // @type {map<Number, Object>}\\n    const infos = new Map();\\n\\n    // Map with stream SSRC as index and associated RTX SSRC as value.\\n    // @type {map<Number, Number>}\\n    const rtxMap = new Map();\\n\\n    // Set of RTX SSRC values.\\n    const rtxSet = new Set();\\n\\n    for (const m of sdpObject.media) {\\n        const kind = m.type;\\n\\n        if (kind !== 'audio' && kind !== 'video') {\\n            continue; // eslint-disable-line no-continue\\n        }\\n\\n        // Get RTX information.\\n        for (const ssrcGroup of m.ssrcGroups || []) {\\n            // Just consider FID.\\n            if (ssrcGroup.semantics !== 'FID') {\\n                continue; // eslint-disable-line no-continue\\n            }\\n\\n            const ssrcs\\n                = ssrcGroup.ssrcs.split(' ').map(ssrc => Number(ssrc));\\n            const ssrc = ssrcs[0];\\n            const rtxSsrc = ssrcs[1];\\n\\n            rtxMap.set(ssrc, rtxSsrc);\\n            rtxSet.add(rtxSsrc);\\n        }\\n\\n        for (const ssrcObject of m.ssrcs || []) {\\n            const ssrc = ssrcObject.id;\\n\\n            // Ignore RTX.\\n            if (rtxSet.has(ssrc)) {\\n                continue; // eslint-disable-line no-continue\\n            }\\n\\n            let info = infos.get(ssrc);\\n\\n            if (!info) {\\n                info = {\\n                    kind,\\n                    rtxSsrc: rtxMap.get(ssrc),\\n                    ssrc\\n                };\\n\\n                infos.set(ssrc, info);\\n            }\\n\\n            switch (ssrcObject.attribute) {\\n            case 'cname': {\\n                info.cname = ssrcObject.value;\\n                break;\\n            }\\n            case 'msid': {\\n                const values = ssrcObject.value.split(' ');\\n                const streamId = values[0];\\n                const trackId = values[1];\\n\\n                info.streamId = streamId;\\n                info.trackId = trackId;\\n                break;\\n            }\\n            case 'mslabel': {\\n                const streamId = ssrcObject.value;\\n\\n                info.streamId = streamId;\\n                break;\\n            }\\n            case 'label': {\\n                const trackId = ssrcObject.value;\\n\\n                info.trackId = trackId;\\n                break;\\n            }\\n            }\\n        }\\n    }\\n\\n    return infos;\\n}\\n\\n/**\\n * Get local ORTC RTP capabilities filtered and adapted to the given remote RTP\\n * capabilities.\\n * @param {RTCRtpCapabilities} filterWithCapabilities - RTP capabilities to\\n * filter with.\\n * @return {RTCRtpCapabilities}\\n */\\nexport function getLocalCapabilities(filterWithCapabilities) {\\n    const localFullCapabilities = RTCRtpReceiver.getCapabilities();\\n    const localCapabilities = {\\n        codecs: [],\\n        fecMechanisms: [],\\n        headerExtensions: []\\n    };\\n\\n    // Map of RTX and codec payloads.\\n    // - index: Codec payloadType\\n    // - value: Associated RTX payloadType\\n    // @type {map<Number, Number>}\\n    const remoteRtxMap = new Map();\\n\\n    // Set codecs.\\n    for (const remoteCodec of filterWithCapabilities.codecs) {\\n        const remoteCodecName = remoteCodec.name.toLowerCase();\\n\\n        if (remoteCodecName === 'rtx') {\\n            remoteRtxMap.set(\\n                remoteCodec.parameters.apt, remoteCodec.preferredPayloadType);\\n\\n            continue; // eslint-disable-line no-continue\\n        }\\n\\n        const localCodec = localFullCapabilities.codecs.find(codec =>\\n            codec.name.toLowerCase() === remoteCodecName\\n                && codec.kind === remoteCodec.kind\\n                && codec.clockRate === remoteCodec.clockRate\\n        );\\n\\n        if (!localCodec) {\\n            continue; // eslint-disable-line no-continue\\n        }\\n\\n        const codec = {\\n            clockRate: localCodec.clockRate,\\n            kind: localCodec.kind,\\n            mimeType: `${localCodec.kind}/${localCodec.name}`,\\n            name: localCodec.name,\\n            numChannels: localCodec.numChannels || 1,\\n            parameters: {},\\n            preferredPayloadType: remoteCodec.preferredPayloadType,\\n            rtcpFeedback: []\\n        };\\n\\n        for (const remoteParamName of Object.keys(remoteCodec.parameters)) {\\n            const remoteParamValue\\n                = remoteCodec.parameters[remoteParamName];\\n\\n            for (const localParamName of Object.keys(localCodec.parameters)) {\\n                const localParamValue\\n                    = localCodec.parameters[localParamName];\\n\\n                if (localParamName !== remoteParamName) {\\n                    continue; // eslint-disable-line no-continue\\n                }\\n\\n                // TODO: We should consider much more cases here, but Edge\\n                // does not support many codec parameters.\\n                if (localParamValue === remoteParamValue) {\\n                    // Use this RTP parameter.\\n                    codec.parameters[localParamName] = localParamValue;\\n                    break;\\n                }\\n            }\\n        }\\n\\n        for (const remoteFb of remoteCodec.rtcpFeedback) {\\n            const localFb = localCodec.rtcpFeedback.find(fb =>\\n                fb.type === remoteFb.type\\n                    && fb.parameter === remoteFb.parameter\\n            );\\n\\n            if (localFb) {\\n                // Use this RTCP feedback.\\n                codec.rtcpFeedback.push(localFb);\\n            }\\n        }\\n\\n        // Use this codec.\\n        localCapabilities.codecs.push(codec);\\n    }\\n\\n    // Add RTX for video codecs.\\n    for (const codec of localCapabilities.codecs) {\\n        const payloadType = codec.preferredPayloadType;\\n\\n        if (!remoteRtxMap.has(payloadType)) {\\n            continue; // eslint-disable-line no-continue\\n        }\\n\\n        const rtxCodec = {\\n            clockRate: codec.clockRate,\\n            kind: codec.kind,\\n            mimeType: `${codec.kind}/rtx`,\\n            name: 'rtx',\\n            parameters: {\\n                apt: payloadType\\n            },\\n            preferredPayloadType: remoteRtxMap.get(payloadType),\\n            rtcpFeedback: []\\n        };\\n\\n        // Add RTX codec.\\n        localCapabilities.codecs.push(rtxCodec);\\n    }\\n\\n    // Add RTP header extensions.\\n    for (const remoteExtension of filterWithCapabilities.headerExtensions) {\\n        const localExtension\\n            = localFullCapabilities.headerExtensions.find(extension =>\\n                extension.kind === remoteExtension.kind\\n                    && extension.uri === remoteExtension.uri\\n            );\\n\\n        if (localExtension) {\\n            const extension = {\\n                kind: localExtension.kind,\\n                preferredEncrypt: Boolean(remoteExtension.preferredEncrypt),\\n                preferredId: remoteExtension.preferredId,\\n                uri: localExtension.uri\\n            };\\n\\n            // Use this RTP header extension.\\n            localCapabilities.headerExtensions.push(extension);\\n        }\\n    }\\n\\n    // Add FEC mechanisms.\\n    // NOTE: We don't support FEC yet and, in fact, neither does Edge.\\n    for (const remoteFecMechanism of filterWithCapabilities.fecMechanisms) {\\n        const localFecMechanism\\n            = localFullCapabilities.fecMechanisms.find(fec =>\\n                fec === remoteFecMechanism\\n            );\\n\\n        if (localFecMechanism) {\\n            // Use this FEC mechanism.\\n            localCapabilities.fecMechanisms.push(localFecMechanism);\\n        }\\n    }\\n\\n    return localCapabilities;\\n}\\n\\n/**\\n * Get the first acive media section.\\n * @param {Object} sdpObject - SDP object generated by sdp-transform.\\n * @return {Object} SDP media section as parsed by sdp-transform.\\n */\\nfunction getFirstActiveMediaSection(sdpObject) {\\n    return sdpObject.media.find(m =>\\n        m.iceUfrag && m.port !== 0\\n    );\\n}\\n\",\"/**\\n * Create a class inheriting from Error.\\n */\\nfunction createErrorClass(name) {\\n    const klass = class extends Error {\\n        /**\\n         * Custom error class constructor.\\n         * @param {string} message\\n         */\\n        constructor(message) {\\n            super(message);\\n\\n            // Override `name` property value and make it non enumerable.\\n            Object.defineProperty(this, 'name', { value: name });\\n        }\\n    };\\n\\n    return klass;\\n}\\n\\nexport const InvalidStateError = createErrorClass('InvalidStateError');\\n\",\"import * as transform from 'sdp-transform';\\n\\n/**\\n * Parses the primary SSRC of given SSRC group.\\n * @param {object} group the SSRC group object as defined by the 'sdp-transform'\\n * @return {Number} the primary SSRC number\\n */\\nexport function parsePrimarySSRC(group) {\\n    return parseInt(group.ssrcs.split(' ')[0], 10);\\n}\\n\\n/**\\n * Parses the secondary SSRC of given SSRC group.\\n * @param {object} group the SSRC group object as defined by the 'sdp-transform'\\n * @return {Number} the secondary SSRC number\\n */\\nexport function parseSecondarySSRC(group) {\\n    return parseInt(group.ssrcs.split(' ')[1], 10);\\n}\\n\\n/**\\n * Tells how many distinct SSRCs are contained in given media line.\\n * @param {Object} mLine the media line object as defined by 'sdp-transform' lib\\n * @return {number}\\n */\\nfunction _getSSRCCount(mLine) {\\n    if (!mLine.ssrcs) {\\n        return 0;\\n    }\\n\\n    return mLine.ssrcs\\n        .map(ssrcInfo => ssrcInfo.id)\\n        .filter((ssrc, index, array) => array.indexOf(ssrc) === index)\\n        .length;\\n}\\n\\n/**\\n * A wrapper around 'sdp-transform' media description object which provides\\n * utility methods for common SDP/SSRC related operations.\\n */\\nclass MLineWrap {\\n\\n    /**\\n     * Creates new <tt>MLineWrap</t>>\\n     * @param {Object} mLine the media line object as defined by 'sdp-transform'\\n     * lib.\\n     */\\n    constructor(mLine) {\\n        if (!mLine) {\\n            throw new Error('mLine is undefined');\\n        }\\n\\n        this.mLine = mLine;\\n    }\\n\\n    /**\\n     * Getter for the mLine's \\\"ssrcs\\\" array. If the array was undefined an empty\\n     * one will be preassigned.\\n     *\\n     * @return {Array<Object>} an array of 'sdp-transform' SSRC attributes\\n     * objects.\\n     */\\n    get ssrcs() {\\n        if (!this.mLine.ssrcs) {\\n            this.mLine.ssrcs = [];\\n        }\\n\\n        return this.mLine.ssrcs;\\n    }\\n\\n    /**\\n     * Setter for the mLine's \\\"ssrcs\\\" array.\\n     *\\n     * @param {Array<Object>} ssrcs an array of 'sdp-transform' SSRC attributes\\n     * objects.\\n     */\\n    set ssrcs(ssrcs) {\\n        this.mLine.ssrcs = ssrcs;\\n    }\\n\\n    /**\\n     * Returns the direction of the underlying media description.\\n     * @return {string} the media direction name as defined in the SDP.\\n     */\\n    get direction() {\\n        return this.mLine.direction;\\n    }\\n\\n    /**\\n     * Modifies the direction of the underlying media description.\\n     * @param {string} direction the new direction to be set\\n     */\\n    set direction(direction) {\\n        this.mLine.direction = direction;\\n    }\\n\\n    /**\\n     * Exposes the SSRC group array of the underlying media description object.\\n     * @return {Array.<Object>}\\n     */\\n    get ssrcGroups() {\\n        if (!this.mLine.ssrcGroups) {\\n            this.mLine.ssrcGroups = [];\\n        }\\n\\n        return this.mLine.ssrcGroups;\\n    }\\n\\n    /**\\n     * Modifies the SSRC groups array of the underlying media description\\n     * object.\\n     * @param {Array.<Object>} ssrcGroups\\n     */\\n    set ssrcGroups(ssrcGroups) {\\n        this.mLine.ssrcGroups = ssrcGroups;\\n    }\\n\\n    /**\\n     * Obtains value from SSRC attribute.\\n     * @param {number} ssrcNumber the SSRC number for which attribute is to be\\n     * found\\n     * @param {string} attrName the name of the SSRC attribute to be found.\\n     * @return {string|undefined} the value of SSRC attribute or\\n     * <tt>undefined</tt> if no such attribute exists.\\n     */\\n    getSSRCAttrValue(ssrcNumber, attrName) {\\n        const attribute = this.ssrcs.find(\\n            ssrcObj => ssrcObj.id === ssrcNumber\\n            && ssrcObj.attribute === attrName);\\n\\n\\n        return attribute && attribute.value;\\n    }\\n\\n    /**\\n     * Removes all attributes for given SSRC number.\\n     * @param {number} ssrcNum the SSRC number for which all attributes will be\\n     * removed.\\n     */\\n    removeSSRC(ssrcNum) {\\n        if (!this.mLine.ssrcs || !this.mLine.ssrcs.length) {\\n            return;\\n        }\\n\\n        this.mLine.ssrcs\\n            = this.mLine.ssrcs.filter(ssrcObj => ssrcObj.id !== ssrcNum);\\n    }\\n\\n    /**\\n     * Adds SSRC attribute\\n     * @param {object} ssrcObj the SSRC attribute object as defined in\\n     * the 'sdp-transform' lib.\\n     */\\n    addSSRCAttribute(ssrcObj) {\\n        this.ssrcs.push(ssrcObj);\\n    }\\n\\n    /**\\n     * Finds a SSRC group matching both semantics and SSRCs in order.\\n     * @param {string} semantics the name of the semantics\\n     * @param {string} [ssrcs] group SSRCs as a string (like it's defined in\\n     * SSRC group object of the 'sdp-transform' lib) e.g. \\\"1232546 342344 25434\\\"\\n     * @return {object|undefined} the SSRC group object or <tt>undefined</tt> if\\n     * not found.\\n     */\\n    findGroup(semantics, ssrcs) {\\n        return this.ssrcGroups.find(\\n            group =>\\n                group.semantics === semantics\\n                    && (!ssrcs || ssrcs === group.ssrcs));\\n    }\\n\\n    /**\\n     * Finds all groups matching given semantic's name.\\n     * @param {string} semantics the name of the semantics\\n     * @return {Array.<object>} an array of SSRC group objects as defined by\\n     * the 'sdp-transform' lib.\\n     */\\n    findGroups(semantics) {\\n        return this.ssrcGroups.filter(\\n            group => group.semantics === semantics);\\n    }\\n\\n    /**\\n     * Finds all groups matching given semantic's name and group's primary SSRC.\\n     * @param {string} semantics the name of the semantics\\n     * @param {number} primarySSRC the primary SSRC number to be matched\\n     * @return {Object} SSRC group object as defined by the 'sdp-transform' lib.\\n     */\\n    findGroupByPrimarySSRC(semantics, primarySSRC) {\\n        return this.ssrcGroups.find(\\n            group => group.semantics === semantics\\n                && parsePrimarySSRC(group) === primarySSRC);\\n    }\\n\\n    /**\\n     * @param {string|null} msid the media stream id or <tt>null</tt> to match\\n     * the first SSRC object with any 'msid' value.\\n     * @return {Object|undefined} the SSRC object as defined by 'sdp-transform'\\n     * lib.\\n     */\\n    findSSRCByMSID(msid) {\\n        return this.ssrcs.find(\\n            ssrcObj => ssrcObj.attribute === 'msid'\\n                && (msid === null || ssrcObj.value === msid));\\n    }\\n\\n    /**\\n     * Gets the SSRC count for the underlying media description.\\n     * @return {number}\\n     */\\n    getSSRCCount() {\\n        return _getSSRCCount(this.mLine);\\n    }\\n\\n    /**\\n     * Checks whether the underlying media description contains any SSRC groups.\\n     * @return {boolean} <tt>true</tt> if there are any SSRC groups or\\n     * <tt>false</tt> otherwise.\\n     */\\n    containsAnySSRCGroups() {\\n        return this.mLine.ssrcGroups !== undefined;\\n    }\\n\\n    /**\\n     * Finds the primary video SSRC.\\n     * @returns {number|undefined} the primary video ssrc\\n     * @throws Error if the underlying media description is not a video\\n     */\\n    getPrimaryVideoSsrc() {\\n        const mediaType = this.mLine.type;\\n\\n        if (mediaType !== 'video') {\\n            throw new Error(\\n                `getPrimarySsrc doesn't work with '${mediaType}'`);\\n        }\\n\\n        const numSsrcs = _getSSRCCount(this.mLine);\\n\\n        if (numSsrcs === 1) {\\n            // Not using \\\"ssrcs\\\" getter on purpose here\\n            return this.mLine.ssrcs[0].id;\\n        }\\n\\n        // Look for a SIM, FID, or FEC-FR group\\n        if (this.mLine.ssrcGroups) {\\n            const simGroup = this.findGroup('SIM');\\n\\n            if (simGroup) {\\n                return parsePrimarySSRC(simGroup);\\n            }\\n            const fidGroup = this.findGroup('FID');\\n\\n            if (fidGroup) {\\n                return parsePrimarySSRC(fidGroup);\\n            }\\n            const fecGroup = this.findGroup('FEC-FR');\\n\\n            if (fecGroup) {\\n                return parsePrimarySSRC(fecGroup);\\n            }\\n        }\\n\\n    }\\n\\n    /**\\n     * Obtains RTX SSRC from the underlying video description (the\\n     * secondary SSRC of the first \\\"FID\\\" group found)\\n     * @param {number} primarySsrc the video ssrc for which to find the\\n     * corresponding rtx ssrc\\n     * @returns {number|undefined} the rtx ssrc (or undefined if there isn't\\n     * one)\\n     */\\n    getRtxSSRC(primarySsrc) {\\n        const fidGroup = this.findGroupByPrimarySSRC('FID', primarySsrc);\\n\\n\\n        return fidGroup && parseSecondarySSRC(fidGroup);\\n    }\\n\\n    /**\\n     * Obtains all SSRCs contained in the underlying media description.\\n     * @return {Array.<number>} an array with all SSRC as numbers.\\n     */\\n    getSSRCs() {\\n        return this.ssrcs\\n            .map(ssrcInfo => ssrcInfo.id)\\n            .filter((ssrc, index, array) => array.indexOf(ssrc) === index);\\n    }\\n\\n    /**\\n     * Obtains primary video SSRCs.\\n     * @return {Array.<number>} an array of all primary video SSRCs as numbers.\\n     * @throws Error if the wrapped media description is not a video.\\n     */\\n    getPrimaryVideoSSRCs() {\\n        const mediaType = this.mLine.type;\\n\\n        if (mediaType !== 'video') {\\n            throw new Error(\\n                `getPrimaryVideoSSRCs doesn't work with ${mediaType}`);\\n        }\\n\\n        const videoSSRCs = this.getSSRCs();\\n\\n        for (const ssrcGroupInfo of this.ssrcGroups) {\\n            // Right now, FID and FEC-FR groups are the only ones we parse to\\n            // disqualify streams.  If/when others arise we'll\\n            // need to add support for them here\\n            if (ssrcGroupInfo.semantics === 'FID'\\n                    || ssrcGroupInfo.semantics === 'FEC-FR') {\\n                // secondary streams should be filtered out\\n                const secondarySsrc = parseSecondarySSRC(ssrcGroupInfo);\\n\\n                videoSSRCs.splice(\\n                    videoSSRCs.indexOf(secondarySsrc), 1);\\n            }\\n        }\\n\\n        return videoSSRCs;\\n    }\\n\\n    /**\\n     * Dumps all SSRC groups of this media description to JSON.\\n     */\\n    dumpSSRCGroups() {\\n        return JSON.stringify(this.mLine.ssrcGroups);\\n    }\\n\\n    /**\\n     * Removes all SSRC groups which contain given SSRC number at any position.\\n     * @param {number} ssrc the SSRC for which all matching groups are to be\\n     * removed.\\n     */\\n    removeGroupsWithSSRC(ssrc) {\\n        if (!this.mLine.ssrcGroups) {\\n            return;\\n        }\\n\\n        this.mLine.ssrcGroups = this.mLine.ssrcGroups\\n            .filter(groupInfo => groupInfo.ssrcs.indexOf(`${ssrc}`) === -1);\\n    }\\n\\n    /**\\n     * Removes groups that match given semantics.\\n     * @param {string} semantics e.g. \\\"SIM\\\" or \\\"FID\\\"\\n     */\\n    removeGroupsBySemantics(semantics) {\\n        if (!this.mLine.ssrcGroups) {\\n            return;\\n        }\\n\\n        this.mLine.ssrcGroups\\n            = this.mLine.ssrcGroups\\n                .filter(groupInfo => groupInfo.semantics !== semantics);\\n    }\\n\\n    /**\\n     * Replaces SSRC (does not affect SSRC groups, but only attributes).\\n     * @param {number} oldSSRC the old SSRC number\\n     * @param {number} newSSRC the new SSRC number\\n     */\\n    replaceSSRC(oldSSRC, newSSRC) {\\n        if (this.mLine.ssrcs) {\\n            this.mLine.ssrcs.forEach(ssrcInfo => {\\n                if (ssrcInfo.id === oldSSRC) {\\n                    ssrcInfo.id = newSSRC;\\n                }\\n            });\\n        }\\n    }\\n\\n    /**\\n     * Adds given SSRC group to this media description.\\n     * @param {object} group the SSRC group object as defined by\\n     * the 'sdp-transform' lib.\\n     */\\n    addSSRCGroup(group) {\\n        this.ssrcGroups.push(group);\\n    }\\n}\\n\\n/**\\n * Utility class for SDP manipulation using the 'sdp-transform' library.\\n *\\n * Typical use usage scenario:\\n *\\n * const transformer = new SdpTransformWrap(rawSdp);\\n * const videoMLine = transformer.selectMedia('video);\\n * if (videoMLine) {\\n *     videoMLiner.addSSRCAttribute({\\n *         id: 2342343,\\n *         attribute: \\\"cname\\\",\\n *         value: \\\"someCname\\\"\\n *     });\\n *     rawSdp = transformer.toRawSdp();\\n * }\\n */\\nexport class SdpTransformWrap {\\n\\n    /**\\n     * Creates new instance and parses the raw SDP into objects using\\n     * 'sdp-transform' lib.\\n     * @param {string} rawSDP the SDP in raw text format.\\n     */\\n    constructor(rawSDP) {\\n        this.parsedSDP = transform.parse(rawSDP);\\n    }\\n\\n    /**\\n     * Selects the first media SDP of given name.\\n     * @param {string} mediaType the name of the media e.g. 'audio', 'video',\\n     * 'data'.\\n     * @return {MLineWrap|null} return {@link MLineWrap} instance for the media\\n     * line or <tt>null</tt> if not found. The object returned references\\n     * the underlying SDP state held by this <tt>SdpTransformWrap</tt> instance\\n     * (it's not a copy).\\n     */\\n    selectMedia(mediaType) {\\n        const selectedMLine\\n            = this.parsedSDP.media.find(mLine => mLine.type === mediaType);\\n\\n        return selectedMLine ? new MLineWrap(selectedMLine) : null;\\n    }\\n\\n    /**\\n     * Converts the currently stored SDP state in this instance to raw text SDP\\n     * format.\\n     * @return {string}\\n     */\\n    toRawSDP() {\\n        return transform.write(this.parsedSDP);\\n    }\\n}\\n\",\"/**\\n * The know jingle actions that can be sent and should be acted upon by\\n * {@code ProxyConnectionService} and {@code ProxyConnectionPC}.\\n */\\nexport const ACTIONS = {\\n    ACCEPT: 'session-accept',\\n    CONNECTION_ERROR: 'connection-error-encountered',\\n    INITIATE: 'session-initiate',\\n    TERMINATE: 'session-terminate',\\n    TRANSPORT_INFO: 'transport-info',\\n    UNAVAILABLE: 'unavailable'\\n};\\n\",\"// Copyright Joyent, Inc. and other Node contributors.\\n//\\n// Permission is hereby granted, free of charge, to any person obtaining a\\n// copy of this software and associated documentation files (the\\n// \\\"Software\\\"), to deal in the Software without restriction, including\\n// without limitation the rights to use, copy, modify, merge, publish,\\n// distribute, sublicense, and/or sell copies of the Software, and to permit\\n// persons to whom the Software is furnished to do so, subject to the\\n// following conditions:\\n//\\n// The above copyright notice and this permission notice shall be included\\n// in all copies or substantial portions of the Software.\\n//\\n// THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\\n\\nfunction EventEmitter() {\\n  this._events = this._events || {};\\n  this._maxListeners = this._maxListeners || undefined;\\n}\\nmodule.exports = EventEmitter;\\n\\n// Backwards-compat with node 0.10.x\\nEventEmitter.EventEmitter = EventEmitter;\\n\\nEventEmitter.prototype._events = undefined;\\nEventEmitter.prototype._maxListeners = undefined;\\n\\n// By default EventEmitters will print a warning if more than 10 listeners are\\n// added to it. This is a useful default which helps finding memory leaks.\\nEventEmitter.defaultMaxListeners = 10;\\n\\n// Obviously not all Emitters should be limited to 10. This function allows\\n// that to be increased. Set to zero for unlimited.\\nEventEmitter.prototype.setMaxListeners = function(n) {\\n  if (!isNumber(n) || n < 0 || isNaN(n))\\n    throw TypeError('n must be a positive number');\\n  this._maxListeners = n;\\n  return this;\\n};\\n\\nEventEmitter.prototype.emit = function(type) {\\n  var er, handler, len, args, i, listeners;\\n\\n  if (!this._events)\\n    this._events = {};\\n\\n  // If there is no 'error' event listener then throw.\\n  if (type === 'error') {\\n    if (!this._events.error ||\\n        (isObject(this._events.error) && !this._events.error.length)) {\\n      er = arguments[1];\\n      if (er instanceof Error) {\\n        throw er; // Unhandled 'error' event\\n      } else {\\n        // At least give some kind of context to the user\\n        var err = new Error('Uncaught, unspecified \\\"error\\\" event. (' + er + ')');\\n        err.context = er;\\n        throw err;\\n      }\\n    }\\n  }\\n\\n  handler = this._events[type];\\n\\n  if (isUndefined(handler))\\n    return false;\\n\\n  if (isFunction(handler)) {\\n    switch (arguments.length) {\\n      // fast cases\\n      case 1:\\n        handler.call(this);\\n        break;\\n      case 2:\\n        handler.call(this, arguments[1]);\\n        break;\\n      case 3:\\n        handler.call(this, arguments[1], arguments[2]);\\n        break;\\n      // slower\\n      default:\\n        args = Array.prototype.slice.call(arguments, 1);\\n        handler.apply(this, args);\\n    }\\n  } else if (isObject(handler)) {\\n    args = Array.prototype.slice.call(arguments, 1);\\n    listeners = handler.slice();\\n    len = listeners.length;\\n    for (i = 0; i < len; i++)\\n      listeners[i].apply(this, args);\\n  }\\n\\n  return true;\\n};\\n\\nEventEmitter.prototype.addListener = function(type, listener) {\\n  var m;\\n\\n  if (!isFunction(listener))\\n    throw TypeError('listener must be a function');\\n\\n  if (!this._events)\\n    this._events = {};\\n\\n  // To avoid recursion in the case that type === \\\"newListener\\\"! Before\\n  // adding it to the listeners, first emit \\\"newListener\\\".\\n  if (this._events.newListener)\\n    this.emit('newListener', type,\\n              isFunction(listener.listener) ?\\n              listener.listener : listener);\\n\\n  if (!this._events[type])\\n    // Optimize the case of one listener. Don't need the extra array object.\\n    this._events[type] = listener;\\n  else if (isObject(this._events[type]))\\n    // If we've already got an array, just append.\\n    this._events[type].push(listener);\\n  else\\n    // Adding the second element, need to change to array.\\n    this._events[type] = [this._events[type], listener];\\n\\n  // Check for listener leak\\n  if (isObject(this._events[type]) && !this._events[type].warned) {\\n    if (!isUndefined(this._maxListeners)) {\\n      m = this._maxListeners;\\n    } else {\\n      m = EventEmitter.defaultMaxListeners;\\n    }\\n\\n    if (m && m > 0 && this._events[type].length > m) {\\n      this._events[type].warned = true;\\n      console.error('(node) warning: possible EventEmitter memory ' +\\n                    'leak detected. %d listeners added. ' +\\n                    'Use emitter.setMaxListeners() to increase limit.',\\n                    this._events[type].length);\\n      if (typeof console.trace === 'function') {\\n        // not supported in IE 10\\n        console.trace();\\n      }\\n    }\\n  }\\n\\n  return this;\\n};\\n\\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\\n\\nEventEmitter.prototype.once = function(type, listener) {\\n  if (!isFunction(listener))\\n    throw TypeError('listener must be a function');\\n\\n  var fired = false;\\n\\n  function g() {\\n    this.removeListener(type, g);\\n\\n    if (!fired) {\\n      fired = true;\\n      listener.apply(this, arguments);\\n    }\\n  }\\n\\n  g.listener = listener;\\n  this.on(type, g);\\n\\n  return this;\\n};\\n\\n// emits a 'removeListener' event iff the listener was removed\\nEventEmitter.prototype.removeListener = function(type, listener) {\\n  var list, position, length, i;\\n\\n  if (!isFunction(listener))\\n    throw TypeError('listener must be a function');\\n\\n  if (!this._events || !this._events[type])\\n    return this;\\n\\n  list = this._events[type];\\n  length = list.length;\\n  position = -1;\\n\\n  if (list === listener ||\\n      (isFunction(list.listener) && list.listener === listener)) {\\n    delete this._events[type];\\n    if (this._events.removeListener)\\n      this.emit('removeListener', type, listener);\\n\\n  } else if (isObject(list)) {\\n    for (i = length; i-- > 0;) {\\n      if (list[i] === listener ||\\n          (list[i].listener && list[i].listener === listener)) {\\n        position = i;\\n        break;\\n      }\\n    }\\n\\n    if (position < 0)\\n      return this;\\n\\n    if (list.length === 1) {\\n      list.length = 0;\\n      delete this._events[type];\\n    } else {\\n      list.splice(position, 1);\\n    }\\n\\n    if (this._events.removeListener)\\n      this.emit('removeListener', type, listener);\\n  }\\n\\n  return this;\\n};\\n\\nEventEmitter.prototype.removeAllListeners = function(type) {\\n  var key, listeners;\\n\\n  if (!this._events)\\n    return this;\\n\\n  // not listening for removeListener, no need to emit\\n  if (!this._events.removeListener) {\\n    if (arguments.length === 0)\\n      this._events = {};\\n    else if (this._events[type])\\n      delete this._events[type];\\n    return this;\\n  }\\n\\n  // emit removeListener for all listeners on all events\\n  if (arguments.length === 0) {\\n    for (key in this._events) {\\n      if (key === 'removeListener') continue;\\n      this.removeAllListeners(key);\\n    }\\n    this.removeAllListeners('removeListener');\\n    this._events = {};\\n    return this;\\n  }\\n\\n  listeners = this._events[type];\\n\\n  if (isFunction(listeners)) {\\n    this.removeListener(type, listeners);\\n  } else if (listeners) {\\n    // LIFO order\\n    while (listeners.length)\\n      this.removeListener(type, listeners[listeners.length - 1]);\\n  }\\n  delete this._events[type];\\n\\n  return this;\\n};\\n\\nEventEmitter.prototype.listeners = function(type) {\\n  var ret;\\n  if (!this._events || !this._events[type])\\n    ret = [];\\n  else if (isFunction(this._events[type]))\\n    ret = [this._events[type]];\\n  else\\n    ret = this._events[type].slice();\\n  return ret;\\n};\\n\\nEventEmitter.prototype.listenerCount = function(type) {\\n  if (this._events) {\\n    var evlistener = this._events[type];\\n\\n    if (isFunction(evlistener))\\n      return 1;\\n    else if (evlistener)\\n      return evlistener.length;\\n  }\\n  return 0;\\n};\\n\\nEventEmitter.listenerCount = function(emitter, type) {\\n  return emitter.listenerCount(type);\\n};\\n\\nfunction isFunction(arg) {\\n  return typeof arg === 'function';\\n}\\n\\nfunction isNumber(arg) {\\n  return typeof arg === 'number';\\n}\\n\\nfunction isObject(arg) {\\n  return typeof arg === 'object' && arg !== null;\\n}\\n\\nfunction isUndefined(arg) {\\n  return arg === void 0;\\n}\\n\",\"const Resolutions = {\\n    '1080': {\\n        width: 1920,\\n        height: 1080,\\n        order: 7\\n    },\\n    'fullhd': {\\n        width: 1920,\\n        height: 1080,\\n        order: 7\\n    },\\n    '720': {\\n        width: 1280,\\n        height: 720,\\n        order: 6\\n    },\\n    'hd': {\\n        width: 1280,\\n        height: 720,\\n        order: 6\\n    },\\n    '960': {\\n        width: 960,\\n        height: 720,\\n        order: 5\\n    },\\n\\n    // 16:9 resolution first.\\n    '360': {\\n        width: 640,\\n        height: 360,\\n        order: 4\\n    },\\n    '640': {\\n        width: 640,\\n        height: 480,\\n        order: 3\\n    },\\n    'vga': {\\n        width: 640,\\n        height: 480,\\n        order: 3\\n    },\\n\\n    // 16:9 resolution first.\\n    '180': {\\n        width: 320,\\n        height: 180,\\n        order: 2\\n    },\\n    '320': {\\n        width: 320,\\n        height: 240,\\n        order: 1\\n    }\\n};\\n\\nmodule.exports = Resolutions;\\n\",\"/**\\n * The pending Jingle session state which means the session as defined in\\n * XEP-0166(before 'session-invite/session-accept' took place).\\n *\\n * @type {string}\\n */\\nexport const PENDING = 'pending';\\n\\n/**\\n * The active Jingle session state as defined in XEP-0166\\n * (after 'session-invite'/'session-accept').\\n *\\n * @type {string}\\n */\\nexport const ACTIVE = 'active';\\n\\n/**\\n * The ended Jingle session state as defined in XEP-0166\\n * (after 'session-terminate').\\n * @type {string}\\n */\\nexport const ENDED = 'ended';\\n\",\"/* global callstats */\\n\\nimport browser from '../browser';\\nimport GlobalOnErrorHandler from '../util/GlobalOnErrorHandler';\\n\\nconst logger = require('jitsi-meet-logger').getLogger(__filename);\\n\\n/**\\n * We define enumeration of wrtcFuncNames as we need them before\\n * callstats is initialized to queue events.\\n * @const\\n * @see http://www.callstats.io/api/#enumeration-of-wrtcfuncnames\\n */\\nconst wrtcFuncNames = {\\n    createOffer: 'createOffer',\\n    createAnswer: 'createAnswer',\\n    setLocalDescription: 'setLocalDescription',\\n    setRemoteDescription: 'setRemoteDescription',\\n    addIceCandidate: 'addIceCandidate',\\n    getUserMedia: 'getUserMedia',\\n    iceConnectionFailure: 'iceConnectionFailure',\\n    signalingError: 'signalingError',\\n    applicationLog: 'applicationLog'\\n};\\n\\n/**\\n * We define enumeration of fabricEvent as we need them before\\n * callstats is initialized to queue events.\\n * @const\\n * @see http://www.callstats.io/api/#enumeration-of-fabricevent\\n */\\nconst fabricEvent = {\\n    fabricHold: 'fabricHold',\\n    fabricResume: 'fabricResume',\\n    audioMute: 'audioMute',\\n    audioUnmute: 'audioUnmute',\\n    videoPause: 'videoPause',\\n    videoResume: 'videoResume',\\n    fabricUsageEvent: 'fabricUsageEvent',\\n    fabricStats: 'fabricStats',\\n    fabricTerminated: 'fabricTerminated',\\n    screenShareStart: 'screenShareStart',\\n    screenShareStop: 'screenShareStop',\\n    dominantSpeaker: 'dominantSpeaker',\\n    activeDeviceList: 'activeDeviceList'\\n};\\n\\n/**\\n * The user id to report to callstats as destination.\\n * @type {string}\\n */\\nconst DEFAULT_REMOTE_USER = 'jitsi';\\n\\n/**\\n * Type of pending reports, can be event or an error.\\n * @type {{ERROR: string, EVENT: string}}\\n */\\nconst reportType = {\\n    ERROR: 'error',\\n    EVENT: 'event',\\n    MST_WITH_USERID: 'mstWithUserID'\\n};\\n\\n/**\\n * Set of currently existing {@link CallStats} instances.\\n * @type {Set<CallStats>}\\n */\\nlet _fabrics;\\n\\n/**\\n * An instance of this class is a wrapper for the CallStats API fabric. A fabric\\n * reports one peer connection the the CallStats backend and is allocated with\\n * {@link callstats.addNewFabric}. It has a bunch of instance methods for\\n * reporting various events. A fabric is considered disposed when\\n * {@link CallStats.sendTerminateEvent} is executed.\\n *\\n * Currently only one backend instance can be created ever and it's done using\\n * {@link CallStats.initBackend}. At the time of this writing there is no way to\\n * explicitly shutdown the backend, but it's supposed to close it's connection\\n * automatically, after all fabrics have been terminated.\\n */\\nexport default class CallStats {\\n    /**\\n     * A callback passed to {@link callstats.addNewFabric}.\\n     * @param {string} error 'success' means ok\\n     * @param {string} msg some more details\\n     * @private\\n     */\\n    static _addNewFabricCallback(error, msg) {\\n        if (CallStats.backend && error !== 'success') {\\n            logger.error(`Monitoring status: ${error} msg: ${msg}`);\\n        }\\n    }\\n\\n    /**\\n     * Callback passed to {@link callstats.initialize} (backend initialization)\\n     * @param {string} error 'success' means ok\\n     * @param {String} msg\\n     * @private\\n     */\\n    static _initCallback(error, msg) {\\n        logger.log(`CallStats Status: err=${error} msg=${msg}`);\\n\\n        // there is no lib, nothing to report to\\n        if (error !== 'success') {\\n            return;\\n        }\\n\\n        CallStats.backendInitialized = true;\\n\\n        // I hate that\\n        let atLeastOneFabric = false;\\n        let defaultInstance = null;\\n\\n        for (const callStatsInstance of CallStats.fabrics.values()) {\\n            if (!callStatsInstance.hasFabric) {\\n                logger.debug('addNewFabric - initCallback');\\n                if (callStatsInstance._addNewFabric()) {\\n                    atLeastOneFabric = true;\\n                    if (!defaultInstance) {\\n                        defaultInstance = callStatsInstance;\\n                    }\\n                }\\n            }\\n        }\\n\\n        if (!atLeastOneFabric) {\\n            return;\\n        }\\n\\n        CallStats._emptyReportQueue(defaultInstance);\\n    }\\n\\n    /**\\n     * Empties report queue.\\n     *\\n     * @param {CallStats} csInstance - The callstats instance.\\n     * @private\\n     */\\n    static _emptyReportQueue(csInstance) {\\n        // There is no conference ID nor a PeerConnection available when some of\\n        // the events are scheduled on the reportsQueue, so those will be\\n        // reported on the first initialized fabric.\\n        const defaultConfID = csInstance.confID;\\n        const defaultPC = csInstance.peerconnection;\\n\\n        // notify callstats about failures if there were any\\n        for (const report of CallStats.reportsQueue) {\\n            if (report.type === reportType.ERROR) {\\n                const errorData = report.data;\\n\\n                CallStats._reportError(\\n                    csInstance,\\n                    errorData.type,\\n                    errorData.error,\\n                    errorData.pc || defaultPC);\\n            } else if (report.type === reportType.EVENT) {\\n                // if we have and event to report and we failed to add\\n                // fabric this event will not be reported anyway, returning\\n                // an error\\n                const eventData = report.data;\\n\\n                CallStats.backend.sendFabricEvent(\\n                    report.pc || defaultPC,\\n                    eventData.event,\\n                    defaultConfID,\\n                    eventData.eventData);\\n            } else if (report.type === reportType.MST_WITH_USERID) {\\n                const data = report.data;\\n\\n                CallStats.backend.associateMstWithUserID(\\n                    report.pc || defaultPC,\\n                    data.callStatsId,\\n                    defaultConfID,\\n                    data.ssrc,\\n                    data.usageLabel,\\n                    data.containerId\\n                );\\n            }\\n        }\\n        CallStats.reportsQueue.length = 0;\\n    }\\n\\n    /* eslint-disable max-params */\\n    /**\\n     * Reports an error to callstats.\\n     *\\n     * @param {CallStats} [cs]\\n     * @param type the type of the error, which will be one of the wrtcFuncNames\\n     * @param error the error\\n     * @param pc the peerconnection\\n     * @private\\n     */\\n    static _reportError(cs, type, error, pc) {\\n        let _error = error;\\n\\n        if (!_error) {\\n            logger.warn('No error is passed!');\\n            _error = new Error('Unknown error');\\n        }\\n        if (CallStats.backendInitialized && cs) {\\n            CallStats.backend.reportError(pc, cs.confID, type, _error);\\n        } else {\\n            CallStats.reportsQueue.push({\\n                type: reportType.ERROR,\\n                data: {\\n                    error: _error,\\n                    pc,\\n                    type\\n                }\\n            });\\n        }\\n\\n        // else just ignore it\\n    }\\n\\n    /* eslint-enable max-params */\\n\\n    /**\\n     * Reports an error to callstats.\\n     *\\n     * @param {CallStats} cs\\n     * @param event the type of the event, which will be one of the fabricEvent\\n     * @param eventData additional data to pass to event\\n     * @private\\n     */\\n    static _reportEvent(cs, event, eventData) {\\n        const pc = cs && cs.peerconnection;\\n        const confID = cs && cs.confID;\\n\\n        if (CallStats.backendInitialized && cs) {\\n            CallStats.backend.sendFabricEvent(pc, event, confID, eventData);\\n        } else {\\n            CallStats.reportsQueue.push({\\n                confID,\\n                pc,\\n                type: reportType.EVENT,\\n                data: { event,\\n                    eventData }\\n            });\\n        }\\n    }\\n\\n    /**\\n     * Wraps some of the CallStats API method and logs their calls with\\n     * arguments on the debug logging level. Also wraps some of the backend\\n     * methods execution into try catch blocks to not crash the app in case\\n     * there is a problem with the backend itself.\\n     * @param {callstats} theBackend\\n     * @private\\n     */\\n    static _traceAndCatchBackendCalls(theBackend) {\\n        const tryCatchMethods = [\\n            'associateMstWithUserID',\\n            'sendFabricEvent',\\n            'sendUserFeedback'\\n\\n            // 'reportError', - this one needs special handling - see code below\\n        ];\\n\\n        for (const methodName of tryCatchMethods) {\\n            const originalMethod = theBackend[methodName];\\n\\n            theBackend[methodName] = function(...theArguments) {\\n                try {\\n                    return originalMethod.apply(theBackend, theArguments);\\n                } catch (e) {\\n                    GlobalOnErrorHandler.callErrorHandler(e);\\n                }\\n            };\\n        }\\n        const debugMethods = [\\n            'associateMstWithUserID',\\n            'sendFabricEvent',\\n            'sendUserFeedback'\\n\\n            // 'reportError', - this one needs special handling - see code below\\n        ];\\n\\n        for (const methodName of debugMethods) {\\n            const originalMethod = theBackend[methodName];\\n\\n            theBackend[methodName] = function(...theArguments) {\\n                logger.debug(methodName, theArguments);\\n                originalMethod.apply(theBackend, theArguments);\\n            };\\n        }\\n        const originalReportError = theBackend.reportError;\\n\\n        /* eslint-disable max-params */\\n        theBackend.reportError = function(pc, cs, type, ...args) {\\n            // Logs from the logger are submitted on the applicationLog event\\n            // \\\"type\\\". Logging the arguments on the logger will create endless\\n            // loop, because it will put all the logs to the logger queue again.\\n            if (type === wrtcFuncNames.applicationLog) {\\n                // NOTE otherArguments are not logged to the console on purpose\\n                // to not log the whole log batch\\n                // FIXME check the current logging level (currently not exposed\\n                // by the logger implementation)\\n                // NOTE it is not safe to log whole objects on react-native as\\n                // those contain too many circular references and may crash\\n                // the app.\\n                if (!browser.isReactNative()) {\\n                    console && console.debug('reportError', pc, cs, type);\\n                }\\n            } else {\\n                logger.debug('reportError', pc, cs, type, ...args);\\n            }\\n            try {\\n                originalReportError.call(theBackend, pc, cs, type, ...args);\\n            } catch (exception) {\\n                if (type === wrtcFuncNames.applicationLog) {\\n                    console && console.error('reportError', exception);\\n                } else {\\n                    GlobalOnErrorHandler.callErrorHandler(exception);\\n                }\\n            }\\n        };\\n\\n        /* eslint-enable max-params */\\n    }\\n\\n    /**\\n     * Returns the Set with the currently existing {@link CallStats} instances.\\n     * Lazily initializes the Set to allow any Set polyfills to be applied.\\n     * @type {Set<CallStats>}\\n     */\\n    static get fabrics() {\\n        if (!_fabrics) {\\n            _fabrics = new Set();\\n        }\\n\\n        return _fabrics;\\n    }\\n\\n    /**\\n     * Initializes the CallStats backend. Should be called only if\\n     * {@link CallStats.isBackendInitialized} returns <tt>false</tt>.\\n     * @param {object} options\\n     * @param {String} options.callStatsID CallStats credentials - ID\\n     * @param {String} options.callStatsSecret CallStats credentials - secret\\n     * @param {string} options.aliasName the <tt>aliasName</tt> part of\\n     * the <tt>userID</tt> aka endpoint ID, see CallStats docs for more info.\\n     * @param {string} options.userName the <tt>userName</tt> part of\\n     * the <tt>userID</tt> aka display name, see CallStats docs for more info.\\n     *\\n     */\\n    static initBackend(options) {\\n        if (CallStats.backend) {\\n            throw new Error('CallStats backend has been initialized already!');\\n        }\\n        try {\\n            const CallStatsBackend = callstats;\\n\\n            CallStats.backend = new CallStatsBackend();\\n            CallStats._traceAndCatchBackendCalls(CallStats.backend);\\n            CallStats.userID = {\\n                aliasName: options.aliasName,\\n                userName: options.userName\\n            };\\n            CallStats.callStatsID = options.callStatsID;\\n            CallStats.callStatsSecret = options.callStatsSecret;\\n\\n            let configParams;\\n\\n            if (options.applicationName) {\\n                configParams = {\\n                    applicationVersion:\\n                        `${options.applicationName} (${\\n                            browser.getName()})`\\n                };\\n            }\\n\\n            // userID is generated or given by the origin server\\n            CallStats.backend.initialize(\\n                CallStats.callStatsID,\\n                CallStats.callStatsSecret,\\n                CallStats.userID,\\n                CallStats._initCallback,\\n                undefined,\\n                configParams);\\n\\n            const getWiFiStatsMethod = options.getWiFiStatsMethod;\\n\\n            if (getWiFiStatsMethod) {\\n                CallStats.backend.attachWifiStatsHandler(getWiFiStatsMethod);\\n\\n                getWiFiStatsMethod().then(result => {\\n                    if (result) {\\n                        logger.info('Reported wifi addresses:'\\n                            , JSON.parse(result).addresses);\\n                    }\\n                })\\n                .catch(() => {});// eslint-disable-line no-empty-function\\n            }\\n\\n            return true;\\n        } catch (e) {\\n            // The callstats.io API failed to initialize (e.g. because its\\n            // download did not succeed in general or on time). Further attempts\\n            // to utilize it cannot possibly succeed.\\n            GlobalOnErrorHandler.callErrorHandler(e);\\n            CallStats.backend = null;\\n            logger.error(e);\\n\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * Checks if the CallStats backend has been created. It does not mean that\\n     * it has been initialized, but only that the API instance has been\\n     * allocated successfully.\\n     * @return {boolean} <tt>true</tt> if backend exists or <tt>false</tt>\\n     * otherwise\\n     */\\n    static isBackendInitialized() {\\n        return Boolean(CallStats.backend);\\n    }\\n\\n    /**\\n     * Notifies CallStats about active device.\\n     * @param {{deviceList: {String:String}}} devicesData list of devices with\\n     * their data\\n     * @param {CallStats} cs callstats instance related to the event\\n     */\\n    static sendActiveDeviceListEvent(devicesData, cs) {\\n        CallStats._reportEvent(cs, fabricEvent.activeDeviceList, devicesData);\\n    }\\n\\n    /**\\n     * Notifies CallStats that there is a log we want to report.\\n     *\\n     * @param {Error} e error to send or {String} message\\n     * @param {CallStats} cs callstats instance related to the error (optional)\\n     */\\n    static sendApplicationLog(e, cs) {\\n        try {\\n            CallStats._reportError(\\n                cs,\\n                wrtcFuncNames.applicationLog,\\n                e,\\n                cs && cs.peerconnection);\\n        } catch (error) {\\n            // If sendApplicationLog fails it should not be printed to\\n            // the logger, because it will try to push the logs again\\n            // (through sendApplicationLog) and an endless loop is created.\\n            if (console && (typeof console.error === 'function')) {\\n                // FIXME send analytics event as well\\n                console.error('sendApplicationLog failed', error);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * Sends the given feedback through CallStats.\\n     *\\n     * @param {string} conferenceID the conference ID for which the feedback\\n     * will be reported.\\n     * @param overall an integer between 1 and 5 indicating the\\n     * user feedback\\n     * @param comment detailed feedback from the user.\\n     */\\n    static sendFeedback(conferenceID, overall, comment) {\\n        if (CallStats.backend) {\\n            CallStats.backend.sendUserFeedback(\\n                conferenceID, {\\n                    userID: CallStats.userID,\\n                    overall,\\n                    comment\\n                });\\n        } else {\\n            logger.error('Failed to submit feedback to CallStats - no backend');\\n        }\\n    }\\n\\n    /**\\n     * Notifies CallStats that getUserMedia failed.\\n     *\\n     * @param {Error} e error to send\\n     * @param {CallStats} cs callstats instance related to the error (optional)\\n     */\\n    static sendGetUserMediaFailed(e, cs) {\\n        CallStats._reportError(cs, wrtcFuncNames.getUserMedia, e, null);\\n    }\\n\\n    /**\\n     * Notifies CallStats for mute events\\n     * @param mute {boolean} true for muted and false for not muted\\n     * @param type {String} \\\"audio\\\"/\\\"video\\\"\\n     * @param {CallStats} cs callstats instance related to the event\\n     */\\n    static sendMuteEvent(mute, type, cs) {\\n        let event;\\n\\n        if (type === 'video') {\\n            event = mute ? fabricEvent.videoPause : fabricEvent.videoResume;\\n        } else {\\n            event = mute ? fabricEvent.audioMute : fabricEvent.audioUnmute;\\n        }\\n\\n        CallStats._reportEvent(cs, event);\\n    }\\n\\n    /**\\n     * Creates new CallStats instance that handles all callstats API calls for\\n     * given {@link TraceablePeerConnection}. Each instance is meant to handle\\n     * one CallStats fabric added with 'addFabric' API method for the\\n     * {@link TraceablePeerConnection} instance passed in the constructor.\\n     * @param {TraceablePeerConnection} tpc\\n     * @param {Object} options\\n     * @param {string} options.confID the conference ID that wil be used to\\n     * report the session.\\n     * @param {string} [options.remoteUserID='jitsi'] the remote user ID to\\n     * which given <tt>tpc</tt> is connected.\\n     */\\n    constructor(tpc, options) {\\n        this.confID = options.confID;\\n        this.tpc = tpc;\\n        this.peerconnection = tpc.peerconnection;\\n        this.remoteUserID = options.remoteUserID || DEFAULT_REMOTE_USER;\\n        this.hasFabric = false;\\n\\n        CallStats.fabrics.add(this);\\n\\n        if (CallStats.backendInitialized) {\\n            this._addNewFabric();\\n\\n            // if this is the first fabric let's try to empty the\\n            // report queue. Reports all events that we recorded between\\n            // backend initialization and receiving the first fabric\\n            if (CallStats.fabrics.size === 1) {\\n                CallStats._emptyReportQueue(this);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * Initializes CallStats fabric by calling \\\"addNewFabric\\\" for\\n     * the peer connection associated with this instance.\\n     * @return {boolean} true if the call was successful or false otherwise.\\n     */\\n    _addNewFabric() {\\n        logger.info('addNewFabric', this.remoteUserID);\\n        try {\\n            const fabricAttributes = {\\n                remoteEndpointType:\\n                    this.tpc.isP2P\\n                        ? CallStats.backend.endpointType.peer\\n                        : CallStats.backend.endpointType.server\\n            };\\n            const ret\\n                = CallStats.backend.addNewFabric(\\n                    this.peerconnection,\\n                    this.remoteUserID,\\n                    CallStats.backend.fabricUsage.multiplex,\\n                    this.confID,\\n                    fabricAttributes,\\n                    CallStats._addNewFabricCallback);\\n\\n            this.hasFabric = true;\\n\\n            const success = ret.status === 'success';\\n\\n            if (!success) {\\n                logger.error('callstats fabric not initilized', ret.message);\\n            }\\n\\n            return success;\\n\\n        } catch (error) {\\n            GlobalOnErrorHandler.callErrorHandler(error);\\n\\n            return false;\\n        }\\n    }\\n\\n    /* eslint-disable max-params */\\n\\n    /**\\n     * Lets CallStats module know where is given SSRC rendered by providing\\n     * renderer tag ID.\\n     * If the lib is not initialized yet queue the call for later, when it's\\n     * ready.\\n     * @param {number} ssrc the SSRC of the stream\\n     * @param {boolean} isLocal indicates whether this the stream is local\\n     * @param {string|null} streamEndpointId if the stream is not local the it\\n     * needs to contain the stream owner's ID\\n     * @param {string} usageLabel meaningful usage label of this stream like\\n     *        'microphone', 'camera' or 'screen'.\\n     * @param {string} containerId  the id of media 'audio' or 'video' tag which\\n     *        renders the stream.\\n     */\\n    associateStreamWithVideoTag(\\n            ssrc,\\n            isLocal,\\n            streamEndpointId,\\n            usageLabel,\\n            containerId) {\\n        if (!CallStats.backend) {\\n            return;\\n        }\\n\\n        const callStatsId = isLocal ? CallStats.userID : streamEndpointId;\\n\\n        if (CallStats.backendInitialized) {\\n            CallStats.backend.associateMstWithUserID(\\n                this.peerconnection,\\n                callStatsId,\\n                this.confID,\\n                ssrc,\\n                usageLabel,\\n                containerId);\\n        } else {\\n            CallStats.reportsQueue.push({\\n                type: reportType.MST_WITH_USERID,\\n                pc: this.peerconnection,\\n                data: {\\n                    callStatsId,\\n                    containerId,\\n                    ssrc,\\n                    usageLabel\\n                }\\n            });\\n        }\\n    }\\n\\n    /* eslint-enable max-params */\\n\\n    /**\\n     * Notifies CallStats that we are the new dominant speaker in the\\n     * conference.\\n     */\\n    sendDominantSpeakerEvent() {\\n        CallStats._reportEvent(this, fabricEvent.dominantSpeaker);\\n    }\\n\\n    /**\\n     * Notifies CallStats that the fabric for the underlying peerconnection was\\n     * closed and no evens should be reported, after this call.\\n     */\\n    sendTerminateEvent() {\\n        if (CallStats.backendInitialized) {\\n            CallStats.backend.sendFabricEvent(\\n                this.peerconnection,\\n                CallStats.backend.fabricEvent.fabricTerminated,\\n                this.confID);\\n        }\\n        CallStats.fabrics.delete(this);\\n    }\\n\\n    /**\\n     * Notifies CallStats for ice connection failed\\n     */\\n    sendIceConnectionFailedEvent() {\\n        CallStats._reportError(\\n            this,\\n            wrtcFuncNames.iceConnectionFailure,\\n            null,\\n            this.peerconnection);\\n    }\\n\\n    /**\\n     * Notifies CallStats that peer connection failed to create offer.\\n     *\\n     * @param {Error} e error to send\\n     */\\n    sendCreateOfferFailed(e) {\\n        CallStats._reportError(\\n            this, wrtcFuncNames.createOffer, e, this.peerconnection);\\n    }\\n\\n    /**\\n     * Notifies CallStats that peer connection failed to create answer.\\n     *\\n     * @param {Error} e error to send\\n     */\\n    sendCreateAnswerFailed(e) {\\n        CallStats._reportError(\\n            this, wrtcFuncNames.createAnswer, e, this.peerconnection);\\n    }\\n\\n    /**\\n     * Sends either resume or hold event for the fabric associated with\\n     * the underlying peerconnection.\\n     * @param {boolean} isResume true to resume or false to hold\\n     */\\n    sendResumeOrHoldEvent(isResume) {\\n        CallStats._reportEvent(\\n            this,\\n            isResume ? fabricEvent.fabricResume : fabricEvent.fabricHold);\\n    }\\n\\n    /**\\n     * Notifies CallStats for screen sharing events\\n     * @param {boolean} start true for starting screen sharing and\\n     * false for not stopping\\n     * @param {string|null} ssrc - optional ssrc value, used only when\\n     * starting screen sharing.\\n     */\\n    sendScreenSharingEvent(start, ssrc) {\\n        let eventData;\\n\\n        if (ssrc) {\\n            eventData = { ssrc };\\n        }\\n\\n        CallStats._reportEvent(\\n            this,\\n            start ? fabricEvent.screenShareStart : fabricEvent.screenShareStop,\\n            eventData);\\n    }\\n\\n    /**\\n     * Notifies CallStats that peer connection failed to set local description.\\n     *\\n     * @param {Error} e error to send\\n     */\\n    sendSetLocalDescFailed(e) {\\n        CallStats._reportError(\\n            this, wrtcFuncNames.setLocalDescription, e, this.peerconnection);\\n    }\\n\\n    /**\\n     * Notifies CallStats that peer connection failed to set remote description.\\n     *\\n     * @param {Error} e error to send\\n     */\\n    sendSetRemoteDescFailed(e) {\\n        CallStats._reportError(\\n            this, wrtcFuncNames.setRemoteDescription, e, this.peerconnection);\\n    }\\n\\n    /**\\n     * Notifies CallStats that peer connection failed to add ICE candidate.\\n     *\\n     * @param {Error} e error to send\\n     */\\n    sendAddIceCandidateFailed(e) {\\n        CallStats._reportError(\\n            this, wrtcFuncNames.addIceCandidate, e, this.peerconnection);\\n    }\\n}\\n\\n/**\\n * The CallStats API backend instance\\n * @type {callstats}\\n */\\nCallStats.backend = null;\\n\\n// some errors/events may happen before CallStats init\\n// in this case we accumulate them in this array\\n// and send them to callstats on init\\nCallStats.reportsQueue = [];\\n\\n/**\\n * Whether the library was successfully initialized(the backend) using its\\n * initialize method.\\n * @type {boolean}\\n */\\nCallStats.backendInitialized = false;\\n\\n/**\\n * Part of the CallStats credentials - application ID\\n * @type {string}\\n */\\nCallStats.callStatsID = null;\\n\\n/**\\n * Part of the CallStats credentials - application secret\\n * @type {string}\\n */\\nCallStats.callStatsSecret = null;\\n\\n/**\\n * Local CallStats user ID structure. Can be set only once when\\n * {@link backend} is initialized, so it's static for the time being.\\n * See CallStats API for more info:\\n * https://www.callstats.io/api/#userid\\n * @type {object}\\n */\\nCallStats.userID = null;\\n\",\"/**\\n * Indicates that the local connection statistics were updated.\\n */\\nexport const LOCAL_STATS_UPDATED = 'cq.local_stats_updated';\\n\\n/**\\n * Indicates that the connection statistics for a particular remote participant\\n * were updated.\\n */\\nexport const REMOTE_STATS_UPDATED = 'cq.remote_stats_updated';\\n\",\"module.exports =\\n{\\n\\tEventTarget : require('./lib/EventTarget'),\\n\\tEvent       : require('./lib/Event')\\n};\\n\",\"import Listenable from '../util/Listenable';\\n\\n/**\\n * Creates ConnectionPlugin class that extends the passed class.\\n * @param {Class} base the definition of the class that will be extended by\\n * ConnectionPlugin\\n */\\nfunction getConnectionPluginDefinition(base = class {}) {\\n    /**\\n     * Base class for strophe connection plugins.\\n     */\\n    return class extends base {\\n        /**\\n         *\\n         */\\n        constructor(...args) {\\n            super(...args);\\n            this.connection = null;\\n        }\\n\\n        /**\\n         *\\n         * @param connection\\n         */\\n        init(connection) {\\n            this.connection = connection;\\n        }\\n    };\\n}\\n\\n/**\\n * ConnectionPlugin class.\\n */\\nexport default getConnectionPluginDefinition();\\n\\n/**\\n * ConnectionPlugin class that extends Listenable.\\n */\\nexport const ConnectionPluginListenable\\n    = getConnectionPluginDefinition(Listenable);\\n\",\"/**\\n * @const\\n */\\nconst ALPHANUM\\n    = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\\n\\n/**\\n * Hexadecimal digits.\\n * @const\\n */\\nconst HEX_DIGITS = '0123456789abcdef';\\n\\n/**\\n * Generates random int within the range [min, max]\\n * @param min the minimum value for the generated number\\n * @param max the maximum value for the generated number\\n * @returns random int number\\n */\\nfunction randomInt(min, max) {\\n    return Math.floor(Math.random() * (max - min + 1)) + min;\\n}\\n\\n/**\\n * Get random element from array or string.\\n * @param {Array|string} arr source\\n * @returns array element or string character\\n */\\nfunction randomElement(arr) {\\n    return arr[randomInt(0, arr.length - 1)];\\n}\\n\\n/**\\n * Generate random alphanumeric string.\\n * @param {number} length expected string length\\n * @returns {string} random string of specified length\\n */\\nfunction randomAlphanumStr(length) {\\n    let result = '';\\n\\n    for (let i = 0; i < length; i += 1) {\\n        result += randomElement(ALPHANUM);\\n    }\\n\\n    return result;\\n}\\n\\n/**\\n * Exported interface.\\n */\\nconst RandomUtil = {\\n    /**\\n     * Returns a random hex digit.\\n     * @returns {*}\\n     */\\n    randomHexDigit() {\\n        return randomElement(HEX_DIGITS);\\n    },\\n\\n    /**\\n     * Returns a random string of hex digits with length 'len'.\\n     * @param len the length.\\n     */\\n    randomHexString(len) {\\n        let ret = '';\\n\\n        while (len--) { // eslint-disable-line no-param-reassign\\n            ret += this.randomHexDigit();\\n        }\\n\\n        return ret;\\n    },\\n    randomElement,\\n    randomAlphanumStr,\\n    randomInt\\n};\\n\\nmodule.exports = RandomUtil;\\n\",\"/* global $ */\\n\\nimport { getLogger } from 'jitsi-meet-logger';\\nimport { $msg, Strophe } from 'strophe.js';\\nimport 'strophejs-plugin-disco';\\n\\nimport RandomUtil from '../util/RandomUtil';\\nimport * as JitsiConnectionErrors from '../../JitsiConnectionErrors';\\nimport * as JitsiConnectionEvents from '../../JitsiConnectionEvents';\\nimport browser from '../browser';\\nimport initEmuc from './strophe.emuc';\\nimport initJingle from './strophe.jingle';\\nimport initStropheUtil from './strophe.util';\\nimport initPing from './strophe.ping';\\nimport initRayo from './strophe.rayo';\\nimport initStropheLogger from './strophe.logger';\\nimport Listenable from '../util/Listenable';\\nimport Caps from './Caps';\\nimport GlobalOnErrorHandler from '../util/GlobalOnErrorHandler';\\nimport XMPPEvents from '../../service/xmpp/XMPPEvents';\\n\\nconst logger = getLogger(__filename);\\n\\n/**\\n *\\n * @param token\\n * @param bosh\\n */\\nfunction createConnection(token, bosh = '/http-bind') {\\n    // Append token as URL param\\n    if (token) {\\n        // eslint-disable-next-line no-param-reassign\\n        bosh += `${bosh.indexOf('?') === -1 ? '?' : '&'}token=${token}`;\\n    }\\n\\n    const conn = new Strophe.Connection(bosh);\\n\\n    // The default maxRetries is 5, which is too long.\\n    conn.maxRetries = 3;\\n\\n    return conn;\\n}\\n\\n// FIXME: remove once we have a default config template. -saghul\\n/**\\n * A list of ice servers to use by default for P2P.\\n */\\nexport const DEFAULT_STUN_SERVERS = [\\n    { urls: 'stun:stun.l.google.com:19302' },\\n    { urls: 'stun:stun1.l.google.com:19302' },\\n    { urls: 'stun:stun2.l.google.com:19302' }\\n];\\n\\n/**\\n * The name of the field used to recognize a chat message as carrying a JSON\\n * payload from another endpoint.\\n * If the json-message of a chat message contains a valid JSON object, and\\n * the JSON has this key, then it is a valid json-message to be sent.\\n */\\nexport const JITSI_MEET_MUC_TYPE = 'type';\\n\\n/**\\n *\\n */\\nexport default class XMPP extends Listenable {\\n    /**\\n     * FIXME describe all options\\n     * @param {Object} options\\n     * @param {Array<Object>} options.p2pStunServers see\\n     * {@link JingleConnectionPlugin} for more details.\\n     * @param token\\n     */\\n    constructor(options, token) {\\n        super();\\n        this.connection = null;\\n        this.disconnectInProgress = false;\\n        this.connectionTimes = {};\\n        this.options = options;\\n        this.token = token;\\n        this.authenticatedUser = false;\\n        this._initStrophePlugins(this);\\n\\n        this.connection = createConnection(token, options.bosh);\\n\\n        this.caps = new Caps(this.connection, this.options.clientNode);\\n\\n        // Initialize features advertised in disco-info\\n        this.initFeaturesList();\\n\\n        // Setup a disconnect on unload as a way to facilitate API consumers. It\\n        // sounds like they would want that. A problem for them though may be if\\n        // they wanted to utilize the connected connection in an unload handler\\n        // of their own. However, it should be fairly easy for them to do that\\n        // by registering their unload handler before us.\\n        $(window).on('beforeunload unload', this.disconnect.bind(this));\\n    }\\n\\n    /**\\n     * Initializes the list of feature advertised through the disco-info\\n     * mechanism.\\n     */\\n    initFeaturesList() {\\n        // http://xmpp.org/extensions/xep-0167.html#support\\n        // http://xmpp.org/extensions/xep-0176.html#support\\n        this.caps.addFeature('urn:xmpp:jingle:1');\\n        this.caps.addFeature('urn:xmpp:jingle:apps:rtp:1');\\n        this.caps.addFeature('urn:xmpp:jingle:transports:ice-udp:1');\\n        this.caps.addFeature('urn:xmpp:jingle:apps:dtls:0');\\n        this.caps.addFeature('urn:xmpp:jingle:transports:dtls-sctp:1');\\n        this.caps.addFeature('urn:xmpp:jingle:apps:rtp:audio');\\n        this.caps.addFeature('urn:xmpp:jingle:apps:rtp:video');\\n\\n        if (!this.options.disableRtx && browser.supportsRtx()) {\\n            this.caps.addFeature('urn:ietf:rfc:4588');\\n        }\\n\\n        // this is dealt with by SDP O/A so we don't need to announce this\\n        // XEP-0293\\n        // this.caps.addFeature('urn:xmpp:jingle:apps:rtp:rtcp-fb:0');\\n        // XEP-0294\\n        // this.caps.addFeature('urn:xmpp:jingle:apps:rtp:rtp-hdrext:0');\\n\\n        this.caps.addFeature('urn:ietf:rfc:5761'); // rtcp-mux\\n        this.caps.addFeature('urn:ietf:rfc:5888'); // a=group, e.g. bundle\\n\\n        // this.caps.addFeature('urn:ietf:rfc:5576'); // a=ssrc\\n\\n        // Enable Lipsync ?\\n        if (browser.isChrome() && this.options.enableLipSync !== false) {\\n            logger.info('Lip-sync enabled !');\\n            this.caps.addFeature('http://jitsi.org/meet/lipsync');\\n        }\\n\\n        if (this.connection.rayo) {\\n            this.caps.addFeature('urn:xmpp:rayo:client:1');\\n        }\\n    }\\n\\n    /**\\n     * Returns {@code true} if the PING functionality is supported by the server\\n     * or {@code false} otherwise.\\n     * @returns {boolean}\\n     */\\n    isPingSupported() {\\n        return this._pingSupported !== false;\\n    }\\n\\n    /**\\n     *\\n     */\\n    getConnection() {\\n        return this.connection;\\n    }\\n\\n    /**\\n     * Receive connection status changes and handles them.\\n     *\\n     * @param {Object} credentials\\n     * @param {string} credentials.jid - The user's XMPP ID passed to the\\n     * connect method. For example, 'user@xmpp.com'.\\n     * @param {string} credentials.password - The password passed to the connect\\n     * method.\\n     * @param {string} status - One of Strophe's connection status strings.\\n     * @param {string} [msg] - The connection error message provided by Strophe.\\n     */\\n    connectionHandler(credentials = {}, status, msg) {\\n        const now = window.performance.now();\\n        const statusStr = Strophe.getStatusString(status).toLowerCase();\\n\\n        this.connectionTimes[statusStr] = now;\\n        logger.log(\\n            `(TIME) Strophe ${statusStr}${msg ? `[${msg}]` : ''}:\\\\t`,\\n            now);\\n        if (status === Strophe.Status.CONNECTED\\n            || status === Strophe.Status.ATTACHED) {\\n            if (this.options.useStunTurn\\n                || (this.options.p2p && this.options.p2p.useStunTurn)) {\\n                this.connection.jingle.getStunAndTurnCredentials();\\n            }\\n\\n            logger.info(`My Jabber ID: ${this.connection.jid}`);\\n\\n            // Schedule ping ?\\n            const pingJid = this.connection.domain;\\n\\n            this.caps.getFeaturesAndIdentities(pingJid)\\n                .then(({ features, identities }) => {\\n                    if (features.has(Strophe.NS.PING)) {\\n                        this._pingSupported = true;\\n                        this.connection.ping.startInterval(pingJid);\\n                    } else {\\n                        logger.warn(`Ping NOT supported by ${pingJid}`);\\n                    }\\n\\n                    // check for speakerstats\\n                    identities.forEach(identity => {\\n                        if (identity.type === 'speakerstats') {\\n                            this.speakerStatsComponentAddress = identity.name;\\n\\n                            this.connection.addHandler(\\n                                this._onPrivateMessage.bind(this), null,\\n                                'message', null, null);\\n                        }\\n                    });\\n                })\\n                .catch(error => {\\n                    const errmsg = 'Feature discovery error';\\n\\n                    GlobalOnErrorHandler.callErrorHandler(\\n                        new Error(`${errmsg}: ${error}`));\\n                    logger.error(errmsg, error);\\n                });\\n\\n            if (credentials.password) {\\n                this.authenticatedUser = true;\\n            }\\n            if (this.connection && this.connection.connected\\n                && Strophe.getResourceFromJid(this.connection.jid)) {\\n                // .connected is true while connecting?\\n                // this.connection.send($pres());\\n                this.eventEmitter.emit(\\n                    JitsiConnectionEvents.CONNECTION_ESTABLISHED,\\n                    Strophe.getResourceFromJid(this.connection.jid));\\n            }\\n        } else if (status === Strophe.Status.CONNFAIL) {\\n            if (msg === 'x-strophe-bad-non-anon-jid') {\\n                this.anonymousConnectionFailed = true;\\n            } else {\\n                this.connectionFailed = true;\\n            }\\n            this.lastErrorMsg = msg;\\n            if (msg === 'giving-up') {\\n                this.eventEmitter.emit(\\n                    JitsiConnectionEvents.CONNECTION_FAILED,\\n                    JitsiConnectionErrors.OTHER_ERROR, msg);\\n            }\\n        } else if (status === Strophe.Status.DISCONNECTED) {\\n            // Stop ping interval\\n            this.connection.ping.stopInterval();\\n            const wasIntentionalDisconnect = this.disconnectInProgress;\\n            const errMsg = msg || this.lastErrorMsg;\\n\\n            this.disconnectInProgress = false;\\n            if (this.anonymousConnectionFailed) {\\n                // prompt user for username and password\\n                this.eventEmitter.emit(\\n                    JitsiConnectionEvents.CONNECTION_FAILED,\\n                    JitsiConnectionErrors.PASSWORD_REQUIRED);\\n            } else if (this.connectionFailed) {\\n                this.eventEmitter.emit(\\n                    JitsiConnectionEvents.CONNECTION_FAILED,\\n                    JitsiConnectionErrors.OTHER_ERROR,\\n                    errMsg,\\n                    undefined, /* credentials */\\n                    this._getConnectionFailedReasonDetails());\\n            } else if (wasIntentionalDisconnect) {\\n                this.eventEmitter.emit(\\n                    JitsiConnectionEvents.CONNECTION_DISCONNECTED, errMsg);\\n            } else {\\n                // XXX if Strophe drops the connection while not being asked to,\\n                // it means that most likely some serious error has occurred.\\n                // One currently known case is when a BOSH request fails for\\n                // more than 4 times. The connection is dropped without\\n                // supplying a reason(error message/event) through the API.\\n                logger.error('XMPP connection dropped!');\\n\\n                // XXX if the last request error is within 5xx range it means it\\n                // was a server failure\\n                const lastErrorStatus = Strophe.getLastErrorStatus();\\n\\n                if (lastErrorStatus >= 500 && lastErrorStatus < 600) {\\n                    this.eventEmitter.emit(\\n                        JitsiConnectionEvents.CONNECTION_FAILED,\\n                        JitsiConnectionErrors.SERVER_ERROR,\\n                        errMsg || 'server-error');\\n                } else {\\n                    this.eventEmitter.emit(\\n                        JitsiConnectionEvents.CONNECTION_FAILED,\\n                        JitsiConnectionErrors.CONNECTION_DROPPED_ERROR,\\n                        errMsg || 'connection-dropped-error');\\n                }\\n            }\\n        } else if (status === Strophe.Status.AUTHFAIL) {\\n            // wrong password or username, prompt user\\n            this.eventEmitter.emit(\\n                JitsiConnectionEvents.CONNECTION_FAILED,\\n                JitsiConnectionErrors.PASSWORD_REQUIRED,\\n                msg,\\n                credentials);\\n        }\\n    }\\n\\n    /**\\n     *\\n     * @param jid\\n     * @param password\\n     */\\n    _connect(jid, password) {\\n        // connection.connect() starts the connection process.\\n        //\\n        // As the connection process proceeds, the user supplied callback will\\n        // be triggered multiple times with status updates. The callback should\\n        // take two arguments - the status code and the error condition.\\n        //\\n        // The status code will be one of the values in the Strophe.Status\\n        // constants. The error condition will be one of the conditions defined\\n        // in RFC 3920 or the condition ‘strophe-parsererror’.\\n        //\\n        // The Parameters wait, hold and route are optional and only relevant\\n        // for BOSH connections. Please see XEP 124 for a more detailed\\n        // explanation of the optional parameters.\\n        //\\n        // Connection status constants for use by the connection handler\\n        // callback.\\n        //\\n        //  Status.ERROR - An error has occurred (websockets specific)\\n        //  Status.CONNECTING - The connection is currently being made\\n        //  Status.CONNFAIL - The connection attempt failed\\n        //  Status.AUTHENTICATING - The connection is authenticating\\n        //  Status.AUTHFAIL - The authentication attempt failed\\n        //  Status.CONNECTED - The connection has succeeded\\n        //  Status.DISCONNECTED - The connection has been terminated\\n        //  Status.DISCONNECTING - The connection is currently being terminated\\n        //  Status.ATTACHED - The connection has been attached\\n\\n        this.anonymousConnectionFailed = false;\\n        this.connectionFailed = false;\\n        this.lastErrorMsg = undefined;\\n        this.connection.connect(\\n            jid,\\n            password,\\n            this.connectionHandler.bind(this, {\\n                jid,\\n                password\\n            }));\\n    }\\n\\n    /**\\n     * Attach to existing connection. Can be used for optimizations. For\\n     * example: if the connection is created on the server we can attach to it\\n     * and start using it.\\n     *\\n     * @param options {object} connecting options - rid, sid, jid and password.\\n     */\\n    attach(options) {\\n        const now = this.connectionTimes.attaching = window.performance.now();\\n\\n        logger.log(`(TIME) Strophe Attaching\\\\t:${now}`);\\n        this.connection.attach(options.jid, options.sid,\\n            parseInt(options.rid, 10) + 1,\\n            this.connectionHandler.bind(this, {\\n                jid: options.jid,\\n                password: options.password\\n            }));\\n    }\\n\\n    /**\\n     *\\n     * @param jid\\n     * @param password\\n     */\\n    connect(jid, password) {\\n        if (!jid) {\\n            const { anonymousdomain, domain } = this.options.hosts;\\n            let configDomain = anonymousdomain || domain;\\n\\n            // Force authenticated domain if room is appended with '?login=true'\\n            // or if we're joining with the token\\n\\n            // FIXME Do not rely on window.location because (1) React Native\\n            // does not have a window.location by default and (2) here we cannot\\n            // know for sure that query/search has not be stripped from\\n            // window.location by the time the following executes.\\n            const { location } = window;\\n\\n            if (anonymousdomain) {\\n                const search = location && location.search;\\n\\n                if ((search && search.indexOf('login=true') !== -1)\\n                        || this.token) {\\n                    configDomain = domain;\\n                }\\n            }\\n\\n            // eslint-disable-next-line no-param-reassign\\n            jid = configDomain || (location && location.hostname);\\n        }\\n\\n        return this._connect(jid, password);\\n    }\\n\\n    /**\\n     *\\n     * @param roomName\\n     * @param options\\n     */\\n    createRoom(roomName, options) {\\n        // By default MUC nickname is the resource part of the JID\\n        let mucNickname = Strophe.getNodeFromJid(this.connection.jid);\\n        let roomjid = `${roomName}@${this.options.hosts.muc}/`;\\n        const cfgNickname\\n            = options.useNicks && options.nick ? options.nick : null;\\n\\n        if (cfgNickname) {\\n            // Use nick if it's defined\\n            mucNickname = options.nick;\\n        } else if (!this.authenticatedUser) {\\n            // node of the anonymous JID is very long - here we trim it a bit\\n            mucNickname = mucNickname.substr(0, 8);\\n        }\\n\\n        // Constant JIDs need some random part to be appended in order to be\\n        // able to join the MUC more than once.\\n        if (this.authenticatedUser || cfgNickname !== null) {\\n            mucNickname += `-${RandomUtil.randomHexString(6)}`;\\n        }\\n\\n        roomjid += mucNickname;\\n\\n        return this.connection.emuc.createRoom(roomjid, null, options);\\n    }\\n\\n    /**\\n     * Returns the logs from strophe.jingle.\\n     * @returns {Object}\\n     */\\n    getJingleLog() {\\n        const jingle = this.connection.jingle;\\n\\n\\n        return jingle ? jingle.getLog() : {};\\n    }\\n\\n    /**\\n     * Returns the logs from strophe.\\n     */\\n    getXmppLog() {\\n        return (this.connection.logger || {}).log || null;\\n    }\\n\\n    /**\\n     *\\n     */\\n    dial(...args) {\\n        this.connection.rayo.dial(...args);\\n    }\\n\\n    /**\\n     * Pings the server. Remember to check {@link isPingSupported} before using\\n     * this method.\\n     * @param timeout how many ms before a timeout should occur.\\n     * @returns {Promise} resolved on ping success and reject on an error or\\n     * a timeout.\\n     */\\n    ping(timeout) {\\n        return new Promise((resolve, reject) => {\\n            if (this.isPingSupported()) {\\n                this.connection.ping\\n                    .ping(this.connection.domain, resolve, reject, timeout);\\n            } else {\\n                reject('PING operation is not supported by the server');\\n            }\\n        });\\n    }\\n\\n    /**\\n     *\\n     * @param jid\\n     * @param mute\\n     */\\n    setMute(jid, mute) {\\n        this.connection.moderate.setMute(jid, mute);\\n    }\\n\\n    /**\\n     *\\n     * @param jid\\n     */\\n    eject(jid) {\\n        this.connection.moderate.eject(jid);\\n    }\\n\\n    /**\\n     *\\n     */\\n    getSessions() {\\n        return this.connection.jingle.sessions;\\n    }\\n\\n    /**\\n     * Disconnects this from the XMPP server (if this is connected).\\n     *\\n     * @param ev optionally, the event which triggered the necessity to\\n     * disconnect from the XMPP server (e.g. beforeunload, unload).\\n     */\\n    disconnect(ev) {\\n        if (this.disconnectInProgress || !this.connection) {\\n            this.eventEmitter.emit(JitsiConnectionEvents.WRONG_STATE);\\n\\n            return;\\n        }\\n\\n        this.disconnectInProgress = true;\\n\\n        // XXX Strophe is asynchronously sending by default. Unfortunately, that\\n        // means that there may not be enough time to send an unavailable\\n        // presence or disconnect at all. Switching Strophe to synchronous\\n        // sending is not much of an option because it may lead to a noticeable\\n        // delay in navigating away from the current location. As a compromise,\\n        // we will try to increase the chances of sending an unavailable\\n        // presence and/or disconecting within the short time span that we have\\n        // upon unloading by invoking flush() on the connection. We flush() once\\n        // before disconnect() in order to attemtp to have its unavailable\\n        // presence at the top of the send queue. We flush() once more after\\n        // disconnect() in order to attempt to have its unavailable presence\\n        // sent as soon as possible.\\n        this.connection.flush();\\n\\n        if (ev !== null && typeof ev !== 'undefined') {\\n            const evType = ev.type;\\n\\n            if (evType === 'beforeunload' || evType === 'unload') {\\n                // XXX Whatever we said above, synchronous sending is the best\\n                // (known) way to properly disconnect from the XMPP server.\\n                // Consequently, it may be fine to have the source code and\\n                // comment it in or out depending on whether we want to run with\\n                // it for some time.\\n                this.connection.options.sync = true;\\n            }\\n        }\\n\\n        this.connection.disconnect();\\n\\n        if (this.connection.options.sync !== true) {\\n            this.connection.flush();\\n        }\\n    }\\n\\n    /**\\n     *\\n     */\\n    _initStrophePlugins() {\\n        const iceConfig = {\\n            jvb: { iceServers: [ ] },\\n            p2p: { iceServers: [ ] }\\n        };\\n\\n        const p2pStunServers = (this.options.p2p\\n            && this.options.p2p.stunServers) || DEFAULT_STUN_SERVERS;\\n\\n        if (Array.isArray(p2pStunServers)) {\\n            logger.info('P2P STUN servers: ', p2pStunServers);\\n            iceConfig.p2p.iceServers = p2pStunServers;\\n        }\\n\\n        if (this.options.p2p && this.options.p2p.iceTransportPolicy) {\\n            logger.info('P2P ICE transport policy: ',\\n                this.options.p2p.iceTransportPolicy);\\n\\n            iceConfig.p2p.iceTransportPolicy\\n                = this.options.p2p.iceTransportPolicy;\\n        }\\n\\n        initEmuc(this);\\n        initJingle(this, this.eventEmitter, iceConfig);\\n        initStropheUtil();\\n        initPing(this);\\n        initRayo();\\n        initStropheLogger();\\n    }\\n\\n    /**\\n     * Returns details about connection failure. Shard change or is it after\\n     * suspend.\\n     * @returns {object} contains details about a connection failure.\\n     * @private\\n     */\\n    _getConnectionFailedReasonDetails() {\\n        const details = {};\\n\\n        // check for moving between shard if information is available\\n        if (this.options.deploymentInfo\\n            && this.options.deploymentInfo.shard\\n            && this.connection._proto\\n            && this.connection._proto.lastResponseHeaders) {\\n\\n            // split headers by line\\n            const headersArr = this.connection._proto.lastResponseHeaders\\n                .trim().split(/[\\\\r\\\\n]+/);\\n            const headers = {};\\n\\n            headersArr.forEach(line => {\\n                const parts = line.split(': ');\\n                const header = parts.shift();\\n                const value = parts.join(': ');\\n\\n                headers[header] = value;\\n            });\\n\\n            /* eslint-disable camelcase */\\n            details.shard_changed\\n                = this.options.deploymentInfo.shard\\n                    !== headers['x-jitsi-shard'];\\n            /* eslint-enable camelcase */\\n        }\\n\\n        /* eslint-disable camelcase */\\n        // check for possible suspend\\n        details.suspend_time = this.connection.ping.getPingSuspendTime();\\n        /* eslint-enable camelcase */\\n\\n        return details;\\n    }\\n\\n    /**\\n     * Notifies speaker stats component if available that we are the new\\n     * dominant speaker in the conference.\\n     * @param {String} roomJid - The room jid where the speaker event occurred.\\n     */\\n    sendDominantSpeakerEvent(roomJid) {\\n        // no speaker stats component advertised\\n        if (!this.speakerStatsComponentAddress || !roomJid) {\\n            return;\\n        }\\n\\n        const msg = $msg({ to: this.speakerStatsComponentAddress });\\n\\n        msg.c('speakerstats', {\\n            xmlns: 'http://jitsi.org/jitmeet',\\n            room: roomJid })\\n            .up();\\n\\n        this.connection.send(msg);\\n    }\\n\\n    /**\\n     * Check if the given argument is a valid JSON ENDPOINT_MESSAGE string by\\n     * parsing it and checking if it has a field called 'type'.\\n     *\\n     * @param {string} jsonString check if this string is a valid json string\\n     * and contains the special structure.\\n     * @returns {boolean, object} if given object is a valid JSON string, return\\n     * the json object. Otherwise, returns false.\\n     */\\n    tryParseJSONAndVerify(jsonString) {\\n        try {\\n            const json = JSON.parse(jsonString);\\n\\n            // Handle non-exception-throwing cases:\\n            // Neither JSON.parse(false) or JSON.parse(1234) throw errors,\\n            // hence the type-checking,\\n            // but... JSON.parse(null) returns null, and\\n            // typeof null === \\\"object\\\",\\n            // so we must check for that, too.\\n            // Thankfully, null is falsey, so this suffices:\\n            if (json && typeof json === 'object') {\\n                const type = json[JITSI_MEET_MUC_TYPE];\\n\\n                if (typeof type !== 'undefined') {\\n                    return json;\\n                }\\n\\n                logger.debug('parsing valid json but does not have correct '\\n                    + 'structure', 'topic: ', type);\\n            }\\n        } catch (e) {\\n            return false;\\n        }\\n\\n        return false;\\n    }\\n\\n    /**\\n     * A private message is received, message that is not addressed to the muc.\\n     * We expect private message coming from speaker stats component if it is\\n     * enabled and running.\\n     *\\n     * @param {string} msg - The message.\\n     */\\n    _onPrivateMessage(msg) {\\n        const from = msg.getAttribute('from');\\n\\n        if (!this.speakerStatsComponentAddress\\n            || from !== this.speakerStatsComponentAddress) {\\n            return;\\n        }\\n\\n        const jsonMessage = $(msg).find('>json-message')\\n            .text();\\n        const parsedJson = this.tryParseJSONAndVerify(jsonMessage);\\n\\n        if (parsedJson\\n            && parsedJson[JITSI_MEET_MUC_TYPE] === 'speakerstats'\\n            && parsedJson.users) {\\n            this.eventEmitter.emit(\\n                XMPPEvents.SPEAKER_STATS_RECEIVED, parsedJson.users);\\n        }\\n\\n        return true;\\n    }\\n}\\n\",\"/**\\n * The errors for the connection.\\n */\\n\\n/**\\n * Indicates that the connection was dropped with an error which was most likely\\n * caused by some networking issues. The dropped term in this context means that\\n * the connection was closed unexpectedly (not on user's request).\\n *\\n * One example is 'item-not-found' error thrown by Prosody when the BOSH session\\n * times out after 60 seconds of inactivity. On the other hand 'item-not-found'\\n * could also happen when BOSH request is sent to the server with the session-id\\n * that is not know to the server. But this should not happen in lib-jitsi-meet\\n * case as long as the service is configured correctly (there is no bug).\\n */\\nexport const CONNECTION_DROPPED_ERROR = 'connection.droppedError';\\n\\n/**\\n * Not specified errors.\\n */\\nexport const OTHER_ERROR = 'connection.otherError';\\n\\n/**\\n * Indicates that a password is required in order to join the conference.\\n */\\nexport const PASSWORD_REQUIRED = 'connection.passwordRequired';\\n\\n/**\\n * Indicates that the connection was dropped, because of too many 5xx HTTP\\n * errors on BOSH requests.\\n */\\nexport const SERVER_ERROR = 'connection.serverError';\\n\",\"/**\\n * Event triggered when participant's muted status changes.\\n * @param {string} endpointId the track owner's identifier (MUC nickname)\\n * @param {MediaType} mediaType \\\"audio\\\" or \\\"video\\\"\\n * @param {boolean} isMuted the new muted state\\n */\\nexport const PEER_MUTED_CHANGED = 'signaling.peerMuted';\\n\\n/**\\n * Event triggered when participant's video type changes.\\n * @param {string} endpointId the video owner's ID (MUC nickname)\\n * @param {VideoType} videoType the new value\\n */\\nexport const PEER_VIDEO_TYPE_CHANGED = 'signaling.peerVideoType';\\n\",\"/* global chrome, $, alert */\\n\\nimport JitsiTrackError from '../../JitsiTrackError';\\nimport * as JitsiTrackErrors from '../../JitsiTrackErrors';\\nimport browser from '../browser';\\n\\nconst logger = require('jitsi-meet-logger').getLogger(__filename);\\nconst GlobalOnErrorHandler = require('../util/GlobalOnErrorHandler');\\n\\n/**\\n * Indicates whether the Chrome desktop sharing extension is installed.\\n * @type {boolean}\\n */\\nlet chromeExtInstalled = false;\\n\\n/**\\n * Indicates whether an update of the Chrome desktop sharing extension is\\n * required.\\n * @type {boolean}\\n */\\nlet chromeExtUpdateRequired = false;\\n\\nlet gumFunction = null;\\n\\n/**\\n * The error message returned by chrome when the extension is installed.\\n */\\nconst CHROME_NO_EXTENSION_ERROR_MSG // eslint-disable-line no-unused-vars\\n    = 'Could not establish connection. Receiving end does not exist.';\\n\\n/**\\n * Handles obtaining a stream from a screen capture on different browsers.\\n */\\nconst ScreenObtainer = {\\n    /**\\n     * If not <tt>null</tt> it means that the initialization process is still in\\n     * progress. It is used to make desktop stream request wait and continue\\n     * after it's done.\\n     * {@type Promise|null}\\n     */\\n    intChromeExtPromise: null,\\n\\n    obtainStream: null,\\n\\n    /**\\n     * Initializes the function used to obtain a screen capture\\n     * (this.obtainStream).\\n     *\\n     * @param {object} options\\n     * @param {boolean} [options.desktopSharingChromeDisabled]\\n     * @param {boolean} [options.desktopSharingChromeExtId]\\n     * @param {boolean} [options.desktopSharingFirefoxDisabled]\\n     * @param {Function} gum GUM method\\n     */\\n    init(options = {\\n        desktopSharingChromeDisabled: false,\\n        desktopSharingChromeExtId: null,\\n        desktopSharingFirefoxDisabled: false\\n    }, gum) {\\n        this.options = options;\\n        gumFunction = gum;\\n\\n        this.obtainStream = this._createObtainStreamMethod(options);\\n\\n        if (!this.obtainStream) {\\n            logger.info('Desktop sharing disabled');\\n        }\\n    },\\n\\n    /**\\n     * Returns a method which will be used to obtain the screen sharing stream\\n     * (based on the browser type).\\n     *\\n     * @param {object} options passed from {@link init} - check description\\n     * there\\n     * @returns {Function}\\n     * @private\\n     */\\n    _createObtainStreamMethod(options) {\\n        if (browser.isNWJS()) {\\n            return (_, onSuccess, onFailure) => {\\n                window.JitsiMeetNW.obtainDesktopStream(\\n                    onSuccess,\\n                    (error, constraints) => {\\n                        let jitsiError;\\n\\n                        // FIXME:\\n                        // This is very very dirty fix for recognising that the\\n                        // user have clicked the cancel button from the Desktop\\n                        // sharing pick window. The proper solution would be to\\n                        // detect this in the NWJS application by checking the\\n                        // streamId === \\\"\\\". Even better solution would be to\\n                        // stop calling GUM from the NWJS app and just pass the\\n                        // streamId to lib-jitsi-meet. This way the desktop\\n                        // sharing implementation for NWJS and chrome extension\\n                        // will be the same and lib-jitsi-meet will be able to\\n                        // control the constraints, check the streamId, etc.\\n                        //\\n                        // I cannot find documentation about \\\"InvalidStateError\\\"\\n                        // but this is what we are receiving from GUM when the\\n                        // streamId for the desktop sharing is \\\"\\\".\\n\\n                        if (error && error.name === 'InvalidStateError') {\\n                            jitsiError = new JitsiTrackError(\\n                                JitsiTrackErrors.CHROME_EXTENSION_USER_CANCELED\\n                            );\\n                        } else {\\n                            jitsiError = new JitsiTrackError(\\n                                error, constraints, [ 'desktop' ]);\\n                        }\\n                        (typeof onFailure === 'function')\\n                            && onFailure(jitsiError);\\n                    });\\n            };\\n        } else if (browser.isElectron()) {\\n            return this.obtainScreenOnElectron;\\n        } else if (browser.isChrome() || browser.isOpera()) {\\n            if (browser.supportsGetDisplayMedia()\\n                    && !options.desktopSharingChromeDisabled) {\\n\\n                return this.obtainScreenFromGetDisplayMedia;\\n            } else if (options.desktopSharingChromeDisabled\\n                || !options.desktopSharingChromeExtId) {\\n\\n                return null;\\n            }\\n\\n            logger.info('Using Chrome extension for desktop sharing');\\n            this.intChromeExtPromise\\n                = initChromeExtension(options).then(() => {\\n                    this.intChromeExtPromise = null;\\n                });\\n\\n            return this.obtainScreenFromExtension;\\n        } else if (browser.isFirefox()) {\\n            if (options.desktopSharingFirefoxDisabled) {\\n                return null;\\n            } else if (browser.supportsGetDisplayMedia()) {\\n                // Firefox 66 support getDisplayMedia\\n                return this.obtainScreenFromGetDisplayMedia;\\n            }\\n\\n            // Legacy Firefox\\n            return this.obtainScreenOnFirefox;\\n        } else if (browser.isEdge() && browser.supportsGetDisplayMedia()) {\\n            return this.obtainScreenFromGetDisplayMedia;\\n        }\\n\\n        logger.log(\\n            'Screen sharing not supported by the current browser: ',\\n            browser.getName());\\n\\n        return null;\\n    },\\n\\n    /**\\n     * Checks whether obtaining a screen capture is supported in the current\\n     * environment.\\n     * @returns {boolean}\\n     */\\n    isSupported() {\\n        return this.obtainStream !== null;\\n    },\\n\\n    /**\\n     * Obtains a screen capture stream on Firefox.\\n     * @param callback\\n     * @param errorCallback\\n     */\\n    obtainScreenOnFirefox(options, callback, errorCallback) {\\n        obtainWebRTCScreen(options.gumOptions, callback, errorCallback);\\n    },\\n\\n    /**\\n     * Obtains a screen capture stream on Electron.\\n     *\\n     * @param {Object} [options] - Screen sharing options.\\n     * @param {Array<string>} [options.desktopSharingSources] - Array with the\\n     * sources that have to be displayed in the desktop picker window ('screen',\\n     * 'window', etc.).\\n     * @param onSuccess - Success callback.\\n     * @param onFailure - Failure callback.\\n     */\\n    obtainScreenOnElectron(options = {}, onSuccess, onFailure) {\\n        if (window.JitsiMeetScreenObtainer\\n            && window.JitsiMeetScreenObtainer.openDesktopPicker) {\\n            const { desktopSharingSources, gumOptions } = options;\\n\\n            window.JitsiMeetScreenObtainer.openDesktopPicker(\\n                {\\n                    desktopSharingSources: desktopSharingSources\\n                        || this.options.desktopSharingChromeSources\\n                },\\n                (streamId, streamType) =>\\n                    onGetStreamResponse(\\n                        {\\n                            response: {\\n                                streamId,\\n                                streamType\\n                            },\\n                            gumOptions\\n                        },\\n                        onSuccess,\\n                        onFailure\\n                    ),\\n                err => onFailure(new JitsiTrackError(\\n                    JitsiTrackErrors.ELECTRON_DESKTOP_PICKER_ERROR,\\n                    err\\n                ))\\n            );\\n        } else {\\n            onFailure(new JitsiTrackError(\\n                JitsiTrackErrors.ELECTRON_DESKTOP_PICKER_NOT_FOUND));\\n        }\\n    },\\n\\n    /**\\n     * Asks Chrome extension to call chooseDesktopMedia and gets chrome\\n     * 'desktop' stream for returned stream token.\\n     */\\n    obtainScreenFromExtension(options, streamCallback, failCallback) {\\n        if (this.intChromeExtPromise !== null) {\\n            this.intChromeExtPromise.then(() => {\\n                this.obtainScreenFromExtension(\\n                    options, streamCallback, failCallback);\\n            });\\n\\n            return;\\n        }\\n\\n        const {\\n            desktopSharingChromeExtId,\\n            desktopSharingChromeSources\\n        } = this.options;\\n\\n        const {\\n            gumOptions\\n        } = options;\\n\\n        const doGetStreamFromExtensionOptions = {\\n            desktopSharingChromeExtId,\\n            desktopSharingChromeSources:\\n                options.desktopSharingSources || desktopSharingChromeSources,\\n            gumOptions\\n        };\\n\\n        if (chromeExtInstalled) {\\n            doGetStreamFromExtension(\\n                doGetStreamFromExtensionOptions,\\n                streamCallback,\\n                failCallback);\\n        } else {\\n            if (chromeExtUpdateRequired) {\\n                /* eslint-disable no-alert */\\n                alert(\\n                    'Jitsi Desktop Streamer requires update. '\\n                    + 'Changes will take effect after next Chrome restart.');\\n\\n                /* eslint-enable no-alert */\\n            }\\n\\n            this.handleExternalInstall(options, streamCallback,\\n                failCallback);\\n        }\\n    },\\n\\n    /* eslint-disable max-params */\\n\\n    handleExternalInstall(options, streamCallback, failCallback, e) {\\n        const webStoreInstallUrl = getWebStoreInstallUrl(this.options);\\n\\n        options.listener('waitingForExtension', webStoreInstallUrl);\\n        this.checkForChromeExtensionOnInterval(options, streamCallback,\\n            failCallback, e);\\n    },\\n\\n    /* eslint-enable max-params */\\n\\n    checkForChromeExtensionOnInterval(options, streamCallback, failCallback) {\\n        if (options.checkAgain() === false) {\\n            failCallback(new JitsiTrackError(\\n                JitsiTrackErrors.CHROME_EXTENSION_INSTALLATION_ERROR));\\n\\n            return;\\n        }\\n        waitForExtensionAfterInstall(this.options, options.interval, 1)\\n            .then(() => {\\n                chromeExtInstalled = true;\\n                options.listener('extensionFound');\\n                this.obtainScreenFromExtension(options,\\n                    streamCallback, failCallback);\\n            })\\n            .catch(() => {\\n                this.checkForChromeExtensionOnInterval(options,\\n                    streamCallback, failCallback);\\n            });\\n    },\\n\\n    /**\\n     * Obtains a screen capture stream using getDisplayMedia.\\n     *\\n     * @param callback - The success callback.\\n     * @param errorCallback - The error callback.\\n     */\\n    obtainScreenFromGetDisplayMedia(options, callback, errorCallback) {\\n        logger.info('Using getDisplayMedia for screen sharing');\\n\\n        let getDisplayMedia;\\n\\n        if (navigator.getDisplayMedia) {\\n            getDisplayMedia = navigator.getDisplayMedia.bind(navigator);\\n        } else {\\n            // eslint-disable-next-line max-len\\n            getDisplayMedia = navigator.mediaDevices.getDisplayMedia.bind(navigator.mediaDevices);\\n        }\\n\\n        getDisplayMedia({ video: true })\\n            .then(stream => {\\n                let applyConstraintsPromise;\\n\\n                if (stream\\n                    && stream.getTracks()\\n                    && stream.getTracks().length > 0) {\\n                    applyConstraintsPromise = stream.getTracks()[0]\\n                        .applyConstraints(options.trackOptions);\\n                } else {\\n                    applyConstraintsPromise = Promise.resolve();\\n                }\\n\\n                applyConstraintsPromise.then(() =>\\n                    callback({\\n                        stream,\\n                        sourceId: stream.id\\n                    }));\\n            })\\n            .catch(() =>\\n                errorCallback(new JitsiTrackError(JitsiTrackErrors\\n                    .CHROME_EXTENSION_USER_CANCELED)));\\n    }\\n};\\n\\n/**\\n * Obtains a desktop stream using getUserMedia.\\n * For this to work on Chrome, the\\n * 'chrome://flags/#enable-usermedia-screen-capture' flag must be enabled.\\n *\\n * On firefox, the document's domain must be white-listed in the\\n * 'media.getusermedia.screensharing.allowed_domains' preference in\\n * 'about:config'.\\n */\\nfunction obtainWebRTCScreen(options, streamCallback, failCallback) {\\n    gumFunction([ 'screen' ], options)\\n        .then(stream => streamCallback({ stream }), failCallback);\\n}\\n\\n/**\\n * Constructs inline install URL for Chrome desktop streaming extension.\\n * The 'chromeExtensionId' must be defined in options parameter.\\n * @param options supports \\\"desktopSharingChromeExtId\\\"\\n * @returns {string}\\n */\\nfunction getWebStoreInstallUrl(options) {\\n    return (\\n        `https://chrome.google.com/webstore/detail/${\\n            options.desktopSharingChromeExtId}`);\\n}\\n\\n/**\\n * Checks whether an update of the Chrome extension is required.\\n * @param minVersion minimal required version\\n * @param extVersion current extension version\\n * @returns {boolean}\\n */\\nfunction isUpdateRequired(minVersion, extVersion) {\\n    try {\\n        const s1 = minVersion.split('.');\\n        const s2 = extVersion.split('.');\\n\\n        const len = Math.max(s1.length, s2.length);\\n\\n        for (let i = 0; i < len; i++) {\\n            let n1 = 0,\\n                n2 = 0;\\n\\n            if (i < s1.length) {\\n                n1 = parseInt(s1[i], 10);\\n            }\\n            if (i < s2.length) {\\n                n2 = parseInt(s2[i], 10);\\n            }\\n\\n            if (isNaN(n1) || isNaN(n2)) {\\n                return true;\\n            } else if (n1 !== n2) {\\n                return n1 > n2;\\n            }\\n        }\\n\\n        // will happen if both versions have identical numbers in\\n        // their components (even if one of them is longer, has more components)\\n        return false;\\n    } catch (e) {\\n        GlobalOnErrorHandler.callErrorHandler(e);\\n        logger.error('Failed to parse extension version', e);\\n\\n        return true;\\n    }\\n}\\n\\n/**\\n *\\n * @param callback\\n * @param options\\n */\\nfunction checkChromeExtInstalled(callback, options) {\\n    if (typeof chrome === 'undefined' || !chrome || !chrome.runtime) {\\n        // No API, so no extension for sure\\n        callback(false, false);\\n\\n        return;\\n    }\\n    chrome.runtime.sendMessage(\\n        options.desktopSharingChromeExtId,\\n        { getVersion: true },\\n        response => {\\n            if (!response || !response.version) {\\n                // Communication failure - assume that no endpoint exists\\n                logger.warn(\\n                    'Extension not installed?: ', chrome.runtime.lastError);\\n                callback(false, false);\\n\\n                return;\\n            }\\n\\n            // Check installed extension version\\n            const extVersion = response.version;\\n\\n            logger.log(`Extension version is: ${extVersion}`);\\n            const updateRequired\\n                = isUpdateRequired(\\n                    options.desktopSharingChromeMinExtVersion,\\n                    extVersion);\\n\\n            callback(!updateRequired, updateRequired);\\n        }\\n    );\\n}\\n\\n/**\\n *\\n * @param options\\n * @param streamCallback\\n * @param failCallback\\n */\\nfunction doGetStreamFromExtension(options, streamCallback, failCallback) {\\n    const {\\n        desktopSharingChromeSources,\\n        desktopSharingChromeExtId,\\n        gumOptions\\n    } = options;\\n\\n    // Sends 'getStream' msg to the extension.\\n    // Extension id must be defined in the config.\\n    chrome.runtime.sendMessage(\\n        desktopSharingChromeExtId,\\n        {\\n            getStream: true,\\n            sources: desktopSharingChromeSources\\n        },\\n        response => {\\n            if (!response) {\\n                // possibly re-wraping error message to make code consistent\\n                const lastError = chrome.runtime.lastError;\\n\\n                failCallback(lastError instanceof Error\\n                    ? lastError\\n                    : new JitsiTrackError(\\n                        JitsiTrackErrors.CHROME_EXTENSION_GENERIC_ERROR,\\n                        lastError));\\n\\n                return;\\n            }\\n            logger.log('Response from extension: ', response);\\n            onGetStreamResponse(\\n                {\\n                    response,\\n                    gumOptions\\n                },\\n                streamCallback,\\n                failCallback\\n            );\\n        }\\n    );\\n}\\n\\n/**\\n * Initializes <link rel=chrome-webstore-item /> with extension id set in\\n * config.js to support inline installs. Host site must be selected as main\\n * website of published extension.\\n * @param options supports \\\"desktopSharingChromeExtId\\\"\\n */\\nfunction initInlineInstalls(options) {\\n    if ($('link[rel=chrome-webstore-item]').length === 0) {\\n        $('head').append('<link rel=\\\"chrome-webstore-item\\\">');\\n    }\\n    $('link[rel=chrome-webstore-item]').attr('href',\\n        getWebStoreInstallUrl(options));\\n}\\n\\n/**\\n *\\n * @param options\\n *\\n * @return {Promise} - a Promise resolved once the initialization process is\\n * finished.\\n */\\nfunction initChromeExtension(options) {\\n    // Initialize Chrome extension inline installs\\n    initInlineInstalls(options);\\n\\n    return new Promise(resolve => {\\n        // Check if extension is installed\\n        checkChromeExtInstalled((installed, updateRequired) => {\\n            chromeExtInstalled = installed;\\n            chromeExtUpdateRequired = updateRequired;\\n            logger.info(\\n                `Chrome extension installed: ${\\n                    chromeExtInstalled} updateRequired: ${\\n                    chromeExtUpdateRequired}`);\\n            resolve();\\n        }, options);\\n    });\\n}\\n\\n/**\\n * Checks \\\"retries\\\" times on every \\\"waitInterval\\\"ms whether the ext is alive.\\n * @param {Object} options the options passed to ScreanObtainer.obtainStream\\n * @param {int} waitInterval the number of ms between retries\\n * @param {int} retries the number of retries\\n * @returns {Promise} returns promise that will be resolved when the extension\\n * is alive and rejected if the extension is not alive even after \\\"retries\\\"\\n * checks\\n */\\nfunction waitForExtensionAfterInstall(options, waitInterval, retries) {\\n    if (retries === 0) {\\n        return Promise.reject();\\n    }\\n\\n    return new Promise((resolve, reject) => {\\n        let currentRetries = retries;\\n        const interval = window.setInterval(() => {\\n            checkChromeExtInstalled(installed => {\\n                if (installed) {\\n                    window.clearInterval(interval);\\n                    resolve();\\n                } else {\\n                    currentRetries--;\\n                    if (currentRetries === 0) {\\n                        reject();\\n                        window.clearInterval(interval);\\n                    }\\n                }\\n            }, options);\\n        }, waitInterval);\\n    });\\n}\\n\\n/**\\n * Handles response from external application / extension and calls GUM to\\n * receive the desktop streams or reports error.\\n * @param {object} options\\n * @param {object} options.response\\n * @param {string} options.response.streamId - the streamId for the desktop\\n * stream.\\n * @param {string} options.response.error - error to be reported.\\n * @param {object} options.gumOptions - options passed to GUM.\\n * @param {Function} onSuccess - callback for success.\\n * @param {Function} onFailure - callback for failure.\\n * @param {object} gumOptions - options passed to GUM.\\n */\\nfunction onGetStreamResponse(\\n        options = {\\n            response: {},\\n            gumOptions: {}\\n        },\\n        onSuccess,\\n        onFailure) {\\n    const { streamId, streamType, error } = options.response || {};\\n\\n    if (streamId) {\\n        const gumOptions = {\\n            desktopStream: streamId,\\n            ...options.gumOptions\\n        };\\n\\n        gumFunction([ 'desktop' ], gumOptions)\\n            .then(stream => onSuccess({\\n                stream,\\n                sourceId: streamId,\\n                sourceType: streamType\\n            }), onFailure);\\n    } else {\\n        // As noted in Chrome Desktop Capture API:\\n        // If user didn't select any source (i.e. canceled the prompt)\\n        // then the callback is called with an empty streamId.\\n        if (streamId === '') {\\n            onFailure(new JitsiTrackError(\\n                JitsiTrackErrors.CHROME_EXTENSION_USER_CANCELED));\\n\\n            return;\\n        }\\n\\n        onFailure(new JitsiTrackError(\\n            JitsiTrackErrors.CHROME_EXTENSION_GENERIC_ERROR,\\n            error));\\n    }\\n}\\n\\nexport default ScreenObtainer;\\n\",\"/*\\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\\n *\\n *  Use of this source code is governed by a BSD-style license\\n *  that can be found in the LICENSE file in the root of the source\\n *  tree.\\n */\\n /* eslint-env node */\\n'use strict';\\n\\nvar logDisabled_ = true;\\nvar deprecationWarnings_ = true;\\n\\n// Utility methods.\\nvar utils = {\\n  disableLog: function(bool) {\\n    if (typeof bool !== 'boolean') {\\n      return new Error('Argument type: ' + typeof bool +\\n          '. Please use a boolean.');\\n    }\\n    logDisabled_ = bool;\\n    return (bool) ? 'adapter.js logging disabled' :\\n        'adapter.js logging enabled';\\n  },\\n\\n  /**\\n   * Disable or enable deprecation warnings\\n   * @param {!boolean} bool set to true to disable warnings.\\n   */\\n  disableWarnings: function(bool) {\\n    if (typeof bool !== 'boolean') {\\n      return new Error('Argument type: ' + typeof bool +\\n          '. Please use a boolean.');\\n    }\\n    deprecationWarnings_ = !bool;\\n    return 'adapter.js deprecation warnings ' + (bool ? 'disabled' : 'enabled');\\n  },\\n\\n  log: function() {\\n    if (typeof window === 'object') {\\n      if (logDisabled_) {\\n        return;\\n      }\\n      if (typeof console !== 'undefined' && typeof console.log === 'function') {\\n        console.log.apply(console, arguments);\\n      }\\n    }\\n  },\\n\\n  /**\\n   * Shows a deprecation warning suggesting the modern and spec-compatible API.\\n   */\\n  deprecated: function(oldMethod, newMethod) {\\n    if (!deprecationWarnings_) {\\n      return;\\n    }\\n    console.warn(oldMethod + ' is deprecated, please use ' + newMethod +\\n        ' instead.');\\n  },\\n\\n  /**\\n   * Extract browser version out of the provided user agent string.\\n   *\\n   * @param {!string} uastring userAgent string.\\n   * @param {!string} expr Regular expression used as match criteria.\\n   * @param {!number} pos position in the version string to be returned.\\n   * @return {!number} browser version.\\n   */\\n  extractVersion: function(uastring, expr, pos) {\\n    var match = uastring.match(expr);\\n    return match && match.length >= pos && parseInt(match[pos], 10);\\n  },\\n\\n  /**\\n   * Browser detector.\\n   *\\n   * @return {object} result containing browser and version\\n   *     properties.\\n   */\\n  detectBrowser: function(window) {\\n    var navigator = window && window.navigator;\\n\\n    // Returned result object.\\n    var result = {};\\n    result.browser = null;\\n    result.version = null;\\n\\n    // Fail early if it's not a browser\\n    if (typeof window === 'undefined' || !window.navigator) {\\n      result.browser = 'Not a browser.';\\n      return result;\\n    }\\n\\n    // Firefox.\\n    if (navigator.mozGetUserMedia) {\\n      result.browser = 'firefox';\\n      result.version = this.extractVersion(navigator.userAgent,\\n          /Firefox\\\\/(\\\\d+)\\\\./, 1);\\n    } else if (navigator.webkitGetUserMedia) {\\n      // Chrome, Chromium, Webview, Opera, all use the chrome shim for now\\n      if (window.webkitRTCPeerConnection) {\\n        result.browser = 'chrome';\\n        result.version = this.extractVersion(navigator.userAgent,\\n          /Chrom(e|ium)\\\\/(\\\\d+)\\\\./, 2);\\n      } else { // Safari (in an unpublished version) or unknown webkit-based.\\n        if (navigator.userAgent.match(/Version\\\\/(\\\\d+).(\\\\d+)/)) {\\n          result.browser = 'safari';\\n          result.version = this.extractVersion(navigator.userAgent,\\n            /AppleWebKit\\\\/(\\\\d+)\\\\./, 1);\\n        } else { // unknown webkit-based browser.\\n          result.browser = 'Unsupported webkit-based browser ' +\\n              'with GUM support but no WebRTC support.';\\n          return result;\\n        }\\n      }\\n    } else if (navigator.mediaDevices &&\\n        navigator.userAgent.match(/Edge\\\\/(\\\\d+).(\\\\d+)$/)) { // Edge.\\n      result.browser = 'edge';\\n      result.version = this.extractVersion(navigator.userAgent,\\n          /Edge\\\\/(\\\\d+).(\\\\d+)$/, 2);\\n    } else if (navigator.mediaDevices &&\\n        navigator.userAgent.match(/AppleWebKit\\\\/(\\\\d+)\\\\./)) {\\n        // Safari, with webkitGetUserMedia removed.\\n      result.browser = 'safari';\\n      result.version = this.extractVersion(navigator.userAgent,\\n          /AppleWebKit\\\\/(\\\\d+)\\\\./, 1);\\n    } else { // Default fallthrough: not supported.\\n      result.browser = 'Not a supported browser.';\\n      return result;\\n    }\\n\\n    return result;\\n  },\\n\\n};\\n\\n// Export.\\nmodule.exports = {\\n  log: utils.log,\\n  deprecated: utils.deprecated,\\n  disableLog: utils.disableLog,\\n  disableWarnings: utils.disableWarnings,\\n  extractVersion: utils.extractVersion,\\n  shimCreateObjectURL: utils.shimCreateObjectURL,\\n  detectBrowser: utils.detectBrowser.bind(utils)\\n};\\n\",\"/**\\n * The possible camera facing modes. For now support only 'user' and\\n * 'environment' because 'left' and 'right' are not used anywhere in our\\n * projects at the time of this writing. For more information please refer to\\n * https://w3c.github.io/mediacapture-main/getusermedia.html\\n * #def-constraint-facingMode.\\n *\\n * @enum {string}\\n */\\nconst CameraFacingMode = {\\n    /**\\n     * The mode which specifies the environment-facing camera.\\n     */\\n    ENVIRONMENT: 'environment',\\n\\n    /**\\n     * The mode which specifies the user-facing camera.\\n     */\\n    USER: 'user'\\n};\\n\\nmodule.exports = CameraFacingMode;\\n\",\"var g;\\n\\n// This works in non-strict mode\\ng = (function() {\\n\\treturn this;\\n})();\\n\\ntry {\\n\\t// This works if eval is allowed (see CSP)\\n\\tg = g || new Function(\\\"return this\\\")();\\n} catch (e) {\\n\\t// This works if the window reference is available\\n\\tif (typeof window === \\\"object\\\") g = window;\\n}\\n\\n// g can still be undefined, but nothing to do about it...\\n// We return undefined, instead of nothing here, so it's\\n// easier to handle this case. if(!global) { ...}\\n\\nmodule.exports = g;\\n\",\"/* global __filename */\\nimport { getLogger } from 'jitsi-meet-logger';\\nimport * as JitsiConferenceEvents from '../../JitsiConferenceEvents';\\nimport * as JitsiTrackEvents from '../../JitsiTrackEvents';\\nimport * as MediaType from '../../service/RTC/MediaType';\\nimport browser from '../browser';\\nimport RTCEvents from '../../service/RTC/RTCEvents';\\nimport Statistics from '../statistics/statistics';\\n\\nconst logger = getLogger(__filename);\\n\\n/**\\n * Default value of 500 milliseconds for\\n * {@link ParticipantConnectionStatus.outOfLastNTimeout}.\\n *\\n * @type {number}\\n */\\nconst DEFAULT_NOT_IN_LAST_N_TIMEOUT = 500;\\n\\n/**\\n * Default value of 2000 milliseconds for\\n * {@link ParticipantConnectionStatus.rtcMuteTimeout}.\\n *\\n * @type {number}\\n */\\nconst DEFAULT_RTC_MUTE_TIMEOUT = 2000;\\n\\n/**\\n * The time to wait a track to be restored. Track which was out of lastN\\n * should be inactive and when entering lastN it becomes restoring and when\\n * data is received from bridge it will become active, but if no data is\\n * received for some time we set status of that participant connection to\\n * interrupted.\\n * @type {number}\\n */\\nconst DEFAULT_RESTORING_TIMEOUT = 5000;\\n\\n/**\\n * Participant connection statuses.\\n *\\n * @type {{\\n *      ACTIVE: string,\\n *      INACTIVE: string,\\n *      INTERRUPTED: string,\\n *      RESTORING: string\\n * }}\\n */\\nexport const ParticipantConnectionStatus = {\\n    /**\\n     * Status indicating that connection is currently active.\\n     */\\n    ACTIVE: 'active',\\n\\n    /**\\n     * Status indicating that connection is currently inactive.\\n     * Inactive means the connection was stopped on purpose from the bridge,\\n     * like exiting lastN or adaptivity decided to drop video because of not\\n     * enough bandwidth.\\n     */\\n    INACTIVE: 'inactive',\\n\\n    /**\\n     * Status indicating that connection is currently interrupted.\\n     */\\n    INTERRUPTED: 'interrupted',\\n\\n    /**\\n     * Status indicating that connection is currently restoring.\\n     */\\n    RESTORING: 'restoring'\\n};\\n\\n/**\\n * Class is responsible for emitting\\n * JitsiConferenceEvents.PARTICIPANT_CONN_STATUS_CHANGED events.\\n */\\nexport default class ParticipantConnectionStatusHandler {\\n    /* eslint-disable max-params*/\\n    /**\\n     * Calculates the new {@link ParticipantConnectionStatus} based on\\n     * the values given for some specific remote user. It is assumed that\\n     * the conference is currently in the JVB mode (in contrary to the P2P mode)\\n     * @param {boolean} isConnectionActiveByJvb true if the JVB did not get any\\n     * data from the user for the last 15 seconds.\\n     * @param {boolean} isInLastN indicates whether the user is in the last N\\n     * set. When set to false it means that JVB is not sending any video for\\n     * the user.\\n     * @param {boolean} isRestoringTimedout if true it means that the user has\\n     * been outside of last N too long to be considered\\n     * {@link ParticipantConnectionStatus.RESTORING}.\\n     * @param {boolean} isVideoMuted true if the user is video muted and we\\n     * should not expect to receive any video.\\n     * @param {boolean} isVideoTrackFrozen if the current browser support video\\n     * frozen detection then it will be set to true when the video track is\\n     * frozen. If the current browser does not support frozen detection the it's\\n     * always false.\\n     * @return {ParticipantConnectionStatus} the new connection status for\\n     * the user for whom the values above were provided.\\n     * @private\\n     */\\n    static _getNewStateForJvbMode(\\n            isConnectionActiveByJvb,\\n            isInLastN,\\n            isRestoringTimedout,\\n            isVideoMuted,\\n            isVideoTrackFrozen) {\\n        if (!isConnectionActiveByJvb) {\\n            // when there is a connection problem signaled from jvb\\n            // it means no media was flowing for at least 15secs, so both audio\\n            // and video are most likely interrupted\\n            return ParticipantConnectionStatus.INTERRUPTED;\\n        } else if (isVideoMuted) {\\n            // If the connection is active according to JVB and the user is\\n            // video muted there is no way for the connection to be inactive,\\n            // because the detection logic below only makes sense for video.\\n            return ParticipantConnectionStatus.ACTIVE;\\n        }\\n\\n        // Logic when isVideoTrackFrozen is supported\\n        if (browser.supportsVideoMuteOnConnInterrupted()) {\\n            if (!isVideoTrackFrozen) {\\n                // If the video is playing we're good\\n                return ParticipantConnectionStatus.ACTIVE;\\n            } else if (isInLastN) {\\n                return isRestoringTimedout\\n                    ? ParticipantConnectionStatus.INTERRUPTED\\n                    : ParticipantConnectionStatus.RESTORING;\\n            }\\n\\n            return ParticipantConnectionStatus.INACTIVE;\\n        }\\n\\n        // Because this browser is incapable of detecting frozen video we must\\n        // rely on the lastN value\\n        return isInLastN\\n            ? ParticipantConnectionStatus.ACTIVE\\n            : ParticipantConnectionStatus.INACTIVE;\\n    }\\n\\n    /* eslint-enable max-params*/\\n\\n    /**\\n     * In P2P mode we don't care about any values coming from the JVB and\\n     * the connection status can be only active or interrupted.\\n     * @param {boolean} isVideoMuted the user if video muted\\n     * @param {boolean} isVideoTrackFrozen true if the video track for\\n     * the remote user is currently frozen. If the current browser does not\\n     * support video frozen detection then it's always false.\\n     * @return {ParticipantConnectionStatus}\\n     * @private\\n     */\\n    static _getNewStateForP2PMode(isVideoMuted, isVideoTrackFrozen) {\\n        if (!browser.supportsVideoMuteOnConnInterrupted()) {\\n            // There's no way to detect problems in P2P when there's no video\\n            // track frozen detection...\\n            return ParticipantConnectionStatus.ACTIVE;\\n        }\\n\\n        return isVideoMuted || !isVideoTrackFrozen\\n            ? ParticipantConnectionStatus.ACTIVE\\n            : ParticipantConnectionStatus.INTERRUPTED;\\n    }\\n\\n    /**\\n     * Creates new instance of <tt>ParticipantConnectionStatus</tt>.\\n     *\\n     * @constructor\\n     * @param {RTC} rtc the RTC service instance\\n     * @param {JitsiConference} conference parent conference instance\\n     * @param {Object} options\\n     * @param {number} [options.rtcMuteTimeout=2000] custom value for\\n     * {@link ParticipantConnectionStatus.rtcMuteTimeout}.\\n     * @param {number} [options.outOfLastNTimeout=500] custom value for\\n     * {@link ParticipantConnectionStatus.outOfLastNTimeout}.\\n     */\\n    constructor(rtc, conference, options) {\\n        this.rtc = rtc;\\n        this.conference = conference;\\n\\n        /**\\n         * A map of the \\\"endpoint ID\\\"(which corresponds to the resource part\\n         * of MUC JID(nickname)) to the timeout callback IDs scheduled using\\n         * window.setTimeout.\\n         * @type {Object.<string, number>}\\n         */\\n        this.trackTimers = {};\\n\\n        /**\\n         * This map holds the endpoint connection status received from the JVB\\n         * (as it might be different than the one stored in JitsiParticipant).\\n         * Required for getting back in sync when remote video track is removed.\\n         * @type {Object.<string, boolean>}\\n         */\\n        this.connStatusFromJvb = { };\\n\\n        /**\\n         * If video track frozen detection through RTC mute event is supported,\\n         * we wait some time until video track is considered frozen. But because\\n         * when the user falls out of last N it is expected for the video to\\n         * freeze this timeout must be significantly reduced in \\\"out of last N\\\"\\n         * case.\\n         *\\n         * Basically this value is used instead of {@link rtcMuteTimeout} when\\n         * user is not in last N.\\n         * @type {number}\\n         */\\n        this.outOfLastNTimeout\\n            = typeof options.outOfLastNTimeout === 'number'\\n                ? options.outOfLastNTimeout : DEFAULT_NOT_IN_LAST_N_TIMEOUT;\\n\\n        /**\\n         * How long we're going to wait after the RTC video track muted event\\n         * for the corresponding signalling mute event, before the connection\\n         * interrupted is fired. The default value is\\n         * {@link DEFAULT_RTC_MUTE_TIMEOUT}.\\n         *\\n         * @type {number} amount of time in milliseconds\\n         */\\n        this.rtcMuteTimeout\\n            = typeof options.rtcMuteTimeout === 'number'\\n                ? options.rtcMuteTimeout : DEFAULT_RTC_MUTE_TIMEOUT;\\n\\n        /**\\n         * This map holds a timestamp indicating  when participant's video track\\n         * was RTC muted (it is assumed that each participant can have only 1\\n         * video track at a time). The purpose of storing the timestamp is to\\n         * avoid the transition to disconnected status in case of legitimate\\n         * video mute operation where the signalling video muted event can\\n         * arrive shortly after RTC muted event.\\n         *\\n         * The key is participant's ID which is the same as endpoint id in\\n         * the Colibri conference allocated on the JVB.\\n         *\\n         * The value is a timestamp measured in milliseconds obtained with\\n         * <tt>Date.now()</tt>.\\n         *\\n         * FIXME merge this logic with NO_DATA_FROM_SOURCE event\\n         *       implemented in JitsiLocalTrack by extending the event to\\n         *       the remote track and allowing to set different timeout for\\n         *       local and remote tracks.\\n         *\\n         * @type {Object.<string, number>}\\n         */\\n        this.rtcMutedTimestamp = { };\\n        logger.info(`RtcMuteTimeout set to: ${this.rtcMuteTimeout}`);\\n\\n        /**\\n         * This map holds the timestamps indicating when participant's video\\n         * entered lastN set. Participants entering lastN will have connection\\n         * status restoring and when we start receiving video will become\\n         * active, but if video is not received for certain time\\n         * {@link DEFAULT_RESTORING_TIMEOUT} that participant connection status\\n         * will become interrupted.\\n         *\\n         * @type {Map<string, number>}\\n         */\\n        this.enteredLastNTimestamp = new Map();\\n\\n        /**\\n         * A map of the \\\"endpoint ID\\\"(which corresponds to the resource part\\n         * of MUC JID(nickname)) to the restoring timeout callback IDs\\n         * scheduled using window.setTimeout.\\n         *\\n         * @type {Map<string, number>}\\n         */\\n        this.restoringTimers = new Map();\\n    }\\n\\n    /**\\n     * Gets the video frozen timeout for given user.\\n     * @param {string} id endpoint/participant ID\\n     * @return {number} how long are we going to wait since RTC video muted\\n     * even, before a video track is considered frozen.\\n     * @private\\n     */\\n    _getVideoFrozenTimeout(id) {\\n        return this.rtc.isInLastN(id)\\n            ? this.rtcMuteTimeout : this.outOfLastNTimeout;\\n    }\\n\\n    /**\\n     * Initializes <tt>ParticipantConnectionStatus</tt> and bind required event\\n     * listeners.\\n     */\\n    init() {\\n\\n        this._onEndpointConnStatusChanged\\n            = this.onEndpointConnStatusChanged.bind(this);\\n\\n        this.rtc.addListener(\\n            RTCEvents.ENDPOINT_CONN_STATUS_CHANGED,\\n            this._onEndpointConnStatusChanged);\\n\\n        // Handles P2P status changes\\n        this._onP2PStatus = this.refreshConnectionStatusForAll.bind(this);\\n        this.conference.on(JitsiConferenceEvents.P2P_STATUS, this._onP2PStatus);\\n\\n        // On some browsers MediaStreamTrack trigger \\\"onmute\\\"/\\\"onunmute\\\"\\n        // events for video type tracks when they stop receiving data which is\\n        // often a sign that remote user is having connectivity issues\\n        if (browser.supportsVideoMuteOnConnInterrupted()) {\\n\\n            this._onTrackRtcMuted = this.onTrackRtcMuted.bind(this);\\n            this.rtc.addListener(\\n                RTCEvents.REMOTE_TRACK_MUTE, this._onTrackRtcMuted);\\n\\n            this._onTrackRtcUnmuted = this.onTrackRtcUnmuted.bind(this);\\n            this.rtc.addListener(\\n                RTCEvents.REMOTE_TRACK_UNMUTE, this._onTrackRtcUnmuted);\\n\\n            // Track added/removed listeners are used to bind \\\"mute\\\"/\\\"unmute\\\"\\n            // event handlers\\n            this._onRemoteTrackAdded = this.onRemoteTrackAdded.bind(this);\\n            this.conference.on(\\n                JitsiConferenceEvents.TRACK_ADDED,\\n                this._onRemoteTrackAdded);\\n\\n            this._onRemoteTrackRemoved = this.onRemoteTrackRemoved.bind(this);\\n            this.conference.on(\\n                JitsiConferenceEvents.TRACK_REMOVED,\\n                this._onRemoteTrackRemoved);\\n\\n            // Listened which will be bound to JitsiRemoteTrack to listen for\\n            // signalling mute/unmute events.\\n            this._onSignallingMuteChanged\\n                = this.onSignallingMuteChanged.bind(this);\\n        }\\n\\n        this._onLastNChanged = this._onLastNChanged.bind(this);\\n        this.conference.on(\\n            JitsiConferenceEvents.LAST_N_ENDPOINTS_CHANGED,\\n            this._onLastNChanged);\\n\\n        this._onLastNValueChanged\\n            = this.refreshConnectionStatusForAll.bind(this);\\n        this.rtc.on(\\n            RTCEvents.LASTN_VALUE_CHANGED, this._onLastNValueChanged);\\n    }\\n\\n    /**\\n     * Removes all event listeners and disposes of all resources held by this\\n     * instance.\\n     */\\n    dispose() {\\n\\n        this.rtc.removeListener(\\n            RTCEvents.ENDPOINT_CONN_STATUS_CHANGED,\\n            this._onEndpointConnStatusChanged);\\n\\n        if (browser.supportsVideoMuteOnConnInterrupted()) {\\n            this.rtc.removeListener(\\n                RTCEvents.REMOTE_TRACK_MUTE,\\n                this._onTrackRtcMuted);\\n            this.rtc.removeListener(\\n                RTCEvents.REMOTE_TRACK_UNMUTE,\\n                this._onTrackRtcUnmuted);\\n\\n            this.conference.off(\\n                JitsiConferenceEvents.TRACK_ADDED,\\n                this._onRemoteTrackAdded);\\n            this.conference.off(\\n                JitsiConferenceEvents.TRACK_REMOVED,\\n                this._onRemoteTrackRemoved);\\n        }\\n\\n        this.conference.off(\\n            JitsiConferenceEvents.LAST_N_ENDPOINTS_CHANGED,\\n            this._onLastNChanged);\\n\\n        this.rtc.removeListener(\\n            RTCEvents.LASTN_VALUE_CHANGED, this._onLastNValueChanged);\\n\\n        this.conference.off(\\n            JitsiConferenceEvents.P2P_STATUS, this._onP2PStatus);\\n\\n        const participantIds = Object.keys(this.trackTimers);\\n\\n        for (const participantId of participantIds) {\\n            this.clearTimeout(participantId);\\n            this.clearRtcMutedTimestamp(participantId);\\n        }\\n\\n        // Clear RTC connection status cache\\n        this.connStatusFromJvb = {};\\n    }\\n\\n    /**\\n     * Handles RTCEvents.ENDPOINT_CONN_STATUS_CHANGED triggered when we receive\\n     * notification over the data channel from the bridge about endpoint's\\n     * connection status update.\\n     * @param {string} endpointId the endpoint ID(MUC nickname/resource JID)\\n     * @param {boolean} isActive true if the connection is OK or false otherwise\\n     */\\n    onEndpointConnStatusChanged(endpointId, isActive) {\\n\\n        logger.debug(\\n            `Detector RTCEvents.ENDPOINT_CONN_STATUS_CHANGED(${Date.now()}): ${\\n                endpointId}: ${isActive}`);\\n\\n        // Filter out events for the local JID for now\\n        if (endpointId !== this.conference.myUserId()) {\\n            // Store the status received over the data channels\\n            this.connStatusFromJvb[endpointId] = isActive;\\n            this.figureOutConnectionStatus(endpointId);\\n        }\\n    }\\n\\n    /**\\n     * Changes connection status.\\n     * @param {JitsiParticipant} participant\\n     * @param newStatus\\n     */\\n    _changeConnectionStatus(participant, newStatus) {\\n        if (participant.getConnectionStatus() !== newStatus) {\\n\\n            const endpointId = participant.getId();\\n\\n            participant._setConnectionStatus(newStatus);\\n\\n            logger.debug(\\n                `Emit endpoint conn status(${Date.now()}) ${endpointId}: ${\\n                    newStatus}`);\\n\\n            // Log the event on CallStats\\n            Statistics.sendLog(\\n                JSON.stringify({\\n                    id: 'peer.conn.status',\\n                    participant: endpointId,\\n                    status: newStatus\\n                }));\\n\\n            this.conference.eventEmitter.emit(\\n                JitsiConferenceEvents.PARTICIPANT_CONN_STATUS_CHANGED,\\n                endpointId, newStatus);\\n        }\\n    }\\n\\n    /**\\n     * Reset the postponed \\\"connection interrupted\\\" event which was previously\\n     * scheduled as a timeout on RTC 'onmute' event.\\n     *\\n     * @param {string} participantId the participant for which the \\\"connection\\n     * interrupted\\\" timeout was scheduled\\n     */\\n    clearTimeout(participantId) {\\n        if (this.trackTimers[participantId]) {\\n            window.clearTimeout(this.trackTimers[participantId]);\\n            this.trackTimers[participantId] = null;\\n        }\\n    }\\n\\n    /**\\n     * Clears the timestamp of the RTC muted event for participant's video track\\n     * @param {string} participantId the id of the conference participant which\\n     * is the same as the Colibri endpoint ID of the video channel allocated for\\n     * the user on the videobridge.\\n     */\\n    clearRtcMutedTimestamp(participantId) {\\n        this.rtcMutedTimestamp[participantId] = null;\\n    }\\n\\n    /**\\n     * Bind signalling mute event listeners for video {JitsiRemoteTrack} when\\n     * a new one is added to the conference.\\n     *\\n     * @param {JitsiTrack} remoteTrack the {JitsiTrack} which is being added to\\n     * the conference.\\n     */\\n    onRemoteTrackAdded(remoteTrack) {\\n        if (!remoteTrack.isLocal()\\n                && remoteTrack.getType() === MediaType.VIDEO) {\\n\\n            logger.debug(\\n                `Detector on remote track added for: ${\\n                    remoteTrack.getParticipantId()}`);\\n\\n            remoteTrack.on(\\n                JitsiTrackEvents.TRACK_MUTE_CHANGED,\\n                this._onSignallingMuteChanged);\\n        }\\n    }\\n\\n    /**\\n     * Removes all event listeners bound to the remote video track and clears\\n     * any related timeouts.\\n     *\\n     * @param {JitsiRemoteTrack} remoteTrack the remote track which is being\\n     * removed from the conference.\\n     */\\n    onRemoteTrackRemoved(remoteTrack) {\\n        if (!remoteTrack.isLocal()\\n                && remoteTrack.getType() === MediaType.VIDEO) {\\n\\n            const endpointId = remoteTrack.getParticipantId();\\n\\n            logger.debug(`Detector on remote track removed: ${endpointId}`);\\n\\n            remoteTrack.off(\\n                JitsiTrackEvents.TRACK_MUTE_CHANGED,\\n                this._onSignallingMuteChanged);\\n\\n            this.clearTimeout(endpointId);\\n            this.clearRtcMutedTimestamp(endpointId);\\n\\n            this.figureOutConnectionStatus(endpointId);\\n        }\\n    }\\n\\n    /**\\n     * Checks if given participant's video is considered frozen.\\n     * @param {JitsiParticipant} participant\\n     * @return {boolean} <tt>true</tt> if the video has frozen for given\\n     * participant or <tt>false</tt> when it's either not considered frozen\\n     * (yet) or if freeze detection is not supported by the current browser.\\n     *\\n     * FIXME merge this logic with NO_DATA_FROM_SOURCE event\\n     *       implemented in JitsiLocalTrack by extending the event to\\n     *       the remote track and allowing to set different timeout for\\n     *       local and remote tracks.\\n     *\\n     */\\n    isVideoTrackFrozen(participant) {\\n        if (!browser.supportsVideoMuteOnConnInterrupted()) {\\n            return false;\\n        }\\n\\n        const id = participant.getId();\\n        const hasAnyVideoRTCMuted = participant.hasAnyVideoTrackWebRTCMuted();\\n        const rtcMutedTimestamp = this.rtcMutedTimestamp[id];\\n        const timeout = this._getVideoFrozenTimeout(id);\\n\\n        return hasAnyVideoRTCMuted\\n            && typeof rtcMutedTimestamp === 'number'\\n            && (Date.now() - rtcMutedTimestamp) >= timeout;\\n    }\\n\\n    /**\\n     * Goes over every participant and updates connectivity status.\\n     * Should be called when a parameter which affects all of the participants\\n     * is changed (P2P for example).\\n     */\\n    refreshConnectionStatusForAll() {\\n        const participants = this.conference.getParticipants();\\n\\n        for (const participant of participants) {\\n            this.figureOutConnectionStatus(participant.getId());\\n        }\\n    }\\n\\n    /**\\n     * Figures out (and updates) the current connectivity status for\\n     * the participant identified by the given id.\\n     *\\n     * @param {string} id the participant's id (MUC nickname or Colibri endpoint\\n     * ID).\\n     */\\n    figureOutConnectionStatus(id) {\\n        const participant = this.conference.getParticipantById(id);\\n\\n        if (!participant) {\\n            // Probably the participant is no longer in the conference\\n            // (at the time of writing this code, participant is\\n            // detached from the conference and TRACK_REMOVED events are\\n            // fired),\\n            // so we don't care, but let's print the warning for\\n            // debugging purpose\\n            logger.warn(`figure out conn status - no participant for: ${id}`);\\n\\n            return;\\n        }\\n\\n        const inP2PMode = this.conference.isP2PActive();\\n        const isRestoringTimedOut = this._isRestoringTimedout(id);\\n        const audioOnlyMode = this.rtc.getLastN() === 0;\\n\\n        // NOTE Overriding videoMuted to true for audioOnlyMode should disable\\n        // any detection based on video playback or the last N.\\n        const isVideoMuted = participant.isVideoMuted() || audioOnlyMode;\\n        const isVideoTrackFrozen = this.isVideoTrackFrozen(participant);\\n        const isInLastN = this.rtc.isInLastN(id);\\n        let isConnActiveByJvb = this.connStatusFromJvb[id];\\n\\n        if (typeof isConnActiveByJvb !== 'boolean') {\\n            // If no status was received from the JVB it means that it's active\\n            // (the bridge does not send notification unless there is a problem)\\n            logger.debug('Assuming connection active by JVB - no notification');\\n            isConnActiveByJvb = true;\\n        }\\n\\n        const newState\\n            = inP2PMode\\n                ? ParticipantConnectionStatusHandler._getNewStateForP2PMode(\\n                    isVideoMuted,\\n                    isVideoTrackFrozen)\\n                : ParticipantConnectionStatusHandler._getNewStateForJvbMode(\\n                    isConnActiveByJvb,\\n                    isInLastN,\\n                    isRestoringTimedOut,\\n                    isVideoMuted,\\n                    isVideoTrackFrozen);\\n\\n        // if the new state is not restoring clear timers and timestamps\\n        // that we use to track the restoring state\\n        if (newState !== ParticipantConnectionStatus.RESTORING) {\\n            this._clearRestoringTimer(id);\\n        }\\n\\n        logger.debug(\\n            `Figure out conn status for ${id}, is video muted: ${\\n                isVideoMuted} is active(jvb): ${\\n                isConnActiveByJvb} video track frozen: ${\\n                isVideoTrackFrozen} p2p mode: ${\\n                inP2PMode} is in last N: ${\\n                isInLastN} currentStatus => newStatus: ${\\n                participant.getConnectionStatus()} => ${newState}`);\\n\\n        this._changeConnectionStatus(participant, newState);\\n    }\\n\\n    /**\\n     * On change in Last N set check all leaving and entering participants to\\n     * change their corresponding statuses.\\n     *\\n     * @param {Array<string>} leavingLastN array of ids leaving lastN.\\n     * @param {Array<string>} enteringLastN array of ids entering lastN.\\n     * @private\\n     */\\n    _onLastNChanged(leavingLastN = [], enteringLastN = []) {\\n        const now = Date.now();\\n\\n        logger.debug(\\n            'leaving/entering lastN', leavingLastN, enteringLastN, now);\\n\\n        for (const id of leavingLastN) {\\n            this.enteredLastNTimestamp.delete(id);\\n            this._clearRestoringTimer(id);\\n            this.figureOutConnectionStatus(id);\\n        }\\n        for (const id of enteringLastN) {\\n            // store the timestamp this id is entering lastN\\n            this.enteredLastNTimestamp.set(id, now);\\n            this.figureOutConnectionStatus(id);\\n        }\\n    }\\n\\n    /**\\n     * Clears the restoring timer for participant's video track and the\\n     * timestamp for entering lastN.\\n     *\\n     * @param {string} participantId the id of the conference participant which\\n     * is the same as the Colibri endpoint ID of the video channel allocated for\\n     * the user on the videobridge.\\n     */\\n    _clearRestoringTimer(participantId) {\\n        const rTimer = this.restoringTimers.get(participantId);\\n\\n        if (rTimer) {\\n            clearTimeout(rTimer);\\n            this.restoringTimers.delete(participantId);\\n        }\\n    }\\n\\n    /**\\n     * Checks whether a track had stayed enough in restoring state, compares\\n     * current time and the time the track entered in lastN. If it hasn't\\n     * timedout and there is no timer added, add new timer in order to give it\\n     * more time to become active or mark it as interrupted on next check.\\n     *\\n     * @param {string} participantId the id of the conference participant which\\n     * is the same as the Colibri endpoint ID of the video channel allocated for\\n     * the user on the videobridge.\\n     * @returns {boolean} <tt>true</tt> if the track was in restoring state\\n     * more than the timeout ({@link DEFAULT_RESTORING_TIMEOUT}.) in order to\\n     * set its status to interrupted.\\n     * @private\\n     */\\n    _isRestoringTimedout(participantId) {\\n        const enteredLastNTimestamp\\n            = this.enteredLastNTimestamp.get(participantId);\\n\\n        if (enteredLastNTimestamp\\n            && (Date.now() - enteredLastNTimestamp)\\n                >= DEFAULT_RESTORING_TIMEOUT) {\\n            return true;\\n        }\\n\\n        // still haven't reached timeout, if there is no timer scheduled,\\n        // schedule one so we can track the restoring state and change it after\\n        // reaching the timeout\\n        const rTimer = this.restoringTimers.get(participantId);\\n\\n        if (!rTimer) {\\n            this.restoringTimers.set(participantId, setTimeout(\\n                () => this.figureOutConnectionStatus(participantId),\\n                DEFAULT_RESTORING_TIMEOUT));\\n        }\\n\\n        return false;\\n    }\\n\\n    /**\\n     * Handles RTC 'onmute' event for the video track.\\n     *\\n     * @param {JitsiRemoteTrack} track the video track for which 'onmute' event\\n     * will be processed.\\n     */\\n    onTrackRtcMuted(track) {\\n        const participantId = track.getParticipantId();\\n        const participant = this.conference.getParticipantById(participantId);\\n\\n        logger.debug(`Detector track RTC muted: ${participantId}`, Date.now());\\n        if (!participant) {\\n            logger.error(`No participant for id: ${participantId}`);\\n\\n            return;\\n        }\\n        this.rtcMutedTimestamp[participantId] = Date.now();\\n        if (!participant.isVideoMuted()) {\\n            // If the user is not muted according to the signalling we'll give\\n            // it some time, before the connection interrupted event is\\n            // triggered.\\n            this.clearTimeout(participantId);\\n\\n            // The timeout is reduced when user is not in the last N\\n            const timeout = this._getVideoFrozenTimeout(participantId);\\n\\n            this.trackTimers[participantId] = window.setTimeout(() => {\\n                logger.debug(\\n                    `Set RTC mute timeout for: ${participantId}\\\\\\n                     of ${timeout} ms`);\\n                this.clearTimeout(participantId);\\n                this.figureOutConnectionStatus(participantId);\\n            }, timeout);\\n        }\\n    }\\n\\n    /**\\n     * Handles RTC 'onunmute' event for the video track.\\n     *\\n     * @param {JitsiRemoteTrack} track the video track for which 'onunmute'\\n     * event will be processed.\\n     */\\n    onTrackRtcUnmuted(track) {\\n        const participantId = track.getParticipantId();\\n\\n        logger.debug(\\n            `Detector track RTC unmuted: ${participantId}`, Date.now());\\n\\n        this.clearTimeout(participantId);\\n        this.clearRtcMutedTimestamp(participantId);\\n\\n        this.figureOutConnectionStatus(participantId);\\n    }\\n\\n    /**\\n     * Here the signalling \\\"mute\\\"/\\\"unmute\\\" events are processed.\\n     *\\n     * @param {JitsiRemoteTrack} track the remote video track for which\\n     * the signalling mute/unmute event will be processed.\\n     */\\n    onSignallingMuteChanged(track) {\\n        const participantId = track.getParticipantId();\\n\\n        logger.debug(\\n            `Detector on track signalling mute changed: ${participantId}`,\\n            track.isMuted());\\n\\n        this.figureOutConnectionStatus(participantId);\\n    }\\n}\\n\",\"/**\\n * A collection of utility functions for taking in XML and parsing it to return\\n * certain values.\\n */\\nexport default {\\n    /**\\n     * Parses the presence update of the focus and returns an object with the\\n     * statuses related to recording.\\n     *\\n     * @param {Node} presence - An XMPP presence update.\\n     * @returns {Object} The current presence values related to recording.\\n     */\\n    getFocusRecordingUpdate(presence) {\\n        const jibriStatus = presence\\n            && presence.getElementsByTagName('jibri-recording-status')[0];\\n\\n        if (!jibriStatus) {\\n            return;\\n        }\\n\\n        return {\\n            error: jibriStatus.getAttribute('failure_reason'),\\n            recordingMode: jibriStatus.getAttribute('recording_mode'),\\n            sessionID: jibriStatus.getAttribute('session_id'),\\n            status: jibriStatus.getAttribute('status')\\n        };\\n    },\\n\\n    /**\\n     * Parses the presence update from a hidden domain participant and returns\\n     * an object with the statuses related to recording.\\n     *\\n     * @param {Node} presence - An XMPP presence update.\\n     * @returns {Object} The current presence values related to recording.\\n     */\\n    getHiddenDomainUpdate(presence) {\\n        const liveStreamViewURLContainer\\n            = presence.getElementsByTagName('live-stream-view-url')[0];\\n        const liveStreamViewURL = liveStreamViewURLContainer\\n            && liveStreamViewURLContainer.textContent;\\n        const modeContainer\\n            = presence.getElementsByTagName('mode')[0];\\n        const mode = modeContainer\\n            && modeContainer.textContent\\n            && modeContainer.textContent.toLowerCase();\\n        const sessionIDContainer\\n            = presence.getElementsByTagName('session_id')[0];\\n        const sessionID\\n            = sessionIDContainer && sessionIDContainer.textContent;\\n\\n        return {\\n            liveStreamViewURL,\\n            mode,\\n            sessionID\\n        };\\n    },\\n\\n    /**\\n     * Returns the recording session ID from a successful IQ.\\n     *\\n     * @param {Node} response - The response from the IQ.\\n     * @returns {string} The session ID of the recording session.\\n     */\\n    getSessionIdFromIq(response) {\\n        const jibri = response && response.getElementsByTagName('jibri')[0];\\n\\n        return jibri && jibri.getAttribute('session_id');\\n    },\\n\\n    /**\\n     * Returns the recording session ID from a presence, if it exists.\\n     *\\n     * @param {Node} presence - An XMPP presence update.\\n     * @returns {string|undefined} The session ID of the recording session.\\n     */\\n    getSessionId(presence) {\\n        const sessionIdContainer\\n            = presence.getElementsByTagName('session_id')[0];\\n        const sessionId = sessionIdContainer && sessionIdContainer.textContent;\\n\\n        return sessionId;\\n    },\\n\\n    /**\\n     * Returns whether or not a presence is from the focus.\\n     *\\n     * @param {Node} presence - An XMPP presence update.\\n     * @returns {boolean} True if the presence is from the focus.\\n     */\\n    isFromFocus(presence) {\\n        return presence.getAttribute('from').includes('focus');\\n    }\\n};\\n\",\"/* global __filename, $ */\\n\\nimport {\\n    ICE_DURATION,\\n    ICE_STATE_CHANGED\\n} from '../../service/statistics/AnalyticsEvents';\\nimport async from 'async';\\nimport { getLogger } from 'jitsi-meet-logger';\\nimport { $iq, Strophe } from 'strophe.js';\\nimport { integerHash } from '../util/StringUtils';\\n\\nimport JingleSession from './JingleSession';\\nimport * as JingleSessionState from './JingleSessionState';\\nimport SDP from './SDP';\\nimport SDPDiffer from './SDPDiffer';\\nimport SDPUtil from './SDPUtil';\\nimport SignalingLayerImpl from './SignalingLayerImpl';\\n\\nimport RTCEvents from '../../service/RTC/RTCEvents';\\nimport Statistics from '../statistics/statistics';\\nimport XMPPEvents from '../../service/xmpp/XMPPEvents';\\nimport GlobalOnErrorHandler from '../util/GlobalOnErrorHandler';\\n\\nconst logger = getLogger(__filename);\\n\\n/**\\n * Constant tells how long we're going to wait for IQ response, before timeout\\n * error is  triggered.\\n * @type {number}\\n */\\nconst IQ_TIMEOUT = 10000;\\n\\n/*\\n * The default number of samples (per stat) to keep when webrtc stats gathering\\n * is enabled in TraceablePeerConnection.\\n */\\nconst DEFAULT_MAX_STATS = 300;\\n\\n/**\\n * @typedef {Object} JingleSessionPCOptions\\n * @property {Object} abTesting - A/B testing related options (ask George).\\n * @property {boolean} abTesting.enableSuspendVideoTest - enables the suspend\\n * video test ?(ask George).\\n * @property {boolean} disableH264 - Described in the config.js[1].\\n * @property {boolean} disableRtx - Described in the config.js[1].\\n * @property {boolean} disableSimulcast - Described in the config.js[1].\\n * @property {boolean} enableLayerSuspension - Described in the config.js[1].\\n * @property {boolean} failICE - it's an option used in the tests. Set to\\n * <tt>true</tt> to block any real candidates and make the ICE fail.\\n * @property {boolean} gatherStats - Described in the config.js[1].\\n * @property {object} p2p - Peer to peer related options (FIXME those could be\\n * fetched from config.p2p on the upper level).\\n * @property {boolean} p2p.disableH264 - Described in the config.js[1].\\n * @property {boolean} p2p.preferH264 - Described in the config.js[1].\\n * @property {boolean} preferH264 - Described in the config.js[1].\\n * @property {Object} testing - Testing and/or experimental options.\\n * @property {boolean} testing.enableFirefoxSimulcast - Described in the\\n * config.js[1].\\n * @property {boolean} webrtcIceUdpDisable - Described in the config.js[1].\\n * @property {boolean} webrtcIceTcpDisable - Described in the config.js[1].\\n *\\n * [1]: https://github.com/jitsi/jitsi-meet/blob/master/config.js\\n */\\n/**\\n *\\n */\\nexport default class JingleSessionPC extends JingleSession {\\n    /**\\n     * Parses 'senders' attribute of the video content.\\n     * @param {jQuery} jingleContents\\n     * @return {string|null} one of the values of content \\\"senders\\\" attribute\\n     * defined by Jingle. If there is no \\\"senders\\\" attribute or if the value is\\n     * invalid then <tt>null</tt> will be returned.\\n     * @private\\n     */\\n    static parseVideoSenders(jingleContents) {\\n        const videoContents = jingleContents.find('>content[name=\\\"video\\\"]');\\n\\n        if (videoContents.length) {\\n            const senders = videoContents[0].getAttribute('senders');\\n\\n            if (senders === 'both'\\n                || senders === 'initiator'\\n                || senders === 'responder'\\n                || senders === 'none') {\\n                return senders;\\n            }\\n        }\\n\\n        return null;\\n    }\\n\\n    /* eslint-disable max-params */\\n\\n    /**\\n     * Creates new <tt>JingleSessionPC</tt>\\n     * @param {string} sid the Jingle Session ID - random string which\\n     * identifies the session\\n     * @param {string} localJid our JID\\n     * @param {string} remoteJid remote peer JID\\n     * @param {Strophe.Connection} connection Strophe XMPP connection instance\\n     * used to send packets.\\n     * @param mediaConstraints the media constraints object passed to\\n     * createOffer/Answer, as defined by the WebRTC standard\\n     * @param iceConfig the ICE servers config object as defined by the WebRTC\\n     * standard.\\n     * @param {boolean} isP2P indicates whether this instance is\\n     * meant to be used in a direct, peer to peer connection or <tt>false</tt>\\n     * if it's a JVB connection.\\n     * @param {boolean} isInitiator indicates if it will be the side which\\n     * initiates the session.\\n     * @constructor\\n     *\\n     * @implements {SignalingLayer}\\n     */\\n    constructor(\\n            sid,\\n            localJid,\\n            remoteJid,\\n            connection,\\n            mediaConstraints,\\n            iceConfig,\\n            isP2P,\\n            isInitiator) {\\n        super(\\n            sid,\\n            localJid,\\n            remoteJid, connection, mediaConstraints, iceConfig, isInitiator);\\n\\n        /**\\n         * The bridge session's identifier. One Jingle session can during\\n         * it's lifetime participate in multiple bridge sessions managed by\\n         * Jicofo. A new bridge session is started whenever Jicofo sends\\n         * 'session-initiate' or 'transport-replace'.\\n         *\\n         * @type {?string}\\n         * @private\\n         */\\n        this._bridgeSessionId = null;\\n\\n        /**\\n         * Stores result of {@link window.performance.now()} at the time when\\n         * ICE enters 'checking' state.\\n         * @type {number|null} null if no value has been stored yet\\n         * @private\\n         */\\n        this._iceCheckingStartedTimestamp = null;\\n\\n        /**\\n         * Stores result of {@link window.performance.now()} at the time when\\n         * first ICE candidate is spawned by the peerconnection to mark when\\n         * ICE gathering started. That's, because ICE gathering state changed\\n         * events are not supported by most of the browsers, so we try something\\n         * that will work everywhere. It may not be as accurate, but given that\\n         * 'host' candidate usually comes first, the delay should be minimal.\\n         * @type {number|null} null if no value has been stored yet\\n         * @private\\n         */\\n        this._gatheringStartedTimestamp = null;\\n\\n        /**\\n         * Indicates whether or not this session is willing to send/receive\\n         * video media. When set to <tt>false</tt> the underlying peer\\n         * connection will disable local video transfer and the remote peer will\\n         * be will be asked to stop sending video via 'content-modify' IQ\\n         * (the senders attribute of video contents will be adjusted\\n         * accordingly). Note that this notification is sent only in P2P\\n         * session, because Jicofo does not support it yet. Obviously when\\n         * the value is changed from <tt>false</tt> to <tt>true</tt> another\\n         * notification will be sent to resume video transfer on the remote\\n         * side.\\n         * @type {boolean}\\n         * @private\\n         */\\n        this._localVideoActive = true;\\n\\n        /**\\n         * Indicates whether or not the remote peer has video transfer active.\\n         * When set to <tt>true</tt> it means that remote peer is neither\\n         * sending nor willing to receive video. In such case we'll ask\\n         * our peerconnection to stop sending video by calling\\n         * {@link TraceablePeerConnection.setVideoTransferActive} with\\n         * <tt>false</tt>.\\n         * @type {boolean}\\n         * @private\\n         */\\n        this._remoteVideoActive = true;\\n\\n        /**\\n         * Marks that ICE gathering duration has been reported already. That\\n         * prevents reporting it again, after eventual 'transport-replace' (JVB\\n         * conference migration/ICE restart).\\n         * @type {boolean}\\n         * @private\\n         */\\n        this._gatheringReported = false;\\n\\n        this.lasticecandidate = false;\\n        this.closed = false;\\n\\n        /**\\n         * Indicates whether or not this <tt>JingleSessionPC</tt> is used in\\n         * a peer to peer type of session.\\n         * @type {boolean} <tt>true</tt> if it's a peer to peer\\n         * session or <tt>false</tt> if it's a JVB session\\n         */\\n        this.isP2P = isP2P;\\n\\n        /**\\n         * The signaling layer implementation.\\n         * @type {SignalingLayerImpl}\\n         */\\n        this.signalingLayer = new SignalingLayerImpl();\\n\\n        this.modificationQueue\\n            = async.queue(this._processQueueTasks.bind(this), 1);\\n\\n        /**\\n         * Flag used to guarantee that the connection established event is\\n         * triggered just once.\\n         * @type {boolean}\\n         */\\n        this.wasConnected = false;\\n\\n        /**\\n         * Keeps track of how long (in ms) it took from ICE start to ICE\\n         * connect.\\n         *\\n         * @type {number}\\n         */\\n        this.establishmentDuration = undefined;\\n    }\\n\\n    /* eslint-enable max-params */\\n\\n    /**\\n     * Checks whether or not this session instance has been ended and eventually\\n     * logs a message which mentions that given <tt>actionName</tt> was\\n     * cancelled.\\n     * @param {string} actionName\\n     * @return {boolean} <tt>true</tt> if this {@link JingleSessionPC} has\\n     * entered {@link JingleSessionState.ENDED} or <tt>false</tt> otherwise.\\n     * @private\\n     */\\n    _assertNotEnded(actionName) {\\n        if (this.state === JingleSessionState.ENDED) {\\n            logger.log(\\n                `The session has ended - cancelling action: ${actionName}`);\\n\\n            return false;\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @inheritDoc\\n     * @param {JingleSessionPCOptions} options  - a set of config options.\\n     */\\n    doInitialize(options) {\\n        this.failICE = Boolean(options.failICE);\\n        this.lasticecandidate = false;\\n        this.options = options;\\n\\n        /**\\n         * {@code true} if reconnect is in progress.\\n         * @type {boolean}\\n         */\\n        this.isReconnect = false;\\n\\n        /**\\n         * Set to {@code true} if the connection was ever stable\\n         * @type {boolean}\\n         */\\n        this.wasstable = false;\\n        this.webrtcIceUdpDisable = Boolean(options.webrtcIceUdpDisable);\\n        this.webrtcIceTcpDisable = Boolean(options.webrtcIceTcpDisable);\\n\\n        const pcOptions = { disableRtx: options.disableRtx };\\n\\n        if (options.gatherStats) {\\n            pcOptions.maxstats = DEFAULT_MAX_STATS;\\n        }\\n\\n        if (this.isP2P) {\\n            // simulcast needs to be disabled for P2P (121) calls\\n            pcOptions.disableSimulcast = true;\\n            pcOptions.disableH264 = options.p2p && options.p2p.disableH264;\\n            pcOptions.preferH264 = options.p2p && options.p2p.preferH264;\\n\\n            const abtestSuspendVideo = this._abtestSuspendVideoEnabled(options);\\n\\n            if (typeof abtestSuspendVideo !== 'undefined') {\\n                pcOptions.abtestSuspendVideo = abtestSuspendVideo;\\n            }\\n        } else {\\n            // H264 does not support simulcast, so it needs to be disabled.\\n            pcOptions.disableSimulcast\\n                = options.disableSimulcast\\n                    || (options.preferH264 && !options.disableH264);\\n            pcOptions.preferH264 = options.preferH264;\\n            pcOptions.enableFirefoxSimulcast\\n                = options.testing && options.testing.enableFirefoxSimulcast;\\n            pcOptions.enableLayerSuspension = options.enableLayerSuspension;\\n        }\\n\\n        this.peerconnection\\n            = this.rtc.createPeerConnection(\\n                    this.signalingLayer,\\n                    this.iceConfig,\\n                    this.isP2P,\\n                    pcOptions);\\n\\n        this.peerconnection.onicecandidate = ev => {\\n            if (!ev) {\\n                // There was an incomplete check for ev before which left\\n                // the last line of the function unprotected from a potential\\n                // throw of an exception. Consequently, it may be argued that\\n                // the check is unnecessary. Anyway, I'm leaving it and making\\n                // the check complete.\\n                return;\\n            }\\n\\n            // XXX this is broken, candidate is not parsed.\\n            const candidate = ev.candidate;\\n            const now = window.performance.now();\\n\\n            if (candidate) {\\n                if (this._gatheringStartedTimestamp === null) {\\n                    this._gatheringStartedTimestamp = now;\\n                }\\n\\n                // Discard candidates of disabled protocols.\\n                let protocol = candidate.protocol;\\n\\n                if (typeof protocol === 'string') {\\n                    protocol = protocol.toLowerCase();\\n                    if (protocol === 'tcp' || protocol === 'ssltcp') {\\n                        if (this.webrtcIceTcpDisable) {\\n                            return;\\n                        }\\n                    } else if (protocol === 'udp') {\\n                        if (this.webrtcIceUdpDisable) {\\n                            return;\\n                        }\\n                    }\\n                }\\n            } else if (!this._gatheringReported) {\\n                // End of gathering\\n                Statistics.sendAnalytics(\\n                    ICE_DURATION,\\n                    {\\n                        phase: 'gathering',\\n                        value: now - this._gatheringStartedTimestamp,\\n                        p2p: this.isP2P,\\n                        initiator: this.isInitiator\\n                    });\\n                this._gatheringReported = true;\\n            }\\n            this.sendIceCandidate(candidate);\\n        };\\n\\n        // Note there is a change in the spec about closed:\\n        // This value moved into the RTCPeerConnectionState enum in\\n        // the May 13, 2016 draft of the specification, as it reflects the state\\n        // of the RTCPeerConnection, not the signaling connection. You now\\n        // detect a closed connection by checking for connectionState to be\\n        // \\\"closed\\\" instead.\\n        // I suppose at some point this will be moved to onconnectionstatechange\\n        this.peerconnection.onsignalingstatechange = () => {\\n            if (!this.peerconnection) {\\n                return;\\n            }\\n            if (this.peerconnection.signalingState === 'stable') {\\n                this.wasstable = true;\\n            } else if (\\n                (this.peerconnection.signalingState === 'closed'\\n                || this.peerconnection.connectionState === 'closed')\\n                && !this.closed) {\\n                this.room.eventEmitter.emit(XMPPEvents.SUSPEND_DETECTED, this);\\n            }\\n        };\\n\\n        /**\\n         * The oniceconnectionstatechange event handler contains the code to\\n         * execute when the iceconnectionstatechange event, of type Event,\\n         * is received by this RTCPeerConnection. Such an event is sent when\\n         * the value of RTCPeerConnection.iceConnectionState changes.\\n         */\\n        this.peerconnection.oniceconnectionstatechange = () => {\\n            if (!this.peerconnection\\n                    || !this._assertNotEnded('oniceconnectionstatechange')) {\\n                return;\\n            }\\n            const now = window.performance.now();\\n\\n            if (!this.isP2P) {\\n                this.room.connectionTimes[\\n                    `ice.state.${this.peerconnection.iceConnectionState}`]\\n                    = now;\\n            }\\n            logger.log(\\n                `(TIME) ICE ${this.peerconnection.iceConnectionState}`\\n                    + ` P2P? ${this.isP2P}:\\\\t`,\\n                now);\\n\\n            Statistics.sendAnalytics(\\n                ICE_STATE_CHANGED,\\n                {\\n                    p2p: this.isP2P,\\n                    state: this.peerconnection.iceConnectionState,\\n                    'signaling_state': this.peerconnection.signalingState,\\n                    reconnect: this.isReconnect,\\n                    value: now\\n                });\\n\\n            this.room.eventEmitter.emit(\\n                XMPPEvents.ICE_CONNECTION_STATE_CHANGED,\\n                this,\\n                this.peerconnection.iceConnectionState);\\n            switch (this.peerconnection.iceConnectionState) {\\n            case 'checking':\\n                this._iceCheckingStartedTimestamp = now;\\n                break;\\n            case 'connected':\\n                // Informs interested parties that the connection has been\\n                // restored.\\n                if (this.peerconnection.signalingState === 'stable') {\\n                    if (this.isReconnect) {\\n                        this.room.eventEmitter.emit(\\n                            XMPPEvents.CONNECTION_RESTORED, this);\\n                    }\\n                }\\n\\n                if (!this.wasConnected && this.wasstable) {\\n\\n                    Statistics.sendAnalytics(\\n                        ICE_DURATION,\\n                        {\\n                            phase: 'checking',\\n                            value: now - this._iceCheckingStartedTimestamp,\\n                            p2p: this.isP2P,\\n                            initiator: this.isInitiator\\n                        });\\n\\n                    // Switch between ICE gathering and ICE checking whichever\\n                    // started first (scenarios are different for initiator\\n                    // vs responder)\\n                    const iceStarted\\n                        = Math.min(\\n                            this._iceCheckingStartedTimestamp,\\n                            this._gatheringStartedTimestamp);\\n\\n                    this.establishmentDuration = now - iceStarted;\\n\\n                    Statistics.sendAnalytics(\\n                        ICE_DURATION,\\n                        {\\n                            phase: 'establishment',\\n                            value: this.establishmentDuration,\\n                            p2p: this.isP2P,\\n                            initiator: this.isInitiator\\n                        });\\n\\n                    this.wasConnected = true;\\n                    this.room.eventEmitter.emit(\\n                        XMPPEvents.CONNECTION_ESTABLISHED, this);\\n                }\\n                this.isReconnect = false;\\n                break;\\n            case 'disconnected':\\n                if (this.closed) {\\n                    break;\\n                }\\n                this.isReconnect = true;\\n\\n                // Informs interested parties that the connection has been\\n                // interrupted.\\n                if (this.wasstable) {\\n                    this.room.eventEmitter.emit(\\n                        XMPPEvents.CONNECTION_INTERRUPTED, this);\\n                }\\n                break;\\n            case 'failed':\\n                this.room.eventEmitter.emit(\\n                    XMPPEvents.CONNECTION_ICE_FAILED, this);\\n                break;\\n            }\\n        };\\n        this.peerconnection.onnegotiationneeded = () => {\\n            this.room.eventEmitter.emit(XMPPEvents.PEERCONNECTION_READY, this);\\n        };\\n\\n        // The signaling layer will bind it's listeners at this point\\n        this.signalingLayer.setChatRoom(this.room);\\n\\n        if (!this.isP2P && options.enableLayerSuspension) {\\n            // If this is the bridge session, we'll listen for\\n            // IS_SELECTED_CHANGED events and notify the peer connection\\n            this.rtc.addListener(RTCEvents.IS_SELECTED_CHANGED,\\n                isSelected => {\\n                    this.peerconnection.setIsSelected(isSelected);\\n                    logger.info('Doing local O/A due to '\\n                        + 'IS_SELECTED_CHANGED event');\\n                    this.modificationQueue.push(finishedCallback => {\\n                        this._renegotiate()\\n                            .then(finishedCallback)\\n                            .catch(finishedCallback);\\n                    });\\n                }\\n            );\\n        }\\n    }\\n\\n    /**\\n     * Sends given candidate in Jingle 'transport-info' message.\\n     * @param {RTCIceCandidate} candidate the WebRTC ICE candidate instance\\n     * @private\\n     */\\n    sendIceCandidate(candidate) {\\n        const localSDP = new SDP(this.peerconnection.localDescription.sdp);\\n\\n        if (candidate && !this.lasticecandidate) {\\n            const ice\\n                = SDPUtil.iceparams(\\n                    localSDP.media[candidate.sdpMLineIndex], localSDP.session);\\n            const jcand = SDPUtil.candidateToJingle(candidate.candidate);\\n\\n            if (!(ice && jcand)) {\\n                const errorMesssage = 'failed to get ice && jcand';\\n\\n                GlobalOnErrorHandler.callErrorHandler(new Error(errorMesssage));\\n                logger.error(errorMesssage);\\n\\n                return;\\n            }\\n            ice.xmlns = 'urn:xmpp:jingle:transports:ice-udp:1';\\n\\n            if (this.usedrip) {\\n                if (this.dripContainer.length === 0) {\\n                    // start 20ms callout\\n                    setTimeout(() => {\\n                        if (this.dripContainer.length === 0) {\\n                            return;\\n                        }\\n                        this.sendIceCandidates(this.dripContainer);\\n                        this.dripContainer = [];\\n                    }, 20);\\n                }\\n                this.dripContainer.push(candidate);\\n            } else {\\n                this.sendIceCandidates([ candidate ]);\\n            }\\n        } else {\\n            logger.log('sendIceCandidate: last candidate.');\\n\\n            // FIXME: remember to re-think in ICE-restart\\n            this.lasticecandidate = true;\\n        }\\n    }\\n\\n    /**\\n     * Sends given candidates in Jingle 'transport-info' message.\\n     * @param {Array<RTCIceCandidate>} candidates an array of the WebRTC ICE\\n     * candidate instances\\n     * @private\\n     */\\n    sendIceCandidates(candidates) {\\n        if (!this._assertNotEnded('sendIceCandidates')) {\\n\\n            return;\\n        }\\n\\n        logger.log('sendIceCandidates', candidates);\\n        const cand = $iq({ to: this.remoteJid,\\n            type: 'set' })\\n            .c('jingle', { xmlns: 'urn:xmpp:jingle:1',\\n                action: 'transport-info',\\n                initiator: this.initiatorJid,\\n                sid: this.sid });\\n\\n        const localSDP = new SDP(this.peerconnection.localDescription.sdp);\\n\\n        for (let mid = 0; mid < localSDP.media.length; mid++) {\\n            const cands = candidates.filter(el => el.sdpMLineIndex === mid);\\n            const mline\\n                = SDPUtil.parseMLine(localSDP.media[mid].split('\\\\r\\\\n')[0]);\\n\\n            if (cands.length > 0) {\\n                const ice\\n                    = SDPUtil.iceparams(localSDP.media[mid], localSDP.session);\\n\\n                ice.xmlns = 'urn:xmpp:jingle:transports:ice-udp:1';\\n                cand.c('content', {\\n                    creator: this.initiatorJid === this.localJid\\n                        ? 'initiator' : 'responder',\\n                    name: cands[0].sdpMid ? cands[0].sdpMid : mline.media\\n                }).c('transport', ice);\\n                for (let i = 0; i < cands.length; i++) {\\n                    const candidate\\n                        = SDPUtil.candidateToJingle(cands[i].candidate);\\n\\n                    // Mangle ICE candidate if 'failICE' test option is enabled\\n\\n                    if (this.failICE) {\\n                        candidate.ip = '1.1.1.1';\\n                    }\\n                    cand.c('candidate', candidate).up();\\n                }\\n\\n                // add fingerprint\\n                const fingerprintLine\\n                    = SDPUtil.findLine(\\n                        localSDP.media[mid],\\n                        'a=fingerprint:', localSDP.session);\\n\\n                if (fingerprintLine) {\\n                    const tmp = SDPUtil.parseFingerprint(fingerprintLine);\\n\\n                    tmp.required = true;\\n                    cand.c(\\n                        'fingerprint',\\n                        { xmlns: 'urn:xmpp:jingle:apps:dtls:0' })\\n                        .t(tmp.fingerprint);\\n                    delete tmp.fingerprint;\\n                    cand.attrs(tmp);\\n                    cand.up();\\n                }\\n                cand.up(); // transport\\n                cand.up(); // content\\n            }\\n        }\\n\\n        // might merge last-candidate notification into this, but it is called\\n        // a lot later. See webrtc issue #2340\\n        // logger.log('was this the last candidate', this.lasticecandidate);\\n        this.connection.sendIQ(\\n            cand, null, this.newJingleErrorHandler(cand), IQ_TIMEOUT);\\n    }\\n\\n    /**\\n     * Sends Jingle 'session-info' message which includes custom Jitsi Meet\\n     * 'ice-state' element with the text value 'failed' to let Jicofo know\\n     * that the ICE connection has entered the failed state. It can then\\n     * choose to re-create JVB channels and send 'transport-replace' to\\n     * retry the connection.\\n     */\\n    sendIceFailedNotification() {\\n        const sessionInfo\\n            = $iq({\\n                to: this.remoteJid,\\n                type: 'set' })\\n            .c('jingle', { xmlns: 'urn:xmpp:jingle:1',\\n                action: 'session-info',\\n                initiator: this.initiatorJid,\\n                sid: this.sid })\\n            .c('ice-state', { xmlns: 'http://jitsi.org/protocol/focus' })\\n            .t('failed')\\n            .up();\\n\\n        this._bridgeSessionId\\n            && sessionInfo.c(\\n                'bridge-session', {\\n                    xmlns: 'http://jitsi.org/protocol/focus',\\n                    id: this._bridgeSessionId\\n                });\\n\\n        this.connection.sendIQ(\\n            sessionInfo,\\n            null,\\n            this.newJingleErrorHandler(sessionInfo),\\n            /*\\n             * This message will be often sent when there are connectivity\\n             * issues, so make it slightly longer than Prosody's default BOSH\\n             * inactivity timeout of 60 seconds.\\n             */ 65);\\n    }\\n\\n    /**\\n     * {@inheritDoc}\\n     */\\n    addIceCandidates(elem) {\\n        if (this.peerconnection.signalingState === 'closed') {\\n            logger.warn('Ignored add ICE candidate when in closed state');\\n\\n            return;\\n        }\\n\\n        const iceCandidates = [];\\n\\n        elem.find('>content>transport>candidate')\\n            .each((idx, candidate) => {\\n                let line = SDPUtil.candidateFromJingle(candidate);\\n\\n                line = line.replace('\\\\r\\\\n', '').replace('a=', '');\\n\\n                // FIXME this code does not care to handle\\n                // non-bundle transport\\n                const rtcCandidate = new RTCIceCandidate({\\n                    sdpMLineIndex: 0,\\n\\n                    // FF comes up with more complex names like audio-23423,\\n                    // Given that it works on both Chrome and FF without\\n                    // providing it, let's leave it like this for the time\\n                    // being...\\n                    // sdpMid: 'audio',\\n                    sdpMid: '',\\n                    candidate: line\\n                });\\n\\n                iceCandidates.push(rtcCandidate);\\n            });\\n\\n        if (!iceCandidates.length) {\\n            logger.error(\\n                'No ICE candidates to add ?', elem[0] && elem[0].outerHTML);\\n\\n            return;\\n        }\\n\\n        // We want to have this task queued, so that we know it is executed,\\n        // after the initial sRD/sLD offer/answer cycle was done (based on\\n        // the assumption that candidates are spawned after the offer/answer\\n        // and XMPP preserves order).\\n        const workFunction = finishedCallback => {\\n            for (const iceCandidate of iceCandidates) {\\n                this.peerconnection.addIceCandidate(iceCandidate)\\n                    .then(\\n                        () => logger.debug('addIceCandidate ok!'),\\n                        err => logger.error('addIceCandidate failed!', err));\\n            }\\n\\n            finishedCallback();\\n        };\\n\\n        logger.debug(\\n            `Queued add (${iceCandidates.length}) ICE candidates task...`);\\n        this.modificationQueue.push(workFunction);\\n    }\\n\\n    /**\\n     *\\n     * @param contents\\n     */\\n    readSsrcInfo(contents) {\\n        const ssrcs\\n            = $(contents).find(\\n                '>description>'\\n                    + 'source[xmlns=\\\"urn:xmpp:jingle:apps:rtp:ssma:0\\\"]');\\n\\n        ssrcs.each((i, ssrcElement) => {\\n            const ssrc = Number(ssrcElement.getAttribute('ssrc'));\\n\\n            if (this.isP2P) {\\n                // In P2P all SSRCs are owner by the remote peer\\n                this.signalingLayer.setSSRCOwner(\\n                    ssrc, Strophe.getResourceFromJid(this.remoteJid));\\n            } else {\\n                $(ssrcElement)\\n                    .find('>ssrc-info[xmlns=\\\"http://jitsi.org/jitmeet\\\"]')\\n                    .each((i3, ssrcInfoElement) => {\\n                        const owner = ssrcInfoElement.getAttribute('owner');\\n\\n                        if (owner && owner.length) {\\n                            if (isNaN(ssrc) || ssrc < 0) {\\n                                logger.warn(\\n                                    `Invalid SSRC ${ssrc} value received`\\n                                        + ` for ${owner}`);\\n                            } else {\\n                                this.signalingLayer.setSSRCOwner(\\n                                    ssrc,\\n                                    Strophe.getResourceFromJid(owner));\\n                            }\\n                        }\\n                    });\\n            }\\n        });\\n    }\\n\\n    /**\\n     * Makes the underlying TraceablePeerConnection generate new SSRC for\\n     * the recvonly video stream.\\n     * @deprecated\\n     */\\n    generateRecvonlySsrc() {\\n        if (this.peerconnection) {\\n            this.peerconnection.generateRecvonlySsrc();\\n        } else {\\n            logger.error(\\n                'Unable to generate recvonly SSRC - no peerconnection');\\n        }\\n    }\\n\\n    /* eslint-disable max-params */\\n    /**\\n     * Accepts incoming Jingle 'session-initiate' and should send\\n     * 'session-accept' in result.\\n     * @param jingleOffer jQuery selector pointing to the jingle element of\\n     * the offer IQ\\n     * @param success callback called when we accept incoming session\\n     * successfully and receive RESULT packet to 'session-accept' sent.\\n     * @param failure function(error) called if for any reason we fail to accept\\n     * the incoming offer. 'error' argument can be used to log some details\\n     * about the error.\\n     * @param {Array<JitsiLocalTrack>} [localTracks] the optional list of\\n     * the local tracks that will be added, before the offer/answer cycle\\n     * executes. We allow the localTracks to optionally be passed in so that\\n     * the addition of the local tracks and the processing of the initial offer\\n     * can all be done atomically. We want to make sure that any other\\n     * operations which originate in the XMPP Jingle messages related with\\n     * this session to be executed with an assumption that the initial\\n     * offer/answer cycle has been executed already.\\n     */\\n    acceptOffer(jingleOffer, success, failure, localTracks) {\\n        this.setOfferAnswerCycle(\\n            jingleOffer,\\n            () => {\\n                // FIXME we may not care about RESULT packet for session-accept\\n                // then we should either call 'success' here immediately or\\n                // modify sendSessionAccept method to do that\\n                this.sendSessionAccept(success, failure);\\n            },\\n            failure,\\n            localTracks);\\n    }\\n\\n    /* eslint-enable max-params */\\n\\n    /**\\n     * Creates an offer and sends Jingle 'session-initiate' to the remote peer.\\n     * @param {Array<JitsiLocalTrack>} localTracks the local tracks that will be\\n     * added, before the offer/answer cycle executes (for the local track\\n     * addition to be an atomic operation together with the offer/answer).\\n     */\\n    invite(localTracks) {\\n        if (!this.isInitiator) {\\n            throw new Error('Trying to invite from the responder session');\\n        }\\n        const workFunction = finishedCallback => {\\n            for (const localTrack of localTracks) {\\n                this.peerconnection.addTrack(localTrack);\\n            }\\n            this.peerconnection.createOffer(this.mediaConstraints)\\n                .then(offerSdp => {\\n                    this.peerconnection.setLocalDescription(offerSdp)\\n                        .then(() => {\\n                            // NOTE that the offer is obtained from\\n                            // the localDescription getter as it needs to go\\n                            // though the transformation chain.\\n                            this.sendSessionInitiate(\\n                                this.peerconnection.localDescription.sdp);\\n                            finishedCallback();\\n                        }, error => {\\n                            logger.error(\\n                                'Failed to set local SDP', error, offerSdp);\\n                            finishedCallback(error);\\n                        });\\n                }, error => {\\n                    logger.error(\\n                        'Failed to create an offer',\\n                        error,\\n                        this.mediaConstraints);\\n                    finishedCallback(error);\\n                });\\n        };\\n\\n        this.modificationQueue.push(\\n            workFunction,\\n            error => {\\n                if (error) {\\n                    logger.error('invite error', error);\\n                } else {\\n                    logger.debug('invite executed - OK');\\n                }\\n            });\\n    }\\n\\n    /**\\n     * Sends 'session-initiate' to the remote peer.\\n     *\\n     * NOTE this method is synchronous and we're not waiting for the RESULT\\n     * response which would delay the startup process.\\n     *\\n     * @param {string} offerSdp  - The local session description which will be\\n     * used to generate an offer.\\n     * @private\\n     */\\n    sendSessionInitiate(offerSdp) {\\n        let init = $iq({\\n            to: this.remoteJid,\\n            type: 'set'\\n        }).c('jingle', {\\n            xmlns: 'urn:xmpp:jingle:1',\\n            action: 'session-initiate',\\n            initiator: this.initiatorJid,\\n            sid: this.sid\\n        });\\n\\n        new SDP(offerSdp).toJingle(\\n            init,\\n            this.isInitiator ? 'initiator' : 'responder');\\n        init = init.tree();\\n        logger.info('Session-initiate: ', init);\\n        this.connection.sendIQ(init,\\n            () => {\\n                logger.info('Got RESULT for \\\"session-initiate\\\"');\\n            },\\n            error => {\\n                logger.error('\\\"session-initiate\\\" error', error);\\n            },\\n            IQ_TIMEOUT);\\n    }\\n\\n    /**\\n     * Sets the answer received from the remote peer.\\n     * @param jingleAnswer\\n     */\\n    setAnswer(jingleAnswer) {\\n        if (!this.isInitiator) {\\n            throw new Error('Trying to set an answer on the responder session');\\n        }\\n        this.setOfferAnswerCycle(\\n            jingleAnswer,\\n            () => {\\n                logger.info('setAnswer - succeeded');\\n            },\\n            error => {\\n                logger.error('setAnswer failed: ', error);\\n            });\\n    }\\n\\n    /* eslint-disable max-params */\\n    /**\\n     * This is a setRemoteDescription/setLocalDescription cycle which starts at\\n     * converting Strophe Jingle IQ into remote offer SDP. Once converted\\n     * setRemoteDescription, createAnswer and setLocalDescription calls follow.\\n     * @param jingleOfferAnswerIq jQuery selector pointing to the jingle element\\n     *        of the offer (or answer) IQ\\n     * @param success callback called when sRD/sLD cycle finishes successfully.\\n     * @param failure callback called with an error object as an argument if we\\n     *        fail at any point during setRD, createAnswer, setLD.\\n     * @param {Array<JitsiLocalTrack>} [localTracks] the optional list of\\n     * the local tracks that will be added, before the offer/answer cycle\\n     * executes (for the local track addition to be an atomic operation together\\n     * with the offer/answer).\\n     */\\n    setOfferAnswerCycle(jingleOfferAnswerIq, success, failure, localTracks) {\\n        const workFunction = finishedCallback => {\\n\\n            if (localTracks) {\\n                for (const track of localTracks) {\\n                    this.peerconnection.addTrack(track);\\n                }\\n            }\\n\\n            const newRemoteSdp\\n                = this._processNewJingleOfferIq(jingleOfferAnswerIq);\\n            const oldLocalSdp\\n                = this.peerconnection.localDescription.sdp;\\n\\n            const bridgeSession\\n                = $(jingleOfferAnswerIq)\\n                    .find('>bridge-session['\\n                        + 'xmlns=\\\"http://jitsi.org/protocol/focus\\\"]');\\n            const bridgeSessionId = bridgeSession.attr('id');\\n\\n            if (bridgeSessionId !== this._bridgeSessionId) {\\n                this._bridgeSessionId = bridgeSessionId;\\n            }\\n\\n            this._renegotiate(newRemoteSdp.raw)\\n                .then(() => {\\n                    if (this.state === JingleSessionState.PENDING) {\\n                        this.state = JingleSessionState.ACTIVE;\\n\\n                        // Sync up video transfer active/inactive only after\\n                        // the initial O/A cycle. We want to adjust the video\\n                        // media direction only in the local SDP and the Jingle\\n                        // contents direction included in the initial\\n                        // offer/answer is mapped to the remote SDP. Jingle\\n                        // 'content-modify' IQ is processed in a way that it\\n                        // will only modify local SDP when remote peer is no\\n                        // longer interested in receiving video content.\\n                        // Changing media direction in the remote SDP will mess\\n                        // up our SDP translation chain (simulcast, video mute,\\n                        // RTX etc.)\\n                        if (this.isP2P && !this._localVideoActive) {\\n                            this.sendContentModify(this._localVideoActive);\\n                        }\\n                    }\\n\\n                    // Old local SDP will be available when we're setting answer\\n                    // for the first time, but not when offer and it's fine\\n                    // since we're generating an answer now it will contain all\\n                    // our SSRCs\\n                    if (oldLocalSdp) {\\n                        const newLocalSdp\\n                            = new SDP(this.peerconnection.localDescription.sdp);\\n\\n                        this.notifyMySSRCUpdate(\\n                            new SDP(oldLocalSdp), newLocalSdp);\\n                    }\\n\\n                    finishedCallback();\\n                }, error => {\\n                    logger.error(\\n                        `Error renegotiating after setting new remote ${\\n                            this.isInitiator ? 'answer: ' : 'offer: '}${error}`,\\n                        newRemoteSdp);\\n\\n                    this._onJingleFatalError(error);\\n                    finishedCallback(error);\\n                });\\n        };\\n\\n        this.modificationQueue.push(\\n            workFunction,\\n            error => {\\n                error ? failure(error) : success();\\n            });\\n    }\\n\\n    /* eslint-enable max-params */\\n\\n    /**\\n     * Although it states \\\"replace transport\\\" it does accept full Jingle offer\\n     * which should contain new ICE transport details.\\n     * @param jingleOfferElem an element Jingle IQ that contains new offer and\\n     *        transport info.\\n     * @param success callback called when we succeed to accept new offer.\\n     * @param failure function(error) called when we fail to accept new offer.\\n     */\\n    replaceTransport(jingleOfferElem, success, failure) {\\n        this.room.eventEmitter.emit(XMPPEvents.ICE_RESTARTING, this);\\n\\n        // We need to first reject the 'data' section to have the SCTP stack\\n        // cleaned up to signal the known data channel is now invalid. After\\n        // that the original offer is set to have the SCTP connection\\n        // established with the new bridge.\\n        const originalOffer = jingleOfferElem.clone();\\n\\n        jingleOfferElem\\n            .find('>content[name=\\\\'data\\\\']')\\n            .attr('senders', 'rejected');\\n\\n        // Remove all remote sources in order to reset the client's state\\n        // for the remote MediaStreams. When a conference is moved to\\n        // another bridge it will start streaming with a sequence number\\n        // that is not in sync with the most recently seen by the client.\\n        // The symptoms include frozen or black video and lots of \\\"failed to\\n        // unprotect SRTP packets\\\" in Chrome logs.\\n        jingleOfferElem\\n            .find('>content>description>source')\\n            .remove();\\n        jingleOfferElem\\n            .find('>content>description>ssrc-group')\\n            .remove();\\n\\n        // First set an offer with a rejected 'data' section\\n        this.setOfferAnswerCycle(\\n            jingleOfferElem,\\n            () => {\\n                // Now set the original offer(with the 'data' section)\\n                this.setOfferAnswerCycle(\\n                    originalOffer,\\n                    () => {\\n                        const localSDP\\n                            = new SDP(this.peerconnection.localDescription.sdp);\\n\\n                        this.sendTransportAccept(localSDP, success, failure);\\n\\n                        this.room.eventEmitter.emit(\\n                            XMPPEvents.ICE_RESTART_SUCCESS,\\n                            this,\\n                            originalOffer);\\n                    },\\n                    failure);\\n            },\\n            failure\\n        );\\n    }\\n\\n    /**\\n     * Sends Jingle 'session-accept' message.\\n     * @param {function()} success callback called when we receive 'RESULT'\\n     *        packet for the 'session-accept'\\n     * @param {function(error)} failure called when we receive an error response\\n     *        or when the request has timed out.\\n     * @private\\n     */\\n    sendSessionAccept(success, failure) {\\n        // NOTE: since we're just reading from it, we don't need to be within\\n        //  the modification queue to access the local description\\n        const localSDP = new SDP(this.peerconnection.localDescription.sdp);\\n        let accept = $iq({ to: this.remoteJid,\\n            type: 'set' })\\n            .c('jingle', { xmlns: 'urn:xmpp:jingle:1',\\n                action: 'session-accept',\\n                initiator: this.initiatorJid,\\n                responder: this.responderJid,\\n                sid: this.sid });\\n\\n        if (this.webrtcIceTcpDisable) {\\n            localSDP.removeTcpCandidates = true;\\n        }\\n        if (this.webrtcIceUdpDisable) {\\n            localSDP.removeUdpCandidates = true;\\n        }\\n        if (this.failICE) {\\n            localSDP.failICE = true;\\n        }\\n        localSDP.toJingle(\\n            accept,\\n            this.initiatorJid === this.localJid ? 'initiator' : 'responder',\\n            null);\\n\\n        // Calling tree() to print something useful\\n        accept = accept.tree();\\n        logger.info('Sending session-accept', accept);\\n        this.connection.sendIQ(accept,\\n            success,\\n            this.newJingleErrorHandler(accept, error => {\\n                failure(error);\\n\\n                // 'session-accept' is a critical timeout and we'll\\n                // have to restart\\n                this.room.eventEmitter.emit(\\n                    XMPPEvents.SESSION_ACCEPT_TIMEOUT, this);\\n            }),\\n            IQ_TIMEOUT);\\n\\n        // XXX Videobridge needs WebRTC's answer (ICE ufrag and pwd, DTLS\\n        // fingerprint and setup) ASAP in order to start the connection\\n        // establishment.\\n        //\\n        // FIXME Flushing the connection at this point triggers an issue with\\n        // BOSH request handling in Prosody on slow connections.\\n        //\\n        // The problem is that this request will be quite large and it may take\\n        // time before it reaches Prosody. In the meantime Strophe may decide\\n        // to send the next one. And it was observed that a small request with\\n        // 'transport-info' usually follows this one. It does reach Prosody\\n        // before the previous one was completely received. 'rid' on the server\\n        // is increased and Prosody ignores the request with 'session-accept'.\\n        // It will never reach Jicofo and everything in the request table is\\n        // lost. Removing the flush does not guarantee it will never happen, but\\n        // makes it much less likely('transport-info' is bundled with\\n        // 'session-accept' and any immediate requests).\\n        //\\n        // this.connection.flush();\\n    }\\n\\n    /**\\n     * Will send 'content-modify' IQ in order to ask the remote peer to\\n     * either stop or resume sending video media.\\n     * @param {boolean} videoTransferActive <tt>false</tt> to let the other peer\\n     * know that we're not sending nor interested in receiving video contents.\\n     * When set to <tt>true</tt> remote peer will be asked to resume video\\n     * transfer.\\n     * @private\\n     */\\n    sendContentModify(videoTransferActive) {\\n        const newSendersValue = videoTransferActive ? 'both' : 'none';\\n\\n        const sessionModify\\n            = $iq({\\n                to: this.remoteJid,\\n                type: 'set'\\n            })\\n                .c('jingle', {\\n                    xmlns: 'urn:xmpp:jingle:1',\\n                    action: 'content-modify',\\n                    initiator: this.initiatorJid,\\n                    sid: this.sid\\n                })\\n                .c('content', {\\n                    name: 'video',\\n                    senders: newSendersValue\\n                });\\n\\n        logger.info(\\n            `Sending content-modify, video senders: ${newSendersValue}`);\\n\\n        this.connection.sendIQ(\\n            sessionModify,\\n            null,\\n            this.newJingleErrorHandler(sessionModify),\\n            IQ_TIMEOUT);\\n    }\\n\\n    /**\\n     * Sends Jingle 'transport-accept' message which is a response to\\n     * 'transport-replace'.\\n     * @param localSDP the 'SDP' object with local session description\\n     * @param success callback called when we receive 'RESULT' packet for\\n     *        'transport-replace'\\n     * @param failure function(error) called when we receive an error response\\n     *        or when the request has timed out.\\n     * @private\\n     */\\n    sendTransportAccept(localSDP, success, failure) {\\n        let transportAccept = $iq({ to: this.remoteJid,\\n            type: 'set' })\\n            .c('jingle', {\\n                xmlns: 'urn:xmpp:jingle:1',\\n                action: 'transport-accept',\\n                initiator: this.initiatorJid,\\n                sid: this.sid\\n            });\\n\\n        localSDP.media.forEach((medialines, idx) => {\\n            const mline = SDPUtil.parseMLine(medialines.split('\\\\r\\\\n')[0]);\\n\\n            transportAccept.c('content',\\n                {\\n                    creator:\\n                        this.initiatorJid === this.localJid\\n                            ? 'initiator'\\n                            : 'responder',\\n                    name: mline.media\\n                }\\n            );\\n            localSDP.transportToJingle(idx, transportAccept);\\n            transportAccept.up();\\n        });\\n\\n        // Calling tree() to print something useful to the logger\\n        transportAccept = transportAccept.tree();\\n        logger.info('Sending transport-accept: ', transportAccept);\\n\\n        this.connection.sendIQ(transportAccept,\\n            success,\\n            this.newJingleErrorHandler(transportAccept, failure),\\n            IQ_TIMEOUT);\\n    }\\n\\n    /**\\n     * Sends Jingle 'transport-reject' message which is a response to\\n     * 'transport-replace'.\\n     * @param success callback called when we receive 'RESULT' packet for\\n     *        'transport-replace'\\n     * @param failure function(error) called when we receive an error response\\n     *        or when the request has timed out.\\n     *\\n     * FIXME method should be marked as private, but there's some spaghetti that\\n     *       needs to be fixed prior doing that\\n     */\\n    sendTransportReject(success, failure) {\\n        // Send 'transport-reject', so that the focus will\\n        // know that we've failed\\n        let transportReject = $iq({ to: this.remoteJid,\\n            type: 'set' })\\n            .c('jingle', {\\n                xmlns: 'urn:xmpp:jingle:1',\\n                action: 'transport-reject',\\n                initiator: this.initiatorJid,\\n                sid: this.sid\\n            });\\n\\n        transportReject = transportReject.tree();\\n        logger.info('Sending \\\\'transport-reject', transportReject);\\n\\n        this.connection.sendIQ(transportReject,\\n            success,\\n            this.newJingleErrorHandler(transportReject, failure),\\n            IQ_TIMEOUT);\\n    }\\n\\n    /**\\n     * @inheritDoc\\n     */\\n    terminate(success, failure, options) {\\n        if (this.state === JingleSessionState.ENDED) {\\n            return;\\n        }\\n\\n        if (!options || Boolean(options.sendSessionTerminate)) {\\n            let sessionTerminate\\n                = $iq({\\n                    to: this.remoteJid,\\n                    type: 'set'\\n                })\\n                    .c('jingle', {\\n                        xmlns: 'urn:xmpp:jingle:1',\\n                        action: 'session-terminate',\\n                        initiator: this.initiatorJid,\\n                        sid: this.sid\\n                    })\\n                    .c('reason')\\n                    .c((options && options.reason) || 'success');\\n\\n            if (options && options.reasonDescription) {\\n                sessionTerminate.up()\\n                    .c('text')\\n                    .t(options.reasonDescription);\\n            }\\n\\n            // Calling tree() to print something useful\\n            sessionTerminate = sessionTerminate.tree();\\n            logger.info('Sending session-terminate', sessionTerminate);\\n            this.connection.sendIQ(\\n                sessionTerminate,\\n                success,\\n                this.newJingleErrorHandler(sessionTerminate, failure),\\n                IQ_TIMEOUT);\\n        } else {\\n            logger.info(`Skipped sending session-terminate for ${this}`);\\n        }\\n\\n        // this should result in 'onTerminated' being called by strope.jingle.js\\n        this.connection.jingle.terminate(this.sid);\\n    }\\n\\n    /**\\n     *\\n     * @param reasonCondition\\n     * @param reasonText\\n     */\\n    onTerminated(reasonCondition, reasonText) {\\n        this.state = JingleSessionState.ENDED;\\n        this.establishmentDuration = undefined;\\n\\n        // Do something with reason and reasonCondition when we start to care\\n        // this.reasonCondition = reasonCondition;\\n        // this.reasonText = reasonText;\\n        logger.info(`Session terminated ${this}`, reasonCondition, reasonText);\\n\\n        this.close();\\n    }\\n\\n    /**\\n     * Parse the information from the xml sourceAddElem and translate it\\n     *  into sdp lines\\n     * @param {jquery xml element} sourceAddElem the source-add\\n     *  element from jingle\\n     * @param {SDP object} currentRemoteSdp the current remote\\n     *  sdp (as of this new source-add)\\n     * @returns {list} a list of SDP line strings that should\\n     *  be added to the remote SDP\\n     */\\n    _parseSsrcInfoFromSourceAdd(sourceAddElem, currentRemoteSdp) {\\n        const addSsrcInfo = [];\\n\\n        $(sourceAddElem).each((i1, content) => {\\n            const name = $(content).attr('name');\\n            let lines = '';\\n\\n            $(content)\\n                .find('ssrc-group[xmlns=\\\"urn:xmpp:jingle:apps:rtp:ssma:0\\\"]')\\n                .each(function() {\\n                    // eslint-disable-next-line no-invalid-this\\n                    const semantics = this.getAttribute('semantics');\\n                    const ssrcs\\n                        = $(this) // eslint-disable-line no-invalid-this\\n                            .find('>source')\\n                            .map(function() {\\n                                // eslint-disable-next-line no-invalid-this\\n                                return this.getAttribute('ssrc');\\n                            })\\n                            .get();\\n\\n                    if (ssrcs.length) {\\n                        lines\\n                            += `a=ssrc-group:${semantics} ${\\n                                ssrcs.join(' ')}\\\\r\\\\n`;\\n                    }\\n                });\\n\\n            // handles both >source and >description>source\\n            const tmp\\n                = $(content).find(\\n                    'source[xmlns=\\\"urn:xmpp:jingle:apps:rtp:ssma:0\\\"]');\\n\\n            /* eslint-disable no-invalid-this */\\n            tmp.each(function() {\\n                const ssrc = $(this).attr('ssrc');\\n\\n                if (currentRemoteSdp.containsSSRC(ssrc)) {\\n                    logger.warn(\\n                        `Source-add request for existing SSRC: ${ssrc}`);\\n\\n                    return;\\n                }\\n\\n                // eslint-disable-next-line newline-per-chained-call\\n                $(this).find('>parameter').each(function() {\\n                    lines += `a=ssrc:${ssrc} ${$(this).attr('name')}`;\\n                    if ($(this).attr('value') && $(this).attr('value').length) {\\n                        lines += `:${$(this).attr('value')}`;\\n                    }\\n                    lines += '\\\\r\\\\n';\\n                });\\n            });\\n\\n            /* eslint-enable no-invalid-this */\\n            currentRemoteSdp.media.forEach((media, i2) => {\\n                if (!SDPUtil.findLine(media, `a=mid:${name}`)) {\\n                    return;\\n                }\\n                if (!addSsrcInfo[i2]) {\\n                    addSsrcInfo[i2] = '';\\n                }\\n                addSsrcInfo[i2] += lines;\\n            });\\n        });\\n\\n        return addSsrcInfo;\\n    }\\n\\n    /**\\n     * Handles a Jingle source-add message for this Jingle session.\\n     * @param elem An array of Jingle \\\"content\\\" elements.\\n     */\\n    addRemoteStream(elem) {\\n        this._addOrRemoveRemoteStream(true /* add */, elem);\\n    }\\n\\n    /**\\n     * Handles a Jingle source-remove message for this Jingle session.\\n     * @param elem An array of Jingle \\\"content\\\" elements.\\n     */\\n    removeRemoteStream(elem) {\\n        this._addOrRemoveRemoteStream(false /* remove */, elem);\\n    }\\n\\n    /**\\n     * Handles either Jingle 'source-add' or 'source-remove' message for this\\n     * Jingle session.\\n     * @param {boolean} isAdd <tt>true</tt> for 'source-add' or <tt>false</tt>\\n     * otherwise.\\n     * @param {Array<Element>} elem an array of Jingle \\\"content\\\" elements.\\n     * @private\\n     */\\n    _addOrRemoveRemoteStream(isAdd, elem) {\\n        const logPrefix = isAdd ? 'addRemoteStream' : 'removeRemoteStream';\\n\\n        if (isAdd) {\\n            this.readSsrcInfo(elem);\\n        }\\n\\n        const workFunction = finishedCallback => {\\n            if (!this.peerconnection.localDescription\\n                || !this.peerconnection.localDescription.sdp) {\\n                const errMsg = `${logPrefix} - localDescription not ready yet`;\\n\\n                logger.error(errMsg);\\n                finishedCallback(errMsg);\\n\\n                return;\\n            }\\n\\n            logger.log(`Processing ${logPrefix}`);\\n            logger.log(\\n                'ICE connection state: ',\\n                this.peerconnection.iceConnectionState);\\n\\n            const oldLocalSdp\\n                = new SDP(this.peerconnection.localDescription.sdp);\\n            const sdp = new SDP(this.peerconnection.remoteDescription.sdp);\\n            const addOrRemoveSsrcInfo\\n                = isAdd\\n                    ? this._parseSsrcInfoFromSourceAdd(elem, sdp)\\n                    : this._parseSsrcInfoFromSourceRemove(elem, sdp);\\n            const newRemoteSdp\\n                = isAdd\\n                    ? this._processRemoteAddSource(addOrRemoveSsrcInfo)\\n                    : this._processRemoteRemoveSource(addOrRemoveSsrcInfo);\\n\\n            this._renegotiate(newRemoteSdp.raw)\\n                .then(() => {\\n                    const newLocalSdp\\n                        = new SDP(this.peerconnection.localDescription.sdp);\\n\\n                    logger.log(\\n                        `${logPrefix} - OK, SDPs: `, oldLocalSdp, newLocalSdp);\\n                    this.notifyMySSRCUpdate(oldLocalSdp, newLocalSdp);\\n                    finishedCallback();\\n                }, error => {\\n                    logger.error(`${logPrefix} failed:`, error);\\n                    finishedCallback(error);\\n                });\\n        };\\n\\n        // Queue and execute\\n        this.modificationQueue.push(workFunction);\\n    }\\n\\n    /**\\n     * The 'task' function will be given a callback it MUST call with either:\\n     *  1) No arguments if it was successful or\\n     *  2) An error argument if there was an error\\n     * If the task wants to process the success or failure of the task, it\\n     * should pass a handler to the .push function, e.g.:\\n     * queue.push(task, (err) => {\\n     *     if (err) {\\n     *         // error handling\\n     *     } else {\\n     *         // success handling\\n     *     }\\n     * });\\n     */\\n    _processQueueTasks(task, finishedCallback) {\\n        task(finishedCallback);\\n    }\\n\\n    /**\\n     * Takes in a jingle offer iq, returns the new sdp offer\\n     * @param {jquery xml element} offerIq the incoming offer\\n     * @returns {SDP object} the jingle offer translated to SDP\\n     */\\n    _processNewJingleOfferIq(offerIq) {\\n        const remoteSdp = new SDP('');\\n\\n        if (this.webrtcIceTcpDisable) {\\n            remoteSdp.removeTcpCandidates = true;\\n        }\\n        if (this.webrtcIceUdpDisable) {\\n            remoteSdp.removeUdpCandidates = true;\\n        }\\n        if (this.failICE) {\\n            remoteSdp.failICE = true;\\n        }\\n\\n        remoteSdp.fromJingle(offerIq);\\n        this.readSsrcInfo($(offerIq).find('>content'));\\n\\n        return remoteSdp;\\n    }\\n\\n    /**\\n     * Remove the given ssrc lines from the current remote sdp\\n     * @param {list} removeSsrcInfo a list of SDP line strings that\\n     *  should be removed from the remote SDP\\n     * @returns type {SDP Object} the new remote SDP (after removing the lines\\n     *  in removeSsrcInfo\\n     */\\n    _processRemoteRemoveSource(removeSsrcInfo) {\\n        const remoteSdp = new SDP(this.peerconnection.remoteDescription.sdp);\\n\\n        removeSsrcInfo.forEach((lines, idx) => {\\n            // eslint-disable-next-line no-param-reassign\\n            lines = lines.split('\\\\r\\\\n');\\n            lines.pop(); // remove empty last element;\\n            lines.forEach(line => {\\n                remoteSdp.media[idx]\\n                    = remoteSdp.media[idx].replace(`${line}\\\\r\\\\n`, '');\\n            });\\n        });\\n        remoteSdp.raw = remoteSdp.session + remoteSdp.media.join('');\\n\\n        return remoteSdp;\\n    }\\n\\n    /**\\n     * Add the given ssrc lines to the current remote sdp\\n     * @param {list} addSsrcInfo a list of SDP line strings that\\n     *  should be added to the remote SDP\\n     * @returns type {SDP Object} the new remote SDP (after removing the lines\\n     *  in removeSsrcInfo\\n     */\\n    _processRemoteAddSource(addSsrcInfo) {\\n        const remoteSdp = new SDP(this.peerconnection.remoteDescription.sdp);\\n\\n        addSsrcInfo.forEach((lines, idx) => {\\n            remoteSdp.media[idx] += lines;\\n        });\\n        remoteSdp.raw = remoteSdp.session + remoteSdp.media.join('');\\n\\n        return remoteSdp;\\n    }\\n\\n    /**\\n     * Do a new o/a flow using the existing remote description\\n     * @param {string} [optionalRemoteSdp] optional, raw remote sdp\\n     *  to use.  If not provided, the remote sdp from the\\n     *  peerconnection will be used\\n     * @returns {Promise} promise which resolves when the\\n     *  o/a flow is complete with no arguments or\\n     *  rejects with an error {string}\\n     */\\n    _renegotiate(optionalRemoteSdp) {\\n        if (this.peerconnection.signalingState === 'closed') {\\n            return Promise.reject('Attempted to renegotiate in state closed');\\n        }\\n\\n        const remoteSdp\\n            = optionalRemoteSdp || this.peerconnection.remoteDescription.sdp;\\n\\n        if (!remoteSdp) {\\n            return Promise.reject(\\n                'Can not renegotiate without remote description,'\\n                    + `- current state: ${this.state}`);\\n        }\\n\\n        const remoteDescription = new RTCSessionDescription({\\n            type: this.isInitiator ? 'answer' : 'offer',\\n            sdp: remoteSdp\\n        });\\n\\n        if (this.isInitiator) {\\n            return this._initiatorRenegotiate(remoteDescription);\\n        }\\n\\n        return this._responderRenegotiate(remoteDescription);\\n    }\\n\\n    /**\\n     * Renegotiate cycle implementation for the responder case.\\n     * @param {object} remoteDescription the SDP object as defined by the WebRTC\\n     * which will be used as remote description in the cycle.\\n     * @private\\n     */\\n    _responderRenegotiate(remoteDescription) {\\n        logger.debug('Renegotiate: setting remote description');\\n\\n        return this.peerconnection.setRemoteDescription(remoteDescription)\\n            .then(() => {\\n                logger.debug('Renegotiate: creating answer');\\n\\n                return this.peerconnection.createAnswer(this.mediaConstraints)\\n                    .then(answer => {\\n                        logger.debug('Renegotiate: setting local description');\\n\\n                        return this.peerconnection.setLocalDescription(answer);\\n                    });\\n            });\\n    }\\n\\n    /**\\n     * Renegotiate cycle implementation for the initiator's case.\\n     * @param {object} remoteDescription the SDP object as defined by the WebRTC\\n     * which will be used as remote description in the cycle.\\n     * @private\\n     */\\n    _initiatorRenegotiate(remoteDescription) {\\n        if (this.peerconnection.signalingState === 'have-local-offer') {\\n            // Skip createOffer and setLocalDescription or FF will fail\\n            logger.debug(\\n                'Renegotiate: setting remote description');\\n\\n            /* eslint-disable arrow-body-style */\\n\\n            return this.peerconnection.setRemoteDescription(remoteDescription)\\n                .then(() => {\\n                    // In case when the answer is being set for the first time,\\n                    // full sRD/sLD cycle is required to have the local\\n                    // description updated and SSRCs synchronized correctly.\\n                    // Otherwise SSRCs for streams added after invite, but\\n                    // before the answer was accepted will not be detected.\\n                    // The reason for that is that renegotiate can not be called\\n                    // when adding tracks and they will not be reflected in\\n                    // the local SDP.\\n                    return this._initiatorRenegotiate(remoteDescription);\\n                });\\n            /* eslint-enable arrow-body-style */\\n        }\\n\\n        logger.debug('Renegotiate: creating offer');\\n\\n        return this.peerconnection.createOffer(this.mediaConstraints)\\n            .then(offer => {\\n                logger.debug('Renegotiate: setting local description');\\n\\n                return this.peerconnection.setLocalDescription(offer)\\n                    .then(() => {\\n                        logger.debug(\\n                            'Renegotiate: setting remote description');\\n\\n                        // eslint-disable-next-line max-len\\n                        return this.peerconnection.setRemoteDescription(remoteDescription);\\n                    });\\n            });\\n    }\\n\\n    /**\\n     * Replaces <tt>oldTrack</tt> with <tt>newTrack</tt> and performs a single\\n     * offer/answer cycle after both operations are done. Either\\n     * <tt>oldTrack</tt> or <tt>newTrack</tt> can be null; replacing a valid\\n     * <tt>oldTrack</tt> with a null <tt>newTrack</tt> effectively just removes\\n     * <tt>oldTrack</tt>\\n     * @param {JitsiLocalTrack|null} oldTrack the current track in use to be\\n     * replaced\\n     * @param {JitsiLocalTrack|null} newTrack the new track to use\\n     * @returns {Promise} which resolves once the replacement is complete\\n     *  with no arguments or rejects with an error {string}\\n     */\\n    replaceTrack(oldTrack, newTrack) {\\n        const workFunction = finishedCallback => {\\n            // Check if the connection was closed and pretend everything is OK.\\n            // This can happen if a track removal is scheduled but takes place\\n            // after the connection is closed.\\n            if (this.peerconnection.signalingState === 'closed'\\n                || this.peerconnection.connectionState === 'closed'\\n                || this.closed) {\\n\\n                finishedCallback();\\n\\n                return;\\n            }\\n\\n            const oldLocalSdp = this.peerconnection.localDescription.sdp;\\n\\n            // NOTE the code below assumes that no more than 1 video track\\n            // can be added to the peer connection.\\n            // Transition from no video to video (possibly screen sharing)\\n            if (!oldTrack && newTrack && newTrack.isVideoTrack()) {\\n                // Clearing current primary SSRC will make\\n                // the SdpConsistency generate a new one which will result\\n                // with:\\n                // 1. source-remove for the recvonly\\n                // 2. source-add for the new video stream\\n                this.peerconnection.clearRecvonlySsrc();\\n\\n            // Transition from video to no video\\n            } else if (oldTrack && oldTrack.isVideoTrack() && !newTrack) {\\n                // Clearing current primary SSRC and generating the recvonly\\n                // will result in:\\n                // 1. source-remove for the old video stream\\n                // 2. source-add for the recvonly stream\\n                this.peerconnection.clearRecvonlySsrc();\\n                this.peerconnection.generateRecvonlySsrc();\\n            }\\n\\n            this.peerconnection.replaceTrack(oldTrack, newTrack)\\n            .then(shouldRenegotiate => {\\n                if (shouldRenegotiate\\n                    && (oldTrack || newTrack)\\n                    && this.state === JingleSessionState.ACTIVE) {\\n                    this._renegotiate()\\n                        .then(() => {\\n                            const newLocalSDP\\n                                = new SDP(\\n                                    this.peerconnection.localDescription.sdp);\\n\\n                            this.notifyMySSRCUpdate(\\n                                new SDP(oldLocalSdp), newLocalSDP);\\n                            finishedCallback();\\n                        },\\n                        finishedCallback /* will be called with en error */);\\n                } else {\\n                    finishedCallback();\\n                }\\n            });\\n        };\\n\\n        return new Promise((resolve, reject) => {\\n            this.modificationQueue.push(\\n                workFunction,\\n                error => {\\n                    if (error) {\\n                        logger.error('Replace track error:', error);\\n                        reject(error);\\n                    } else {\\n                        logger.info('Replace track done!');\\n                        resolve();\\n                    }\\n                });\\n        });\\n    }\\n\\n    /**\\n     * Parse the information from the xml sourceRemoveElem and translate it\\n     *  into sdp lines\\n     * @param {jquery xml element} sourceRemoveElem the source-remove\\n     *  element from jingle\\n     * @param {SDP object} currentRemoteSdp the current remote\\n     *  sdp (as of this new source-remove)\\n     * @returns {list} a list of SDP line strings that should\\n     *  be removed from the remote SDP\\n     */\\n    _parseSsrcInfoFromSourceRemove(sourceRemoveElem, currentRemoteSdp) {\\n        const removeSsrcInfo = [];\\n\\n        $(sourceRemoveElem).each((i1, content) => {\\n            const name = $(content).attr('name');\\n            let lines = '';\\n\\n            $(content)\\n                .find('ssrc-group[xmlns=\\\"urn:xmpp:jingle:apps:rtp:ssma:0\\\"]')\\n                .each(function() {\\n                    /* eslint-disable no-invalid-this */\\n                    const semantics = this.getAttribute('semantics');\\n                    const ssrcs\\n                        = $(this)\\n                            .find('>source')\\n                            .map(function() {\\n                                return this.getAttribute('ssrc');\\n                            })\\n                            .get();\\n\\n                    if (ssrcs.length) {\\n                        lines\\n                            += `a=ssrc-group:${semantics} ${\\n                                ssrcs.join(' ')}\\\\r\\\\n`;\\n                    }\\n\\n                    /* eslint-enable no-invalid-this */\\n                });\\n            const ssrcs = [];\\n\\n            // handles both >source and >description>source versions\\n            const tmp\\n                = $(content).find(\\n                    'source[xmlns=\\\"urn:xmpp:jingle:apps:rtp:ssma:0\\\"]');\\n\\n            tmp.each(function() {\\n                // eslint-disable-next-line no-invalid-this\\n                const ssrc = $(this).attr('ssrc');\\n\\n                ssrcs.push(ssrc);\\n            });\\n            currentRemoteSdp.media.forEach((media, i2) => {\\n                if (!SDPUtil.findLine(media, `a=mid:${name}`)) {\\n                    return;\\n                }\\n                if (!removeSsrcInfo[i2]) {\\n                    removeSsrcInfo[i2] = '';\\n                }\\n                ssrcs.forEach(ssrc => {\\n                    const ssrcLines\\n                        = SDPUtil.findLines(media, `a=ssrc:${ssrc}`);\\n\\n                    if (ssrcLines.length) {\\n                        removeSsrcInfo[i2] += `${ssrcLines.join('\\\\r\\\\n')}\\\\r\\\\n`;\\n                    }\\n                });\\n                removeSsrcInfo[i2] += lines;\\n            });\\n        });\\n\\n        return removeSsrcInfo;\\n    }\\n\\n    /**\\n     * Will print an error if there is any difference, between the SSRCs given\\n     * in the <tt>oldSDP</tt> and the ones currently described in\\n     * the peerconnection's local description.\\n     * @param {string} operationName the operation's name which will be printed\\n     * in the error message.\\n     * @param {SDP} oldSDP the old local SDP which will be compared with\\n     * the current one.\\n     * @return {boolean} <tt>true</tt> if there was any change or <tt>false</tt>\\n     * otherwise.\\n     * @private\\n     */\\n    _verifyNoSSRCChanged(operationName, oldSDP) {\\n        const currentLocalSDP\\n            = new SDP(this.peerconnection.localDescription.sdp);\\n        let sdpDiff = new SDPDiffer(oldSDP, currentLocalSDP);\\n        const addedMedia = sdpDiff.getNewMedia();\\n\\n        if (Object.keys(addedMedia).length) {\\n            logger.error(\\n                `${this} - some SSRC were added on ${operationName}`,\\n                addedMedia);\\n\\n            return false;\\n        }\\n\\n        sdpDiff = new SDPDiffer(currentLocalSDP, oldSDP);\\n        const removedMedia = sdpDiff.getNewMedia();\\n\\n        if (Object.keys(removedMedia).length) {\\n            logger.error(\\n                `${this} - some SSRCs were removed on ${operationName}`,\\n                removedMedia);\\n\\n            return false;\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * Adds local track back to this session, as part of the unmute operation.\\n     * @param {JitsiLocalTrack} track\\n     * @return {Promise} a promise that will resolve once the local track is\\n     * added back to this session and renegotiation succeeds. Will be rejected\\n     * with a <tt>string</tt> that provides some error details in case something\\n     * goes wrong.\\n     */\\n    addTrackAsUnmute(track) {\\n        return this._addRemoveTrackAsMuteUnmute(\\n            false /* add as unmute */, track);\\n    }\\n\\n    /**\\n     * Remove local track as part of the mute operation.\\n     * @param {JitsiLocalTrack} track the local track to be removed\\n     * @return {Promise} a promise which will be resolved once the local track\\n     * is removed from this session and the renegotiation is performed.\\n     * The promise will be rejected with a <tt>string</tt> that the describes\\n     * the error if anything goes wrong.\\n     */\\n    removeTrackAsMute(track) {\\n        return this._addRemoveTrackAsMuteUnmute(\\n            true /* remove as mute */, track);\\n    }\\n\\n    /**\\n     * See {@link addTrackAsUnmute} and {@link removeTrackAsMute}.\\n     * @param {boolean} isMute <tt>true</tt> for \\\"remove as mute\\\" or\\n     * <tt>false</tt> for \\\"add as unmute\\\".\\n     * @param {JitsiLocalTrack} track the track that will be added/removed\\n     * @private\\n     */\\n    _addRemoveTrackAsMuteUnmute(isMute, track) {\\n        if (!track) {\\n            return Promise.reject('invalid \\\"track\\\" argument value');\\n        }\\n        const operationName = isMute ? 'removeTrackMute' : 'addTrackUnmute';\\n        const workFunction = finishedCallback => {\\n            const tpc = this.peerconnection;\\n\\n            if (!tpc) {\\n                finishedCallback(\\n                    `Error:  tried ${operationName} track with no active peer`\\n                        + 'connection');\\n\\n                return;\\n            }\\n            const oldLocalSDP = tpc.localDescription.sdp;\\n            const tpcOperation\\n                = isMute\\n                    ? tpc.removeTrackMute.bind(tpc, track)\\n                    : tpc.addTrackUnmute.bind(tpc, track);\\n\\n            if (!tpcOperation()) {\\n                finishedCallback(`${operationName} failed!`);\\n            } else if (!oldLocalSDP || !tpc.remoteDescription.sdp) {\\n                finishedCallback();\\n            } else {\\n                this._renegotiate()\\n                    .then(() => {\\n                        // The results are ignored, as this check failure is not\\n                        // enough to fail the whole operation. It will log\\n                        // an error inside.\\n                        this._verifyNoSSRCChanged(\\n                            operationName, new SDP(oldLocalSDP));\\n                        finishedCallback();\\n                    },\\n                    finishedCallback /* will be called with an error */);\\n            }\\n        };\\n\\n        return new Promise((resolve, reject) => {\\n            this.modificationQueue.push(\\n                workFunction,\\n                error => {\\n                    if (error) {\\n                        reject(error);\\n                    } else {\\n                        resolve();\\n                    }\\n                });\\n        });\\n    }\\n\\n    /**\\n     * Resumes or suspends media transfer over the underlying peer connection.\\n     * @param {boolean} audioActive <tt>true</tt> to enable audio media\\n     * transfer or <tt>false</tt> to suspend audio media transmission.\\n     * @param {boolean} videoActive <tt>true</tt> to enable video media\\n     * transfer or <tt>false</tt> to suspend video media transmission.\\n     * @return {Promise} a <tt>Promise</tt> which will resolve once\\n     * the operation is done. It will be rejected with an error description as\\n     * a string in case anything goes wrong.\\n     */\\n    setMediaTransferActive(audioActive, videoActive) {\\n        if (!this.peerconnection) {\\n            return Promise.reject(\\n                'Can not modify transfer active state,'\\n                    + ' before \\\"initialize\\\" is called');\\n        }\\n\\n        const logAudioStr = audioActive ? 'audio active' : 'audio inactive';\\n        const logVideoStr = videoActive ? 'video active' : 'video inactive';\\n\\n        logger.info(`Queued make ${logVideoStr}, ${logAudioStr} task...`);\\n\\n        const workFunction = finishedCallback => {\\n            const isSessionActive = this.state === JingleSessionState.ACTIVE;\\n\\n            // Because the value is modified on the queue it's impossible to\\n            // check it's final value reliably prior to submitting the task.\\n            // The rule here is that the last submitted state counts.\\n            // Check the values here to avoid unnecessary renegotiation cycle.\\n            const audioActiveChanged\\n                = this.peerconnection.setAudioTransferActive(audioActive);\\n\\n            if (this._localVideoActive !== videoActive) {\\n                this._localVideoActive = videoActive;\\n\\n                // Do only for P2P - Jicofo will reply with 'bad-request'\\n                // We don't want to send 'content-modify', before the initial\\n                // O/A (state === JingleSessionState.ACTIVE), because that will\\n                // mess up video media direction in the remote SDP.\\n                // 'content-modify' when processed only affects the media\\n                // direction in the local SDP. We're doing that, because setting\\n                // 'inactive' on video media in remote SDP will mess up our SDP\\n                // translation chain (simulcast, RTX, video mute etc.).\\n                if (this.isP2P && isSessionActive) {\\n                    this.sendContentModify(videoActive);\\n                }\\n            }\\n\\n            const pcVideoActiveChanged\\n                = this.peerconnection.setVideoTransferActive(\\n                    this._localVideoActive && this._remoteVideoActive);\\n\\n            // Will do the sRD/sLD cycle to update SDPs and adjust the media\\n            // direction\\n            if (isSessionActive\\n                    && (audioActiveChanged || pcVideoActiveChanged)) {\\n                this._renegotiate()\\n                    .then(\\n                        finishedCallback,\\n                        finishedCallback /* will be called with an error */);\\n            } else {\\n                finishedCallback();\\n            }\\n        };\\n\\n        return new Promise((resolve, reject) => {\\n            this.modificationQueue.push(\\n                workFunction,\\n                error => {\\n                    if (error) {\\n                        reject(error);\\n                    } else {\\n                        resolve();\\n                    }\\n                });\\n        });\\n    }\\n\\n    /**\\n     * Will put and execute on the queue a session modify task. Currently it\\n     * only checks the senders attribute of the video content in order to figure\\n     * out if the remote peer has video in the inactive state (stored locally\\n     * in {@link _remoteVideoActive} - see field description for more info).\\n     * @param {jQuery} jingleContents jQuery selector pointing to the jingle\\n     * element of the session modify IQ.\\n     * @see {@link _remoteVideoActive}\\n     * @see {@link _localVideoActive}\\n     */\\n    modifyContents(jingleContents) {\\n        const newVideoSenders\\n            = JingleSessionPC.parseVideoSenders(jingleContents);\\n\\n        if (newVideoSenders === null) {\\n            logger.error(\\n                `${this} - failed to parse video \\\"senders\\\" attribute in`\\n                    + '\\\"content-modify\\\" action');\\n\\n            return;\\n        }\\n\\n        const workFunction = finishedCallback => {\\n            if (this._assertNotEnded('content-modify')\\n                    && this._modifyRemoteVideoActive(newVideoSenders)) {\\n                // Will do the sRD/sLD cycle to update SDPs and adjust\\n                // the media direction\\n                this._renegotiate()\\n                    .then(finishedCallback, finishedCallback /* (error) */);\\n            } else {\\n                finishedCallback();\\n            }\\n        };\\n\\n        logger.debug(\\n            `${this} queued \\\"content-modify\\\" task`\\n                + `(video senders=\\\"${newVideoSenders}\\\")`);\\n\\n        this.modificationQueue.push(\\n            workFunction,\\n            error => {\\n                if (error) {\\n                    logger.error('\\\"content-modify\\\" failed', error);\\n                }\\n            });\\n    }\\n\\n    /**\\n     * Processes new value of remote video \\\"senders\\\" Jingle attribute and tries\\n     * to apply it for {@link _remoteVideoActive}.\\n     * @param {string} remoteVideoSenders the value of \\\"senders\\\" attribute of\\n     * Jingle video content element advertised by remote peer.\\n     * @return {boolean} <tt>true</tt> if the change affected state of\\n     * the underlying peerconnection and renegotiation is required for\\n     * the changes to take effect.\\n     * @private\\n     */\\n    _modifyRemoteVideoActive(remoteVideoSenders) {\\n        const isRemoteVideoActive\\n            = remoteVideoSenders === 'both'\\n                || (remoteVideoSenders === 'initiator' && this.isInitiator)\\n                || (remoteVideoSenders === 'responder' && !this.isInitiator);\\n\\n        if (isRemoteVideoActive !== this._remoteVideoActive) {\\n            logger.debug(\\n                `${this} new remote video active: ${isRemoteVideoActive}`);\\n            this._remoteVideoActive = isRemoteVideoActive;\\n        }\\n\\n        return this.peerconnection.setVideoTransferActive(\\n            this._localVideoActive && this._remoteVideoActive);\\n    }\\n\\n    /**\\n     * Figures out added/removed ssrcs and send update IQs.\\n     * @param oldSDP SDP object for old description.\\n     * @param newSDP SDP object for new description.\\n     */\\n    notifyMySSRCUpdate(oldSDP, newSDP) {\\n\\n        if (this.state !== JingleSessionState.ACTIVE) {\\n            logger.warn(`Skipping SSRC update in '${this.state} ' state.`);\\n\\n            return;\\n        }\\n\\n        // send source-remove IQ.\\n        let sdpDiffer = new SDPDiffer(newSDP, oldSDP);\\n        const remove = $iq({ to: this.remoteJid,\\n            type: 'set' })\\n            .c('jingle', {\\n                xmlns: 'urn:xmpp:jingle:1',\\n                action: 'source-remove',\\n                initiator: this.initiatorJid,\\n                sid: this.sid\\n            }\\n            );\\n        const removedAnySSRCs = sdpDiffer.toJingle(remove);\\n\\n        if (removedAnySSRCs) {\\n            logger.info('Sending source-remove', remove.tree());\\n            this.connection.sendIQ(\\n                remove, null,\\n                this.newJingleErrorHandler(remove), IQ_TIMEOUT);\\n        } else {\\n            logger.log('removal not necessary');\\n        }\\n\\n        // send source-add IQ.\\n        sdpDiffer = new SDPDiffer(oldSDP, newSDP);\\n        const add = $iq({ to: this.remoteJid,\\n            type: 'set' })\\n            .c('jingle', {\\n                xmlns: 'urn:xmpp:jingle:1',\\n                action: 'source-add',\\n                initiator: this.initiatorJid,\\n                sid: this.sid\\n            }\\n            );\\n\\n        const containsNewSSRCs = sdpDiffer.toJingle(add);\\n\\n        if (containsNewSSRCs) {\\n            logger.info('Sending source-add', add.tree());\\n            this.connection.sendIQ(\\n                add, null, this.newJingleErrorHandler(add), IQ_TIMEOUT);\\n        } else {\\n            logger.log('addition not necessary');\\n        }\\n    }\\n\\n    /**\\n     * Method returns function(errorResponse) which is a callback to be passed\\n     * to Strophe connection.sendIQ method. An 'error' structure is created that\\n     * is passed as 1st argument to given <tt>failureCb</tt>. The format of this\\n     * structure is as follows:\\n     * {\\n     *  code: {XMPP error response code}\\n     *  reason: {the name of XMPP error reason element or 'timeout' if the\\n      *          request has timed out within <tt>IQ_TIMEOUT</tt> milliseconds}\\n     *  source: {request.tree() that provides original request}\\n     *  session: {this JingleSessionPC.toString()}\\n     * }\\n     * @param request Strophe IQ instance which is the request to be dumped into\\n     *        the error structure\\n     * @param failureCb function(error) called when error response was returned\\n     *        or when a timeout has occurred.\\n     * @returns {function(this:JingleSessionPC)}\\n     */\\n    newJingleErrorHandler(request, failureCb) {\\n        return errResponse => {\\n\\n            const error = {};\\n\\n            // Get XMPP error code and condition(reason)\\n            const errorElSel = $(errResponse).find('error');\\n\\n            if (errorElSel.length) {\\n                error.code = errorElSel.attr('code');\\n                const errorReasonSel = $(errResponse).find('error :first');\\n\\n                if (errorReasonSel.length) {\\n                    error.reason = errorReasonSel[0].tagName;\\n                }\\n\\n                const errorMsgSel = errorElSel.find('>text');\\n\\n                if (errorMsgSel.length) {\\n                    error.msg = errorMsgSel.text();\\n                }\\n            }\\n\\n            if (!errResponse) {\\n                error.reason = 'timeout';\\n            }\\n\\n            error.session = this.toString();\\n\\n            if (failureCb) {\\n                failureCb(error);\\n            } else if (this.state === JingleSessionState.ENDED\\n                        && error.reason === 'item-not-found') {\\n                // When remote peer decides to terminate the session, but it\\n                // still have few messages on the queue for processing,\\n                // it will first send us 'session-terminate' (we enter ENDED)\\n                // and then follow with 'item-not-found' for the queued requests\\n                // We don't want to have that logged on error level.\\n                logger.debug(`Jingle error: ${JSON.stringify(error)}`);\\n            } else {\\n                GlobalOnErrorHandler.callErrorHandler(\\n                    new Error(\\n                        `Jingle error: ${JSON.stringify(error)}`));\\n            }\\n        };\\n    }\\n\\n    /**\\n     *\\n     * @param error\\n     * @private\\n     */\\n    _onJingleFatalError(error) {\\n        if (this.room) {\\n            this.room.eventEmitter.emit(\\n                XMPPEvents.CONFERENCE_SETUP_FAILED, this, error);\\n            this.room.eventEmitter.emit(\\n                XMPPEvents.JINGLE_FATAL_ERROR, this, error);\\n        }\\n    }\\n\\n    /**\\n     * Returns the ice connection state for the peer connection.\\n     * @returns the ice connection state for the peer connection.\\n     */\\n    getIceConnectionState() {\\n        return this.peerconnection.iceConnectionState;\\n    }\\n\\n    /**\\n     * Closes the peerconnection.\\n     */\\n    close() {\\n        this.closed = true;\\n\\n        // The signaling layer will remove it's listeners\\n        this.signalingLayer.setChatRoom(null);\\n\\n        // do not try to close if already closed.\\n        this.peerconnection\\n            && ((this.peerconnection.signalingState\\n                    && this.peerconnection.signalingState !== 'closed')\\n                || (this.peerconnection.connectionState\\n                    && this.peerconnection.connectionState !== 'closed'))\\n            && this.peerconnection.close();\\n    }\\n\\n    /**\\n     * Converts to string with minor summary.\\n     * @return {string}\\n     */\\n    toString() {\\n        return `JingleSessionPC[p2p=${this.isP2P},`\\n                    + `initiator=${this.isInitiator},sid=${this.sid}]`;\\n    }\\n\\n    /**\\n     * If the A/B test for suspend video is disabled according to the room's\\n     * configuration, returns undefined. Otherwise returns a boolean which\\n     * indicates whether the suspend video option should be enabled or disabled.\\n     * @param {JingleSessionPCOptions} options - The config options.\\n     */\\n    _abtestSuspendVideoEnabled({ abTesting }) {\\n        if (!abTesting || !abTesting.enableSuspendVideoTest) {\\n            return;\\n        }\\n\\n        // We want the two participants in a P2P call to agree on the value of\\n        // the \\\"suspend\\\" option. We use the JID of the initiator, because it is\\n        // both randomly selected and agreed upon by both participants.\\n        const jid = this._getInitiatorJid();\\n\\n        return integerHash(jid) % 2 === 0;\\n    }\\n}\\n\",\"/**\\n * The events for the media devices.\\n */\\n\\n/**\\n * Indicates that the list of available media devices has been changed. The\\n * event provides the following parameters to its listeners:\\n *\\n * @param {MediaDeviceInfo[]} devices - array of MediaDeviceInfo or\\n *  MediaDeviceInfo-like objects that are currently connected.\\n *  @see https://developer.mozilla.org/en-US/docs/Web/API/MediaDeviceInfo\\n */\\nexport const DEVICE_LIST_CHANGED = 'mediaDevices.devicechange';\\n\\n/**\\n * Indicates that the environment is currently showing permission prompt to\\n * access camera and/or microphone. The event provides the following\\n * parameters to its listeners:\\n *\\n * @param {'chrome'|'opera'|'firefox'|'safari'|'nwjs'\\n *  |'react-native'|'android'} environmentType - type of browser or\\n *  other execution environment.\\n */\\nexport const PERMISSION_PROMPT_IS_SHOWN\\n    = 'mediaDevices.permissionPromptIsShown';\\n\",\"/*!\\n * Bowser - a browser detector\\n * https://github.com/ded/bowser\\n * MIT License | (c) Dustin Diaz 2015\\n */\\n\\n!function (root, name, definition) {\\n  if (typeof module != 'undefined' && module.exports) module.exports = definition()\\n  else if (typeof define == 'function' && define.amd) define(name, definition)\\n  else root[name] = definition()\\n}(this, 'bowser', function () {\\n  /**\\n    * See useragents.js for examples of navigator.userAgent\\n    */\\n\\n  var t = true\\n\\n  function detect(ua) {\\n\\n    function getFirstMatch(regex) {\\n      var match = ua.match(regex);\\n      return (match && match.length > 1 && match[1]) || '';\\n    }\\n\\n    function getSecondMatch(regex) {\\n      var match = ua.match(regex);\\n      return (match && match.length > 1 && match[2]) || '';\\n    }\\n\\n    var iosdevice = getFirstMatch(/(ipod|iphone|ipad)/i).toLowerCase()\\n      , likeAndroid = /like android/i.test(ua)\\n      , android = !likeAndroid && /android/i.test(ua)\\n      , nexusMobile = /nexus\\\\s*[0-6]\\\\s*/i.test(ua)\\n      , nexusTablet = !nexusMobile && /nexus\\\\s*[0-9]+/i.test(ua)\\n      , chromeos = /CrOS/.test(ua)\\n      , silk = /silk/i.test(ua)\\n      , sailfish = /sailfish/i.test(ua)\\n      , tizen = /tizen/i.test(ua)\\n      , webos = /(web|hpw)os/i.test(ua)\\n      , windowsphone = /windows phone/i.test(ua)\\n      , samsungBrowser = /SamsungBrowser/i.test(ua)\\n      , windows = !windowsphone && /windows/i.test(ua)\\n      , mac = !iosdevice && !silk && /macintosh/i.test(ua)\\n      , linux = !android && !sailfish && !tizen && !webos && /linux/i.test(ua)\\n      , edgeVersion = getSecondMatch(/edg([ea]|ios)\\\\/(\\\\d+(\\\\.\\\\d+)?)/i)\\n      , versionIdentifier = getFirstMatch(/version\\\\/(\\\\d+(\\\\.\\\\d+)?)/i)\\n      , tablet = /tablet/i.test(ua) && !/tablet pc/i.test(ua)\\n      , mobile = !tablet && /[^-]mobi/i.test(ua)\\n      , xbox = /xbox/i.test(ua)\\n      , result\\n\\n    if (/opera/i.test(ua)) {\\n      //  an old Opera\\n      result = {\\n        name: 'Opera'\\n      , opera: t\\n      , version: versionIdentifier || getFirstMatch(/(?:opera|opr|opios)[\\\\s\\\\/](\\\\d+(\\\\.\\\\d+)?)/i)\\n      }\\n    } else if (/opr\\\\/|opios/i.test(ua)) {\\n      // a new Opera\\n      result = {\\n        name: 'Opera'\\n        , opera: t\\n        , version: getFirstMatch(/(?:opr|opios)[\\\\s\\\\/](\\\\d+(\\\\.\\\\d+)?)/i) || versionIdentifier\\n      }\\n    }\\n    else if (/SamsungBrowser/i.test(ua)) {\\n      result = {\\n        name: 'Samsung Internet for Android'\\n        , samsungBrowser: t\\n        , version: versionIdentifier || getFirstMatch(/(?:SamsungBrowser)[\\\\s\\\\/](\\\\d+(\\\\.\\\\d+)?)/i)\\n      }\\n    }\\n    else if (/coast/i.test(ua)) {\\n      result = {\\n        name: 'Opera Coast'\\n        , coast: t\\n        , version: versionIdentifier || getFirstMatch(/(?:coast)[\\\\s\\\\/](\\\\d+(\\\\.\\\\d+)?)/i)\\n      }\\n    }\\n    else if (/yabrowser/i.test(ua)) {\\n      result = {\\n        name: 'Yandex Browser'\\n      , yandexbrowser: t\\n      , version: versionIdentifier || getFirstMatch(/(?:yabrowser)[\\\\s\\\\/](\\\\d+(\\\\.\\\\d+)?)/i)\\n      }\\n    }\\n    else if (/ucbrowser/i.test(ua)) {\\n      result = {\\n          name: 'UC Browser'\\n        , ucbrowser: t\\n        , version: getFirstMatch(/(?:ucbrowser)[\\\\s\\\\/](\\\\d+(?:\\\\.\\\\d+)+)/i)\\n      }\\n    }\\n    else if (/mxios/i.test(ua)) {\\n      result = {\\n        name: 'Maxthon'\\n        , maxthon: t\\n        , version: getFirstMatch(/(?:mxios)[\\\\s\\\\/](\\\\d+(?:\\\\.\\\\d+)+)/i)\\n      }\\n    }\\n    else if (/epiphany/i.test(ua)) {\\n      result = {\\n        name: 'Epiphany'\\n        , epiphany: t\\n        , version: getFirstMatch(/(?:epiphany)[\\\\s\\\\/](\\\\d+(?:\\\\.\\\\d+)+)/i)\\n      }\\n    }\\n    else if (/puffin/i.test(ua)) {\\n      result = {\\n        name: 'Puffin'\\n        , puffin: t\\n        , version: getFirstMatch(/(?:puffin)[\\\\s\\\\/](\\\\d+(?:\\\\.\\\\d+)?)/i)\\n      }\\n    }\\n    else if (/sleipnir/i.test(ua)) {\\n      result = {\\n        name: 'Sleipnir'\\n        , sleipnir: t\\n        , version: getFirstMatch(/(?:sleipnir)[\\\\s\\\\/](\\\\d+(?:\\\\.\\\\d+)+)/i)\\n      }\\n    }\\n    else if (/k-meleon/i.test(ua)) {\\n      result = {\\n        name: 'K-Meleon'\\n        , kMeleon: t\\n        , version: getFirstMatch(/(?:k-meleon)[\\\\s\\\\/](\\\\d+(?:\\\\.\\\\d+)+)/i)\\n      }\\n    }\\n    else if (windowsphone) {\\n      result = {\\n        name: 'Windows Phone'\\n      , osname: 'Windows Phone'\\n      , windowsphone: t\\n      }\\n      if (edgeVersion) {\\n        result.msedge = t\\n        result.version = edgeVersion\\n      }\\n      else {\\n        result.msie = t\\n        result.version = getFirstMatch(/iemobile\\\\/(\\\\d+(\\\\.\\\\d+)?)/i)\\n      }\\n    }\\n    else if (/msie|trident/i.test(ua)) {\\n      result = {\\n        name: 'Internet Explorer'\\n      , msie: t\\n      , version: getFirstMatch(/(?:msie |rv:)(\\\\d+(\\\\.\\\\d+)?)/i)\\n      }\\n    } else if (chromeos) {\\n      result = {\\n        name: 'Chrome'\\n      , osname: 'Chrome OS'\\n      , chromeos: t\\n      , chromeBook: t\\n      , chrome: t\\n      , version: getFirstMatch(/(?:chrome|crios|crmo)\\\\/(\\\\d+(\\\\.\\\\d+)?)/i)\\n      }\\n    } else if (/edg([ea]|ios)/i.test(ua)) {\\n      result = {\\n        name: 'Microsoft Edge'\\n      , msedge: t\\n      , version: edgeVersion\\n      }\\n    }\\n    else if (/vivaldi/i.test(ua)) {\\n      result = {\\n        name: 'Vivaldi'\\n        , vivaldi: t\\n        , version: getFirstMatch(/vivaldi\\\\/(\\\\d+(\\\\.\\\\d+)?)/i) || versionIdentifier\\n      }\\n    }\\n    else if (sailfish) {\\n      result = {\\n        name: 'Sailfish'\\n      , osname: 'Sailfish OS'\\n      , sailfish: t\\n      , version: getFirstMatch(/sailfish\\\\s?browser\\\\/(\\\\d+(\\\\.\\\\d+)?)/i)\\n      }\\n    }\\n    else if (/seamonkey\\\\//i.test(ua)) {\\n      result = {\\n        name: 'SeaMonkey'\\n      , seamonkey: t\\n      , version: getFirstMatch(/seamonkey\\\\/(\\\\d+(\\\\.\\\\d+)?)/i)\\n      }\\n    }\\n    else if (/firefox|iceweasel|fxios/i.test(ua)) {\\n      result = {\\n        name: 'Firefox'\\n      , firefox: t\\n      , version: getFirstMatch(/(?:firefox|iceweasel|fxios)[ \\\\/](\\\\d+(\\\\.\\\\d+)?)/i)\\n      }\\n      if (/\\\\((mobile|tablet);[^\\\\)]*rv:[\\\\d\\\\.]+\\\\)/i.test(ua)) {\\n        result.firefoxos = t\\n        result.osname = 'Firefox OS'\\n      }\\n    }\\n    else if (silk) {\\n      result =  {\\n        name: 'Amazon Silk'\\n      , silk: t\\n      , version : getFirstMatch(/silk\\\\/(\\\\d+(\\\\.\\\\d+)?)/i)\\n      }\\n    }\\n    else if (/phantom/i.test(ua)) {\\n      result = {\\n        name: 'PhantomJS'\\n      , phantom: t\\n      , version: getFirstMatch(/phantomjs\\\\/(\\\\d+(\\\\.\\\\d+)?)/i)\\n      }\\n    }\\n    else if (/slimerjs/i.test(ua)) {\\n      result = {\\n        name: 'SlimerJS'\\n        , slimer: t\\n        , version: getFirstMatch(/slimerjs\\\\/(\\\\d+(\\\\.\\\\d+)?)/i)\\n      }\\n    }\\n    else if (/blackberry|\\\\bbb\\\\d+/i.test(ua) || /rim\\\\stablet/i.test(ua)) {\\n      result = {\\n        name: 'BlackBerry'\\n      , osname: 'BlackBerry OS'\\n      , blackberry: t\\n      , version: versionIdentifier || getFirstMatch(/blackberry[\\\\d]+\\\\/(\\\\d+(\\\\.\\\\d+)?)/i)\\n      }\\n    }\\n    else if (webos) {\\n      result = {\\n        name: 'WebOS'\\n      , osname: 'WebOS'\\n      , webos: t\\n      , version: versionIdentifier || getFirstMatch(/w(?:eb)?osbrowser\\\\/(\\\\d+(\\\\.\\\\d+)?)/i)\\n      };\\n      /touchpad\\\\//i.test(ua) && (result.touchpad = t)\\n    }\\n    else if (/bada/i.test(ua)) {\\n      result = {\\n        name: 'Bada'\\n      , osname: 'Bada'\\n      , bada: t\\n      , version: getFirstMatch(/dolfin\\\\/(\\\\d+(\\\\.\\\\d+)?)/i)\\n      };\\n    }\\n    else if (tizen) {\\n      result = {\\n        name: 'Tizen'\\n      , osname: 'Tizen'\\n      , tizen: t\\n      , version: getFirstMatch(/(?:tizen\\\\s?)?browser\\\\/(\\\\d+(\\\\.\\\\d+)?)/i) || versionIdentifier\\n      };\\n    }\\n    else if (/qupzilla/i.test(ua)) {\\n      result = {\\n        name: 'QupZilla'\\n        , qupzilla: t\\n        , version: getFirstMatch(/(?:qupzilla)[\\\\s\\\\/](\\\\d+(?:\\\\.\\\\d+)+)/i) || versionIdentifier\\n      }\\n    }\\n    else if (/chromium/i.test(ua)) {\\n      result = {\\n        name: 'Chromium'\\n        , chromium: t\\n        , version: getFirstMatch(/(?:chromium)[\\\\s\\\\/](\\\\d+(?:\\\\.\\\\d+)?)/i) || versionIdentifier\\n      }\\n    }\\n    else if (/chrome|crios|crmo/i.test(ua)) {\\n      result = {\\n        name: 'Chrome'\\n        , chrome: t\\n        , version: getFirstMatch(/(?:chrome|crios|crmo)\\\\/(\\\\d+(\\\\.\\\\d+)?)/i)\\n      }\\n    }\\n    else if (android) {\\n      result = {\\n        name: 'Android'\\n        , version: versionIdentifier\\n      }\\n    }\\n    else if (/safari|applewebkit/i.test(ua)) {\\n      result = {\\n        name: 'Safari'\\n      , safari: t\\n      }\\n      if (versionIdentifier) {\\n        result.version = versionIdentifier\\n      }\\n    }\\n    else if (iosdevice) {\\n      result = {\\n        name : iosdevice == 'iphone' ? 'iPhone' : iosdevice == 'ipad' ? 'iPad' : 'iPod'\\n      }\\n      // WTF: version is not part of user agent in web apps\\n      if (versionIdentifier) {\\n        result.version = versionIdentifier\\n      }\\n    }\\n    else if(/googlebot/i.test(ua)) {\\n      result = {\\n        name: 'Googlebot'\\n      , googlebot: t\\n      , version: getFirstMatch(/googlebot\\\\/(\\\\d+(\\\\.\\\\d+))/i) || versionIdentifier\\n      }\\n    }\\n    else {\\n      result = {\\n        name: getFirstMatch(/^(.*)\\\\/(.*) /),\\n        version: getSecondMatch(/^(.*)\\\\/(.*) /)\\n     };\\n   }\\n\\n    // set webkit or gecko flag for browsers based on these engines\\n    if (!result.msedge && /(apple)?webkit/i.test(ua)) {\\n      if (/(apple)?webkit\\\\/537\\\\.36/i.test(ua)) {\\n        result.name = result.name || \\\"Blink\\\"\\n        result.blink = t\\n      } else {\\n        result.name = result.name || \\\"Webkit\\\"\\n        result.webkit = t\\n      }\\n      if (!result.version && versionIdentifier) {\\n        result.version = versionIdentifier\\n      }\\n    } else if (!result.opera && /gecko\\\\//i.test(ua)) {\\n      result.name = result.name || \\\"Gecko\\\"\\n      result.gecko = t\\n      result.version = result.version || getFirstMatch(/gecko\\\\/(\\\\d+(\\\\.\\\\d+)?)/i)\\n    }\\n\\n    // set OS flags for platforms that have multiple browsers\\n    if (!result.windowsphone && (android || result.silk)) {\\n      result.android = t\\n      result.osname = 'Android'\\n    } else if (!result.windowsphone && iosdevice) {\\n      result[iosdevice] = t\\n      result.ios = t\\n      result.osname = 'iOS'\\n    } else if (mac) {\\n      result.mac = t\\n      result.osname = 'macOS'\\n    } else if (xbox) {\\n      result.xbox = t\\n      result.osname = 'Xbox'\\n    } else if (windows) {\\n      result.windows = t\\n      result.osname = 'Windows'\\n    } else if (linux) {\\n      result.linux = t\\n      result.osname = 'Linux'\\n    }\\n\\n    function getWindowsVersion (s) {\\n      switch (s) {\\n        case 'NT': return 'NT'\\n        case 'XP': return 'XP'\\n        case 'NT 5.0': return '2000'\\n        case 'NT 5.1': return 'XP'\\n        case 'NT 5.2': return '2003'\\n        case 'NT 6.0': return 'Vista'\\n        case 'NT 6.1': return '7'\\n        case 'NT 6.2': return '8'\\n        case 'NT 6.3': return '8.1'\\n        case 'NT 10.0': return '10'\\n        default: return undefined\\n      }\\n    }\\n\\n    // OS version extraction\\n    var osVersion = '';\\n    if (result.windows) {\\n      osVersion = getWindowsVersion(getFirstMatch(/Windows ((NT|XP)( \\\\d\\\\d?.\\\\d)?)/i))\\n    } else if (result.windowsphone) {\\n      osVersion = getFirstMatch(/windows phone (?:os)?\\\\s?(\\\\d+(\\\\.\\\\d+)*)/i);\\n    } else if (result.mac) {\\n      osVersion = getFirstMatch(/Mac OS X (\\\\d+([_\\\\.\\\\s]\\\\d+)*)/i);\\n      osVersion = osVersion.replace(/[_\\\\s]/g, '.');\\n    } else if (iosdevice) {\\n      osVersion = getFirstMatch(/os (\\\\d+([_\\\\s]\\\\d+)*) like mac os x/i);\\n      osVersion = osVersion.replace(/[_\\\\s]/g, '.');\\n    } else if (android) {\\n      osVersion = getFirstMatch(/android[ \\\\/-](\\\\d+(\\\\.\\\\d+)*)/i);\\n    } else if (result.webos) {\\n      osVersion = getFirstMatch(/(?:web|hpw)os\\\\/(\\\\d+(\\\\.\\\\d+)*)/i);\\n    } else if (result.blackberry) {\\n      osVersion = getFirstMatch(/rim\\\\stablet\\\\sos\\\\s(\\\\d+(\\\\.\\\\d+)*)/i);\\n    } else if (result.bada) {\\n      osVersion = getFirstMatch(/bada\\\\/(\\\\d+(\\\\.\\\\d+)*)/i);\\n    } else if (result.tizen) {\\n      osVersion = getFirstMatch(/tizen[\\\\/\\\\s](\\\\d+(\\\\.\\\\d+)*)/i);\\n    }\\n    if (osVersion) {\\n      result.osversion = osVersion;\\n    }\\n\\n    // device type extraction\\n    var osMajorVersion = !result.windows && osVersion.split('.')[0];\\n    if (\\n         tablet\\n      || nexusTablet\\n      || iosdevice == 'ipad'\\n      || (android && (osMajorVersion == 3 || (osMajorVersion >= 4 && !mobile)))\\n      || result.silk\\n    ) {\\n      result.tablet = t\\n    } else if (\\n         mobile\\n      || iosdevice == 'iphone'\\n      || iosdevice == 'ipod'\\n      || android\\n      || nexusMobile\\n      || result.blackberry\\n      || result.webos\\n      || result.bada\\n    ) {\\n      result.mobile = t\\n    }\\n\\n    // Graded Browser Support\\n    // http://developer.yahoo.com/yui/articles/gbs\\n    if (result.msedge ||\\n        (result.msie && result.version >= 10) ||\\n        (result.yandexbrowser && result.version >= 15) ||\\n\\t\\t    (result.vivaldi && result.version >= 1.0) ||\\n        (result.chrome && result.version >= 20) ||\\n        (result.samsungBrowser && result.version >= 4) ||\\n        (result.firefox && result.version >= 20.0) ||\\n        (result.safari && result.version >= 6) ||\\n        (result.opera && result.version >= 10.0) ||\\n        (result.ios && result.osversion && result.osversion.split(\\\".\\\")[0] >= 6) ||\\n        (result.blackberry && result.version >= 10.1)\\n        || (result.chromium && result.version >= 20)\\n        ) {\\n      result.a = t;\\n    }\\n    else if ((result.msie && result.version < 10) ||\\n        (result.chrome && result.version < 20) ||\\n        (result.firefox && result.version < 20.0) ||\\n        (result.safari && result.version < 6) ||\\n        (result.opera && result.version < 10.0) ||\\n        (result.ios && result.osversion && result.osversion.split(\\\".\\\")[0] < 6)\\n        || (result.chromium && result.version < 20)\\n        ) {\\n      result.c = t\\n    } else result.x = t\\n\\n    return result\\n  }\\n\\n  var bowser = detect(typeof navigator !== 'undefined' ? navigator.userAgent || '' : '')\\n\\n  bowser.test = function (browserList) {\\n    for (var i = 0; i < browserList.length; ++i) {\\n      var browserItem = browserList[i];\\n      if (typeof browserItem=== 'string') {\\n        if (browserItem in bowser) {\\n          return true;\\n        }\\n      }\\n    }\\n    return false;\\n  }\\n\\n  /**\\n   * Get version precisions count\\n   *\\n   * @example\\n   *   getVersionPrecision(\\\"1.10.3\\\") // 3\\n   *\\n   * @param  {string} version\\n   * @return {number}\\n   */\\n  function getVersionPrecision(version) {\\n    return version.split(\\\".\\\").length;\\n  }\\n\\n  /**\\n   * Array::map polyfill\\n   *\\n   * @param  {Array} arr\\n   * @param  {Function} iterator\\n   * @return {Array}\\n   */\\n  function map(arr, iterator) {\\n    var result = [], i;\\n    if (Array.prototype.map) {\\n      return Array.prototype.map.call(arr, iterator);\\n    }\\n    for (i = 0; i < arr.length; i++) {\\n      result.push(iterator(arr[i]));\\n    }\\n    return result;\\n  }\\n\\n  /**\\n   * Calculate browser version weight\\n   *\\n   * @example\\n   *   compareVersions(['1.10.2.1',  '1.8.2.1.90'])    // 1\\n   *   compareVersions(['1.010.2.1', '1.09.2.1.90']);  // 1\\n   *   compareVersions(['1.10.2.1',  '1.10.2.1']);     // 0\\n   *   compareVersions(['1.10.2.1',  '1.0800.2']);     // -1\\n   *\\n   * @param  {Array<String>} versions versions to compare\\n   * @return {Number} comparison result\\n   */\\n  function compareVersions(versions) {\\n    // 1) get common precision for both versions, for example for \\\"10.0\\\" and \\\"9\\\" it should be 2\\n    var precision = Math.max(getVersionPrecision(versions[0]), getVersionPrecision(versions[1]));\\n    var chunks = map(versions, function (version) {\\n      var delta = precision - getVersionPrecision(version);\\n\\n      // 2) \\\"9\\\" -> \\\"9.0\\\" (for precision = 2)\\n      version = version + new Array(delta + 1).join(\\\".0\\\");\\n\\n      // 3) \\\"9.0\\\" -> [\\\"000000000\\\"\\\", \\\"000000009\\\"]\\n      return map(version.split(\\\".\\\"), function (chunk) {\\n        return new Array(20 - chunk.length).join(\\\"0\\\") + chunk;\\n      }).reverse();\\n    });\\n\\n    // iterate in reverse order by reversed chunks array\\n    while (--precision >= 0) {\\n      // 4) compare: \\\"000000009\\\" > \\\"000000010\\\" = false (but \\\"9\\\" > \\\"10\\\" = true)\\n      if (chunks[0][precision] > chunks[1][precision]) {\\n        return 1;\\n      }\\n      else if (chunks[0][precision] === chunks[1][precision]) {\\n        if (precision === 0) {\\n          // all version chunks are same\\n          return 0;\\n        }\\n      }\\n      else {\\n        return -1;\\n      }\\n    }\\n  }\\n\\n  /**\\n   * Check if browser is unsupported\\n   *\\n   * @example\\n   *   bowser.isUnsupportedBrowser({\\n   *     msie: \\\"10\\\",\\n   *     firefox: \\\"23\\\",\\n   *     chrome: \\\"29\\\",\\n   *     safari: \\\"5.1\\\",\\n   *     opera: \\\"16\\\",\\n   *     phantom: \\\"534\\\"\\n   *   });\\n   *\\n   * @param  {Object}  minVersions map of minimal version to browser\\n   * @param  {Boolean} [strictMode = false] flag to return false if browser wasn't found in map\\n   * @param  {String}  [ua] user agent string\\n   * @return {Boolean}\\n   */\\n  function isUnsupportedBrowser(minVersions, strictMode, ua) {\\n    var _bowser = bowser;\\n\\n    // make strictMode param optional with ua param usage\\n    if (typeof strictMode === 'string') {\\n      ua = strictMode;\\n      strictMode = void(0);\\n    }\\n\\n    if (strictMode === void(0)) {\\n      strictMode = false;\\n    }\\n    if (ua) {\\n      _bowser = detect(ua);\\n    }\\n\\n    var version = \\\"\\\" + _bowser.version;\\n    for (var browser in minVersions) {\\n      if (minVersions.hasOwnProperty(browser)) {\\n        if (_bowser[browser]) {\\n          if (typeof minVersions[browser] !== 'string') {\\n            throw new Error('Browser version in the minVersion map should be a string: ' + browser + ': ' + String(minVersions));\\n          }\\n\\n          // browser version and min supported version.\\n          return compareVersions([version, minVersions[browser]]) < 0;\\n        }\\n      }\\n    }\\n\\n    return strictMode; // not found\\n  }\\n\\n  /**\\n   * Check if browser is supported\\n   *\\n   * @param  {Object} minVersions map of minimal version to browser\\n   * @param  {Boolean} [strictMode = false] flag to return false if browser wasn't found in map\\n   * @param  {String}  [ua] user agent string\\n   * @return {Boolean}\\n   */\\n  function check(minVersions, strictMode, ua) {\\n    return !isUnsupportedBrowser(minVersions, strictMode, ua);\\n  }\\n\\n  bowser.isUnsupportedBrowser = isUnsupportedBrowser;\\n  bowser.compareVersions = compareVersions;\\n  bowser.check = check;\\n\\n  /*\\n   * Set our detect method to the main bowser object so we can\\n   * reuse it to test other user agents.\\n   * This is needed to implement future tests.\\n   */\\n  bowser._detect = detect;\\n\\n  /*\\n   * Set our detect public method to the main bowser object\\n   * This is needed to implement bowser in server side\\n   */\\n  bowser.detect = detect;\\n  return bowser\\n});\\n\",\"import SDPUtil from './SDPUtil';\\n\\n// this could be useful in Array.prototype.\\n/**\\n *\\n * @param array1\\n * @param array2\\n */\\nfunction arrayEquals(array1, array2) {\\n    // if the other array is a falsy value, return\\n    if (!array2) {\\n        return false;\\n    }\\n\\n    // compare lengths - can save a lot of time\\n    if (array1.length !== array2.length) {\\n        return false;\\n    }\\n\\n    for (let i = 0, l = array1.length; i < l; i++) {\\n        // Check if we have nested arrays\\n        if (array1[i] instanceof Array && array2[i] instanceof Array) {\\n            // recurse into the nested arrays\\n            if (!array1[i].equals(array2[i])) {\\n                return false;\\n            }\\n        } else if (array1[i] !== array2[i]) {\\n            // Warning - two different object instances will never be\\n            // equal: {x:20} != {x:20}\\n            return false;\\n        }\\n    }\\n\\n    return true;\\n}\\n\\n/**\\n *\\n * @param mySDP\\n * @param otherSDP\\n */\\nexport default function SDPDiffer(mySDP, otherSDP) {\\n    this.mySDP = mySDP;\\n    this.otherSDP = otherSDP;\\n    if (!mySDP) {\\n        throw new Error('\\\"mySDP\\\" is undefined!');\\n    } else if (!otherSDP) {\\n        throw new Error('\\\"otherSDP\\\" is undefined!');\\n    }\\n}\\n\\n/**\\n * Returns map of MediaChannel that contains media contained in\\n * 'mySDP', but not contained in 'otherSdp'. Mapped by channel idx.\\n */\\nSDPDiffer.prototype.getNewMedia = function() {\\n\\n    const myMedias = this.mySDP.getMediaSsrcMap();\\n    const othersMedias = this.otherSDP.getMediaSsrcMap();\\n    const newMedia = {};\\n\\n    Object.keys(othersMedias).forEach(othersMediaIdx => {\\n        const myMedia = myMedias[othersMediaIdx];\\n        const othersMedia = othersMedias[othersMediaIdx];\\n\\n        if (!myMedia && othersMedia) {\\n            // Add whole channel\\n            newMedia[othersMediaIdx] = othersMedia;\\n\\n            return;\\n        }\\n\\n        // Look for new ssrcs across the channel\\n        Object.keys(othersMedia.ssrcs).forEach(ssrc => {\\n            if (Object.keys(myMedia.ssrcs).indexOf(ssrc) === -1) {\\n                // Allocate channel if we've found ssrc that doesn't exist in\\n                // our channel\\n                if (!newMedia[othersMediaIdx]) {\\n                    newMedia[othersMediaIdx] = {\\n                        mediaindex: othersMedia.mediaindex,\\n                        mid: othersMedia.mid,\\n                        ssrcs: {},\\n                        ssrcGroups: []\\n                    };\\n                }\\n                newMedia[othersMediaIdx].ssrcs[ssrc] = othersMedia.ssrcs[ssrc];\\n            } else if (othersMedia.ssrcs[ssrc].lines\\n                        && myMedia.ssrcs[ssrc].lines) {\\n                // we want to detect just changes in adding/removing msid\\n                const myContainMsid = myMedia.ssrcs[ssrc].lines.find(\\n                    line => line.indexOf('msid') !== -1) !== undefined;\\n                const newContainMsid = othersMedia.ssrcs[ssrc].lines.find(\\n                    line => line.indexOf('msid') !== -1) !== undefined;\\n\\n                if (myContainMsid !== newContainMsid) {\\n                    if (!newMedia[othersMediaIdx]) {\\n                        newMedia[othersMediaIdx] = {\\n                            mediaindex: othersMedia.mediaindex,\\n                            mid: othersMedia.mid,\\n                            ssrcs: {},\\n                            ssrcGroups: []\\n                        };\\n                    }\\n                    newMedia[othersMediaIdx].ssrcs[ssrc]\\n                        = othersMedia.ssrcs[ssrc];\\n                }\\n            }\\n        });\\n\\n        // Look for new ssrc groups across the channels\\n        othersMedia.ssrcGroups.forEach(otherSsrcGroup => {\\n\\n            // try to match the other ssrc-group with an ssrc-group of ours\\n            let matched = false;\\n\\n            for (let i = 0; i < myMedia.ssrcGroups.length; i++) {\\n                const mySsrcGroup = myMedia.ssrcGroups[i];\\n\\n                if (otherSsrcGroup.semantics === mySsrcGroup.semantics\\n                    && arrayEquals(otherSsrcGroup.ssrcs, mySsrcGroup.ssrcs)) {\\n\\n                    matched = true;\\n                    break;\\n                }\\n            }\\n\\n            if (!matched) {\\n                // Allocate channel if we've found an ssrc-group that doesn't\\n                // exist in our channel\\n\\n                if (!newMedia[othersMediaIdx]) {\\n                    newMedia[othersMediaIdx] = {\\n                        mediaindex: othersMedia.mediaindex,\\n                        mid: othersMedia.mid,\\n                        ssrcs: {},\\n                        ssrcGroups: []\\n                    };\\n                }\\n                newMedia[othersMediaIdx].ssrcGroups.push(otherSsrcGroup);\\n            }\\n        });\\n    });\\n\\n    return newMedia;\\n};\\n\\n/**\\n * TODO: document!\\n */\\nSDPDiffer.prototype.toJingle = function(modify) {\\n    const sdpMediaSsrcs = this.getNewMedia();\\n\\n    let modified = false;\\n\\n    Object.keys(sdpMediaSsrcs).forEach(mediaindex => {\\n        modified = true;\\n        const media = sdpMediaSsrcs[mediaindex];\\n\\n        modify.c('content', { name: media.mid });\\n\\n        modify.c('description',\\n            { xmlns: 'urn:xmpp:jingle:apps:rtp:1',\\n                media: media.mid });\\n\\n        // FIXME: not completely sure this operates on blocks and / or handles\\n        // different ssrcs correctly\\n        // generate sources from lines\\n        Object.keys(media.ssrcs).forEach(ssrcNum => {\\n            const mediaSsrc = media.ssrcs[ssrcNum];\\n\\n            modify.c('source', { xmlns: 'urn:xmpp:jingle:apps:rtp:ssma:0' });\\n            modify.attrs({ ssrc: mediaSsrc.ssrc });\\n\\n            // iterate over ssrc lines\\n            mediaSsrc.lines.forEach(line => {\\n                const idx = line.indexOf(' ');\\n                const kv = line.substr(idx + 1);\\n\\n                modify.c('parameter');\\n                if (kv.indexOf(':') === -1) {\\n                    modify.attrs({ name: kv });\\n                } else {\\n                    const nv = kv.split(':', 2);\\n                    const name = nv[0];\\n                    const value = SDPUtil.filterSpecialChars(nv[1]);\\n\\n                    modify.attrs({ name });\\n                    modify.attrs({ value });\\n                }\\n                modify.up(); // end of parameter\\n            });\\n            modify.up(); // end of source\\n        });\\n\\n        // generate source groups from lines\\n        media.ssrcGroups.forEach(ssrcGroup => {\\n            if (ssrcGroup.ssrcs.length) {\\n\\n                modify.c('ssrc-group', {\\n                    semantics: ssrcGroup.semantics,\\n                    xmlns: 'urn:xmpp:jingle:apps:rtp:ssma:0'\\n                });\\n\\n                ssrcGroup.ssrcs.forEach(ssrc => {\\n                    modify.c('source', { ssrc })\\n                        .up(); // end of source\\n                });\\n                modify.up(); // end of ssrc-group\\n            }\\n        });\\n\\n        modify.up(); // end of description\\n        modify.up(); // end of content\\n    });\\n\\n    return modified;\\n};\\n\",\"// shim for using process in browser\\nvar process = module.exports = {};\\n\\n// cached from whatever global is present so that test runners that stub it\\n// don't break things.  But we need to wrap it in a try catch in case it is\\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\\n// function because try/catches deoptimize in certain engines.\\n\\nvar cachedSetTimeout;\\nvar cachedClearTimeout;\\n\\nfunction defaultSetTimout() {\\n    throw new Error('setTimeout has not been defined');\\n}\\nfunction defaultClearTimeout () {\\n    throw new Error('clearTimeout has not been defined');\\n}\\n(function () {\\n    try {\\n        if (typeof setTimeout === 'function') {\\n            cachedSetTimeout = setTimeout;\\n        } else {\\n            cachedSetTimeout = defaultSetTimout;\\n        }\\n    } catch (e) {\\n        cachedSetTimeout = defaultSetTimout;\\n    }\\n    try {\\n        if (typeof clearTimeout === 'function') {\\n            cachedClearTimeout = clearTimeout;\\n        } else {\\n            cachedClearTimeout = defaultClearTimeout;\\n        }\\n    } catch (e) {\\n        cachedClearTimeout = defaultClearTimeout;\\n    }\\n} ())\\nfunction runTimeout(fun) {\\n    if (cachedSetTimeout === setTimeout) {\\n        //normal enviroments in sane situations\\n        return setTimeout(fun, 0);\\n    }\\n    // if setTimeout wasn't available but was latter defined\\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\\n        cachedSetTimeout = setTimeout;\\n        return setTimeout(fun, 0);\\n    }\\n    try {\\n        // when when somebody has screwed with setTimeout but no I.E. maddness\\n        return cachedSetTimeout(fun, 0);\\n    } catch(e){\\n        try {\\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\\n            return cachedSetTimeout.call(null, fun, 0);\\n        } catch(e){\\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\\n            return cachedSetTimeout.call(this, fun, 0);\\n        }\\n    }\\n\\n\\n}\\nfunction runClearTimeout(marker) {\\n    if (cachedClearTimeout === clearTimeout) {\\n        //normal enviroments in sane situations\\n        return clearTimeout(marker);\\n    }\\n    // if clearTimeout wasn't available but was latter defined\\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\\n        cachedClearTimeout = clearTimeout;\\n        return clearTimeout(marker);\\n    }\\n    try {\\n        // when when somebody has screwed with setTimeout but no I.E. maddness\\n        return cachedClearTimeout(marker);\\n    } catch (e){\\n        try {\\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\\n            return cachedClearTimeout.call(null, marker);\\n        } catch (e){\\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\\n            return cachedClearTimeout.call(this, marker);\\n        }\\n    }\\n\\n\\n\\n}\\nvar queue = [];\\nvar draining = false;\\nvar currentQueue;\\nvar queueIndex = -1;\\n\\nfunction cleanUpNextTick() {\\n    if (!draining || !currentQueue) {\\n        return;\\n    }\\n    draining = false;\\n    if (currentQueue.length) {\\n        queue = currentQueue.concat(queue);\\n    } else {\\n        queueIndex = -1;\\n    }\\n    if (queue.length) {\\n        drainQueue();\\n    }\\n}\\n\\nfunction drainQueue() {\\n    if (draining) {\\n        return;\\n    }\\n    var timeout = runTimeout(cleanUpNextTick);\\n    draining = true;\\n\\n    var len = queue.length;\\n    while(len) {\\n        currentQueue = queue;\\n        queue = [];\\n        while (++queueIndex < len) {\\n            if (currentQueue) {\\n                currentQueue[queueIndex].run();\\n            }\\n        }\\n        queueIndex = -1;\\n        len = queue.length;\\n    }\\n    currentQueue = null;\\n    draining = false;\\n    runClearTimeout(timeout);\\n}\\n\\nprocess.nextTick = function (fun) {\\n    var args = new Array(arguments.length - 1);\\n    if (arguments.length > 1) {\\n        for (var i = 1; i < arguments.length; i++) {\\n            args[i - 1] = arguments[i];\\n        }\\n    }\\n    queue.push(new Item(fun, args));\\n    if (queue.length === 1 && !draining) {\\n        runTimeout(drainQueue);\\n    }\\n};\\n\\n// v8 likes predictible objects\\nfunction Item(fun, array) {\\n    this.fun = fun;\\n    this.array = array;\\n}\\nItem.prototype.run = function () {\\n    this.fun.apply(null, this.array);\\n};\\nprocess.title = 'browser';\\nprocess.browser = true;\\nprocess.env = {};\\nprocess.argv = [];\\nprocess.version = ''; // empty string to avoid regexp issues\\nprocess.versions = {};\\n\\nfunction noop() {}\\n\\nprocess.on = noop;\\nprocess.addListener = noop;\\nprocess.once = noop;\\nprocess.off = noop;\\nprocess.removeListener = noop;\\nprocess.removeAllListeners = noop;\\nprocess.emit = noop;\\nprocess.prependListener = noop;\\nprocess.prependOnceListener = noop;\\n\\nprocess.listeners = function (name) { return [] }\\n\\nprocess.binding = function (name) {\\n    throw new Error('process.binding is not supported');\\n};\\n\\nprocess.cwd = function () { return '/' };\\nprocess.chdir = function (dir) {\\n    throw new Error('process.chdir is not supported');\\n};\\nprocess.umask = function() { return 0; };\\n\",\"/**\\n * Indicates that the end-to-end round-trip-time for a participant has changed.\\n */\\nexport const E2E_RTT_CHANGED = 'e2eping.e2e_rtt_changed';\\n\",\"/**\\n * Provides statistics for the local stream.\\n */\\n\\n/**\\n * Size of the webaudio analyzer buffer.\\n * @type {number}\\n */\\nconst WEBAUDIO_ANALYZER_FFT_SIZE = 2048;\\n\\n/**\\n * Value of the webaudio analyzer smoothing time parameter.\\n * @type {number}\\n */\\nconst WEBAUDIO_ANALYZER_SMOOTING_TIME = 0.8;\\n\\nwindow.AudioContext = window.AudioContext || window.webkitAudioContext;\\n\\nlet context = null;\\n\\nif (window.AudioContext) {\\n    context = new AudioContext();\\n\\n    // XXX Not all browsers define a suspend method on AudioContext. As the\\n    // invocation is at the (ES6 module) global execution level, it breaks the\\n    // loading of the lib-jitsi-meet library in such browsers and, consequently,\\n    // the loading of the very Web app that uses the lib-jitsi-meet library. For\\n    // example, Google Chrome 40 on Android does not define the method but we\\n    // still want to be able to load the lib-jitsi-meet library there and\\n    // display a page which notifies the user that the Web app is not supported\\n    // there.\\n    context.suspend && context.suspend();\\n}\\n\\n/**\\n * Converts time domain data array to audio level.\\n * @param samples the time domain data array.\\n * @returns {number} the audio level\\n */\\nfunction timeDomainDataToAudioLevel(samples) {\\n\\n    let maxVolume = 0;\\n\\n    const length = samples.length;\\n\\n    for (let i = 0; i < length; i++) {\\n        if (maxVolume < samples[i]) {\\n            maxVolume = samples[i];\\n        }\\n    }\\n\\n    return parseFloat(((maxVolume - 127) / 128).toFixed(3));\\n}\\n\\n/**\\n * Animates audio level change\\n * @param newLevel the new audio level\\n * @param lastLevel the last audio level\\n * @returns {Number} the audio level to be set\\n */\\nfunction animateLevel(newLevel, lastLevel) {\\n    let value = 0;\\n    const diff = lastLevel - newLevel;\\n\\n    if (diff > 0.2) {\\n        value = lastLevel - 0.2;\\n    } else if (diff < -0.4) {\\n        value = lastLevel + 0.4;\\n    } else {\\n        value = newLevel;\\n    }\\n\\n    return parseFloat(value.toFixed(3));\\n}\\n\\n\\n/**\\n * <tt>LocalStatsCollector</tt> calculates statistics for the local stream.\\n *\\n * @param stream the local stream\\n * @param interval stats refresh interval given in ms.\\n * @param callback function that receives the audio levels.\\n * @constructor\\n */\\nexport default function LocalStatsCollector(stream, interval, callback) {\\n    this.stream = stream;\\n    this.intervalId = null;\\n    this.intervalMilis = interval;\\n    this.audioLevel = 0;\\n    this.callback = callback;\\n}\\n\\n/**\\n * Starts the collecting the statistics.\\n */\\nLocalStatsCollector.prototype.start = function() {\\n    if (!LocalStatsCollector.isLocalStatsSupported()) {\\n        return;\\n    }\\n    context.resume();\\n    const analyser = context.createAnalyser();\\n\\n    analyser.smoothingTimeConstant = WEBAUDIO_ANALYZER_SMOOTING_TIME;\\n    analyser.fftSize = WEBAUDIO_ANALYZER_FFT_SIZE;\\n\\n    const source = context.createMediaStreamSource(this.stream);\\n\\n    source.connect(analyser);\\n\\n\\n    const self = this;\\n\\n    this.intervalId = setInterval(\\n        () => {\\n            const array = new Uint8Array(analyser.frequencyBinCount);\\n\\n            analyser.getByteTimeDomainData(array);\\n            const audioLevel = timeDomainDataToAudioLevel(array);\\n\\n            if (audioLevel !== self.audioLevel) {\\n                self.audioLevel = animateLevel(audioLevel, self.audioLevel);\\n                self.callback(self.audioLevel);\\n            }\\n        },\\n        this.intervalMilis\\n    );\\n};\\n\\n/**\\n * Stops collecting the statistics.\\n */\\nLocalStatsCollector.prototype.stop = function() {\\n    if (this.intervalId) {\\n        clearInterval(this.intervalId);\\n        this.intervalId = null;\\n    }\\n};\\n\\n/**\\n * Checks if the environment has the necessary conditions to support\\n * collecting stats from local streams.\\n *\\n * @returns {boolean}\\n */\\nLocalStatsCollector.isLocalStatsSupported = function() {\\n    return Boolean(context);\\n};\\n\",\"const currentExecutingScript = require('current-executing-script');\\n\\n/* eslint-disable max-params */\\n\\n/**\\n * Implements utility functions which facilitate the dealing with scripts such\\n * as the download and execution of a JavaScript file.\\n */\\nconst ScriptUtil = {\\n    /**\\n     * Loads a script from a specific source.\\n     *\\n     * @param src the source from the which the script is to be (down)loaded\\n     * @param async true to asynchronously load the script or false to\\n     * synchronously load the script\\n     * @param prepend true to schedule the loading of the script as soon as\\n     * possible or false to schedule the loading of the script at the end of the\\n     * scripts known at the time\\n     * @param relativeURL whether we need load the library from url relative\\n     * to the url that lib-jitsi-meet was loaded. Useful when sourcing the\\n     * library from different location than the app that is using it\\n     * @param loadCallback on load callback function\\n     * @param errorCallback callback to be called on error loading the script\\n     */\\n    loadScript(\\n            src,\\n            async,\\n            prepend,\\n            relativeURL,\\n            loadCallback,\\n            errorCallback) {\\n        const d = document;\\n        const tagName = 'script';\\n        const script = d.createElement(tagName);\\n        const referenceNode = d.getElementsByTagName(tagName)[0];\\n\\n        script.async = async;\\n\\n        if (relativeURL) {\\n            // finds the src url of the current loaded script\\n            // and use it as base of the src supplied argument\\n            const scriptEl = currentExecutingScript();\\n\\n            if (scriptEl) {\\n                const scriptSrc = scriptEl.src;\\n                const baseScriptSrc\\n                    = scriptSrc.substring(0, scriptSrc.lastIndexOf('/') + 1);\\n\\n                if (scriptSrc && baseScriptSrc) {\\n                    // eslint-disable-next-line no-param-reassign\\n                    src = baseScriptSrc + src;\\n                }\\n            }\\n        }\\n\\n        if (loadCallback) {\\n            script.onload = loadCallback;\\n        }\\n        if (errorCallback) {\\n            script.onerror = errorCallback;\\n        }\\n\\n        script.src = src;\\n        if (prepend) {\\n            referenceNode.parentNode.insertBefore(script, referenceNode);\\n        } else {\\n            referenceNode.parentNode.appendChild(script);\\n        }\\n    }\\n};\\n\\n/* eslint-enable max-params */\\n\\nmodule.exports = ScriptUtil;\\n\",\"/**\\n * The transciption is on.\\n *\\n * @type {String}\\n */\\nexport const ON = 'on';\\n\\n/**\\n * The transciption is off.\\n *\\n * @type {String}\\n */\\nexport const OFF = 'off';\\n\",\"/* global __filename, module */\\nimport EventEmitter from 'events';\\nimport { getLogger } from 'jitsi-meet-logger';\\nimport * as JitsiTrackEvents from '../../JitsiTrackEvents';\\nimport * as MediaType from '../../service/RTC/MediaType';\\nimport RTCUtils from './RTCUtils';\\n\\nconst logger = getLogger(__filename);\\n\\n/**\\n * Maps our handler types to MediaStreamTrack properties.\\n */\\nconst trackHandler2Prop = {\\n    'track_mute': 'onmute', // Not supported on FF\\n    'track_unmute': 'onunmute',\\n    'track_ended': 'onended'\\n};\\n\\n/**\\n * Adds onended/oninactive handler to a MediaStream.\\n * @param mediaStream a MediaStream to attach onended/oninactive handler\\n * @param handler the handler\\n */\\nfunction addMediaStreamInactiveHandler(mediaStream, handler) {\\n    mediaStream.oninactive = handler;\\n}\\n\\n/**\\n * Represents a single media track (either audio or video).\\n */\\nexport default class JitsiTrack extends EventEmitter {\\n    /* eslint-disable max-params */\\n    /**\\n     * Represents a single media track (either audio or video).\\n     * @constructor\\n     * @param conference the rtc instance\\n     * @param stream the WebRTC MediaStream instance\\n     * @param track the WebRTC MediaStreamTrack instance, must be part of\\n     * the given <tt>stream</tt>.\\n     * @param streamInactiveHandler the function that will handle\\n     *        onended/oninactive events of the stream.\\n     * @param trackMediaType the media type of the JitsiTrack\\n     * @param videoType the VideoType for this track if any\\n     */\\n    constructor(\\n            conference,\\n            stream,\\n            track,\\n            streamInactiveHandler,\\n            trackMediaType,\\n            videoType) {\\n        super();\\n\\n        // aliases for addListener/removeListener\\n        this.addEventListener = this.addListener;\\n        this.removeEventListener = this.off = this.removeListener;\\n\\n        /**\\n         * Array with the HTML elements that are displaying the streams.\\n         * @type {Array}\\n         */\\n        this.containers = [];\\n        this.conference = conference;\\n        this.audioLevel = -1;\\n        this.type = trackMediaType;\\n        this.track = track;\\n        this.videoType = videoType;\\n        this.handlers = new Map();\\n\\n        /**\\n         * Indicates whether this JitsiTrack has been disposed. If true, this\\n         * JitsiTrack is to be considered unusable and operations involving it\\n         * are to fail (e.g. {@link JitsiConference#addTrack(JitsiTrack)},\\n         * {@link JitsiConference#removeTrack(JitsiTrack)}).\\n         * @type {boolean}\\n         */\\n        this.disposed = false;\\n\\n        /**\\n         * The inactive handler which will be triggered when the underlying\\n         * <tt>MediaStream</tt> ends.\\n         *\\n         * @private\\n         * @type {Function}\\n         */\\n        this._streamInactiveHandler = streamInactiveHandler;\\n\\n        this._setStream(stream);\\n    }\\n\\n    /* eslint-enable max-params */\\n\\n    /**\\n     * Sets handler to the WebRTC MediaStream or MediaStreamTrack object\\n     * depending on the passed type.\\n     * @param {string} type the type of the handler that is going to be set\\n     * @param {Function} handler the handler.\\n     */\\n    _setHandler(type, handler) {\\n        if (!trackHandler2Prop.hasOwnProperty(type)) {\\n            logger.error(`Invalid handler type ${type}`);\\n\\n            return;\\n        }\\n        if (handler) {\\n            this.handlers.set(type, handler);\\n        } else {\\n            this.handlers.delete(type);\\n        }\\n\\n        if (this.stream) {\\n            // FIXME Why only video tracks?\\n            for (const track of this.stream.getVideoTracks()) {\\n                track[trackHandler2Prop[type]] = handler;\\n            }\\n        }\\n    }\\n\\n    /**\\n     * Unregisters all event handlers bound to the underlying media stream/track\\n     * @private\\n     */\\n    _unregisterHandlers() {\\n        if (!this.stream) {\\n            logger.warn(\\n                `${this}: unable to unregister handlers - no stream object`);\\n\\n            return;\\n        }\\n\\n        for (const type of this.handlers.keys()) {\\n            // FIXME Why only video tracks?\\n            for (const videoTrack of this.stream.getVideoTracks()) {\\n                videoTrack[trackHandler2Prop[type]] = undefined;\\n            }\\n        }\\n        if (this._streamInactiveHandler) {\\n            addMediaStreamInactiveHandler(this.stream, undefined);\\n        }\\n    }\\n\\n    /**\\n     * Sets the stream property of JitsiTrack object and sets all stored\\n     * handlers to it.\\n     *\\n     * @param {MediaStream} stream the new stream.\\n     * @protected\\n     */\\n    _setStream(stream) {\\n        if (this.stream === stream) {\\n            return;\\n        }\\n\\n        this.stream = stream;\\n\\n        // TODO Practically, that's like the opposite of _unregisterHandlers\\n        // i.e. may be abstracted into a function/method called\\n        // _registerHandlers for clarity and easing the maintenance of the two\\n        // pieces of source code.\\n        if (this.stream) {\\n            for (const type of this.handlers.keys()) {\\n                this._setHandler(type, this.handlers.get(type));\\n            }\\n            if (this._streamInactiveHandler) {\\n                addMediaStreamInactiveHandler(\\n                    this.stream, this._streamInactiveHandler);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * Returns the type (audio or video) of this track.\\n     */\\n    getType() {\\n        return this.type;\\n    }\\n\\n    /**\\n     * Check if this is an audio track.\\n     */\\n    isAudioTrack() {\\n        return this.getType() === MediaType.AUDIO;\\n    }\\n\\n    /**\\n     * Checks whether the underlying WebRTC <tt>MediaStreamTrack</tt> is muted\\n     * according to it's 'muted' field status.\\n     * @return {boolean} <tt>true</tt> if the underlying\\n     * <tt>MediaStreamTrack</tt> is muted or <tt>false</tt> otherwise.\\n     */\\n    isWebRTCTrackMuted() {\\n        return this.track && this.track.muted;\\n    }\\n\\n    /**\\n     * Check if this is a video track.\\n     */\\n    isVideoTrack() {\\n        return this.getType() === MediaType.VIDEO;\\n    }\\n\\n    /**\\n     * Checks whether this is a local track.\\n     * @abstract\\n     * @return {boolean} 'true' if it's a local track or 'false' otherwise.\\n     */\\n    isLocal() {\\n        throw new Error('Not implemented by subclass');\\n    }\\n\\n    /**\\n     * Returns the WebRTC MediaStream instance.\\n     */\\n    getOriginalStream() {\\n        return this.stream;\\n    }\\n\\n    /**\\n     * Returns the ID of the underlying WebRTC Media Stream(if any)\\n     * @returns {String|null}\\n     */\\n    getStreamId() {\\n        return this.stream ? this.stream.id : null;\\n    }\\n\\n    /**\\n     * Return the underlying WebRTC MediaStreamTrack\\n     * @returns {MediaStreamTrack}\\n     */\\n    getTrack() {\\n        return this.track;\\n    }\\n\\n    /**\\n     * Returns the ID of the underlying WebRTC MediaStreamTrack(if any)\\n     * @returns {String|null}\\n     */\\n    getTrackId() {\\n        return this.track ? this.track.id : null;\\n    }\\n\\n    /**\\n     * Return meaningful usage label for this track depending on it's media and\\n     * eventual video type.\\n     * @returns {string}\\n     */\\n    getUsageLabel() {\\n        if (this.isAudioTrack()) {\\n            return 'mic';\\n        }\\n\\n        return this.videoType ? this.videoType : 'default';\\n    }\\n\\n    /**\\n     * Eventually will trigger RTCEvents.TRACK_ATTACHED event.\\n     * @param container the video/audio container to which this stream is\\n     *        attached and for which event will be fired.\\n     * @private\\n     */\\n    _maybeFireTrackAttached(container) {\\n        if (this.conference && container) {\\n            this.conference._onTrackAttach(this, container);\\n        }\\n    }\\n\\n    /**\\n     * Attaches the MediaStream of this track to an HTML container.\\n     * Adds the container to the list of containers that are displaying the\\n     * track.\\n     *\\n     * @param container the HTML container which can be 'video' or 'audio'\\n     * element.\\n     *\\n     * @returns {void}\\n     */\\n    attach(container) {\\n        if (this.stream) {\\n            RTCUtils.attachMediaStream(container, this.stream);\\n        }\\n        this.containers.push(container);\\n        this._maybeFireTrackAttached(container);\\n        this._attachTTFMTracker(container);\\n    }\\n\\n    /**\\n     * Removes this JitsiTrack from the passed HTML container.\\n     *\\n     * @param container the HTML container to detach from this JitsiTrack. If\\n     * <tt>null</tt> or <tt>undefined</tt>, all containers are removed. A\\n     * container can be a 'video', 'audio' or 'object' HTML element instance to\\n     * which this JitsiTrack is currently attached.\\n     */\\n    detach(container) {\\n        for (let cs = this.containers, i = cs.length - 1; i >= 0; --i) {\\n            const c = cs[i];\\n\\n            if (!container) {\\n                RTCUtils.attachMediaStream(c, null);\\n            }\\n            if (!container || c === container) {\\n                cs.splice(i, 1);\\n            }\\n        }\\n\\n        if (container) {\\n            RTCUtils.attachMediaStream(container, null);\\n        }\\n    }\\n\\n    /**\\n     * Attach time to first media tracker only if there is conference and only\\n     * for the first element.\\n     *\\n     * @param {HTMLElement} container the HTML container which can be 'video' or\\n     * 'audio' element.\\n     * @private\\n     */\\n    _attachTTFMTracker(container) { // eslint-disable-line no-unused-vars\\n        // Should be defined by the classes that are extending JitsiTrack\\n    }\\n\\n    /**\\n     * Removes attached event listeners.\\n     *\\n     * @returns {Promise}\\n     */\\n    dispose() {\\n        this.removeAllListeners();\\n\\n        this.disposed = true;\\n\\n        return Promise.resolve();\\n    }\\n\\n    /**\\n     * Returns true if this is a video track and the source of the video is a\\n     * screen capture as opposed to a camera.\\n     */\\n    isScreenSharing() {\\n        // FIXME: Should be fixed or removed.\\n    }\\n\\n    /**\\n     * Returns id of the track.\\n     * @returns {string|null} id of the track or null if this is fake track.\\n     */\\n    getId() {\\n        if (this.stream) {\\n            return RTCUtils.getStreamID(this.stream);\\n        }\\n\\n        return null;\\n    }\\n\\n    /**\\n     * Checks whether the MediaStream is active/not ended.\\n     * When there is no check for active we don't have information and so\\n     * will return that stream is active (in case of FF).\\n     * @returns {boolean} whether MediaStream is active.\\n     */\\n    isActive() {\\n        if (typeof this.stream.active !== 'undefined') {\\n            return this.stream.active;\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * Sets the audio level for the stream\\n     * @param {number} audioLevel value between 0 and 1\\n     * @param {TraceablePeerConnection} [tpc] the peerconnection instance which\\n     * is source for the audio level. It can be <tt>undefined</tt> for\\n     * a local track if the audio level was measured outside of the\\n     * peerconnection (see /modules/statistics/LocalStatsCollector.js).\\n     */\\n    setAudioLevel(audioLevel, tpc) {\\n        if (this.audioLevel !== audioLevel) {\\n            this.audioLevel = audioLevel;\\n            this.emit(\\n                JitsiTrackEvents.TRACK_AUDIO_LEVEL_CHANGED,\\n                audioLevel,\\n                tpc);\\n        }\\n    }\\n\\n    /**\\n     * Returns the msid of the stream attached to the JitsiTrack object or null\\n     * if no stream is attached.\\n     */\\n    getMSID() {\\n        const streamId = this.getStreamId();\\n        const trackId = this.getTrackId();\\n\\n        return streamId && trackId ? `${streamId} ${trackId}` : null;\\n    }\\n\\n    /**\\n     * Sets new audio output device for track's DOM elements. Video tracks are\\n     * ignored.\\n     * @param {string} audioOutputDeviceId - id of 'audiooutput' device from\\n     *      navigator.mediaDevices.enumerateDevices(), '' for default device\\n     * @emits JitsiTrackEvents.TRACK_AUDIO_OUTPUT_CHANGED\\n     * @returns {Promise}\\n     */\\n    setAudioOutput(audioOutputDeviceId) {\\n        if (!RTCUtils.isDeviceChangeAvailable('output')) {\\n            return Promise.reject(\\n                new Error('Audio output device change is not supported'));\\n        }\\n\\n        // All audio communication is done through audio tracks, so ignore\\n        // changing audio output for video tracks at all.\\n        if (this.isVideoTrack()) {\\n            return Promise.resolve();\\n        }\\n\\n        return (\\n            Promise.all(\\n                this.containers.map(\\n                    element =>\\n                        element.setSinkId(audioOutputDeviceId)\\n                            .catch(error => {\\n                                logger.warn(\\n                                    'Failed to change audio output device on'\\n                                        + ' element. Default or previously set'\\n                                        + ' audio output device will be used.',\\n                                    element,\\n                                    error);\\n                                throw error;\\n                            }))\\n            )\\n                .then(() => {\\n                    this.emit(\\n                        JitsiTrackEvents.TRACK_AUDIO_OUTPUT_CHANGED,\\n                        audioOutputDeviceId);\\n                }));\\n    }\\n}\\n\",\"import sdpTransform from 'sdp-transform';\\n\\n/**\\n * RTCSessionDescription implementation.\\n */\\nexport default class RTCSessionDescription {\\n    /**\\n     * RTCSessionDescription constructor.\\n     * @param {Object} [data]\\n     * @param {String} [data.type] - 'offer' / 'answer'.\\n     * @param {String} [data.sdp] - SDP string.\\n     * @param {Object} [data._sdpObject] - SDP object generated by the\\n     * sdp-transform library.\\n     */\\n    constructor(data) {\\n        // @type {String}\\n        this._sdp = null;\\n\\n        // @type {Object}\\n        this._sdpObject = null;\\n\\n        // @type {String}\\n        this._type = null;\\n\\n        switch (data.type) {\\n        case 'offer':\\n            break;\\n        case 'answer':\\n            break;\\n        default:\\n            throw new TypeError(`invalid type \\\"${data.type}\\\"`);\\n        }\\n\\n        this._type = data.type;\\n\\n        if (typeof data.sdp === 'string') {\\n            this._sdp = data.sdp;\\n            try {\\n                this._sdpObject = sdpTransform.parse(data.sdp);\\n            } catch (error) {\\n                throw new Error(`invalid sdp: ${error}`);\\n            }\\n        } else if (typeof data._sdpObject === 'object') {\\n            this._sdpObject = data._sdpObject;\\n            try {\\n                this._sdp = sdpTransform.write(data._sdpObject);\\n            } catch (error) {\\n                throw new Error(`invalid sdp object: ${error}`);\\n            }\\n        } else {\\n            throw new TypeError('invalid sdp or _sdpObject');\\n        }\\n    }\\n\\n    /**\\n     * Get sdp field.\\n     * @return {String}\\n     */\\n    get sdp() {\\n        return this._sdp;\\n    }\\n\\n    /**\\n     * Set sdp field.\\n     * NOTE: This is not allowed per spec, but lib-jitsi-meet uses it.\\n     * @param {String} sdp\\n     */\\n    set sdp(sdp) {\\n        try {\\n            this._sdpObject = sdpTransform.parse(sdp);\\n        } catch (error) {\\n            throw new Error(`invalid sdp: ${error}`);\\n        }\\n\\n        this._sdp = sdp;\\n    }\\n\\n    /**\\n     * Gets the internal sdp object.\\n     * @return {Object}\\n     * @private\\n     */\\n    get sdpObject() {\\n        return this._sdpObject;\\n    }\\n\\n    /**\\n     * Get type field.\\n     * @return {String}\\n     */\\n    get type() {\\n        return this._type;\\n    }\\n\\n    /**\\n     * Returns an object with type and sdp fields.\\n     * @return {Object}\\n     */\\n    toJSON() {\\n        return {\\n            sdp: this._sdp,\\n            type: this._type\\n        };\\n    }\\n}\\n\",\"\\n\\n/**\\n * The method will increase the given number by 1. If the given counter is equal\\n * or greater to {@link Number.MAX_SAFE_INTEGER} then it will be rolled back to\\n * 1.\\n * @param {number} number - An integer counter value to be incremented.\\n * @return {number} the next counter value increased by 1 (see the description\\n * above for exception).\\n */\\nexport function safeCounterIncrement(number) {\\n    let nextValue = number;\\n\\n    if (number >= Number.MAX_SAFE_INTEGER) {\\n        nextValue = 0;\\n    }\\n\\n    return nextValue + 1;\\n}\\n\",\"/**\\n * A model for keeping track of each user's total\\n * time as a dominant speaker. The model also\\n * keeps track of the user's last known name\\n * in case the user has left the meeting,\\n * which is also tracked.\\n */\\nclass SpeakerStats {\\n    /**\\n     * Initializes a new SpeakerStats instance.\\n     *\\n     * @constructor\\n     * @param {string} userId - The id of the user being tracked.\\n     * @param {string} displayName - The name of the user being tracked.\\n     * @param {boolean} isLocalStats - True if the stats model tracks\\n     * the local user.\\n     * @returns {void}\\n     */\\n    constructor(userId, displayName, isLocalStats) {\\n        this._userId = userId;\\n        this.setDisplayName(displayName);\\n        this._isLocalStats = isLocalStats || false;\\n        this.setDominantSpeaker(false);\\n        this.totalDominantSpeakerTime = 0;\\n        this._dominantSpeakerStart = 0;\\n        this._hasLeft = false;\\n    }\\n\\n    /**\\n     * Get the user id being tracked.\\n     *\\n     * @returns {string} The user id.\\n     */\\n    getUserId() {\\n        return this._userId;\\n    }\\n\\n    /**\\n     * Get the name of the user being tracked.\\n     *\\n     * @returns {string} The user name.\\n     */\\n    getDisplayName() {\\n        return this.displayName;\\n    }\\n\\n    /**\\n     * Updates the last known name of the user being tracked.\\n     *\\n     * @param {string} - The user name.\\n     * @returns {void}\\n     */\\n    setDisplayName(newName) {\\n        this.displayName = newName;\\n    }\\n\\n    /**\\n     * Returns true if the stats are tracking the local user.\\n     *\\n     * @returns {boolean}\\n     */\\n    isLocalStats() {\\n        return this._isLocalStats;\\n    }\\n\\n    /**\\n     * Returns true if the tracked user is currently a dominant speaker.\\n     *\\n     * @returns {boolean}\\n     */\\n    isDominantSpeaker() {\\n        return this._dominantSpeakerStart > 0;\\n    }\\n\\n    /**\\n     * Returns true if the tracked user is currently a dominant speaker.\\n     *\\n     * @param {boolean} - If true, the user will being accumulating time\\n     * as dominant speaker. If false, the user will not accumulate time\\n     * and will record any time accumulated since starting as dominant speaker.\\n     * @returns {void}\\n     */\\n    setDominantSpeaker(isNowDominantSpeaker) {\\n        if (!this.isDominantSpeaker() && isNowDominantSpeaker) {\\n            this._dominantSpeakerStart = Date.now();\\n        } else if (this.isDominantSpeaker() && !isNowDominantSpeaker) {\\n            const now = Date.now();\\n            const timeElapsed = now - this._dominantSpeakerStart;\\n\\n            this.totalDominantSpeakerTime += timeElapsed;\\n            this._dominantSpeakerStart = 0;\\n        }\\n    }\\n\\n    /**\\n     * Get how long the tracked user has been dominant speaker.\\n     *\\n     * @returns {number} - The speaker time in milliseconds.\\n     */\\n    getTotalDominantSpeakerTime() {\\n        let total = this.totalDominantSpeakerTime;\\n\\n        if (this.isDominantSpeaker()) {\\n            total += Date.now() - this._dominantSpeakerStart;\\n        }\\n\\n        return total;\\n    }\\n\\n    /**\\n     * Get whether or not the user is still in the meeting.\\n     *\\n     * @returns {boolean} True if the user is no longer in the meeting.\\n     */\\n    hasLeft() {\\n        return this._hasLeft;\\n    }\\n\\n    /**\\n     * Set the user as having left the meeting.\\n     *\\n     * @returns {void}\\n     */\\n    markAsHasLeft() {\\n        this._hasLeft = true;\\n        this.setDominantSpeaker(false);\\n    }\\n}\\n\\nmodule.exports = SpeakerStats;\\n\",\"const AuthenticationEvents = {\\n    /**\\n     * Event callback arguments:\\n     * function(authenticationEnabled, userIdentity)\\n     * authenticationEnabled - indicates whether authentication has been enabled\\n     *                         in this session\\n     * userIdentity - if user has been logged in then it contains user name. If\\n     *                contains 'null' or 'undefined' then user is not logged in.\\n     */\\n    IDENTITY_UPDATED: 'authentication.identity_updated'\\n};\\n\\nmodule.exports = AuthenticationEvents;\\n\",\"/* global __filename, Promise */\\n\\nimport { getLogger } from 'jitsi-meet-logger';\\nimport JitsiTrack from './JitsiTrack';\\nimport JitsiTrackError from '../../JitsiTrackError';\\nimport {\\n    TRACK_IS_DISPOSED,\\n    TRACK_NO_STREAM_FOUND\\n} from '../../JitsiTrackErrors';\\nimport {\\n    LOCAL_TRACK_STOPPED,\\n    NO_DATA_FROM_SOURCE,\\n    TRACK_MUTE_CHANGED\\n} from '../../JitsiTrackEvents';\\nimport browser from '../browser';\\nimport RTCUtils from './RTCUtils';\\nimport CameraFacingMode from '../../service/RTC/CameraFacingMode';\\nimport * as MediaType from '../../service/RTC/MediaType';\\nimport RTCEvents from '../../service/RTC/RTCEvents';\\nimport VideoType from '../../service/RTC/VideoType';\\nimport {\\n    TRACK_UNMUTED,\\n    createNoDataFromSourceEvent\\n} from '../../service/statistics/AnalyticsEvents';\\nimport Statistics from '../statistics/statistics';\\n\\nconst logger = getLogger(__filename);\\n\\n/**\\n * Represents a single media track(either audio or video).\\n * One <tt>JitsiLocalTrack</tt> corresponds to one WebRTC MediaStreamTrack.\\n */\\nexport default class JitsiLocalTrack extends JitsiTrack {\\n    /**\\n     * Constructs new JitsiLocalTrack instance.\\n     *\\n     * @constructor\\n     * @param {Object} trackInfo\\n     * @param {number} trackInfo.rtcId the ID assigned by the RTC module\\n     * @param trackInfo.stream WebRTC MediaStream, parent of the track\\n     * @param trackInfo.track underlying WebRTC MediaStreamTrack for new\\n     * JitsiRemoteTrack\\n     * @param trackInfo.mediaType the MediaType of the JitsiRemoteTrack\\n     * @param trackInfo.videoType the VideoType of the JitsiRemoteTrack\\n     * @param trackInfo.resolution the video resolution if it's a video track\\n     * @param trackInfo.deviceId the ID of the local device for this track\\n     * @param trackInfo.facingMode the camera facing mode used in getUserMedia\\n     * call\\n     * @param {sourceId} trackInfo.sourceId - The id of the desktop sharing\\n     * source. NOTE: defined for desktop sharing tracks only.\\n     */\\n    constructor({\\n        deviceId,\\n        facingMode,\\n        mediaType,\\n        resolution,\\n        rtcId,\\n        sourceId,\\n        sourceType,\\n        stream,\\n        track,\\n        videoType\\n    }) {\\n        super(\\n            /* conference */ null,\\n            stream,\\n            track,\\n            /* streamInactiveHandler */ () => this.emit(LOCAL_TRACK_STOPPED),\\n            mediaType,\\n            videoType);\\n\\n        /**\\n         * The ID assigned by the RTC module on instance creation.\\n         *\\n         * @type {number}\\n         */\\n        this.rtcId = rtcId;\\n        this.sourceId = sourceId;\\n        this.sourceType = sourceType;\\n\\n        if (browser.usesNewGumFlow()) {\\n            // Get the resolution from the track itself because it cannot be\\n            // certain which resolution webrtc has fallen back to using.\\n            this.resolution = track.getSettings().height;\\n\\n            // Cache the constraints of the track in case of any this track\\n            // model needs to call getUserMedia again, such as when unmuting.\\n            this._constraints = track.getConstraints();\\n        } else {\\n            // FIXME Currently, Firefox is ignoring our constraints about\\n            // resolutions so we do not store it, to avoid wrong reporting of\\n            // local track resolution.\\n            this.resolution = browser.isFirefox() ? null : resolution;\\n        }\\n\\n        this.deviceId = deviceId;\\n\\n        /**\\n         * The <tt>Promise</tt> which represents the progress of a previously\\n         * queued/scheduled {@link _setMuted} (from the point of view of\\n         * {@link _queueSetMuted}).\\n         *\\n         * @private\\n         * @type {Promise}\\n         */\\n        this._prevSetMuted = Promise.resolve();\\n\\n        /**\\n         * The facing mode of the camera from which this JitsiLocalTrack\\n         * instance was obtained.\\n         *\\n         * @private\\n         * @type {CameraFacingMode|undefined}\\n         */\\n        this._facingMode = facingMode;\\n\\n        // Currently there is no way to know the MediaStreamTrack ended due to\\n        // to device disconnect in Firefox through e.g. \\\"readyState\\\" property.\\n        // Instead we will compare current track's label with device labels from\\n        // enumerateDevices() list.\\n        this._trackEnded = false;\\n\\n        /**\\n         * Indicates whether data has been sent or not.\\n         */\\n        this._hasSentData = false;\\n\\n        /**\\n         * Used only for detection of audio problems. We want to check only once\\n         * whether the track is sending data ot not. This flag is set to false\\n         * after the check.\\n         */\\n        this._testDataSent = true;\\n\\n        // Currently there is no way to determine with what device track was\\n        // created (until getConstraints() support), however we can associate\\n        // tracks with real devices obtained from enumerateDevices() call as\\n        // soon as it's called.\\n        this._realDeviceId = this.deviceId === '' ? undefined : this.deviceId;\\n\\n        /**\\n         * On mute event we are waiting for 3s to check if the stream is going\\n         * to be still muted before firing the event for camera issue detected\\n         * (NO_DATA_FROM_SOURCE).\\n         */\\n        this._noDataFromSourceTimeout = null;\\n\\n        this._onDeviceListChanged = devices => {\\n            this._setRealDeviceIdFromDeviceList(devices);\\n\\n            // Mark track as ended for those browsers that do not support\\n            // \\\"readyState\\\" property. We do not touch tracks created with\\n            // default device ID \\\"\\\".\\n            if (typeof this.getTrack().readyState === 'undefined'\\n                    && typeof this._realDeviceId !== 'undefined'\\n                    && !devices.find(d => d.deviceId === this._realDeviceId)) {\\n                this._trackEnded = true;\\n            }\\n        };\\n\\n        // Subscribe each created local audio track to\\n        // RTCEvents.AUDIO_OUTPUT_DEVICE_CHANGED event. This is different from\\n        // handling this event for remote tracks (which are handled in RTC.js),\\n        // because there might be local tracks not attached to a conference.\\n        if (this.isAudioTrack() && RTCUtils.isDeviceChangeAvailable('output')) {\\n            this._onAudioOutputDeviceChanged = this.setAudioOutput.bind(this);\\n            RTCUtils.addListener(\\n                RTCEvents.AUDIO_OUTPUT_DEVICE_CHANGED,\\n                this._onAudioOutputDeviceChanged);\\n        }\\n\\n        RTCUtils.addListener(\\n            RTCEvents.DEVICE_LIST_CHANGED,\\n            this._onDeviceListChanged);\\n\\n        this._initNoDataFromSourceHandlers();\\n    }\\n\\n    /**\\n     * Returns if associated MediaStreamTrack is in the 'ended' state\\n     *\\n     * @returns {boolean}\\n     */\\n    isEnded() {\\n        return this.getTrack().readyState === 'ended' || this._trackEnded;\\n    }\\n\\n    /**\\n     * Sets handlers to the MediaStreamTrack object that will detect camera\\n     * issues.\\n     */\\n    _initNoDataFromSourceHandlers() {\\n        if (this.isVideoTrack() && this.videoType === VideoType.CAMERA) {\\n            const _onNoDataFromSourceError\\n                = this._onNoDataFromSourceError.bind(this);\\n\\n            this._setHandler('track_mute', () => {\\n                if (this._checkForCameraIssues()) {\\n                    const now = window.performance.now();\\n\\n                    this._noDataFromSourceTimeout\\n                        = setTimeout(_onNoDataFromSourceError, 3000);\\n                    this._setHandler('track_unmute', () => {\\n                        this._clearNoDataFromSourceMuteResources();\\n                        Statistics.sendAnalyticsAndLog(\\n                            TRACK_UNMUTED,\\n                            {\\n                                'media_type': this.getType(),\\n                                'track_type': 'local',\\n                                value: window.performance.now() - now\\n                            });\\n                    });\\n                }\\n            });\\n            this._setHandler('track_ended', _onNoDataFromSourceError);\\n        }\\n    }\\n\\n    /**\\n     * Clears all timeouts and handlers set on MediaStreamTrack mute event.\\n     * FIXME: Change the name of the method with better one.\\n     */\\n    _clearNoDataFromSourceMuteResources() {\\n        if (this._noDataFromSourceTimeout) {\\n            clearTimeout(this._noDataFromSourceTimeout);\\n            this._noDataFromSourceTimeout = null;\\n        }\\n        this._setHandler('track_unmute', undefined);\\n    }\\n\\n    /**\\n     * Called when potential camera issue is detected. Clears the handlers and\\n     * timeouts set on MediaStreamTrack muted event. Verifies that the camera\\n     * issue persists and fires NO_DATA_FROM_SOURCE event.\\n     */\\n    _onNoDataFromSourceError() {\\n        this._clearNoDataFromSourceMuteResources();\\n        if (this._checkForCameraIssues()) {\\n            this._fireNoDataFromSourceEvent();\\n        }\\n    }\\n\\n    /**\\n     * Fires NO_DATA_FROM_SOURCE event and logs it to analytics and callstats.\\n     */\\n    _fireNoDataFromSourceEvent() {\\n        this.emit(NO_DATA_FROM_SOURCE);\\n\\n        Statistics.sendAnalytics(createNoDataFromSourceEvent(this.getType()));\\n        const log = { name: NO_DATA_FROM_SOURCE };\\n\\n        if (this.isAudioTrack()) {\\n            log.isReceivingData = this._isReceivingData();\\n        }\\n        Statistics.sendLog(JSON.stringify(log));\\n    }\\n\\n    /**\\n     * Sets real device ID by comparing track information with device\\n     * information. This is temporary solution until getConstraints() method\\n     * will be implemented in browsers.\\n     *\\n     * @param {MediaDeviceInfo[]} devices - list of devices obtained from\\n     * enumerateDevices() call\\n     */\\n    _setRealDeviceIdFromDeviceList(devices) {\\n        const track = this.getTrack();\\n        const device = devices.find(\\n            d => d.kind === `${track.kind}input` && d.label === track.label);\\n\\n        if (device) {\\n            this._realDeviceId = device.deviceId;\\n        }\\n    }\\n\\n    /**\\n     * Sets the stream property of JitsiLocalTrack object and sets all stored\\n     * handlers to it.\\n     *\\n     * @param {MediaStream} stream the new stream.\\n     * @protected\\n     */\\n    _setStream(stream) {\\n        super._setStream(stream);\\n\\n        if (stream) {\\n            // Store the MSID for video mute/unmute purposes.\\n            this.storedMSID = this.getMSID();\\n            logger.debug(`Setting new MSID: ${this.storedMSID} on ${this}`);\\n        } else {\\n            logger.debug(`Setting 'null' stream on ${this}`);\\n        }\\n    }\\n\\n    /**\\n     * Asynchronously mutes this track.\\n     *\\n     * @returns {Promise}\\n     */\\n    mute() {\\n        return this._queueSetMuted(true);\\n    }\\n\\n    /**\\n     * Asynchronously unmutes this track.\\n     *\\n     * @returns {Promise}\\n     */\\n    unmute() {\\n        return this._queueSetMuted(false);\\n    }\\n\\n    /**\\n     * Initializes a new Promise to execute {@link #_setMuted}. May be called\\n     * multiple times in a row and the invocations of {@link #_setMuted} and,\\n     * consequently, {@link #mute} and/or {@link #unmute} will be resolved in a\\n     * serialized fashion.\\n     *\\n     * @param {boolean} muted - The value to invoke <tt>_setMuted</tt> with.\\n     * @returns {Promise}\\n     */\\n    _queueSetMuted(muted) {\\n        const setMuted = this._setMuted.bind(this, muted);\\n\\n        this._prevSetMuted = this._prevSetMuted.then(setMuted, setMuted);\\n\\n        return this._prevSetMuted;\\n    }\\n\\n    /**\\n     * Mutes / unmutes this track.\\n     *\\n     * @param {boolean} muted - If <tt>true</tt>, this track will be muted;\\n     * otherwise, this track will be unmuted.\\n     * @private\\n     * @returns {Promise}\\n     */\\n    _setMuted(muted) {\\n        if (this.isMuted() === muted) {\\n            return Promise.resolve();\\n        }\\n\\n        if (this.disposed) {\\n            return Promise.reject(new JitsiTrackError(TRACK_IS_DISPOSED));\\n        }\\n\\n        let promise = Promise.resolve();\\n\\n        // A function that will print info about muted status transition\\n        const logMuteInfo = () => logger.info(`Mute ${this}: ${muted}`);\\n\\n        if (this.isAudioTrack()\\n                || this.videoType === VideoType.DESKTOP\\n                || !browser.doesVideoMuteByStreamRemove()) {\\n            logMuteInfo();\\n            if (this.track) {\\n                this.track.enabled = !muted;\\n            }\\n        } else if (muted) {\\n            promise = new Promise((resolve, reject) => {\\n                logMuteInfo();\\n                this._removeStreamFromConferenceAsMute(\\n                    () => {\\n                        // FIXME: Maybe here we should set the SRC for the\\n                        // containers to something\\n                        // We don't want any events to be fired on this stream\\n                        this._unregisterHandlers();\\n                        this._stopStream();\\n                        this._setStream(null);\\n                        resolve();\\n                    },\\n                    reject);\\n            });\\n        } else {\\n            logMuteInfo();\\n\\n            // This path is only for camera.\\n            const streamOptions = {\\n                cameraDeviceId: this.getDeviceId(),\\n                devices: [ MediaType.VIDEO ],\\n                facingMode: this.getCameraFacingMode()\\n            };\\n\\n            if (browser.usesNewGumFlow()) {\\n                promise\\n                    = RTCUtils.newObtainAudioAndVideoPermissions(Object.assign(\\n                        {},\\n                        streamOptions,\\n                        { constraints: { video: this._constraints } }));\\n            } else {\\n                if (this.resolution) {\\n                    streamOptions.resolution = this.resolution;\\n                }\\n\\n                promise\\n                    = RTCUtils.obtainAudioAndVideoPermissions(streamOptions);\\n            }\\n\\n            promise.then(streamsInfo => {\\n                const mediaType = this.getType();\\n                const streamInfo\\n                    = browser.usesNewGumFlow()\\n                        ? streamsInfo.find(\\n                            info => info.track.kind === mediaType)\\n                        : streamsInfo.find(\\n                            info => info.mediaType === mediaType);\\n\\n                if (streamInfo) {\\n                    this._setStream(streamInfo.stream);\\n                    this.track = streamInfo.track;\\n\\n                    // This is not good when video type changes after\\n                    // unmute, but let's not crash here\\n                    if (this.videoType !== streamInfo.videoType) {\\n                        logger.warn(\\n                            `${this}: video type has changed after unmute!`,\\n                            this.videoType, streamInfo.videoType);\\n                        this.videoType = streamInfo.videoType;\\n                    }\\n                } else {\\n                    throw new JitsiTrackError(TRACK_NO_STREAM_FOUND);\\n                }\\n\\n                this.containers.map(\\n                    cont => RTCUtils.attachMediaStream(cont, this.stream));\\n\\n                return this._addStreamToConferenceAsUnmute();\\n            });\\n        }\\n\\n        return promise\\n            .then(() => this._sendMuteStatus(muted))\\n            .then(() => this.emit(TRACK_MUTE_CHANGED, this));\\n    }\\n\\n    /**\\n     * Adds stream to conference and marks it as \\\"unmute\\\" operation.\\n     *\\n     * @private\\n     * @returns {Promise}\\n     */\\n    _addStreamToConferenceAsUnmute() {\\n        if (!this.conference) {\\n            return Promise.resolve();\\n        }\\n\\n        // FIXME it would be good to not included conference as part of this\\n        // process. Only TraceablePeerConnections to which the track is attached\\n        // should care about this action. The TPCs to which the track is not\\n        // attached can sync up when track is re-attached.\\n        // A problem with that is that the \\\"modify sources\\\" queue is part of\\n        // the JingleSessionPC and it would be excluded from the process. One\\n        // solution would be to extract class between TPC and JingleSessionPC\\n        // which would contain the queue and would notify the signaling layer\\n        // when local SSRCs are changed. This would help to separate XMPP from\\n        // the RTC module.\\n        return new Promise((resolve, reject) => {\\n            this.conference._addLocalTrackAsUnmute(this)\\n                .then(resolve, error => reject(new Error(error)));\\n        });\\n    }\\n\\n    /**\\n     * Removes stream from conference and marks it as \\\"mute\\\" operation.\\n     *\\n     * @param {Function} successCallback will be called on success\\n     * @param {Function} errorCallback will be called on error\\n     * @private\\n     */\\n    _removeStreamFromConferenceAsMute(successCallback, errorCallback) {\\n        if (!this.conference) {\\n            successCallback();\\n\\n            return;\\n        }\\n        this.conference._removeLocalTrackAsMute(this).then(\\n            successCallback,\\n            error => errorCallback(new Error(error)));\\n    }\\n\\n    /**\\n     * Sends mute status for a track to conference if any.\\n     *\\n     * @param {boolean} mute - If track is muted.\\n     * @private\\n     * @returns {Promise}\\n     */\\n    _sendMuteStatus(mute) {\\n        if (!this.conference || !this.conference.room) {\\n            return Promise.resolve();\\n        }\\n\\n        return new Promise(resolve => {\\n            this.conference.room[\\n                this.isAudioTrack()\\n                    ? 'setAudioMute'\\n                    : 'setVideoMute'](mute, resolve);\\n        });\\n    }\\n\\n    /**\\n     * @inheritdoc\\n     *\\n     * Stops sending the media track. And removes it from the HTML.\\n     * NOTE: Works for local tracks only.\\n     *\\n     * @extends JitsiTrack#dispose\\n     * @returns {Promise}\\n     */\\n    dispose() {\\n        let promise = Promise.resolve();\\n\\n        if (this.conference) {\\n            promise = this.conference.removeTrack(this);\\n        }\\n\\n        if (this.stream) {\\n            this._stopStream();\\n            this.detach();\\n        }\\n\\n        RTCUtils.removeListener(RTCEvents.DEVICE_LIST_CHANGED,\\n            this._onDeviceListChanged);\\n\\n        if (this._onAudioOutputDeviceChanged) {\\n            RTCUtils.removeListener(RTCEvents.AUDIO_OUTPUT_DEVICE_CHANGED,\\n                this._onAudioOutputDeviceChanged);\\n        }\\n\\n        return promise.then(() => super.dispose());\\n    }\\n\\n    /**\\n     * Returns <tt>true</tt> - if the stream is muted and <tt>false</tt>\\n     * otherwise.\\n     *\\n     * @returns {boolean} <tt>true</tt> - if the stream is muted and\\n     * <tt>false</tt> otherwise.\\n     */\\n    isMuted() {\\n        // this.stream will be null when we mute local video on Chrome\\n        if (!this.stream) {\\n            return true;\\n        }\\n        if (this.isVideoTrack() && !this.isActive()) {\\n            return true;\\n        }\\n\\n        return !this.track || !this.track.enabled;\\n    }\\n\\n    /**\\n     * Sets the JitsiConference object associated with the track. This is temp\\n     * solution.\\n     *\\n     * @param conference the JitsiConference object\\n     */\\n    _setConference(conference) {\\n        this.conference = conference;\\n\\n        // We want to keep up with postponed events which should have been fired\\n        // on \\\"attach\\\" call, but for local track we not always have the\\n        // conference before attaching. However this may result in duplicated\\n        // events if they have been triggered on \\\"attach\\\" already.\\n        for (let i = 0; i < this.containers.length; i++) {\\n            this._maybeFireTrackAttached(this.containers[i]);\\n        }\\n    }\\n\\n    /**\\n     * Returns <tt>true</tt>.\\n     *\\n     * @returns {boolean} <tt>true</tt>\\n     */\\n    isLocal() {\\n        return true;\\n    }\\n\\n    /**\\n     * Returns device id associated with track.\\n     *\\n     * @returns {string}\\n     */\\n    getDeviceId() {\\n        return this._realDeviceId || this.deviceId;\\n    }\\n\\n    /**\\n     * Returns the participant id which owns the track.\\n     *\\n     * @returns {string} the id of the participants. It corresponds to the\\n     * Colibri endpoint id/MUC nickname in case of Jitsi-meet.\\n     */\\n    getParticipantId() {\\n        return this.conference && this.conference.myUserId();\\n    }\\n\\n    /**\\n     * Handles bytes sent statistics.\\n     *\\n     * @param {TraceablePeerConnection} tpc the source of the \\\"bytes sent\\\" stat\\n     * @param {number} bytesSent the new value\\n     * NOTE: used only for audio tracks to detect audio issues.\\n     */\\n    _onByteSentStatsReceived(tpc, bytesSent) {\\n        if (bytesSent > 0) {\\n            this._hasSentData = true;\\n        }\\n        const iceConnectionState = tpc.getConnectionState();\\n\\n        if (this._testDataSent && iceConnectionState === 'connected') {\\n            setTimeout(() => {\\n                if (!this._hasSentData) {\\n                    logger.warn(`${this} 'bytes sent' <= 0: \\\\\\n                        ${this._bytesSent}`);\\n\\n                    // we are not receiving anything from the microphone\\n                    this._fireNoDataFromSourceEvent();\\n                }\\n            }, 3000);\\n            this._testDataSent = false;\\n        }\\n    }\\n\\n    /**\\n     * Returns facing mode for video track from camera. For other cases (e.g.\\n     * audio track or 'desktop' video track) returns undefined.\\n     *\\n     * @returns {CameraFacingMode|undefined}\\n     */\\n    getCameraFacingMode() {\\n        if (this.isVideoTrack() && this.videoType === VideoType.CAMERA) {\\n            // MediaStreamTrack#getSettings() is not implemented in many\\n            // browsers, so we need feature checking here. Progress on the\\n            // respective browser's implementation can be tracked at\\n            // https://bugs.chromium.org/p/webrtc/issues/detail?id=2481 for\\n            // Chromium and https://bugzilla.mozilla.org/show_bug.cgi?id=1213517\\n            // for Firefox. Even if a browser implements getSettings() already,\\n            // it might still not return anything for 'facingMode'.\\n            let trackSettings;\\n\\n            try {\\n                trackSettings = this.track.getSettings();\\n            } catch (e) {\\n                // XXX React-native-webrtc, for example, defines\\n                // MediaStreamTrack#getSettings() but the implementation throws\\n                // a \\\"Not implemented\\\" Error.\\n            }\\n            if (trackSettings && 'facingMode' in trackSettings) {\\n                return trackSettings.facingMode;\\n            }\\n\\n            if (typeof this._facingMode !== 'undefined') {\\n                return this._facingMode;\\n            }\\n\\n            // In most cases we are showing a webcam. So if we've gotten here,\\n            // it should be relatively safe to assume that we are probably\\n            // showing the user-facing camera.\\n            return CameraFacingMode.USER;\\n        }\\n\\n        return undefined;\\n    }\\n\\n    /**\\n     * Stops the associated MediaStream.\\n     */\\n    _stopStream() {\\n\\n        /**\\n         * Indicates that we are executing {@link #_stopStream} i.e.\\n         * {@link RTCUtils#stopMediaStream} for the <tt>MediaStream</tt>\\n         * associated with this <tt>JitsiTrack</tt> instance.\\n         *\\n         * @private\\n         * @type {boolean}\\n         */\\n        this._stopStreamInProgress = true;\\n\\n        try {\\n            RTCUtils.stopMediaStream(this.stream);\\n        } finally {\\n            this._stopStreamInProgress = false;\\n        }\\n    }\\n\\n    /**\\n     * Switches the camera facing mode if the WebRTC implementation supports the\\n     * custom MediaStreamTrack._switchCamera method. Currently, the method in\\n     * question is implemented in react-native-webrtc only. When such a WebRTC\\n     * implementation is executing, the method is the preferred way to switch\\n     * between the front/user-facing and the back/environment-facing cameras\\n     * because it will likely be (as is the case of react-native-webrtc)\\n     * noticeably faster that creating a new MediaStreamTrack via a new\\n     * getUserMedia call with the switched facingMode constraint value.\\n     * Moreover, the approach with a new getUserMedia call may not even work:\\n     * WebRTC on Android and iOS is either very slow to open the camera a second\\n     * time or plainly freezes attempting to do that.\\n     */\\n    _switchCamera() {\\n        if (this.isVideoTrack()\\n                && this.videoType === VideoType.CAMERA\\n                && typeof this.track._switchCamera === 'function') {\\n            this.track._switchCamera();\\n\\n            this._facingMode\\n                = this._facingMode === CameraFacingMode.ENVIRONMENT\\n                    ? CameraFacingMode.USER\\n                    : CameraFacingMode.ENVIRONMENT;\\n        }\\n    }\\n\\n    /**\\n     * Detects camera issues, i.e. returns true if we expect this track to be\\n     * receiving data from its source, but it isn't receiving data.\\n     *\\n     * @returns {boolean} true if an issue is detected and false otherwise\\n     */\\n    _checkForCameraIssues() {\\n        if (!this.isVideoTrack()\\n                || this._stopStreamInProgress\\n                || this.videoType === VideoType.DESKTOP) {\\n            return false;\\n        }\\n\\n        return !this._isReceivingData();\\n    }\\n\\n    /**\\n     * Checks whether the attached MediaStream is receiving data from source or\\n     * not. If the stream property is null(because of mute or another reason)\\n     * this method will return false.\\n     * NOTE: This method doesn't indicate problem with the streams directly.\\n     * For example in case of video mute the method will return false or if the\\n     * user has disposed the track.\\n     *\\n     * @returns {boolean} true if the stream is receiving data and false\\n     * this otherwise.\\n     */\\n    _isReceivingData() {\\n        if (!this.stream) {\\n            return false;\\n        }\\n\\n        // In older version of the spec there is no muted property and\\n        // readyState can have value muted. In the latest versions\\n        // readyState can have values \\\"live\\\" and \\\"ended\\\" and there is\\n        // muted boolean property. If the stream is muted that means that\\n        // we aren't receiving any data from the source. We want to notify\\n        // the users for error if the stream is muted or ended on it's\\n        // creation.\\n        return this.stream.getTracks().some(track =>\\n            (!('readyState' in track) || track.readyState === 'live')\\n                && (!('muted' in track) || track.muted !== true));\\n    }\\n\\n    /**\\n     * Creates a text representation of this local track instance.\\n     *\\n     * @return {string}\\n     */\\n    toString() {\\n        return `LocalTrack[${this.rtcId},${this.getType()}]`;\\n    }\\n}\\n\",\"import { $iq } from 'strophe.js';\\n\\nimport recordingXMLUtils from './recordingXMLUtils';\\n\\n/**\\n * Represents a recording session.\\n */\\nexport default class JibriSession {\\n    /**\\n     * Initializes a new JibriSession instance.\\n     *\\n     * @constructor\\n     */\\n    constructor(options = {}) {\\n        this._connection = options.connection;\\n        this._mode = options.mode;\\n\\n        this._setSessionID(options.sessionID);\\n        this.setStatus(options.status);\\n    }\\n\\n    /**\\n     * Returns the error related to the session instance, if any.\\n     *\\n     * @returns {string|undefined}\\n     */\\n    getError() {\\n        return this._error;\\n    }\\n\\n    /**\\n     * Returns the session ID of the session instance.\\n     *\\n     * @returns {string|undefined}\\n     */\\n    getID() {\\n        return this._sessionID;\\n    }\\n\\n    /**\\n     * Returns the streaming URL of the session.\\n     *\\n     * @returns {string|undefined}\\n     */\\n    getLiveStreamViewURL() {\\n        return this._liveStreamViewURL;\\n    }\\n\\n    /**\\n     * Returns the current status of the session.\\n     *\\n     * @returns {string|undefined}\\n     */\\n    getStatus() {\\n        return this._status;\\n    }\\n\\n    /**\\n     * Returns the current recording mode of the session, such as \\\"file\\\".\\n     *\\n     * @returns {string}\\n     */\\n    getMode() {\\n        return this._mode;\\n    }\\n\\n    /**\\n     * Sets the last known error message related to the session.\\n     *\\n     * @param {string} error - The error string explaining why the session\\n     * entered an error state.\\n     * @returns {void}\\n     */\\n    setError(error) {\\n        this._error = error;\\n    }\\n\\n    /**\\n     * Sets the last live stream URL for the session instance. Usually this is\\n     * a YouTube URL and usually this is only set for \\\"stream\\\" sessions.\\n     *\\n     * @param {string} url - The live stream URL associated with the session.\\n     * @returns {void}\\n     */\\n    setLiveStreamViewURL(url) {\\n        this._liveStreamViewURL = url;\\n    }\\n\\n    /**\\n     * Sets the last known status for this recording session.\\n     *\\n     * @param {string} status - The new status to set.\\n     * @returns {void}\\n     */\\n    setStatus(status) {\\n        this._status = status;\\n    }\\n\\n    /**\\n     * Sends a message to start the actual recording.\\n     *\\n     * @param {Object} options - Additional arguments for starting the\\n     * recording.\\n     * @param {string} [options.appData] - Data specific to the app/service that\\n     * the result file will be uploaded.\\n     * @param {string} [options.broadcastId] - The broadcast ID of an\\n     * associated YouTube stream, used for knowing the URL from which the stream\\n     * can be viewed.\\n     * @param {string} options.focusMucJid - The JID of the focus participant\\n     * that controls recording.\\n     * @param {streamId} options.streamId - Necessary for live streaming, this\\n     * is the the stream key needed to start a live streaming session with the\\n     * streaming service provider.\\n     * @returns Promise\\n     */\\n    start({ appData, broadcastId, focusMucJid, streamId }) {\\n        return new Promise((resolve, reject) => {\\n            this._connection.sendIQ(\\n                this._createIQ({\\n                    action: 'start',\\n                    appData,\\n                    focusMucJid,\\n                    broadcastId,\\n                    streamId\\n                }),\\n                result => {\\n                    // All users will eventually receive the 'pending' status\\n                    // from the backend, but for the user initiating the session\\n                    // it's better to give some instant feedback that recording\\n                    // is starting so fire 'pending' here manually.\\n                    this.setStatus('pending');\\n                    this._setSessionID(\\n                        recordingXMLUtils.getSessionIdFromIq(result));\\n\\n                    resolve();\\n                },\\n                error => {\\n                    this._setErrorFromIq(error);\\n\\n                    reject(error);\\n                });\\n        });\\n    }\\n\\n    /**\\n     * Sends a message to actually stop the recording session.\\n     *\\n     * @param {Object} options - Additional arguments for stopping the\\n     * recording.\\n     * @param {Object} options.focusMucJid - The JID of the focus participant\\n     * that controls recording.\\n     * @returns Promise\\n     */\\n    stop({ focusMucJid }) {\\n        return new Promise((resolve, reject) => {\\n            this._connection.sendIQ(\\n                this._createIQ({\\n                    action: 'stop',\\n                    focusMucJid\\n                }),\\n                resolve,\\n                reject);\\n        });\\n    }\\n\\n    /**\\n     * Generates the message to change the status of the recording session.\\n     *\\n     * @param {string} status - The new status to which the recording session\\n     * should transition.\\n     * @param {string} [options.appData] - Data specific to the app/service that\\n     * the result file will be uploaded.\\n     * @param {string} [options.broadcastId] - The broadcast ID of an\\n     * associated YouTube stream, used for knowing the URL from which the stream\\n     * can be viewed.\\n     * @param {string} options.focusMucJid - The JID of the focus participant\\n     * that controls recording.\\n     * @param {streamId} options.streamId - Necessary for live streaming, this\\n     * is the the stream key needed to start a live streaming session with the\\n     * streaming service provider.\\n     * @returns Object - The XMPP IQ message.\\n     */\\n    _createIQ({ action, appData, broadcastId, focusMucJid, streamId }) {\\n        return $iq({\\n            to: focusMucJid,\\n            type: 'set'\\n        })\\n        .c('jibri', {\\n            'xmlns': 'http://jitsi.org/protocol/jibri',\\n            'action': action,\\n            'app_data': appData,\\n            'recording_mode': this._mode,\\n            'streamid': streamId,\\n            'you_tube_broadcast_id': broadcastId\\n        })\\n        .up();\\n    }\\n\\n    /**\\n     * Handles the error from an iq and stores the error.\\n     *\\n     * @param {Node} errorIq - The error response from an Iq.\\n     * @private\\n     * @returns {void}\\n     */\\n    _setErrorFromIq(errorIq) {\\n        const error = errorIq.getElementsByTagName('error')[0];\\n\\n        this.setError(error.children[0].tagName);\\n    }\\n\\n    /**\\n     * Sets the known session ID for this recording session.\\n     *\\n     * @param {string} sessionID\\n     * @private\\n     * @returns {void}\\n     */\\n    _setSessionID(sessionID) {\\n        this._sessionID = sessionID;\\n    }\\n}\\n\",\"import EventEmitter from 'events';\\n\\nimport * as MediaType from './service/RTC/MediaType';\\nimport browser from './modules/browser';\\nimport RTC from './modules/RTC/RTC';\\nimport RTCEvents from './service/RTC/RTCEvents';\\nimport Statistics from './modules/statistics/statistics';\\n\\nimport * as JitsiMediaDevicesEvents from './JitsiMediaDevicesEvents';\\n\\nconst AUDIO_PERMISSION_NAME = 'microphone';\\nconst PERMISSION_GRANTED_STATUS = 'granted';\\nconst VIDEO_PERMISSION_NAME = 'camera';\\n\\n/**\\n * Media devices utilities for Jitsi.\\n */\\nclass JitsiMediaDevices {\\n    /**\\n     * Initializes a {@code JitsiMediaDevices} object. There will be a single\\n     * instance of this class.\\n     */\\n    constructor() {\\n        this._eventEmitter = new EventEmitter();\\n        this._grantedPermissions = {};\\n\\n        RTC.addListener(\\n            RTCEvents.DEVICE_LIST_CHANGED,\\n            devices =>\\n                this._eventEmitter.emit(\\n                    JitsiMediaDevicesEvents.DEVICE_LIST_CHANGED,\\n                    devices));\\n        RTC.addListener(\\n            RTCEvents.DEVICE_LIST_AVAILABLE,\\n            devices =>\\n                this._logOutputDevice(\\n                    this.getAudioOutputDevice(),\\n                    devices));\\n        RTC.addListener(\\n            RTCEvents.GRANTED_PERMISSIONS,\\n            grantedPermissions =>\\n                this._handleGrantedPermissions(grantedPermissions));\\n\\n        // Test if the W3C Permissions API is implemented and the 'camera' and\\n        // 'microphone' permissions are implemented. (Testing for at least one\\n        // of them seems sufficient).\\n        this._permissionsApiSupported = new Promise(resolve => {\\n            if (!navigator.permissions) {\\n                resolve(false);\\n\\n                return;\\n            }\\n\\n            navigator.permissions.query({ name: VIDEO_PERMISSION_NAME })\\n                .then(() => resolve(true), () => resolve(false));\\n        });\\n    }\\n\\n    /**\\n     * Updated the local granted permissions cache. A permissions might be\\n     * granted, denied, or undefined. This is represented by having its media\\n     * type key set to {@code true} or {@code false} respectively.\\n     *\\n     * @param {Object} grantedPermissions - Array with the permissions\\n     * which were granted.\\n     */\\n    _handleGrantedPermissions(grantedPermissions) {\\n        this._grantedPermissions = {\\n            ...this._grantedPermissions,\\n            ...grantedPermissions\\n        };\\n    }\\n\\n    /**\\n     * Gathers data and sends it to statistics.\\n     * @param deviceID the device id to log\\n     * @param devices list of devices\\n     */\\n    _logOutputDevice(deviceID, devices) {\\n        const device\\n            = devices.find(\\n                d => d.kind === 'audiooutput' && d.deviceId === deviceID);\\n\\n        if (device) {\\n            Statistics.sendActiveDeviceListEvent(\\n                RTC.getEventDataForActiveDevice(device));\\n        }\\n    }\\n\\n    /**\\n     * Executes callback with list of media devices connected.\\n     * @param {function} callback\\n     */\\n    enumerateDevices(callback) {\\n        RTC.enumerateDevices(callback);\\n    }\\n\\n    /**\\n     * Checks if its possible to enumerate available cameras/micropones.\\n     * @returns {Promise<boolean>} a Promise which will be resolved only once\\n     * the WebRTC stack is ready, either with true if the device listing is\\n     * available available or with false otherwise.\\n     */\\n    isDeviceListAvailable() {\\n        return RTC.isDeviceListAvailable();\\n    }\\n\\n    /**\\n     * Returns true if changing the input (camera / microphone) or output\\n     * (audio) device is supported and false if not.\\n     * @param {string} [deviceType] - type of device to change. Default is\\n     *      undefined or 'input', 'output' - for audio output device change.\\n     * @returns {boolean} true if available, false otherwise.\\n     */\\n    isDeviceChangeAvailable(deviceType) {\\n        return RTC.isDeviceChangeAvailable(deviceType);\\n    }\\n\\n    /**\\n     * Checks if the permission for the given device was granted.\\n     *\\n     * @param {'audio'|'video'} [type] - type of devices to check,\\n     *      undefined stands for both 'audio' and 'video' together\\n     * @returns {Promise<boolean>}\\n     */\\n    isDevicePermissionGranted(type) {\\n        return new Promise(resolve => {\\n            // Shortcut: first check if we already know the permission was\\n            // granted.\\n            if (type in this._grantedPermissions) {\\n                resolve(this._grantedPermissions[type]);\\n\\n                return;\\n            }\\n\\n            // Check using the Permissions API.\\n            this._permissionsApiSupported.then(supported => {\\n                if (!supported) {\\n                    resolve(false);\\n\\n                    return;\\n                }\\n\\n                const promises = [];\\n\\n                switch (type) {\\n                case MediaType.VIDEO:\\n                    promises.push(\\n                        navigator.permissions.query({\\n                            name: VIDEO_PERMISSION_NAME\\n                        }));\\n                    break;\\n                case MediaType.AUDIO:\\n                    promises.push(\\n                        navigator.permissions.query({\\n                            name: AUDIO_PERMISSION_NAME\\n                        }));\\n                    break;\\n                default:\\n                    promises.push(\\n                        navigator.permissions.query({\\n                            name: VIDEO_PERMISSION_NAME\\n                        }));\\n                    promises.push(\\n                        navigator.permissions.query({\\n                            name: AUDIO_PERMISSION_NAME\\n                        }));\\n                }\\n\\n                Promise.all(promises).then(\\n                    results => resolve(results.every(permissionStatus => {\\n                        // The status attribute is deprecated, and state\\n                        // should be used instead, but check both for now\\n                        // for backwards compatibility.\\n                        const grantStatus = permissionStatus.state\\n                            || permissionStatus.status;\\n\\n                        return grantStatus === PERMISSION_GRANTED_STATUS;\\n                    })),\\n                    () => resolve(false)\\n                );\\n            });\\n        });\\n    }\\n\\n    /**\\n     * Returns true if it is possible to be simultaneously capturing audio\\n     * from more than one device.\\n     *\\n     * @returns {boolean}\\n     */\\n    isMultipleAudioInputSupported() {\\n        return !browser.isFirefox();\\n    }\\n\\n    /**\\n     * Returns currently used audio output device id, 'default' stands\\n     * for default device\\n     * @returns {string}\\n     */\\n    getAudioOutputDevice() {\\n        return RTC.getAudioOutputDevice();\\n    }\\n\\n    /**\\n     * Sets current audio output device.\\n     * @param {string} deviceId - id of 'audiooutput' device from\\n     *      navigator.mediaDevices.enumerateDevices(), 'default' is for\\n     *      default device\\n     * @returns {Promise} - resolves when audio output is changed, is rejected\\n     *      otherwise\\n     */\\n    setAudioOutputDevice(deviceId) {\\n        const availableDevices = RTC.getCurrentlyAvailableMediaDevices();\\n\\n        if (availableDevices && availableDevices.length > 0) {\\n            // if we have devices info report device to stats\\n            // normally this will not happen on startup as this method is called\\n            // too early. This will happen only on user selection of new device\\n            this._logOutputDevice(\\n                deviceId, RTC.getCurrentlyAvailableMediaDevices());\\n        }\\n\\n        return RTC.setAudioOutputDevice(deviceId);\\n    }\\n\\n    /**\\n     * Adds an event handler.\\n     * @param {string} event - event name\\n     * @param {function} handler - event handler\\n     */\\n    addEventListener(event, handler) {\\n        this._eventEmitter.addListener(event, handler);\\n    }\\n\\n    /**\\n     * Removes event handler.\\n     * @param {string} event - event name\\n     * @param {function} handler - event handler\\n     */\\n    removeEventListener(event, handler) {\\n        this._eventEmitter.removeListener(event, handler);\\n    }\\n\\n    /**\\n     * Emits an event.\\n     * @param {string} event - event name\\n     */\\n    emitEvent(event, ...args) {\\n        this._eventEmitter.emit(event, ...args);\\n    }\\n\\n    /**\\n     * Returns whether or not the current browser can support capturing video,\\n     * be it camera or desktop, and displaying received video.\\n     *\\n     * @returns {boolean}\\n     */\\n    supportsVideo() {\\n        // Defer to the browser capabilities to allow exposure of the api to the\\n        // consumer but prevent other files from having to import\\n        // JitsiMediaDevices.\\n        return browser.supportsVideo();\\n    }\\n}\\n\\nexport default new JitsiMediaDevices();\\n\",\"/* Copyright @ 2015 Atlassian Pty Ltd\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *     http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */\\n\\n/**\\n * Ordered log levels.\\n */\\nvar levels = {\\n    \\\"trace\\\": 0,\\n    \\\"debug\\\": 1,\\n    \\\"info\\\": 2,\\n    \\\"log\\\": 3,\\n    \\\"warn\\\": 4,\\n    \\\"error\\\": 5\\n};\\n\\n/**\\n * The default transport - console\\n * @type LoggerTransport\\n */\\nLogger.consoleTransport = console;\\n\\n/**\\n * The array which stores currently registered global transports.\\n * @type {[LoggerTransport]}\\n */\\nvar globalTransports = [ Logger.consoleTransport ];\\n\\n/**\\n * Adds given {@link LoggerTransport} instance to the list of global\\n * transports which means that it'll be used by all {@link Logger}s\\n * @param {LoggerTransport} transport\\n */\\nLogger.addGlobalTransport = function(transport) {\\n    if (globalTransports.indexOf(transport) === -1) {\\n        globalTransports.push(transport);\\n    }\\n};\\n\\n/**\\n * Removes given {@link LoggerTransport} instance from the list of global\\n * transports\\n * @param {LoggerTransport} transport\\n */\\nLogger.removeGlobalTransport = function(transport) {\\n    var transportIdx = globalTransports.indexOf(transport);\\n    if (transportIdx !== -1) {\\n        globalTransports.splice(transportIdx, 1);\\n    }\\n};\\n\\n/**\\n * Parses Error's object stack trace and extracts information about the last\\n * caller before the log method was called.\\n * @returns JS object with info about the caller - method name, file location,\\n * line and column.\\n */\\nfunction getCallerInfo() {\\n    var callerInfo = {\\n        methodName: \\\"\\\",\\n        fileLocation: \\\"\\\",\\n        line: null,\\n        column: null\\n    };\\n    //gets the part of the stack without the logger wrappers\\n    var error = new Error();\\n    var stack = error.stack? error.stack.split(\\\"\\\\n\\\") : [];\\n    if(!stack || stack.length < 1) {\\n        return callerInfo;\\n    }\\n    var m = null;\\n    if(stack[3]) {\\n        m = stack[3].match(/\\\\s*at\\\\s*(.+?)\\\\s*\\\\((\\\\S*)\\\\s*:(\\\\d*)\\\\s*:(\\\\d*)\\\\)/);\\n    }\\n    if(!m || m.length <= 4) {\\n        //Firefox && Safari\\n        if(stack[2].indexOf(\\\"log@\\\") === 0){\\n            //Safari\\n            callerInfo.methodName = stack[3].substr(0, stack[3].indexOf(\\\"@\\\"));\\n        } else {\\n            //Firefox\\n            callerInfo.methodName = stack[2].substr(0, stack[2].indexOf(\\\"@\\\"));\\n        }\\n        return callerInfo;\\n    }\\n\\n    callerInfo.methodName = m[1];\\n    callerInfo.fileLocation = m[2];\\n    callerInfo.line = m[3];\\n    callerInfo.column = m[4];\\n    return callerInfo;\\n}\\n\\n/**\\n * Logs messages using the transports and level from the logger.\\n * @param logger a logger instance.\\n * @param level the log level of the message. See the levels variable.\\n * @param arguments array with arguments that will be logged.\\n */\\nfunction log() {\\n    var logger = arguments[0], level = arguments[1],\\n        args = Array.prototype.slice.call(arguments, 2);\\n    if(levels[level] < logger.level) {\\n        return;\\n    }\\n\\n    var callerInfo = getCallerInfo();\\n    var transports = globalTransports.concat(logger.transports);\\n    for(var i = 0; i < transports.length; i++) {\\n        var t = transports[i];\\n        var l = t[level];\\n        if(l && typeof(l) === \\\"function\\\") {\\n            l.bind(t, logger.id? \\\"[\\\" + logger.id + \\\"]\\\" : \\\"\\\", \\\"<\\\" + callerInfo.methodName + \\\">: \\\")\\n                .apply(t, args);\\n        }\\n    }\\n}\\n\\n/**\\n *\\n * Constructs new logger object.\\n * @param level the logging level for the new logger\\n * @param id optional identifier for the logger instance.\\n * @param {LoggerTransport} transports optional list of handlers(objects) for\\n * the logs. The handlers must support - log, warn, error, debug, info, trace.\\n * @param format optional (NOT implemented) string.\\n */\\nfunction Logger(level, id, transports, format) {\\n    this.id = id;\\n    this.format = format;\\n    this.transports = transports;\\n    if(!this.transports) {\\n        this.transports = [];\\n    }\\n    this.level = levels[level];\\n    var methods = Object.keys(levels);\\n    for(var i = 0; i < methods.length; i++){\\n        this[methods[i]] =\\n            log.bind(null, this, methods[i]);\\n    }\\n}\\n\\n/**\\n * Sets the log level for the logger.\\n * @param level the new log level.\\n */\\nLogger.prototype.setLevel = function (level) {\\n    this.level = levels[level];\\n};\\nmodule.exports = Logger;\\n\\n/**\\n * Enum for the supported log levels.\\n */\\nLogger.levels = {\\n    TRACE: \\\"trace\\\",\\n    DEBUG: \\\"debug\\\",\\n    INFO: \\\"info\\\",\\n    LOG: \\\"log\\\",\\n    WARN: \\\"warn\\\",\\n    ERROR: \\\"error\\\"\\n};\\n\",\"module.exports = function(module) {\\r\\n\\tif (!module.webpackPolyfill) {\\r\\n\\t\\tmodule.deprecate = function() {};\\r\\n\\t\\tmodule.paths = [];\\r\\n\\t\\t// module.parent = undefined by default\\r\\n\\t\\tif (!module.children) module.children = [];\\r\\n\\t\\tObject.defineProperty(module, \\\"loaded\\\", {\\r\\n\\t\\t\\tenumerable: true,\\r\\n\\t\\t\\tget: function() {\\r\\n\\t\\t\\t\\treturn module.l;\\r\\n\\t\\t\\t}\\r\\n\\t\\t});\\r\\n\\t\\tObject.defineProperty(module, \\\"id\\\", {\\r\\n\\t\\t\\tenumerable: true,\\r\\n\\t\\t\\tget: function() {\\r\\n\\t\\t\\t\\treturn module.i;\\r\\n\\t\\t\\t}\\r\\n\\t\\t});\\r\\n\\t\\tmodule.webpackPolyfill = 1;\\r\\n\\t}\\r\\n\\treturn module;\\r\\n};\\r\\n\",\"var grammar = module.exports = {\\n  v: [{\\n    name: 'version',\\n    reg: /^(\\\\d*)$/\\n  }],\\n  o: [{ //o=- 20518 0 IN IP4 203.0.113.1\\n    // NB: sessionId will be a String in most cases because it is huge\\n    name: 'origin',\\n    reg: /^(\\\\S*) (\\\\d*) (\\\\d*) (\\\\S*) IP(\\\\d) (\\\\S*)/,\\n    names: ['username', 'sessionId', 'sessionVersion', 'netType', 'ipVer', 'address'],\\n    format: '%s %s %d %s IP%d %s'\\n  }],\\n  // default parsing of these only (though some of these feel outdated)\\n  s: [{ name: 'name' }],\\n  i: [{ name: 'description' }],\\n  u: [{ name: 'uri' }],\\n  e: [{ name: 'email' }],\\n  p: [{ name: 'phone' }],\\n  z: [{ name: 'timezones' }], // TODO: this one can actually be parsed properly..\\n  r: [{ name: 'repeats' }],   // TODO: this one can also be parsed properly\\n  //k: [{}], // outdated thing ignored\\n  t: [{ //t=0 0\\n    name: 'timing',\\n    reg: /^(\\\\d*) (\\\\d*)/,\\n    names: ['start', 'stop'],\\n    format: '%d %d'\\n  }],\\n  c: [{ //c=IN IP4 10.47.197.26\\n    name: 'connection',\\n    reg: /^IN IP(\\\\d) (\\\\S*)/,\\n    names: ['version', 'ip'],\\n    format: 'IN IP%d %s'\\n  }],\\n  b: [{ //b=AS:4000\\n    push: 'bandwidth',\\n    reg: /^(TIAS|AS|CT|RR|RS):(\\\\d*)/,\\n    names: ['type', 'limit'],\\n    format: '%s:%s'\\n  }],\\n  m: [{ //m=video 51744 RTP/AVP 126 97 98 34 31\\n    // NB: special - pushes to session\\n    // TODO: rtp/fmtp should be filtered by the payloads found here?\\n    reg: /^(\\\\w*) (\\\\d*) ([\\\\w\\\\/]*)(?: (.*))?/,\\n    names: ['type', 'port', 'protocol', 'payloads'],\\n    format: '%s %d %s %s'\\n  }],\\n  a: [\\n    { //a=rtpmap:110 opus/48000/2\\n      push: 'rtp',\\n      reg: /^rtpmap:(\\\\d*) ([\\\\w\\\\-\\\\.]*)(?:\\\\s*\\\\/(\\\\d*)(?:\\\\s*\\\\/(\\\\S*))?)?/,\\n      names: ['payload', 'codec', 'rate', 'encoding'],\\n      format: function (o) {\\n        return (o.encoding) ?\\n          'rtpmap:%d %s/%s/%s':\\n          o.rate ?\\n          'rtpmap:%d %s/%s':\\n          'rtpmap:%d %s';\\n      }\\n    },\\n    { //a=fmtp:108 profile-level-id=24;object=23;bitrate=64000\\n      //a=fmtp:111 minptime=10; useinbandfec=1\\n      push: 'fmtp',\\n      reg: /^fmtp:(\\\\d*) ([\\\\S| ]*)/,\\n      names: ['payload', 'config'],\\n      format: 'fmtp:%d %s'\\n    },\\n    { //a=control:streamid=0\\n      name: 'control',\\n      reg: /^control:(.*)/,\\n      format: 'control:%s'\\n    },\\n    { //a=rtcp:65179 IN IP4 193.84.77.194\\n      name: 'rtcp',\\n      reg: /^rtcp:(\\\\d*)(?: (\\\\S*) IP(\\\\d) (\\\\S*))?/,\\n      names: ['port', 'netType', 'ipVer', 'address'],\\n      format: function (o) {\\n        return (o.address != null) ?\\n          'rtcp:%d %s IP%d %s':\\n          'rtcp:%d';\\n      }\\n    },\\n    { //a=rtcp-fb:98 trr-int 100\\n      push: 'rtcpFbTrrInt',\\n      reg: /^rtcp-fb:(\\\\*|\\\\d*) trr-int (\\\\d*)/,\\n      names: ['payload', 'value'],\\n      format: 'rtcp-fb:%d trr-int %d'\\n    },\\n    { //a=rtcp-fb:98 nack rpsi\\n      push: 'rtcpFb',\\n      reg: /^rtcp-fb:(\\\\*|\\\\d*) ([\\\\w-_]*)(?: ([\\\\w-_]*))?/,\\n      names: ['payload', 'type', 'subtype'],\\n      format: function (o) {\\n        return (o.subtype != null) ?\\n          'rtcp-fb:%s %s %s':\\n          'rtcp-fb:%s %s';\\n      }\\n    },\\n    { //a=extmap:2 urn:ietf:params:rtp-hdrext:toffset\\n      //a=extmap:1/recvonly URI-gps-string\\n      push: 'ext',\\n      reg: /^extmap:(\\\\d+)(?:\\\\/(\\\\w+))? (\\\\S*)(?: (\\\\S*))?/,\\n      names: ['value', 'direction', 'uri', 'config'],\\n      format: function (o) {\\n        return 'extmap:%d' + (o.direction ? '/%s' : '%v') + ' %s' + (o.config ? ' %s' : '');\\n      }\\n    },\\n    { //a=crypto:1 AES_CM_128_HMAC_SHA1_80 inline:PS1uQCVeeCFCanVmcjkpPywjNWhcYD0mXXtxaVBR|2^20|1:32\\n      push: 'crypto',\\n      reg: /^crypto:(\\\\d*) ([\\\\w_]*) (\\\\S*)(?: (\\\\S*))?/,\\n      names: ['id', 'suite', 'config', 'sessionConfig'],\\n      format: function (o) {\\n        return (o.sessionConfig != null) ?\\n          'crypto:%d %s %s %s':\\n          'crypto:%d %s %s';\\n      }\\n    },\\n    { //a=setup:actpass\\n      name: 'setup',\\n      reg: /^setup:(\\\\w*)/,\\n      format: 'setup:%s'\\n    },\\n    { //a=mid:1\\n      name: 'mid',\\n      reg: /^mid:([^\\\\s]*)/,\\n      format: 'mid:%s'\\n    },\\n    { //a=msid:0c8b064d-d807-43b4-b434-f92a889d8587 98178685-d409-46e0-8e16-7ef0db0db64a\\n      name: 'msid',\\n      reg: /^msid:(.*)/,\\n      format: 'msid:%s'\\n    },\\n    { //a=ptime:20\\n      name: 'ptime',\\n      reg: /^ptime:(\\\\d*)/,\\n      format: 'ptime:%d'\\n    },\\n    { //a=maxptime:60\\n      name: 'maxptime',\\n      reg: /^maxptime:(\\\\d*)/,\\n      format: 'maxptime:%d'\\n    },\\n    { //a=sendrecv\\n      name: 'direction',\\n      reg: /^(sendrecv|recvonly|sendonly|inactive)/\\n    },\\n    { //a=ice-lite\\n      name: 'icelite',\\n      reg: /^(ice-lite)/\\n    },\\n    { //a=ice-ufrag:F7gI\\n      name: 'iceUfrag',\\n      reg: /^ice-ufrag:(\\\\S*)/,\\n      format: 'ice-ufrag:%s'\\n    },\\n    { //a=ice-pwd:x9cml/YzichV2+XlhiMu8g\\n      name: 'icePwd',\\n      reg: /^ice-pwd:(\\\\S*)/,\\n      format: 'ice-pwd:%s'\\n    },\\n    { //a=fingerprint:SHA-1 00:11:22:33:44:55:66:77:88:99:AA:BB:CC:DD:EE:FF:00:11:22:33\\n      name: 'fingerprint',\\n      reg: /^fingerprint:(\\\\S*) (\\\\S*)/,\\n      names: ['type', 'hash'],\\n      format: 'fingerprint:%s %s'\\n    },\\n    { //a=candidate:0 1 UDP 2113667327 203.0.113.1 54400 typ host\\n      //a=candidate:1162875081 1 udp 2113937151 192.168.34.75 60017 typ host generation 0 network-id 3 network-cost 10\\n      //a=candidate:3289912957 2 udp 1845501695 193.84.77.194 60017 typ srflx raddr 192.168.34.75 rport 60017 generation 0 network-id 3 network-cost 10\\n      //a=candidate:229815620 1 tcp 1518280447 192.168.150.19 60017 typ host tcptype active generation 0 network-id 3 network-cost 10\\n      //a=candidate:3289912957 2 tcp 1845501695 193.84.77.194 60017 typ srflx raddr 192.168.34.75 rport 60017 tcptype passive generation 0 network-id 3 network-cost 10\\n      push:'candidates',\\n      reg: /^candidate:(\\\\S*) (\\\\d*) (\\\\S*) (\\\\d*) (\\\\S*) (\\\\d*) typ (\\\\S*)(?: raddr (\\\\S*) rport (\\\\d*))?(?: tcptype (\\\\S*))?(?: generation (\\\\d*))?(?: network-id (\\\\d*))?(?: network-cost (\\\\d*))?/,\\n      names: ['foundation', 'component', 'transport', 'priority', 'ip', 'port', 'type', 'raddr', 'rport', 'tcptype', 'generation', 'network-id', 'network-cost'],\\n      format: function (o) {\\n        var str = 'candidate:%s %d %s %d %s %d typ %s';\\n\\n        str += (o.raddr != null) ? ' raddr %s rport %d' : '%v%v';\\n\\n        // NB: candidate has three optional chunks, so %void middles one if it's missing\\n        str += (o.tcptype != null) ? ' tcptype %s' : '%v';\\n\\n        if (o.generation != null) {\\n          str += ' generation %d';\\n        }\\n\\n        str += (o['network-id'] != null) ? ' network-id %d' : '%v';\\n        str += (o['network-cost'] != null) ? ' network-cost %d' : '%v';\\n        return str;\\n      }\\n    },\\n    { //a=end-of-candidates (keep after the candidates line for readability)\\n      name: 'endOfCandidates',\\n      reg: /^(end-of-candidates)/\\n    },\\n    { //a=remote-candidates:1 203.0.113.1 54400 2 203.0.113.1 54401 ...\\n      name: 'remoteCandidates',\\n      reg: /^remote-candidates:(.*)/,\\n      format: 'remote-candidates:%s'\\n    },\\n    { //a=ice-options:google-ice\\n      name: 'iceOptions',\\n      reg: /^ice-options:(\\\\S*)/,\\n      format: 'ice-options:%s'\\n    },\\n    { //a=ssrc:2566107569 cname:t9YU8M1UxTF8Y1A1\\n      push: 'ssrcs',\\n      reg: /^ssrc:(\\\\d*) ([\\\\w_]*)(?::(.*))?/,\\n      names: ['id', 'attribute', 'value'],\\n      format: function (o) {\\n        var str = 'ssrc:%d';\\n        if (o.attribute != null) {\\n          str += ' %s';\\n          if (o.value != null) {\\n            str += ':%s';\\n          }\\n        }\\n        return str;\\n      }\\n    },\\n    { //a=ssrc-group:FEC 1 2\\n      //a=ssrc-group:FEC-FR 3004364195 1080772241\\n      push: 'ssrcGroups',\\n      // token-char = %x21 / %x23-27 / %x2A-2B / %x2D-2E / %x30-39 / %x41-5A / %x5E-7E\\n      reg: /^ssrc-group:([\\\\x21\\\\x23\\\\x24\\\\x25\\\\x26\\\\x27\\\\x2A\\\\x2B\\\\x2D\\\\x2E\\\\w]*) (.*)/,\\n      names: ['semantics', 'ssrcs'],\\n      format: 'ssrc-group:%s %s'\\n    },\\n    { //a=msid-semantic: WMS Jvlam5X3SX1OP6pn20zWogvaKJz5Hjf9OnlV\\n      name: 'msidSemantic',\\n      reg: /^msid-semantic:\\\\s?(\\\\w*) (\\\\S*)/,\\n      names: ['semantic', 'token'],\\n      format: 'msid-semantic: %s %s' // space after ':' is not accidental\\n    },\\n    { //a=group:BUNDLE audio video\\n      push: 'groups',\\n      reg: /^group:(\\\\w*) (.*)/,\\n      names: ['type', 'mids'],\\n      format: 'group:%s %s'\\n    },\\n    { //a=rtcp-mux\\n      name: 'rtcpMux',\\n      reg: /^(rtcp-mux)/\\n    },\\n    { //a=rtcp-rsize\\n      name: 'rtcpRsize',\\n      reg: /^(rtcp-rsize)/\\n    },\\n    { //a=sctpmap:5000 webrtc-datachannel 1024\\n      name: 'sctpmap',\\n      reg: /^sctpmap:([\\\\w_\\\\/]*) (\\\\S*)(?: (\\\\S*))?/,\\n      names: ['sctpmapNumber', 'app', 'maxMessageSize'],\\n      format: function (o) {\\n        return (o.maxMessageSize != null) ?\\n          'sctpmap:%s %s %s' :\\n          'sctpmap:%s %s';\\n      }\\n    },\\n    { //a=x-google-flag:conference\\n      name: 'xGoogleFlag',\\n      reg: /^x-google-flag:([^\\\\s]*)/,\\n      format: 'x-google-flag:%s'\\n    },\\n    { //a=rid:1 send max-width=1280;max-height=720;max-fps=30;depend=0\\n      push: 'rids',\\n      reg: /^rid:([\\\\d\\\\w]+) (\\\\w+)(?: ([\\\\S| ]*))?/,\\n      names: ['id', 'direction', 'params'],\\n      format: function (o) {\\n        return (o.params) ? 'rid:%s %s %s' : 'rid:%s %s';\\n      }\\n    },\\n    { //a=imageattr:97 send [x=800,y=640,sar=1.1,q=0.6] [x=480,y=320] recv [x=330,y=250]\\n      //a=imageattr:* send [x=800,y=640] recv *\\n      //a=imageattr:100 recv [x=320,y=240]\\n      push: 'imageattrs',\\n      reg: new RegExp(\\n        //a=imageattr:97\\n        '^imageattr:(\\\\\\\\d+|\\\\\\\\*)' +\\n        //send [x=800,y=640,sar=1.1,q=0.6] [x=480,y=320]\\n        '[\\\\\\\\s\\\\\\\\t]+(send|recv)[\\\\\\\\s\\\\\\\\t]+(\\\\\\\\*|\\\\\\\\[\\\\\\\\S+\\\\\\\\](?:[\\\\\\\\s\\\\\\\\t]+\\\\\\\\[\\\\\\\\S+\\\\\\\\])*)' +\\n        //recv [x=330,y=250]\\n        '(?:[\\\\\\\\s\\\\\\\\t]+(recv|send)[\\\\\\\\s\\\\\\\\t]+(\\\\\\\\*|\\\\\\\\[\\\\\\\\S+\\\\\\\\](?:[\\\\\\\\s\\\\\\\\t]+\\\\\\\\[\\\\\\\\S+\\\\\\\\])*))?'\\n      ),\\n      names: ['pt', 'dir1', 'attrs1', 'dir2', 'attrs2'],\\n      format: function (o) {\\n        return 'imageattr:%s %s %s' + (o.dir2 ? ' %s %s' : '');\\n      }\\n    },\\n    { //a=simulcast:send 1,2,3;~4,~5 recv 6;~7,~8\\n      //a=simulcast:recv 1;4,5 send 6;7\\n      name: 'simulcast',\\n      reg: new RegExp(\\n        //a=simulcast:\\n        '^simulcast:' +\\n        //send 1,2,3;~4,~5\\n        '(send|recv) ([a-zA-Z0-9\\\\\\\\-_~;,]+)' +\\n        //space + recv 6;~7,~8\\n        '(?:\\\\\\\\s?(send|recv) ([a-zA-Z0-9\\\\\\\\-_~;,]+))?' +\\n        //end\\n        '$'\\n      ),\\n      names: ['dir1', 'list1', 'dir2', 'list2'],\\n      format: function (o) {\\n        return 'simulcast:%s %s' + (o.dir2 ? ' %s %s' : '');\\n      }\\n    },\\n    { //Old simulcast draft 03 (implemented by Firefox)\\n      //  https://tools.ietf.org/html/draft-ietf-mmusic-sdp-simulcast-03\\n      //a=simulcast: recv pt=97;98 send pt=97\\n      //a=simulcast: send rid=5;6;7 paused=6,7\\n      name: 'simulcast_03',\\n      reg: /^simulcast:[\\\\s\\\\t]+([\\\\S+\\\\s\\\\t]+)$/,\\n      names: ['value'],\\n      format: 'simulcast: %s'\\n    },\\n    {\\n      //a=framerate:25\\n      //a=framerate:29.97\\n      name: 'framerate',\\n      reg: /^framerate:(\\\\d+(?:$|\\\\.\\\\d+))/,\\n      format: 'framerate:%s'\\n    },\\n    { // any a= that we don't understand is kepts verbatim on media.invalid\\n      push: 'invalid',\\n      names: ['value']\\n    }\\n  ]\\n};\\n\\n// set sensible defaults to avoid polluting the grammar with boring details\\nObject.keys(grammar).forEach(function (key) {\\n  var objs = grammar[key];\\n  objs.forEach(function (obj) {\\n    if (!obj.reg) {\\n      obj.reg = /(.*)/;\\n    }\\n    if (!obj.format) {\\n      obj.format = '%s';\\n    }\\n  });\\n});\\n\",\" /* eslint-env node */\\n'use strict';\\n\\n// SDP helpers.\\nvar SDPUtils = {};\\n\\n// Generate an alphanumeric identifier for cname or mids.\\n// TODO: use UUIDs instead? https://gist.github.com/jed/982883\\nSDPUtils.generateIdentifier = function() {\\n  return Math.random().toString(36).substr(2, 10);\\n};\\n\\n// The RTCP CNAME used by all peerconnections from the same JS.\\nSDPUtils.localCName = SDPUtils.generateIdentifier();\\n\\n// Splits SDP into lines, dealing with both CRLF and LF.\\nSDPUtils.splitLines = function(blob) {\\n  return blob.trim().split('\\\\n').map(function(line) {\\n    return line.trim();\\n  });\\n};\\n// Splits SDP into sessionpart and mediasections. Ensures CRLF.\\nSDPUtils.splitSections = function(blob) {\\n  var parts = blob.split('\\\\nm=');\\n  return parts.map(function(part, index) {\\n    return (index > 0 ? 'm=' + part : part).trim() + '\\\\r\\\\n';\\n  });\\n};\\n\\n// returns the session description.\\nSDPUtils.getDescription = function(blob) {\\n  var sections = SDPUtils.splitSections(blob);\\n  return sections && sections[0];\\n};\\n\\n// returns the individual media sections.\\nSDPUtils.getMediaSections = function(blob) {\\n  var sections = SDPUtils.splitSections(blob);\\n  sections.shift();\\n  return sections;\\n};\\n\\n// Returns lines that start with a certain prefix.\\nSDPUtils.matchPrefix = function(blob, prefix) {\\n  return SDPUtils.splitLines(blob).filter(function(line) {\\n    return line.indexOf(prefix) === 0;\\n  });\\n};\\n\\n// Parses an ICE candidate line. Sample input:\\n// candidate:702786350 2 udp 41819902 8.8.8.8 60769 typ relay raddr 8.8.8.8\\n// rport 55996\\\"\\nSDPUtils.parseCandidate = function(line) {\\n  var parts;\\n  // Parse both variants.\\n  if (line.indexOf('a=candidate:') === 0) {\\n    parts = line.substring(12).split(' ');\\n  } else {\\n    parts = line.substring(10).split(' ');\\n  }\\n\\n  var candidate = {\\n    foundation: parts[0],\\n    component: parseInt(parts[1], 10),\\n    protocol: parts[2].toLowerCase(),\\n    priority: parseInt(parts[3], 10),\\n    ip: parts[4],\\n    address: parts[4], // address is an alias for ip.\\n    port: parseInt(parts[5], 10),\\n    // skip parts[6] == 'typ'\\n    type: parts[7]\\n  };\\n\\n  for (var i = 8; i < parts.length; i += 2) {\\n    switch (parts[i]) {\\n      case 'raddr':\\n        candidate.relatedAddress = parts[i + 1];\\n        break;\\n      case 'rport':\\n        candidate.relatedPort = parseInt(parts[i + 1], 10);\\n        break;\\n      case 'tcptype':\\n        candidate.tcpType = parts[i + 1];\\n        break;\\n      case 'ufrag':\\n        candidate.ufrag = parts[i + 1]; // for backward compability.\\n        candidate.usernameFragment = parts[i + 1];\\n        break;\\n      default: // extension handling, in particular ufrag\\n        candidate[parts[i]] = parts[i + 1];\\n        break;\\n    }\\n  }\\n  return candidate;\\n};\\n\\n// Translates a candidate object into SDP candidate attribute.\\nSDPUtils.writeCandidate = function(candidate) {\\n  var sdp = [];\\n  sdp.push(candidate.foundation);\\n  sdp.push(candidate.component);\\n  sdp.push(candidate.protocol.toUpperCase());\\n  sdp.push(candidate.priority);\\n  sdp.push(candidate.address || candidate.ip);\\n  sdp.push(candidate.port);\\n\\n  var type = candidate.type;\\n  sdp.push('typ');\\n  sdp.push(type);\\n  if (type !== 'host' && candidate.relatedAddress &&\\n      candidate.relatedPort) {\\n    sdp.push('raddr');\\n    sdp.push(candidate.relatedAddress);\\n    sdp.push('rport');\\n    sdp.push(candidate.relatedPort);\\n  }\\n  if (candidate.tcpType && candidate.protocol.toLowerCase() === 'tcp') {\\n    sdp.push('tcptype');\\n    sdp.push(candidate.tcpType);\\n  }\\n  if (candidate.usernameFragment || candidate.ufrag) {\\n    sdp.push('ufrag');\\n    sdp.push(candidate.usernameFragment || candidate.ufrag);\\n  }\\n  return 'candidate:' + sdp.join(' ');\\n};\\n\\n// Parses an ice-options line, returns an array of option tags.\\n// a=ice-options:foo bar\\nSDPUtils.parseIceOptions = function(line) {\\n  return line.substr(14).split(' ');\\n};\\n\\n// Parses an rtpmap line, returns RTCRtpCoddecParameters. Sample input:\\n// a=rtpmap:111 opus/48000/2\\nSDPUtils.parseRtpMap = function(line) {\\n  var parts = line.substr(9).split(' ');\\n  var parsed = {\\n    payloadType: parseInt(parts.shift(), 10) // was: id\\n  };\\n\\n  parts = parts[0].split('/');\\n\\n  parsed.name = parts[0];\\n  parsed.clockRate = parseInt(parts[1], 10); // was: clockrate\\n  parsed.channels = parts.length === 3 ? parseInt(parts[2], 10) : 1;\\n  // legacy alias, got renamed back to channels in ORTC.\\n  parsed.numChannels = parsed.channels;\\n  return parsed;\\n};\\n\\n// Generate an a=rtpmap line from RTCRtpCodecCapability or\\n// RTCRtpCodecParameters.\\nSDPUtils.writeRtpMap = function(codec) {\\n  var pt = codec.payloadType;\\n  if (codec.preferredPayloadType !== undefined) {\\n    pt = codec.preferredPayloadType;\\n  }\\n  var channels = codec.channels || codec.numChannels || 1;\\n  return 'a=rtpmap:' + pt + ' ' + codec.name + '/' + codec.clockRate +\\n      (channels !== 1 ? '/' + channels : '') + '\\\\r\\\\n';\\n};\\n\\n// Parses an a=extmap line (headerextension from RFC 5285). Sample input:\\n// a=extmap:2 urn:ietf:params:rtp-hdrext:toffset\\n// a=extmap:2/sendonly urn:ietf:params:rtp-hdrext:toffset\\nSDPUtils.parseExtmap = function(line) {\\n  var parts = line.substr(9).split(' ');\\n  return {\\n    id: parseInt(parts[0], 10),\\n    direction: parts[0].indexOf('/') > 0 ? parts[0].split('/')[1] : 'sendrecv',\\n    uri: parts[1]\\n  };\\n};\\n\\n// Generates a=extmap line from RTCRtpHeaderExtensionParameters or\\n// RTCRtpHeaderExtension.\\nSDPUtils.writeExtmap = function(headerExtension) {\\n  return 'a=extmap:' + (headerExtension.id || headerExtension.preferredId) +\\n      (headerExtension.direction && headerExtension.direction !== 'sendrecv'\\n          ? '/' + headerExtension.direction\\n          : '') +\\n      ' ' + headerExtension.uri + '\\\\r\\\\n';\\n};\\n\\n// Parses an ftmp line, returns dictionary. Sample input:\\n// a=fmtp:96 vbr=on;cng=on\\n// Also deals with vbr=on; cng=on\\nSDPUtils.parseFmtp = function(line) {\\n  var parsed = {};\\n  var kv;\\n  var parts = line.substr(line.indexOf(' ') + 1).split(';');\\n  for (var j = 0; j < parts.length; j++) {\\n    kv = parts[j].trim().split('=');\\n    parsed[kv[0].trim()] = kv[1];\\n  }\\n  return parsed;\\n};\\n\\n// Generates an a=ftmp line from RTCRtpCodecCapability or RTCRtpCodecParameters.\\nSDPUtils.writeFmtp = function(codec) {\\n  var line = '';\\n  var pt = codec.payloadType;\\n  if (codec.preferredPayloadType !== undefined) {\\n    pt = codec.preferredPayloadType;\\n  }\\n  if (codec.parameters && Object.keys(codec.parameters).length) {\\n    var params = [];\\n    Object.keys(codec.parameters).forEach(function(param) {\\n      if (codec.parameters[param]) {\\n        params.push(param + '=' + codec.parameters[param]);\\n      } else {\\n        params.push(param);\\n      }\\n    });\\n    line += 'a=fmtp:' + pt + ' ' + params.join(';') + '\\\\r\\\\n';\\n  }\\n  return line;\\n};\\n\\n// Parses an rtcp-fb line, returns RTCPRtcpFeedback object. Sample input:\\n// a=rtcp-fb:98 nack rpsi\\nSDPUtils.parseRtcpFb = function(line) {\\n  var parts = line.substr(line.indexOf(' ') + 1).split(' ');\\n  return {\\n    type: parts.shift(),\\n    parameter: parts.join(' ')\\n  };\\n};\\n// Generate a=rtcp-fb lines from RTCRtpCodecCapability or RTCRtpCodecParameters.\\nSDPUtils.writeRtcpFb = function(codec) {\\n  var lines = '';\\n  var pt = codec.payloadType;\\n  if (codec.preferredPayloadType !== undefined) {\\n    pt = codec.preferredPayloadType;\\n  }\\n  if (codec.rtcpFeedback && codec.rtcpFeedback.length) {\\n    // FIXME: special handling for trr-int?\\n    codec.rtcpFeedback.forEach(function(fb) {\\n      lines += 'a=rtcp-fb:' + pt + ' ' + fb.type +\\n      (fb.parameter && fb.parameter.length ? ' ' + fb.parameter : '') +\\n          '\\\\r\\\\n';\\n    });\\n  }\\n  return lines;\\n};\\n\\n// Parses an RFC 5576 ssrc media attribute. Sample input:\\n// a=ssrc:3735928559 cname:something\\nSDPUtils.parseSsrcMedia = function(line) {\\n  var sp = line.indexOf(' ');\\n  var parts = {\\n    ssrc: parseInt(line.substr(7, sp - 7), 10)\\n  };\\n  var colon = line.indexOf(':', sp);\\n  if (colon > -1) {\\n    parts.attribute = line.substr(sp + 1, colon - sp - 1);\\n    parts.value = line.substr(colon + 1);\\n  } else {\\n    parts.attribute = line.substr(sp + 1);\\n  }\\n  return parts;\\n};\\n\\nSDPUtils.parseSsrcGroup = function(line) {\\n  var parts = line.substr(13).split(' ');\\n  return {\\n    semantics: parts.shift(),\\n    ssrcs: parts.map(function(ssrc) {\\n      return parseInt(ssrc, 10);\\n    })\\n  };\\n};\\n\\n// Extracts the MID (RFC 5888) from a media section.\\n// returns the MID or undefined if no mid line was found.\\nSDPUtils.getMid = function(mediaSection) {\\n  var mid = SDPUtils.matchPrefix(mediaSection, 'a=mid:')[0];\\n  if (mid) {\\n    return mid.substr(6);\\n  }\\n};\\n\\nSDPUtils.parseFingerprint = function(line) {\\n  var parts = line.substr(14).split(' ');\\n  return {\\n    algorithm: parts[0].toLowerCase(), // algorithm is case-sensitive in Edge.\\n    value: parts[1]\\n  };\\n};\\n\\n// Extracts DTLS parameters from SDP media section or sessionpart.\\n// FIXME: for consistency with other functions this should only\\n//   get the fingerprint line as input. See also getIceParameters.\\nSDPUtils.getDtlsParameters = function(mediaSection, sessionpart) {\\n  var lines = SDPUtils.matchPrefix(mediaSection + sessionpart,\\n      'a=fingerprint:');\\n  // Note: a=setup line is ignored since we use the 'auto' role.\\n  // Note2: 'algorithm' is not case sensitive except in Edge.\\n  return {\\n    role: 'auto',\\n    fingerprints: lines.map(SDPUtils.parseFingerprint)\\n  };\\n};\\n\\n// Serializes DTLS parameters to SDP.\\nSDPUtils.writeDtlsParameters = function(params, setupType) {\\n  var sdp = 'a=setup:' + setupType + '\\\\r\\\\n';\\n  params.fingerprints.forEach(function(fp) {\\n    sdp += 'a=fingerprint:' + fp.algorithm + ' ' + fp.value + '\\\\r\\\\n';\\n  });\\n  return sdp;\\n};\\n// Parses ICE information from SDP media section or sessionpart.\\n// FIXME: for consistency with other functions this should only\\n//   get the ice-ufrag and ice-pwd lines as input.\\nSDPUtils.getIceParameters = function(mediaSection, sessionpart) {\\n  var lines = SDPUtils.splitLines(mediaSection);\\n  // Search in session part, too.\\n  lines = lines.concat(SDPUtils.splitLines(sessionpart));\\n  var iceParameters = {\\n    usernameFragment: lines.filter(function(line) {\\n      return line.indexOf('a=ice-ufrag:') === 0;\\n    })[0].substr(12),\\n    password: lines.filter(function(line) {\\n      return line.indexOf('a=ice-pwd:') === 0;\\n    })[0].substr(10)\\n  };\\n  return iceParameters;\\n};\\n\\n// Serializes ICE parameters to SDP.\\nSDPUtils.writeIceParameters = function(params) {\\n  return 'a=ice-ufrag:' + params.usernameFragment + '\\\\r\\\\n' +\\n      'a=ice-pwd:' + params.password + '\\\\r\\\\n';\\n};\\n\\n// Parses the SDP media section and returns RTCRtpParameters.\\nSDPUtils.parseRtpParameters = function(mediaSection) {\\n  var description = {\\n    codecs: [],\\n    headerExtensions: [],\\n    fecMechanisms: [],\\n    rtcp: []\\n  };\\n  var lines = SDPUtils.splitLines(mediaSection);\\n  var mline = lines[0].split(' ');\\n  for (var i = 3; i < mline.length; i++) { // find all codecs from mline[3..]\\n    var pt = mline[i];\\n    var rtpmapline = SDPUtils.matchPrefix(\\n        mediaSection, 'a=rtpmap:' + pt + ' ')[0];\\n    if (rtpmapline) {\\n      var codec = SDPUtils.parseRtpMap(rtpmapline);\\n      var fmtps = SDPUtils.matchPrefix(\\n          mediaSection, 'a=fmtp:' + pt + ' ');\\n      // Only the first a=fmtp:<pt> is considered.\\n      codec.parameters = fmtps.length ? SDPUtils.parseFmtp(fmtps[0]) : {};\\n      codec.rtcpFeedback = SDPUtils.matchPrefix(\\n          mediaSection, 'a=rtcp-fb:' + pt + ' ')\\n        .map(SDPUtils.parseRtcpFb);\\n      description.codecs.push(codec);\\n      // parse FEC mechanisms from rtpmap lines.\\n      switch (codec.name.toUpperCase()) {\\n        case 'RED':\\n        case 'ULPFEC':\\n          description.fecMechanisms.push(codec.name.toUpperCase());\\n          break;\\n        default: // only RED and ULPFEC are recognized as FEC mechanisms.\\n          break;\\n      }\\n    }\\n  }\\n  SDPUtils.matchPrefix(mediaSection, 'a=extmap:').forEach(function(line) {\\n    description.headerExtensions.push(SDPUtils.parseExtmap(line));\\n  });\\n  // FIXME: parse rtcp.\\n  return description;\\n};\\n\\n// Generates parts of the SDP media section describing the capabilities /\\n// parameters.\\nSDPUtils.writeRtpDescription = function(kind, caps) {\\n  var sdp = '';\\n\\n  // Build the mline.\\n  sdp += 'm=' + kind + ' ';\\n  sdp += caps.codecs.length > 0 ? '9' : '0'; // reject if no codecs.\\n  sdp += ' UDP/TLS/RTP/SAVPF ';\\n  sdp += caps.codecs.map(function(codec) {\\n    if (codec.preferredPayloadType !== undefined) {\\n      return codec.preferredPayloadType;\\n    }\\n    return codec.payloadType;\\n  }).join(' ') + '\\\\r\\\\n';\\n\\n  sdp += 'c=IN IP4 0.0.0.0\\\\r\\\\n';\\n  sdp += 'a=rtcp:9 IN IP4 0.0.0.0\\\\r\\\\n';\\n\\n  // Add a=rtpmap lines for each codec. Also fmtp and rtcp-fb.\\n  caps.codecs.forEach(function(codec) {\\n    sdp += SDPUtils.writeRtpMap(codec);\\n    sdp += SDPUtils.writeFmtp(codec);\\n    sdp += SDPUtils.writeRtcpFb(codec);\\n  });\\n  var maxptime = 0;\\n  caps.codecs.forEach(function(codec) {\\n    if (codec.maxptime > maxptime) {\\n      maxptime = codec.maxptime;\\n    }\\n  });\\n  if (maxptime > 0) {\\n    sdp += 'a=maxptime:' + maxptime + '\\\\r\\\\n';\\n  }\\n  sdp += 'a=rtcp-mux\\\\r\\\\n';\\n\\n  if (caps.headerExtensions) {\\n    caps.headerExtensions.forEach(function(extension) {\\n      sdp += SDPUtils.writeExtmap(extension);\\n    });\\n  }\\n  // FIXME: write fecMechanisms.\\n  return sdp;\\n};\\n\\n// Parses the SDP media section and returns an array of\\n// RTCRtpEncodingParameters.\\nSDPUtils.parseRtpEncodingParameters = function(mediaSection) {\\n  var encodingParameters = [];\\n  var description = SDPUtils.parseRtpParameters(mediaSection);\\n  var hasRed = description.fecMechanisms.indexOf('RED') !== -1;\\n  var hasUlpfec = description.fecMechanisms.indexOf('ULPFEC') !== -1;\\n\\n  // filter a=ssrc:... cname:, ignore PlanB-msid\\n  var ssrcs = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\\n  .map(function(line) {\\n    return SDPUtils.parseSsrcMedia(line);\\n  })\\n  .filter(function(parts) {\\n    return parts.attribute === 'cname';\\n  });\\n  var primarySsrc = ssrcs.length > 0 && ssrcs[0].ssrc;\\n  var secondarySsrc;\\n\\n  var flows = SDPUtils.matchPrefix(mediaSection, 'a=ssrc-group:FID')\\n  .map(function(line) {\\n    var parts = line.substr(17).split(' ');\\n    return parts.map(function(part) {\\n      return parseInt(part, 10);\\n    });\\n  });\\n  if (flows.length > 0 && flows[0].length > 1 && flows[0][0] === primarySsrc) {\\n    secondarySsrc = flows[0][1];\\n  }\\n\\n  description.codecs.forEach(function(codec) {\\n    if (codec.name.toUpperCase() === 'RTX' && codec.parameters.apt) {\\n      var encParam = {\\n        ssrc: primarySsrc,\\n        codecPayloadType: parseInt(codec.parameters.apt, 10)\\n      };\\n      if (primarySsrc && secondarySsrc) {\\n        encParam.rtx = {ssrc: secondarySsrc};\\n      }\\n      encodingParameters.push(encParam);\\n      if (hasRed) {\\n        encParam = JSON.parse(JSON.stringify(encParam));\\n        encParam.fec = {\\n          ssrc: primarySsrc,\\n          mechanism: hasUlpfec ? 'red+ulpfec' : 'red'\\n        };\\n        encodingParameters.push(encParam);\\n      }\\n    }\\n  });\\n  if (encodingParameters.length === 0 && primarySsrc) {\\n    encodingParameters.push({\\n      ssrc: primarySsrc\\n    });\\n  }\\n\\n  // we support both b=AS and b=TIAS but interpret AS as TIAS.\\n  var bandwidth = SDPUtils.matchPrefix(mediaSection, 'b=');\\n  if (bandwidth.length) {\\n    if (bandwidth[0].indexOf('b=TIAS:') === 0) {\\n      bandwidth = parseInt(bandwidth[0].substr(7), 10);\\n    } else if (bandwidth[0].indexOf('b=AS:') === 0) {\\n      // use formula from JSEP to convert b=AS to TIAS value.\\n      bandwidth = parseInt(bandwidth[0].substr(5), 10) * 1000 * 0.95\\n          - (50 * 40 * 8);\\n    } else {\\n      bandwidth = undefined;\\n    }\\n    encodingParameters.forEach(function(params) {\\n      params.maxBitrate = bandwidth;\\n    });\\n  }\\n  return encodingParameters;\\n};\\n\\n// parses http://draft.ortc.org/#rtcrtcpparameters*\\nSDPUtils.parseRtcpParameters = function(mediaSection) {\\n  var rtcpParameters = {};\\n\\n  // Gets the first SSRC. Note tha with RTX there might be multiple\\n  // SSRCs.\\n  var remoteSsrc = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\\n      .map(function(line) {\\n        return SDPUtils.parseSsrcMedia(line);\\n      })\\n      .filter(function(obj) {\\n        return obj.attribute === 'cname';\\n      })[0];\\n  if (remoteSsrc) {\\n    rtcpParameters.cname = remoteSsrc.value;\\n    rtcpParameters.ssrc = remoteSsrc.ssrc;\\n  }\\n\\n  // Edge uses the compound attribute instead of reducedSize\\n  // compound is !reducedSize\\n  var rsize = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-rsize');\\n  rtcpParameters.reducedSize = rsize.length > 0;\\n  rtcpParameters.compound = rsize.length === 0;\\n\\n  // parses the rtcp-mux attrіbute.\\n  // Note that Edge does not support unmuxed RTCP.\\n  var mux = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-mux');\\n  rtcpParameters.mux = mux.length > 0;\\n\\n  return rtcpParameters;\\n};\\n\\n// parses either a=msid: or a=ssrc:... msid lines and returns\\n// the id of the MediaStream and MediaStreamTrack.\\nSDPUtils.parseMsid = function(mediaSection) {\\n  var parts;\\n  var spec = SDPUtils.matchPrefix(mediaSection, 'a=msid:');\\n  if (spec.length === 1) {\\n    parts = spec[0].substr(7).split(' ');\\n    return {stream: parts[0], track: parts[1]};\\n  }\\n  var planB = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\\n  .map(function(line) {\\n    return SDPUtils.parseSsrcMedia(line);\\n  })\\n  .filter(function(msidParts) {\\n    return msidParts.attribute === 'msid';\\n  });\\n  if (planB.length > 0) {\\n    parts = planB[0].value.split(' ');\\n    return {stream: parts[0], track: parts[1]};\\n  }\\n};\\n\\n// Generate a session ID for SDP.\\n// https://tools.ietf.org/html/draft-ietf-rtcweb-jsep-20#section-5.2.1\\n// recommends using a cryptographically random +ve 64-bit value\\n// but right now this should be acceptable and within the right range\\nSDPUtils.generateSessionId = function() {\\n  return Math.random().toString().substr(2, 21);\\n};\\n\\n// Write boilder plate for start of SDP\\n// sessId argument is optional - if not supplied it will\\n// be generated randomly\\n// sessVersion is optional and defaults to 2\\n// sessUser is optional and defaults to 'thisisadapterortc'\\nSDPUtils.writeSessionBoilerplate = function(sessId, sessVer, sessUser) {\\n  var sessionId;\\n  var version = sessVer !== undefined ? sessVer : 2;\\n  if (sessId) {\\n    sessionId = sessId;\\n  } else {\\n    sessionId = SDPUtils.generateSessionId();\\n  }\\n  var user = sessUser || 'thisisadapterortc';\\n  // FIXME: sess-id should be an NTP timestamp.\\n  return 'v=0\\\\r\\\\n' +\\n      'o=' + user + ' ' + sessionId + ' ' + version +\\n        ' IN IP4 127.0.0.1\\\\r\\\\n' +\\n      's=-\\\\r\\\\n' +\\n      't=0 0\\\\r\\\\n';\\n};\\n\\nSDPUtils.writeMediaSection = function(transceiver, caps, type, stream) {\\n  var sdp = SDPUtils.writeRtpDescription(transceiver.kind, caps);\\n\\n  // Map ICE parameters (ufrag, pwd) to SDP.\\n  sdp += SDPUtils.writeIceParameters(\\n      transceiver.iceGatherer.getLocalParameters());\\n\\n  // Map DTLS parameters to SDP.\\n  sdp += SDPUtils.writeDtlsParameters(\\n      transceiver.dtlsTransport.getLocalParameters(),\\n      type === 'offer' ? 'actpass' : 'active');\\n\\n  sdp += 'a=mid:' + transceiver.mid + '\\\\r\\\\n';\\n\\n  if (transceiver.direction) {\\n    sdp += 'a=' + transceiver.direction + '\\\\r\\\\n';\\n  } else if (transceiver.rtpSender && transceiver.rtpReceiver) {\\n    sdp += 'a=sendrecv\\\\r\\\\n';\\n  } else if (transceiver.rtpSender) {\\n    sdp += 'a=sendonly\\\\r\\\\n';\\n  } else if (transceiver.rtpReceiver) {\\n    sdp += 'a=recvonly\\\\r\\\\n';\\n  } else {\\n    sdp += 'a=inactive\\\\r\\\\n';\\n  }\\n\\n  if (transceiver.rtpSender) {\\n    // spec.\\n    var msid = 'msid:' + stream.id + ' ' +\\n        transceiver.rtpSender.track.id + '\\\\r\\\\n';\\n    sdp += 'a=' + msid;\\n\\n    // for Chrome.\\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\\n        ' ' + msid;\\n    if (transceiver.sendEncodingParameters[0].rtx) {\\n      sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\\n          ' ' + msid;\\n      sdp += 'a=ssrc-group:FID ' +\\n          transceiver.sendEncodingParameters[0].ssrc + ' ' +\\n          transceiver.sendEncodingParameters[0].rtx.ssrc +\\n          '\\\\r\\\\n';\\n    }\\n  }\\n  // FIXME: this should be written by writeRtpDescription.\\n  sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\\n      ' cname:' + SDPUtils.localCName + '\\\\r\\\\n';\\n  if (transceiver.rtpSender && transceiver.sendEncodingParameters[0].rtx) {\\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\\n        ' cname:' + SDPUtils.localCName + '\\\\r\\\\n';\\n  }\\n  return sdp;\\n};\\n\\n// Gets the direction from the mediaSection or the sessionpart.\\nSDPUtils.getDirection = function(mediaSection, sessionpart) {\\n  // Look for sendrecv, sendonly, recvonly, inactive, default to sendrecv.\\n  var lines = SDPUtils.splitLines(mediaSection);\\n  for (var i = 0; i < lines.length; i++) {\\n    switch (lines[i]) {\\n      case 'a=sendrecv':\\n      case 'a=sendonly':\\n      case 'a=recvonly':\\n      case 'a=inactive':\\n        return lines[i].substr(2);\\n      default:\\n        // FIXME: What should happen here?\\n    }\\n  }\\n  if (sessionpart) {\\n    return SDPUtils.getDirection(sessionpart);\\n  }\\n  return 'sendrecv';\\n};\\n\\nSDPUtils.getKind = function(mediaSection) {\\n  var lines = SDPUtils.splitLines(mediaSection);\\n  var mline = lines[0].split(' ');\\n  return mline[0].substr(2);\\n};\\n\\nSDPUtils.isRejected = function(mediaSection) {\\n  return mediaSection.split(' ', 2)[1] === '0';\\n};\\n\\nSDPUtils.parseMLine = function(mediaSection) {\\n  var lines = SDPUtils.splitLines(mediaSection);\\n  var parts = lines[0].substr(2).split(' ');\\n  return {\\n    kind: parts[0],\\n    port: parseInt(parts[1], 10),\\n    protocol: parts[2],\\n    fmt: parts.slice(3).join(' ')\\n  };\\n};\\n\\nSDPUtils.parseOLine = function(mediaSection) {\\n  var line = SDPUtils.matchPrefix(mediaSection, 'o=')[0];\\n  var parts = line.substr(2).split(' ');\\n  return {\\n    username: parts[0],\\n    sessionId: parts[1],\\n    sessionVersion: parseInt(parts[2], 10),\\n    netType: parts[3],\\n    addressType: parts[4],\\n    address: parts[5]\\n  };\\n};\\n\\n// a very naive interpretation of a valid SDP.\\nSDPUtils.isValidSDP = function(blob) {\\n  if (typeof blob !== 'string' || blob.length === 0) {\\n    return false;\\n  }\\n  var lines = SDPUtils.splitLines(blob);\\n  for (var i = 0; i < lines.length; i++) {\\n    if (lines[i].length < 2 || lines[i].charAt(1) !== '=') {\\n      return false;\\n    }\\n    // TODO: check the modifier a bit more.\\n  }\\n  return true;\\n};\\n\\n// Expose public methods.\\nif (typeof module === 'object') {\\n  module.exports = SDPUtils;\\n}\\n\",\"/* global MediaRecorder, MediaStream */\\n\\nconst RecordingResult = require('./recordingResult');\\n\\n/**\\n * Possible audio formats MIME types\\n */\\nconst AUDIO_WEBM = 'audio/webm'; // Supported in chrome\\nconst AUDIO_OGG = 'audio/ogg'; // Supported in firefox\\n\\n/**\\n * A TrackRecorder object holds all the information needed for recording a\\n * single JitsiTrack (either remote or local)\\n * @param track The JitsiTrack the object is going to hold\\n */\\nconst TrackRecorder = function(track) {\\n    // The JitsiTrack holding the stream\\n    this.track = track;\\n\\n    // The MediaRecorder recording the stream\\n    this.recorder = null;\\n\\n    // The array of data chunks recorded from the stream\\n    // acts as a buffer until the data is stored on disk\\n    this.data = null;\\n\\n    // the name of the person of the JitsiTrack. This can be undefined and/or\\n    // not unique\\n    this.name = null;\\n\\n    // the time of the start of the recording\\n    this.startTime = null;\\n};\\n\\n/**\\n * Starts the recording of a JitsiTrack in a TrackRecorder object.\\n * This will also define the timestamp and try to update the name\\n * @param trackRecorder the TrackRecorder to start\\n */\\nfunction startRecorder(trackRecorder) {\\n    if (trackRecorder.recorder === undefined) {\\n        throw new Error('Passed an object to startRecorder which is not a '\\n            + 'TrackRecorder object');\\n    }\\n    trackRecorder.recorder.start();\\n    trackRecorder.startTime = new Date();\\n}\\n\\n/**\\n * Stops the recording of a JitsiTrack in a TrackRecorder object.\\n * This will also try to update the name\\n * @param trackRecorder the TrackRecorder to stop\\n */\\nfunction stopRecorder(trackRecorder) {\\n    if (trackRecorder.recorder === undefined) {\\n        throw new Error('Passed an object to stopRecorder which is not a '\\n            + 'TrackRecorder object');\\n    }\\n    trackRecorder.recorder.stop();\\n}\\n\\n/**\\n * Determines which kind of audio recording the browser supports\\n * chrome supports \\\"audio/webm\\\" and firefox supports \\\"audio/ogg\\\"\\n */\\nfunction determineCorrectFileType() {\\n    if (MediaRecorder.isTypeSupported(AUDIO_WEBM)) {\\n        return AUDIO_WEBM;\\n    } else if (MediaRecorder.isTypeSupported(AUDIO_OGG)) {\\n        return AUDIO_OGG;\\n    }\\n    throw new Error(\\n        'unable to create a MediaRecorder with the right mimetype!');\\n}\\n\\n/**\\n * main exported object of the file, holding all\\n * relevant functions and variables for the outside world\\n * @param jitsiConference the jitsiConference which this object\\n * is going to record\\n */\\nfunction AudioRecorder(jitsiConference) {\\n    // array of TrackRecorders, where each trackRecorder\\n    // holds the JitsiTrack, MediaRecorder and recorder data\\n    this.recorders = [];\\n\\n    // get which file type is supported by the current browser\\n    this.fileType = determineCorrectFileType();\\n\\n    // boolean flag for active recording\\n    this.isRecording = false;\\n\\n    // the jitsiconference the object is recording\\n    this.jitsiConference = jitsiConference;\\n}\\n\\n/**\\n * Add the the exported module so that it can be accessed by other files\\n */\\nAudioRecorder.determineCorrectFileType = determineCorrectFileType;\\n\\n/**\\n * Adds a new TrackRecorder object to the array.\\n *\\n * @param track the track potentially holding an audio stream\\n */\\nAudioRecorder.prototype.addTrack = function(track) {\\n    if (track.isAudioTrack()) {\\n        // create the track recorder\\n        const trackRecorder = this.instantiateTrackRecorder(track);\\n\\n        // push it to the local array of all recorders\\n\\n        this.recorders.push(trackRecorder);\\n\\n        // update the name of the trackRecorders\\n        this.updateNames();\\n\\n        // If we're already recording, immediately start recording this new\\n        // track.\\n        if (this.isRecording) {\\n            startRecorder(trackRecorder);\\n        }\\n    }\\n};\\n\\n/**\\n * Creates a TrackRecorder object. Also creates the MediaRecorder and\\n * data array for the trackRecorder.\\n * @param track the JitsiTrack holding the audio MediaStream(s)\\n */\\nAudioRecorder.prototype.instantiateTrackRecorder = function(track) {\\n    const trackRecorder = new TrackRecorder(track);\\n\\n    // Create a new stream which only holds the audio track\\n    const originalStream = trackRecorder.track.getOriginalStream();\\n    const stream = createEmptyStream();\\n\\n    originalStream.getAudioTracks().forEach(t => stream.addTrack(t));\\n\\n    // Create the MediaRecorder\\n    trackRecorder.recorder = new MediaRecorder(stream,\\n        { mimeType: this.fileType });\\n\\n    // array for holding the recorder data. Resets it when\\n    // audio already has been recorder once\\n    trackRecorder.data = [];\\n\\n    // function handling a dataEvent, e.g the stream gets new data\\n    trackRecorder.recorder.ondataavailable = function(dataEvent) {\\n        if (dataEvent.data.size > 0) {\\n            trackRecorder.data.push(dataEvent.data);\\n        }\\n    };\\n\\n    return trackRecorder;\\n};\\n\\n/**\\n * Notifies the module that a specific track has stopped, e.g participant left\\n * the conference.\\n * if the recording has not started yet, the TrackRecorder will be removed from\\n * the array. If the recording has started, the recorder will stop recording\\n * but not removed from the array so that the recorded stream can still be\\n * accessed\\n *\\n * @param {JitsiTrack} track the JitsiTrack to remove from the recording session\\n */\\nAudioRecorder.prototype.removeTrack = function(track) {\\n    if (track.isVideoTrack()) {\\n        return;\\n    }\\n\\n    const array = this.recorders;\\n    let i;\\n\\n    for (i = 0; i < array.length; i++) {\\n        if (array[i].track.getParticipantId() === track.getParticipantId()) {\\n            const recorderToRemove = array[i];\\n\\n            if (this.isRecording) {\\n                stopRecorder(recorderToRemove);\\n            } else {\\n                // remove the TrackRecorder from the array\\n                array.splice(i, 1);\\n            }\\n        }\\n    }\\n\\n    // make sure the names are up to date\\n    this.updateNames();\\n};\\n\\n/**\\n * Tries to update the name value of all TrackRecorder in the array.\\n * If it hasn't changed,it will keep the exiting name. If it changes to a\\n * undefined value, the old value will also be kept.\\n */\\nAudioRecorder.prototype.updateNames = function() {\\n    const conference = this.jitsiConference;\\n\\n    this.recorders.forEach(trackRecorder => {\\n        if (trackRecorder.track.isLocal()) {\\n            trackRecorder.name = 'the transcriber';\\n        } else {\\n            const id = trackRecorder.track.getParticipantId();\\n            const participant = conference.getParticipantById(id);\\n            const newName = participant.getDisplayName();\\n\\n            if (newName !== 'undefined') {\\n                trackRecorder.name = newName;\\n            }\\n        }\\n    });\\n};\\n\\n/**\\n * Starts the audio recording of every local and remote track\\n */\\nAudioRecorder.prototype.start = function() {\\n    if (this.isRecording) {\\n        throw new Error('audiorecorder is already recording');\\n    }\\n\\n    // set boolean isRecording flag to true so if new participants join the\\n    // conference, that track can instantly start recording as well\\n    this.isRecording = true;\\n\\n    // start all the mediaRecorders\\n    this.recorders.forEach(trackRecorder => startRecorder(trackRecorder));\\n\\n    // log that recording has started\\n    console.log(\\n        `Started the recording of the audio. There are currently ${\\n            this.recorders.length} recorders active.`);\\n};\\n\\n/**\\n * Stops the audio recording of every local and remote track\\n */\\nAudioRecorder.prototype.stop = function() {\\n    // set the boolean flag to false\\n    this.isRecording = false;\\n\\n    // stop all recorders\\n    this.recorders.forEach(trackRecorder => stopRecorder(trackRecorder));\\n    console.log('stopped recording');\\n};\\n\\n/**\\n * link hacking to download all recorded audio streams\\n */\\nAudioRecorder.prototype.download = function() {\\n    this.recorders.forEach(trackRecorder => {\\n        const blob = new Blob(trackRecorder.data, { type: this.fileType });\\n        const url = URL.createObjectURL(blob);\\n        const a = document.createElement('a');\\n\\n        document.body.appendChild(a);\\n        a.style = 'display: none';\\n        a.href = url;\\n        a.download = `test.${this.fileType.split('/')[1]}`;\\n        a.click();\\n        window.URL.revokeObjectURL(url);\\n    });\\n};\\n\\n/**\\n * returns the audio files of all recorders as an array of objects,\\n * which include the name of the owner of the track and the starting time stamp\\n * @returns {Array} an array of RecordingResult objects\\n */\\nAudioRecorder.prototype.getRecordingResults = function() {\\n    if (this.isRecording) {\\n        throw new Error(\\n            'cannot get blobs because the AudioRecorder is still recording!');\\n    }\\n\\n    // make sure the names are up to date before sending them off\\n    this.updateNames();\\n\\n    const array = [];\\n\\n    this.recorders.forEach(\\n        recorder =>\\n            array.push(\\n                new RecordingResult(\\n                    new Blob(recorder.data, { type: this.fileType }),\\n                    recorder.name,\\n                    recorder.startTime)));\\n\\n    return array;\\n};\\n\\n/**\\n * Gets the mime type of the recorder audio\\n * @returns {String} the mime type of the recorder audio\\n */\\nAudioRecorder.prototype.getFileType = function() {\\n    return this.fileType;\\n};\\n\\n/**\\n * Creates a empty MediaStream object which can be used\\n * to add MediaStreamTracks to\\n * @returns MediaStream\\n */\\nfunction createEmptyStream() {\\n    if (typeof MediaStream !== 'undefined') {\\n        return new MediaStream();\\n    }\\n    throw new Error('cannot create a clean mediaStream');\\n}\\n\\n/**\\n * export the main object AudioRecorder\\n */\\nmodule.exports = AudioRecorder;\\n\",\"const AuthUtil = {\\n    /**\\n     * Creates the URL pointing to JWT token authentication service. It is\\n     * formatted from the 'urlPattern' argument which can contain the following\\n     * constants:\\n     * '{room}' - name of the conference room passed as <tt>roomName</tt>\\n     * argument to this method.\\n     * '{roleUpgrade}' - will contain 'true' if the URL will be used for\\n     * the role upgrade scenario, where user connects from anonymous domain and\\n     * then gets upgraded to the moderator by logging-in from the popup window.\\n     *\\n     * @param urlPattern a URL pattern pointing to the login service\\n     * @param roomName the name of the conference room for which the user will\\n     * be authenticated\\n     * @param {bool} roleUpgrade <tt>true</tt> if the URL will be used for role\\n     * upgrade scenario, where the user logs-in from the popup window in order\\n     * to have the moderator rights granted\\n     *\\n     * @returns {string|null} the URL pointing to JWT login service or\\n     * <tt>null</tt> if 'urlPattern' is not a string and the URL can not be\\n     * constructed.\\n     */\\n    getTokenAuthUrl(urlPattern, roomName, roleUpgrade) {\\n        const url = urlPattern;\\n\\n        if (typeof url !== 'string') {\\n            return null;\\n        }\\n\\n        return url.replace('{room}', roomName)\\n            .replace('{roleUpgrade}', roleUpgrade === true);\\n    }\\n};\\n\\nmodule.exports = AuthUtil;\\n\",\"import {\\n    CONNECTION_DISCONNECTED as ANALYTICS_CONNECTION_DISCONNECTED,\\n    createConnectionFailedEvent\\n} from './service/statistics/AnalyticsEvents';\\nimport JitsiConference from './JitsiConference';\\nimport * as JitsiConnectionEvents from './JitsiConnectionEvents';\\nimport Statistics from './modules/statistics/statistics';\\nimport XMPP from './modules/xmpp/xmpp';\\n\\n/**\\n * Creates a new connection object for the Jitsi Meet server side video\\n * conferencing service. Provides access to the JitsiConference interface.\\n * @param appID identification for the provider of Jitsi Meet video conferencing\\n * services.\\n * @param token the JWT token used to authenticate with the server(optional)\\n * @param options Object with properties / settings related to connection with\\n * the server.\\n * @constructor\\n */\\nexport default function JitsiConnection(appID, token, options) {\\n    this.appID = appID;\\n    this.token = token;\\n    this.options = options;\\n    this.xmpp = new XMPP(options, token);\\n\\n    /* eslint-disable max-params */\\n    this.addEventListener(JitsiConnectionEvents.CONNECTION_FAILED,\\n        (errType, msg, credentials, details) => {\\n            Statistics.sendAnalyticsAndLog(\\n                createConnectionFailedEvent(errType, msg, details));\\n        });\\n    /* eslint-enable max-params */\\n\\n    this.addEventListener(JitsiConnectionEvents.CONNECTION_DISCONNECTED,\\n        msg => {\\n            // we can see disconnects from normal tab closing of the browser\\n            // and then there are no msgs, but we want to log only disconnects\\n            // when there is real error\\n            // XXX Do we need the difference in handling between the log and\\n            // analytics event here?\\n            if (msg) {\\n                Statistics.sendAnalytics(\\n                    ANALYTICS_CONNECTION_DISCONNECTED,\\n                    { message: msg });\\n            }\\n            Statistics.sendLog(\\n                JSON.stringify(\\n                    {\\n                        id: ANALYTICS_CONNECTION_DISCONNECTED,\\n                        msg\\n                    }));\\n        });\\n}\\n\\n/**\\n * Connect the client with the server.\\n * @param options {object} connecting options\\n * (for example authentications parameters).\\n */\\nJitsiConnection.prototype.connect = function(options = {}) {\\n    this.xmpp.connect(options.id, options.password);\\n};\\n\\n/**\\n * Attach to existing connection. Can be used for optimizations. For example:\\n * if the connection is created on the server we can attach to it and start\\n * using it.\\n *\\n * @param options {object} connecting options - rid, sid and jid.\\n */\\nJitsiConnection.prototype.attach = function(options) {\\n    this.xmpp.attach(options);\\n};\\n\\n/**\\n * Disconnect the client from the server.\\n */\\nJitsiConnection.prototype.disconnect = function(...args) {\\n    // XXX Forward any arguments passed to JitsiConnection.disconnect to\\n    // XMPP.disconnect. For example, the caller of JitsiConnection.disconnect\\n    // may optionally pass the event which triggered the disconnect in order to\\n    // provide the implementation with finer-grained context.\\n    this.xmpp.disconnect(...args);\\n};\\n\\n/**\\n * This method allows renewal of the tokens if they are expiring.\\n * @param token the new token.\\n */\\nJitsiConnection.prototype.setToken = function(token) {\\n    this.token = token;\\n};\\n\\n/**\\n * Creates and joins new conference.\\n * @param name the name of the conference; if null - a generated name will be\\n * provided from the api\\n * @param options Object with properties / settings related to the conference\\n * that will be created.\\n * @returns {JitsiConference} returns the new conference object.\\n */\\nJitsiConnection.prototype.initJitsiConference = function(name, options) {\\n    return new JitsiConference({\\n        name,\\n        config: options,\\n        connection: this\\n    });\\n};\\n\\n/**\\n * Subscribes the passed listener to the event.\\n * @param event {JitsiConnectionEvents} the connection event.\\n * @param listener {Function} the function that will receive the event\\n */\\nJitsiConnection.prototype.addEventListener = function(event, listener) {\\n    this.xmpp.addListener(event, listener);\\n};\\n\\n/**\\n * Unsubscribes the passed handler.\\n * @param event {JitsiConnectionEvents} the connection event.\\n * @param listener {Function} the function that will receive the event\\n */\\nJitsiConnection.prototype.removeEventListener = function(event, listener) {\\n    this.xmpp.removeListener(event, listener);\\n};\\n\\n/**\\n * Returns measured connectionTimes.\\n */\\nJitsiConnection.prototype.getConnectionTimes = function() {\\n    return this.xmpp.connectionTimes;\\n};\\n\\n/**\\n * Adds new feature to the list of supported features for the local\\n * participant.\\n * @param {String} feature the name of the feature.\\n * @param {boolean} submit if true - the new list of features will be\\n * immediately submitted to the others.\\n */\\nJitsiConnection.prototype.addFeature = function(feature, submit = false) {\\n    return this.xmpp.caps.addFeature(feature, submit);\\n};\\n\\n/**\\n * Removes a feature from the list of supported features for the local\\n * participant\\n * @param {String} feature the name of the feature.\\n * @param {boolean} submit if true - the new list of features will be\\n * immediately submitted to the others.\\n */\\nJitsiConnection.prototype.removeFeature = function(feature, submit = false) {\\n    return this.xmpp.caps.removeFeature(feature, submit);\\n};\\n\",\"/* global __filename, $, Promise */\\nimport { Strophe } from 'strophe.js';\\n\\nimport EventEmitter from 'events';\\nimport { getLogger } from 'jitsi-meet-logger';\\nimport isEqual from 'lodash.isequal';\\n\\nimport * as JitsiConferenceErrors from './JitsiConferenceErrors';\\nimport JitsiConferenceEventManager from './JitsiConferenceEventManager';\\nimport * as JitsiConferenceEvents from './JitsiConferenceEvents';\\nimport JitsiParticipant from './JitsiParticipant';\\nimport JitsiTrackError from './JitsiTrackError';\\nimport * as JitsiTrackErrors from './JitsiTrackErrors';\\nimport * as JitsiTrackEvents from './JitsiTrackEvents';\\nimport authenticateAndUpgradeRole from './authenticateAndUpgradeRole';\\nimport JitsiDTMFManager from './modules/DTMF/JitsiDTMFManager';\\nimport P2PDominantSpeakerDetection from './modules/P2PDominantSpeakerDetection';\\nimport RTC from './modules/RTC/RTC';\\nimport TalkMutedDetection from './modules/TalkMutedDetection';\\nimport browser from './modules/browser';\\nimport ConnectionQuality from './modules/connectivity/ConnectionQuality';\\nimport IceFailedNotification\\n    from './modules/connectivity/IceFailedNotification';\\nimport ParticipantConnectionStatusHandler\\n    from './modules/connectivity/ParticipantConnectionStatus';\\nimport E2ePing from './modules/e2eping/e2eping';\\nimport Jvb121EventGenerator from './modules/event/Jvb121EventGenerator';\\nimport RecordingManager from './modules/recording/RecordingManager';\\nimport RttMonitor from './modules/rttmonitor/rttmonitor';\\nimport AvgRTPStatsReporter from './modules/statistics/AvgRTPStatsReporter';\\nimport SpeakerStatsCollector from './modules/statistics/SpeakerStatsCollector';\\nimport Statistics from './modules/statistics/statistics';\\nimport Transcriber from './modules/transcription/transcriber';\\nimport GlobalOnErrorHandler from './modules/util/GlobalOnErrorHandler';\\nimport ComponentsVersions from './modules/version/ComponentsVersions';\\nimport VideoSIPGW from './modules/videosipgw/VideoSIPGW';\\nimport * as VideoSIPGWConstants from './modules/videosipgw/VideoSIPGWConstants';\\nimport { JITSI_MEET_MUC_TYPE } from './modules/xmpp/xmpp';\\nimport * as MediaType from './service/RTC/MediaType';\\nimport * as RTCEvents from './service/RTC/RTCEvents';\\nimport VideoType from './service/RTC/VideoType';\\nimport {\\n    ACTION_JINGLE_RESTART,\\n    ACTION_JINGLE_SI_RECEIVED,\\n    ACTION_JINGLE_SI_TIMEOUT,\\n    ACTION_JINGLE_TERMINATE,\\n    ACTION_P2P_ESTABLISHED,\\n    ACTION_P2P_FAILED,\\n    ACTION_P2P_SWITCH_TO_JVB,\\n    ICE_ESTABLISHMENT_DURATION_DIFF,\\n    createJingleEvent,\\n    createP2PEvent\\n} from './service/statistics/AnalyticsEvents';\\nimport * as XMPPEvents from './service/xmpp/XMPPEvents';\\n\\nconst logger = getLogger(__filename);\\n\\n/**\\n * How long since Jicofo is supposed to send a session-initiate, before\\n * {@link ACTION_JINGLE_SI_TIMEOUT} analytics event is sent (in ms).\\n * @type {number}\\n */\\nconst JINGLE_SI_TIMEOUT = 5000;\\n\\n/**\\n * Creates a JitsiConference object with the given name and properties.\\n * Note: this constructor is not a part of the public API (objects should be\\n * created using JitsiConnection.createConference).\\n * @param options.config properties / settings related to the conference that\\n * will be created.\\n * @param options.name the name of the conference\\n * @param options.connection the JitsiConnection object for this\\n * JitsiConference.\\n * @param {number} [options.config.avgRtpStatsN=15] how many samples are to be\\n * collected by {@link AvgRTPStatsReporter}, before arithmetic mean is\\n * calculated and submitted to the analytics module.\\n * @param {boolean} [options.config.p2p.enabled] when set to <tt>true</tt>\\n * the peer to peer mode will be enabled. It means that when there are only 2\\n * participants in the conference an attempt to make direct connection will be\\n * made. If the connection succeeds the conference will stop sending data\\n * through the JVB connection and will use the direct one instead.\\n * @param {number} [options.config.p2p.backToP2PDelay=5] a delay given in\\n * seconds, before the conference switches back to P2P, after the 3rd\\n * participant has left the room.\\n * @param {number} [options.config.channelLastN=-1] The requested amount of\\n * videos are going to be delivered after the value is in effect. Set to -1 for\\n * unlimited or all available videos.\\n * @param {number} [options.config.forceJVB121Ratio]\\n * \\\"Math.random() < forceJVB121Ratio\\\" will determine whether a 2 people\\n * conference should be moved to the JVB instead of P2P. The decision is made on\\n * the responder side, after ICE succeeds on the P2P connection.\\n * @param {*} [options.config.openBridgeChannel] Which kind of communication to\\n * open with the videobridge. Values can be \\\"datachannel\\\", \\\"websocket\\\", true\\n * (treat it as \\\"datachannel\\\"), undefined (treat it as \\\"datachannel\\\") and false\\n * (don't open any channel).\\n * @constructor\\n *\\n * FIXME Make all methods which are called from lib-internal classes\\n *       to non-public (use _). To name a few:\\n *       {@link JitsiConference.onLocalRoleChanged}\\n *       {@link JitsiConference.onUserRoleChanged}\\n *       {@link JitsiConference.onMemberLeft}\\n *       and so on...\\n */\\nexport default function JitsiConference(options) {\\n    if (!options.name || options.name.toLowerCase() !== options.name) {\\n        const errmsg\\n            = 'Invalid conference name (no conference name passed or it '\\n                + 'contains invalid characters like capital letters)!';\\n\\n        logger.error(errmsg);\\n        throw new Error(errmsg);\\n    }\\n    this.eventEmitter = new EventEmitter();\\n    this.options = options;\\n    this.eventManager = new JitsiConferenceEventManager(this);\\n    this.participants = {};\\n    this._init(options);\\n    this.componentsVersions = new ComponentsVersions(this);\\n\\n    /**\\n     * Jingle session instance for the JVB connection.\\n     * @type {JingleSessionPC}\\n     */\\n    this.jvbJingleSession = null;\\n    this.lastDominantSpeaker = null;\\n    this.dtmfManager = null;\\n    this.somebodySupportsDTMF = false;\\n    this.authEnabled = false;\\n    this.startAudioMuted = false;\\n    this.startVideoMuted = false;\\n    this.startMutedPolicy = {\\n        audio: false,\\n        video: false\\n    };\\n    this.isMutedByFocus = false;\\n\\n    // Flag indicates if the 'onCallEnded' method was ever called on this\\n    // instance. Used to log extra analytics event for debugging purpose.\\n    // We need to know if the potential issue happened before or after\\n    // the restart.\\n    this.wasStopped = false;\\n\\n    // Conference properties, maintained by jicofo.\\n    this.properties = {};\\n\\n    /**\\n     * The object which monitors local and remote connection statistics (e.g.\\n     * sending bitrate) and calculates a number which represents the connection\\n     * quality.\\n     */\\n    this.connectionQuality\\n        = new ConnectionQuality(this, this.eventEmitter, options);\\n\\n    /**\\n     * Reports average RTP statistics to the analytics module.\\n     * @type {AvgRTPStatsReporter}\\n     */\\n    this.avgRtpStatsReporter\\n        = new AvgRTPStatsReporter(this, options.config.avgRtpStatsN || 15);\\n\\n    /**\\n     * Indicates whether the connection is interrupted or not.\\n     */\\n    this.isJvbConnectionInterrupted = false;\\n\\n    /**\\n     * The object which tracks active speaker times\\n     */\\n    this.speakerStatsCollector = new SpeakerStatsCollector(this);\\n\\n    /* P2P related fields below: */\\n\\n    /**\\n     * Stores reference to deferred start P2P task. It's created when 3rd\\n     * participant leaves the room in order to avoid ping pong effect (it\\n     * could be just a page reload).\\n     * @type {number|null}\\n     */\\n    this.deferredStartP2PTask = null;\\n\\n    const delay\\n        = parseInt(options.config.p2p && options.config.p2p.backToP2PDelay, 10);\\n\\n    /**\\n     * A delay given in seconds, before the conference switches back to P2P\\n     * after the 3rd participant has left.\\n     * @type {number}\\n     */\\n    this.backToP2PDelay = isNaN(delay) ? 5 : delay;\\n    logger.info(`backToP2PDelay: ${this.backToP2PDelay}`);\\n\\n    /**\\n     * If set to <tt>true</tt> it means the P2P ICE is no longer connected.\\n     * When <tt>false</tt> it means that P2P ICE (media) connection is up\\n     * and running.\\n     * @type {boolean}\\n     */\\n    this.isP2PConnectionInterrupted = false;\\n\\n    /**\\n     * Flag set to <tt>true</tt> when P2P session has been established\\n     * (ICE has been connected) and this conference is currently in the peer to\\n     * peer mode (P2P connection is the active one).\\n     * @type {boolean}\\n     */\\n    this.p2p = false;\\n\\n    /**\\n     * A JingleSession for the direct peer to peer connection.\\n     * @type {JingleSessionPC}\\n     */\\n    this.p2pJingleSession = null;\\n\\n    this.videoSIPGWHandler = new VideoSIPGW(this.room);\\n    this.recordingManager = new RecordingManager(this.room);\\n}\\n\\n// FIXME convert JitsiConference to ES6 - ASAP !\\nJitsiConference.prototype.constructor = JitsiConference;\\n\\n/**\\n * Initializes the conference object properties\\n * @param options {object}\\n * @param options.connection {JitsiConnection} overrides this.connection\\n */\\nJitsiConference.prototype._init = function(options = {}) {\\n    // Override connection and xmpp properties (Useful if the connection\\n    // reloaded)\\n    if (options.connection) {\\n        this.connection = options.connection;\\n        this.xmpp = this.connection.xmpp;\\n\\n        // Setup XMPP events only if we have new connection object.\\n        this.eventManager.setupXMPPListeners();\\n    }\\n\\n    const { config } = this.options;\\n\\n    this.room = this.xmpp.createRoom(this.options.name, config);\\n\\n    // Connection interrupted/restored listeners\\n    this._onIceConnectionInterrupted\\n        = this._onIceConnectionInterrupted.bind(this);\\n    this.room.addListener(\\n        XMPPEvents.CONNECTION_INTERRUPTED, this._onIceConnectionInterrupted);\\n\\n    this._onIceConnectionRestored = this._onIceConnectionRestored.bind(this);\\n    this.room.addListener(\\n        XMPPEvents.CONNECTION_RESTORED, this._onIceConnectionRestored);\\n\\n    this._onIceConnectionEstablished\\n        = this._onIceConnectionEstablished.bind(this);\\n    this.room.addListener(\\n        XMPPEvents.CONNECTION_ESTABLISHED, this._onIceConnectionEstablished);\\n\\n    this._updateProperties = this._updateProperties.bind(this);\\n    this.room.addListener(XMPPEvents.CONFERENCE_PROPERTIES_CHANGED,\\n        this._updateProperties);\\n\\n    this.rttMonitor = new RttMonitor(config.rttMonitor || {});\\n\\n    this.e2eping = new E2ePing(\\n        this,\\n        config,\\n        (message, to) => {\\n            try {\\n                this.sendMessage(\\n                    message, to, true /* sendThroughVideobridge */);\\n            } catch (error) {\\n                logger.warn('Failed to send a ping request or response.');\\n            }\\n        });\\n\\n    if (!this.rtc) {\\n        this.rtc = new RTC(this, options);\\n        this.eventManager.setupRTCListeners();\\n    }\\n\\n    this.participantConnectionStatus\\n        = new ParticipantConnectionStatusHandler(\\n            this.rtc,\\n            this,\\n            {\\n                // Both these options are not public API, leaving it here only\\n                // as an entry point through config for tuning up purposes.\\n                // Default values should be adjusted as soon as optimal values\\n                // are discovered.\\n                rtcMuteTimeout: config._peerConnStatusRtcMuteTimeout,\\n                outOfLastNTimeout: config._peerConnStatusOutOfLastNTimeout\\n            });\\n    this.participantConnectionStatus.init();\\n\\n    if (!this.statistics) {\\n        // XXX The property location on the global variable window is not\\n        // defined in all execution environments (e.g. react-native). While\\n        // jitsi-meet may polyfill it when executing on react-native, it is\\n        // better for the cross-platform support to not require window.location\\n        // especially when there is a worthy alternative (as demonstrated\\n        // bellow).\\n        const windowLocation = window.location;\\n\\n        let callStatsAliasName = this.myUserId();\\n\\n        if (config.enableDisplayNameInStats && config.displayName) {\\n            callStatsAliasName = config.displayName;\\n        }\\n\\n        this.statistics = new Statistics(this.xmpp, {\\n            callStatsAliasName,\\n            callStatsConfIDNamespace:\\n                config.callStatsConfIDNamespace\\n                    || (windowLocation && windowLocation.hostname)\\n                    || (config.hosts && config.hosts.domain),\\n            customScriptUrl: config.callStatsCustomScriptUrl,\\n            callStatsID: config.callStatsID,\\n            callStatsSecret: config.callStatsSecret,\\n            roomName: this.options.name,\\n            swapUserNameAndAlias: config.enableStatsID,\\n            applicationName: config.applicationName,\\n            getWiFiStatsMethod: config.getWiFiStatsMethod\\n        });\\n    }\\n\\n    this.eventManager.setupChatRoomListeners();\\n\\n    // Always add listeners because on reload we are executing leave and the\\n    // listeners are removed from statistics module.\\n    this.eventManager.setupStatisticsListeners();\\n\\n    if (config.enableTalkWhileMuted) {\\n        // eslint-disable-next-line no-new\\n        new TalkMutedDetection(\\n            this,\\n            () =>\\n                this.eventEmitter.emit(JitsiConferenceEvents.TALK_WHILE_MUTED));\\n    }\\n\\n    if ('channelLastN' in config) {\\n        this.setLastN(config.channelLastN);\\n    }\\n\\n    /**\\n     * Emits {@link JitsiConferenceEvents.JVB121_STATUS}.\\n     * @type {Jvb121EventGenerator}\\n     */\\n    this.jvb121Status = new Jvb121EventGenerator(this);\\n\\n    // creates dominant speaker detection that works only in p2p mode\\n    this.p2pDominantSpeakerDetection = new P2PDominantSpeakerDetection(this);\\n\\n    if (config && config.deploymentInfo && config.deploymentInfo.userRegion) {\\n        this.setLocalParticipantProperty(\\n            'region', config.deploymentInfo.userRegion);\\n    }\\n};\\n\\n/**\\n * Joins the conference.\\n * @param password {string} the password\\n */\\nJitsiConference.prototype.join = function(password) {\\n    if (this.room) {\\n        this.room.join(password).then(() => this._maybeSetSITimeout());\\n    }\\n};\\n\\n/**\\n * Authenticates and upgrades the role of the local participant/user.\\n *\\n * @returns {Object} A <tt>thenable</tt> which (1) settles when the process of\\n * authenticating and upgrading the role of the local participant/user finishes\\n * and (2) has a <tt>cancel</tt> method that allows the caller to interrupt the\\n * process.\\n */\\nJitsiConference.prototype.authenticateAndUpgradeRole = function(...args) {\\n    return authenticateAndUpgradeRole.apply(this, args);\\n};\\n\\n/**\\n * Check if joined to the conference.\\n */\\nJitsiConference.prototype.isJoined = function() {\\n    return this.room && this.room.joined;\\n};\\n\\n/**\\n * Tells whether or not the P2P mode is enabled in the configuration.\\n * @return {boolean}\\n */\\nJitsiConference.prototype.isP2PEnabled = function() {\\n    return Boolean(this.options.config.p2p && this.options.config.p2p.enabled)\\n\\n        // FIXME: remove once we have a default config template. -saghul\\n        || typeof this.options.config.p2p === 'undefined';\\n};\\n\\n/**\\n * When in P2P test mode, the conference will not automatically switch to P2P\\n * when there 2 participants.\\n * @return {boolean}\\n */\\nJitsiConference.prototype.isP2PTestModeEnabled = function() {\\n    return Boolean(this.options.config.testing\\n        && this.options.config.testing.p2pTestMode);\\n};\\n\\n/**\\n * Leaves the conference.\\n * @returns {Promise}\\n */\\nJitsiConference.prototype.leave = function() {\\n    if (this.participantConnectionStatus) {\\n        this.participantConnectionStatus.dispose();\\n        this.participantConnectionStatus = null;\\n    }\\n    if (this.avgRtpStatsReporter) {\\n        this.avgRtpStatsReporter.dispose();\\n        this.avgRtpStatsReporter = null;\\n    }\\n\\n    if (this.rttMonitor) {\\n        this.rttMonitor.stop();\\n        this.rttMonitor = null;\\n    }\\n\\n    if (this.e2eping) {\\n        this.e2eping.stop();\\n        this.e2eping = null;\\n    }\\n\\n    this.getLocalTracks().forEach(track => this.onLocalTrackRemoved(track));\\n\\n    this.rtc.closeBridgeChannel();\\n    if (this.statistics) {\\n        this.statistics.dispose();\\n    }\\n\\n    this._delayedIceFailed && this._delayedIceFailed.cancel();\\n\\n    // Close both JVb and P2P JingleSessions\\n    if (this.jvbJingleSession) {\\n        this.jvbJingleSession.close();\\n        this.jvbJingleSession = null;\\n    }\\n    if (this.p2pJingleSession) {\\n        this.p2pJingleSession.close();\\n        this.p2pJingleSession = null;\\n    }\\n\\n    // leave the conference\\n    if (this.room) {\\n        const room = this.room;\\n\\n        // Unregister connection state listeners\\n        room.removeListener(\\n            XMPPEvents.CONNECTION_INTERRUPTED,\\n            this._onIceConnectionInterrupted);\\n        room.removeListener(\\n            XMPPEvents.CONNECTION_RESTORED,\\n            this._onIceConnectionRestored);\\n        room.removeListener(\\n            XMPPEvents.CONNECTION_ESTABLISHED,\\n            this._onIceConnectionEstablished);\\n\\n        room.removeListener(\\n            XMPPEvents.CONFERENCE_PROPERTIES_CHANGED,\\n            this._updateProperties);\\n\\n        this.eventManager.removeXMPPListeners();\\n\\n        this.room = null;\\n\\n        return room.leave()\\n            .then(() => {\\n                if (this.rtc) {\\n                    this.rtc.dispose();\\n                }\\n            })\\n            .catch(error => {\\n                // remove all participants because currently the conference\\n                // won't be usable anyway. This is done on success automatically\\n                // by the ChatRoom instance.\\n                this.getParticipants().forEach(\\n                    participant => this.onMemberLeft(participant.getJid()));\\n\\n                throw error;\\n            });\\n    }\\n\\n    // If this.room == null we are calling second time leave().\\n    return Promise.reject(\\n        new Error('The conference is has been already left'));\\n};\\n\\n/**\\n * Returns name of this conference.\\n */\\nJitsiConference.prototype.getName = function() {\\n    return this.options.name;\\n};\\n\\n/**\\n * Returns the {@link JitsiConnection} used by this this conference.\\n */\\nJitsiConference.prototype.getConnection = function() {\\n    return this.connection;\\n};\\n\\n/**\\n * Check if authentication is enabled for this conference.\\n */\\nJitsiConference.prototype.isAuthEnabled = function() {\\n    return this.authEnabled;\\n};\\n\\n/**\\n * Check if user is logged in.\\n */\\nJitsiConference.prototype.isLoggedIn = function() {\\n    return Boolean(this.authIdentity);\\n};\\n\\n/**\\n * Get authorized login.\\n */\\nJitsiConference.prototype.getAuthLogin = function() {\\n    return this.authIdentity;\\n};\\n\\n/**\\n * Check if external authentication is enabled for this conference.\\n */\\nJitsiConference.prototype.isExternalAuthEnabled = function() {\\n    return this.room && this.room.moderator.isExternalAuthEnabled();\\n};\\n\\n/**\\n * Get url for external authentication.\\n * @param {boolean} [urlForPopup] if true then return url for login popup,\\n *                                else url of login page.\\n * @returns {Promise}\\n */\\nJitsiConference.prototype.getExternalAuthUrl = function(urlForPopup) {\\n    return new Promise((resolve, reject) => {\\n        if (!this.isExternalAuthEnabled()) {\\n            reject();\\n\\n            return;\\n        }\\n        if (urlForPopup) {\\n            this.room.moderator.getPopupLoginUrl(resolve, reject);\\n        } else {\\n            this.room.moderator.getLoginUrl(resolve, reject);\\n        }\\n    });\\n};\\n\\n/**\\n * Returns the local tracks of the given media type, or all local tracks if no\\n * specific type is given.\\n * @param {MediaType} [mediaType] Optional media type (audio or video).\\n */\\nJitsiConference.prototype.getLocalTracks = function(mediaType) {\\n    let tracks = [];\\n\\n    if (this.rtc) {\\n        tracks = this.rtc.getLocalTracks(mediaType);\\n    }\\n\\n    return tracks;\\n};\\n\\n/**\\n * Obtains local audio track.\\n * @return {JitsiLocalTrack|null}\\n */\\nJitsiConference.prototype.getLocalAudioTrack = function() {\\n    return this.rtc ? this.rtc.getLocalAudioTrack() : null;\\n};\\n\\n/**\\n * Obtains local video track.\\n * @return {JitsiLocalTrack|null}\\n */\\nJitsiConference.prototype.getLocalVideoTrack = function() {\\n    return this.rtc ? this.rtc.getLocalVideoTrack() : null;\\n};\\n\\n/**\\n * Attaches a handler for events(For example - \\\"participant joined\\\".) in the\\n * conference. All possible event are defined in JitsiConferenceEvents.\\n * @param eventId the event ID.\\n * @param handler handler for the event.\\n *\\n * Note: consider adding eventing functionality by extending an EventEmitter\\n * impl, instead of rolling ourselves\\n */\\nJitsiConference.prototype.on = function(eventId, handler) {\\n    if (this.eventEmitter) {\\n        this.eventEmitter.on(eventId, handler);\\n    }\\n};\\n\\n/**\\n * Removes event listener\\n * @param eventId the event ID.\\n * @param [handler] optional, the specific handler to unbind\\n *\\n * Note: consider adding eventing functionality by extending an EventEmitter\\n * impl, instead of rolling ourselves\\n */\\nJitsiConference.prototype.off = function(eventId, handler) {\\n    if (this.eventEmitter) {\\n        this.eventEmitter.removeListener(eventId, handler);\\n    }\\n};\\n\\n// Common aliases for event emitter\\nJitsiConference.prototype.addEventListener = JitsiConference.prototype.on;\\nJitsiConference.prototype.removeEventListener = JitsiConference.prototype.off;\\n\\n/**\\n * Receives notifications from other participants about commands / custom events\\n * (sent by sendCommand or sendCommandOnce methods).\\n * @param command {String} the name of the command\\n * @param handler {Function} handler for the command\\n */\\nJitsiConference.prototype.addCommandListener = function(command, handler) {\\n    if (this.room) {\\n        this.room.addPresenceListener(command, handler);\\n    }\\n};\\n\\n/**\\n  * Removes command  listener\\n  * @param command {String} the name of the command\\n  */\\nJitsiConference.prototype.removeCommandListener = function(command) {\\n    if (this.room) {\\n        this.room.removePresenceListener(command);\\n    }\\n};\\n\\n/**\\n * Sends text message to the other participants in the conference\\n * @param message the text message.\\n * @param elementName the element name to encapsulate the message.\\n * @deprecated Use 'sendMessage' instead. TODO: this should be private.\\n */\\nJitsiConference.prototype.sendTextMessage = function(\\n        message, elementName = 'body') {\\n    if (this.room) {\\n        this.room.sendMessage(message, elementName);\\n    }\\n};\\n\\n/**\\n * Send private text message to another participant of the conference\\n * @param id the id of the participant to send a private message.\\n * @param message the text message.\\n * @param elementName the element name to encapsulate the message.\\n * @deprecated Use 'sendMessage' instead. TODO: this should be private.\\n */\\nJitsiConference.prototype.sendPrivateTextMessage = function(\\n        id, message, elementName = 'body') {\\n    if (this.room) {\\n        this.room.sendPrivateMessage(id, message, elementName);\\n    }\\n};\\n\\n/**\\n * Send presence command.\\n * @param name {String} the name of the command.\\n * @param values {Object} with keys and values that will be sent.\\n **/\\nJitsiConference.prototype.sendCommand = function(name, values) {\\n    if (this.room) {\\n        this.room.addToPresence(name, values);\\n        this.room.sendPresence();\\n    } else {\\n        logger.warn('Not sending a command, room not initialized.');\\n    }\\n\\n};\\n\\n/**\\n * Send presence command one time.\\n * @param name {String} the name of the command.\\n * @param values {Object} with keys and values that will be sent.\\n **/\\nJitsiConference.prototype.sendCommandOnce = function(name, values) {\\n    this.sendCommand(name, values);\\n    this.removeCommand(name);\\n};\\n\\n/**\\n * Removes presence command.\\n * @param name {String} the name of the command.\\n **/\\nJitsiConference.prototype.removeCommand = function(name) {\\n    if (this.room) {\\n        this.room.removeFromPresence(name);\\n    }\\n};\\n\\n/**\\n * Sets the display name for this conference.\\n * @param name the display name to set\\n */\\nJitsiConference.prototype.setDisplayName = function(name) {\\n    if (this.room) {\\n        // remove previously set nickname\\n        this.room.removeFromPresence('nick');\\n\\n        this.room.addToPresence('nick', {\\n            attributes: { xmlns: 'http://jabber.org/protocol/nick' },\\n            value: name\\n        });\\n        this.room.sendPresence();\\n    }\\n};\\n\\n/**\\n * Set new subject for this conference. (available only for moderator)\\n * @param {string} subject new subject\\n */\\nJitsiConference.prototype.setSubject = function(subject) {\\n    if (this.room && this.isModerator()) {\\n        this.room.setSubject(subject);\\n    }\\n};\\n\\n/**\\n * Get a transcriber object for all current participants in this conference\\n * @return {Transcriber} the transcriber object\\n */\\nJitsiConference.prototype.getTranscriber = function() {\\n    if (this.transcriber === undefined) {\\n        this.transcriber = new Transcriber();\\n\\n        // add all existing local audio tracks to the transcriber\\n        const localAudioTracks = this.getLocalTracks(MediaType.AUDIO);\\n\\n        for (const localAudio of localAudioTracks) {\\n            this.transcriber.addTrack(localAudio);\\n        }\\n\\n        // and all remote audio tracks\\n        const remoteAudioTracks = this.rtc.getRemoteTracks(MediaType.AUDIO);\\n\\n        for (const remoteTrack of remoteAudioTracks) {\\n            this.transcriber.addTrack(remoteTrack);\\n        }\\n    }\\n\\n    return this.transcriber;\\n};\\n\\n/**\\n * Returns the transcription status.\\n *\\n * @returns {String} \\\"on\\\" or \\\"off\\\".\\n */\\nJitsiConference.prototype.getTranscriptionStatus = function() {\\n    return this.room.transcriptionStatus;\\n};\\n\\n/**\\n * Adds JitsiLocalTrack object to the conference.\\n * @param track the JitsiLocalTrack object.\\n * @returns {Promise<JitsiLocalTrack>}\\n * @throws {Error} if the specified track is a video track and there is already\\n * another video track in the conference.\\n */\\nJitsiConference.prototype.addTrack = function(track) {\\n    if (track.isVideoTrack()) {\\n        // Ensure there's exactly 1 local video track in the conference.\\n        const localVideoTrack = this.rtc.getLocalVideoTrack();\\n\\n        if (localVideoTrack) {\\n            // Don't be excessively harsh and severe if the API client happens\\n            // to attempt to add the same local video track twice.\\n            if (track === localVideoTrack) {\\n                return Promise.resolve(track);\\n            }\\n\\n            return Promise.reject(new Error(\\n                'cannot add second video track to the conference'));\\n\\n        }\\n    }\\n\\n    return this.replaceTrack(null, track);\\n};\\n\\n/**\\n * Fires TRACK_AUDIO_LEVEL_CHANGED change conference event (for local tracks).\\n * @param {number} audioLevel the audio level\\n * @param {TraceablePeerConnection} [tpc]\\n */\\nJitsiConference.prototype._fireAudioLevelChangeEvent = function(\\n        audioLevel,\\n        tpc) {\\n    const activeTpc = this.getActivePeerConnection();\\n\\n    // There will be no TraceablePeerConnection if audio levels do not come from\\n    // a peerconnection. LocalStatsCollector.js measures audio levels using Web\\n    // Audio Analyser API and emits local audio levels events through\\n    // JitsiTrack.setAudioLevel, but does not provide TPC instance which is\\n    // optional.\\n    if (!tpc || activeTpc === tpc) {\\n        this.eventEmitter.emit(\\n            JitsiConferenceEvents.TRACK_AUDIO_LEVEL_CHANGED,\\n            this.myUserId(), audioLevel);\\n    }\\n};\\n\\n/**\\n * Fires TRACK_MUTE_CHANGED change conference event.\\n * @param track the JitsiTrack object related to the event.\\n */\\nJitsiConference.prototype._fireMuteChangeEvent = function(track) {\\n    // check if track was muted by focus and now is unmuted by user\\n    if (this.isMutedByFocus && track.isAudioTrack() && !track.isMuted()) {\\n        this.isMutedByFocus = false;\\n\\n        // unmute local user on server\\n        this.room.muteParticipant(this.room.myroomjid, false);\\n    }\\n    this.eventEmitter.emit(JitsiConferenceEvents.TRACK_MUTE_CHANGED, track);\\n};\\n\\n/**\\n * Clear JitsiLocalTrack properties and listeners.\\n * @param track the JitsiLocalTrack object.\\n */\\nJitsiConference.prototype.onLocalTrackRemoved = function(track) {\\n    track._setConference(null);\\n    this.rtc.removeLocalTrack(track);\\n    track.removeEventListener(JitsiTrackEvents.TRACK_MUTE_CHANGED,\\n        track.muteHandler);\\n    track.removeEventListener(JitsiTrackEvents.TRACK_AUDIO_LEVEL_CHANGED,\\n        track.audioLevelHandler);\\n\\n    // send event for stopping screen sharing\\n    // FIXME: we assume we have only one screen sharing track\\n    // if we change this we need to fix this check\\n    if (track.isVideoTrack() && track.videoType === VideoType.DESKTOP) {\\n        this.statistics.sendScreenSharingEvent(false);\\n    }\\n\\n    this.eventEmitter.emit(JitsiConferenceEvents.TRACK_REMOVED, track);\\n};\\n\\n/**\\n * Removes JitsiLocalTrack from the conference and performs\\n * a new offer/answer cycle.\\n * @param {JitsiLocalTrack} track\\n * @returns {Promise}\\n */\\nJitsiConference.prototype.removeTrack = function(track) {\\n    return this.replaceTrack(track, null);\\n};\\n\\n/**\\n * Replaces oldTrack with newTrack and performs a single offer/answer\\n *  cycle after both operations are done.  Either oldTrack or newTrack\\n *  can be null; replacing a valid 'oldTrack' with a null 'newTrack'\\n *  effectively just removes 'oldTrack'\\n * @param {JitsiLocalTrack} oldTrack the current stream in use to be replaced\\n * @param {JitsiLocalTrack} newTrack the new stream to use\\n * @returns {Promise} resolves when the replacement is finished\\n */\\nJitsiConference.prototype.replaceTrack = function(oldTrack, newTrack) {\\n    // First do the removal of the oldTrack at the JitsiConference level\\n    if (oldTrack) {\\n        if (oldTrack.disposed) {\\n            return Promise.reject(\\n                new JitsiTrackError(JitsiTrackErrors.TRACK_IS_DISPOSED));\\n        }\\n    }\\n    if (newTrack) {\\n        if (newTrack.disposed) {\\n            return Promise.reject(\\n                new JitsiTrackError(JitsiTrackErrors.TRACK_IS_DISPOSED));\\n        }\\n    }\\n\\n    // Now replace the stream at the lower levels\\n    return this._doReplaceTrack(oldTrack, newTrack)\\n        .then(() => {\\n            if (oldTrack) {\\n                this.onLocalTrackRemoved(oldTrack);\\n            }\\n            if (newTrack) {\\n                // Now handle the addition of the newTrack at the\\n                // JitsiConference level\\n                this._setupNewTrack(newTrack);\\n            }\\n\\n            return Promise.resolve();\\n        }, error => Promise.reject(new Error(error)));\\n};\\n\\n/**\\n * Replaces the tracks at the lower level by going through the Jingle session\\n * and WebRTC peer connection. The method will resolve immediately if there is\\n * currently no JingleSession started.\\n * @param {JitsiLocalTrack|null} oldTrack the track to be removed during\\n * the process or <tt>null</t> if the method should act as \\\"add track\\\"\\n * @param {JitsiLocalTrack|null} newTrack the new track to be added or\\n * <tt>null</tt> if the method should act as \\\"remove track\\\"\\n * @return {Promise} resolved when the process is done or rejected with a string\\n * which describes the error.\\n * @private\\n */\\nJitsiConference.prototype._doReplaceTrack = function(oldTrack, newTrack) {\\n    const replaceTrackPromises = [];\\n\\n    if (this.jvbJingleSession) {\\n        replaceTrackPromises.push(\\n            this.jvbJingleSession.replaceTrack(oldTrack, newTrack));\\n    } else {\\n        logger.info('_doReplaceTrack - no JVB JingleSession');\\n    }\\n\\n    if (this.p2pJingleSession) {\\n        replaceTrackPromises.push(\\n            this.p2pJingleSession.replaceTrack(oldTrack, newTrack));\\n    } else {\\n        logger.info('_doReplaceTrack - no P2P JingleSession');\\n    }\\n\\n    return Promise.all(replaceTrackPromises);\\n};\\n\\n/**\\n * Operations related to creating a new track\\n * @param {JitsiLocalTrack} newTrack the new track being created\\n */\\nJitsiConference.prototype._setupNewTrack = function(newTrack) {\\n    if (newTrack.isAudioTrack() || (newTrack.isVideoTrack()\\n            && newTrack.videoType !== VideoType.DESKTOP)) {\\n        // Report active device to statistics\\n        const devices = RTC.getCurrentlyAvailableMediaDevices();\\n        const device\\n            = devices.find(\\n                d =>\\n                    d.kind === `${newTrack.getTrack().kind}input`\\n                        && d.label === newTrack.getTrack().label);\\n\\n        if (device) {\\n            Statistics.sendActiveDeviceListEvent(\\n                RTC.getEventDataForActiveDevice(device));\\n        }\\n    }\\n    if (newTrack.isVideoTrack()) {\\n        this.removeCommand('videoType');\\n        this.sendCommand('videoType', {\\n            value: newTrack.videoType,\\n            attributes: {\\n                xmlns: 'http://jitsi.org/jitmeet/video'\\n            }\\n        });\\n    }\\n    this.rtc.addLocalTrack(newTrack);\\n\\n    // ensure that we're sharing proper \\\"is muted\\\" state\\n    if (newTrack.isAudioTrack()) {\\n        this.room.setAudioMute(newTrack.isMuted());\\n    } else {\\n        this.room.setVideoMute(newTrack.isMuted());\\n    }\\n\\n    newTrack.muteHandler = this._fireMuteChangeEvent.bind(this, newTrack);\\n    newTrack.audioLevelHandler = this._fireAudioLevelChangeEvent.bind(this);\\n    newTrack.addEventListener(\\n        JitsiTrackEvents.TRACK_MUTE_CHANGED,\\n        newTrack.muteHandler);\\n    newTrack.addEventListener(\\n        JitsiTrackEvents.TRACK_AUDIO_LEVEL_CHANGED,\\n        newTrack.audioLevelHandler);\\n\\n    newTrack._setConference(this);\\n\\n    this.eventEmitter.emit(JitsiConferenceEvents.TRACK_ADDED, newTrack);\\n};\\n\\n/**\\n * Method called by the {@link JitsiLocalTrack} (a video one) in order to add\\n * back the underlying WebRTC MediaStream to the PeerConnection (which has\\n * removed on video mute).\\n * @param {JitsiLocalTrack} track the local track that will be added as part of\\n * the unmute operation.\\n * @return {Promise} resolved when the process is done or rejected with a string\\n * which describes the error.\\n */\\nJitsiConference.prototype._addLocalTrackAsUnmute = function(track) {\\n    const addAsUnmutePromises = [];\\n\\n    if (this.jvbJingleSession) {\\n        addAsUnmutePromises.push(this.jvbJingleSession.addTrackAsUnmute(track));\\n    } else {\\n        logger.info(\\n            'Add local MediaStream as unmute -'\\n                + ' no JVB Jingle session started yet');\\n    }\\n\\n    if (this.p2pJingleSession) {\\n        addAsUnmutePromises.push(this.p2pJingleSession.addTrackAsUnmute(track));\\n    } else {\\n        logger.info(\\n            'Add local MediaStream as unmute -'\\n                + ' no P2P Jingle session started yet');\\n    }\\n\\n    return Promise.all(addAsUnmutePromises);\\n};\\n\\n/**\\n * Method called by the {@link JitsiLocalTrack} (a video one) in order to remove\\n * the underlying WebRTC MediaStream from the PeerConnection. The purpose of\\n * that is to stop sending any data and turn off the HW camera device.\\n * @param {JitsiLocalTrack} track the local track that will be removed.\\n * @return {Promise}\\n */\\nJitsiConference.prototype._removeLocalTrackAsMute = function(track) {\\n    const removeAsMutePromises = [];\\n\\n    if (this.jvbJingleSession) {\\n        removeAsMutePromises.push(\\n            this.jvbJingleSession.removeTrackAsMute(track));\\n    } else {\\n        logger.info(\\n            'Remove local MediaStream - no JVB JingleSession started yet');\\n    }\\n    if (this.p2pJingleSession) {\\n        removeAsMutePromises.push(\\n            this.p2pJingleSession.removeTrackAsMute(track));\\n    } else {\\n        logger.info(\\n            'Remove local MediaStream - no P2P JingleSession started yet');\\n    }\\n\\n    return Promise.all(removeAsMutePromises);\\n};\\n\\n/**\\n * Get role of the local user.\\n * @returns {string} user role: 'moderator' or 'none'\\n */\\nJitsiConference.prototype.getRole = function() {\\n    return this.room.role;\\n};\\n\\n/**\\n * Check if local user is moderator.\\n * @returns {boolean|null} true if local user is moderator, false otherwise. If\\n * we're no longer in the conference room then <tt>null</tt> is returned.\\n */\\nJitsiConference.prototype.isModerator = function() {\\n    return this.room ? this.room.isModerator() : null;\\n};\\n\\n/**\\n * Set password for the room.\\n * @param {string} password new password for the room.\\n * @returns {Promise}\\n */\\nJitsiConference.prototype.lock = function(password) {\\n    if (!this.isModerator()) {\\n        return Promise.reject();\\n    }\\n\\n    return new Promise((resolve, reject) => {\\n        this.room.lockRoom(\\n            password || '',\\n            () => resolve(),\\n            err => reject(err),\\n            () => reject(JitsiConferenceErrors.PASSWORD_NOT_SUPPORTED));\\n    });\\n};\\n\\n/**\\n * Remove password from the room.\\n * @returns {Promise}\\n */\\nJitsiConference.prototype.unlock = function() {\\n    return this.lock();\\n};\\n\\n/**\\n * Elects the participant with the given id to be the selected participant in\\n * order to receive higher video quality (if simulcast is enabled).\\n * Or cache it if channel is not created and send it once channel is available.\\n * @param participantId the identifier of the participant\\n * @throws NetworkError or InvalidStateError or Error if the operation fails.\\n * @returns {void}\\n */\\nJitsiConference.prototype.selectParticipant = function(participantId) {\\n    this.selectParticipants([ participantId ]);\\n};\\n\\n/*\\n * Elects participants with given ids to be the selected participants in order\\n * to receive higher video quality (if simulcast is enabled). The argument\\n * should be an array of participant id strings or an empty array; an error will\\n * be thrown if a non-array is passed in. The error is thrown as a layer of\\n * protection against passing an invalid argument, as the error will happen in\\n * the bridge and may not be visible in the client.\\n *\\n * @param {Array<strings>} participantIds - An array of identifiers for\\n * participants.\\n * @returns {void}\\n */\\nJitsiConference.prototype.selectParticipants = function(participantIds) {\\n    if (!Array.isArray(participantIds)) {\\n        throw new Error('Invalid argument; participantIds must be an array.');\\n    }\\n\\n    this.rtc.selectEndpoints(participantIds);\\n};\\n\\n/**\\n * Elects the participant with the given id to be the pinned participant in\\n * order to always receive video for this participant (even when last n is\\n * enabled).\\n * @param participantId the identifier of the participant\\n * @throws NetworkError or InvalidStateError or Error if the operation fails.\\n */\\nJitsiConference.prototype.pinParticipant = function(participantId) {\\n    this.rtc.pinEndpoint(participantId);\\n};\\n\\n/**\\n * Obtains the current value for \\\"lastN\\\". See {@link setLastN} for more info.\\n * @returns {number}\\n */\\nJitsiConference.prototype.getLastN = function() {\\n    return this.rtc.getLastN();\\n};\\n\\n/**\\n * Selects a new value for \\\"lastN\\\". The requested amount of videos are going\\n * to be delivered after the value is in effect. Set to -1 for unlimited or\\n * all available videos.\\n * @param lastN the new number of videos the user would like to receive.\\n * @throws Error or RangeError if the given value is not a number or is smaller\\n * than -1.\\n */\\nJitsiConference.prototype.setLastN = function(lastN) {\\n    if (!Number.isInteger(lastN) && !Number.parseInt(lastN, 10)) {\\n        throw new Error(`Invalid value for lastN: ${lastN}`);\\n    }\\n    const n = Number(lastN);\\n\\n    if (n < -1) {\\n        throw new RangeError('lastN cannot be smaller than -1');\\n    }\\n    this.rtc.setLastN(n);\\n\\n    // If the P2P session is not fully established yet, we wait until it gets\\n    // established.\\n    if (this.p2pJingleSession) {\\n        const isVideoActive = n !== 0;\\n\\n        this.p2pJingleSession\\n            .setMediaTransferActive(true, isVideoActive)\\n            .catch(error => {\\n                logger.error(\\n                    `Failed to adjust video transfer status (${isVideoActive})`,\\n                    error);\\n            });\\n    }\\n};\\n\\n/**\\n * Checks if the participant given by participantId is currently included in\\n * the last N.\\n * @param {string} participantId the identifier of the participant we would\\n * like to check.\\n * @return {boolean} true if the participant with id is in the last N set or\\n * if there's no last N set, false otherwise.\\n * @deprecated this method should never be used to figure out the UI, but\\n * {@link ParticipantConnectionStatus} should be used instead.\\n */\\nJitsiConference.prototype.isInLastN = function(participantId) {\\n    return this.rtc.isInLastN(participantId);\\n};\\n\\n/**\\n * @return Array<JitsiParticipant> an array of all participants in this\\n * conference.\\n */\\nJitsiConference.prototype.getParticipants = function() {\\n    return Object.keys(this.participants).map(function(key) {\\n        return this.participants[key];\\n    }, this);\\n};\\n\\n/**\\n * Returns the number of participants in the conference, including the local\\n * participant.\\n * @param countHidden {boolean} Whether or not to include hidden participants\\n * in the count. Default: false.\\n **/\\nJitsiConference.prototype.getParticipantCount\\n    = function(countHidden = false) {\\n\\n        let participants = this.getParticipants();\\n\\n        if (!countHidden) {\\n            participants = participants.filter(p => !p.isHidden());\\n        }\\n\\n        // Add one for the local participant.\\n        return participants.length + 1;\\n    };\\n\\n/**\\n * @returns {JitsiParticipant} the participant in this conference with the\\n * specified id (or undefined if there isn't one).\\n * @param id the id of the participant.\\n */\\nJitsiConference.prototype.getParticipantById = function(id) {\\n    return this.participants[id];\\n};\\n\\n/**\\n * Kick participant from this conference.\\n * @param {string} id id of the participant to kick\\n */\\nJitsiConference.prototype.kickParticipant = function(id) {\\n    const participant = this.getParticipantById(id);\\n\\n    if (!participant) {\\n        return;\\n    }\\n    this.room.kick(participant.getJid());\\n};\\n\\n/**\\n * Maybe clears the timeout which emits {@link ACTION_JINGLE_SI_TIMEOUT}\\n * analytics event.\\n * @private\\n */\\nJitsiConference.prototype._maybeClearSITimeout = function() {\\n    if (this._sessionInitiateTimeout\\n            && (this.jvbJingleSession || this.getParticipantCount() < 2)) {\\n        window.clearTimeout(this._sessionInitiateTimeout);\\n        this._sessionInitiateTimeout = null;\\n    }\\n};\\n\\n/**\\n * Sets a timeout which will emit {@link ACTION_JINGLE_SI_TIMEOUT} analytics\\n * event.\\n * @private\\n */\\nJitsiConference.prototype._maybeSetSITimeout = function() {\\n    // Jicofo is supposed to invite if there are at least 2 participants\\n    if (!this.jvbJingleSession\\n            && this.getParticipantCount() >= 2\\n            && !this._sessionInitiateTimeout) {\\n        this._sessionInitiateTimeout = window.setTimeout(() => {\\n            this._sessionInitiateTimeout = null;\\n            Statistics.sendAnalytics(createJingleEvent(\\n                ACTION_JINGLE_SI_TIMEOUT,\\n                {\\n                    p2p: false,\\n                    value: JINGLE_SI_TIMEOUT\\n                }));\\n        }, JINGLE_SI_TIMEOUT);\\n    }\\n};\\n\\n/**\\n * Mutes a participant.\\n * @param {string} id The id of the participant to mute.\\n */\\nJitsiConference.prototype.muteParticipant = function(id) {\\n    const participant = this.getParticipantById(id);\\n\\n    if (!participant) {\\n        return;\\n    }\\n    this.room.muteParticipant(participant.getJid(), true);\\n};\\n\\n/* eslint-disable max-params */\\n\\n/**\\n * Notifies this JitsiConference that a new member has joined its chat room.\\n *\\n * FIXME This should NOT be exposed!\\n *\\n * @param jid the jid of the participant in the MUC\\n * @param nick the display name of the participant\\n * @param role the role of the participant in the MUC\\n * @param isHidden indicates if this is a hidden participant (system\\n * participant for example a recorder).\\n * @param statsID the participant statsID (optional)\\n * @param status the initial status if any\\n * @param identity the member identity, if any\\n * @param botType the member botType, if any\\n */\\nJitsiConference.prototype.onMemberJoined = function(\\n        jid, nick, role, isHidden, statsID, status, identity, botType) {\\n    const id = Strophe.getResourceFromJid(jid);\\n\\n    if (id === 'focus' || this.myUserId() === id) {\\n        return;\\n    }\\n    const participant\\n        = new JitsiParticipant(jid, this, nick, isHidden, statsID, status);\\n\\n    participant._role = role;\\n    participant._botType = botType;\\n    this.participants[id] = participant;\\n    this.eventEmitter.emit(\\n        JitsiConferenceEvents.USER_JOINED,\\n        id,\\n        participant);\\n    this.xmpp.caps.getFeatures(jid)\\n        .then(features => {\\n            participant._supportsDTMF = features.has('urn:xmpp:jingle:dtmf:0');\\n            this.updateDTMFSupport();\\n        },\\n        error => logger.warn(`Failed to discover features of ${jid}`, error));\\n\\n    this._maybeStartOrStopP2P();\\n    this._maybeSetSITimeout();\\n};\\n\\n/* eslint-enable max-params */\\n\\n/**\\n * Get notified when member bot type had changed.\\n * @param jid the member jid\\n * @param botType the new botType value\\n * @private\\n */\\nJitsiConference.prototype._onMemberBotTypeChanged = function(jid, botType) {\\n\\n    // find the participant and mark it as non bot, as the real one will join\\n    // in a moment\\n    const peers = this.getParticipants();\\n    const botParticipant = peers.find(p => p.getJid() === jid);\\n\\n    if (botParticipant) {\\n        botParticipant._botType = botType;\\n        const id = Strophe.getResourceFromJid(jid);\\n\\n        this.eventEmitter.emit(\\n            JitsiConferenceEvents.BOT_TYPE_CHANGED,\\n            id,\\n            botType);\\n    }\\n\\n    // if botType changed to undefined, botType was removed, in case of\\n    // poltergeist mode this is the moment when the poltergeist had exited and\\n    // the real participant had already replaced it.\\n    // In this case we can check and try p2p\\n    if (!botParticipant._botType) {\\n        this._maybeStartOrStopP2P();\\n    }\\n};\\n\\nJitsiConference.prototype.onMemberLeft = function(jid) {\\n    const id = Strophe.getResourceFromJid(jid);\\n\\n    if (id === 'focus' || this.myUserId() === id) {\\n        return;\\n    }\\n    const participant = this.participants[id];\\n\\n    delete this.participants[id];\\n\\n    const removedTracks = this.rtc.removeRemoteTracks(id);\\n\\n    removedTracks.forEach(\\n        track =>\\n            this.eventEmitter.emit(JitsiConferenceEvents.TRACK_REMOVED, track));\\n\\n    // there can be no participant in case the member that left is focus\\n    if (participant) {\\n        this.eventEmitter.emit(\\n            JitsiConferenceEvents.USER_LEFT, id, participant);\\n    }\\n\\n    this._maybeStartOrStopP2P(true /* triggered by user left event */);\\n    this._maybeClearSITimeout();\\n};\\n\\n/**\\n * Method called on local MUC role change.\\n * @param {string} role the name of new user's role as defined by XMPP MUC.\\n */\\nJitsiConference.prototype.onLocalRoleChanged = function(role) {\\n    // Emit role changed for local  JID\\n    this.eventEmitter.emit(\\n        JitsiConferenceEvents.USER_ROLE_CHANGED, this.myUserId(), role);\\n\\n    // Maybe start P2P\\n    this._maybeStartOrStopP2P();\\n};\\n\\nJitsiConference.prototype.onUserRoleChanged = function(jid, role) {\\n    const id = Strophe.getResourceFromJid(jid);\\n    const participant = this.getParticipantById(id);\\n\\n    if (!participant) {\\n        return;\\n    }\\n    participant._role = role;\\n    this.eventEmitter.emit(JitsiConferenceEvents.USER_ROLE_CHANGED, id, role);\\n};\\n\\nJitsiConference.prototype.onDisplayNameChanged = function(jid, displayName) {\\n    const id = Strophe.getResourceFromJid(jid);\\n    const participant = this.getParticipantById(id);\\n\\n    if (!participant) {\\n        return;\\n    }\\n\\n    if (participant._displayName === displayName) {\\n        return;\\n    }\\n\\n    participant._displayName = displayName;\\n    this.eventEmitter.emit(\\n        JitsiConferenceEvents.DISPLAY_NAME_CHANGED,\\n        id,\\n        displayName);\\n};\\n\\n/**\\n * Notifies this JitsiConference that a JitsiRemoteTrack was added into\\n * the conference.\\n *\\n * @param {JitsiRemoteTrack} track the JitsiRemoteTrack which was added to this\\n * JitsiConference\\n */\\nJitsiConference.prototype.onRemoteTrackAdded = function(track) {\\n    if (track.isP2P && !this.isP2PActive()) {\\n        logger.info(\\n            'Trying to add remote P2P track, when not in P2P - IGNORED');\\n\\n        return;\\n    } else if (!track.isP2P && this.isP2PActive()) {\\n        logger.info(\\n            'Trying to add remote JVB track, when in P2P - IGNORED');\\n\\n        return;\\n    }\\n\\n    const id = track.getParticipantId();\\n    const participant = this.getParticipantById(id);\\n\\n    if (!participant) {\\n        logger.error(`No participant found for id: ${id}`);\\n\\n        return;\\n    }\\n\\n    // Add track to JitsiParticipant.\\n    participant._tracks.push(track);\\n\\n    if (this.transcriber) {\\n        this.transcriber.addTrack(track);\\n    }\\n\\n    const emitter = this.eventEmitter;\\n\\n    track.addEventListener(\\n        JitsiTrackEvents.TRACK_MUTE_CHANGED,\\n        () => emitter.emit(JitsiConferenceEvents.TRACK_MUTE_CHANGED, track));\\n    track.addEventListener(\\n        JitsiTrackEvents.TRACK_AUDIO_LEVEL_CHANGED,\\n        (audioLevel, tpc) => {\\n            const activeTPC = this.getActivePeerConnection();\\n\\n            if (activeTPC === tpc) {\\n                emitter.emit(\\n                    JitsiConferenceEvents.TRACK_AUDIO_LEVEL_CHANGED,\\n                    id,\\n                    audioLevel);\\n            }\\n        }\\n    );\\n\\n    emitter.emit(JitsiConferenceEvents.TRACK_ADDED, track);\\n};\\n\\n/**\\n * Callback called by the Jingle plugin when 'session-answer' is received.\\n * @param {JingleSessionPC} session the Jingle session for which an answer was\\n * received.\\n * @param {jQuery} answer a jQuery selector pointing to 'jingle' IQ element\\n */\\n// eslint-disable-next-line no-unused-vars\\nJitsiConference.prototype.onCallAccepted = function(session, answer) {\\n    if (this.p2pJingleSession === session) {\\n        logger.info('P2P setAnswer');\\n        this.p2pJingleSession.setAnswer(answer);\\n    }\\n};\\n\\n/**\\n * Callback called by the Jingle plugin when 'transport-info' is received.\\n * @param {JingleSessionPC} session the Jingle session for which the IQ was\\n * received\\n * @param {jQuery} transportInfo a jQuery selector pointing to 'jingle' IQ\\n * element\\n */\\n// eslint-disable-next-line no-unused-vars\\nJitsiConference.prototype.onTransportInfo = function(session, transportInfo) {\\n    if (this.p2pJingleSession === session) {\\n        logger.info('P2P addIceCandidates');\\n        this.p2pJingleSession.addIceCandidates(transportInfo);\\n    }\\n};\\n\\n/**\\n * Notifies this JitsiConference that a JitsiRemoteTrack was removed from\\n * the conference.\\n *\\n * @param {JitsiRemoteTrack} removedTrack\\n */\\nJitsiConference.prototype.onRemoteTrackRemoved = function(removedTrack) {\\n    this.getParticipants().forEach(participant => {\\n        const tracks = participant.getTracks();\\n\\n        for (let i = 0; i < tracks.length; i++) {\\n            if (tracks[i] === removedTrack) {\\n                // Since the tracks have been compared and are\\n                // considered equal the result of splice can be ignored.\\n                participant._tracks.splice(i, 1);\\n\\n                this.eventEmitter.emit(\\n                    JitsiConferenceEvents.TRACK_REMOVED, removedTrack);\\n\\n                if (this.transcriber) {\\n                    this.transcriber.removeTrack(removedTrack);\\n                }\\n\\n                break;\\n            }\\n        }\\n    }, this);\\n};\\n\\n/**\\n * Handles an incoming call event for the P2P jingle session.\\n */\\nJitsiConference.prototype._onIncomingCallP2P = function(\\n        jingleSession,\\n        jingleOffer) {\\n\\n    let rejectReason;\\n    const role = this.room.getMemberRole(jingleSession.remoteJid);\\n\\n    if (role !== 'moderator') {\\n        rejectReason = {\\n            reason: 'security-error',\\n            reasonDescription: 'Only focus can start new sessions',\\n            errorMsg: 'Rejecting session-initiate from non-focus and'\\n                        + `non-moderator user: ${jingleSession.remoteJid}`\\n        };\\n    } else if (!browser.supportsP2P()) {\\n        rejectReason = {\\n            reason: 'unsupported-applications',\\n            reasonDescription: 'P2P not supported',\\n            errorMsg: 'This client does not support P2P connections'\\n        };\\n    } else if (!this.isP2PEnabled() && !this.isP2PTestModeEnabled()) {\\n        rejectReason = {\\n            reason: 'decline',\\n            reasonDescription: 'P2P disabled',\\n            errorMsg: 'P2P mode disabled in the configuration'\\n        };\\n    } else if (this.p2pJingleSession) {\\n        // Reject incoming P2P call (already in progress)\\n        rejectReason = {\\n            reason: 'busy',\\n            reasonDescription: 'P2P already in progress',\\n            errorMsg: 'Duplicated P2P \\\"session-initiate\\\"'\\n        };\\n    }\\n\\n    if (rejectReason) {\\n        this._rejectIncomingCall(jingleSession, rejectReason);\\n    } else {\\n        this._acceptP2PIncomingCall(jingleSession, jingleOffer);\\n    }\\n};\\n\\n/**\\n * Handles an incoming call event.\\n */\\nJitsiConference.prototype.onIncomingCall = function(\\n        jingleSession,\\n        jingleOffer,\\n        now) {\\n    // Handle incoming P2P call\\n    if (jingleSession.isP2P) {\\n        this._onIncomingCallP2P(jingleSession, jingleOffer);\\n    } else {\\n        if (!this.room.isFocus(jingleSession.remoteJid)) {\\n            const description = 'Rejecting session-initiate from non-focus.';\\n\\n            this._rejectIncomingCall(\\n                jingleSession, {\\n                    reason: 'security-error',\\n                    reasonDescription: description,\\n                    errorMsg: description\\n                });\\n\\n            return;\\n        }\\n        this._acceptJvbIncomingCall(jingleSession, jingleOffer, now);\\n    }\\n};\\n\\n/**\\n * Accepts an incoming call event for the JVB jingle session.\\n */\\nJitsiConference.prototype._acceptJvbIncomingCall = function(\\n        jingleSession,\\n        jingleOffer,\\n        now) {\\n\\n    // Accept incoming call\\n    this.jvbJingleSession = jingleSession;\\n    this.room.connectionTimes['session.initiate'] = now;\\n\\n    if (this.wasStopped) {\\n        Statistics.sendAnalyticsAndLog(\\n            createJingleEvent(ACTION_JINGLE_RESTART, { p2p: false }));\\n    }\\n\\n    const serverRegion\\n        = $(jingleOffer)\\n            .find('>bridge-session[xmlns=\\\"http://jitsi.org/protocol/focus\\\"]')\\n            .attr('region');\\n\\n    this.eventEmitter.emit(\\n        JitsiConferenceEvents.SERVER_REGION_CHANGED,\\n        serverRegion);\\n\\n    this._maybeClearSITimeout();\\n    Statistics.sendAnalytics(createJingleEvent(\\n        ACTION_JINGLE_SI_RECEIVED,\\n        {\\n            p2p: false,\\n            value: now\\n        }));\\n    try {\\n        jingleSession.initialize(this.room, this.rtc, this.options.config);\\n    } catch (error) {\\n        GlobalOnErrorHandler.callErrorHandler(error);\\n    }\\n\\n    // Open a channel with the videobridge.\\n    this._setBridgeChannel(jingleOffer, jingleSession.peerconnection);\\n\\n    // Add local tracks to the session\\n    try {\\n        jingleSession.acceptOffer(\\n            jingleOffer,\\n            () => {\\n                // If for any reason invite for the JVB session arrived after\\n                // the P2P has been established already the media transfer needs\\n                // to be turned off here.\\n                if (this.isP2PActive() && this.jvbJingleSession) {\\n                    this._suspendMediaTransferForJvbConnection();\\n                }\\n            },\\n            error => {\\n                GlobalOnErrorHandler.callErrorHandler(error);\\n                logger.error(\\n                    'Failed to accept incoming Jingle session', error);\\n            },\\n            this.getLocalTracks()\\n        );\\n\\n        // Start callstats as soon as peerconnection is initialized,\\n        // do not wait for XMPPEvents.PEERCONNECTION_READY, as it may never\\n        // happen in case if user doesn't have or denied permission to\\n        // both camera and microphone.\\n        logger.info('Starting CallStats for JVB connection...');\\n        this.statistics.startCallStats(\\n            this.jvbJingleSession.peerconnection,\\n            'jitsi' /* Remote user ID for JVB is 'jitsi' */);\\n        this.statistics.startRemoteStats(this.jvbJingleSession.peerconnection);\\n    } catch (e) {\\n        GlobalOnErrorHandler.callErrorHandler(e);\\n        logger.error(e);\\n    }\\n};\\n\\n/**\\n * Sets the BridgeChannel.\\n *\\n * @param {jQuery} offerIq a jQuery selector pointing to the jingle element of\\n * the offer IQ which may carry the WebSocket URL for the 'websocket'\\n * BridgeChannel mode.\\n * @param {TraceablePeerConnection} pc the peer connection which will be used\\n * to listen for new WebRTC Data Channels (in the 'datachannel' mode).\\n */\\nJitsiConference.prototype._setBridgeChannel = function(offerIq, pc) {\\n    let wsUrl = null;\\n    const webSocket\\n        = $(offerIq)\\n            .find('>content>transport>web-socket')\\n            .first();\\n\\n    if (webSocket.length === 1) {\\n        wsUrl = webSocket[0].getAttribute('url');\\n    }\\n\\n    let bridgeChannelType;\\n\\n    switch (this.options.config.openBridgeChannel) {\\n    case 'datachannel':\\n    case true:\\n    case undefined:\\n        bridgeChannelType = 'datachannel';\\n        break;\\n    case 'websocket':\\n        bridgeChannelType = 'websocket';\\n        break;\\n    }\\n\\n    if (bridgeChannelType === 'datachannel'\\n        && !browser.supportsDataChannels()) {\\n        bridgeChannelType = 'websocket';\\n    }\\n\\n    if (bridgeChannelType === 'datachannel') {\\n        this.rtc.initializeBridgeChannel(pc, null);\\n    } else if (bridgeChannelType === 'websocket' && wsUrl) {\\n        this.rtc.initializeBridgeChannel(null, wsUrl);\\n    }\\n};\\n\\n/**\\n * Rejects incoming Jingle call.\\n * @param {JingleSessionPC} jingleSession the session instance to be rejected.\\n * @param {object} [options]\\n * @param {string} options.reason the name of the reason element as defined\\n * by Jingle\\n * @param {string} options.reasonDescription the reason description which will\\n * be included in Jingle 'session-terminate' message.\\n * @param {string} options.errorMsg an error message to be logged on global\\n * error handler\\n * @private\\n */\\nJitsiConference.prototype._rejectIncomingCall = function(\\n        jingleSession,\\n        options) {\\n    if (options && options.errorMsg) {\\n        GlobalOnErrorHandler.callErrorHandler(new Error(options.errorMsg));\\n    }\\n\\n    // Terminate the jingle session with a reason\\n    jingleSession.terminate(\\n        null /* success callback => we don't care */,\\n        error => {\\n            logger.warn(\\n                'An error occurred while trying to terminate'\\n                    + ' invalid Jingle session', error);\\n        }, {\\n            reason: options && options.reason,\\n            reasonDescription: options && options.reasonDescription,\\n            sendSessionTerminate: true\\n        });\\n};\\n\\n/**\\n * Handles the call ended event.\\n * XXX is this due to the remote side terminating the Jingle session?\\n *\\n * @param {JingleSessionPC} jingleSession the jingle session which has been\\n * terminated.\\n * @param {String} reasonCondition the Jingle reason condition.\\n * @param {String|null} reasonText human readable reason text which may provide\\n * more details about why the call has been terminated.\\n */\\nJitsiConference.prototype.onCallEnded = function(\\n        jingleSession,\\n        reasonCondition,\\n        reasonText) {\\n    logger.info(\\n        `Call ended: ${reasonCondition} - ${reasonText} P2P ?${\\n            jingleSession.isP2P}`);\\n    if (jingleSession === this.jvbJingleSession) {\\n        this.wasStopped = true;\\n\\n        Statistics.sendAnalytics(\\n            createJingleEvent(ACTION_JINGLE_TERMINATE, { p2p: false }));\\n\\n        // Stop the stats\\n        if (this.statistics) {\\n            this.statistics.stopRemoteStats(\\n                this.jvbJingleSession.peerconnection);\\n            logger.info('Stopping JVB CallStats');\\n            this.statistics.stopCallStats(\\n                this.jvbJingleSession.peerconnection);\\n        }\\n\\n        // Current JVB JingleSession is no longer valid, so set it to null\\n        this.jvbJingleSession = null;\\n\\n        // Let the RTC service do any cleanups\\n        this.rtc.onCallEnded();\\n    } else if (jingleSession === this.p2pJingleSession) {\\n        // It's the responder who decides to enforce JVB mode, so that both\\n        // initiator and responder are aware if it was intentional.\\n        if (reasonCondition === 'decline' && reasonText === 'force JVB121') {\\n            logger.info('In forced JVB 121 mode...');\\n            Statistics.analytics.addPermanentProperties({ forceJvb121: true });\\n        } else if (reasonCondition === 'connectivity-error'\\n            && reasonText === 'ICE FAILED') {\\n            // It can happen that the other peer detects ICE failed and\\n            // terminates the session, before we get the event on our side.\\n            // But we are able to parse the reason and mark it here.\\n            Statistics.analytics.addPermanentProperties({ p2pFailed: true });\\n        }\\n        this._stopP2PSession();\\n    } else {\\n        logger.error(\\n            'Received onCallEnded for invalid session',\\n            jingleSession.sid,\\n            jingleSession.remoteJid,\\n            reasonCondition,\\n            reasonText);\\n    }\\n};\\n\\n/**\\n * Handles the suspend detected event. Leaves the room and fires suspended.\\n * @param {JingleSessionPC} jingleSession\\n */\\nJitsiConference.prototype.onSuspendDetected = function(jingleSession) {\\n    if (!jingleSession.isP2P) {\\n        this.leave();\\n        this.eventEmitter.emit(JitsiConferenceEvents.SUSPEND_DETECTED);\\n    }\\n};\\n\\nJitsiConference.prototype.updateDTMFSupport = function() {\\n    let somebodySupportsDTMF = false;\\n    const participants = this.getParticipants();\\n\\n    // check if at least 1 participant supports DTMF\\n    for (let i = 0; i < participants.length; i += 1) {\\n        if (participants[i].supportsDTMF()) {\\n            somebodySupportsDTMF = true;\\n            break;\\n        }\\n    }\\n    if (somebodySupportsDTMF !== this.somebodySupportsDTMF) {\\n        this.somebodySupportsDTMF = somebodySupportsDTMF;\\n        this.eventEmitter.emit(\\n            JitsiConferenceEvents.DTMF_SUPPORT_CHANGED,\\n            somebodySupportsDTMF);\\n    }\\n};\\n\\n/**\\n * Allows to check if there is at least one user in the conference\\n * that supports DTMF.\\n * @returns {boolean} true if somebody supports DTMF, false otherwise\\n */\\nJitsiConference.prototype.isDTMFSupported = function() {\\n    return this.somebodySupportsDTMF;\\n};\\n\\n/**\\n * Returns the local user's ID\\n * @return {string} local user's ID\\n */\\nJitsiConference.prototype.myUserId = function() {\\n    return (\\n        this.room && this.room.myroomjid\\n            ? Strophe.getResourceFromJid(this.room.myroomjid)\\n            : null);\\n};\\n\\nJitsiConference.prototype.sendTones = function(tones, duration, pause) {\\n    if (!this.dtmfManager) {\\n        const peerConnection = this.getActivePeerConnection();\\n\\n        if (!peerConnection) {\\n            logger.warn('cannot sendTones: no peer connection');\\n\\n            return;\\n        }\\n\\n        const localAudio = this.getLocalAudioTrack();\\n\\n        if (!localAudio) {\\n            logger.warn('cannot sendTones: no local audio stream');\\n\\n            return;\\n        }\\n        this.dtmfManager = new JitsiDTMFManager(localAudio, peerConnection);\\n    }\\n\\n    this.dtmfManager.sendTones(tones, duration, pause);\\n};\\n\\n/**\\n * Starts recording the current conference.\\n *\\n * @param {Object} options - Configuration for the recording. See\\n * {@link Chatroom#startRecording} for more info.\\n * @returns {Promise} See {@link Chatroom#startRecording} for more info.\\n */\\nJitsiConference.prototype.startRecording = function(options) {\\n    if (this.room) {\\n        return this.recordingManager.startRecording(options);\\n    }\\n\\n    return Promise.reject(new Error('The conference is not created yet!'));\\n};\\n\\n/**\\n * Stop a recording session.\\n *\\n * @param {string} sessionID - The ID of the recording session that\\n * should be stopped.\\n * @returns {Promise} See {@link Chatroom#stopRecording} for more info.\\n */\\nJitsiConference.prototype.stopRecording = function(sessionID) {\\n    if (this.room) {\\n        return this.recordingManager.stopRecording(sessionID);\\n    }\\n\\n    return Promise.reject(new Error('The conference is not created yet!'));\\n};\\n\\n/**\\n * Returns true if the SIP calls are supported and false otherwise\\n */\\nJitsiConference.prototype.isSIPCallingSupported = function() {\\n    if (this.room) {\\n        return this.room.isSIPCallingSupported();\\n    }\\n\\n    return false;\\n};\\n\\n/**\\n * Dials a number.\\n * @param number the number\\n */\\nJitsiConference.prototype.dial = function(number) {\\n    if (this.room) {\\n        return this.room.dial(number);\\n    }\\n\\n    return new Promise((resolve, reject) => {\\n        reject(new Error('The conference is not created yet!'));\\n    });\\n};\\n\\n/**\\n * Hangup an existing call\\n */\\nJitsiConference.prototype.hangup = function() {\\n    if (this.room) {\\n        return this.room.hangup();\\n    }\\n\\n    return new Promise((resolve, reject) => {\\n        reject(new Error('The conference is not created yet!'));\\n    });\\n};\\n\\n/**\\n * Starts the transcription service.\\n */\\nJitsiConference.prototype.startTranscriber = function() {\\n    return this.dial('jitsi_meet_transcribe');\\n};\\n\\n\\n/**\\n * Stops the transcription service.\\n */\\nJitsiConference.prototype.stopTranscriber = JitsiConference.prototype.hangup;\\n\\n/**\\n * Returns the phone number for joining the conference.\\n */\\nJitsiConference.prototype.getPhoneNumber = function() {\\n    if (this.room) {\\n        return this.room.getPhoneNumber();\\n    }\\n\\n    return null;\\n};\\n\\n/**\\n * Returns the pin for joining the conference with phone.\\n */\\nJitsiConference.prototype.getPhonePin = function() {\\n    if (this.room) {\\n        return this.room.getPhonePin();\\n    }\\n\\n    return null;\\n};\\n\\n/**\\n * Will return P2P or JVB <tt>TraceablePeerConnection</tt> depending on\\n * which connection is currently active.\\n *\\n * @return {TraceablePeerConnection|null} null if there isn't any active\\n * <tt>TraceablePeerConnection</tt> currently available.\\n * @public (FIXME how to make package local ?)\\n */\\nJitsiConference.prototype.getActivePeerConnection = function() {\\n    if (this.isP2PActive()) {\\n        return this.p2pJingleSession.peerconnection;\\n    }\\n\\n    return this.jvbJingleSession ? this.jvbJingleSession.peerconnection : null;\\n};\\n\\n/**\\n * Returns the connection state for the current room. Its ice connection state\\n * for its session.\\n * NOTE that \\\"completed\\\" ICE state which can appear on the P2P connection will\\n * be converted to \\\"connected\\\".\\n * @return {string|null} ICE state name or <tt>null</tt> if there is no active\\n * peer connection at this time.\\n */\\nJitsiConference.prototype.getConnectionState = function() {\\n    const peerConnection = this.getActivePeerConnection();\\n\\n    return peerConnection ? peerConnection.getConnectionState() : null;\\n};\\n\\n/**\\n * Make all new participants mute their audio/video on join.\\n * @param policy {Object} object with 2 boolean properties for video and audio:\\n * @param {boolean} audio if audio should be muted.\\n * @param {boolean} video if video should be muted.\\n */\\nJitsiConference.prototype.setStartMutedPolicy = function(policy) {\\n    if (!this.isModerator()) {\\n        return;\\n    }\\n    this.startMutedPolicy = policy;\\n    this.room.removeFromPresence('startmuted');\\n    this.room.addToPresence('startmuted', {\\n        attributes: {\\n            audio: policy.audio,\\n            video: policy.video,\\n            xmlns: 'http://jitsi.org/jitmeet/start-muted'\\n        }\\n    });\\n    this.room.sendPresence();\\n};\\n\\n/**\\n * Returns current start muted policy\\n * @returns {Object} with 2 properties - audio and video.\\n */\\nJitsiConference.prototype.getStartMutedPolicy = function() {\\n    return this.startMutedPolicy;\\n};\\n\\n/**\\n * Check if audio is muted on join.\\n */\\nJitsiConference.prototype.isStartAudioMuted = function() {\\n    return this.startAudioMuted;\\n};\\n\\n/**\\n * Check if video is muted on join.\\n */\\nJitsiConference.prototype.isStartVideoMuted = function() {\\n    return this.startVideoMuted;\\n};\\n\\n/**\\n * Get object with internal logs.\\n */\\nJitsiConference.prototype.getLogs = function() {\\n    const data = this.xmpp.getJingleLog();\\n\\n    const metadata = {};\\n\\n    metadata.time = new Date();\\n    metadata.url = window.location.href;\\n    metadata.ua = navigator.userAgent;\\n\\n    const log = this.xmpp.getXmppLog();\\n\\n    if (log) {\\n        metadata.xmpp = log;\\n    }\\n\\n    data.metadata = metadata;\\n\\n    return data;\\n};\\n\\n/**\\n * Returns measured connectionTimes.\\n */\\nJitsiConference.prototype.getConnectionTimes = function() {\\n    return this.room.connectionTimes;\\n};\\n\\n/**\\n * Sets a property for the local participant.\\n */\\nJitsiConference.prototype.setLocalParticipantProperty = function(name, value) {\\n    this.sendCommand(`jitsi_participant_${name}`, { value });\\n};\\n\\n/**\\n *  Removes a property for the local participant and sends the updated presence.\\n */\\nJitsiConference.prototype.removeLocalParticipantProperty = function(name) {\\n    this.removeCommand(`jitsi_participant_${name}`);\\n    this.room.sendPresence();\\n};\\n\\n/**\\n * Gets a local participant property.\\n *\\n * @return value of the local participant property if the tagName exists in the\\n * list of properties, otherwise returns undefined.\\n */\\nJitsiConference.prototype.getLocalParticipantProperty = function(name) {\\n    const property = this.room.presMap.nodes.find(prop =>\\n        prop.tagName === `jitsi_participant_${name}`\\n    );\\n\\n    return property ? property.value : undefined;\\n};\\n\\n/**\\n * Sends the given feedback through CallStats if enabled.\\n *\\n * @param overallFeedback an integer between 1 and 5 indicating the\\n * user feedback\\n * @param detailedFeedback detailed feedback from the user. Not yet used\\n */\\nJitsiConference.prototype.sendFeedback = function(\\n        overallFeedback,\\n        detailedFeedback) {\\n    this.statistics.sendFeedback(overallFeedback, detailedFeedback);\\n};\\n\\n/**\\n * Returns true if the callstats integration is enabled, otherwise returns\\n * false.\\n *\\n * @returns true if the callstats integration is enabled, otherwise returns\\n * false.\\n */\\nJitsiConference.prototype.isCallstatsEnabled = function() {\\n    return this.statistics.isCallstatsEnabled();\\n};\\n\\n\\n/**\\n * Handles track attached to container (Calls associateStreamWithVideoTag method\\n * from statistics module)\\n * @param {JitsiLocalTrack|JitsiRemoteTrack} track the track\\n * @param container the container\\n */\\nJitsiConference.prototype._onTrackAttach = function(track, container) {\\n    const isLocal = track.isLocal();\\n    let ssrc = null;\\n    const isP2P = track.isP2P;\\n    const remoteUserId = isP2P ? track.getParticipantId() : 'jitsi';\\n    const peerConnection\\n        = isP2P\\n            ? this.p2pJingleSession && this.p2pJingleSession.peerconnection\\n            : this.jvbJingleSession && this.jvbJingleSession.peerconnection;\\n\\n    if (isLocal) {\\n        // Local tracks have SSRC stored on per peer connection basis\\n        if (peerConnection) {\\n            ssrc = peerConnection.getLocalSSRC(track);\\n        }\\n    } else {\\n        ssrc = track.getSSRC();\\n    }\\n    if (!container.id || !ssrc || !peerConnection) {\\n        return;\\n    }\\n\\n    this.statistics.associateStreamWithVideoTag(\\n        peerConnection,\\n        ssrc,\\n        isLocal,\\n        remoteUserId,\\n        track.getUsageLabel(),\\n        container.id);\\n};\\n\\n/**\\n * Logs an \\\"application log\\\" message.\\n * @param message {string} The message to log. Note that while this can be a\\n * generic string, the convention used by lib-jitsi-meet and jitsi-meet is to\\n * log valid JSON strings, with an \\\"id\\\" field used for distinguishing between\\n * message types. E.g.: {id: \\\"recorder_status\\\", status: \\\"off\\\"}\\n */\\nJitsiConference.prototype.sendApplicationLog = function(message) {\\n    Statistics.sendLog(message);\\n};\\n\\n/**\\n * Checks if the user identified by given <tt>mucJid</tt> is the conference\\n * focus.\\n * @param mucJid the full MUC address of the user to be checked.\\n * @returns {boolean|null} <tt>true</tt> if MUC user is the conference focus,\\n * <tt>false</tt> when is not. <tt>null</tt> if we're not in the MUC anymore and\\n * are unable to figure out the status or if given <tt>mucJid</tt> is invalid.\\n */\\nJitsiConference.prototype._isFocus = function(mucJid) {\\n    return this.room ? this.room.isFocus(mucJid) : null;\\n};\\n\\n/**\\n * Fires CONFERENCE_FAILED event with INCOMPATIBLE_SERVER_VERSIONS parameter\\n */\\nJitsiConference.prototype._fireIncompatibleVersionsEvent = function() {\\n    this.eventEmitter.emit(JitsiConferenceEvents.CONFERENCE_FAILED,\\n        JitsiConferenceErrors.INCOMPATIBLE_SERVER_VERSIONS);\\n};\\n\\n/**\\n * Sends a message via the data channel.\\n * @param to {string} the id of the endpoint that should receive the message.\\n * If \\\"\\\" the message will be sent to all participants.\\n * @param payload {object} the payload of the message.\\n * @throws NetworkError or InvalidStateError or Error if the operation fails.\\n * @deprecated Use 'sendMessage' instead. TODO: this should be private.\\n */\\nJitsiConference.prototype.sendEndpointMessage = function(to, payload) {\\n    this.rtc.sendChannelMessage(to, payload);\\n};\\n\\n/**\\n * Sends a broadcast message via the data channel.\\n * @param payload {object} the payload of the message.\\n * @throws NetworkError or InvalidStateError or Error if the operation fails.\\n * @deprecated Use 'sendMessage' instead. TODO: this should be private.\\n */\\nJitsiConference.prototype.broadcastEndpointMessage = function(payload) {\\n    this.sendEndpointMessage('', payload);\\n};\\n\\n/**\\n * Sends a message to a given endpoint (if 'to' is a non-empty string), or\\n * broadcasts it to all endpoints in the conference.\\n * @param {string} to The ID of the endpoint/participant which is to receive\\n * the message, or '' to broadcast the message to all endpoints in the\\n * conference.\\n * @param {string|object} message the message to send. If this is of type\\n * 'string' it will be sent as a chat message. If it is of type 'object', it\\n * will be encapsulated in a format recognized by jitsi-meet and converted to\\n * JSON before being sent.\\n * @param {boolean} sendThroughVideobridge Whether to send the message through\\n * jitsi-videobridge (via the COLIBRI data channel or web socket), or through\\n * the XMPP MUC. Currently only objects can be sent through jitsi-videobridge.\\n */\\nJitsiConference.prototype.sendMessage = function(\\n        message,\\n        to = '',\\n        sendThroughVideobridge = false) {\\n    const messageType = typeof message;\\n\\n    // Through videobridge we support only objects. Through XMPP we support\\n    // objects (encapsulated in a specific JSON format) and strings (i.e.\\n    // regular chat messages).\\n    if (messageType !== 'object'\\n            && (sendThroughVideobridge || messageType !== 'string')) {\\n        logger.error(`Can not send a message of type ${messageType}`);\\n\\n        return;\\n    }\\n\\n    if (sendThroughVideobridge) {\\n        this.sendEndpointMessage(to, message);\\n    } else {\\n        let messageToSend = message;\\n\\n        // Name of packet extension of message stanza to send the required\\n        // message in.\\n        let elementName = 'body';\\n\\n        if (messageType === 'object') {\\n            elementName = 'json-message';\\n\\n            // Mark as valid JSON message if not already\\n            if (!messageToSend.hasOwnProperty(JITSI_MEET_MUC_TYPE)) {\\n                messageToSend[JITSI_MEET_MUC_TYPE] = '';\\n            }\\n\\n            try {\\n                messageToSend = JSON.stringify(messageToSend);\\n            } catch (e) {\\n                logger.error('Can not send a message, stringify failed: ', e);\\n\\n                return;\\n            }\\n        }\\n\\n        if (to) {\\n            this.sendPrivateTextMessage(to, messageToSend, elementName);\\n        } else {\\n            // Broadcast\\n            this.sendTextMessage(messageToSend, elementName);\\n        }\\n    }\\n\\n};\\n\\nJitsiConference.prototype.isConnectionInterrupted = function() {\\n    return this.isP2PActive()\\n        ? this.isP2PConnectionInterrupted : this.isJvbConnectionInterrupted;\\n};\\n\\n/**\\n * Handles {@link XMPPEvents.CONNECTION_INTERRUPTED}\\n * @param {JingleSessionPC} session\\n * @private\\n */\\nJitsiConference.prototype._onIceConnectionInterrupted = function(session) {\\n    if (session.isP2P) {\\n        this.isP2PConnectionInterrupted = true;\\n    } else {\\n        this.isJvbConnectionInterrupted = true;\\n    }\\n    if (session.isP2P === this.isP2PActive()) {\\n        this.eventEmitter.emit(JitsiConferenceEvents.CONNECTION_INTERRUPTED);\\n    }\\n};\\n\\n/**\\n * Handles {@link XMPPEvents.CONNECTION_ICE_FAILED}\\n * @param {JingleSessionPC} session\\n * @private\\n */\\nJitsiConference.prototype._onIceConnectionFailed = function(session) {\\n    // We do nothing for the JVB connection, because it's up to the Jicofo to\\n    // eventually come up with the new offer (at least for the time being).\\n    if (session.isP2P) {\\n        // Add p2pFailed property to analytics to distinguish, between \\\"good\\\"\\n        // and \\\"bad\\\" connection\\n        Statistics.analytics.addPermanentProperties({ p2pFailed: true });\\n\\n        if (this.p2pJingleSession) {\\n            Statistics.sendAnalyticsAndLog(\\n                createP2PEvent(\\n                    ACTION_P2P_FAILED,\\n                    {\\n                        initiator: this.p2pJingleSession.isInitiator\\n                    }));\\n\\n        }\\n        this._stopP2PSession('connectivity-error', 'ICE FAILED');\\n    } else if (session && this.jvbJingleSession === session) {\\n        if (this.xmpp.isPingSupported()) {\\n            this._delayedIceFailed = new IceFailedNotification(this);\\n            this._delayedIceFailed.start(session);\\n        } else {\\n            // Let Jicofo know that the JVB's ICE connection has failed\\n            logger.info('PING not supported - sending ICE failed immediately');\\n            session.sendIceFailedNotification();\\n        }\\n    }\\n};\\n\\n/**\\n * Handles {@link XMPPEvents.CONNECTION_RESTORED}\\n * @param {JingleSessionPC} session\\n * @private\\n */\\nJitsiConference.prototype._onIceConnectionRestored = function(session) {\\n    if (session.isP2P) {\\n        this.isP2PConnectionInterrupted = false;\\n    } else {\\n        this.isJvbConnectionInterrupted = false;\\n        this._delayedIceFailed && this._delayedIceFailed.cancel();\\n    }\\n\\n    if (session.isP2P === this.isP2PActive()) {\\n        this.eventEmitter.emit(JitsiConferenceEvents.CONNECTION_RESTORED);\\n    }\\n};\\n\\n/**\\n * Accept incoming P2P Jingle call.\\n * @param {JingleSessionPC} jingleSession the session instance\\n * @param {jQuery} jingleOffer a jQuery selector pointing to 'jingle' IQ element\\n * @private\\n */\\nJitsiConference.prototype._acceptP2PIncomingCall = function(\\n        jingleSession,\\n        jingleOffer) {\\n    this.isP2PConnectionInterrupted = false;\\n\\n    // Accept the offer\\n    this.p2pJingleSession = jingleSession;\\n\\n    this.p2pJingleSession.initialize(this.room, this.rtc, this.options.config);\\n\\n    logger.info('Starting CallStats for P2P connection...');\\n\\n    let remoteID = Strophe.getResourceFromJid(this.p2pJingleSession.remoteJid);\\n\\n    if (this.options.config.enableStatsID) {\\n        const participant = this.participants[remoteID];\\n\\n        if (participant) {\\n            remoteID = participant.getStatsID() || remoteID;\\n        }\\n    }\\n\\n    this.statistics.startCallStats(\\n        this.p2pJingleSession.peerconnection,\\n        remoteID);\\n\\n    const localTracks = this.getLocalTracks();\\n\\n    this.p2pJingleSession.acceptOffer(\\n        jingleOffer,\\n        () => {\\n            logger.debug('Got RESULT for P2P \\\"session-accept\\\"');\\n        },\\n        error => {\\n            logger.error(\\n                'Failed to accept incoming P2P Jingle session', error);\\n        },\\n        localTracks);\\n};\\n\\n/**\\n * Adds remote tracks to the conference associated with the JVB session.\\n * @private\\n */\\nJitsiConference.prototype._addRemoteJVBTracks = function() {\\n    this._addRemoteTracks(\\n        'JVB', this.jvbJingleSession.peerconnection.getRemoteTracks());\\n};\\n\\n/**\\n * Adds remote tracks to the conference associated with the P2P session.\\n * @private\\n */\\nJitsiConference.prototype._addRemoteP2PTracks = function() {\\n    this._addRemoteTracks(\\n        'P2P', this.p2pJingleSession.peerconnection.getRemoteTracks());\\n};\\n\\n/**\\n * Generates fake \\\"remote track added\\\" events for given Jingle session.\\n * @param {string} logName the session's nickname which will appear in log\\n * messages.\\n * @param {Array<JitsiRemoteTrack>} remoteTracks the tracks that will be added\\n * @private\\n */\\nJitsiConference.prototype._addRemoteTracks = function(logName, remoteTracks) {\\n    for (const track of remoteTracks) {\\n        logger.info(`Adding remote ${logName} track: ${track}`);\\n        this.rtc.eventEmitter.emit(RTCEvents.REMOTE_TRACK_ADDED, track);\\n    }\\n};\\n\\n/**\\n * Called when {@link XMPPEvents.CONNECTION_ESTABLISHED} event is\\n * triggered for a {@link JingleSessionPC}. Switches the conference to use\\n * the P2P connection if the event comes from the P2P session.\\n * @param {JingleSessionPC} jingleSession the session instance.\\n * @private\\n */\\nJitsiConference.prototype._onIceConnectionEstablished = function(\\n        jingleSession) {\\n    if (this.p2pJingleSession !== null) {\\n        // store the establishment time of the p2p session as a field of the\\n        // JitsiConference because the p2pJingleSession might get disposed (thus\\n        // the value is lost).\\n        this.p2pEstablishmentDuration\\n            = this.p2pJingleSession.establishmentDuration;\\n    }\\n\\n    if (this.jvbJingleSession !== null) {\\n        this.jvbEstablishmentDuration\\n            = this.jvbJingleSession.establishmentDuration;\\n    }\\n\\n    let done = false;\\n    const forceJVB121Ratio = this.options.config.forceJVB121Ratio;\\n\\n    // We don't care about the JVB case, there's nothing to be done\\n    if (!jingleSession.isP2P) {\\n        done = true;\\n    } else if (this.p2pJingleSession !== jingleSession) {\\n        logger.error('CONNECTION_ESTABLISHED - wrong P2P session instance ?!');\\n\\n        done = true;\\n    } else if (!jingleSession.isInitiator\\n        && typeof forceJVB121Ratio === 'number'\\n        && Math.random() < forceJVB121Ratio) {\\n        logger.info(`Forcing JVB 121 mode (ratio=${forceJVB121Ratio})...`);\\n        Statistics.analytics.addPermanentProperties({ forceJvb121: true });\\n        this._stopP2PSession('decline', 'force JVB121');\\n\\n        done = true;\\n    }\\n\\n    if (!isNaN(this.p2pEstablishmentDuration)\\n        && !isNaN(this.jvbEstablishmentDuration)) {\\n        const establishmentDurationDiff\\n            = this.p2pEstablishmentDuration - this.jvbEstablishmentDuration;\\n\\n        Statistics.sendAnalytics(\\n            ICE_ESTABLISHMENT_DURATION_DIFF,\\n            { value: establishmentDurationDiff });\\n    }\\n\\n    if (jingleSession.isP2P === this.isP2PActive()) {\\n        this.eventEmitter.emit(JitsiConferenceEvents.CONNECTION_ESTABLISHED);\\n    }\\n\\n    if (done) {\\n\\n        return;\\n    }\\n\\n    // Update P2P status and emit events\\n    this._setP2PStatus(true);\\n\\n    // Remove remote tracks\\n    if (this.jvbJingleSession) {\\n        this._removeRemoteJVBTracks();\\n    } else {\\n        logger.info('Not removing remote JVB tracks - no session yet');\\n    }\\n\\n    this._addRemoteP2PTracks();\\n\\n    // Stop media transfer over the JVB connection\\n    if (this.jvbJingleSession) {\\n        this._suspendMediaTransferForJvbConnection();\\n    }\\n\\n    logger.info('Starting remote stats with p2p connection');\\n    this.statistics.startRemoteStats(this.p2pJingleSession.peerconnection);\\n\\n    Statistics.sendAnalyticsAndLog(\\n        createP2PEvent(\\n            ACTION_P2P_ESTABLISHED,\\n            {\\n                initiator: this.p2pJingleSession.isInitiator\\n            }));\\n\\n};\\n\\n/**\\n * Called when the chat room reads a new list of properties from jicofo's\\n * presence. The properties may have changed, but they don't have to.\\n *\\n * @param {Object} properties - The properties keyed by the property name\\n * ('key').\\n * @private\\n */\\nJitsiConference.prototype._updateProperties = function(properties = {}) {\\n    const changed = !isEqual(properties, this.properties);\\n\\n    this.properties = properties;\\n    if (changed) {\\n        this.eventEmitter.emit(\\n            JitsiConferenceEvents.PROPERTIES_CHANGED,\\n            this.properties);\\n\\n        // Some of the properties need to be added to analytics events.\\n        const analyticsKeys = [\\n\\n            // The number of jitsi-videobridge instances currently used for the\\n            // conference.\\n            'bridge-count',\\n\\n            // The conference creation time (set by jicofo).\\n            'created-ms',\\n            'octo-enabled'\\n        ];\\n\\n        analyticsKeys.forEach(key => {\\n            if (properties[key] !== undefined) {\\n                Statistics.analytics.addPermanentProperties({\\n                    [key.replace('-', '_')]: properties[key]\\n                });\\n            }\\n        });\\n    }\\n};\\n\\n/**\\n * Gets a conference property with a given key.\\n *\\n * @param {string} key - The key.\\n * @returns {*} The value\\n */\\nJitsiConference.prototype.getProperty = function(key) {\\n    return this.properties[key];\\n};\\n\\n/**\\n * Clears the deferred start P2P task if it has been scheduled.\\n * @private\\n */\\nJitsiConference.prototype._maybeClearDeferredStartP2P = function() {\\n    if (this.deferredStartP2PTask) {\\n        logger.info('Cleared deferred start P2P task');\\n        clearTimeout(this.deferredStartP2PTask);\\n        this.deferredStartP2PTask = null;\\n    }\\n};\\n\\n/**\\n * Removes from the conference remote tracks associated with the JVB\\n * connection.\\n * @private\\n */\\nJitsiConference.prototype._removeRemoteJVBTracks = function() {\\n    this._removeRemoteTracks(\\n        'JVB', this.jvbJingleSession.peerconnection.getRemoteTracks());\\n};\\n\\n/**\\n * Removes from the conference remote tracks associated with the P2P\\n * connection.\\n * @private\\n */\\nJitsiConference.prototype._removeRemoteP2PTracks = function() {\\n    this._removeRemoteTracks(\\n        'P2P', this.p2pJingleSession.peerconnection.getRemoteTracks());\\n};\\n\\n/**\\n * Generates fake \\\"remote track removed\\\" events for given Jingle session.\\n * @param {string} sessionNickname the session's nickname which will appear in\\n * log messages.\\n * @param {Array<JitsiRemoteTrack>} remoteTracks the tracks that will be removed\\n * @private\\n */\\nJitsiConference.prototype._removeRemoteTracks = function(\\n        sessionNickname,\\n        remoteTracks) {\\n    for (const track of remoteTracks) {\\n        logger.info(`Removing remote ${sessionNickname} track: ${track}`);\\n        this.rtc.eventEmitter.emit(RTCEvents.REMOTE_TRACK_REMOVED, track);\\n    }\\n};\\n\\n/**\\n * Resumes media transfer over the JVB connection.\\n * @private\\n */\\nJitsiConference.prototype._resumeMediaTransferForJvbConnection = function() {\\n    logger.info('Resuming media transfer over the JVB connection...');\\n    this.jvbJingleSession.setMediaTransferActive(true, true).then(\\n        () => {\\n            logger.info('Resumed media transfer over the JVB connection!');\\n        },\\n        error => {\\n            logger.error(\\n                'Failed to resume media transfer over the JVB connection:',\\n                error);\\n        });\\n};\\n\\n/**\\n * Sets new P2P status and updates some events/states hijacked from\\n * the <tt>JitsiConference</tt>.\\n * @param {boolean} newStatus the new P2P status value, <tt>true</tt> means that\\n * P2P is now in use, <tt>false</tt> means that the JVB connection is now in use\\n * @private\\n */\\nJitsiConference.prototype._setP2PStatus = function(newStatus) {\\n    if (this.p2p === newStatus) {\\n        logger.debug(`Called _setP2PStatus with the same status: ${newStatus}`);\\n\\n        return;\\n    }\\n    this.p2p = newStatus;\\n    if (newStatus) {\\n        logger.info('Peer to peer connection established!');\\n\\n        // When we end up in a valid P2P session need to reset the properties\\n        // in case they have persisted, after session with another peer.\\n        Statistics.analytics.addPermanentProperties({\\n            p2pFailed: false,\\n            forceJvb121: false\\n        });\\n\\n        // Sync up video transfer active in case p2pJingleSession not existed\\n        // when the lastN value was being adjusted.\\n        const isVideoActive = this.rtc.getLastN() !== 0;\\n\\n        this.p2pJingleSession\\n            .setMediaTransferActive(true, isVideoActive)\\n            .catch(error => {\\n                logger.error(\\n                    'Failed to sync up P2P video transfer status'\\n                        + `(${isVideoActive})`, error);\\n            });\\n    } else {\\n        logger.info('Peer to peer connection closed!');\\n    }\\n\\n    // Put the JVB connection on hold/resume\\n    if (this.jvbJingleSession) {\\n        this.statistics.sendConnectionResumeOrHoldEvent(\\n            this.jvbJingleSession.peerconnection, !newStatus);\\n    }\\n\\n    // Clear dtmfManager, so that it can be recreated with new connection\\n    this.dtmfManager = null;\\n\\n    // Update P2P status\\n    this.eventEmitter.emit(\\n        JitsiConferenceEvents.P2P_STATUS,\\n        this,\\n        this.p2p);\\n\\n    // Refresh connection interrupted/restored\\n    this.eventEmitter.emit(\\n        this.isConnectionInterrupted()\\n            ? JitsiConferenceEvents.CONNECTION_INTERRUPTED\\n            : JitsiConferenceEvents.CONNECTION_RESTORED);\\n};\\n\\n/**\\n * Starts new P2P session.\\n * @param {string} remoteJid the JID of the remote participant\\n * @private\\n */\\nJitsiConference.prototype._startP2PSession = function(remoteJid) {\\n    this._maybeClearDeferredStartP2P();\\n    if (this.p2pJingleSession) {\\n        logger.error('P2P session already started!');\\n\\n        return;\\n    }\\n\\n    this.isP2PConnectionInterrupted = false;\\n    this.p2pJingleSession\\n        = this.xmpp.connection.jingle.newP2PJingleSession(\\n            this.room.myroomjid,\\n            remoteJid);\\n    logger.info(\\n        'Created new P2P JingleSession', this.room.myroomjid, remoteJid);\\n\\n    this.p2pJingleSession.initialize(this.room, this.rtc, this.options.config);\\n\\n    logger.info('Starting CallStats for P2P connection...');\\n\\n    let remoteID = Strophe.getResourceFromJid(this.p2pJingleSession.remoteJid);\\n\\n    if (this.options.config.enableStatsID) {\\n        const participant = this.participants[remoteID];\\n\\n        if (participant) {\\n            remoteID = participant.getStatsID() || remoteID;\\n        }\\n    }\\n\\n    this.statistics.startCallStats(\\n        this.p2pJingleSession.peerconnection,\\n        remoteID);\\n\\n    // NOTE one may consider to start P2P with the local tracks detached,\\n    // but no data will be sent until ICE succeeds anyway. And we switch\\n    // immediately once the P2P ICE connects.\\n    const localTracks = this.getLocalTracks();\\n\\n    this.p2pJingleSession.invite(localTracks);\\n};\\n\\n/**\\n * Suspends media transfer over the JVB connection.\\n * @private\\n */\\nJitsiConference.prototype._suspendMediaTransferForJvbConnection = function() {\\n    logger.info('Suspending media transfer over the JVB connection...');\\n    this.jvbJingleSession.setMediaTransferActive(false, false).then(\\n        () => {\\n            logger.info('Suspended media transfer over the JVB connection !');\\n        },\\n        error => {\\n            logger.error(\\n                'Failed to suspend media transfer over the JVB connection:',\\n                error);\\n        });\\n};\\n\\n/**\\n * Method when called will decide whether it's the time to start or stop\\n * the P2P session.\\n * @param {boolean} userLeftEvent if <tt>true</tt> it means that the call\\n * originates from the user left event.\\n * @private\\n */\\nJitsiConference.prototype._maybeStartOrStopP2P = function(userLeftEvent) {\\n    if (!browser.supportsP2P()\\n        || !this.isP2PEnabled()\\n        || this.isP2PTestModeEnabled()) {\\n        logger.info('Auto P2P disabled');\\n\\n        return;\\n    }\\n    const peers = this.getParticipants();\\n    const peerCount = peers.length;\\n    const isModerator = this.isModerator();\\n    const hasBotPeer\\n        = peers.find(p => p._botType === 'poltergeist') !== undefined;\\n\\n    // FIXME 1 peer and it must *support* P2P switching\\n    const shouldBeInP2P = peerCount === 1 && !hasBotPeer;\\n\\n    logger.debug(\\n        `P2P? isModerator: ${isModerator}, peerCount: ${\\n            peerCount}, hasBotPeer: ${hasBotPeer} => ${\\n            shouldBeInP2P}`);\\n\\n    // Clear deferred \\\"start P2P\\\" task\\n    if (!shouldBeInP2P && this.deferredStartP2PTask) {\\n        this._maybeClearDeferredStartP2P();\\n    }\\n\\n    // Start peer to peer session\\n    if (isModerator && !this.p2pJingleSession && shouldBeInP2P) {\\n        const peer = peerCount && peers[0];\\n\\n        // Everyone is a moderator ?\\n        if (isModerator && peer.getRole() === 'moderator') {\\n            const myId = this.myUserId();\\n            const peersId = peer.getId();\\n\\n            if (myId > peersId) {\\n                logger.debug(\\n                    'Everyone\\\\'s a moderator - '\\n                    + 'the other peer should start P2P', myId, peersId);\\n\\n                return;\\n            } else if (myId === peersId) {\\n                logger.error('The same IDs ? ', myId, peersId);\\n\\n                return;\\n            }\\n        }\\n        const jid = peer.getJid();\\n\\n        if (userLeftEvent) {\\n            if (this.deferredStartP2PTask) {\\n                logger.error('Deferred start P2P task\\\\'s been set already!');\\n\\n                return;\\n            }\\n            logger.info(\\n                `Will start P2P with: ${jid} after ${\\n                    this.backToP2PDelay} seconds...`);\\n            this.deferredStartP2PTask = setTimeout(\\n                this._startP2PSession.bind(this, jid),\\n                this.backToP2PDelay * 1000);\\n        } else {\\n            logger.info(`Will start P2P with: ${jid}`);\\n            this._startP2PSession(jid);\\n        }\\n    } else if (this.p2pJingleSession && !shouldBeInP2P) {\\n        logger.info(`Will stop P2P with: ${this.p2pJingleSession.remoteJid}`);\\n\\n        // Log that there will be a switch back to the JVB connection\\n        if (this.p2pJingleSession.isInitiator && peerCount > 1) {\\n            Statistics.sendAnalyticsAndLog(\\n                createP2PEvent(ACTION_P2P_SWITCH_TO_JVB));\\n        }\\n        this._stopP2PSession();\\n    }\\n};\\n\\n/**\\n * Stops the current P2P session.\\n * @param {string} [reason=\\\"success\\\"] one of the Jingle \\\"reason\\\" element\\n * names as defined by https://xmpp.org/extensions/xep-0166.html#def-reason\\n * @param {string} [reasonDescription=\\\"Turing off P2P session\\\"] text\\n * description that will be included in the session terminate message\\n * @private\\n */\\nJitsiConference.prototype._stopP2PSession = function(\\n        reason,\\n        reasonDescription) {\\n    if (!this.p2pJingleSession) {\\n        logger.error('No P2P session to be stopped!');\\n\\n        return;\\n    }\\n\\n    const wasP2PEstablished = this.isP2PActive();\\n\\n    // Swap remote tracks, but only if the P2P has been fully established\\n    if (wasP2PEstablished) {\\n        if (this.jvbJingleSession) {\\n            this._resumeMediaTransferForJvbConnection();\\n        }\\n\\n        // Remove remote P2P tracks\\n        this._removeRemoteP2PTracks();\\n    }\\n\\n    // Stop P2P stats\\n    logger.info('Stopping remote stats for P2P connection');\\n    this.statistics.stopRemoteStats(this.p2pJingleSession.peerconnection);\\n    logger.info('Stopping CallStats for P2P connection');\\n    this.statistics.stopCallStats(this.p2pJingleSession.peerconnection);\\n\\n    this.p2pJingleSession.terminate(\\n        () => {\\n            logger.info('P2P session terminate RESULT');\\n        },\\n        error => {\\n            // Because both initiator and responder are simultaneously\\n            // terminating their JingleSessions in case of the 'to JVB switch'\\n            // when 3rd participant joins, both will dispose their sessions and\\n            // reply with 'item-not-found' (see strophe.jingle.js). We don't\\n            // want to log this as an error since it's expected behaviour.\\n            //\\n            // We want them both to terminate, because in case of initiator's\\n            // crash the responder would stay in P2P mode until ICE fails which\\n            // could take up to 20 seconds.\\n            //\\n            // NOTE lack of 'reason' is considered as graceful session terminate\\n            // where both initiator and responder terminate their sessions\\n            // simultaneously.\\n            if (reason) {\\n                logger.error(\\n                    'An error occurred while trying to terminate'\\n                        + ' P2P Jingle session', error);\\n            }\\n        }, {\\n            reason: reason ? reason : 'success',\\n            reasonDescription: reasonDescription\\n                ? reasonDescription : 'Turing off P2P session',\\n            sendSessionTerminate: this.room\\n                && this.getParticipantById(\\n                    Strophe.getResourceFromJid(this.p2pJingleSession.remoteJid))\\n        });\\n\\n    this.p2pJingleSession = null;\\n\\n    // Update P2P status and other affected events/states\\n    this._setP2PStatus(false);\\n\\n    if (wasP2PEstablished) {\\n        // Add back remote JVB tracks\\n        if (this.jvbJingleSession) {\\n            this._addRemoteJVBTracks();\\n        } else {\\n            logger.info('Not adding remote JVB tracks - no session yet');\\n        }\\n    }\\n};\\n\\n/**\\n * Checks whether or not the conference is currently in the peer to peer mode.\\n * Being in peer to peer mode means that the direct connection has been\\n * established and the P2P connection is being used for media transmission.\\n * @return {boolean} <tt>true</tt> if in P2P mode or <tt>false</tt> otherwise.\\n */\\nJitsiConference.prototype.isP2PActive = function() {\\n    return this.p2p;\\n};\\n\\n/**\\n * Returns the current ICE state of the P2P connection.\\n * NOTE: method is used by the jitsi-meet-torture tests.\\n * @return {string|null} an ICE state or <tt>null</tt> if there's currently\\n * no P2P connection.\\n */\\nJitsiConference.prototype.getP2PConnectionState = function() {\\n    if (this.isP2PActive()) {\\n        return this.p2pJingleSession.peerconnection.getConnectionState();\\n    }\\n\\n    return null;\\n};\\n\\n\\n/**\\n * Manually starts new P2P session (should be used only in the tests).\\n */\\nJitsiConference.prototype.startP2PSession = function() {\\n    const peers = this.getParticipants();\\n\\n    // Start peer to peer session\\n    if (peers.length === 1) {\\n        const peerJid = peers[0].getJid();\\n\\n        this._startP2PSession(peerJid);\\n    } else {\\n        throw new Error(\\n            'There must be exactly 1 participant to start the P2P session !');\\n    }\\n};\\n\\n/**\\n * Manually stops the current P2P session (should be used only in the tests)\\n */\\nJitsiConference.prototype.stopP2PSession = function() {\\n    this._stopP2PSession();\\n};\\n\\n/**\\n * Get a summary of how long current participants have been the dominant speaker\\n * @returns {object}\\n */\\nJitsiConference.prototype.getSpeakerStats = function() {\\n    return this.speakerStatsCollector.getStats();\\n};\\n\\n/**\\n * Sets the maximum video size the local participant should receive from remote\\n * participants.\\n *\\n * @param {number} maxFrameHeightPixels the maximum frame height, in pixels,\\n * this receiver is willing to receive.\\n * @returns {void}\\n */\\nJitsiConference.prototype.setReceiverVideoConstraint = function(\\n        maxFrameHeight) {\\n    this.rtc.setReceiverVideoConstraint(maxFrameHeight);\\n};\\n\\n/**\\n * Creates a video SIP GW session and returns it if service is enabled. Before\\n * creating a session one need to check whether video SIP GW service is\\n * available in the system {@link JitsiConference.isVideoSIPGWAvailable}. Even\\n * if there are available nodes to serve this request, after creating the\\n * session those nodes can be taken and the request about using the\\n * created session can fail.\\n *\\n * @param {string} sipAddress - The sip address to be used.\\n * @param {string} displayName - The display name to be used for this session.\\n * @returns {JitsiVideoSIPGWSession|Error} Returns null if conference is not\\n * initialised and there is no room.\\n */\\nJitsiConference.prototype.createVideoSIPGWSession\\n    = function(sipAddress, displayName) {\\n        if (!this.room) {\\n            return new Error(VideoSIPGWConstants.ERROR_NO_CONNECTION);\\n        }\\n\\n        return this.videoSIPGWHandler\\n            .createVideoSIPGWSession(sipAddress, displayName);\\n    };\\n\",\"/**\\n * Lodash (Custom Build) <https://lodash.com/>\\n * Build: `lodash modularize exports=\\\"npm\\\" -o ./`\\n * Copyright JS Foundation and other contributors <https://js.foundation/>\\n * Released under MIT license <https://lodash.com/license>\\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\\n */\\n\\n/** Used as the size to enable large array optimizations. */\\nvar LARGE_ARRAY_SIZE = 200;\\n\\n/** Used to stand-in for `undefined` hash values. */\\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\\n\\n/** Used to compose bitmasks for value comparisons. */\\nvar COMPARE_PARTIAL_FLAG = 1,\\n    COMPARE_UNORDERED_FLAG = 2;\\n\\n/** Used as references for various `Number` constants. */\\nvar MAX_SAFE_INTEGER = 9007199254740991;\\n\\n/** `Object#toString` result references. */\\nvar argsTag = '[object Arguments]',\\n    arrayTag = '[object Array]',\\n    asyncTag = '[object AsyncFunction]',\\n    boolTag = '[object Boolean]',\\n    dateTag = '[object Date]',\\n    errorTag = '[object Error]',\\n    funcTag = '[object Function]',\\n    genTag = '[object GeneratorFunction]',\\n    mapTag = '[object Map]',\\n    numberTag = '[object Number]',\\n    nullTag = '[object Null]',\\n    objectTag = '[object Object]',\\n    promiseTag = '[object Promise]',\\n    proxyTag = '[object Proxy]',\\n    regexpTag = '[object RegExp]',\\n    setTag = '[object Set]',\\n    stringTag = '[object String]',\\n    symbolTag = '[object Symbol]',\\n    undefinedTag = '[object Undefined]',\\n    weakMapTag = '[object WeakMap]';\\n\\nvar arrayBufferTag = '[object ArrayBuffer]',\\n    dataViewTag = '[object DataView]',\\n    float32Tag = '[object Float32Array]',\\n    float64Tag = '[object Float64Array]',\\n    int8Tag = '[object Int8Array]',\\n    int16Tag = '[object Int16Array]',\\n    int32Tag = '[object Int32Array]',\\n    uint8Tag = '[object Uint8Array]',\\n    uint8ClampedTag = '[object Uint8ClampedArray]',\\n    uint16Tag = '[object Uint16Array]',\\n    uint32Tag = '[object Uint32Array]';\\n\\n/**\\n * Used to match `RegExp`\\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\\n */\\nvar reRegExpChar = /[\\\\\\\\^$.*+?()[\\\\]{}|]/g;\\n\\n/** Used to detect host constructors (Safari). */\\nvar reIsHostCtor = /^\\\\[object .+?Constructor\\\\]$/;\\n\\n/** Used to detect unsigned integer values. */\\nvar reIsUint = /^(?:0|[1-9]\\\\d*)$/;\\n\\n/** Used to identify `toStringTag` values of typed arrays. */\\nvar typedArrayTags = {};\\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\\ntypedArrayTags[uint32Tag] = true;\\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\\ntypedArrayTags[weakMapTag] = false;\\n\\n/** Detect free variable `global` from Node.js. */\\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\\n\\n/** Detect free variable `self`. */\\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\\n\\n/** Used as a reference to the global object. */\\nvar root = freeGlobal || freeSelf || Function('return this')();\\n\\n/** Detect free variable `exports`. */\\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\\n\\n/** Detect free variable `module`. */\\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\\n\\n/** Detect the popular CommonJS extension `module.exports`. */\\nvar moduleExports = freeModule && freeModule.exports === freeExports;\\n\\n/** Detect free variable `process` from Node.js. */\\nvar freeProcess = moduleExports && freeGlobal.process;\\n\\n/** Used to access faster Node.js helpers. */\\nvar nodeUtil = (function() {\\n  try {\\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\\n  } catch (e) {}\\n}());\\n\\n/* Node.js helper references. */\\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\\n\\n/**\\n * A specialized version of `_.filter` for arrays without support for\\n * iteratee shorthands.\\n *\\n * @private\\n * @param {Array} [array] The array to iterate over.\\n * @param {Function} predicate The function invoked per iteration.\\n * @returns {Array} Returns the new filtered array.\\n */\\nfunction arrayFilter(array, predicate) {\\n  var index = -1,\\n      length = array == null ? 0 : array.length,\\n      resIndex = 0,\\n      result = [];\\n\\n  while (++index < length) {\\n    var value = array[index];\\n    if (predicate(value, index, array)) {\\n      result[resIndex++] = value;\\n    }\\n  }\\n  return result;\\n}\\n\\n/**\\n * Appends the elements of `values` to `array`.\\n *\\n * @private\\n * @param {Array} array The array to modify.\\n * @param {Array} values The values to append.\\n * @returns {Array} Returns `array`.\\n */\\nfunction arrayPush(array, values) {\\n  var index = -1,\\n      length = values.length,\\n      offset = array.length;\\n\\n  while (++index < length) {\\n    array[offset + index] = values[index];\\n  }\\n  return array;\\n}\\n\\n/**\\n * A specialized version of `_.some` for arrays without support for iteratee\\n * shorthands.\\n *\\n * @private\\n * @param {Array} [array] The array to iterate over.\\n * @param {Function} predicate The function invoked per iteration.\\n * @returns {boolean} Returns `true` if any element passes the predicate check,\\n *  else `false`.\\n */\\nfunction arraySome(array, predicate) {\\n  var index = -1,\\n      length = array == null ? 0 : array.length;\\n\\n  while (++index < length) {\\n    if (predicate(array[index], index, array)) {\\n      return true;\\n    }\\n  }\\n  return false;\\n}\\n\\n/**\\n * The base implementation of `_.times` without support for iteratee shorthands\\n * or max array length checks.\\n *\\n * @private\\n * @param {number} n The number of times to invoke `iteratee`.\\n * @param {Function} iteratee The function invoked per iteration.\\n * @returns {Array} Returns the array of results.\\n */\\nfunction baseTimes(n, iteratee) {\\n  var index = -1,\\n      result = Array(n);\\n\\n  while (++index < n) {\\n    result[index] = iteratee(index);\\n  }\\n  return result;\\n}\\n\\n/**\\n * The base implementation of `_.unary` without support for storing metadata.\\n *\\n * @private\\n * @param {Function} func The function to cap arguments for.\\n * @returns {Function} Returns the new capped function.\\n */\\nfunction baseUnary(func) {\\n  return function(value) {\\n    return func(value);\\n  };\\n}\\n\\n/**\\n * Checks if a `cache` value for `key` exists.\\n *\\n * @private\\n * @param {Object} cache The cache to query.\\n * @param {string} key The key of the entry to check.\\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\\n */\\nfunction cacheHas(cache, key) {\\n  return cache.has(key);\\n}\\n\\n/**\\n * Gets the value at `key` of `object`.\\n *\\n * @private\\n * @param {Object} [object] The object to query.\\n * @param {string} key The key of the property to get.\\n * @returns {*} Returns the property value.\\n */\\nfunction getValue(object, key) {\\n  return object == null ? undefined : object[key];\\n}\\n\\n/**\\n * Converts `map` to its key-value pairs.\\n *\\n * @private\\n * @param {Object} map The map to convert.\\n * @returns {Array} Returns the key-value pairs.\\n */\\nfunction mapToArray(map) {\\n  var index = -1,\\n      result = Array(map.size);\\n\\n  map.forEach(function(value, key) {\\n    result[++index] = [key, value];\\n  });\\n  return result;\\n}\\n\\n/**\\n * Creates a unary function that invokes `func` with its argument transformed.\\n *\\n * @private\\n * @param {Function} func The function to wrap.\\n * @param {Function} transform The argument transform.\\n * @returns {Function} Returns the new function.\\n */\\nfunction overArg(func, transform) {\\n  return function(arg) {\\n    return func(transform(arg));\\n  };\\n}\\n\\n/**\\n * Converts `set` to an array of its values.\\n *\\n * @private\\n * @param {Object} set The set to convert.\\n * @returns {Array} Returns the values.\\n */\\nfunction setToArray(set) {\\n  var index = -1,\\n      result = Array(set.size);\\n\\n  set.forEach(function(value) {\\n    result[++index] = value;\\n  });\\n  return result;\\n}\\n\\n/** Used for built-in method references. */\\nvar arrayProto = Array.prototype,\\n    funcProto = Function.prototype,\\n    objectProto = Object.prototype;\\n\\n/** Used to detect overreaching core-js shims. */\\nvar coreJsData = root['__core-js_shared__'];\\n\\n/** Used to resolve the decompiled source of functions. */\\nvar funcToString = funcProto.toString;\\n\\n/** Used to check objects for own properties. */\\nvar hasOwnProperty = objectProto.hasOwnProperty;\\n\\n/** Used to detect methods masquerading as native. */\\nvar maskSrcKey = (function() {\\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\\n  return uid ? ('Symbol(src)_1.' + uid) : '';\\n}());\\n\\n/**\\n * Used to resolve the\\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\\n * of values.\\n */\\nvar nativeObjectToString = objectProto.toString;\\n\\n/** Used to detect if a method is native. */\\nvar reIsNative = RegExp('^' +\\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\\\\\$&')\\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\\\\\\\()| for .+?(?=\\\\\\\\\\\\])/g, '$1.*?') + '$'\\n);\\n\\n/** Built-in value references. */\\nvar Buffer = moduleExports ? root.Buffer : undefined,\\n    Symbol = root.Symbol,\\n    Uint8Array = root.Uint8Array,\\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\\n    splice = arrayProto.splice,\\n    symToStringTag = Symbol ? Symbol.toStringTag : undefined;\\n\\n/* Built-in method references for those with the same name as other `lodash` methods. */\\nvar nativeGetSymbols = Object.getOwnPropertySymbols,\\n    nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\\n    nativeKeys = overArg(Object.keys, Object);\\n\\n/* Built-in method references that are verified to be native. */\\nvar DataView = getNative(root, 'DataView'),\\n    Map = getNative(root, 'Map'),\\n    Promise = getNative(root, 'Promise'),\\n    Set = getNative(root, 'Set'),\\n    WeakMap = getNative(root, 'WeakMap'),\\n    nativeCreate = getNative(Object, 'create');\\n\\n/** Used to detect maps, sets, and weakmaps. */\\nvar dataViewCtorString = toSource(DataView),\\n    mapCtorString = toSource(Map),\\n    promiseCtorString = toSource(Promise),\\n    setCtorString = toSource(Set),\\n    weakMapCtorString = toSource(WeakMap);\\n\\n/** Used to convert symbols to primitives and strings. */\\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\\n\\n/**\\n * Creates a hash object.\\n *\\n * @private\\n * @constructor\\n * @param {Array} [entries] The key-value pairs to cache.\\n */\\nfunction Hash(entries) {\\n  var index = -1,\\n      length = entries == null ? 0 : entries.length;\\n\\n  this.clear();\\n  while (++index < length) {\\n    var entry = entries[index];\\n    this.set(entry[0], entry[1]);\\n  }\\n}\\n\\n/**\\n * Removes all key-value entries from the hash.\\n *\\n * @private\\n * @name clear\\n * @memberOf Hash\\n */\\nfunction hashClear() {\\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\\n  this.size = 0;\\n}\\n\\n/**\\n * Removes `key` and its value from the hash.\\n *\\n * @private\\n * @name delete\\n * @memberOf Hash\\n * @param {Object} hash The hash to modify.\\n * @param {string} key The key of the value to remove.\\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\\n */\\nfunction hashDelete(key) {\\n  var result = this.has(key) && delete this.__data__[key];\\n  this.size -= result ? 1 : 0;\\n  return result;\\n}\\n\\n/**\\n * Gets the hash value for `key`.\\n *\\n * @private\\n * @name get\\n * @memberOf Hash\\n * @param {string} key The key of the value to get.\\n * @returns {*} Returns the entry value.\\n */\\nfunction hashGet(key) {\\n  var data = this.__data__;\\n  if (nativeCreate) {\\n    var result = data[key];\\n    return result === HASH_UNDEFINED ? undefined : result;\\n  }\\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\\n}\\n\\n/**\\n * Checks if a hash value for `key` exists.\\n *\\n * @private\\n * @name has\\n * @memberOf Hash\\n * @param {string} key The key of the entry to check.\\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\\n */\\nfunction hashHas(key) {\\n  var data = this.__data__;\\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\\n}\\n\\n/**\\n * Sets the hash `key` to `value`.\\n *\\n * @private\\n * @name set\\n * @memberOf Hash\\n * @param {string} key The key of the value to set.\\n * @param {*} value The value to set.\\n * @returns {Object} Returns the hash instance.\\n */\\nfunction hashSet(key, value) {\\n  var data = this.__data__;\\n  this.size += this.has(key) ? 0 : 1;\\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\\n  return this;\\n}\\n\\n// Add methods to `Hash`.\\nHash.prototype.clear = hashClear;\\nHash.prototype['delete'] = hashDelete;\\nHash.prototype.get = hashGet;\\nHash.prototype.has = hashHas;\\nHash.prototype.set = hashSet;\\n\\n/**\\n * Creates an list cache object.\\n *\\n * @private\\n * @constructor\\n * @param {Array} [entries] The key-value pairs to cache.\\n */\\nfunction ListCache(entries) {\\n  var index = -1,\\n      length = entries == null ? 0 : entries.length;\\n\\n  this.clear();\\n  while (++index < length) {\\n    var entry = entries[index];\\n    this.set(entry[0], entry[1]);\\n  }\\n}\\n\\n/**\\n * Removes all key-value entries from the list cache.\\n *\\n * @private\\n * @name clear\\n * @memberOf ListCache\\n */\\nfunction listCacheClear() {\\n  this.__data__ = [];\\n  this.size = 0;\\n}\\n\\n/**\\n * Removes `key` and its value from the list cache.\\n *\\n * @private\\n * @name delete\\n * @memberOf ListCache\\n * @param {string} key The key of the value to remove.\\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\\n */\\nfunction listCacheDelete(key) {\\n  var data = this.__data__,\\n      index = assocIndexOf(data, key);\\n\\n  if (index < 0) {\\n    return false;\\n  }\\n  var lastIndex = data.length - 1;\\n  if (index == lastIndex) {\\n    data.pop();\\n  } else {\\n    splice.call(data, index, 1);\\n  }\\n  --this.size;\\n  return true;\\n}\\n\\n/**\\n * Gets the list cache value for `key`.\\n *\\n * @private\\n * @name get\\n * @memberOf ListCache\\n * @param {string} key The key of the value to get.\\n * @returns {*} Returns the entry value.\\n */\\nfunction listCacheGet(key) {\\n  var data = this.__data__,\\n      index = assocIndexOf(data, key);\\n\\n  return index < 0 ? undefined : data[index][1];\\n}\\n\\n/**\\n * Checks if a list cache value for `key` exists.\\n *\\n * @private\\n * @name has\\n * @memberOf ListCache\\n * @param {string} key The key of the entry to check.\\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\\n */\\nfunction listCacheHas(key) {\\n  return assocIndexOf(this.__data__, key) > -1;\\n}\\n\\n/**\\n * Sets the list cache `key` to `value`.\\n *\\n * @private\\n * @name set\\n * @memberOf ListCache\\n * @param {string} key The key of the value to set.\\n * @param {*} value The value to set.\\n * @returns {Object} Returns the list cache instance.\\n */\\nfunction listCacheSet(key, value) {\\n  var data = this.__data__,\\n      index = assocIndexOf(data, key);\\n\\n  if (index < 0) {\\n    ++this.size;\\n    data.push([key, value]);\\n  } else {\\n    data[index][1] = value;\\n  }\\n  return this;\\n}\\n\\n// Add methods to `ListCache`.\\nListCache.prototype.clear = listCacheClear;\\nListCache.prototype['delete'] = listCacheDelete;\\nListCache.prototype.get = listCacheGet;\\nListCache.prototype.has = listCacheHas;\\nListCache.prototype.set = listCacheSet;\\n\\n/**\\n * Creates a map cache object to store key-value pairs.\\n *\\n * @private\\n * @constructor\\n * @param {Array} [entries] The key-value pairs to cache.\\n */\\nfunction MapCache(entries) {\\n  var index = -1,\\n      length = entries == null ? 0 : entries.length;\\n\\n  this.clear();\\n  while (++index < length) {\\n    var entry = entries[index];\\n    this.set(entry[0], entry[1]);\\n  }\\n}\\n\\n/**\\n * Removes all key-value entries from the map.\\n *\\n * @private\\n * @name clear\\n * @memberOf MapCache\\n */\\nfunction mapCacheClear() {\\n  this.size = 0;\\n  this.__data__ = {\\n    'hash': new Hash,\\n    'map': new (Map || ListCache),\\n    'string': new Hash\\n  };\\n}\\n\\n/**\\n * Removes `key` and its value from the map.\\n *\\n * @private\\n * @name delete\\n * @memberOf MapCache\\n * @param {string} key The key of the value to remove.\\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\\n */\\nfunction mapCacheDelete(key) {\\n  var result = getMapData(this, key)['delete'](key);\\n  this.size -= result ? 1 : 0;\\n  return result;\\n}\\n\\n/**\\n * Gets the map value for `key`.\\n *\\n * @private\\n * @name get\\n * @memberOf MapCache\\n * @param {string} key The key of the value to get.\\n * @returns {*} Returns the entry value.\\n */\\nfunction mapCacheGet(key) {\\n  return getMapData(this, key).get(key);\\n}\\n\\n/**\\n * Checks if a map value for `key` exists.\\n *\\n * @private\\n * @name has\\n * @memberOf MapCache\\n * @param {string} key The key of the entry to check.\\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\\n */\\nfunction mapCacheHas(key) {\\n  return getMapData(this, key).has(key);\\n}\\n\\n/**\\n * Sets the map `key` to `value`.\\n *\\n * @private\\n * @name set\\n * @memberOf MapCache\\n * @param {string} key The key of the value to set.\\n * @param {*} value The value to set.\\n * @returns {Object} Returns the map cache instance.\\n */\\nfunction mapCacheSet(key, value) {\\n  var data = getMapData(this, key),\\n      size = data.size;\\n\\n  data.set(key, value);\\n  this.size += data.size == size ? 0 : 1;\\n  return this;\\n}\\n\\n// Add methods to `MapCache`.\\nMapCache.prototype.clear = mapCacheClear;\\nMapCache.prototype['delete'] = mapCacheDelete;\\nMapCache.prototype.get = mapCacheGet;\\nMapCache.prototype.has = mapCacheHas;\\nMapCache.prototype.set = mapCacheSet;\\n\\n/**\\n *\\n * Creates an array cache object to store unique values.\\n *\\n * @private\\n * @constructor\\n * @param {Array} [values] The values to cache.\\n */\\nfunction SetCache(values) {\\n  var index = -1,\\n      length = values == null ? 0 : values.length;\\n\\n  this.__data__ = new MapCache;\\n  while (++index < length) {\\n    this.add(values[index]);\\n  }\\n}\\n\\n/**\\n * Adds `value` to the array cache.\\n *\\n * @private\\n * @name add\\n * @memberOf SetCache\\n * @alias push\\n * @param {*} value The value to cache.\\n * @returns {Object} Returns the cache instance.\\n */\\nfunction setCacheAdd(value) {\\n  this.__data__.set(value, HASH_UNDEFINED);\\n  return this;\\n}\\n\\n/**\\n * Checks if `value` is in the array cache.\\n *\\n * @private\\n * @name has\\n * @memberOf SetCache\\n * @param {*} value The value to search for.\\n * @returns {number} Returns `true` if `value` is found, else `false`.\\n */\\nfunction setCacheHas(value) {\\n  return this.__data__.has(value);\\n}\\n\\n// Add methods to `SetCache`.\\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\\nSetCache.prototype.has = setCacheHas;\\n\\n/**\\n * Creates a stack cache object to store key-value pairs.\\n *\\n * @private\\n * @constructor\\n * @param {Array} [entries] The key-value pairs to cache.\\n */\\nfunction Stack(entries) {\\n  var data = this.__data__ = new ListCache(entries);\\n  this.size = data.size;\\n}\\n\\n/**\\n * Removes all key-value entries from the stack.\\n *\\n * @private\\n * @name clear\\n * @memberOf Stack\\n */\\nfunction stackClear() {\\n  this.__data__ = new ListCache;\\n  this.size = 0;\\n}\\n\\n/**\\n * Removes `key` and its value from the stack.\\n *\\n * @private\\n * @name delete\\n * @memberOf Stack\\n * @param {string} key The key of the value to remove.\\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\\n */\\nfunction stackDelete(key) {\\n  var data = this.__data__,\\n      result = data['delete'](key);\\n\\n  this.size = data.size;\\n  return result;\\n}\\n\\n/**\\n * Gets the stack value for `key`.\\n *\\n * @private\\n * @name get\\n * @memberOf Stack\\n * @param {string} key The key of the value to get.\\n * @returns {*} Returns the entry value.\\n */\\nfunction stackGet(key) {\\n  return this.__data__.get(key);\\n}\\n\\n/**\\n * Checks if a stack value for `key` exists.\\n *\\n * @private\\n * @name has\\n * @memberOf Stack\\n * @param {string} key The key of the entry to check.\\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\\n */\\nfunction stackHas(key) {\\n  return this.__data__.has(key);\\n}\\n\\n/**\\n * Sets the stack `key` to `value`.\\n *\\n * @private\\n * @name set\\n * @memberOf Stack\\n * @param {string} key The key of the value to set.\\n * @param {*} value The value to set.\\n * @returns {Object} Returns the stack cache instance.\\n */\\nfunction stackSet(key, value) {\\n  var data = this.__data__;\\n  if (data instanceof ListCache) {\\n    var pairs = data.__data__;\\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\\n      pairs.push([key, value]);\\n      this.size = ++data.size;\\n      return this;\\n    }\\n    data = this.__data__ = new MapCache(pairs);\\n  }\\n  data.set(key, value);\\n  this.size = data.size;\\n  return this;\\n}\\n\\n// Add methods to `Stack`.\\nStack.prototype.clear = stackClear;\\nStack.prototype['delete'] = stackDelete;\\nStack.prototype.get = stackGet;\\nStack.prototype.has = stackHas;\\nStack.prototype.set = stackSet;\\n\\n/**\\n * Creates an array of the enumerable property names of the array-like `value`.\\n *\\n * @private\\n * @param {*} value The value to query.\\n * @param {boolean} inherited Specify returning inherited property names.\\n * @returns {Array} Returns the array of property names.\\n */\\nfunction arrayLikeKeys(value, inherited) {\\n  var isArr = isArray(value),\\n      isArg = !isArr && isArguments(value),\\n      isBuff = !isArr && !isArg && isBuffer(value),\\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\\n      skipIndexes = isArr || isArg || isBuff || isType,\\n      result = skipIndexes ? baseTimes(value.length, String) : [],\\n      length = result.length;\\n\\n  for (var key in value) {\\n    if ((inherited || hasOwnProperty.call(value, key)) &&\\n        !(skipIndexes && (\\n           // Safari 9 has enumerable `arguments.length` in strict mode.\\n           key == 'length' ||\\n           // Node.js 0.10 has enumerable non-index properties on buffers.\\n           (isBuff && (key == 'offset' || key == 'parent')) ||\\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\\n           // Skip index properties.\\n           isIndex(key, length)\\n        ))) {\\n      result.push(key);\\n    }\\n  }\\n  return result;\\n}\\n\\n/**\\n * Gets the index at which the `key` is found in `array` of key-value pairs.\\n *\\n * @private\\n * @param {Array} array The array to inspect.\\n * @param {*} key The key to search for.\\n * @returns {number} Returns the index of the matched value, else `-1`.\\n */\\nfunction assocIndexOf(array, key) {\\n  var length = array.length;\\n  while (length--) {\\n    if (eq(array[length][0], key)) {\\n      return length;\\n    }\\n  }\\n  return -1;\\n}\\n\\n/**\\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\\n * symbols of `object`.\\n *\\n * @private\\n * @param {Object} object The object to query.\\n * @param {Function} keysFunc The function to get the keys of `object`.\\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\\n * @returns {Array} Returns the array of property names and symbols.\\n */\\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\\n  var result = keysFunc(object);\\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\\n}\\n\\n/**\\n * The base implementation of `getTag` without fallbacks for buggy environments.\\n *\\n * @private\\n * @param {*} value The value to query.\\n * @returns {string} Returns the `toStringTag`.\\n */\\nfunction baseGetTag(value) {\\n  if (value == null) {\\n    return value === undefined ? undefinedTag : nullTag;\\n  }\\n  return (symToStringTag && symToStringTag in Object(value))\\n    ? getRawTag(value)\\n    : objectToString(value);\\n}\\n\\n/**\\n * The base implementation of `_.isArguments`.\\n *\\n * @private\\n * @param {*} value The value to check.\\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\\n */\\nfunction baseIsArguments(value) {\\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\\n}\\n\\n/**\\n * The base implementation of `_.isEqual` which supports partial comparisons\\n * and tracks traversed objects.\\n *\\n * @private\\n * @param {*} value The value to compare.\\n * @param {*} other The other value to compare.\\n * @param {boolean} bitmask The bitmask flags.\\n *  1 - Unordered comparison\\n *  2 - Partial comparison\\n * @param {Function} [customizer] The function to customize comparisons.\\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\\n */\\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\\n  if (value === other) {\\n    return true;\\n  }\\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\\n    return value !== value && other !== other;\\n  }\\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\\n}\\n\\n/**\\n * A specialized version of `baseIsEqual` for arrays and objects which performs\\n * deep comparisons and tracks traversed objects enabling objects with circular\\n * references to be compared.\\n *\\n * @private\\n * @param {Object} object The object to compare.\\n * @param {Object} other The other object to compare.\\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\\n * @param {Function} customizer The function to customize comparisons.\\n * @param {Function} equalFunc The function to determine equivalents of values.\\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\\n */\\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\\n  var objIsArr = isArray(object),\\n      othIsArr = isArray(other),\\n      objTag = objIsArr ? arrayTag : getTag(object),\\n      othTag = othIsArr ? arrayTag : getTag(other);\\n\\n  objTag = objTag == argsTag ? objectTag : objTag;\\n  othTag = othTag == argsTag ? objectTag : othTag;\\n\\n  var objIsObj = objTag == objectTag,\\n      othIsObj = othTag == objectTag,\\n      isSameTag = objTag == othTag;\\n\\n  if (isSameTag && isBuffer(object)) {\\n    if (!isBuffer(other)) {\\n      return false;\\n    }\\n    objIsArr = true;\\n    objIsObj = false;\\n  }\\n  if (isSameTag && !objIsObj) {\\n    stack || (stack = new Stack);\\n    return (objIsArr || isTypedArray(object))\\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\\n  }\\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\\n\\n    if (objIsWrapped || othIsWrapped) {\\n      var objUnwrapped = objIsWrapped ? object.value() : object,\\n          othUnwrapped = othIsWrapped ? other.value() : other;\\n\\n      stack || (stack = new Stack);\\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\\n    }\\n  }\\n  if (!isSameTag) {\\n    return false;\\n  }\\n  stack || (stack = new Stack);\\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\\n}\\n\\n/**\\n * The base implementation of `_.isNative` without bad shim checks.\\n *\\n * @private\\n * @param {*} value The value to check.\\n * @returns {boolean} Returns `true` if `value` is a native function,\\n *  else `false`.\\n */\\nfunction baseIsNative(value) {\\n  if (!isObject(value) || isMasked(value)) {\\n    return false;\\n  }\\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\\n  return pattern.test(toSource(value));\\n}\\n\\n/**\\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\\n *\\n * @private\\n * @param {*} value The value to check.\\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\\n */\\nfunction baseIsTypedArray(value) {\\n  return isObjectLike(value) &&\\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\\n}\\n\\n/**\\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\\n *\\n * @private\\n * @param {Object} object The object to query.\\n * @returns {Array} Returns the array of property names.\\n */\\nfunction baseKeys(object) {\\n  if (!isPrototype(object)) {\\n    return nativeKeys(object);\\n  }\\n  var result = [];\\n  for (var key in Object(object)) {\\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\\n      result.push(key);\\n    }\\n  }\\n  return result;\\n}\\n\\n/**\\n * A specialized version of `baseIsEqualDeep` for arrays with support for\\n * partial deep comparisons.\\n *\\n * @private\\n * @param {Array} array The array to compare.\\n * @param {Array} other The other array to compare.\\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\\n * @param {Function} customizer The function to customize comparisons.\\n * @param {Function} equalFunc The function to determine equivalents of values.\\n * @param {Object} stack Tracks traversed `array` and `other` objects.\\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\\n */\\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\\n      arrLength = array.length,\\n      othLength = other.length;\\n\\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\\n    return false;\\n  }\\n  // Assume cyclic values are equal.\\n  var stacked = stack.get(array);\\n  if (stacked && stack.get(other)) {\\n    return stacked == other;\\n  }\\n  var index = -1,\\n      result = true,\\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\\n\\n  stack.set(array, other);\\n  stack.set(other, array);\\n\\n  // Ignore non-index properties.\\n  while (++index < arrLength) {\\n    var arrValue = array[index],\\n        othValue = other[index];\\n\\n    if (customizer) {\\n      var compared = isPartial\\n        ? customizer(othValue, arrValue, index, other, array, stack)\\n        : customizer(arrValue, othValue, index, array, other, stack);\\n    }\\n    if (compared !== undefined) {\\n      if (compared) {\\n        continue;\\n      }\\n      result = false;\\n      break;\\n    }\\n    // Recursively compare arrays (susceptible to call stack limits).\\n    if (seen) {\\n      if (!arraySome(other, function(othValue, othIndex) {\\n            if (!cacheHas(seen, othIndex) &&\\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\\n              return seen.push(othIndex);\\n            }\\n          })) {\\n        result = false;\\n        break;\\n      }\\n    } else if (!(\\n          arrValue === othValue ||\\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\\n        )) {\\n      result = false;\\n      break;\\n    }\\n  }\\n  stack['delete'](array);\\n  stack['delete'](other);\\n  return result;\\n}\\n\\n/**\\n * A specialized version of `baseIsEqualDeep` for comparing objects of\\n * the same `toStringTag`.\\n *\\n * **Note:** This function only supports comparing values with tags of\\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\\n *\\n * @private\\n * @param {Object} object The object to compare.\\n * @param {Object} other The other object to compare.\\n * @param {string} tag The `toStringTag` of the objects to compare.\\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\\n * @param {Function} customizer The function to customize comparisons.\\n * @param {Function} equalFunc The function to determine equivalents of values.\\n * @param {Object} stack Tracks traversed `object` and `other` objects.\\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\\n */\\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\\n  switch (tag) {\\n    case dataViewTag:\\n      if ((object.byteLength != other.byteLength) ||\\n          (object.byteOffset != other.byteOffset)) {\\n        return false;\\n      }\\n      object = object.buffer;\\n      other = other.buffer;\\n\\n    case arrayBufferTag:\\n      if ((object.byteLength != other.byteLength) ||\\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\\n        return false;\\n      }\\n      return true;\\n\\n    case boolTag:\\n    case dateTag:\\n    case numberTag:\\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\\n      // Invalid dates are coerced to `NaN`.\\n      return eq(+object, +other);\\n\\n    case errorTag:\\n      return object.name == other.name && object.message == other.message;\\n\\n    case regexpTag:\\n    case stringTag:\\n      // Coerce regexes to strings and treat strings, primitives and objects,\\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\\n      // for more details.\\n      return object == (other + '');\\n\\n    case mapTag:\\n      var convert = mapToArray;\\n\\n    case setTag:\\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\\n      convert || (convert = setToArray);\\n\\n      if (object.size != other.size && !isPartial) {\\n        return false;\\n      }\\n      // Assume cyclic values are equal.\\n      var stacked = stack.get(object);\\n      if (stacked) {\\n        return stacked == other;\\n      }\\n      bitmask |= COMPARE_UNORDERED_FLAG;\\n\\n      // Recursively compare objects (susceptible to call stack limits).\\n      stack.set(object, other);\\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\\n      stack['delete'](object);\\n      return result;\\n\\n    case symbolTag:\\n      if (symbolValueOf) {\\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\\n      }\\n  }\\n  return false;\\n}\\n\\n/**\\n * A specialized version of `baseIsEqualDeep` for objects with support for\\n * partial deep comparisons.\\n *\\n * @private\\n * @param {Object} object The object to compare.\\n * @param {Object} other The other object to compare.\\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\\n * @param {Function} customizer The function to customize comparisons.\\n * @param {Function} equalFunc The function to determine equivalents of values.\\n * @param {Object} stack Tracks traversed `object` and `other` objects.\\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\\n */\\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\\n      objProps = getAllKeys(object),\\n      objLength = objProps.length,\\n      othProps = getAllKeys(other),\\n      othLength = othProps.length;\\n\\n  if (objLength != othLength && !isPartial) {\\n    return false;\\n  }\\n  var index = objLength;\\n  while (index--) {\\n    var key = objProps[index];\\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\\n      return false;\\n    }\\n  }\\n  // Assume cyclic values are equal.\\n  var stacked = stack.get(object);\\n  if (stacked && stack.get(other)) {\\n    return stacked == other;\\n  }\\n  var result = true;\\n  stack.set(object, other);\\n  stack.set(other, object);\\n\\n  var skipCtor = isPartial;\\n  while (++index < objLength) {\\n    key = objProps[index];\\n    var objValue = object[key],\\n        othValue = other[key];\\n\\n    if (customizer) {\\n      var compared = isPartial\\n        ? customizer(othValue, objValue, key, other, object, stack)\\n        : customizer(objValue, othValue, key, object, other, stack);\\n    }\\n    // Recursively compare objects (susceptible to call stack limits).\\n    if (!(compared === undefined\\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\\n          : compared\\n        )) {\\n      result = false;\\n      break;\\n    }\\n    skipCtor || (skipCtor = key == 'constructor');\\n  }\\n  if (result && !skipCtor) {\\n    var objCtor = object.constructor,\\n        othCtor = other.constructor;\\n\\n    // Non `Object` object instances with different constructors are not equal.\\n    if (objCtor != othCtor &&\\n        ('constructor' in object && 'constructor' in other) &&\\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\\n      result = false;\\n    }\\n  }\\n  stack['delete'](object);\\n  stack['delete'](other);\\n  return result;\\n}\\n\\n/**\\n * Creates an array of own enumerable property names and symbols of `object`.\\n *\\n * @private\\n * @param {Object} object The object to query.\\n * @returns {Array} Returns the array of property names and symbols.\\n */\\nfunction getAllKeys(object) {\\n  return baseGetAllKeys(object, keys, getSymbols);\\n}\\n\\n/**\\n * Gets the data for `map`.\\n *\\n * @private\\n * @param {Object} map The map to query.\\n * @param {string} key The reference key.\\n * @returns {*} Returns the map data.\\n */\\nfunction getMapData(map, key) {\\n  var data = map.__data__;\\n  return isKeyable(key)\\n    ? data[typeof key == 'string' ? 'string' : 'hash']\\n    : data.map;\\n}\\n\\n/**\\n * Gets the native function at `key` of `object`.\\n *\\n * @private\\n * @param {Object} object The object to query.\\n * @param {string} key The key of the method to get.\\n * @returns {*} Returns the function if it's native, else `undefined`.\\n */\\nfunction getNative(object, key) {\\n  var value = getValue(object, key);\\n  return baseIsNative(value) ? value : undefined;\\n}\\n\\n/**\\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\\n *\\n * @private\\n * @param {*} value The value to query.\\n * @returns {string} Returns the raw `toStringTag`.\\n */\\nfunction getRawTag(value) {\\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\\n      tag = value[symToStringTag];\\n\\n  try {\\n    value[symToStringTag] = undefined;\\n    var unmasked = true;\\n  } catch (e) {}\\n\\n  var result = nativeObjectToString.call(value);\\n  if (unmasked) {\\n    if (isOwn) {\\n      value[symToStringTag] = tag;\\n    } else {\\n      delete value[symToStringTag];\\n    }\\n  }\\n  return result;\\n}\\n\\n/**\\n * Creates an array of the own enumerable symbols of `object`.\\n *\\n * @private\\n * @param {Object} object The object to query.\\n * @returns {Array} Returns the array of symbols.\\n */\\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\\n  if (object == null) {\\n    return [];\\n  }\\n  object = Object(object);\\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\\n    return propertyIsEnumerable.call(object, symbol);\\n  });\\n};\\n\\n/**\\n * Gets the `toStringTag` of `value`.\\n *\\n * @private\\n * @param {*} value The value to query.\\n * @returns {string} Returns the `toStringTag`.\\n */\\nvar getTag = baseGetTag;\\n\\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\\n    (Map && getTag(new Map) != mapTag) ||\\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\\n    (Set && getTag(new Set) != setTag) ||\\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\\n  getTag = function(value) {\\n    var result = baseGetTag(value),\\n        Ctor = result == objectTag ? value.constructor : undefined,\\n        ctorString = Ctor ? toSource(Ctor) : '';\\n\\n    if (ctorString) {\\n      switch (ctorString) {\\n        case dataViewCtorString: return dataViewTag;\\n        case mapCtorString: return mapTag;\\n        case promiseCtorString: return promiseTag;\\n        case setCtorString: return setTag;\\n        case weakMapCtorString: return weakMapTag;\\n      }\\n    }\\n    return result;\\n  };\\n}\\n\\n/**\\n * Checks if `value` is a valid array-like index.\\n *\\n * @private\\n * @param {*} value The value to check.\\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\\n */\\nfunction isIndex(value, length) {\\n  length = length == null ? MAX_SAFE_INTEGER : length;\\n  return !!length &&\\n    (typeof value == 'number' || reIsUint.test(value)) &&\\n    (value > -1 && value % 1 == 0 && value < length);\\n}\\n\\n/**\\n * Checks if `value` is suitable for use as unique object key.\\n *\\n * @private\\n * @param {*} value The value to check.\\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\\n */\\nfunction isKeyable(value) {\\n  var type = typeof value;\\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\\n    ? (value !== '__proto__')\\n    : (value === null);\\n}\\n\\n/**\\n * Checks if `func` has its source masked.\\n *\\n * @private\\n * @param {Function} func The function to check.\\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\\n */\\nfunction isMasked(func) {\\n  return !!maskSrcKey && (maskSrcKey in func);\\n}\\n\\n/**\\n * Checks if `value` is likely a prototype object.\\n *\\n * @private\\n * @param {*} value The value to check.\\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\\n */\\nfunction isPrototype(value) {\\n  var Ctor = value && value.constructor,\\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\\n\\n  return value === proto;\\n}\\n\\n/**\\n * Converts `value` to a string using `Object.prototype.toString`.\\n *\\n * @private\\n * @param {*} value The value to convert.\\n * @returns {string} Returns the converted string.\\n */\\nfunction objectToString(value) {\\n  return nativeObjectToString.call(value);\\n}\\n\\n/**\\n * Converts `func` to its source code.\\n *\\n * @private\\n * @param {Function} func The function to convert.\\n * @returns {string} Returns the source code.\\n */\\nfunction toSource(func) {\\n  if (func != null) {\\n    try {\\n      return funcToString.call(func);\\n    } catch (e) {}\\n    try {\\n      return (func + '');\\n    } catch (e) {}\\n  }\\n  return '';\\n}\\n\\n/**\\n * Performs a\\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\\n * comparison between two values to determine if they are equivalent.\\n *\\n * @static\\n * @memberOf _\\n * @since 4.0.0\\n * @category Lang\\n * @param {*} value The value to compare.\\n * @param {*} other The other value to compare.\\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\\n * @example\\n *\\n * var object = { 'a': 1 };\\n * var other = { 'a': 1 };\\n *\\n * _.eq(object, object);\\n * // => true\\n *\\n * _.eq(object, other);\\n * // => false\\n *\\n * _.eq('a', 'a');\\n * // => true\\n *\\n * _.eq('a', Object('a'));\\n * // => false\\n *\\n * _.eq(NaN, NaN);\\n * // => true\\n */\\nfunction eq(value, other) {\\n  return value === other || (value !== value && other !== other);\\n}\\n\\n/**\\n * Checks if `value` is likely an `arguments` object.\\n *\\n * @static\\n * @memberOf _\\n * @since 0.1.0\\n * @category Lang\\n * @param {*} value The value to check.\\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\\n *  else `false`.\\n * @example\\n *\\n * _.isArguments(function() { return arguments; }());\\n * // => true\\n *\\n * _.isArguments([1, 2, 3]);\\n * // => false\\n */\\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\\n    !propertyIsEnumerable.call(value, 'callee');\\n};\\n\\n/**\\n * Checks if `value` is classified as an `Array` object.\\n *\\n * @static\\n * @memberOf _\\n * @since 0.1.0\\n * @category Lang\\n * @param {*} value The value to check.\\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\\n * @example\\n *\\n * _.isArray([1, 2, 3]);\\n * // => true\\n *\\n * _.isArray(document.body.children);\\n * // => false\\n *\\n * _.isArray('abc');\\n * // => false\\n *\\n * _.isArray(_.noop);\\n * // => false\\n */\\nvar isArray = Array.isArray;\\n\\n/**\\n * Checks if `value` is array-like. A value is considered array-like if it's\\n * not a function and has a `value.length` that's an integer greater than or\\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\\n *\\n * @static\\n * @memberOf _\\n * @since 4.0.0\\n * @category Lang\\n * @param {*} value The value to check.\\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\\n * @example\\n *\\n * _.isArrayLike([1, 2, 3]);\\n * // => true\\n *\\n * _.isArrayLike(document.body.children);\\n * // => true\\n *\\n * _.isArrayLike('abc');\\n * // => true\\n *\\n * _.isArrayLike(_.noop);\\n * // => false\\n */\\nfunction isArrayLike(value) {\\n  return value != null && isLength(value.length) && !isFunction(value);\\n}\\n\\n/**\\n * Checks if `value` is a buffer.\\n *\\n * @static\\n * @memberOf _\\n * @since 4.3.0\\n * @category Lang\\n * @param {*} value The value to check.\\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\\n * @example\\n *\\n * _.isBuffer(new Buffer(2));\\n * // => true\\n *\\n * _.isBuffer(new Uint8Array(2));\\n * // => false\\n */\\nvar isBuffer = nativeIsBuffer || stubFalse;\\n\\n/**\\n * Performs a deep comparison between two values to determine if they are\\n * equivalent.\\n *\\n * **Note:** This method supports comparing arrays, array buffers, booleans,\\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\\n * by their own, not inherited, enumerable properties. Functions and DOM\\n * nodes are compared by strict equality, i.e. `===`.\\n *\\n * @static\\n * @memberOf _\\n * @since 0.1.0\\n * @category Lang\\n * @param {*} value The value to compare.\\n * @param {*} other The other value to compare.\\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\\n * @example\\n *\\n * var object = { 'a': 1 };\\n * var other = { 'a': 1 };\\n *\\n * _.isEqual(object, other);\\n * // => true\\n *\\n * object === other;\\n * // => false\\n */\\nfunction isEqual(value, other) {\\n  return baseIsEqual(value, other);\\n}\\n\\n/**\\n * Checks if `value` is classified as a `Function` object.\\n *\\n * @static\\n * @memberOf _\\n * @since 0.1.0\\n * @category Lang\\n * @param {*} value The value to check.\\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\\n * @example\\n *\\n * _.isFunction(_);\\n * // => true\\n *\\n * _.isFunction(/abc/);\\n * // => false\\n */\\nfunction isFunction(value) {\\n  if (!isObject(value)) {\\n    return false;\\n  }\\n  // The use of `Object#toString` avoids issues with the `typeof` operator\\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\\n  var tag = baseGetTag(value);\\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\\n}\\n\\n/**\\n * Checks if `value` is a valid array-like length.\\n *\\n * **Note:** This method is loosely based on\\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\\n *\\n * @static\\n * @memberOf _\\n * @since 4.0.0\\n * @category Lang\\n * @param {*} value The value to check.\\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\\n * @example\\n *\\n * _.isLength(3);\\n * // => true\\n *\\n * _.isLength(Number.MIN_VALUE);\\n * // => false\\n *\\n * _.isLength(Infinity);\\n * // => false\\n *\\n * _.isLength('3');\\n * // => false\\n */\\nfunction isLength(value) {\\n  return typeof value == 'number' &&\\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\\n}\\n\\n/**\\n * Checks if `value` is the\\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\\n *\\n * @static\\n * @memberOf _\\n * @since 0.1.0\\n * @category Lang\\n * @param {*} value The value to check.\\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\\n * @example\\n *\\n * _.isObject({});\\n * // => true\\n *\\n * _.isObject([1, 2, 3]);\\n * // => true\\n *\\n * _.isObject(_.noop);\\n * // => true\\n *\\n * _.isObject(null);\\n * // => false\\n */\\nfunction isObject(value) {\\n  var type = typeof value;\\n  return value != null && (type == 'object' || type == 'function');\\n}\\n\\n/**\\n * Checks if `value` is object-like. A value is object-like if it's not `null`\\n * and has a `typeof` result of \\\"object\\\".\\n *\\n * @static\\n * @memberOf _\\n * @since 4.0.0\\n * @category Lang\\n * @param {*} value The value to check.\\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\\n * @example\\n *\\n * _.isObjectLike({});\\n * // => true\\n *\\n * _.isObjectLike([1, 2, 3]);\\n * // => true\\n *\\n * _.isObjectLike(_.noop);\\n * // => false\\n *\\n * _.isObjectLike(null);\\n * // => false\\n */\\nfunction isObjectLike(value) {\\n  return value != null && typeof value == 'object';\\n}\\n\\n/**\\n * Checks if `value` is classified as a typed array.\\n *\\n * @static\\n * @memberOf _\\n * @since 3.0.0\\n * @category Lang\\n * @param {*} value The value to check.\\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\\n * @example\\n *\\n * _.isTypedArray(new Uint8Array);\\n * // => true\\n *\\n * _.isTypedArray([]);\\n * // => false\\n */\\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\\n\\n/**\\n * Creates an array of the own enumerable property names of `object`.\\n *\\n * **Note:** Non-object values are coerced to objects. See the\\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\\n * for more details.\\n *\\n * @static\\n * @since 0.1.0\\n * @memberOf _\\n * @category Object\\n * @param {Object} object The object to query.\\n * @returns {Array} Returns the array of property names.\\n * @example\\n *\\n * function Foo() {\\n *   this.a = 1;\\n *   this.b = 2;\\n * }\\n *\\n * Foo.prototype.c = 3;\\n *\\n * _.keys(new Foo);\\n * // => ['a', 'b'] (iteration order is not guaranteed)\\n *\\n * _.keys('hi');\\n * // => ['0', '1']\\n */\\nfunction keys(object) {\\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\\n}\\n\\n/**\\n * This method returns a new empty array.\\n *\\n * @static\\n * @memberOf _\\n * @since 4.13.0\\n * @category Util\\n * @returns {Array} Returns the new empty array.\\n * @example\\n *\\n * var arrays = _.times(2, _.stubArray);\\n *\\n * console.log(arrays);\\n * // => [[], []]\\n *\\n * console.log(arrays[0] === arrays[1]);\\n * // => false\\n */\\nfunction stubArray() {\\n  return [];\\n}\\n\\n/**\\n * This method returns `false`.\\n *\\n * @static\\n * @memberOf _\\n * @since 4.13.0\\n * @category Util\\n * @returns {boolean} Returns `false`.\\n * @example\\n *\\n * _.times(2, _.stubFalse);\\n * // => [false, false]\\n */\\nfunction stubFalse() {\\n  return false;\\n}\\n\\nmodule.exports = isEqual;\\n\",\"/* global __filename */\\nimport { Strophe } from 'strophe.js';\\n\\nimport {\\n    ACTION_JINGLE_SA_TIMEOUT,\\n    createBridgeDownEvent,\\n    createConnectionStageReachedEvent,\\n    createFocusLeftEvent,\\n    createJingleEvent,\\n    createRemotelyMutedEvent\\n} from './service/statistics/AnalyticsEvents';\\nimport AuthenticationEvents\\n    from './service/authentication/AuthenticationEvents';\\nimport EventEmitterForwarder from './modules/util/EventEmitterForwarder';\\nimport { getLogger } from 'jitsi-meet-logger';\\nimport * as JitsiConferenceErrors from './JitsiConferenceErrors';\\nimport * as JitsiConferenceEvents from './JitsiConferenceEvents';\\nimport * as MediaType from './service/RTC/MediaType';\\nimport RTCEvents from './service/RTC/RTCEvents';\\nimport VideoType from './service/RTC/VideoType';\\nimport Statistics from './modules/statistics/statistics';\\nimport XMPPEvents from './service/xmpp/XMPPEvents';\\n\\nconst logger = getLogger(__filename);\\n\\n/**\\n * Setups all event listeners related to conference\\n * @param conference {JitsiConference} the conference\\n */\\nexport default function JitsiConferenceEventManager(conference) {\\n    this.conference = conference;\\n    this.xmppListeners = {};\\n\\n    // Listeners related to the conference only\\n    conference.on(JitsiConferenceEvents.TRACK_MUTE_CHANGED,\\n        track => {\\n            if (!track.isLocal() || !conference.statistics) {\\n                return;\\n            }\\n            const session\\n                = track.isP2P\\n                    ? conference.p2pJingleSession : conference.jvbJingleSession;\\n\\n            // TPC will be null, before the conference starts, but the event\\n            // still should be queued\\n            const tpc = (session && session.peerconnection) || null;\\n\\n            conference.statistics.sendMuteEvent(\\n                tpc,\\n                track.isMuted(),\\n                track.getType());\\n        });\\n}\\n\\n/**\\n * Setups event listeners related to conference.chatRoom\\n */\\nJitsiConferenceEventManager.prototype.setupChatRoomListeners = function() {\\n    const conference = this.conference;\\n    const chatRoom = conference.room;\\n\\n    this.chatRoomForwarder = new EventEmitterForwarder(chatRoom,\\n        this.conference.eventEmitter);\\n\\n    chatRoom.addListener(XMPPEvents.ICE_RESTARTING, jingleSession => {\\n        if (!jingleSession.isP2P) {\\n            // If using DataChannel as bridge channel, it must be closed\\n            // before ICE restart, otherwise Chrome will not trigger \\\"opened\\\"\\n            // event for the channel established with the new bridge.\\n            // TODO: This may be bypassed when using a WebSocket as bridge\\n            // channel.\\n            conference.rtc.closeBridgeChannel();\\n        }\\n\\n        // else: there are no DataChannels in P2P session (at least for now)\\n    });\\n\\n    chatRoom.addListener(\\n        XMPPEvents.ICE_RESTART_SUCCESS,\\n        (jingleSession, offerIq) => {\\n            // The JVB data chanel needs to be reopened in case the conference\\n            // has been moved to a new bridge.\\n            !jingleSession.isP2P\\n                && conference._setBridgeChannel(\\n                    offerIq, jingleSession.peerconnection);\\n        });\\n\\n\\n    chatRoom.addListener(XMPPEvents.AUDIO_MUTED_BY_FOCUS,\\n        () => {\\n            // TODO: Add a way to differentiate between commands which caused\\n            // us to mute and those that did not change our state (i.e. we were\\n            // already muted).\\n            Statistics.sendAnalytics(createRemotelyMutedEvent());\\n\\n            // set isMutedByFocus when setAudioMute Promise ends\\n            conference.rtc.setAudioMute(true).then(\\n                () => {\\n                    conference.isMutedByFocus = true;\\n                },\\n                () =>\\n                    logger.warn(\\n                        'Error while audio muting due to focus request'));\\n        }\\n    );\\n\\n    this.chatRoomForwarder.forward(XMPPEvents.SUBJECT_CHANGED,\\n        JitsiConferenceEvents.SUBJECT_CHANGED);\\n\\n    this.chatRoomForwarder.forward(XMPPEvents.MUC_JOINED,\\n        JitsiConferenceEvents.CONFERENCE_JOINED);\\n\\n    // send some analytics events\\n    chatRoom.addListener(XMPPEvents.MUC_JOINED,\\n        () => {\\n            this.conference.isJvbConnectionInterrupted = false;\\n\\n            // TODO: Move all of the 'connectionTimes' logic to its own module.\\n            Object.keys(chatRoom.connectionTimes).forEach(key => {\\n                const event\\n                    = createConnectionStageReachedEvent(\\n                        `conference_${key}`,\\n                        { value: chatRoom.connectionTimes[key] });\\n\\n                Statistics.sendAnalytics(event);\\n            });\\n\\n            // TODO: Move all of the 'connectionTimes' logic to its own module.\\n            Object.keys(chatRoom.xmpp.connectionTimes).forEach(key => {\\n                const event\\n                    = createConnectionStageReachedEvent(\\n                        `xmpp_${key}`,\\n                        { value: chatRoom.xmpp.connectionTimes[key] });\\n\\n                Statistics.sendAnalytics(event);\\n            });\\n        });\\n\\n    this.chatRoomForwarder.forward(XMPPEvents.ROOM_JOIN_ERROR,\\n        JitsiConferenceEvents.CONFERENCE_FAILED,\\n        JitsiConferenceErrors.CONNECTION_ERROR);\\n\\n    this.chatRoomForwarder.forward(XMPPEvents.ROOM_CONNECT_ERROR,\\n        JitsiConferenceEvents.CONFERENCE_FAILED,\\n        JitsiConferenceErrors.CONNECTION_ERROR);\\n    this.chatRoomForwarder.forward(XMPPEvents.ROOM_CONNECT_NOT_ALLOWED_ERROR,\\n        JitsiConferenceEvents.CONFERENCE_FAILED,\\n        JitsiConferenceErrors.NOT_ALLOWED_ERROR);\\n\\n    this.chatRoomForwarder.forward(XMPPEvents.ROOM_MAX_USERS_ERROR,\\n        JitsiConferenceEvents.CONFERENCE_FAILED,\\n        JitsiConferenceErrors.CONFERENCE_MAX_USERS);\\n\\n    this.chatRoomForwarder.forward(XMPPEvents.PASSWORD_REQUIRED,\\n        JitsiConferenceEvents.CONFERENCE_FAILED,\\n        JitsiConferenceErrors.PASSWORD_REQUIRED);\\n\\n    this.chatRoomForwarder.forward(XMPPEvents.AUTHENTICATION_REQUIRED,\\n        JitsiConferenceEvents.CONFERENCE_FAILED,\\n        JitsiConferenceErrors.AUTHENTICATION_REQUIRED);\\n\\n    this.chatRoomForwarder.forward(XMPPEvents.BRIDGE_DOWN,\\n        JitsiConferenceEvents.CONFERENCE_FAILED,\\n        JitsiConferenceErrors.VIDEOBRIDGE_NOT_AVAILABLE);\\n    chatRoom.addListener(\\n        XMPPEvents.BRIDGE_DOWN,\\n        () => Statistics.sendAnalytics(createBridgeDownEvent()));\\n\\n    this.chatRoomForwarder.forward(XMPPEvents.RESERVATION_ERROR,\\n        JitsiConferenceEvents.CONFERENCE_FAILED,\\n        JitsiConferenceErrors.RESERVATION_ERROR);\\n\\n    this.chatRoomForwarder.forward(XMPPEvents.GRACEFUL_SHUTDOWN,\\n        JitsiConferenceEvents.CONFERENCE_FAILED,\\n        JitsiConferenceErrors.GRACEFUL_SHUTDOWN);\\n\\n    chatRoom.addListener(XMPPEvents.JINGLE_FATAL_ERROR,\\n        (session, error) => {\\n            if (!session.isP2P) {\\n                conference.eventEmitter.emit(\\n                    JitsiConferenceEvents.CONFERENCE_FAILED,\\n                    JitsiConferenceErrors.JINGLE_FATAL_ERROR, error);\\n            }\\n        });\\n\\n    chatRoom.addListener(XMPPEvents.CONNECTION_ICE_FAILED,\\n        jingleSession => {\\n            conference._onIceConnectionFailed(jingleSession);\\n        });\\n\\n    this.chatRoomForwarder.forward(XMPPEvents.MUC_DESTROYED,\\n        JitsiConferenceEvents.CONFERENCE_FAILED,\\n        JitsiConferenceErrors.CONFERENCE_DESTROYED);\\n\\n    this.chatRoomForwarder.forward(XMPPEvents.CHAT_ERROR_RECEIVED,\\n        JitsiConferenceEvents.CONFERENCE_ERROR,\\n        JitsiConferenceErrors.CHAT_ERROR);\\n\\n    this.chatRoomForwarder.forward(XMPPEvents.FOCUS_DISCONNECTED,\\n        JitsiConferenceEvents.CONFERENCE_FAILED,\\n        JitsiConferenceErrors.FOCUS_DISCONNECTED);\\n\\n    chatRoom.addListener(XMPPEvents.FOCUS_LEFT,\\n        () => {\\n            Statistics.sendAnalytics(createFocusLeftEvent());\\n            conference.eventEmitter.emit(\\n                JitsiConferenceEvents.CONFERENCE_FAILED,\\n                JitsiConferenceErrors.FOCUS_LEFT);\\n        });\\n\\n    chatRoom.addListener(XMPPEvents.SESSION_ACCEPT_TIMEOUT,\\n        jingleSession => {\\n            Statistics.sendAnalyticsAndLog(\\n                createJingleEvent(\\n                    ACTION_JINGLE_SA_TIMEOUT,\\n                    { p2p: jingleSession.isP2P }));\\n        });\\n\\n    this.chatRoomForwarder.forward(XMPPEvents.RECORDER_STATE_CHANGED,\\n        JitsiConferenceEvents.RECORDER_STATE_CHANGED);\\n\\n    this.chatRoomForwarder.forward(XMPPEvents.TRANSCRIPTION_STATUS_CHANGED,\\n        JitsiConferenceEvents.TRANSCRIPTION_STATUS_CHANGED);\\n\\n    this.chatRoomForwarder.forward(XMPPEvents.VIDEO_SIP_GW_AVAILABILITY_CHANGED,\\n        JitsiConferenceEvents.VIDEO_SIP_GW_AVAILABILITY_CHANGED);\\n\\n    this.chatRoomForwarder.forward(\\n        XMPPEvents.VIDEO_SIP_GW_SESSION_STATE_CHANGED,\\n        JitsiConferenceEvents.VIDEO_SIP_GW_SESSION_STATE_CHANGED);\\n\\n    this.chatRoomForwarder.forward(XMPPEvents.PHONE_NUMBER_CHANGED,\\n        JitsiConferenceEvents.PHONE_NUMBER_CHANGED);\\n\\n    chatRoom.addListener(\\n        XMPPEvents.CONFERENCE_SETUP_FAILED,\\n        (jingleSession, error) => {\\n            if (!jingleSession.isP2P) {\\n                conference.eventEmitter.emit(\\n                    JitsiConferenceEvents.CONFERENCE_FAILED,\\n                    JitsiConferenceErrors.SETUP_FAILED,\\n                    error);\\n            }\\n        });\\n\\n    chatRoom.setParticipantPropertyListener((node, from) => {\\n        const participant = conference.getParticipantById(from);\\n\\n        if (!participant) {\\n            return;\\n        }\\n\\n        participant.setProperty(\\n            node.tagName.substring('jitsi_participant_'.length),\\n            node.value);\\n    });\\n\\n    this.chatRoomForwarder.forward(XMPPEvents.KICKED,\\n        JitsiConferenceEvents.KICKED);\\n    chatRoom.addListener(XMPPEvents.KICKED,\\n        () => {\\n            conference.leave();\\n        });\\n    chatRoom.addListener(XMPPEvents.SUSPEND_DETECTED,\\n        conference.onSuspendDetected.bind(conference));\\n\\n    this.chatRoomForwarder.forward(XMPPEvents.MUC_LOCK_CHANGED,\\n        JitsiConferenceEvents.LOCK_STATE_CHANGED);\\n\\n    chatRoom.addListener(XMPPEvents.MUC_MEMBER_JOINED,\\n        conference.onMemberJoined.bind(conference));\\n    chatRoom.addListener(XMPPEvents.MUC_MEMBER_BOT_TYPE_CHANGED,\\n        conference._onMemberBotTypeChanged.bind(conference));\\n    chatRoom.addListener(XMPPEvents.MUC_MEMBER_LEFT,\\n        conference.onMemberLeft.bind(conference));\\n    this.chatRoomForwarder.forward(XMPPEvents.MUC_LEFT,\\n        JitsiConferenceEvents.CONFERENCE_LEFT);\\n\\n    chatRoom.addListener(XMPPEvents.DISPLAY_NAME_CHANGED,\\n        conference.onDisplayNameChanged.bind(conference));\\n\\n    chatRoom.addListener(XMPPEvents.LOCAL_ROLE_CHANGED, role => {\\n        conference.onLocalRoleChanged(role);\\n\\n        // log all events for the recorder operated by the moderator\\n        if (conference.statistics && conference.isModerator()) {\\n            conference.on(JitsiConferenceEvents.RECORDER_STATE_CHANGED,\\n                recorderSession => {\\n                    const logObject = {\\n                        error: recorderSession.getError(),\\n                        id: 'recorder_status',\\n                        status: recorderSession.getStatus()\\n                    };\\n\\n                    Statistics.sendLog(JSON.stringify(logObject));\\n                });\\n        }\\n    });\\n\\n    chatRoom.addListener(XMPPEvents.MUC_ROLE_CHANGED,\\n        conference.onUserRoleChanged.bind(conference));\\n\\n    chatRoom.addListener(AuthenticationEvents.IDENTITY_UPDATED,\\n        (authEnabled, authIdentity) => {\\n            conference.authEnabled = authEnabled;\\n            conference.authIdentity = authIdentity;\\n            conference.eventEmitter.emit(\\n                JitsiConferenceEvents.AUTH_STATUS_CHANGED, authEnabled,\\n                authIdentity);\\n        });\\n\\n    chatRoom.addListener(\\n        XMPPEvents.MESSAGE_RECEIVED,\\n\\n        // eslint-disable-next-line max-params\\n        (jid, displayName, txt, myJid, ts) => {\\n            const id = Strophe.getResourceFromJid(jid);\\n\\n            conference.eventEmitter.emit(\\n                JitsiConferenceEvents.MESSAGE_RECEIVED,\\n                id, txt, ts);\\n        });\\n\\n    chatRoom.addListener(\\n        XMPPEvents.PRIVATE_MESSAGE_RECEIVED,\\n\\n        // eslint-disable-next-line max-params\\n        (jid, displayName, txt, myJid, ts) => {\\n            const id = Strophe.getResourceFromJid(jid);\\n\\n            conference.eventEmitter.emit(\\n                JitsiConferenceEvents.PRIVATE_MESSAGE_RECEIVED,\\n                id, txt, ts);\\n        });\\n\\n    chatRoom.addListener(XMPPEvents.PRESENCE_STATUS,\\n        (jid, status) => {\\n            const id = Strophe.getResourceFromJid(jid);\\n            const participant = conference.getParticipantById(id);\\n\\n            if (!participant || participant._status === status) {\\n                return;\\n            }\\n            participant._status = status;\\n            conference.eventEmitter.emit(\\n                JitsiConferenceEvents.USER_STATUS_CHANGED, id, status);\\n        });\\n\\n    chatRoom.addListener(XMPPEvents.JSON_MESSAGE_RECEIVED,\\n        (from, payload) => {\\n            const id = Strophe.getResourceFromJid(from);\\n            const participant = conference.getParticipantById(id);\\n\\n            if (participant) {\\n                conference.eventEmitter.emit(\\n                    JitsiConferenceEvents.ENDPOINT_MESSAGE_RECEIVED,\\n                    participant, payload);\\n            } else {\\n                logger.warn(\\n                    'Ignored XMPPEvents.JSON_MESSAGE_RECEIVED for not existing '\\n                    + `participant: ${from}`,\\n                    payload);\\n            }\\n        });\\n\\n    chatRoom.addPresenceListener('startmuted', (data, from) => {\\n        let isModerator = false;\\n\\n        if (conference.myUserId() === from && conference.isModerator()) {\\n            isModerator = true;\\n        } else {\\n            const participant = conference.getParticipantById(from);\\n\\n            if (participant && participant.isModerator()) {\\n                isModerator = true;\\n            }\\n        }\\n\\n        if (!isModerator) {\\n            return;\\n        }\\n\\n        const startAudioMuted = data.attributes.audio === 'true';\\n        const startVideoMuted = data.attributes.video === 'true';\\n\\n        let updated = false;\\n\\n        if (startAudioMuted !== conference.startMutedPolicy.audio) {\\n            conference.startMutedPolicy.audio = startAudioMuted;\\n            updated = true;\\n        }\\n\\n        if (startVideoMuted !== conference.startMutedPolicy.video) {\\n            conference.startMutedPolicy.video = startVideoMuted;\\n            updated = true;\\n        }\\n\\n        if (updated) {\\n            conference.eventEmitter.emit(\\n                JitsiConferenceEvents.START_MUTED_POLICY_CHANGED,\\n                conference.startMutedPolicy\\n            );\\n        }\\n    });\\n\\n    if (conference.statistics) {\\n        // FIXME ICE related events should end up in RTCEvents eventually\\n        chatRoom.addListener(XMPPEvents.CONNECTION_ICE_FAILED,\\n            session => {\\n                conference.statistics.sendIceConnectionFailedEvent(\\n                    session.peerconnection);\\n            });\\n\\n        // FIXME XMPPEvents.ADD_ICE_CANDIDATE_FAILED is never emitted\\n        chatRoom.addListener(XMPPEvents.ADD_ICE_CANDIDATE_FAILED,\\n            (e, pc) => {\\n                conference.statistics.sendAddIceCandidateFailed(e, pc);\\n            });\\n    }\\n};\\n\\n/**\\n * Setups event listeners related to conference.rtc\\n */\\nJitsiConferenceEventManager.prototype.setupRTCListeners = function() {\\n    const conference = this.conference;\\n    const rtc = conference.rtc;\\n\\n    rtc.addListener(\\n        RTCEvents.REMOTE_TRACK_ADDED,\\n        conference.onRemoteTrackAdded.bind(conference));\\n\\n    rtc.addListener(\\n        RTCEvents.REMOTE_TRACK_REMOVED,\\n        conference.onRemoteTrackRemoved.bind(conference));\\n\\n    rtc.addListener(RTCEvents.DOMINANT_SPEAKER_CHANGED,\\n        id => {\\n            if (conference.lastDominantSpeaker !== id && conference.room) {\\n                conference.lastDominantSpeaker = id;\\n                conference.eventEmitter.emit(\\n                    JitsiConferenceEvents.DOMINANT_SPEAKER_CHANGED, id);\\n            }\\n            if (conference.statistics && conference.myUserId() === id) {\\n                // We are the new dominant speaker.\\n                conference.statistics.sendDominantSpeakerEvent(\\n                    conference.room.roomjid);\\n            }\\n        });\\n\\n    rtc.addListener(RTCEvents.DATA_CHANNEL_OPEN, () => {\\n        const now = window.performance.now();\\n        const key = 'data.channel.opened';\\n\\n        // TODO: Move all of the 'connectionTimes' logic to its own module.\\n        logger.log(`(TIME) ${key}`, now);\\n        conference.room.connectionTimes[key] = now;\\n        Statistics.sendAnalytics(\\n            createConnectionStageReachedEvent(key, { value: now }));\\n\\n        conference.eventEmitter.emit(JitsiConferenceEvents.DATA_CHANNEL_OPENED);\\n    });\\n\\n    rtc.addListener(RTCEvents.ENDPOINT_MESSAGE_RECEIVED,\\n        (from, payload) => {\\n            const participant = conference.getParticipantById(from);\\n\\n            if (participant) {\\n                conference.eventEmitter.emit(\\n                    JitsiConferenceEvents.ENDPOINT_MESSAGE_RECEIVED,\\n                    participant, payload);\\n            } else {\\n                logger.warn(\\n                    'Ignored ENDPOINT_MESSAGE_RECEIVED for not existing '\\n                        + `participant: ${from}`,\\n                    payload);\\n            }\\n        });\\n\\n    rtc.addListener(RTCEvents.LOCAL_UFRAG_CHANGED,\\n        (tpc, ufrag) => {\\n            if (!tpc.isP2P) {\\n                Statistics.sendLog(\\n                    JSON.stringify({\\n                        id: 'local_ufrag',\\n                        value: ufrag\\n                    }));\\n            }\\n        });\\n    rtc.addListener(RTCEvents.REMOTE_UFRAG_CHANGED,\\n        (tpc, ufrag) => {\\n            if (!tpc.isP2P) {\\n                Statistics.sendLog(\\n                    JSON.stringify({\\n                        id: 'remote_ufrag',\\n                        value: ufrag\\n                    }));\\n            }\\n        });\\n\\n    rtc.addListener(RTCEvents.CREATE_ANSWER_FAILED,\\n        (e, tpc) => {\\n            conference.statistics.sendCreateAnswerFailed(e, tpc);\\n        });\\n\\n    rtc.addListener(RTCEvents.CREATE_OFFER_FAILED,\\n        (e, tpc) => {\\n            conference.statistics.sendCreateOfferFailed(e, tpc);\\n        });\\n\\n    rtc.addListener(RTCEvents.SET_LOCAL_DESCRIPTION_FAILED,\\n        (e, tpc) => {\\n            conference.statistics.sendSetLocalDescFailed(e, tpc);\\n        });\\n\\n    rtc.addListener(RTCEvents.SET_REMOTE_DESCRIPTION_FAILED,\\n        (e, tpc) => {\\n            conference.statistics.sendSetRemoteDescFailed(e, tpc);\\n        });\\n\\n    rtc.addListener(RTCEvents.LOCAL_TRACK_SSRC_UPDATED,\\n        (track, ssrc) => {\\n            // when starting screen sharing, the track is created and when\\n            // we do set local description and we process the ssrc we\\n            // will be notified for it and we will report it with the event\\n            // for screen sharing\\n            if (track.isVideoTrack() && track.videoType === VideoType.DESKTOP) {\\n                conference.statistics.sendScreenSharingEvent(true, ssrc);\\n            }\\n        });\\n};\\n\\n/**\\n * Removes event listeners related to conference.xmpp\\n */\\nJitsiConferenceEventManager.prototype.removeXMPPListeners = function() {\\n    const conference = this.conference;\\n\\n    conference.xmpp.caps.removeListener(\\n        XMPPEvents.PARTCIPANT_FEATURES_CHANGED,\\n        this.xmppListeners[XMPPEvents.PARTCIPANT_FEATURES_CHANGED]);\\n    delete this.xmppListeners[XMPPEvents.PARTCIPANT_FEATURES_CHANGED];\\n\\n    Object.keys(this.xmppListeners).forEach(eventName => {\\n        conference.xmpp.removeListener(\\n            eventName,\\n            this.xmppListeners[eventName]);\\n    });\\n    this.xmppListeners = {};\\n};\\n\\n\\n/**\\n * Setups event listeners related to conference.xmpp\\n */\\nJitsiConferenceEventManager.prototype.setupXMPPListeners = function() {\\n    const conference = this.conference;\\n\\n    const featuresChangedListener = from => {\\n        const participant\\n            = conference.getParticipantById(\\n            Strophe.getResourceFromJid(from));\\n\\n        if (participant) {\\n            conference.eventEmitter.emit(\\n                JitsiConferenceEvents.PARTCIPANT_FEATURES_CHANGED,\\n                participant);\\n        }\\n    };\\n\\n    conference.xmpp.caps.addListener(\\n        XMPPEvents.PARTCIPANT_FEATURES_CHANGED,\\n        featuresChangedListener);\\n    this.xmppListeners[XMPPEvents.PARTCIPANT_FEATURES_CHANGED]\\n        = featuresChangedListener;\\n\\n    this._addConferenceXMPPListener(\\n        XMPPEvents.CALL_INCOMING,\\n        conference.onIncomingCall.bind(conference));\\n    this._addConferenceXMPPListener(\\n        XMPPEvents.CALL_ACCEPTED,\\n        conference.onCallAccepted.bind(conference));\\n    this._addConferenceXMPPListener(\\n        XMPPEvents.TRANSPORT_INFO,\\n        conference.onTransportInfo.bind(conference));\\n    this._addConferenceXMPPListener(\\n        XMPPEvents.CALL_ENDED,\\n        conference.onCallEnded.bind(conference));\\n\\n    this._addConferenceXMPPListener(XMPPEvents.START_MUTED_FROM_FOCUS,\\n        (audioMuted, videoMuted) => {\\n            if (conference.options.config.ignoreStartMuted) {\\n                return;\\n            }\\n\\n            conference.startAudioMuted = audioMuted;\\n            conference.startVideoMuted = videoMuted;\\n\\n            // mute existing local tracks because this is initial mute from\\n            // Jicofo\\n            conference.getLocalTracks().forEach(track => {\\n                switch (track.getType()) {\\n                case MediaType.AUDIO:\\n                    conference.startAudioMuted && track.mute();\\n                    break;\\n                case MediaType.VIDEO:\\n                    conference.startVideoMuted && track.mute();\\n                    break;\\n                }\\n            });\\n\\n            conference.eventEmitter.emit(JitsiConferenceEvents.STARTED_MUTED);\\n        });\\n};\\n\\n/**\\n * Add XMPP listener and save its reference for remove on leave conference.\\n */\\nJitsiConferenceEventManager.prototype._addConferenceXMPPListener = function(\\n        eventName, listener) {\\n    this.xmppListeners[eventName] = listener;\\n    this.conference.xmpp.addListener(eventName, listener);\\n};\\n\\n/**\\n * Setups event listeners related to conference.statistics\\n */\\nJitsiConferenceEventManager.prototype.setupStatisticsListeners = function() {\\n    const conference = this.conference;\\n\\n    if (!conference.statistics) {\\n        return;\\n    }\\n\\n    /* eslint-disable max-params */\\n    conference.statistics.addAudioLevelListener((tpc, ssrc, level, isLocal) => {\\n        conference.rtc.setAudioLevel(tpc, ssrc, level, isLocal);\\n    });\\n\\n    /* eslint-enable max-params */\\n\\n    // Forward the \\\"before stats disposed\\\" event\\n    conference.statistics.addBeforeDisposedListener(() => {\\n        conference.eventEmitter.emit(\\n            JitsiConferenceEvents.BEFORE_STATISTICS_DISPOSED);\\n    });\\n    conference.statistics.addByteSentStatsListener((tpc, stats) => {\\n        conference.getLocalTracks(MediaType.AUDIO).forEach(track => {\\n            const ssrc = tpc.getLocalSSRC(track);\\n\\n            if (!ssrc || !stats.hasOwnProperty(ssrc)) {\\n                return;\\n            }\\n\\n            track._onByteSentStatsReceived(tpc, stats[ssrc]);\\n        });\\n    });\\n};\\n\",\"/**\\n * Implements utility to forward events from one eventEmitter to another.\\n * @param src {object} instance of EventEmitter or another class that implements\\n * addListener method which will register listener to EventEmitter instance.\\n * @param dest {object} instance of EventEmitter or another class that\\n * implements emit method which will emit an event.\\n */\\nfunction EventEmitterForwarder(src, dest) {\\n    if (!src || !dest || typeof src.addListener !== 'function'\\n        || typeof dest.emit !== 'function') {\\n        throw new Error('Invalid arguments passed to EventEmitterForwarder');\\n    }\\n    this.src = src;\\n    this.dest = dest;\\n}\\n\\n/**\\n * Adds event to be forwarded from src to dest.\\n * @param srcEvent {string} the event that EventEmitterForwarder is listening\\n * for.\\n * @param dstEvent {string} the event that will be fired from dest.\\n * @param arguments all other passed arguments are going to be fired with\\n * dstEvent.\\n */\\nEventEmitterForwarder.prototype.forward = function(...args) {\\n    const srcEvent = args[0];\\n\\n    // This will be the \\\"this\\\" value for emit function.\\n\\n    args[0] = this.dest;\\n\\n    // Using bind.apply to pass the arguments as Array-like object (\\\"arguments\\\")\\n    this.src.addListener(\\n        srcEvent,\\n        Function.prototype.bind.apply(this.dest.emit, args));\\n};\\n\\nmodule.exports = EventEmitterForwarder;\\n\",\"import {\\n    TYPE_OPERATIONAL,\\n    TYPE_PAGE,\\n    TYPE_TRACK,\\n    TYPE_UI\\n} from '../../service/statistics/AnalyticsEvents';\\nimport { getLogger } from 'jitsi-meet-logger';\\nimport browser from '../browser';\\nimport Settings from '../settings/Settings';\\n\\nconst MAX_CACHE_SIZE = 100;\\n\\n// eslist-disable-line no-undef\\nconst logger = getLogger(__filename);\\n\\n/**\\n * This class provides an API to lib-jitsi-meet and its users for sending\\n * analytics events. It serves as a bridge to different backend implementations\\n * (\\\"analytics handlers\\\") and a cache for events attempted to be sent before\\n * the analytics handlers were enabled.\\n *\\n * The API is designed to be an easy replacement for the previous version of\\n * this adapter, and is meant to be extended with more convenience methods.\\n *\\n *\\n * The API calls are translated to objects with the following structure, which\\n * are then passed to the sendEvent(event) function of the underlying handlers:\\n *\\n * {\\n *    type,\\n *\\n *    action,\\n *    actionSubject,\\n *    actionSubjectId,\\n *    attributes,\\n *    categories,\\n *    containerId,\\n *    containerType,\\n *    name,\\n *    objectId,\\n *    objectType,\\n *    source,\\n *    tags\\n * }\\n *\\n * The 'type' is one of 'operational', 'page', 'track' or 'ui', and some of the\\n * other properties are considered required according to the type.\\n *\\n * For events with type 'page', the required properties are: name.\\n *\\n * For events with type 'operational' and 'ui', the required properties are:\\n * action, actionSubject, source\\n *\\n * For events with type 'page', the required properties are:\\n * action, actionSubject, source, containerType, containerId, objectType,\\n * objectId\\n */\\nclass AnalyticsAdapter {\\n    /**\\n     * Creates new AnalyticsAdapter instance.\\n     */\\n    constructor() {\\n        this.reset();\\n    }\\n\\n    /**\\n     * Reset the state to the initial one.\\n     *\\n     * @returns {void}\\n     */\\n    reset() {\\n        /**\\n         * Whether this AnalyticsAdapter has been disposed of or not. Once this\\n         * is set to true, the AnalyticsAdapter is disabled and does not accept\\n         * any more events, and it can not be re-enabled.\\n         * @type {boolean}\\n         */\\n        this.disposed = false;\\n\\n        /**\\n         * The set of handlers to which events will be sent.\\n         * @type {Set<any>}\\n         */\\n        this.analyticsHandlers = new Set();\\n\\n        /**\\n         * The cache of events which are not sent yet. The cache is enabled\\n         * while this field is truthy, and disabled otherwise.\\n         * @type {Array}\\n         */\\n        this.cache = [];\\n\\n        /**\\n         * Map of properties that will be added to every event. Note that the\\n         * keys will be prefixed with \\\"permanent.\\\".\\n         */\\n        this.permanentProperties = {};\\n\\n        /**\\n         * The name of the conference that this AnalyticsAdapter is associated\\n         * with.\\n         * @type {null}\\n         */\\n        this.conferenceName = '';\\n\\n        this.addPermanentProperties({\\n            'callstats_name': Settings.callStatsUserName,\\n            'user_agent': navigator.userAgent,\\n            'browser_name': browser.getName()\\n        });\\n    }\\n\\n    /**\\n     * Dispose analytics. Clears all handlers.\\n     */\\n    dispose() {\\n        logger.warn('Disposing of analytics adapter.');\\n        this.setAnalyticsHandlers([]);\\n        this.disposed = true;\\n    }\\n\\n    /**\\n     * Sets the handlers that are going to be used to send analytics. Sends any\\n     * cached events.\\n     * @param {Array} handlers the handlers\\n     */\\n    setAnalyticsHandlers(handlers) {\\n        if (this.disposed) {\\n            return;\\n        }\\n\\n        this.analyticsHandlers = new Set(handlers);\\n\\n        this._setUserProperties();\\n\\n        // Note that we disable the cache even if the set of handlers is empty.\\n        const cache = this.cache;\\n\\n        this.cache = null;\\n        if (cache) {\\n            cache.forEach(event => this._sendEvent(event));\\n        }\\n    }\\n\\n    /**\\n     * Set the user properties to the analytics handlers.\\n     *\\n     * @returns {void}\\n     */\\n    _setUserProperties() {\\n        this.analyticsHandlers.forEach(handler => {\\n            try {\\n                handler.setUserProperties(this.permanentProperties);\\n            } catch (error) {\\n                logger.warn('Error in setUserProperties method of one of the '\\n                    + `analytics handlers: ${error}`);\\n            }\\n        });\\n    }\\n\\n    /**\\n     * Adds a set of permanent properties to this this AnalyticsAdapter.\\n     * Permanent properties will be added as \\\"attributes\\\" to events sent to\\n     * the underlying \\\"analytics handlers\\\", and their keys will be prefixed\\n     * by \\\"permanent_\\\", i.e. adding a permanent property {key: \\\"value\\\"} will\\n     * result in {\\\"permanent_key\\\": \\\"value\\\"} object to be added to the\\n     * \\\"attributes\\\" field of events.\\n     *\\n     * @param {Object} properties the properties to add\\n     */\\n    addPermanentProperties(properties) {\\n        this.permanentProperties = {\\n            ...this.permanentProperties,\\n            ...properties\\n        };\\n\\n        this._setUserProperties();\\n    }\\n\\n    /**\\n     * Sets the name of the conference that this AnalyticsAdapter is associated\\n     * with.\\n     * @param name the name to set.\\n     */\\n    setConferenceName(name) {\\n        this.conferenceName = name;\\n        this.addPermanentProperties({ 'conference_name': name });\\n    }\\n\\n    /**\\n     * Sends an event with a given name and given properties. The first\\n     * parameter is either a string or an object. If it is a string, it is used\\n     * as the event name and the second parameter is used at the attributes to\\n     * attach to the event. If it is an object, it represents the whole event,\\n     * including any desired attributes, and the second parameter is ignored.\\n     *\\n     * @param {String|Object} eventName either a string to be used as the name\\n     * of the event, or an event object. If an event object is passed, the\\n     * properties parameters is ignored.\\n     * @param {Object} properties the properties/attributes to attach to the\\n     * event, if eventName is a string.\\n     */\\n    sendEvent(eventName, properties = {}) {\\n        if (this.disposed) {\\n            return;\\n        }\\n\\n        let event = null;\\n\\n        if (typeof eventName === 'string') {\\n            event = {\\n                type: TYPE_OPERATIONAL,\\n                action: eventName,\\n                actionSubject: eventName,\\n                source: eventName,\\n                attributes: properties\\n            };\\n        } else if (typeof eventName === 'object') {\\n            event = eventName;\\n        }\\n\\n        if (!this._verifyRequiredFields(event)) {\\n            logger.error(\\n                `Dropping a mis-formatted event: ${JSON.stringify(event)}`);\\n\\n            return;\\n        }\\n\\n        this._sendEvent(event);\\n    }\\n\\n    /**\\n     * Checks whether an event has all of the required fields set, and tries\\n     * to fill in some of the missing fields with reasonable default values.\\n     * Returns true if after this operation the event has all of the required\\n     * fields set, and false otherwise (if some of the required fields were not\\n     * set and the attempt to fill them in with a default failed).\\n     *\\n     * @param event the event object.\\n     * @return {boolean} true if the event (after the call to this function)\\n     * contains all of the required fields, and false otherwise.\\n     * @private\\n     */\\n    _verifyRequiredFields(event) {\\n        if (!event) {\\n            return false;\\n        }\\n\\n        if (!event.type) {\\n            event.type = TYPE_OPERATIONAL;\\n        }\\n\\n        const type = event.type;\\n\\n        if (type !== TYPE_OPERATIONAL && type !== TYPE_PAGE\\n            && type !== TYPE_UI && type !== TYPE_TRACK) {\\n            logger.error(`Unknown event type: ${type}`);\\n\\n            return false;\\n        }\\n\\n        if (type === TYPE_PAGE) {\\n            return Boolean(event.name);\\n        }\\n\\n        // Try to set some reasonable default values in case some of the\\n        // parameters required by the handler API are missing.\\n        event.action = event.action || event.name || event.actionSubject;\\n        event.actionSubject = event.actionSubject || event.name || event.action;\\n        event.source = event.source || event.name || event.action\\n            || event.actionSubject;\\n\\n        if (!event.action || !event.actionSubject || !event.source) {\\n            logger.error(\\n                'Required field missing (action, actionSubject or source)');\\n\\n            return false;\\n        }\\n\\n        // Track events have additional required fields.\\n        if (type === TYPE_TRACK) {\\n            event.objectType = event.objectType || 'generic-object-type';\\n            event.containerType = event.containerType || 'conference';\\n            if (event.containerType === 'conference' && !event.containerId) {\\n                event.containerId = this.conferenceName;\\n            }\\n\\n\\n            if (!event.objectType || !event.objectId\\n                || !event.containerType || !event.containerId) {\\n                logger.error(\\n                    'Required field missing (containerId, containerType, '\\n                        + 'objectId or objectType)');\\n\\n                return false;\\n            }\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * Saves an event to the cache, if the cache is enabled.\\n     * @param event the event to save.\\n     * @returns {boolean} true if the event was saved, and false otherwise (i.e.\\n     * if the cache was disabled).\\n     * @private\\n     */\\n    _maybeCacheEvent(event) {\\n        if (this.cache) {\\n            this.cache.push(event);\\n\\n            // We limit the size of the cache, in case the user fails to ever\\n            // set the analytics handlers.\\n            if (this.cache.length > MAX_CACHE_SIZE) {\\n                this.cache.splice(0, 1);\\n            }\\n\\n            return true;\\n        }\\n\\n        return false;\\n\\n    }\\n\\n    /**\\n     *\\n     * @param event\\n     * @private\\n     */\\n    _sendEvent(event) {\\n        if (this._maybeCacheEvent(event)) {\\n            // The event was consumed by the cache.\\n        } else {\\n            this.analyticsHandlers.forEach(handler => {\\n                try {\\n                    handler.sendEvent(event);\\n                } catch (e) {\\n                    logger.warn(`Error sending analytics event: ${e}`);\\n                }\\n            });\\n        }\\n    }\\n}\\n\\nexport default new AnalyticsAdapter();\\n\",\"import { getLogger } from 'jitsi-meet-logger';\\nimport { BrowserDetection } from 'js-utils';\\n\\nconst logger = getLogger(__filename);\\n\\n// TODO: Move this code to js-utils.\\n\\n// NOTE: Now we are extending BrowserDetection in order to preserve\\n// RTCBrowserType interface but maybe it worth exporting BrowserCapabilities\\n// and BrowserDetection as separate objects in future.\\n\\n/**\\n * Implements browser capabilities for lib-jitsi-meet.\\n */\\nexport default class BrowserCapabilities extends BrowserDetection {\\n    /**\\n     * Creates new BrowserCapabilities instance.\\n     */\\n    constructor() {\\n        super();\\n        logger.info(\\n            `This appears to be ${this.getName()}, ver: ${this.getVersion()}`);\\n    }\\n\\n    /**\\n     * Tells whether or not the <tt>MediaStream/tt> is removed from\\n     * the <tt>PeerConnection</tt> and disposed on video mute (in order to turn\\n     * off the camera device).\\n     * @return {boolean} <tt>true</tt> if the current browser supports this\\n     * strategy or <tt>false</tt> otherwise.\\n     */\\n    doesVideoMuteByStreamRemove() {\\n        return !(\\n            this.isFirefox()\\n            || this.isEdge()\\n            || this.isReactNative()\\n            || this.isSafariWithWebrtc()\\n        );\\n    }\\n\\n    /**\\n     * Check whether or not the current browser support peer to peer connections\\n     * @return {boolean} <tt>true</tt> if p2p is supported or <tt>false</tt>\\n     * otherwise.\\n     */\\n    supportsP2P() {\\n        return !this.isEdge() && !this.isFirefox();\\n    }\\n\\n    /**\\n     * Checks if the current browser is Chromium based, that is, it's either\\n     * Chrome / Chromium or uses it as its engine, but doesn't identify as\\n     * Chrome.\\n     *\\n     * This includes the following browsers:\\n     * - Chrome and Chromium\\n     * - Other browsers which use the Chrome engine, but are detected as Chrome,\\n     *   such as Brave and Vivaldi\\n     * - Browsers which are NOT Chrome but use it as their engine, and have\\n     *   custom detection code: Opera, Electron and NW.JS\\n     */\\n    isChromiumBased() {\\n        return this.isChrome()\\n            || this.isElectron()\\n            || this.isNWJS()\\n            || this.isOpera();\\n    }\\n\\n    /**\\n     * Checks if current browser is a Safari and a version of Safari that\\n     * supports native webrtc.\\n     *\\n     * @returns {boolean}\\n     */\\n    isSafariWithWebrtc() {\\n        return this.isSafari()\\n            && !this.isVersionLessThan('11');\\n    }\\n\\n    /**\\n     * Checks if current browser is a Safari and a version of Safari that\\n     * supports VP8.\\n     *\\n     * @returns {boolean}\\n     */\\n    isSafariWithVP8() {\\n        return this.isSafari()\\n            && !this.isVersionLessThan('12.1');\\n    }\\n\\n    /**\\n     * Checks if the current browser is supported.\\n     *\\n     * @returns {boolean} true if the browser is supported, false otherwise.\\n     */\\n    isSupported() {\\n        return this.isChromiumBased()\\n            || this.isEdge()\\n            || this.isFirefox()\\n            || this.isReactNative()\\n            || this.isSafariWithWebrtc();\\n    }\\n\\n    /**\\n     * Checks if the current browser triggers 'onmute'/'onunmute' events when\\n     * user's connection is interrupted and the video stops playback.\\n     * @returns {*|boolean} 'true' if the event is supported or 'false'\\n     * otherwise.\\n     */\\n    supportsVideoMuteOnConnInterrupted() {\\n        return this.isChromiumBased() || this.isReactNative()\\n            || this.isSafariWithVP8();\\n    }\\n\\n    /**\\n     * Checks if the current browser reports upload and download bandwidth\\n     * statistics.\\n     * @return {boolean}\\n     */\\n    supportsBandwidthStatistics() {\\n        // FIXME bandwidth stats are currently not implemented for FF on our\\n        // side, but not sure if not possible ?\\n        return !this.isFirefox() && !this.isEdge()\\n            && !this.isSafariWithWebrtc();\\n    }\\n\\n    /**\\n     * Checks if the current browser supports WebRTC datachannels.\\n     * @return {boolean}\\n     */\\n    supportsDataChannels() {\\n        // NOTE: Edge does not yet implement DataChannel.\\n        return !this.isEdge();\\n    }\\n\\n    /**\\n     * Checks if the current browser support the device change event.\\n     * @return {boolean}\\n     */\\n    supportsDeviceChangeEvent() {\\n        return navigator.mediaDevices\\n            && typeof navigator.mediaDevices.ondevicechange !== 'undefined'\\n            && typeof navigator.mediaDevices.addEventListener !== 'undefined';\\n    }\\n\\n    /**\\n     * Checks if the current browser supports the MediaStream constructor as\\n     * defined by https://www.w3.org/TR/mediacapture-streams/#constructors. In\\n     * cases where there is no support, it maybe be necessary to get audio\\n     * and video in two distinct GUM calls.\\n     * @return {boolean}\\n     */\\n    supportsMediaStreamConstructor() {\\n        return !this.isReactNative();\\n    }\\n\\n    /**\\n     * Checks if the current browser supports RTP statictics collecting.\\n     * Required by {@link RTPStatsCollector}.\\n     *\\n     * @returns {boolean} true if they are supported, false otherwise.\\n     */\\n    supportsRtpStatistics() {\\n        return this.isChromiumBased()\\n            || this.isEdge()\\n            || this.isFirefox()\\n            || this.isReactNative()\\n            || this.isSafariWithWebrtc();\\n    }\\n\\n    /**\\n     * Checks if the current browser supports RTT statistics for srflx local\\n     * candidates through the legacy getStats() API.\\n     */\\n    supportsLocalCandidateRttStatistics() {\\n        return this.isChromiumBased() || this.isReactNative()\\n            || this.isSafariWithVP8();\\n    }\\n\\n    /**\\n     * Checks if the current browser reports round trip time statistics for\\n     * the ICE candidate pair.\\n     * @return {boolean}\\n     */\\n    supportsRTTStatistics() {\\n        // Firefox does not seem to report RTT for ICE candidate pair:\\n        // eslint-disable-next-line max-len\\n        // https://www.w3.org/TR/webrtc-stats/#dom-rtcicecandidatepairstats-currentroundtriptime\\n        // It does report mozRTT for RTP streams, but at the time of this\\n        // writing it's value does not make sense most of the time\\n        // (is reported as 1):\\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=1241066\\n        // For Chrome and others we rely on 'googRtt'.\\n        return !this.isFirefox() && !this.isEdge();\\n    }\\n\\n    /**\\n     * Checks whether the browser supports RTPSender.\\n     *\\n     * @returns {boolean}\\n     */\\n    supportsRtpSender() {\\n        return this.isFirefox() || this.isSafariWithVP8();\\n    }\\n\\n    /**\\n     * Checks whether the browser supports RTX.\\n     *\\n     * @returns {boolean}\\n     */\\n    supportsRtx() {\\n        return !this.isFirefox() && !this.usesUnifiedPlan();\\n    }\\n\\n    /**\\n     * Whether jitsi-meet supports simulcast on the current browser.\\n     * @returns {boolean}\\n     */\\n    supportsSimulcast() {\\n        return this.isChromiumBased() || this.isFirefox()\\n            || this.isSafariWithVP8() || this.isReactNative();\\n    }\\n\\n    /**\\n     * Returns whether or not the current browser can support capturing video,\\n     * be it camera or desktop, and displaying received video.\\n     *\\n     * @returns {boolean}\\n     */\\n    supportsVideo() {\\n        // FIXME: Check if we can use supportsVideoOut and supportsVideoIn. I\\n        // leave the old implementation here in order not to brake something.\\n\\n        // Older versions of Safari using webrtc/adapter do not support video\\n        // due in part to Safari only supporting H264 and the bridge sending VP8\\n        // Newer Safari support VP8 and other WebRTC features.\\n        return !this.isSafariWithWebrtc()\\n            || (this.isSafariWithVP8() && this.usesPlanB());\\n    }\\n\\n    /**\\n     * Checks if the browser uses plan B.\\n     *\\n     * @returns {boolean}\\n     */\\n    usesPlanB() {\\n        return !this.usesUnifiedPlan();\\n    }\\n\\n    /**\\n     * Checks if the browser uses unified plan.\\n     *\\n     * @returns {boolean}\\n     */\\n    usesUnifiedPlan() {\\n        if (this.isFirefox()) {\\n            return true;\\n        }\\n\\n        if (this.isSafariWithVP8()) {\\n            // eslint-disable-next-line max-len\\n            // https://trac.webkit.org/changeset/236144/webkit/trunk/LayoutTests/webrtc/video-addLegacyTransceiver.html\\n            // eslint-disable-next-line no-undef\\n            return Object.keys(RTCRtpTransceiver.prototype)\\n                   .indexOf('currentDirection') > -1;\\n        }\\n\\n        return false;\\n    }\\n\\n    /**\\n     * Returns whether or not the current browser should be using the new\\n     * getUserMedia flow, which utilizes the adapter shim. This method should\\n     * be temporary and used while migrating all browsers to use adapter and\\n     * the new getUserMedia.\\n     *\\n     * @returns {boolean}\\n     */\\n    usesNewGumFlow() {\\n        const REQUIRED_CHROME_VERSION = 61;\\n\\n        if (this.isChrome()) {\\n            return !this.isVersionLessThan(REQUIRED_CHROME_VERSION);\\n        }\\n\\n        if (this.isFirefox() || this.isSafariWithWebrtc()) {\\n            return true;\\n        }\\n\\n        if (this.isChromiumBased()) {\\n            return this._getChromiumBasedVersion() >= REQUIRED_CHROME_VERSION;\\n        }\\n\\n        return false;\\n    }\\n\\n    /**\\n     * Checks if the browser uses webrtc-adapter. All browsers using the new\\n     * getUserMedia flow and Edge.\\n     *\\n     * @returns {boolean}\\n     */\\n    usesAdapter() {\\n        return this.usesNewGumFlow() || this.isEdge();\\n    }\\n\\n    /**\\n     * Checks if the browser supports getDisplayMedia.\\n     * @returns {boolean} {@code true} if the browser supports getDisplayMedia.\\n     */\\n    supportsGetDisplayMedia() {\\n        return typeof navigator.getDisplayMedia !== 'undefined'\\n            || (typeof navigator.mediaDevices !== 'undefined'\\n                && typeof navigator.mediaDevices.getDisplayMedia\\n                    !== 'undefined');\\n    }\\n\\n    /**\\n     * Checks if the browser supports the \\\"sdpSemantics\\\" configuration option.\\n     * https://webrtc.org/web-apis/chrome/unified-plan/\\n     *\\n     * @returns {boolean}\\n     */\\n    supportsSdpSemantics() {\\n        return this.isChromiumBased() && this._getChromiumBasedVersion() >= 65;\\n    }\\n\\n    /**\\n     * Returns the version of a Chromium based browser.\\n     *\\n     * @returns {Number}\\n     */\\n    _getChromiumBasedVersion() {\\n        if (this.isChromiumBased()) {\\n            // NW.JS doesn't expose the Chrome version in the UA string.\\n            if (this.isNWJS()) {\\n                // eslint-disable-next-line no-undef\\n                return Number.parseInt(process.versions.chromium, 10);\\n            }\\n\\n            // Here we process all browsers which use the Chrome engine but\\n            // don't necessarily identify as Chrome. We cannot use the version\\n            // comparing functions because the Electron, Opera and NW.JS\\n            // versions are inconsequential here, as we need to know the actual\\n            // Chrome engine version.\\n            const ua = navigator.userAgent;\\n\\n            if (ua.match(/Chrome/)) {\\n                const version\\n                    = Number.parseInt(ua.match(/Chrome\\\\/([\\\\d.]+)/)[1], 10);\\n\\n                return version;\\n            }\\n        }\\n\\n        return -1;\\n    }\\n}\\n\",\"/**\\n * [js-md5]{@link https://github.com/emn178/js-md5}\\n *\\n * @namespace md5\\n * @version 0.7.3\\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\\n * @copyright Chen, Yi-Cyuan 2014-2017\\n * @license MIT\\n */\\n(function () {\\n  'use strict';\\n\\n  var ERROR = 'input is invalid type';\\n  var WINDOW = typeof window === 'object';\\n  var root = WINDOW ? window : {};\\n  if (root.JS_MD5_NO_WINDOW) {\\n    WINDOW = false;\\n  }\\n  var WEB_WORKER = !WINDOW && typeof self === 'object';\\n  var NODE_JS = !root.JS_MD5_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\\n  if (NODE_JS) {\\n    root = global;\\n  } else if (WEB_WORKER) {\\n    root = self;\\n  }\\n  var COMMON_JS = !root.JS_MD5_NO_COMMON_JS && typeof module === 'object' && module.exports;\\n  var AMD = typeof define === 'function' && define.amd;\\n  var ARRAY_BUFFER = !root.JS_MD5_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';\\n  var HEX_CHARS = '0123456789abcdef'.split('');\\n  var EXTRA = [128, 32768, 8388608, -2147483648];\\n  var SHIFT = [0, 8, 16, 24];\\n  var OUTPUT_TYPES = ['hex', 'array', 'digest', 'buffer', 'arrayBuffer', 'base64'];\\n  var BASE64_ENCODE_CHAR = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\\n\\n  var blocks = [], buffer8;\\n  if (ARRAY_BUFFER) {\\n    var buffer = new ArrayBuffer(68);\\n    buffer8 = new Uint8Array(buffer);\\n    blocks = new Uint32Array(buffer);\\n  }\\n\\n  if (root.JS_MD5_NO_NODE_JS || !Array.isArray) {\\n    Array.isArray = function (obj) {\\n      return Object.prototype.toString.call(obj) === '[object Array]';\\n    };\\n  }\\n\\n  if (ARRAY_BUFFER && (root.JS_MD5_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {\\n    ArrayBuffer.isView = function (obj) {\\n      return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;\\n    };\\n  }\\n\\n  /**\\n   * @method hex\\n   * @memberof md5\\n   * @description Output hash as hex string\\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\\n   * @returns {String} Hex string\\n   * @example\\n   * md5.hex('The quick brown fox jumps over the lazy dog');\\n   * // equal to\\n   * md5('The quick brown fox jumps over the lazy dog');\\n   */\\n  /**\\n   * @method digest\\n   * @memberof md5\\n   * @description Output hash as bytes array\\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\\n   * @returns {Array} Bytes array\\n   * @example\\n   * md5.digest('The quick brown fox jumps over the lazy dog');\\n   */\\n  /**\\n   * @method array\\n   * @memberof md5\\n   * @description Output hash as bytes array\\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\\n   * @returns {Array} Bytes array\\n   * @example\\n   * md5.array('The quick brown fox jumps over the lazy dog');\\n   */\\n  /**\\n   * @method arrayBuffer\\n   * @memberof md5\\n   * @description Output hash as ArrayBuffer\\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\\n   * @returns {ArrayBuffer} ArrayBuffer\\n   * @example\\n   * md5.arrayBuffer('The quick brown fox jumps over the lazy dog');\\n   */\\n  /**\\n   * @method buffer\\n   * @deprecated This maybe confuse with Buffer in node.js. Please use arrayBuffer instead.\\n   * @memberof md5\\n   * @description Output hash as ArrayBuffer\\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\\n   * @returns {ArrayBuffer} ArrayBuffer\\n   * @example\\n   * md5.buffer('The quick brown fox jumps over the lazy dog');\\n   */\\n  /**\\n   * @method base64\\n   * @memberof md5\\n   * @description Output hash as base64 string\\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\\n   * @returns {String} base64 string\\n   * @example\\n   * md5.base64('The quick brown fox jumps over the lazy dog');\\n   */\\n  var createOutputMethod = function (outputType) {\\n    return function (message) {\\n      return new Md5(true).update(message)[outputType]();\\n    };\\n  };\\n\\n  /**\\n   * @method create\\n   * @memberof md5\\n   * @description Create Md5 object\\n   * @returns {Md5} Md5 object.\\n   * @example\\n   * var hash = md5.create();\\n   */\\n  /**\\n   * @method update\\n   * @memberof md5\\n   * @description Create and update Md5 object\\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\\n   * @returns {Md5} Md5 object.\\n   * @example\\n   * var hash = md5.update('The quick brown fox jumps over the lazy dog');\\n   * // equal to\\n   * var hash = md5.create();\\n   * hash.update('The quick brown fox jumps over the lazy dog');\\n   */\\n  var createMethod = function () {\\n    var method = createOutputMethod('hex');\\n    if (NODE_JS) {\\n      method = nodeWrap(method);\\n    }\\n    method.create = function () {\\n      return new Md5();\\n    };\\n    method.update = function (message) {\\n      return method.create().update(message);\\n    };\\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\\n      var type = OUTPUT_TYPES[i];\\n      method[type] = createOutputMethod(type);\\n    }\\n    return method;\\n  };\\n\\n  var nodeWrap = function (method) {\\n    var crypto = eval(\\\"require('crypto')\\\");\\n    var Buffer = eval(\\\"require('buffer').Buffer\\\");\\n    var nodeMethod = function (message) {\\n      if (typeof message === 'string') {\\n        return crypto.createHash('md5').update(message, 'utf8').digest('hex');\\n      } else {\\n        if (message === null || message === undefined) {\\n          throw ERROR;\\n        } else if (message.constructor === ArrayBuffer) {\\n          message = new Uint8Array(message);\\n        }\\n      }\\n      if (Array.isArray(message) || ArrayBuffer.isView(message) ||\\n        message.constructor === Buffer) {\\n        return crypto.createHash('md5').update(new Buffer(message)).digest('hex');\\n      } else {\\n        return method(message);\\n      }\\n    };\\n    return nodeMethod;\\n  };\\n\\n  /**\\n   * Md5 class\\n   * @class Md5\\n   * @description This is internal class.\\n   * @see {@link md5.create}\\n   */\\n  function Md5(sharedMemory) {\\n    if (sharedMemory) {\\n      blocks[0] = blocks[16] = blocks[1] = blocks[2] = blocks[3] =\\n      blocks[4] = blocks[5] = blocks[6] = blocks[7] =\\n      blocks[8] = blocks[9] = blocks[10] = blocks[11] =\\n      blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\\n      this.blocks = blocks;\\n      this.buffer8 = buffer8;\\n    } else {\\n      if (ARRAY_BUFFER) {\\n        var buffer = new ArrayBuffer(68);\\n        this.buffer8 = new Uint8Array(buffer);\\n        this.blocks = new Uint32Array(buffer);\\n      } else {\\n        this.blocks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\\n      }\\n    }\\n    this.h0 = this.h1 = this.h2 = this.h3 = this.start = this.bytes = this.hBytes = 0;\\n    this.finalized = this.hashed = false;\\n    this.first = true;\\n  }\\n\\n  /**\\n   * @method update\\n   * @memberof Md5\\n   * @instance\\n   * @description Update hash\\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\\n   * @returns {Md5} Md5 object.\\n   * @see {@link md5.update}\\n   */\\n  Md5.prototype.update = function (message) {\\n    if (this.finalized) {\\n      return;\\n    }\\n\\n    var notString, type = typeof message;\\n    if (type !== 'string') {\\n      if (type === 'object') {\\n        if (message === null) {\\n          throw ERROR;\\n        } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {\\n          message = new Uint8Array(message);\\n        } else if (!Array.isArray(message)) {\\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {\\n            throw ERROR;\\n          }\\n        }\\n      } else {\\n        throw ERROR;\\n      }\\n      notString = true;\\n    }\\n    var code, index = 0, i, length = message.length, blocks = this.blocks;\\n    var buffer8 = this.buffer8;\\n\\n    while (index < length) {\\n      if (this.hashed) {\\n        this.hashed = false;\\n        blocks[0] = blocks[16];\\n        blocks[16] = blocks[1] = blocks[2] = blocks[3] =\\n        blocks[4] = blocks[5] = blocks[6] = blocks[7] =\\n        blocks[8] = blocks[9] = blocks[10] = blocks[11] =\\n        blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\\n      }\\n\\n      if (notString) {\\n        if (ARRAY_BUFFER) {\\n          for (i = this.start; index < length && i < 64; ++index) {\\n            buffer8[i++] = message[index];\\n          }\\n        } else {\\n          for (i = this.start; index < length && i < 64; ++index) {\\n            blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\\n          }\\n        }\\n      } else {\\n        if (ARRAY_BUFFER) {\\n          for (i = this.start; index < length && i < 64; ++index) {\\n            code = message.charCodeAt(index);\\n            if (code < 0x80) {\\n              buffer8[i++] = code;\\n            } else if (code < 0x800) {\\n              buffer8[i++] = 0xc0 | (code >> 6);\\n              buffer8[i++] = 0x80 | (code & 0x3f);\\n            } else if (code < 0xd800 || code >= 0xe000) {\\n              buffer8[i++] = 0xe0 | (code >> 12);\\n              buffer8[i++] = 0x80 | ((code >> 6) & 0x3f);\\n              buffer8[i++] = 0x80 | (code & 0x3f);\\n            } else {\\n              code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\\n              buffer8[i++] = 0xf0 | (code >> 18);\\n              buffer8[i++] = 0x80 | ((code >> 12) & 0x3f);\\n              buffer8[i++] = 0x80 | ((code >> 6) & 0x3f);\\n              buffer8[i++] = 0x80 | (code & 0x3f);\\n            }\\n          }\\n        } else {\\n          for (i = this.start; index < length && i < 64; ++index) {\\n            code = message.charCodeAt(index);\\n            if (code < 0x80) {\\n              blocks[i >> 2] |= code << SHIFT[i++ & 3];\\n            } else if (code < 0x800) {\\n              blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\\n              blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\\n            } else if (code < 0xd800 || code >= 0xe000) {\\n              blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\\n              blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\\n              blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\\n            } else {\\n              code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\\n              blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\\n              blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\\n              blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\\n              blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\\n            }\\n          }\\n        }\\n      }\\n      this.lastByteIndex = i;\\n      this.bytes += i - this.start;\\n      if (i >= 64) {\\n        this.start = i - 64;\\n        this.hash();\\n        this.hashed = true;\\n      } else {\\n        this.start = i;\\n      }\\n    }\\n    if (this.bytes > 4294967295) {\\n      this.hBytes += this.bytes / 4294967296 << 0;\\n      this.bytes = this.bytes % 4294967296;\\n    }\\n    return this;\\n  };\\n\\n  Md5.prototype.finalize = function () {\\n    if (this.finalized) {\\n      return;\\n    }\\n    this.finalized = true;\\n    var blocks = this.blocks, i = this.lastByteIndex;\\n    blocks[i >> 2] |= EXTRA[i & 3];\\n    if (i >= 56) {\\n      if (!this.hashed) {\\n        this.hash();\\n      }\\n      blocks[0] = blocks[16];\\n      blocks[16] = blocks[1] = blocks[2] = blocks[3] =\\n      blocks[4] = blocks[5] = blocks[6] = blocks[7] =\\n      blocks[8] = blocks[9] = blocks[10] = blocks[11] =\\n      blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\\n    }\\n    blocks[14] = this.bytes << 3;\\n    blocks[15] = this.hBytes << 3 | this.bytes >>> 29;\\n    this.hash();\\n  };\\n\\n  Md5.prototype.hash = function () {\\n    var a, b, c, d, bc, da, blocks = this.blocks;\\n\\n    if (this.first) {\\n      a = blocks[0] - 680876937;\\n      a = (a << 7 | a >>> 25) - 271733879 << 0;\\n      d = (-1732584194 ^ a & 2004318071) + blocks[1] - 117830708;\\n      d = (d << 12 | d >>> 20) + a << 0;\\n      c = (-271733879 ^ (d & (a ^ -271733879))) + blocks[2] - 1126478375;\\n      c = (c << 17 | c >>> 15) + d << 0;\\n      b = (a ^ (c & (d ^ a))) + blocks[3] - 1316259209;\\n      b = (b << 22 | b >>> 10) + c << 0;\\n    } else {\\n      a = this.h0;\\n      b = this.h1;\\n      c = this.h2;\\n      d = this.h3;\\n      a += (d ^ (b & (c ^ d))) + blocks[0] - 680876936;\\n      a = (a << 7 | a >>> 25) + b << 0;\\n      d += (c ^ (a & (b ^ c))) + blocks[1] - 389564586;\\n      d = (d << 12 | d >>> 20) + a << 0;\\n      c += (b ^ (d & (a ^ b))) + blocks[2] + 606105819;\\n      c = (c << 17 | c >>> 15) + d << 0;\\n      b += (a ^ (c & (d ^ a))) + blocks[3] - 1044525330;\\n      b = (b << 22 | b >>> 10) + c << 0;\\n    }\\n\\n    a += (d ^ (b & (c ^ d))) + blocks[4] - 176418897;\\n    a = (a << 7 | a >>> 25) + b << 0;\\n    d += (c ^ (a & (b ^ c))) + blocks[5] + 1200080426;\\n    d = (d << 12 | d >>> 20) + a << 0;\\n    c += (b ^ (d & (a ^ b))) + blocks[6] - 1473231341;\\n    c = (c << 17 | c >>> 15) + d << 0;\\n    b += (a ^ (c & (d ^ a))) + blocks[7] - 45705983;\\n    b = (b << 22 | b >>> 10) + c << 0;\\n    a += (d ^ (b & (c ^ d))) + blocks[8] + 1770035416;\\n    a = (a << 7 | a >>> 25) + b << 0;\\n    d += (c ^ (a & (b ^ c))) + blocks[9] - 1958414417;\\n    d = (d << 12 | d >>> 20) + a << 0;\\n    c += (b ^ (d & (a ^ b))) + blocks[10] - 42063;\\n    c = (c << 17 | c >>> 15) + d << 0;\\n    b += (a ^ (c & (d ^ a))) + blocks[11] - 1990404162;\\n    b = (b << 22 | b >>> 10) + c << 0;\\n    a += (d ^ (b & (c ^ d))) + blocks[12] + 1804603682;\\n    a = (a << 7 | a >>> 25) + b << 0;\\n    d += (c ^ (a & (b ^ c))) + blocks[13] - 40341101;\\n    d = (d << 12 | d >>> 20) + a << 0;\\n    c += (b ^ (d & (a ^ b))) + blocks[14] - 1502002290;\\n    c = (c << 17 | c >>> 15) + d << 0;\\n    b += (a ^ (c & (d ^ a))) + blocks[15] + 1236535329;\\n    b = (b << 22 | b >>> 10) + c << 0;\\n    a += (c ^ (d & (b ^ c))) + blocks[1] - 165796510;\\n    a = (a << 5 | a >>> 27) + b << 0;\\n    d += (b ^ (c & (a ^ b))) + blocks[6] - 1069501632;\\n    d = (d << 9 | d >>> 23) + a << 0;\\n    c += (a ^ (b & (d ^ a))) + blocks[11] + 643717713;\\n    c = (c << 14 | c >>> 18) + d << 0;\\n    b += (d ^ (a & (c ^ d))) + blocks[0] - 373897302;\\n    b = (b << 20 | b >>> 12) + c << 0;\\n    a += (c ^ (d & (b ^ c))) + blocks[5] - 701558691;\\n    a = (a << 5 | a >>> 27) + b << 0;\\n    d += (b ^ (c & (a ^ b))) + blocks[10] + 38016083;\\n    d = (d << 9 | d >>> 23) + a << 0;\\n    c += (a ^ (b & (d ^ a))) + blocks[15] - 660478335;\\n    c = (c << 14 | c >>> 18) + d << 0;\\n    b += (d ^ (a & (c ^ d))) + blocks[4] - 405537848;\\n    b = (b << 20 | b >>> 12) + c << 0;\\n    a += (c ^ (d & (b ^ c))) + blocks[9] + 568446438;\\n    a = (a << 5 | a >>> 27) + b << 0;\\n    d += (b ^ (c & (a ^ b))) + blocks[14] - 1019803690;\\n    d = (d << 9 | d >>> 23) + a << 0;\\n    c += (a ^ (b & (d ^ a))) + blocks[3] - 187363961;\\n    c = (c << 14 | c >>> 18) + d << 0;\\n    b += (d ^ (a & (c ^ d))) + blocks[8] + 1163531501;\\n    b = (b << 20 | b >>> 12) + c << 0;\\n    a += (c ^ (d & (b ^ c))) + blocks[13] - 1444681467;\\n    a = (a << 5 | a >>> 27) + b << 0;\\n    d += (b ^ (c & (a ^ b))) + blocks[2] - 51403784;\\n    d = (d << 9 | d >>> 23) + a << 0;\\n    c += (a ^ (b & (d ^ a))) + blocks[7] + 1735328473;\\n    c = (c << 14 | c >>> 18) + d << 0;\\n    b += (d ^ (a & (c ^ d))) + blocks[12] - 1926607734;\\n    b = (b << 20 | b >>> 12) + c << 0;\\n    bc = b ^ c;\\n    a += (bc ^ d) + blocks[5] - 378558;\\n    a = (a << 4 | a >>> 28) + b << 0;\\n    d += (bc ^ a) + blocks[8] - 2022574463;\\n    d = (d << 11 | d >>> 21) + a << 0;\\n    da = d ^ a;\\n    c += (da ^ b) + blocks[11] + 1839030562;\\n    c = (c << 16 | c >>> 16) + d << 0;\\n    b += (da ^ c) + blocks[14] - 35309556;\\n    b = (b << 23 | b >>> 9) + c << 0;\\n    bc = b ^ c;\\n    a += (bc ^ d) + blocks[1] - 1530992060;\\n    a = (a << 4 | a >>> 28) + b << 0;\\n    d += (bc ^ a) + blocks[4] + 1272893353;\\n    d = (d << 11 | d >>> 21) + a << 0;\\n    da = d ^ a;\\n    c += (da ^ b) + blocks[7] - 155497632;\\n    c = (c << 16 | c >>> 16) + d << 0;\\n    b += (da ^ c) + blocks[10] - 1094730640;\\n    b = (b << 23 | b >>> 9) + c << 0;\\n    bc = b ^ c;\\n    a += (bc ^ d) + blocks[13] + 681279174;\\n    a = (a << 4 | a >>> 28) + b << 0;\\n    d += (bc ^ a) + blocks[0] - 358537222;\\n    d = (d << 11 | d >>> 21) + a << 0;\\n    da = d ^ a;\\n    c += (da ^ b) + blocks[3] - 722521979;\\n    c = (c << 16 | c >>> 16) + d << 0;\\n    b += (da ^ c) + blocks[6] + 76029189;\\n    b = (b << 23 | b >>> 9) + c << 0;\\n    bc = b ^ c;\\n    a += (bc ^ d) + blocks[9] - 640364487;\\n    a = (a << 4 | a >>> 28) + b << 0;\\n    d += (bc ^ a) + blocks[12] - 421815835;\\n    d = (d << 11 | d >>> 21) + a << 0;\\n    da = d ^ a;\\n    c += (da ^ b) + blocks[15] + 530742520;\\n    c = (c << 16 | c >>> 16) + d << 0;\\n    b += (da ^ c) + blocks[2] - 995338651;\\n    b = (b << 23 | b >>> 9) + c << 0;\\n    a += (c ^ (b | ~d)) + blocks[0] - 198630844;\\n    a = (a << 6 | a >>> 26) + b << 0;\\n    d += (b ^ (a | ~c)) + blocks[7] + 1126891415;\\n    d = (d << 10 | d >>> 22) + a << 0;\\n    c += (a ^ (d | ~b)) + blocks[14] - 1416354905;\\n    c = (c << 15 | c >>> 17) + d << 0;\\n    b += (d ^ (c | ~a)) + blocks[5] - 57434055;\\n    b = (b << 21 | b >>> 11) + c << 0;\\n    a += (c ^ (b | ~d)) + blocks[12] + 1700485571;\\n    a = (a << 6 | a >>> 26) + b << 0;\\n    d += (b ^ (a | ~c)) + blocks[3] - 1894986606;\\n    d = (d << 10 | d >>> 22) + a << 0;\\n    c += (a ^ (d | ~b)) + blocks[10] - 1051523;\\n    c = (c << 15 | c >>> 17) + d << 0;\\n    b += (d ^ (c | ~a)) + blocks[1] - 2054922799;\\n    b = (b << 21 | b >>> 11) + c << 0;\\n    a += (c ^ (b | ~d)) + blocks[8] + 1873313359;\\n    a = (a << 6 | a >>> 26) + b << 0;\\n    d += (b ^ (a | ~c)) + blocks[15] - 30611744;\\n    d = (d << 10 | d >>> 22) + a << 0;\\n    c += (a ^ (d | ~b)) + blocks[6] - 1560198380;\\n    c = (c << 15 | c >>> 17) + d << 0;\\n    b += (d ^ (c | ~a)) + blocks[13] + 1309151649;\\n    b = (b << 21 | b >>> 11) + c << 0;\\n    a += (c ^ (b | ~d)) + blocks[4] - 145523070;\\n    a = (a << 6 | a >>> 26) + b << 0;\\n    d += (b ^ (a | ~c)) + blocks[11] - 1120210379;\\n    d = (d << 10 | d >>> 22) + a << 0;\\n    c += (a ^ (d | ~b)) + blocks[2] + 718787259;\\n    c = (c << 15 | c >>> 17) + d << 0;\\n    b += (d ^ (c | ~a)) + blocks[9] - 343485551;\\n    b = (b << 21 | b >>> 11) + c << 0;\\n\\n    if (this.first) {\\n      this.h0 = a + 1732584193 << 0;\\n      this.h1 = b - 271733879 << 0;\\n      this.h2 = c - 1732584194 << 0;\\n      this.h3 = d + 271733878 << 0;\\n      this.first = false;\\n    } else {\\n      this.h0 = this.h0 + a << 0;\\n      this.h1 = this.h1 + b << 0;\\n      this.h2 = this.h2 + c << 0;\\n      this.h3 = this.h3 + d << 0;\\n    }\\n  };\\n\\n  /**\\n   * @method hex\\n   * @memberof Md5\\n   * @instance\\n   * @description Output hash as hex string\\n   * @returns {String} Hex string\\n   * @see {@link md5.hex}\\n   * @example\\n   * hash.hex();\\n   */\\n  Md5.prototype.hex = function () {\\n    this.finalize();\\n\\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3;\\n\\n    return HEX_CHARS[(h0 >> 4) & 0x0F] + HEX_CHARS[h0 & 0x0F] +\\n      HEX_CHARS[(h0 >> 12) & 0x0F] + HEX_CHARS[(h0 >> 8) & 0x0F] +\\n      HEX_CHARS[(h0 >> 20) & 0x0F] + HEX_CHARS[(h0 >> 16) & 0x0F] +\\n      HEX_CHARS[(h0 >> 28) & 0x0F] + HEX_CHARS[(h0 >> 24) & 0x0F] +\\n      HEX_CHARS[(h1 >> 4) & 0x0F] + HEX_CHARS[h1 & 0x0F] +\\n      HEX_CHARS[(h1 >> 12) & 0x0F] + HEX_CHARS[(h1 >> 8) & 0x0F] +\\n      HEX_CHARS[(h1 >> 20) & 0x0F] + HEX_CHARS[(h1 >> 16) & 0x0F] +\\n      HEX_CHARS[(h1 >> 28) & 0x0F] + HEX_CHARS[(h1 >> 24) & 0x0F] +\\n      HEX_CHARS[(h2 >> 4) & 0x0F] + HEX_CHARS[h2 & 0x0F] +\\n      HEX_CHARS[(h2 >> 12) & 0x0F] + HEX_CHARS[(h2 >> 8) & 0x0F] +\\n      HEX_CHARS[(h2 >> 20) & 0x0F] + HEX_CHARS[(h2 >> 16) & 0x0F] +\\n      HEX_CHARS[(h2 >> 28) & 0x0F] + HEX_CHARS[(h2 >> 24) & 0x0F] +\\n      HEX_CHARS[(h3 >> 4) & 0x0F] + HEX_CHARS[h3 & 0x0F] +\\n      HEX_CHARS[(h3 >> 12) & 0x0F] + HEX_CHARS[(h3 >> 8) & 0x0F] +\\n      HEX_CHARS[(h3 >> 20) & 0x0F] + HEX_CHARS[(h3 >> 16) & 0x0F] +\\n      HEX_CHARS[(h3 >> 28) & 0x0F] + HEX_CHARS[(h3 >> 24) & 0x0F];\\n  };\\n\\n  /**\\n   * @method toString\\n   * @memberof Md5\\n   * @instance\\n   * @description Output hash as hex string\\n   * @returns {String} Hex string\\n   * @see {@link md5.hex}\\n   * @example\\n   * hash.toString();\\n   */\\n  Md5.prototype.toString = Md5.prototype.hex;\\n\\n  /**\\n   * @method digest\\n   * @memberof Md5\\n   * @instance\\n   * @description Output hash as bytes array\\n   * @returns {Array} Bytes array\\n   * @see {@link md5.digest}\\n   * @example\\n   * hash.digest();\\n   */\\n  Md5.prototype.digest = function () {\\n    this.finalize();\\n\\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3;\\n    return [\\n      h0 & 0xFF, (h0 >> 8) & 0xFF, (h0 >> 16) & 0xFF, (h0 >> 24) & 0xFF,\\n      h1 & 0xFF, (h1 >> 8) & 0xFF, (h1 >> 16) & 0xFF, (h1 >> 24) & 0xFF,\\n      h2 & 0xFF, (h2 >> 8) & 0xFF, (h2 >> 16) & 0xFF, (h2 >> 24) & 0xFF,\\n      h3 & 0xFF, (h3 >> 8) & 0xFF, (h3 >> 16) & 0xFF, (h3 >> 24) & 0xFF\\n    ];\\n  };\\n\\n  /**\\n   * @method array\\n   * @memberof Md5\\n   * @instance\\n   * @description Output hash as bytes array\\n   * @returns {Array} Bytes array\\n   * @see {@link md5.array}\\n   * @example\\n   * hash.array();\\n   */\\n  Md5.prototype.array = Md5.prototype.digest;\\n\\n  /**\\n   * @method arrayBuffer\\n   * @memberof Md5\\n   * @instance\\n   * @description Output hash as ArrayBuffer\\n   * @returns {ArrayBuffer} ArrayBuffer\\n   * @see {@link md5.arrayBuffer}\\n   * @example\\n   * hash.arrayBuffer();\\n   */\\n  Md5.prototype.arrayBuffer = function () {\\n    this.finalize();\\n\\n    var buffer = new ArrayBuffer(16);\\n    var blocks = new Uint32Array(buffer);\\n    blocks[0] = this.h0;\\n    blocks[1] = this.h1;\\n    blocks[2] = this.h2;\\n    blocks[3] = this.h3;\\n    return buffer;\\n  };\\n\\n  /**\\n   * @method buffer\\n   * @deprecated This maybe confuse with Buffer in node.js. Please use arrayBuffer instead.\\n   * @memberof Md5\\n   * @instance\\n   * @description Output hash as ArrayBuffer\\n   * @returns {ArrayBuffer} ArrayBuffer\\n   * @see {@link md5.buffer}\\n   * @example\\n   * hash.buffer();\\n   */\\n  Md5.prototype.buffer = Md5.prototype.arrayBuffer;\\n\\n  /**\\n   * @method base64\\n   * @memberof Md5\\n   * @instance\\n   * @description Output hash as base64 string\\n   * @returns {String} base64 string\\n   * @see {@link md5.base64}\\n   * @example\\n   * hash.base64();\\n   */\\n  Md5.prototype.base64 = function () {\\n    var v1, v2, v3, base64Str = '', bytes = this.array();\\n    for (var i = 0; i < 15;) {\\n      v1 = bytes[i++];\\n      v2 = bytes[i++];\\n      v3 = bytes[i++];\\n      base64Str += BASE64_ENCODE_CHAR[v1 >>> 2] +\\n        BASE64_ENCODE_CHAR[(v1 << 4 | v2 >>> 4) & 63] +\\n        BASE64_ENCODE_CHAR[(v2 << 2 | v3 >>> 6) & 63] +\\n        BASE64_ENCODE_CHAR[v3 & 63];\\n    }\\n    v1 = bytes[i];\\n    base64Str += BASE64_ENCODE_CHAR[v1 >>> 2] +\\n      BASE64_ENCODE_CHAR[(v1 << 4) & 63] +\\n      '==';\\n    return base64Str;\\n  };\\n\\n  var exports = createMethod();\\n\\n  if (COMMON_JS) {\\n    module.exports = exports;\\n  } else {\\n    /**\\n     * @method md5\\b\\n     * @description Md5 hash function, export to global in browsers.\\n     * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\\n     * @returns {String} md5 hashes\\n     * @example\\n     * md5(''); // d41d8cd98f00b204e9800998ecf8427e\\n     * md5('The quick brown fox jumps over the lazy dog'); // 9e107d9d372bb6826bd81d3542a419d6\\n     * md5('The quick brown fox jumps over the lazy dog.'); // e4d909c290d0fb1ca068ffaddf22cbd0\\n     *\\n     * // It also supports UTF-8 encoding\\n     * md5('中文'); // a7bac2239fcdcb3a067903d8077c4a07\\n     *\\n     * // It also supports byte `Array`, `Uint8Array`, `ArrayBuffer`\\n     * md5([]); // d41d8cd98f00b204e9800998ecf8427e\\n     * md5(new Uint8Array([])); // d41d8cd98f00b204e9800998ecf8427e\\n     */\\n    root.md5 = exports;\\n    if (AMD) {\\n      define(function () {\\n        return exports;\\n      });\\n    }\\n  }\\n})();\\n\",\"const RandomUtil = require('./RandomUtil');\\n\\n/**\\n * from faker.js - Copyright (c) 2014-2015 Matthew Bergman & Marak Squires\\n * MIT License\\n * http://github.com/marak/faker.js/\\n *\\n * @const\\n */\\nconst names = [\\n    'Aaliyah', 'Aaron', 'Abagail', 'Abbey', 'Abbie', 'Abbigail', 'Abby',\\n    'Abdiel', 'Abdul', 'Abdullah', 'Abe', 'Abel', 'Abelardo', 'Abigail',\\n    'Abigale', 'Abigayle', 'Abner', 'Abraham', 'Ada', 'Adah', 'Adalberto',\\n    'Adaline', 'Adam', 'Adan', 'Addie', 'Addison', 'Adela', 'Adelbert', 'Adele',\\n    'Adelia', 'Adeline', 'Adell', 'Adella', 'Adelle', 'Aditya', 'Adolf',\\n    'Adolfo', 'Adolph', 'Adolphus', 'Adonis', 'Adrain', 'Adrian', 'Adriana',\\n    'Adrianna', 'Adriel', 'Adrien', 'Adrienne', 'Afton', 'Aglae', 'Agnes',\\n    'Agustin', 'Agustina', 'Ahmad', 'Ahmed', 'Aida', 'Aidan', 'Aiden', 'Aileen',\\n    'Aisha', 'Aiyana', 'Akeem', 'Al', 'Alaina', 'Alan', 'Alana', 'Alanis',\\n    'Alanna', 'Alayna', 'Alba', 'Albert', 'Alberta', 'Albertha', 'Alberto',\\n    'Albin', 'Albina', 'Alda', 'Alden', 'Alec', 'Aleen', 'Alejandra',\\n    'Alejandrin', 'Alek', 'Alena', 'Alene', 'Alessandra', 'Alessandro',\\n    'Alessia', 'Aletha', 'Alex', 'Alexa', 'Alexander', 'Alexandra', 'Alexandre',\\n    'Alexandrea', 'Alexandria', 'Alexandrine', 'Alexandro', 'Alexane',\\n    'Alexanne', 'Alexie', 'Alexis', 'Alexys', 'Alexzander', 'Alf', 'Alfonso',\\n    'Alfonzo', 'Alford', 'Alfred', 'Alfreda', 'Alfredo', 'Ali', 'Alia', 'Alice',\\n    'Alicia', 'Alisa', 'Alisha', 'Alison', 'Alivia', 'Aliya', 'Aliyah', 'Aliza',\\n    'Alize', 'Allan', 'Allen', 'Allene', 'Allie', 'Allison', 'Ally', 'Alphonso',\\n    'Alta', 'Althea', 'Alva', 'Alvah', 'Alvena', 'Alvera', 'Alverta', 'Alvina',\\n    'Alvis', 'Alyce', 'Alycia', 'Alysa', 'Alysha', 'Alyson', 'Alysson',\\n    'Amalia', 'Amanda', 'Amani', 'Amara', 'Amari', 'Amaya', 'Amber', 'Ambrose',\\n    'Amelia', 'Amelie', 'Amely', 'America', 'Americo', 'Amie', 'Amina', 'Amir',\\n    'Amira', 'Amiya', 'Amos', 'Amparo', 'Amy', 'Amya', 'Ana', 'Anabel',\\n    'Anabelle', 'Anahi', 'Anais', 'Anastacio', 'Anastasia', 'Anderson', 'Andre',\\n    'Andreane', 'Andreanne', 'Andres', 'Andrew', 'Andy', 'Angel', 'Angela',\\n    'Angelica', 'Angelina', 'Angeline', 'Angelita', 'Angelo', 'Angie', 'Angus',\\n    'Anibal', 'Anika', 'Anissa', 'Anita', 'Aniya', 'Aniyah', 'Anjali', 'Anna',\\n    'Annabel', 'Annabell', 'Annabelle', 'Annalise', 'Annamae', 'Annamarie',\\n    'Anne', 'Annetta', 'Annette', 'Annie', 'Ansel', 'Ansley', 'Anthony',\\n    'Antoinette', 'Antone', 'Antonetta', 'Antonette', 'Antonia', 'Antonietta',\\n    'Antonina', 'Antonio', 'Antwan', 'Antwon', 'Anya', 'April', 'Ara',\\n    'Araceli', 'Aracely', 'Arch', 'Archibald', 'Ardella', 'Arden', 'Ardith',\\n    'Arely', 'Ari', 'Ariane', 'Arianna', 'Aric', 'Ariel', 'Arielle', 'Arjun',\\n    'Arlene', 'Arlie', 'Arlo', 'Armand', 'Armando', 'Armani', 'Arnaldo', 'Arne',\\n    'Arno', 'Arnold', 'Arnoldo', 'Arnulfo', 'Aron', 'Art', 'Arthur', 'Arturo',\\n    'Arvel', 'Arvid', 'Arvilla', 'Aryanna', 'Asa', 'Asha', 'Ashlee', 'Ashleigh',\\n    'Ashley', 'Ashly', 'Ashlynn', 'Ashton', 'Ashtyn', 'Asia', 'Assunta',\\n    'Astrid', 'Athena', 'Aubree', 'Aubrey', 'Audie', 'Audra', 'Audreanne',\\n    'Audrey', 'August', 'Augusta', 'Augustine', 'Augustus', 'Aurelia',\\n    'Aurelie', 'Aurelio', 'Aurore', 'Austen', 'Austin', 'Austyn', 'Autumn',\\n    'Ava', 'Avery', 'Avis', 'Axel', 'Ayana', 'Ayden', 'Ayla', 'Aylin', 'Baby',\\n    'Bailee', 'Bailey', 'Barbara', 'Barney', 'Baron', 'Barrett', 'Barry',\\n    'Bart', 'Bartholome', 'Barton', 'Baylee', 'Beatrice', 'Beau', 'Beaulah',\\n    'Bell', 'Bella', 'Belle', 'Ben', 'Benedict', 'Benjamin', 'Bennett',\\n    'Bennie', 'Benny', 'Benton', 'Berenice', 'Bernadette', 'Bernadine',\\n    'Bernard', 'Bernardo', 'Berneice', 'Bernhard', 'Bernice', 'Bernie',\\n    'Berniece', 'Bernita', 'Berry', 'Bert', 'Berta', 'Bertha', 'Bertram',\\n    'Bertrand', 'Beryl', 'Bessie', 'Beth', 'Bethany', 'Bethel', 'Betsy',\\n    'Bette', 'Bettie', 'Betty', 'Bettye', 'Beulah', 'Beverly', 'Bianka', 'Bill',\\n    'Billie', 'Billy', 'Birdie', 'Blair', 'Blaise', 'Blake', 'Blanca',\\n    'Blanche', 'Blaze', 'Bo', 'Bobbie', 'Bobby', 'Bonita', 'Bonnie', 'Boris',\\n    'Boyd', 'Brad', 'Braden', 'Bradford', 'Bradley', 'Bradly', 'Brady',\\n    'Braeden', 'Brain', 'Brandi', 'Brando', 'Brandon', 'Brandt', 'Brandy',\\n    'Brandyn', 'Brannon', 'Branson', 'Brant', 'Braulio', 'Braxton', 'Brayan',\\n    'Breana', 'Breanna', 'Breanne', 'Brenda', 'Brendan', 'Brenden', 'Brendon',\\n    'Brenna', 'Brennan', 'Brennon', 'Brent', 'Bret', 'Brett', 'Bria', 'Brian',\\n    'Briana', 'Brianne', 'Brice', 'Bridget', 'Bridgette', 'Bridie', 'Brielle',\\n    'Brigitte', 'Brionna', 'Brisa', 'Britney', 'Brittany', 'Brock', 'Broderick',\\n    'Brody', 'Brook', 'Brooke', 'Brooklyn', 'Brooks', 'Brown', 'Bruce',\\n    'Bryana', 'Bryce', 'Brycen', 'Bryon', 'Buck', 'Bud', 'Buddy', 'Buford',\\n    'Bulah', 'Burdette', 'Burley', 'Burnice', 'Buster', 'Cade', 'Caden',\\n    'Caesar', 'Caitlyn', 'Cale', 'Caleb', 'Caleigh', 'Cali', 'Calista',\\n    'Callie', 'Camden', 'Cameron', 'Camila', 'Camilla', 'Camille', 'Camren',\\n    'Camron', 'Camryn', 'Camylle', 'Candace', 'Candelario', 'Candice',\\n    'Candida', 'Candido', 'Cara', 'Carey', 'Carissa', 'Carlee', 'Carleton',\\n    'Carley', 'Carli', 'Carlie', 'Carlo', 'Carlos', 'Carlotta', 'Carmel',\\n    'Carmela', 'Carmella', 'Carmelo', 'Carmen', 'Carmine', 'Carol', 'Carolanne',\\n    'Carole', 'Carolina', 'Caroline', 'Carolyn', 'Carolyne', 'Carrie',\\n    'Carroll', 'Carson', 'Carter', 'Cary', 'Casandra', 'Casey', 'Casimer',\\n    'Casimir', 'Casper', 'Cassandra', 'Cassandre', 'Cassidy', 'Cassie',\\n    'Catalina', 'Caterina', 'Catharine', 'Catherine', 'Cathrine', 'Cathryn',\\n    'Cathy', 'Cayla', 'Ceasar', 'Cecelia', 'Cecil', 'Cecile', 'Cecilia',\\n    'Cedrick', 'Celestine', 'Celestino', 'Celia', 'Celine', 'Cesar', 'Chad',\\n    'Chadd', 'Chadrick', 'Chaim', 'Chance', 'Chandler', 'Chanel', 'Chanelle',\\n    'Charity', 'Charlene', 'Charles', 'Charley', 'Charlie', 'Charlotte',\\n    'Chase', 'Chasity', 'Chauncey', 'Chaya', 'Chaz', 'Chelsea', 'Chelsey',\\n    'Chelsie', 'Chesley', 'Chester', 'Chet', 'Cheyanne', 'Cheyenne', 'Chloe',\\n    'Chris', 'Christ', 'Christa', 'Christelle', 'Christian', 'Christiana',\\n    'Christina', 'Christine', 'Christop', 'Christophe', 'Christopher',\\n    'Christy', 'Chyna', 'Ciara', 'Cicero', 'Cielo', 'Cierra', 'Cindy',\\n    'Citlalli', 'Clair', 'Claire', 'Clara', 'Clarabelle', 'Clare', 'Clarissa',\\n    'Clark', 'Claud', 'Claude', 'Claudia', 'Claudie', 'Claudine', 'Clay',\\n    'Clemens', 'Clement', 'Clementina', 'Clementine', 'Clemmie', 'Cleo',\\n    'Cleora', 'Cleta', 'Cletus', 'Cleve', 'Cleveland', 'Clifford', 'Clifton',\\n    'Clint', 'Clinton', 'Clotilde', 'Clovis', 'Cloyd', 'Clyde', 'Coby', 'Cody',\\n    'Colby', 'Cole', 'Coleman', 'Colin', 'Colleen', 'Collin', 'Colt', 'Colten',\\n    'Colton', 'Columbus', 'Concepcion', 'Conner', 'Connie', 'Connor', 'Conor',\\n    'Conrad', 'Constance', 'Constantin', 'Consuelo', 'Cooper', 'Cora',\\n    'Coralie', 'Corbin', 'Cordelia', 'Cordell', 'Cordia', 'Cordie', 'Corene',\\n    'Corine', 'Cornelius', 'Cornell', 'Corrine', 'Cortez', 'Cortney', 'Cory',\\n    'Coty', 'Courtney', 'Coy', 'Craig', 'Crawford', 'Creola', 'Cristal',\\n    'Cristian', 'Cristina', 'Cristobal', 'Cristopher', 'Cruz', 'Crystal',\\n    'Crystel', 'Cullen', 'Curt', 'Curtis', 'Cydney', 'Cynthia', 'Cyril',\\n    'Cyrus', 'Dagmar', 'Dahlia', 'Daija', 'Daisha', 'Daisy', 'Dakota', 'Dale',\\n    'Dallas', 'Dallin', 'Dalton', 'Damaris', 'Dameon', 'Damian', 'Damien',\\n    'Damion', 'Damon', 'Dan', 'Dana', 'Dandre', 'Dane', 'D\\\\'angelo', 'Dangelo',\\n    'Danial', 'Daniela', 'Daniella', 'Danielle', 'Danika', 'Dannie', 'Danny',\\n    'Dante', 'Danyka', 'Daphne', 'Daphnee', 'Daphney', 'Darby', 'Daren',\\n    'Darian', 'Dariana', 'Darien', 'Dario', 'Darion', 'Darius', 'Darlene',\\n    'Daron', 'Darrel', 'Darrell', 'Darren', 'Darrick', 'Darrin', 'Darrion',\\n    'Darron', 'Darryl', 'Darwin', 'Daryl', 'Dashawn', 'Dasia', 'Dave', 'David',\\n    'Davin', 'Davion', 'Davon', 'Davonte', 'Dawn', 'Dawson', 'Dax', 'Dayana',\\n    'Dayna', 'Dayne', 'Dayton', 'Dean', 'Deangelo', 'Deanna', 'Deborah',\\n    'Declan', 'Dedric', 'Dedrick', 'Dee', 'Deion', 'Deja', 'Dejah', 'Dejon',\\n    'Dejuan', 'Delaney', 'Delbert', 'Delfina', 'Delia', 'Delilah', 'Dell',\\n    'Della', 'Delmer', 'Delores', 'Delpha', 'Delphia', 'Delphine', 'Delta',\\n    'Demarco', 'Demarcus', 'Demario', 'Demetris', 'Demetrius', 'Demond', 'Dena',\\n    'Denis', 'Dennis', 'Deon', 'Deondre', 'Deontae', 'Deonte', 'Dereck',\\n    'Derek', 'Derick', 'Deron', 'Derrick', 'Deshaun', 'Deshawn', 'Desiree',\\n    'Desmond', 'Dessie', 'Destany', 'Destin', 'Destinee', 'Destiney', 'Destini',\\n    'Destiny', 'Devan', 'Devante', 'Deven', 'Devin', 'Devon', 'Devonte',\\n    'Devyn', 'Dewayne', 'Dewitt', 'Dexter', 'Diamond', 'Diana', 'Dianna',\\n    'Diego', 'Dillan', 'Dillon', 'Dimitri', 'Dina', 'Dino', 'Dion', 'Dixie',\\n    'Dock', 'Dolly', 'Dolores', 'Domenic', 'Domenica', 'Domenick', 'Domenico',\\n    'Domingo', 'Dominic', 'Dominique', 'Don', 'Donald', 'Donato', 'Donavon',\\n    'Donna', 'Donnell', 'Donnie', 'Donny', 'Dora', 'Dorcas', 'Dorian', 'Doris',\\n    'Dorothea', 'Dorothy', 'Dorris', 'Dortha', 'Dorthy', 'Doug', 'Douglas',\\n    'Dovie', 'Doyle', 'Drake', 'Drew', 'Duane', 'Dudley', 'Dulce', 'Duncan',\\n    'Durward', 'Dustin', 'Dusty', 'Dwight', 'Dylan', 'Earl', 'Earlene',\\n    'Earline', 'Earnest', 'Earnestine', 'Easter', 'Easton', 'Ebba', 'Ebony',\\n    'Ed', 'Eda', 'Edd', 'Eddie', 'Eden', 'Edgar', 'Edgardo', 'Edison', 'Edmond',\\n    'Edmund', 'Edna', 'Eduardo', 'Edward', 'Edwardo', 'Edwin', 'Edwina',\\n    'Edyth', 'Edythe', 'Effie', 'Efrain', 'Efren', 'Eileen', 'Einar', 'Eino',\\n    'Eladio', 'Elaina', 'Elbert', 'Elda', 'Eldon', 'Eldora', 'Eldred',\\n    'Eldridge', 'Eleanora', 'Eleanore', 'Eleazar', 'Electa', 'Elena', 'Elenor',\\n    'Elenora', 'Eleonore', 'Elfrieda', 'Eli', 'Elian', 'Eliane', 'Elias',\\n    'Eliezer', 'Elijah', 'Elinor', 'Elinore', 'Elisa', 'Elisabeth', 'Elise',\\n    'Eliseo', 'Elisha', 'Elissa', 'Eliza', 'Elizabeth', 'Ella', 'Ellen',\\n    'Ellie', 'Elliot', 'Elliott', 'Ellis', 'Ellsworth', 'Elmer', 'Elmira',\\n    'Elmo', 'Elmore', 'Elna', 'Elnora', 'Elody', 'Eloisa', 'Eloise', 'Elouise',\\n    'Eloy', 'Elroy', 'Elsa', 'Else', 'Elsie', 'Elta', 'Elton', 'Elva', 'Elvera',\\n    'Elvie', 'Elvis', 'Elwin', 'Elwyn', 'Elyse', 'Elyssa', 'Elza', 'Emanuel',\\n    'Emelia', 'Emelie', 'Emely', 'Emerald', 'Emerson', 'Emery', 'Emie', 'Emil',\\n    'Emile', 'Emilia', 'Emiliano', 'Emilie', 'Emilio', 'Emily', 'Emma',\\n    'Emmalee', 'Emmanuel', 'Emmanuelle', 'Emmet', 'Emmett', 'Emmie', 'Emmitt',\\n    'Emmy', 'Emory', 'Ena', 'Enid', 'Enoch', 'Enola', 'Enos', 'Enrico',\\n    'Enrique', 'Ephraim', 'Era', 'Eriberto', 'Eric', 'Erica', 'Erich', 'Erick',\\n    'Ericka', 'Erik', 'Erika', 'Erin', 'Erling', 'Erna', 'Ernest', 'Ernestina',\\n    'Ernestine', 'Ernesto', 'Ernie', 'Ervin', 'Erwin', 'Eryn', 'Esmeralda',\\n    'Esperanza', 'Esta', 'Esteban', 'Estefania', 'Estel', 'Estell', 'Estella',\\n    'Estelle', 'Estevan', 'Esther', 'Estrella', 'Etha', 'Ethan', 'Ethel',\\n    'Ethelyn', 'Ethyl', 'Ettie', 'Eudora', 'Eugene', 'Eugenia', 'Eula', 'Eulah',\\n    'Eulalia', 'Euna', 'Eunice', 'Eusebio', 'Eva', 'Evalyn', 'Evan',\\n    'Evangeline', 'Evans', 'Eve', 'Eveline', 'Evelyn', 'Everardo', 'Everett',\\n    'Everette', 'Evert', 'Evie', 'Ewald', 'Ewell', 'Ezekiel', 'Ezequiel',\\n    'Ezra', 'Fabian', 'Fabiola', 'Fae', 'Fannie', 'Fanny', 'Fatima', 'Faustino',\\n    'Fausto', 'Favian', 'Fay', 'Faye', 'Federico', 'Felicia', 'Felicita',\\n    'Felicity', 'Felipa', 'Felipe', 'Felix', 'Felton', 'Fermin', 'Fern',\\n    'Fernando', 'Ferne', 'Fidel', 'Filiberto', 'Filomena', 'Finn', 'Fiona',\\n    'Flavie', 'Flavio', 'Fleta', 'Fletcher', 'Flo', 'Florence', 'Florencio',\\n    'Florian', 'Florida', 'Florine', 'Flossie', 'Floy', 'Floyd', 'Ford',\\n    'Forest', 'Forrest', 'Foster', 'Frances', 'Francesca', 'Francesco',\\n    'Francis', 'Francisca', 'Francisco', 'Franco', 'Frank', 'Frankie', 'Franz',\\n    'Fred', 'Freda', 'Freddie', 'Freddy', 'Frederic', 'Frederick', 'Frederik',\\n    'Frederique', 'Fredrick', 'Fredy', 'Freeda', 'Freeman', 'Freida', 'Frida',\\n    'Frieda', 'Friedrich', 'Fritz', 'Furman', 'Gabe', 'Gabriel', 'Gabriella',\\n    'Gabrielle', 'Gaetano', 'Gage', 'Gail', 'Gardner', 'Garett', 'Garfield',\\n    'Garland', 'Garnet', 'Garnett', 'Garret', 'Garrett', 'Garrick', 'Garrison',\\n    'Garry', 'Garth', 'Gaston', 'Gavin', 'Gay', 'Gayle', 'Gaylord', 'Gene',\\n    'General', 'Genesis', 'Genevieve', 'Gennaro', 'Genoveva', 'Geo', 'Geoffrey',\\n    'George', 'Georgette', 'Georgiana', 'Georgianna', 'Geovanni', 'Geovanny',\\n    'Geovany', 'Gerald', 'Geraldine', 'Gerard', 'Gerardo', 'Gerda', 'Gerhard',\\n    'Germaine', 'German', 'Gerry', 'Gerson', 'Gertrude', 'Gia', 'Gianni',\\n    'Gideon', 'Gilbert', 'Gilberto', 'Gilda', 'Giles', 'Gillian', 'Gina',\\n    'Gino', 'Giovani', 'Giovanna', 'Giovanni', 'Giovanny', 'Gisselle',\\n    'Giuseppe', 'Gladyce', 'Gladys', 'Glen', 'Glenda', 'Glenna', 'Glennie',\\n    'Gloria', 'Godfrey', 'Golda', 'Golden', 'Gonzalo', 'Gordon', 'Grace',\\n    'Gracie', 'Graciela', 'Grady', 'Graham', 'Grant', 'Granville', 'Grayce',\\n    'Grayson', 'Green', 'Greg', 'Gregg', 'Gregoria', 'Gregorio', 'Gregory',\\n    'Greta', 'Gretchen', 'Greyson', 'Griffin', 'Grover', 'Guadalupe', 'Gudrun',\\n    'Guido', 'Guillermo', 'Guiseppe', 'Gunnar', 'Gunner', 'Gus', 'Gussie',\\n    'Gust', 'Gustave', 'Guy', 'Gwen', 'Gwendolyn', 'Hadley', 'Hailee', 'Hailey',\\n    'Hailie', 'Hal', 'Haleigh', 'Haley', 'Halie', 'Halle', 'Hallie', 'Hank',\\n    'Hanna', 'Hannah', 'Hans', 'Hardy', 'Harley', 'Harmon', 'Harmony', 'Harold',\\n    'Harrison', 'Harry', 'Harvey', 'Haskell', 'Hassan', 'Hassie', 'Hattie',\\n    'Haven', 'Hayden', 'Haylee', 'Hayley', 'Haylie', 'Hazel', 'Hazle', 'Heath',\\n    'Heather', 'Heaven', 'Heber', 'Hector', 'Heidi', 'Helen', 'Helena',\\n    'Helene', 'Helga', 'Hellen', 'Helmer', 'Heloise', 'Henderson', 'Henri',\\n    'Henriette', 'Henry', 'Herbert', 'Herman', 'Hermann', 'Hermina', 'Herminia',\\n    'Herminio', 'Hershel', 'Herta', 'Hertha', 'Hester', 'Hettie', 'Hilario',\\n    'Hilbert', 'Hilda', 'Hildegard', 'Hillard', 'Hillary', 'Hilma', 'Hilton',\\n    'Hipolito', 'Hiram', 'Hobart', 'Holden', 'Hollie', 'Hollis', 'Holly',\\n    'Hope', 'Horace', 'Horacio', 'Hortense', 'Hosea', 'Houston', 'Howard',\\n    'Howell', 'Hoyt', 'Hubert', 'Hudson', 'Hugh', 'Hulda', 'Humberto', 'Hunter',\\n    'Hyman', 'Ian', 'Ibrahim', 'Icie', 'Ida', 'Idell', 'Idella', 'Ignacio',\\n    'Ignatius', 'Ike', 'Ila', 'Ilene', 'Iliana', 'Ima', 'Imani', 'Imelda',\\n    'Immanuel', 'Imogene', 'Ines', 'Irma', 'Irving', 'Irwin', 'Isaac', 'Isabel',\\n    'Isabell', 'Isabella', 'Isabelle', 'Isac', 'Isadore', 'Isai', 'Isaiah',\\n    'Isaias', 'Isidro', 'Ismael', 'Isobel', 'Isom', 'Israel', 'Issac', 'Itzel',\\n    'Iva', 'Ivah', 'Ivory', 'Ivy', 'Izabella', 'Izaiah', 'Jabari', 'Jace',\\n    'Jacey', 'Jacinthe', 'Jacinto', 'Jack', 'Jackeline', 'Jackie', 'Jacklyn',\\n    'Jackson', 'Jacky', 'Jaclyn', 'Jacquelyn', 'Jacques', 'Jacynthe', 'Jada',\\n    'Jade', 'Jaden', 'Jadon', 'Jadyn', 'Jaeden', 'Jaida', 'Jaiden', 'Jailyn',\\n    'Jaime', 'Jairo', 'Jakayla', 'Jake', 'Jakob', 'Jaleel', 'Jalen', 'Jalon',\\n    'Jalyn', 'Jamaal', 'Jamal', 'Jamar', 'Jamarcus', 'Jamel', 'Jameson',\\n    'Jamey', 'Jamie', 'Jamil', 'Jamir', 'Jamison', 'Jammie', 'Jan', 'Jana',\\n    'Janae', 'Jane', 'Janelle', 'Janessa', 'Janet', 'Janice', 'Janick', 'Janie',\\n    'Janis', 'Janiya', 'Jannie', 'Jany', 'Jaquan', 'Jaquelin', 'Jaqueline',\\n    'Jared', 'Jaren', 'Jarod', 'Jaron', 'Jarred', 'Jarrell', 'Jarret',\\n    'Jarrett', 'Jarrod', 'Jarvis', 'Jasen', 'Jasmin', 'Jason', 'Jasper',\\n    'Jaunita', 'Javier', 'Javon', 'Javonte', 'Jay', 'Jayce', 'Jaycee', 'Jayda',\\n    'Jayde', 'Jayden', 'Jaydon', 'Jaylan', 'Jaylen', 'Jaylin', 'Jaylon',\\n    'Jayme', 'Jayne', 'Jayson', 'Jazlyn', 'Jazmin', 'Jazmyn', 'Jazmyne', 'Jean',\\n    'Jeanette', 'Jeanie', 'Jeanne', 'Jed', 'Jedediah', 'Jedidiah', 'Jeff',\\n    'Jefferey', 'Jeffery', 'Jeffrey', 'Jeffry', 'Jena', 'Jenifer', 'Jennie',\\n    'Jennifer', 'Jennings', 'Jennyfer', 'Jensen', 'Jerad', 'Jerald', 'Jeramie',\\n    'Jeramy', 'Jerel', 'Jeremie', 'Jeremy', 'Jermain', 'Jermaine', 'Jermey',\\n    'Jerod', 'Jerome', 'Jeromy', 'Jerrell', 'Jerrod', 'Jerrold', 'Jerry',\\n    'Jess', 'Jesse', 'Jessica', 'Jessie', 'Jessika', 'Jessy', 'Jessyca',\\n    'Jesus', 'Jett', 'Jettie', 'Jevon', 'Jewel', 'Jewell', 'Jillian', 'Jimmie',\\n    'Jimmy', 'Jo', 'Joan', 'Joana', 'Joanie', 'Joanne', 'Joannie', 'Joanny',\\n    'Joany', 'Joaquin', 'Jocelyn', 'Jodie', 'Jody', 'Joe', 'Joel', 'Joelle',\\n    'Joesph', 'Joey', 'Johan', 'Johann', 'Johanna', 'Johathan', 'John',\\n    'Johnathan', 'Johnathon', 'Johnnie', 'Johnny', 'Johnpaul', 'Johnson',\\n    'Jolie', 'Jon', 'Jonas', 'Jonatan', 'Jonathan', 'Jonathon', 'Jordan',\\n    'Jordane', 'Jordi', 'Jordon', 'Jordy', 'Jordyn', 'Jorge', 'Jose', 'Josefa',\\n    'Josefina', 'Joseph', 'Josephine', 'Josh', 'Joshua', 'Joshuah', 'Josiah',\\n    'Josiane', 'Josianne', 'Josie', 'Josue', 'Jovan', 'Jovani', 'Jovanny',\\n    'Jovany', 'Joy', 'Joyce', 'Juana', 'Juanita', 'Judah', 'Judd', 'Jude',\\n    'Judge', 'Judson', 'Judy', 'Jules', 'Julia', 'Julian', 'Juliana',\\n    'Julianne', 'Julie', 'Julien', 'Juliet', 'Julio', 'Julius', 'June',\\n    'Junior', 'Junius', 'Justen', 'Justice', 'Justina', 'Justine', 'Juston',\\n    'Justus', 'Justyn', 'Juvenal', 'Juwan', 'Kacey', 'Kaci', 'Kacie', 'Kade',\\n    'Kaden', 'Kadin', 'Kaela', 'Kaelyn', 'Kaia', 'Kailee', 'Kailey', 'Kailyn',\\n    'Kaitlin', 'Kaitlyn', 'Kale', 'Kaleb', 'Kaleigh', 'Kaley', 'Kali', 'Kallie',\\n    'Kameron', 'Kamille', 'Kamren', 'Kamron', 'Kamryn', 'Kane', 'Kara',\\n    'Kareem', 'Karelle', 'Karen', 'Kari', 'Kariane', 'Karianne', 'Karina',\\n    'Karine', 'Karl', 'Karlee', 'Karley', 'Karli', 'Karlie', 'Karolann',\\n    'Karson', 'Kasandra', 'Kasey', 'Kassandra', 'Katarina', 'Katelin',\\n    'Katelyn', 'Katelynn', 'Katharina', 'Katherine', 'Katheryn', 'Kathleen',\\n    'Kathlyn', 'Kathryn', 'Kathryne', 'Katlyn', 'Katlynn', 'Katrina', 'Katrine',\\n    'Kattie', 'Kavon', 'Kay', 'Kaya', 'Kaycee', 'Kayden', 'Kayla', 'Kaylah',\\n    'Kaylee', 'Kayleigh', 'Kayley', 'Kayli', 'Kaylie', 'Kaylin', 'Keagan',\\n    'Keanu', 'Keara', 'Keaton', 'Keegan', 'Keeley', 'Keely', 'Keenan', 'Keira',\\n    'Keith', 'Kellen', 'Kelley', 'Kelli', 'Kellie', 'Kelly', 'Kelsi', 'Kelsie',\\n    'Kelton', 'Kelvin', 'Ken', 'Kendall', 'Kendra', 'Kendrick', 'Kenna',\\n    'Kennedi', 'Kennedy', 'Kenneth', 'Kennith', 'Kenny', 'Kenton', 'Kenya',\\n    'Kenyatta', 'Kenyon', 'Keon', 'Keshaun', 'Keshawn', 'Keven', 'Kevin',\\n    'Kevon', 'Keyon', 'Keyshawn', 'Khalid', 'Khalil', 'Kian', 'Kiana', 'Kianna',\\n    'Kiara', 'Kiarra', 'Kiel', 'Kiera', 'Kieran', 'Kiley', 'Kim', 'Kimberly',\\n    'King', 'Kip', 'Kira', 'Kirk', 'Kirsten', 'Kirstin', 'Kitty', 'Kobe',\\n    'Koby', 'Kody', 'Kolby', 'Kole', 'Korbin', 'Korey', 'Kory', 'Kraig', 'Kris',\\n    'Krista', 'Kristian', 'Kristin', 'Kristina', 'Kristofer', 'Kristoffer',\\n    'Kristopher', 'Kristy', 'Krystal', 'Krystel', 'Krystina', 'Kurt', 'Kurtis',\\n    'Kyla', 'Kyle', 'Kylee', 'Kyleigh', 'Kyler', 'Kylie', 'Kyra', 'Lacey',\\n    'Lacy', 'Ladarius', 'Lafayette', 'Laila', 'Laisha', 'Lamar', 'Lambert',\\n    'Lamont', 'Lance', 'Landen', 'Lane', 'Laney', 'Larissa', 'Laron', 'Larry',\\n    'Larue', 'Laura', 'Laurel', 'Lauren', 'Laurence', 'Lauretta', 'Lauriane',\\n    'Laurianne', 'Laurie', 'Laurine', 'Laury', 'Lauryn', 'Lavada', 'Lavern',\\n    'Laverna', 'Laverne', 'Lavina', 'Lavinia', 'Lavon', 'Lavonne', 'Lawrence',\\n    'Lawson', 'Layla', 'Layne', 'Lazaro', 'Lea', 'Leann', 'Leanna', 'Leanne',\\n    'Leatha', 'Leda', 'Lee', 'Leif', 'Leila', 'Leilani', 'Lela', 'Lelah',\\n    'Leland', 'Lelia', 'Lempi', 'Lemuel', 'Lenna', 'Lennie', 'Lenny', 'Lenora',\\n    'Lenore', 'Leo', 'Leola', 'Leon', 'Leonard', 'Leonardo', 'Leone', 'Leonel',\\n    'Leonie', 'Leonor', 'Leonora', 'Leopold', 'Leopoldo', 'Leora', 'Lera',\\n    'Lesley', 'Leslie', 'Lesly', 'Lessie', 'Lester', 'Leta', 'Letha', 'Letitia',\\n    'Levi', 'Lew', 'Lewis', 'Lexi', 'Lexie', 'Lexus', 'Lia', 'Liam', 'Liana',\\n    'Libbie', 'Libby', 'Lila', 'Lilian', 'Liliana', 'Liliane', 'Lilla',\\n    'Lillian', 'Lilliana', 'Lillie', 'Lilly', 'Lily', 'Lilyan', 'Lina',\\n    'Lincoln', 'Linda', 'Lindsay', 'Lindsey', 'Linnea', 'Linnie', 'Linwood',\\n    'Lionel', 'Lisa', 'Lisandro', 'Lisette', 'Litzy', 'Liza', 'Lizeth',\\n    'Lizzie', 'Llewellyn', 'Lloyd', 'Logan', 'Lois', 'Lola', 'Lolita', 'Loma',\\n    'Lon', 'London', 'Lonie', 'Lonnie', 'Lonny', 'Lonzo', 'Lora', 'Loraine',\\n    'Loren', 'Lorena', 'Lorenz', 'Lorenza', 'Lorenzo', 'Lori', 'Lorine',\\n    'Lorna', 'Lottie', 'Lou', 'Louie', 'Louisa', 'Lourdes', 'Louvenia',\\n    'Lowell', 'Loy', 'Loyal', 'Loyce', 'Lucas', 'Luciano', 'Lucie', 'Lucienne',\\n    'Lucile', 'Lucinda', 'Lucio', 'Lucious', 'Lucius', 'Lucy', 'Ludie',\\n    'Ludwig', 'Lue', 'Luella', 'Luigi', 'Luis', 'Luisa', 'Lukas', 'Lula',\\n    'Lulu', 'Luna', 'Lupe', 'Lura', 'Lurline', 'Luther', 'Luz', 'Lyda', 'Lydia',\\n    'Lyla', 'Lynn', 'Lyric', 'Lysanne', 'Mabel', 'Mabelle', 'Mable', 'Mac',\\n    'Macey', 'Maci', 'Macie', 'Mack', 'Mackenzie', 'Macy', 'Madaline',\\n    'Madalyn', 'Maddison', 'Madeline', 'Madelyn', 'Madelynn', 'Madge', 'Madie',\\n    'Madilyn', 'Madisen', 'Madison', 'Madisyn', 'Madonna', 'Madyson', 'Mae',\\n    'Maegan', 'Maeve', 'Mafalda', 'Magali', 'Magdalen', 'Magdalena', 'Maggie',\\n    'Magnolia', 'Magnus', 'Maia', 'Maida', 'Maiya', 'Major', 'Makayla',\\n    'Makenna', 'Makenzie', 'Malachi', 'Malcolm', 'Malika', 'Malinda', 'Mallie',\\n    'Mallory', 'Malvina', 'Mandy', 'Manley', 'Manuel', 'Manuela', 'Mara',\\n    'Marc', 'Marcel', 'Marcelina', 'Marcelino', 'Marcella', 'Marcelle',\\n    'Marcellus', 'Marcelo', 'Marcia', 'Marco', 'Marcos', 'Marcus', 'Margaret',\\n    'Margarete', 'Margarett', 'Margaretta', 'Margarette', 'Margarita', 'Marge',\\n    'Margie', 'Margot', 'Margret', 'Marguerite', 'Maria', 'Mariah', 'Mariam',\\n    'Marian', 'Mariana', 'Mariane', 'Marianna', 'Marianne', 'Mariano',\\n    'Maribel', 'Marie', 'Mariela', 'Marielle', 'Marietta', 'Marilie', 'Marilou',\\n    'Marilyne', 'Marina', 'Mario', 'Marion', 'Marisa', 'Marisol', 'Maritza',\\n    'Marjolaine', 'Marjorie', 'Marjory', 'Mark', 'Markus', 'Marlee', 'Marlen',\\n    'Marlene', 'Marley', 'Marlin', 'Marlon', 'Marques', 'Marquis', 'Marquise',\\n    'Marshall', 'Marta', 'Martin', 'Martina', 'Martine', 'Marty', 'Marvin',\\n    'Mary', 'Maryam', 'Maryjane', 'Maryse', 'Mason', 'Mateo', 'Mathew',\\n    'Mathias', 'Mathilde', 'Matilda', 'Matilde', 'Matt', 'Matteo', 'Mattie',\\n    'Maud', 'Maude', 'Maudie', 'Maureen', 'Maurice', 'Mauricio', 'Maurine',\\n    'Maverick', 'Mavis', 'Max', 'Maxie', 'Maxime', 'Maximilian', 'Maximillia',\\n    'Maximillian', 'Maximo', 'Maximus', 'Maxine', 'Maxwell', 'May', 'Maya',\\n    'Maybell', 'Maybelle', 'Maye', 'Maymie', 'Maynard', 'Mayra', 'Mazie',\\n    'Mckayla', 'Mckenna', 'Mckenzie', 'Meagan', 'Meaghan', 'Meda', 'Megane',\\n    'Meggie', 'Meghan', 'Mekhi', 'Melany', 'Melba', 'Melisa', 'Melissa',\\n    'Mellie', 'Melody', 'Melvin', 'Melvina', 'Melyna', 'Melyssa', 'Mercedes',\\n    'Meredith', 'Merl', 'Merle', 'Merlin', 'Merritt', 'Mertie', 'Mervin',\\n    'Meta', 'Mia', 'Micaela', 'Micah', 'Michael', 'Michaela', 'Michale',\\n    'Micheal', 'Michel', 'Michele', 'Michelle', 'Miguel', 'Mikayla', 'Mike',\\n    'Mikel', 'Milan', 'Miles', 'Milford', 'Miller', 'Millie', 'Milo', 'Milton',\\n    'Mina', 'Minerva', 'Minnie', 'Miracle', 'Mireille', 'Mireya', 'Misael',\\n    'Missouri', 'Misty', 'Mitchel', 'Mitchell', 'Mittie', 'Modesta', 'Modesto',\\n    'Mohamed', 'Mohammad', 'Mohammed', 'Moises', 'Mollie', 'Molly', 'Mona',\\n    'Monica', 'Monique', 'Monroe', 'Monserrat', 'Monserrate', 'Montana',\\n    'Monte', 'Monty', 'Morgan', 'Moriah', 'Morris', 'Mortimer', 'Morton',\\n    'Mose', 'Moses', 'Moshe', 'Mossie', 'Mozell', 'Mozelle', 'Muhammad',\\n    'Muriel', 'Murl', 'Murphy', 'Murray', 'Mustafa', 'Mya', 'Myah', 'Mylene',\\n    'Myles', 'Myra', 'Myriam', 'Myrl', 'Myrna', 'Myron', 'Myrtice', 'Myrtie',\\n    'Myrtis', 'Myrtle', 'Nadia', 'Nakia', 'Name', 'Nannie', 'Naomi', 'Naomie',\\n    'Napoleon', 'Narciso', 'Nash', 'Nasir', 'Nat', 'Natalia', 'Natalie',\\n    'Natasha', 'Nathan', 'Nathanael', 'Nathanial', 'Nathaniel', 'Nathen',\\n    'Nayeli', 'Neal', 'Ned', 'Nedra', 'Neha', 'Neil', 'Nelda', 'Nella', 'Nelle',\\n    'Nellie', 'Nels', 'Nelson', 'Neoma', 'Nestor', 'Nettie', 'Neva', 'Newell',\\n    'Newton', 'Nia', 'Nicholas', 'Nicholaus', 'Nichole', 'Nick', 'Nicklaus',\\n    'Nickolas', 'Nico', 'Nicola', 'Nicolas', 'Nicole', 'Nicolette', 'Nigel',\\n    'Nikita', 'Nikki', 'Nikko', 'Niko', 'Nikolas', 'Nils', 'Nina', 'Noah',\\n    'Noble', 'Noe', 'Noel', 'Noelia', 'Noemi', 'Noemie', 'Noemy', 'Nola',\\n    'Nolan', 'Nona', 'Nora', 'Norbert', 'Norberto', 'Norene', 'Norma', 'Norris',\\n    'Norval', 'Norwood', 'Nova', 'Novella', 'Nya', 'Nyah', 'Nyasia', 'Obie',\\n    'Oceane', 'Ocie', 'Octavia', 'Oda', 'Odell', 'Odessa', 'Odie', 'Ofelia',\\n    'Okey', 'Ola', 'Olaf', 'Ole', 'Olen', 'Oleta', 'Olga', 'Olin', 'Oliver',\\n    'Ollie', 'Oma', 'Omari', 'Omer', 'Ona', 'Onie', 'Opal', 'Ophelia', 'Ora',\\n    'Oral', 'Oran', 'Oren', 'Orie', 'Orin', 'Orion', 'Orland', 'Orlando',\\n    'Orlo', 'Orpha', 'Orrin', 'Orval', 'Orville', 'Osbaldo', 'Osborne', 'Oscar',\\n    'Osvaldo', 'Oswald', 'Oswaldo', 'Otha', 'Otho', 'Otilia', 'Otis', 'Ottilie',\\n    'Ottis', 'Otto', 'Ova', 'Owen', 'Ozella', 'Pablo', 'Paige', 'Palma',\\n    'Pamela', 'Pansy', 'Paolo', 'Paris', 'Parker', 'Pascale', 'Pasquale', 'Pat',\\n    'Patience', 'Patricia', 'Patrick', 'Patsy', 'Pattie', 'Paul', 'Paula',\\n    'Pauline', 'Paxton', 'Payton', 'Pearl', 'Pearlie', 'Pearline', 'Pedro',\\n    'Peggie', 'Penelope', 'Percival', 'Percy', 'Perry', 'Pete', 'Peter',\\n    'Petra', 'Peyton', 'Philip', 'Phoebe', 'Phyllis', 'Pierce', 'Pierre',\\n    'Pietro', 'Pink', 'Pinkie', 'Piper', 'Polly', 'Porter', 'Precious',\\n    'Presley', 'Preston', 'Price', 'Prince', 'Princess', 'Priscilla',\\n    'Providenci', 'Prudence', 'Queen', 'Queenie', 'Quentin', 'Quincy', 'Quinn',\\n    'Quinten', 'Quinton', 'Rachael', 'Rachel', 'Rachelle', 'Rae', 'Raegan',\\n    'Rafael', 'Rafaela', 'Raheem', 'Rahsaan', 'Rahul', 'Raina', 'Raleigh',\\n    'Ralph', 'Ramiro', 'Ramon', 'Ramona', 'Randal', 'Randall', 'Randi', 'Randy',\\n    'Ransom', 'Raoul', 'Raphael', 'Raphaelle', 'Raquel', 'Rashad', 'Rashawn',\\n    'Rasheed', 'Raul', 'Raven', 'Ray', 'Raymond', 'Raymundo', 'Reagan',\\n    'Reanna', 'Reba', 'Rebeca', 'Rebecca', 'Rebeka', 'Rebekah', 'Reece', 'Reed',\\n    'Reese', 'Regan', 'Reggie', 'Reginald', 'Reid', 'Reilly', 'Reina',\\n    'Reinhold', 'Remington', 'Rene', 'Renee', 'Ressie', 'Reta', 'Retha',\\n    'Retta', 'Reuben', 'Reva', 'Rex', 'Rey', 'Reyes', 'Reymundo', 'Reyna',\\n    'Reynold', 'Rhea', 'Rhett', 'Rhianna', 'Rhiannon', 'Rhoda', 'Ricardo',\\n    'Richard', 'Richie', 'Richmond', 'Rick', 'Rickey', 'Rickie', 'Ricky',\\n    'Rico', 'Rigoberto', 'Riley', 'Rita', 'River', 'Robb', 'Robbie', 'Robert',\\n    'Roberta', 'Roberto', 'Robin', 'Robyn', 'Rocio', 'Rocky', 'Rod', 'Roderick',\\n    'Rodger', 'Rodolfo', 'Rodrick', 'Rodrigo', 'Roel', 'Rogelio', 'Roger',\\n    'Rogers', 'Rolando', 'Rollin', 'Roma', 'Romaine', 'Roman', 'Ron', 'Ronaldo',\\n    'Ronny', 'Roosevelt', 'Rory', 'Rosa', 'Rosalee', 'Rosalia', 'Rosalind',\\n    'Rosalinda', 'Rosalyn', 'Rosamond', 'Rosanna', 'Rosario', 'Roscoe', 'Rose',\\n    'Rosella', 'Roselyn', 'Rosemarie', 'Rosemary', 'Rosendo', 'Rosetta',\\n    'Rosie', 'Rosina', 'Roslyn', 'Ross', 'Rossie', 'Rowan', 'Rowena', 'Rowland',\\n    'Roxane', 'Roxanne', 'Roy', 'Royal', 'Royce', 'Rozella', 'Ruben', 'Rubie',\\n    'Ruby', 'Rubye', 'Rudolph', 'Rudy', 'Rupert', 'Russ', 'Russel', 'Russell',\\n    'Rusty', 'Ruth', 'Ruthe', 'Ruthie', 'Ryan', 'Ryann', 'Ryder', 'Rylan',\\n    'Rylee', 'Ryleigh', 'Ryley', 'Sabina', 'Sabrina', 'Sabryna', 'Sadie',\\n    'Sadye', 'Sage', 'Saige', 'Sallie', 'Sally', 'Salma', 'Salvador',\\n    'Salvatore', 'Sam', 'Samanta', 'Samantha', 'Samara', 'Samir', 'Sammie',\\n    'Sammy', 'Samson', 'Sandra', 'Sandrine', 'Sandy', 'Sanford', 'Santa',\\n    'Santiago', 'Santina', 'Santino', 'Santos', 'Sarah', 'Sarai', 'Sarina',\\n    'Sasha', 'Saul', 'Savanah', 'Savanna', 'Savannah', 'Savion', 'Scarlett',\\n    'Schuyler', 'Scot', 'Scottie', 'Scotty', 'Seamus', 'Sean', 'Sebastian',\\n    'Sedrick', 'Selena', 'Selina', 'Selmer', 'Serena', 'Serenity', 'Seth',\\n    'Shad', 'Shaina', 'Shakira', 'Shana', 'Shane', 'Shanel', 'Shanelle',\\n    'Shania', 'Shanie', 'Shaniya', 'Shanna', 'Shannon', 'Shanny', 'Shanon',\\n    'Shany', 'Sharon', 'Shaun', 'Shawn', 'Shawna', 'Shaylee', 'Shayna',\\n    'Shayne', 'Shea', 'Sheila', 'Sheldon', 'Shemar', 'Sheridan', 'Sherman',\\n    'Sherwood', 'Shirley', 'Shyann', 'Shyanne', 'Sibyl', 'Sid', 'Sidney',\\n    'Sienna', 'Sierra', 'Sigmund', 'Sigrid', 'Sigurd', 'Silas', 'Sim', 'Simeon',\\n    'Simone', 'Sincere', 'Sister', 'Skye', 'Skyla', 'Skylar', 'Sofia',\\n    'Soledad', 'Solon', 'Sonia', 'Sonny', 'Sonya', 'Sophia', 'Sophie',\\n    'Spencer', 'Stacey', 'Stacy', 'Stan', 'Stanford', 'Stanley', 'Stanton',\\n    'Stefan', 'Stefanie', 'Stella', 'Stephan', 'Stephania', 'Stephanie',\\n    'Stephany', 'Stephen', 'Stephon', 'Sterling', 'Steve', 'Stevie', 'Stewart',\\n    'Stone', 'Stuart', 'Summer', 'Sunny', 'Susan', 'Susana', 'Susanna', 'Susie',\\n    'Suzanne', 'Sven', 'Syble', 'Sydnee', 'Sydney', 'Sydni', 'Sydnie', 'Sylvan',\\n    'Sylvester', 'Sylvia', 'Tabitha', 'Tad', 'Talia', 'Talon', 'Tamara',\\n    'Tamia', 'Tania', 'Tanner', 'Tanya', 'Tara', 'Taryn', 'Tate', 'Tatum',\\n    'Tatyana', 'Taurean', 'Tavares', 'Taya', 'Taylor', 'Teagan', 'Ted', 'Telly',\\n    'Terence', 'Teresa', 'Terrance', 'Terrell', 'Terrence', 'Terrill', 'Terry',\\n    'Tess', 'Tessie', 'Tevin', 'Thad', 'Thaddeus', 'Thalia', 'Thea', 'Thelma',\\n    'Theo', 'Theodora', 'Theodore', 'Theresa', 'Therese', 'Theresia', 'Theron',\\n    'Thomas', 'Thora', 'Thurman', 'Tia', 'Tiana', 'Tianna', 'Tiara', 'Tierra',\\n    'Tiffany', 'Tillman', 'Timmothy', 'Timmy', 'Timothy', 'Tina', 'Tito',\\n    'Titus', 'Tobin', 'Toby', 'Tod', 'Tom', 'Tomas', 'Tomasa', 'Tommie',\\n    'Toney', 'Toni', 'Tony', 'Torey', 'Torrance', 'Torrey', 'Toy', 'Trace',\\n    'Tracey', 'Tracy', 'Travis', 'Travon', 'Tre', 'Tremaine', 'Tremayne',\\n    'Trent', 'Trenton', 'Tressa', 'Tressie', 'Treva', 'Trever', 'Trevion',\\n    'Trevor', 'Trey', 'Trinity', 'Trisha', 'Tristian', 'Tristin', 'Triston',\\n    'Troy', 'Trudie', 'Trycia', 'Trystan', 'Turner', 'Twila', 'Tyler', 'Tyra',\\n    'Tyree', 'Tyreek', 'Tyrel', 'Tyrell', 'Tyrese', 'Tyrique', 'Tyshawn',\\n    'Tyson', 'Ubaldo', 'Ulices', 'Ulises', 'Una', 'Unique', 'Urban', 'Uriah',\\n    'Uriel', 'Ursula', 'Vada', 'Valentin', 'Valentina', 'Valentine', 'Valerie',\\n    'Vallie', 'Van', 'Vance', 'Vanessa', 'Vaughn', 'Veda', 'Velda', 'Vella',\\n    'Velma', 'Velva', 'Vena', 'Verda', 'Verdie', 'Vergie', 'Verla', 'Verlie',\\n    'Vern', 'Verna', 'Verner', 'Vernice', 'Vernie', 'Vernon', 'Verona',\\n    'Veronica', 'Vesta', 'Vicenta', 'Vicente', 'Vickie', 'Vicky', 'Victor',\\n    'Victoria', 'Vida', 'Vidal', 'Vilma', 'Vince', 'Vincent', 'Vincenza',\\n    'Vincenzo', 'Vinnie', 'Viola', 'Violet', 'Violette', 'Virgie', 'Virgil',\\n    'Virginia', 'Virginie', 'Vita', 'Vito', 'Viva', 'Vivian', 'Viviane',\\n    'Vivianne', 'Vivien', 'Vivienne', 'Vladimir', 'Wade', 'Waino', 'Waldo',\\n    'Walker', 'Wallace', 'Walter', 'Walton', 'Wanda', 'Ward', 'Warren',\\n    'Watson', 'Wava', 'Waylon', 'Wayne', 'Webster', 'Weldon', 'Wellington',\\n    'Wendell', 'Wendy', 'Werner', 'Westley', 'Weston', 'Whitney', 'Wilber',\\n    'Wilbert', 'Wilburn', 'Wiley', 'Wilford', 'Wilfred', 'Wilfredo', 'Wilfrid',\\n    'Wilhelm', 'Wilhelmine', 'Will', 'Willa', 'Willard', 'William', 'Willie',\\n    'Willis', 'Willow', 'Willy', 'Wilma', 'Wilmer', 'Wilson', 'Wilton',\\n    'Winfield', 'Winifred', 'Winnifred', 'Winona', 'Winston', 'Woodrow',\\n    'Wyatt', 'Wyman', 'Xander', 'Xavier', 'Xzavier', 'Yadira', 'Yasmeen',\\n    'Yasmin', 'Yasmine', 'Yazmin', 'Yesenia', 'Yessenia', 'Yolanda', 'Yoshiko',\\n    'Yvette', 'Yvonne', 'Zachariah', 'Zachary', 'Zachery', 'Zack', 'Zackary',\\n    'Zackery', 'Zakary', 'Zander', 'Zane', 'Zaria', 'Zechariah', 'Zelda',\\n    'Zella', 'Zelma', 'Zena', 'Zetta', 'Zion', 'Zita', 'Zoe', 'Zoey', 'Zoie',\\n    'Zoila', 'Zola', 'Zora', 'Zula'\\n];\\n\\n/**\\n * Generate random username.\\n * @returns {string} random username\\n */\\nfunction generateUsername() {\\n    const name = RandomUtil.randomElement(names);\\n    const suffix = RandomUtil.randomAlphanumStr(3);\\n\\n    return `${name}-${suffix}`;\\n}\\n\\nmodule.exports = {\\n    generateUsername\\n};\\n\",\"import browser from '../browser';\\nimport { browsers } from 'js-utils';\\n\\nimport * as StatisticsEvents from '../../service/statistics/Events';\\nimport * as MediaType from '../../service/RTC/MediaType';\\n\\nconst GlobalOnErrorHandler = require('../util/GlobalOnErrorHandler');\\nconst logger = require('jitsi-meet-logger').getLogger(__filename);\\n\\n/**\\n * The lib-jitsi-meet browser-agnostic names of the browser-specific keys\\n * reported by RTCPeerConnection#getStats mapped by browser.\\n */\\nconst KEYS_BY_BROWSER_TYPE = {};\\n\\nKEYS_BY_BROWSER_TYPE[browsers.FIREFOX] = {\\n    'ssrc': 'ssrc',\\n    'packetsReceived': 'packetsReceived',\\n    'packetsLost': 'packetsLost',\\n    'packetsSent': 'packetsSent',\\n    'bytesReceived': 'bytesReceived',\\n    'bytesSent': 'bytesSent',\\n    'framerateMean': 'framerateMean',\\n    'ip': 'ipAddress',\\n    'port': 'portNumber',\\n    'protocol': 'transport'\\n};\\nKEYS_BY_BROWSER_TYPE[browsers.CHROME] = {\\n    'receiveBandwidth': 'googAvailableReceiveBandwidth',\\n    'sendBandwidth': 'googAvailableSendBandwidth',\\n    'remoteAddress': 'googRemoteAddress',\\n    'transportType': 'googTransportType',\\n    'localAddress': 'googLocalAddress',\\n    'activeConnection': 'googActiveConnection',\\n    'ssrc': 'ssrc',\\n    'packetsReceived': 'packetsReceived',\\n    'packetsSent': 'packetsSent',\\n    'packetsLost': 'packetsLost',\\n    'bytesReceived': 'bytesReceived',\\n    'bytesSent': 'bytesSent',\\n    'googFrameHeightReceived': 'googFrameHeightReceived',\\n    'googFrameWidthReceived': 'googFrameWidthReceived',\\n    'googFrameHeightSent': 'googFrameHeightSent',\\n    'googFrameWidthSent': 'googFrameWidthSent',\\n    'googFrameRateReceived': 'googFrameRateReceived',\\n    'googFrameRateSent': 'googFrameRateSent',\\n    'audioInputLevel': 'audioInputLevel',\\n    'audioOutputLevel': 'audioOutputLevel',\\n    'currentRoundTripTime': 'googRtt',\\n    'remoteCandidateType': 'googRemoteCandidateType',\\n    'localCandidateType': 'googLocalCandidateType',\\n    'ip': 'ip',\\n    'port': 'port',\\n    'protocol': 'protocol'\\n};\\nKEYS_BY_BROWSER_TYPE[browsers.EDGE] = {\\n    'sendBandwidth': 'googAvailableSendBandwidth',\\n    'remoteAddress': 'remoteAddress',\\n    'transportType': 'protocol',\\n    'localAddress': 'localAddress',\\n    'activeConnection': 'activeConnection',\\n    'ssrc': 'ssrc',\\n    'packetsReceived': 'packetsReceived',\\n    'packetsSent': 'packetsSent',\\n    'packetsLost': 'packetsLost',\\n    'bytesReceived': 'bytesReceived',\\n    'bytesSent': 'bytesSent',\\n    'googFrameHeightReceived': 'frameHeight',\\n    'googFrameWidthReceived': 'frameWidth',\\n    'googFrameHeightSent': 'frameHeight',\\n    'googFrameWidthSent': 'frameWidth',\\n    'googFrameRateReceived': 'framesPerSecond',\\n    'googFrameRateSent': 'framesPerSecond',\\n    'audioInputLevel': 'audioLevel',\\n    'audioOutputLevel': 'audioLevel',\\n    'currentRoundTripTime': 'roundTripTime'\\n};\\nKEYS_BY_BROWSER_TYPE[browsers.OPERA]\\n    = KEYS_BY_BROWSER_TYPE[browsers.CHROME];\\nKEYS_BY_BROWSER_TYPE[browsers.NWJS]\\n    = KEYS_BY_BROWSER_TYPE[browsers.CHROME];\\nKEYS_BY_BROWSER_TYPE[browsers.ELECTRON]\\n    = KEYS_BY_BROWSER_TYPE[browsers.CHROME];\\nKEYS_BY_BROWSER_TYPE[browsers.SAFARI]\\n    = KEYS_BY_BROWSER_TYPE[browsers.CHROME];\\nKEYS_BY_BROWSER_TYPE[browsers.REACT_NATIVE]\\n    = KEYS_BY_BROWSER_TYPE[browsers.CHROME];\\n\\n/**\\n * Calculates packet lost percent using the number of lost packets and the\\n * number of all packet.\\n * @param lostPackets the number of lost packets\\n * @param totalPackets the number of all packets.\\n * @returns {number} packet loss percent\\n */\\nfunction calculatePacketLoss(lostPackets, totalPackets) {\\n    if (!totalPackets || totalPackets <= 0\\n            || !lostPackets || lostPackets <= 0) {\\n        return 0;\\n    }\\n\\n    return Math.round((lostPackets / totalPackets) * 100);\\n}\\n\\n/**\\n * Holds \\\"statistics\\\" for a single SSRC.\\n * @constructor\\n */\\nfunction SsrcStats() {\\n    this.loss = {};\\n    this.bitrate = {\\n        download: 0,\\n        upload: 0\\n    };\\n    this.resolution = {};\\n    this.framerate = 0;\\n}\\n\\n/**\\n * Sets the \\\"loss\\\" object.\\n * @param loss the value to set.\\n */\\nSsrcStats.prototype.setLoss = function(loss) {\\n    this.loss = loss || {};\\n};\\n\\n/**\\n * Sets resolution that belong to the ssrc represented by this instance.\\n * @param resolution new resolution value to be set.\\n */\\nSsrcStats.prototype.setResolution = function(resolution) {\\n    this.resolution = resolution || {};\\n};\\n\\n/**\\n * Adds the \\\"download\\\" and \\\"upload\\\" fields from the \\\"bitrate\\\" parameter to\\n * the respective fields of the \\\"bitrate\\\" field of this object.\\n * @param bitrate an object holding the values to add.\\n */\\nSsrcStats.prototype.addBitrate = function(bitrate) {\\n    this.bitrate.download += bitrate.download;\\n    this.bitrate.upload += bitrate.upload;\\n};\\n\\n/**\\n * Resets the bit rate for given <tt>ssrc</tt> that belong to the peer\\n * represented by this instance.\\n */\\nSsrcStats.prototype.resetBitrate = function() {\\n    this.bitrate.download = 0;\\n    this.bitrate.upload = 0;\\n};\\n\\n/**\\n * Sets the \\\"framerate\\\".\\n * @param framerate the value to set.\\n */\\nSsrcStats.prototype.setFramerate = function(framerate) {\\n    this.framerate = framerate || 0;\\n};\\n\\n/**\\n *\\n */\\nfunction ConferenceStats() {\\n\\n    /**\\n     * The bandwidth\\n     * @type {{}}\\n     */\\n    this.bandwidth = {};\\n\\n    /**\\n     * The bit rate\\n     * @type {{}}\\n     */\\n    this.bitrate = {};\\n\\n    /**\\n     * The packet loss rate\\n     * @type {{}}\\n     */\\n    this.packetLoss = null;\\n\\n    /**\\n     * Array with the transport information.\\n     * @type {Array}\\n     */\\n    this.transport = [];\\n}\\n\\n/* eslint-disable max-params */\\n\\n/**\\n * <tt>StatsCollector</tt> registers for stats updates of given\\n * <tt>peerconnection</tt> in given <tt>interval</tt>. On each update particular\\n * stats are extracted and put in {@link SsrcStats} objects. Once the processing\\n * is done <tt>audioLevelsUpdateCallback</tt> is called with <tt>this</tt>\\n * instance as an event source.\\n *\\n * @param peerconnection WebRTC PeerConnection object.\\n * @param audioLevelsInterval\\n * @param statsInterval stats refresh interval given in ms.\\n * @param eventEmitter\\n * @constructor\\n */\\nexport default function StatsCollector(\\n        peerconnection,\\n        audioLevelsInterval,\\n        statsInterval,\\n        eventEmitter) {\\n    // StatsCollector depends entirely on the format of the reports returned by\\n    // RTCPeerConnection#getStats. Given that the value of\\n    // browser#getName() is very unlikely to change at runtime, it\\n    // makes sense to discover whether StatsCollector supports the executing\\n    // browser as soon as possible. Otherwise, (1) getStatValue would have to\\n    // needlessly check a \\\"static\\\" condition multiple times very very often and\\n    // (2) the lack of support for the executing browser would be discovered and\\n    // reported multiple times very very often too late in the execution in some\\n    // totally unrelated callback.\\n    /**\\n     * The browser type supported by this StatsCollector. In other words, the\\n     * type of the browser which initialized this StatsCollector\\n     * instance.\\n     * @private\\n     */\\n    this._browserType = browser.getName();\\n    const keys = KEYS_BY_BROWSER_TYPE[this._browserType];\\n\\n    if (!keys) {\\n        // eslint-disable-next-line no-throw-literal\\n        throw `The browser type '${this._browserType}' isn't supported!`;\\n    }\\n\\n    /**\\n     * Whether to use the Promise-based getStats API or not.\\n     * @type {boolean}\\n     */\\n    this._usesPromiseGetStats\\n        = browser.isSafariWithWebrtc() || browser.isFirefox();\\n\\n    /**\\n     * The function which is to be used to retrieve the value associated in a\\n     * report returned by RTCPeerConnection#getStats with a lib-jitsi-meet\\n     * browser-agnostic name/key.\\n     *\\n     * @function\\n     * @private\\n     */\\n    this._getStatValue\\n        = this._usesPromiseGetStats\\n            ? this._defineNewGetStatValueMethod(keys)\\n            : this._defineGetStatValueMethod(keys);\\n\\n    this.peerconnection = peerconnection;\\n    this.baselineAudioLevelsReport = null;\\n    this.currentAudioLevelsReport = null;\\n    this.currentStatsReport = null;\\n    this.previousStatsReport = null;\\n    this.audioLevelsIntervalId = null;\\n    this.eventEmitter = eventEmitter;\\n    this.conferenceStats = new ConferenceStats();\\n\\n    // Updates stats interval\\n    this.audioLevelsIntervalMilis = audioLevelsInterval;\\n\\n    this.statsIntervalId = null;\\n    this.statsIntervalMilis = statsInterval;\\n\\n    /**\\n     * Maps SSRC numbers to {@link SsrcStats}.\\n     * @type {Map<number,SsrcStats}\\n     */\\n    this.ssrc2stats = new Map();\\n}\\n\\n/* eslint-enable max-params */\\n\\n/**\\n * Stops stats updates.\\n */\\nStatsCollector.prototype.stop = function() {\\n    if (this.audioLevelsIntervalId) {\\n        clearInterval(this.audioLevelsIntervalId);\\n        this.audioLevelsIntervalId = null;\\n    }\\n\\n    if (this.statsIntervalId) {\\n        clearInterval(this.statsIntervalId);\\n        this.statsIntervalId = null;\\n    }\\n};\\n\\n/**\\n * Callback passed to <tt>getStats</tt> method.\\n * @param error an error that occurred on <tt>getStats</tt> call.\\n */\\nStatsCollector.prototype.errorCallback = function(error) {\\n    GlobalOnErrorHandler.callErrorHandler(error);\\n    logger.error('Get stats error', error);\\n    this.stop();\\n};\\n\\n/**\\n * Starts stats updates.\\n */\\nStatsCollector.prototype.start = function(startAudioLevelStats) {\\n    const self = this;\\n\\n    if (startAudioLevelStats) {\\n        this.audioLevelsIntervalId = setInterval(\\n            () => {\\n                // Interval updates\\n                self.peerconnection.getStats(\\n                    report => {\\n                        let results = null;\\n\\n                        if (!report || !report.result\\n                            || typeof report.result !== 'function') {\\n                            results = report;\\n                        } else {\\n                            results = report.result();\\n                        }\\n                        self.currentAudioLevelsReport = results;\\n                        if (this._usesPromiseGetStats) {\\n                            self.processNewAudioLevelReport();\\n                        } else {\\n                            self.processAudioLevelReport();\\n                        }\\n\\n                        self.baselineAudioLevelsReport\\n                            = self.currentAudioLevelsReport;\\n                    },\\n                    error => self.errorCallback(error)\\n                );\\n            },\\n            self.audioLevelsIntervalMilis\\n        );\\n    }\\n\\n    if (browser.supportsRtpStatistics()) {\\n        this.statsIntervalId = setInterval(\\n            () => {\\n                // Interval updates\\n                self.peerconnection.getStats(\\n                    report => {\\n                        let results = null;\\n\\n                        if (!report || !report.result\\n                            || typeof report.result !== 'function') {\\n                            // firefox\\n                            results = report;\\n                        } else {\\n                            // chrome\\n                            results = report.result();\\n                        }\\n\\n                        self.currentStatsReport = results;\\n                        try {\\n                            if (this._usesPromiseGetStats) {\\n                                self.processNewStatsReport();\\n                            } else {\\n                                self.processStatsReport();\\n                            }\\n                        } catch (e) {\\n                            GlobalOnErrorHandler.callErrorHandler(e);\\n                            logger.error(`Unsupported key:${e}`, e);\\n                        }\\n\\n                        self.previousStatsReport = self.currentStatsReport;\\n                    },\\n                    error => self.errorCallback(error)\\n                );\\n            },\\n            self.statsIntervalMilis\\n        );\\n    }\\n};\\n\\n/**\\n * Defines a function which (1) is to be used as a StatsCollector method and (2)\\n * gets the value from a specific report returned by RTCPeerConnection#getStats\\n * associated with a lib-jitsi-meet browser-agnostic name.\\n *\\n * @param {Object.<string,string>} keys the map of LibJitsi browser-agnostic\\n * names to RTCPeerConnection#getStats browser-specific keys\\n */\\nStatsCollector.prototype._defineGetStatValueMethod = function(keys) {\\n    // Define the function which converts a lib-jitsi-meet browser-asnostic name\\n    // to a browser-specific key of a report returned by\\n    // RTCPeerConnection#getStats.\\n    const keyFromName = function(name) {\\n        const key = keys[name];\\n\\n        if (key) {\\n            return key;\\n        }\\n\\n        // eslint-disable-next-line no-throw-literal\\n        throw `The property '${name}' isn't supported!`;\\n    };\\n\\n    // Define the function which retrieves the value from a specific report\\n    // returned by RTCPeerConnection#getStats associated with a given\\n    // browser-specific key.\\n    let itemStatByKey;\\n\\n    switch (this._browserType) {\\n    case browsers.CHROME:\\n    case browsers.OPERA:\\n    case browsers.NWJS:\\n    case browsers.ELECTRON:\\n        // TODO What about other types of browser which are based on Chrome such\\n        // as NW.js? Every time we want to support a new type browser we have to\\n        // go and add more conditions (here and in multiple other places).\\n        // Cannot we do a feature detection instead of a browser type check? For\\n        // example, if item has a stat property of type function, then it's very\\n        // likely that whoever defined it wanted you to call it in order to\\n        // retrieve the value associated with a specific key.\\n        itemStatByKey = (item, key) => item.stat(key);\\n        break;\\n    case browsers.REACT_NATIVE:\\n        // The implementation provided by react-native-webrtc follows the\\n        // Objective-C WebRTC API: RTCStatsReport has a values property of type\\n        // Array in which each element is a key-value pair.\\n        itemStatByKey = function(item, key) {\\n            let value;\\n\\n            item.values.some(pair => {\\n                if (pair.hasOwnProperty(key)) {\\n                    value = pair[key];\\n\\n                    return true;\\n                }\\n\\n                return false;\\n\\n            });\\n\\n            return value;\\n        };\\n        break;\\n    case browsers.EDGE:\\n        itemStatByKey = (item, key) => item[key];\\n        break;\\n    default:\\n        itemStatByKey = (item, key) => item[key];\\n    }\\n\\n    // Compose the 2 functions defined above to get a function which retrieves\\n    // the value from a specific report returned by RTCPeerConnection#getStats\\n    // associated with a specific lib-jitsi-meet browser-agnostic name.\\n    return (item, name) => itemStatByKey(item, keyFromName(name));\\n};\\n\\n/**\\n * Obtains a stat value from given stat and converts it to a non-negative\\n * number. If the value is either invalid or negative then 0 will be returned.\\n * @param report\\n * @param {string} name\\n * @return {number}\\n * @private\\n */\\nStatsCollector.prototype.getNonNegativeStat = function(report, name) {\\n    let value = this._getStatValue(report, name);\\n\\n    if (typeof value !== 'number') {\\n        value = Number(value);\\n    }\\n\\n    if (isNaN(value)) {\\n        return 0;\\n    }\\n\\n    return Math.max(0, value);\\n};\\n\\n/* eslint-disable no-continue */\\n\\n/**\\n * Stats processing logic.\\n */\\nStatsCollector.prototype.processStatsReport = function() {\\n    if (!this.previousStatsReport) {\\n        return;\\n    }\\n\\n    const getStatValue = this._getStatValue;\\n    const byteSentStats = {};\\n\\n    for (const idx in this.currentStatsReport) {\\n        if (!this.currentStatsReport.hasOwnProperty(idx)) {\\n            continue;\\n        }\\n        const now = this.currentStatsReport[idx];\\n\\n        // The browser API may return \\\"undefined\\\" values in the array\\n        if (!now) {\\n            continue;\\n        }\\n\\n        try {\\n            const receiveBandwidth = getStatValue(now, 'receiveBandwidth');\\n            const sendBandwidth = getStatValue(now, 'sendBandwidth');\\n\\n            if (receiveBandwidth || sendBandwidth) {\\n                this.conferenceStats.bandwidth = {\\n                    'download': Math.round(receiveBandwidth / 1000),\\n                    'upload': Math.round(sendBandwidth / 1000)\\n                };\\n            }\\n        } catch (e) { /* not supported*/ }\\n\\n        if (now.type === 'googCandidatePair') {\\n            let active, ip, localCandidateType, localip,\\n                remoteCandidateType, rtt, type;\\n\\n            try {\\n                active = getStatValue(now, 'activeConnection');\\n                if (!active) {\\n                    continue;\\n                }\\n\\n                ip = getStatValue(now, 'remoteAddress');\\n                type = getStatValue(now, 'transportType');\\n                localip = getStatValue(now, 'localAddress');\\n                localCandidateType = getStatValue(now, 'localCandidateType');\\n                remoteCandidateType = getStatValue(now, 'remoteCandidateType');\\n                rtt = this.getNonNegativeStat(now, 'currentRoundTripTime');\\n            } catch (e) { /* not supported*/ }\\n            if (!ip || !type || !localip || active !== 'true') {\\n                continue;\\n            }\\n\\n            // Save the address unless it has been saved already.\\n            const conferenceStatsTransport = this.conferenceStats.transport;\\n\\n            if (!conferenceStatsTransport.some(\\n                    t =>\\n                        t.ip === ip\\n                            && t.type === type\\n                            && t.localip === localip)) {\\n                conferenceStatsTransport.push({\\n                    ip,\\n                    type,\\n                    localip,\\n                    p2p: this.peerconnection.isP2P,\\n                    localCandidateType,\\n                    remoteCandidateType,\\n                    rtt\\n                });\\n            }\\n            continue;\\n        }\\n\\n        if (now.type === 'candidatepair') {\\n            // we need succeeded and selected pairs only\\n            if (now.state !== 'succeeded' || !now.selected) {\\n                continue;\\n            }\\n\\n            const local = this.currentStatsReport[now.localCandidateId];\\n            const remote = this.currentStatsReport[now.remoteCandidateId];\\n\\n            this.conferenceStats.transport.push({\\n                ip: `${remote.ipAddress}:${remote.portNumber}`,\\n                type: local.transport,\\n                localip: `${local.ipAddress}:${local.portNumber}`,\\n                p2p: this.peerconnection.isP2P,\\n                localCandidateType: local.candidateType,\\n                remoteCandidateType: remote.candidateType\\n            });\\n        }\\n\\n        // NOTE: Edge's proprietary stats via RTCIceTransport.msGetStats().\\n        if (now.msType === 'transportdiagnostics') {\\n            this.conferenceStats.transport.push({\\n                ip: now.remoteAddress,\\n                type: now.protocol,\\n                localip: now.localAddress,\\n                p2p: this.peerconnection.isP2P\\n            });\\n        }\\n\\n        if (now.type !== 'ssrc' && now.type !== 'outboundrtp'\\n            && now.type !== 'inboundrtp' && now.type !== 'track') {\\n            continue;\\n        }\\n\\n        // NOTE: In Edge, stats with type \\\"inboundrtp\\\" and \\\"outboundrtp\\\" are\\n        // completely useless, so ignore them.\\n        if (browser.isEdge()\\n            && (now.type === 'inboundrtp' || now.type === 'outboundrtp')) {\\n            continue;\\n        }\\n\\n        const before = this.previousStatsReport[idx];\\n        let ssrc = this.getNonNegativeStat(now, 'ssrc');\\n\\n        // If type=\\\"track\\\", take the first SSRC from ssrcIds.\\n        if (now.type === 'track' && Array.isArray(now.ssrcIds)) {\\n            ssrc = Number(now.ssrcIds[0]);\\n        }\\n\\n        if (!before || !ssrc) {\\n            continue;\\n        }\\n\\n        // isRemote is available only in FF and is ignored in case of chrome\\n        // according to the spec\\n        // https://www.w3.org/TR/webrtc-stats/#dom-rtcrtpstreamstats-isremote\\n        // when isRemote is true indicates that the measurements were done at\\n        // the remote endpoint and reported in an RTCP RR/XR.\\n        // Fixes a problem where we are calculating local stats wrong adding\\n        // the sent bytes to the local download bitrate.\\n        // In new W3 stats spec, type=\\\"track\\\" has a remoteSource boolean\\n        // property.\\n        // Edge uses the new format, so skip this check.\\n        if (!browser.isEdge()\\n                && (now.isRemote === true || now.remoteSource === true)) {\\n            continue;\\n        }\\n\\n        let ssrcStats = this.ssrc2stats.get(ssrc);\\n\\n        if (!ssrcStats) {\\n            ssrcStats = new SsrcStats();\\n            this.ssrc2stats.set(ssrc, ssrcStats);\\n        }\\n\\n        let isDownloadStream = true;\\n        let key = 'packetsReceived';\\n        let packetsNow = getStatValue(now, key);\\n\\n        if (typeof packetsNow === 'undefined'\\n            || packetsNow === null || packetsNow === '') {\\n            isDownloadStream = false;\\n            key = 'packetsSent';\\n            packetsNow = getStatValue(now, key);\\n            if (typeof packetsNow === 'undefined' || packetsNow === null) {\\n                logger.warn('No packetsReceived nor packetsSent stat found');\\n            }\\n        }\\n        if (!packetsNow || packetsNow < 0) {\\n            packetsNow = 0;\\n        }\\n\\n        const packetsBefore = this.getNonNegativeStat(before, key);\\n        const packetsDiff = Math.max(0, packetsNow - packetsBefore);\\n\\n        const packetsLostNow\\n            = this.getNonNegativeStat(now, 'packetsLost');\\n        const packetsLostBefore\\n            = this.getNonNegativeStat(before, 'packetsLost');\\n        const packetsLostDiff = Math.max(0, packetsLostNow - packetsLostBefore);\\n\\n        ssrcStats.setLoss({\\n            packetsTotal: packetsDiff + packetsLostDiff,\\n            packetsLost: packetsLostDiff,\\n            isDownloadStream\\n        });\\n\\n        const bytesReceivedNow\\n            = this.getNonNegativeStat(now, 'bytesReceived');\\n        const bytesReceivedBefore\\n            = this.getNonNegativeStat(before, 'bytesReceived');\\n        const bytesReceived\\n            = Math.max(0, bytesReceivedNow - bytesReceivedBefore);\\n\\n        let bytesSent = 0;\\n\\n        // TODO: clean this mess up!\\n        let nowBytesTransmitted = getStatValue(now, 'bytesSent');\\n\\n        if (typeof nowBytesTransmitted === 'number'\\n            || typeof nowBytesTransmitted === 'string') {\\n            nowBytesTransmitted = Number(nowBytesTransmitted);\\n            if (!isNaN(nowBytesTransmitted)) {\\n                byteSentStats[ssrc] = nowBytesTransmitted;\\n                if (nowBytesTransmitted > 0) {\\n                    bytesSent = nowBytesTransmitted\\n                        - getStatValue(before, 'bytesSent');\\n                }\\n            }\\n        }\\n        bytesSent = Math.max(0, bytesSent);\\n\\n        const timeMs = now.timestamp - before.timestamp;\\n        let bitrateReceivedKbps = 0, bitrateSentKbps = 0;\\n\\n        if (timeMs > 0) {\\n            // TODO is there any reason to round here?\\n            bitrateReceivedKbps = Math.round((bytesReceived * 8) / timeMs);\\n            bitrateSentKbps = Math.round((bytesSent * 8) / timeMs);\\n        }\\n\\n        ssrcStats.addBitrate({\\n            'download': bitrateReceivedKbps,\\n            'upload': bitrateSentKbps\\n        });\\n\\n        const resolution = {\\n            height: null,\\n            width: null\\n        };\\n\\n        try {\\n            let height, width;\\n\\n            if ((height = getStatValue(now, 'googFrameHeightReceived'))\\n                && (width = getStatValue(now, 'googFrameWidthReceived'))) {\\n                resolution.height = height;\\n                resolution.width = width;\\n            } else if ((height = getStatValue(now, 'googFrameHeightSent'))\\n                && (width = getStatValue(now, 'googFrameWidthSent'))) {\\n                resolution.height = height;\\n                resolution.width = width;\\n            }\\n        } catch (e) { /* not supported*/ }\\n\\n        // Tries to get frame rate\\n        let frameRate;\\n\\n        try {\\n            frameRate = getStatValue(now, 'googFrameRateReceived')\\n                || getStatValue(now, 'googFrameRateSent') || 0;\\n        } catch (e) {\\n            // if it fails with previous properties(chrome),\\n            // let's try with another one (FF)\\n            try {\\n                frameRate = this.getNonNegativeStat(now, 'framerateMean');\\n            } catch (err) { /* not supported*/ }\\n        }\\n        ssrcStats.setFramerate(Math.round(frameRate || 0));\\n\\n        if (resolution.height && resolution.width) {\\n            ssrcStats.setResolution(resolution);\\n        } else {\\n            ssrcStats.setResolution(null);\\n        }\\n    }\\n\\n    this.eventEmitter.emit(\\n        StatisticsEvents.BYTE_SENT_STATS, this.peerconnection, byteSentStats);\\n\\n    this._processAndEmitReport();\\n};\\n\\n/**\\n *\\n */\\nStatsCollector.prototype._processAndEmitReport = function() {\\n    // process stats\\n    const totalPackets = {\\n        download: 0,\\n        upload: 0\\n    };\\n    const lostPackets = {\\n        download: 0,\\n        upload: 0\\n    };\\n    let bitrateDownload = 0;\\n    let bitrateUpload = 0;\\n    const resolutions = {};\\n    const framerates = {};\\n    let audioBitrateDownload = 0;\\n    let audioBitrateUpload = 0;\\n    let videoBitrateDownload = 0;\\n    let videoBitrateUpload = 0;\\n\\n    for (const [ ssrc, ssrcStats ] of this.ssrc2stats) {\\n        // process packet loss stats\\n        const loss = ssrcStats.loss;\\n        const type = loss.isDownloadStream ? 'download' : 'upload';\\n\\n        totalPackets[type] += loss.packetsTotal;\\n        lostPackets[type] += loss.packetsLost;\\n\\n        // process bitrate stats\\n        bitrateDownload += ssrcStats.bitrate.download;\\n        bitrateUpload += ssrcStats.bitrate.upload;\\n\\n        // collect resolutions and framerates\\n        const track = this.peerconnection.getTrackBySSRC(ssrc);\\n\\n        if (track) {\\n            if (track.isAudioTrack()) {\\n                audioBitrateDownload += ssrcStats.bitrate.download;\\n                audioBitrateUpload += ssrcStats.bitrate.upload;\\n            } else {\\n                videoBitrateDownload += ssrcStats.bitrate.download;\\n                videoBitrateUpload += ssrcStats.bitrate.upload;\\n            }\\n\\n            const participantId = track.getParticipantId();\\n\\n            if (participantId) {\\n                const resolution = ssrcStats.resolution;\\n\\n                if (resolution.width\\n                        && resolution.height\\n                        && resolution.width !== -1\\n                        && resolution.height !== -1) {\\n                    const userResolutions = resolutions[participantId] || {};\\n\\n                    userResolutions[ssrc] = resolution;\\n                    resolutions[participantId] = userResolutions;\\n                }\\n                if (ssrcStats.framerate !== 0) {\\n                    const userFramerates = framerates[participantId] || {};\\n\\n                    userFramerates[ssrc] = ssrcStats.framerate;\\n                    framerates[participantId] = userFramerates;\\n                }\\n            } else {\\n                logger.error(`No participant ID returned by ${track}`);\\n            }\\n        } else if (this.peerconnection.isP2P) {\\n            // NOTE For JVB connection there are JVB tracks reported in\\n            // the stats, but they do not have corresponding JitsiRemoteTrack\\n            // instances stored in TPC. It is not trivial to figure out that\\n            // a SSRC belongs to JVB, so we print this error ony for the P2P\\n            // connection for the time being.\\n            //\\n            // Also there will be reports for tracks removed from the session,\\n            // for the users who have left the conference.\\n            logger.error(\\n                `JitsiTrack not found for SSRC ${ssrc}`\\n                    + ` in ${this.peerconnection}`);\\n        }\\n\\n        ssrcStats.resetBitrate();\\n    }\\n\\n    this.conferenceStats.bitrate = {\\n        'upload': bitrateUpload,\\n        'download': bitrateDownload\\n    };\\n\\n    this.conferenceStats.bitrate.audio = {\\n        'upload': audioBitrateUpload,\\n        'download': audioBitrateDownload\\n    };\\n\\n    this.conferenceStats.bitrate.video = {\\n        'upload': videoBitrateUpload,\\n        'download': videoBitrateDownload\\n    };\\n\\n    this.conferenceStats.packetLoss = {\\n        total:\\n            calculatePacketLoss(\\n                lostPackets.download + lostPackets.upload,\\n                totalPackets.download + totalPackets.upload),\\n        download:\\n            calculatePacketLoss(lostPackets.download, totalPackets.download),\\n        upload:\\n            calculatePacketLoss(lostPackets.upload, totalPackets.upload)\\n    };\\n\\n    this.eventEmitter.emit(\\n        StatisticsEvents.CONNECTION_STATS,\\n        this.peerconnection,\\n        {\\n            'bandwidth': this.conferenceStats.bandwidth,\\n            'bitrate': this.conferenceStats.bitrate,\\n            'packetLoss': this.conferenceStats.packetLoss,\\n            'resolution': resolutions,\\n            'framerate': framerates,\\n            'transport': this.conferenceStats.transport\\n        });\\n    this.conferenceStats.transport = [];\\n};\\n\\n/**\\n * Stats processing logic.\\n */\\nStatsCollector.prototype.processAudioLevelReport = function() {\\n    if (!this.baselineAudioLevelsReport) {\\n        return;\\n    }\\n\\n    const getStatValue = this._getStatValue;\\n\\n    for (const idx in this.currentAudioLevelsReport) {\\n        if (!this.currentAudioLevelsReport.hasOwnProperty(idx)) {\\n            continue;\\n        }\\n\\n        const now = this.currentAudioLevelsReport[idx];\\n\\n        if (now.type !== 'ssrc' && now.type !== 'track') {\\n            continue;\\n        }\\n\\n        const before = this.baselineAudioLevelsReport[idx];\\n        let ssrc = this.getNonNegativeStat(now, 'ssrc');\\n\\n        if (!ssrc && Array.isArray(now.ssrcIds)) {\\n            ssrc = Number(now.ssrcIds[0]);\\n        }\\n\\n        if (!before) {\\n            logger.warn(`${ssrc} not enough data`);\\n            continue;\\n        }\\n\\n        if (!ssrc) {\\n            if ((Date.now() - now.timestamp) < 3000) {\\n                logger.warn('No ssrc: ');\\n            }\\n            continue;\\n        }\\n\\n        // Audio level\\n        let audioLevel;\\n\\n        try {\\n            audioLevel\\n                = getStatValue(now, 'audioInputLevel')\\n                    || getStatValue(now, 'audioOutputLevel');\\n        } catch (e) { /* not supported*/\\n            logger.warn('Audio Levels are not available in the statistics.');\\n            clearInterval(this.audioLevelsIntervalId);\\n\\n            return;\\n        }\\n\\n        if (audioLevel) {\\n            let isLocal;\\n\\n            // If type=\\\"ssrc\\\" (legacy) check whether they are received packets.\\n            if (now.type === 'ssrc') {\\n                isLocal = !getStatValue(now, 'packetsReceived');\\n\\n            // If type=\\\"track\\\", check remoteSource boolean property.\\n            } else {\\n                isLocal = !now.remoteSource;\\n            }\\n\\n            // According to the W3C WebRTC Stats spec, audioLevel should be in\\n            // 0..1 range (0 == silence). However browsers don't behave that\\n            // way so we must convert it to 0..1.\\n            //\\n            // In Edge the range is -100..0 (-100 == silence) measured in dB,\\n            // so convert to linear. The levels are set to 0 for remote tracks,\\n            // so don't convert those, since 0 means \\\"the maximum\\\" in Edge.\\n            if (browser.isEdge()) {\\n                audioLevel = audioLevel < 0 ? Math.pow(10, audioLevel / 20) : 0;\\n\\n            // TODO: Can't find specs about what this value really is, but it\\n            // seems to vary between 0 and around 32k.\\n            } else {\\n                audioLevel = audioLevel / 32767;\\n            }\\n\\n            this.eventEmitter.emit(\\n                StatisticsEvents.AUDIO_LEVEL,\\n                this.peerconnection,\\n                ssrc,\\n                audioLevel,\\n                isLocal);\\n        }\\n    }\\n};\\n\\n/* eslint-enable no-continue */\\n\\n/**\\n * New promised based getStats report processing.\\n * Tested with chrome, firefox and safari. Not switching it on for chrome as\\n * frameRate stat is missing and calculating it using framesSent,\\n * gives values double the values seen in webrtc-internals.\\n * https://w3c.github.io/webrtc-stats/\\n */\\n\\n/**\\n * Defines a function which (1) is to be used as a StatsCollector method and (2)\\n * gets the value from a specific report returned by RTCPeerConnection#getStats\\n * associated with a lib-jitsi-meet browser-agnostic name in case of using\\n * Promised based getStats.\\n *\\n * @param {Object.<string,string>} keys the map of LibJitsi browser-agnostic\\n * names to RTCPeerConnection#getStats browser-specific keys\\n */\\nStatsCollector.prototype._defineNewGetStatValueMethod = function(keys) {\\n    // Define the function which converts a lib-jitsi-meet browser-asnostic name\\n    // to a browser-specific key of a report returned by\\n    // RTCPeerConnection#getStats.\\n    const keyFromName = function(name) {\\n        const key = keys[name];\\n\\n        if (key) {\\n            return key;\\n        }\\n\\n        // eslint-disable-next-line no-throw-literal\\n        throw `The property '${name}' isn't supported!`;\\n    };\\n\\n    // Compose the 2 functions defined above to get a function which retrieves\\n    // the value from a specific report returned by RTCPeerConnection#getStats\\n    // associated with a specific lib-jitsi-meet browser-agnostic name.\\n    return (item, name) => item[keyFromName(name)];\\n};\\n\\n/**\\n * Converts the value to a non-negative number.\\n * If the value is either invalid or negative then 0 will be returned.\\n * @param {*} v\\n * @return {number}\\n * @private\\n */\\nStatsCollector.prototype.getNonNegativeValue = function(v) {\\n    let value = v;\\n\\n    if (typeof value !== 'number') {\\n        value = Number(value);\\n    }\\n\\n    if (isNaN(value)) {\\n        return 0;\\n    }\\n\\n    return Math.max(0, value);\\n};\\n\\n/**\\n * Calculates bitrate between before and now using a supplied field name and its\\n * value in the stats.\\n * @param {RTCInboundRtpStreamStats|RTCSentRtpStreamStats} now the current stats\\n * @param {RTCInboundRtpStreamStats|RTCSentRtpStreamStats} before the\\n * previous stats.\\n * @param fieldName the field to use for calculations.\\n * @return {number} the calculated bitrate between now and before.\\n * @private\\n */\\nStatsCollector.prototype._calculateBitrate = function(now, before, fieldName) {\\n    const bytesNow = this.getNonNegativeValue(now[fieldName]);\\n    const bytesBefore = this.getNonNegativeValue(before[fieldName]);\\n    const bytesProcessed = Math.max(0, bytesNow - bytesBefore);\\n\\n    const timeMs = now.timestamp - before.timestamp;\\n    let bitrateKbps = 0;\\n\\n    if (timeMs > 0) {\\n        // TODO is there any reason to round here?\\n        bitrateKbps = Math.round((bytesProcessed * 8) / timeMs);\\n    }\\n\\n    return bitrateKbps;\\n};\\n\\n/**\\n * Stats processing new getStats logic.\\n */\\nStatsCollector.prototype.processNewStatsReport = function() {\\n    if (!this.previousStatsReport) {\\n        return;\\n    }\\n\\n    const getStatValue = this._getStatValue;\\n    const byteSentStats = {};\\n\\n    this.currentStatsReport.forEach(now => {\\n\\n        // RTCIceCandidatePairStats\\n        // https://w3c.github.io/webrtc-stats/#candidatepair-dict*\\n        if (now.type === 'candidate-pair'\\n            && now.nominated\\n            && now.state === 'succeeded') {\\n\\n            const availableIncomingBitrate = now.availableIncomingBitrate;\\n            const availableOutgoingBitrate = now.availableOutgoingBitrate;\\n\\n            if (availableIncomingBitrate || availableOutgoingBitrate) {\\n                this.conferenceStats.bandwidth = {\\n                    'download': Math.round(availableIncomingBitrate / 1000),\\n                    'upload': Math.round(availableOutgoingBitrate / 1000)\\n                };\\n            }\\n\\n            const remoteUsedCandidate\\n                = this.currentStatsReport.get(now.remoteCandidateId);\\n            const localUsedCandidate\\n                = this.currentStatsReport.get(now.localCandidateId);\\n\\n            // RTCIceCandidateStats\\n            // https://w3c.github.io/webrtc-stats/#icecandidate-dict*\\n            // safari currently does not provide ice candidates in stats\\n            if (remoteUsedCandidate && localUsedCandidate) {\\n                // FF uses non-standard ipAddress, portNumber, transport\\n                // instead of ip, port, protocol\\n                const remoteIpAddress = getStatValue(remoteUsedCandidate, 'ip');\\n                const remotePort = getStatValue(remoteUsedCandidate, 'port');\\n                const ip = `${remoteIpAddress}:${remotePort}`;\\n\\n                const localIpAddress = getStatValue(localUsedCandidate, 'ip');\\n                const localPort = getStatValue(localUsedCandidate, 'port');\\n\\n                const localIp = `${localIpAddress}:${localPort}`;\\n                const type = getStatValue(remoteUsedCandidate, 'protocol');\\n\\n                // Save the address unless it has been saved already.\\n                const conferenceStatsTransport = this.conferenceStats.transport;\\n\\n                if (!conferenceStatsTransport.some(\\n                        t =>\\n                            t.ip === ip\\n                            && t.type === type\\n                            && t.localip === localIp)) {\\n                    conferenceStatsTransport.push({\\n                        ip,\\n                        type,\\n                        localIp,\\n                        p2p: this.peerconnection.isP2P,\\n                        localCandidateType: localUsedCandidate.candidateType,\\n                        remoteCandidateType: remoteUsedCandidate.candidateType,\\n                        networkType: localUsedCandidate.networkType,\\n                        rtt: now.currentRoundTripTime * 1000\\n                    });\\n                }\\n            }\\n\\n        // RTCReceivedRtpStreamStats\\n        // https://w3c.github.io/webrtc-stats/#receivedrtpstats-dict*\\n        // RTCSentRtpStreamStats\\n        // https://w3c.github.io/webrtc-stats/#sentrtpstats-dict*\\n        } else if (now.type === 'inbound-rtp' || now.type === 'outbound-rtp') {\\n            const before = this.previousStatsReport.get(now.id);\\n            const ssrc = this.getNonNegativeValue(now.ssrc);\\n\\n            if (!before || !ssrc) {\\n                return;\\n            }\\n\\n            let ssrcStats = this.ssrc2stats.get(ssrc);\\n\\n            if (!ssrcStats) {\\n                ssrcStats = new SsrcStats();\\n                this.ssrc2stats.set(ssrc, ssrcStats);\\n            }\\n\\n            let isDownloadStream = true;\\n            let key = 'packetsReceived';\\n\\n            if (now.type === 'outbound-rtp') {\\n                isDownloadStream = false;\\n                key = 'packetsSent';\\n            }\\n\\n            let packetsNow = now[key];\\n\\n            if (!packetsNow || packetsNow < 0) {\\n                packetsNow = 0;\\n            }\\n\\n            const packetsBefore = this.getNonNegativeValue(before[key]);\\n            const packetsDiff = Math.max(0, packetsNow - packetsBefore);\\n\\n            const packetsLostNow\\n                = this.getNonNegativeValue(now.packetsLost);\\n            const packetsLostBefore\\n                = this.getNonNegativeValue(before.packetsLost);\\n            const packetsLostDiff\\n                = Math.max(0, packetsLostNow - packetsLostBefore);\\n\\n            ssrcStats.setLoss({\\n                packetsTotal: packetsDiff + packetsLostDiff,\\n                packetsLost: packetsLostDiff,\\n                isDownloadStream\\n            });\\n\\n            if (now.type === 'inbound-rtp') {\\n\\n                ssrcStats.addBitrate({\\n                    'download': this._calculateBitrate(\\n                                    now, before, 'bytesReceived'),\\n                    'upload': 0\\n                });\\n\\n                // RTCInboundRtpStreamStats\\n                // https://w3c.github.io/webrtc-stats/#inboundrtpstats-dict*\\n                // TODO: can we use framesDecoded for frame rate, available\\n                // in chrome\\n            } else {\\n                byteSentStats[ssrc] = this.getNonNegativeValue(now.bytesSent);\\n                ssrcStats.addBitrate({\\n                    'download': 0,\\n                    'upload': this._calculateBitrate(\\n                                now, before, 'bytesSent')\\n                });\\n\\n                // RTCOutboundRtpStreamStats\\n                // https://w3c.github.io/webrtc-stats/#outboundrtpstats-dict*\\n                // TODO: can we use framesEncoded for frame rate, available\\n                // in chrome\\n            }\\n\\n            // FF has framerateMean out of spec\\n            const framerateMean = now.framerateMean;\\n\\n            if (framerateMean) {\\n                ssrcStats.setFramerate(Math.round(framerateMean || 0));\\n            }\\n\\n        // track for resolution\\n        // RTCVideoHandlerStats\\n        // https://w3c.github.io/webrtc-stats/#vststats-dict*\\n        // RTCMediaHandlerStats\\n        // https://w3c.github.io/webrtc-stats/#mststats-dict*\\n        } else if (now.type === 'track') {\\n\\n            const resolution = {\\n                height: now.frameHeight,\\n                width: now.frameWidth\\n            };\\n\\n            // Tries to get frame rate\\n            let frameRate = now.framesPerSecond;\\n\\n            if (!frameRate) {\\n                // we need to calculate it\\n                const before = this.previousStatsReport.get(now.id);\\n\\n                if (before) {\\n                    const timeMs = now.timestamp - before.timestamp;\\n\\n                    if (timeMs > 0 && now.framesSent) {\\n                        const numberOfFramesSinceBefore\\n                            = now.framesSent - before.framesSent;\\n\\n                        frameRate = (numberOfFramesSinceBefore / timeMs) * 1000;\\n                    }\\n                }\\n\\n                if (!frameRate) {\\n                    return;\\n                }\\n            }\\n\\n            const trackIdentifier = now.trackIdentifier;\\n            const ssrc = this.peerconnection.getSsrcByTrackId(trackIdentifier);\\n            let ssrcStats = this.ssrc2stats.get(ssrc);\\n\\n            if (!ssrcStats) {\\n                ssrcStats = new SsrcStats();\\n                this.ssrc2stats.set(ssrc, ssrcStats);\\n            }\\n            ssrcStats.setFramerate(Math.round(frameRate || 0));\\n\\n            if (resolution.height && resolution.width) {\\n                ssrcStats.setResolution(resolution);\\n            } else {\\n                ssrcStats.setResolution(null);\\n            }\\n        }\\n    });\\n\\n    this.eventEmitter.emit(\\n        StatisticsEvents.BYTE_SENT_STATS, this.peerconnection, byteSentStats);\\n\\n    this._processAndEmitReport();\\n};\\n\\n/**\\n * Stats processing logic.\\n */\\nStatsCollector.prototype.processNewAudioLevelReport = function() {\\n    if (!this.baselineAudioLevelsReport) {\\n        return;\\n    }\\n\\n    this.currentAudioLevelsReport.forEach(now => {\\n        if (now.type !== 'track') {\\n            return;\\n        }\\n\\n        // Audio level\\n        const audioLevel = now.audioLevel;\\n\\n        if (!audioLevel) {\\n            return;\\n        }\\n\\n        const trackIdentifier = now.trackIdentifier;\\n        const ssrc = this.peerconnection.getSsrcByTrackId(trackIdentifier);\\n\\n        if (ssrc) {\\n            const isLocal\\n                = ssrc === this.peerconnection.getLocalSSRC(\\n                this.peerconnection.getLocalTracks(MediaType.AUDIO));\\n\\n            this.eventEmitter.emit(\\n                StatisticsEvents.AUDIO_LEVEL,\\n                this.peerconnection,\\n                ssrc,\\n                audioLevel,\\n                isLocal);\\n        }\\n    });\\n};\\n\\n/**\\n * End new promised based getStats processing methods.\\n */\\n\",\"\\nimport { Strophe } from 'strophe.js';\\n\\nimport * as JitsiConferenceEvents from './JitsiConferenceEvents';\\nimport { ParticipantConnectionStatus }\\n    from './modules/connectivity/ParticipantConnectionStatus';\\nimport * as MediaType from './service/RTC/MediaType';\\n\\n/**\\n * Represents a participant in (i.e. a member of) a conference.\\n */\\nexport default class JitsiParticipant {\\n\\n    /* eslint-disable max-params */\\n\\n    /**\\n     * Initializes a new JitsiParticipant instance.\\n     *\\n     * @constructor\\n     * @param jid the conference XMPP jid\\n     * @param conference\\n     * @param displayName\\n     * @param {Boolean} hidden - True if the new JitsiParticipant instance is to\\n     * represent a hidden participant; otherwise, false.\\n     * @param {string} statsID - optional participant statsID\\n     * @param {string} status - the initial status if any.\\n     */\\n    constructor(jid, conference, displayName, hidden, statsID, status) {\\n        this._jid = jid;\\n        this._id = Strophe.getResourceFromJid(jid);\\n        this._conference = conference;\\n        this._displayName = displayName;\\n        this._supportsDTMF = false;\\n        this._tracks = [];\\n        this._role = 'none';\\n        this._status = status;\\n        this._hidden = hidden;\\n        this._statsID = statsID;\\n        this._connectionStatus = ParticipantConnectionStatus.ACTIVE;\\n        this._properties = {};\\n    }\\n\\n    /* eslint-enable max-params */\\n\\n    /**\\n     * @returns {JitsiConference} The conference that this participant belongs\\n     * to.\\n     */\\n    getConference() {\\n        return this._conference;\\n    }\\n\\n    /**\\n     * Gets the value of a property of this participant.\\n     */\\n    getProperty(name) {\\n        return this._properties[name];\\n    }\\n\\n    /**\\n     * Checks whether this <tt>JitsiParticipant</tt> has any video tracks which\\n     * are muted according to their underlying WebRTC <tt>MediaStreamTrack</tt>\\n     * muted status.\\n     * @return {boolean} <tt>true</tt> if this <tt>participant</tt> contains any\\n     * video <tt>JitsiTrack</tt>s which are muted as defined in\\n     * {@link JitsiTrack.isWebRTCTrackMuted}.\\n     */\\n    hasAnyVideoTrackWebRTCMuted() {\\n        return (\\n            this.getTracks().some(\\n                jitsiTrack =>\\n                    jitsiTrack.getType() === MediaType.VIDEO\\n                        && jitsiTrack.isWebRTCTrackMuted()));\\n    }\\n\\n    /**\\n     * Updates participant's connection status.\\n     * @param {string} state the current participant connection state.\\n     * {@link ParticipantConnectionStatus}.\\n     * @private\\n     */\\n    _setConnectionStatus(status) {\\n        this._connectionStatus = status;\\n    }\\n\\n    /**\\n     * Return participant's connectivity status.\\n     *\\n     * @returns {string} the connection status\\n     * <tt>ParticipantConnectionStatus</tt> of the user.\\n     * {@link ParticipantConnectionStatus}.\\n     */\\n    getConnectionStatus() {\\n        return this._connectionStatus;\\n    }\\n\\n    /**\\n     * Sets the value of a property of this participant, and fires an event if\\n     * the value has changed.\\n     * @name the name of the property.\\n     * @value the value to set.\\n     */\\n    setProperty(name, value) {\\n        const oldValue = this._properties[name];\\n\\n        if (value !== oldValue) {\\n            this._properties[name] = value;\\n            this._conference.eventEmitter.emit(\\n                JitsiConferenceEvents.PARTICIPANT_PROPERTY_CHANGED,\\n                this,\\n                name,\\n                oldValue,\\n                value);\\n        }\\n    }\\n\\n    /**\\n     * @returns {Array.<JitsiTrack>} The list of media tracks for this\\n     * participant.\\n     */\\n    getTracks() {\\n        return this._tracks.slice();\\n    }\\n\\n    /**\\n     * @param {MediaType} mediaType\\n     * @returns {Array.<JitsiTrack>} an array of media tracks for this\\n     * participant, for given media type.\\n     */\\n    getTracksByMediaType(mediaType) {\\n        return this.getTracks().filter(track => track.getType() === mediaType);\\n    }\\n\\n    /**\\n     * @returns {String} The ID of this participant.\\n     */\\n    getId() {\\n        return this._id;\\n    }\\n\\n    /**\\n     * @returns {String} The JID of this participant.\\n     */\\n    getJid() {\\n        return this._jid;\\n    }\\n\\n    /**\\n     * @returns {String} The human-readable display name of this participant.\\n     */\\n    getDisplayName() {\\n        return this._displayName;\\n    }\\n\\n    /**\\n     * @returns {String} The stats ID of this participant.\\n     */\\n    getStatsID() {\\n        return this._statsID;\\n    }\\n\\n    /**\\n     * @returns {String} The status of the participant.\\n     */\\n    getStatus() {\\n        return this._status;\\n    }\\n\\n    /**\\n     * @returns {Boolean} Whether this participant is a moderator or not.\\n     */\\n    isModerator() {\\n        return this._role === 'moderator';\\n    }\\n\\n    /**\\n     * @returns {Boolean} Whether this participant is a hidden participant. Some\\n     * special system participants may want to join hidden (like for example the\\n     * recorder).\\n     */\\n    isHidden() {\\n        return this._hidden;\\n    }\\n\\n    /**\\n     * @returns {Boolean} Whether this participant has muted their audio.\\n     */\\n    isAudioMuted() {\\n        return this._isMediaTypeMuted(MediaType.AUDIO);\\n    }\\n\\n    /**\\n     * Determines whether all JitsiTracks which are of a specific MediaType and\\n     * which belong to this JitsiParticipant are muted.\\n     *\\n     * @param {MediaType} mediaType - The MediaType of the JitsiTracks to be\\n     * checked.\\n     * @private\\n     * @returns {Boolean} True if all JitsiTracks which are of the specified\\n     * mediaType and which belong to this JitsiParticipant are muted; otherwise,\\n     * false.\\n     */\\n    _isMediaTypeMuted(mediaType) {\\n        return this.getTracks().reduce(\\n            (muted, track) =>\\n                muted && (track.getType() !== mediaType || track.isMuted()),\\n            true);\\n    }\\n\\n    /**\\n     * @returns {Boolean} Whether this participant has muted their video.\\n     */\\n    isVideoMuted() {\\n        return this._isMediaTypeMuted(MediaType.VIDEO);\\n    }\\n\\n    /**\\n     * @returns {String} The role of this participant.\\n     */\\n    getRole() {\\n        return this._role;\\n    }\\n\\n    /**\\n     *\\n     */\\n    supportsDTMF() {\\n        return this._supportsDTMF;\\n    }\\n\\n    /**\\n     * Returns a set with the features for the participant.\\n     * @param {int} timeout the timeout in ms for reply from the participant.\\n     * @returns {Promise<Set<String>, Error>}\\n     */\\n    getFeatures(timeout = 5000) {\\n        return this._conference.xmpp.caps.getFeatures(this._jid, timeout);\\n    }\\n\\n    /**\\n     * Returns the bot type for the participant.\\n     *\\n     * @returns {string|undefined} - The bot type of the participant.\\n     */\\n    getBotType() {\\n        return this._botType;\\n    }\\n}\\n\",\"import {\\n    CONNECTION_DISCONNECTED,\\n    CONNECTION_ESTABLISHED,\\n    CONNECTION_FAILED\\n} from './JitsiConnectionEvents';\\nimport XMPP from './modules/xmpp/xmpp';\\n\\n/**\\n * @typedef {Object} UpgradeRoleError\\n *\\n * @property {JitsiConnectionErrors} [connectionError] - One of\\n * {@link JitsiConnectionErrors} which occurred when trying to connect to the\\n * XMPP server.\\n * @property {String} [authenticationError] - One of XMPP error conditions\\n * returned by Jicofo on authentication attempt. See\\n * {@link https://xmpp.org/rfcs/rfc3920.html#streams-error}.\\n * @property {String} [message] - More details about the error.\\n * @property {Object} [credentials] - The credentials that failed the\\n * authentication.\\n * @property {String} [credentials.jid] - The XMPP ID part of the credentials\\n * that failed the authentication.\\n * @property {string} [credentials.password] - The password part of the\\n * credentials that failed the authentication.\\n *\\n * NOTE If neither one of the errors is present, then the operation has been\\n * canceled.\\n */\\n\\n/* eslint-disable no-invalid-this */\\n\\n/**\\n * Connects to the XMPP server using the specified credentials and contacts\\n * Jicofo in order to obtain a session ID (which is then stored in the local\\n * storage). The user's role of the parent conference will be upgraded to\\n * moderator (by Jicofo). It's also used to join the conference when starting\\n * from anonymous domain and only authenticated users are allowed to create new\\n * rooms.\\n *\\n * @param {Object} options\\n * @param {string} options.id - XMPP user's ID to log in. For example,\\n * user@xmpp-server.com.\\n * @param {string} options.password - XMPP user's password to log in with.\\n * @param {string} [options.roomPassword] - The password to join the MUC with.\\n * @param {Function} [options.onLoginSuccessful] - Callback called when logging\\n * into the XMPP server was successful. The next step will be to obtain a new\\n * session ID from Jicofo and join the MUC using it which will effectively\\n * upgrade the user's role to moderator.\\n * @returns {Object} A <tt>thenable</tt> which (1) settles when the process of\\n * authenticating and upgrading the role of the specified XMPP user finishes and\\n * (2) has a <tt>cancel</tt> method that allows the caller to interrupt the\\n * process. If the process finishes successfully, the session ID has been stored\\n * in the settings and the <tt>thenable</tt> is resolved. If the process\\n * finishes with failure, the <tt>thenable</tt> is rejected with reason of type\\n * {@link UpgradeRoleError} which will have either <tt>connectionError</tt> or\\n * <tt>authenticationError</tt> property set depending on which of the steps has\\n * failed. If <tt>cancel</tt> is called before the process finishes, then the\\n * thenable will be rejected with an empty object (i.e. no error property will\\n * be set on the rejection reason).\\n */\\nexport default function authenticateAndUpgradeRole({\\n    // 1. Log the specified XMPP user in.\\n    id,\\n    password,\\n\\n    // 2. Let the API client/consumer know as soon as the XMPP user has been\\n    //    successfully logged in.\\n    onLoginSuccessful,\\n\\n    // 3. Join the MUC.\\n    roomPassword\\n}) {\\n    let canceled = false;\\n    let rejectPromise;\\n    let xmpp = new XMPP(this.connection.options);\\n\\n    const process = new Promise((resolve, reject) => {\\n        // The process is represented by a Thenable with a cancel method. The\\n        // Thenable is implemented using Promise and the cancel using the\\n        // Promise's reject function.\\n        rejectPromise = reject;\\n\\n\\n        xmpp.addListener(\\n            CONNECTION_DISCONNECTED,\\n            () => {\\n                xmpp = undefined;\\n            });\\n        xmpp.addListener(\\n            CONNECTION_ESTABLISHED,\\n            () => {\\n                if (canceled) {\\n                    return;\\n                }\\n\\n                // Let the caller know that the XMPP login was successful.\\n                onLoginSuccessful && onLoginSuccessful();\\n\\n                // Now authenticate with Jicofo and get a new session ID.\\n                const room\\n                    = xmpp.createRoom(this.options.name, this.options.config);\\n\\n                room.moderator.authenticate()\\n                    .then(() => {\\n                        xmpp && xmpp.disconnect();\\n\\n                        if (canceled) {\\n                            return;\\n                        }\\n\\n                        // At this point we should have the new session ID\\n                        // stored in the settings. Jicofo will allow to join the\\n                        // room.\\n                        this.join(roomPassword);\\n\\n                        resolve();\\n                    })\\n                    .catch(({ error, message }) => {\\n                        xmpp.disconnect();\\n\\n                        reject({\\n                            authenticationError: error,\\n                            message\\n                        });\\n                    });\\n            });\\n        xmpp.addListener(\\n            CONNECTION_FAILED,\\n            (connectionError, message, credentials) => {\\n                reject({\\n                    connectionError,\\n                    credentials,\\n                    message\\n                });\\n                xmpp = undefined;\\n            });\\n\\n        canceled || xmpp.connect(id, password);\\n    });\\n\\n    /**\\n     * Cancels the process, if it's in progress, of authenticating and upgrading\\n     * the role of the local participant/user.\\n     *\\n     * @public\\n     * @returns {void}\\n     */\\n    process.cancel = () => {\\n        canceled = true;\\n        rejectPromise({});\\n        xmpp && xmpp.disconnect();\\n    };\\n\\n    return process;\\n}\\n\\n/* eslint-enable no-invalid-this */\\n\",\"/* global $ */\\n\\nimport { getLogger } from 'jitsi-meet-logger';\\nimport { Strophe } from 'strophe.js';\\n\\nimport ChatRoom from './ChatRoom';\\nimport { ConnectionPluginListenable } from './ConnectionPlugin';\\nimport XMPPEvents from '../../service/xmpp/XMPPEvents';\\n\\nconst logger = getLogger(__filename);\\n\\n/**\\n * MUC connection plugin.\\n */\\nclass MucConnectionPlugin extends ConnectionPluginListenable {\\n    /**\\n     *\\n     * @param xmpp\\n     */\\n    constructor(xmpp) {\\n        super();\\n        this.xmpp = xmpp;\\n        this.rooms = {};\\n    }\\n\\n    /**\\n     *\\n     * @param connection\\n     */\\n    init(connection) {\\n        super.init(connection);\\n\\n        // add handlers (just once)\\n        this.connection.addHandler(this.onPresence.bind(this), null,\\n            'presence', null, null, null, null);\\n        this.connection.addHandler(this.onPresenceUnavailable.bind(this),\\n            null, 'presence', 'unavailable', null);\\n        this.connection.addHandler(this.onPresenceError.bind(this), null,\\n            'presence', 'error', null);\\n        this.connection.addHandler(this.onMessage.bind(this), null,\\n            'message', null, null);\\n        this.connection.addHandler(this.onMute.bind(this),\\n            'http://jitsi.org/jitmeet/audio', 'iq', 'set', null, null);\\n    }\\n\\n    /**\\n     *\\n     * @param jid\\n     * @param password\\n     * @param options\\n     */\\n    createRoom(jid, password, options) {\\n        const roomJid = Strophe.getBareJidFromJid(jid);\\n\\n        if (this.rooms[roomJid]) {\\n            const errmsg = 'You are already in the room!';\\n\\n            logger.error(errmsg);\\n            throw new Error(errmsg);\\n        }\\n        this.rooms[roomJid] = new ChatRoom(this.connection, jid,\\n            password, this.xmpp, options);\\n        this.eventEmitter.emit(\\n            XMPPEvents.EMUC_ROOM_ADDED, this.rooms[roomJid]);\\n\\n        return this.rooms[roomJid];\\n    }\\n\\n    /**\\n     *\\n     * @param jid\\n     */\\n    doLeave(jid) {\\n        this.eventEmitter.emit(\\n            XMPPEvents.EMUC_ROOM_REMOVED, this.rooms[jid]);\\n        delete this.rooms[jid];\\n    }\\n\\n    /**\\n     *\\n     * @param pres\\n     */\\n    onPresence(pres) {\\n        const from = pres.getAttribute('from');\\n\\n        // What is this for? A workaround for something?\\n        if (pres.getAttribute('type')) {\\n            return true;\\n        }\\n\\n        const room = this.rooms[Strophe.getBareJidFromJid(from)];\\n\\n        if (!room) {\\n            return;\\n        }\\n\\n        // Parse status.\\n        if ($(pres).find('>x[xmlns=\\\"http://jabber.org/protocol/muc#user\\\"]'\\n            + '>status[code=\\\"201\\\"]').length) {\\n            room.createNonAnonymousRoom();\\n        }\\n\\n        room.onPresence(pres);\\n\\n        return true;\\n    }\\n\\n    /**\\n     *\\n     * @param pres\\n     */\\n    onPresenceUnavailable(pres) {\\n        const from = pres.getAttribute('from');\\n        const room = this.rooms[Strophe.getBareJidFromJid(from)];\\n\\n        if (!room) {\\n            return;\\n        }\\n\\n        room.onPresenceUnavailable(pres, from);\\n\\n        return true;\\n    }\\n\\n    /**\\n     *\\n     * @param pres\\n     */\\n    onPresenceError(pres) {\\n        const from = pres.getAttribute('from');\\n        const room = this.rooms[Strophe.getBareJidFromJid(from)];\\n\\n        if (!room) {\\n            return;\\n        }\\n\\n        room.onPresenceError(pres, from);\\n\\n        return true;\\n    }\\n\\n    /**\\n     *\\n     * @param msg\\n     */\\n    onMessage(msg) {\\n        // FIXME: this is a hack. but jingle on muc makes nickchanges hard\\n        const from = msg.getAttribute('from');\\n        const room = this.rooms[Strophe.getBareJidFromJid(from)];\\n\\n        if (!room) {\\n            return;\\n        }\\n\\n        room.onMessage(msg, from);\\n\\n        return true;\\n    }\\n\\n    /**\\n     * TODO: Document\\n     * @param iq\\n     */\\n    onMute(iq) {\\n        const from = iq.getAttribute('from');\\n        const room = this.rooms[Strophe.getBareJidFromJid(from)];\\n\\n        // XXX What are the semantics of the return value? Why is it sometimes\\n        // undefined and sometimes a boolean?\\n        if (!room) {\\n            return;\\n        }\\n\\n        room.onMute(iq);\\n\\n        return true;\\n    }\\n}\\n\\n/**\\n *\\n * @param XMPP\\n */\\nexport default function(XMPP) {\\n    Strophe.addConnectionPlugin('emuc', new MucConnectionPlugin(XMPP));\\n}\\n\",\"/* global $, __filename */\\n\\nimport { getLogger } from 'jitsi-meet-logger';\\nimport { $iq, $msg, $pres, Strophe } from 'strophe.js';\\n\\nimport GlobalOnErrorHandler from '../util/GlobalOnErrorHandler';\\nimport * as JitsiTranscriptionStatus from '../../JitsiTranscriptionStatus';\\nimport Listenable from '../util/Listenable';\\nimport Settings from '../settings/Settings';\\nimport * as MediaType from '../../service/RTC/MediaType';\\nimport XMPPEvents from '../../service/xmpp/XMPPEvents';\\n\\nimport Moderator from './moderator';\\n\\nconst logger = getLogger(__filename);\\n\\nexport const parser = {\\n    packet2JSON(xmlElement, nodes) {\\n        for (const child of Array.from(xmlElement.children)) {\\n            const node = {\\n                attributes: {},\\n                children: [],\\n                tagName: child.tagName\\n            };\\n\\n            for (const attr of Array.from(child.attributes)) {\\n                node.attributes[attr.name] = attr.value;\\n            }\\n            const text = Strophe.getText(child);\\n\\n            if (text) {\\n                // Using Strophe.getText will do work for traversing all direct\\n                // child text nodes but returns an escaped value, which is not\\n                // desirable at this point.\\n                node.value = Strophe.xmlunescape(text);\\n            }\\n            nodes.push(node);\\n            this.packet2JSON(child, node.children);\\n        }\\n    },\\n    json2packet(nodes, packet) {\\n        for (let i = 0; i < nodes.length; i++) {\\n            const node = nodes[i];\\n\\n            if (node) {\\n                packet.c(node.tagName, node.attributes);\\n                if (node.value) {\\n                    packet.t(node.value);\\n                }\\n                if (node.children) {\\n                    this.json2packet(node.children, packet);\\n                }\\n                packet.up();\\n            }\\n        }\\n\\n        // packet.up();\\n    }\\n};\\n\\n/**\\n * Returns array of JS objects from the presence JSON associated with the passed\\n / nodeName\\n * @param pres the presence JSON\\n * @param nodeName the name of the node (videomuted, audiomuted, etc)\\n */\\nfunction filterNodeFromPresenceJSON(pres, nodeName) {\\n    const res = [];\\n\\n    for (let i = 0; i < pres.length; i++) {\\n        if (pres[i].tagName === nodeName) {\\n            res.push(pres[i]);\\n        }\\n    }\\n\\n    return res;\\n}\\n\\n// XXX As ChatRoom constructs XMPP stanzas and Strophe is build around the idea\\n// of chaining function calls, allow long function call chains.\\n/* eslint-disable newline-per-chained-call */\\n\\n/**\\n *\\n */\\nexport default class ChatRoom extends Listenable {\\n\\n    /* eslint-disable max-params */\\n\\n    /**\\n     *\\n     * @param connection\\n     * @param jid\\n     * @param password\\n     * @param XMPP\\n     * @param options\\n     * @param {boolean} options.disableFocus - when set to {@code false} will\\n     * not invite Jicofo into the room. This is intended to be used only by\\n     * jitsi-meet-spot.\\n     */\\n    constructor(connection, jid, password, XMPP, options) {\\n        super();\\n        this.xmpp = XMPP;\\n        this.connection = connection;\\n        this.roomjid = Strophe.getBareJidFromJid(jid);\\n        this.myroomjid = jid;\\n        this.password = password;\\n        logger.info(`Joined MUC as ${this.myroomjid}`);\\n        this.members = {};\\n        this.presMap = {};\\n        this.presHandlers = {};\\n        this.joined = false;\\n        this.role = null;\\n        this.focusMucJid = null;\\n        this.noBridgeAvailable = false;\\n        this.options = options || {};\\n        this.moderator\\n            = new Moderator(this.roomjid, this.xmpp, this.eventEmitter, {\\n                connection: this.xmpp.options,\\n                conference: this.options\\n            });\\n        this.initPresenceMap(options);\\n        this.lastPresences = {};\\n        this.phoneNumber = null;\\n        this.phonePin = null;\\n        this.connectionTimes = {};\\n        this.participantPropertyListener = null;\\n\\n        this.locked = false;\\n        this.transcriptionStatus = JitsiTranscriptionStatus.OFF;\\n    }\\n\\n    /* eslint-enable max-params */\\n\\n    /**\\n     *\\n     */\\n    initPresenceMap(options = {}) {\\n        this.presMap.to = this.myroomjid;\\n        this.presMap.xns = 'http://jabber.org/protocol/muc';\\n        this.presMap.nodes = [];\\n\\n        if (options.enableStatsID) {\\n            this.presMap.nodes.push({\\n                'tagName': 'stats-id',\\n                'value': Settings.callStatsUserName\\n            });\\n        }\\n\\n        // We need to broadcast 'videomuted' status from the beginning, cause\\n        // Jicofo makes decisions based on that. Initialize it with 'false'\\n        // here.\\n        this.addVideoInfoToPresence(false);\\n\\n        if (options.deploymentInfo && options.deploymentInfo.userRegion) {\\n            this.presMap.nodes.push({\\n                'tagName': 'region',\\n                'attributes': {\\n                    id: options.deploymentInfo.userRegion,\\n                    xmlns: 'http://jitsi.org/jitsi-meet'\\n                }\\n            });\\n        }\\n    }\\n\\n    /**\\n     * Joins the chat room.\\n     * @param password\\n     * @returns {Promise} - resolved when join completes. At the time of this\\n     * writing it's never rejected.\\n     */\\n    join(password) {\\n        this.password = password;\\n\\n        return new Promise(resolve => {\\n            this.options.disableFocus\\n                && logger.info('Conference focus disabled');\\n\\n            const preJoin\\n                = this.options.disableFocus\\n                    ? Promise.resolve()\\n                    : this.moderator.allocateConferenceFocus();\\n\\n            preJoin.then(() => {\\n                this.sendPresence(true);\\n                resolve();\\n            });\\n        });\\n    }\\n\\n    /**\\n     *\\n     * @param fromJoin\\n     */\\n    sendPresence(fromJoin) {\\n        const to = this.presMap.to;\\n\\n        if (!to || (!this.joined && !fromJoin)) {\\n            // Too early to send presence - not initialized\\n            return;\\n        }\\n\\n        const pres = $pres({ to });\\n\\n        // xep-0045 defines: \\\"including in the initial presence stanza an empty\\n        // <x/> element qualified by the 'http://jabber.org/protocol/muc'\\n        // namespace\\\" and subsequent presences should not include that or it can\\n        // be considered as joining, and server can send us the message history\\n        // for the room on every presence\\n        if (fromJoin) {\\n            pres.c('x', { xmlns: this.presMap.xns });\\n\\n            if (this.password) {\\n                pres.c('password').t(this.password).up();\\n            }\\n            pres.up();\\n        }\\n\\n        parser.json2packet(this.presMap.nodes, pres);\\n        this.connection.send(pres);\\n        if (fromJoin) {\\n            // XXX We're pressed for time here because we're beginning a complex\\n            // and/or lengthy conference-establishment process which supposedly\\n            // involves multiple RTTs. We don't have the time to wait for\\n            // Strophe to decide to send our IQ.\\n            this.connection.flush();\\n        }\\n    }\\n\\n    /**\\n     * Sends the presence unavailable, signaling the server\\n     * we want to leave the room.\\n     */\\n    doLeave() {\\n        logger.log('do leave', this.myroomjid);\\n        const pres = $pres({ to: this.myroomjid,\\n            type: 'unavailable' });\\n\\n        this.presMap.length = 0;\\n\\n        // XXX Strophe is asynchronously sending by default. Unfortunately, that\\n        // means that there may not be enough time to send the unavailable\\n        // presence. Switching Strophe to synchronous sending is not much of an\\n        // option because it may lead to a noticeable delay in navigating away\\n        // from the current location. As a compromise, we will try to increase\\n        // the chances of sending the unavailable presence within the short time\\n        // span that we have upon unloading by invoking flush() on the\\n        // connection. We flush() once before sending/queuing the unavailable\\n        // presence in order to attemtp to have the unavailable presence at the\\n        // top of the send queue. We flush() once more after sending/queuing the\\n        // unavailable presence in order to attempt to have it sent as soon as\\n        // possible.\\n        this.connection.flush();\\n        this.connection.send(pres);\\n        this.connection.flush();\\n    }\\n\\n    /**\\n     *\\n     */\\n    discoRoomInfo() {\\n        // https://xmpp.org/extensions/xep-0045.html#disco-roominfo\\n\\n        const getInfo\\n            = $iq({\\n                type: 'get',\\n                to: this.roomjid\\n            })\\n                .c('query', { xmlns: Strophe.NS.DISCO_INFO });\\n\\n        this.connection.sendIQ(getInfo, result => {\\n            const locked\\n                = $(result).find('>query>feature[var=\\\"muc_passwordprotected\\\"]')\\n                    .length\\n                    === 1;\\n\\n            if (locked !== this.locked) {\\n                this.eventEmitter.emit(XMPPEvents.MUC_LOCK_CHANGED, locked);\\n                this.locked = locked;\\n            }\\n        }, error => {\\n            GlobalOnErrorHandler.callErrorHandler(error);\\n            logger.error('Error getting room info: ', error);\\n        });\\n    }\\n\\n    /**\\n     *\\n     */\\n    createNonAnonymousRoom() {\\n        // http://xmpp.org/extensions/xep-0045.html#createroom-reserved\\n\\n        const getForm = $iq({ type: 'get',\\n            to: this.roomjid })\\n            .c('query', { xmlns: 'http://jabber.org/protocol/muc#owner' })\\n            .c('x', { xmlns: 'jabber:x:data',\\n                type: 'submit' });\\n\\n        const self = this;\\n\\n        this.connection.sendIQ(getForm, form => {\\n            if (!$(form).find(\\n                    '>query>x[xmlns=\\\"jabber:x:data\\\"]'\\n                    + '>field[var=\\\"muc#roomconfig_whois\\\"]').length) {\\n                const errmsg = 'non-anonymous rooms not supported';\\n\\n                GlobalOnErrorHandler.callErrorHandler(new Error(errmsg));\\n                logger.error(errmsg);\\n\\n                return;\\n            }\\n\\n            const formSubmit = $iq({ to: self.roomjid,\\n                type: 'set' })\\n                .c('query', { xmlns: 'http://jabber.org/protocol/muc#owner' });\\n\\n            formSubmit.c('x', { xmlns: 'jabber:x:data',\\n                type: 'submit' });\\n\\n            formSubmit.c('field', { 'var': 'FORM_TYPE' })\\n                .c('value')\\n                .t('http://jabber.org/protocol/muc#roomconfig').up().up();\\n\\n            formSubmit.c('field', { 'var': 'muc#roomconfig_whois' })\\n                .c('value').t('anyone').up().up();\\n\\n            self.connection.sendIQ(formSubmit);\\n\\n        }, error => {\\n            GlobalOnErrorHandler.callErrorHandler(error);\\n            logger.error('Error getting room configuration form: ', error);\\n        });\\n    }\\n\\n    /**\\n     *\\n     * @param pres\\n     */\\n    onPresence(pres) {\\n        const from = pres.getAttribute('from');\\n        const member = {};\\n        const statusEl = pres.getElementsByTagName('status')[0];\\n\\n        if (statusEl) {\\n            member.status = statusEl.textContent || '';\\n        }\\n        let hasStatusUpdate = false;\\n        const xElement\\n            = pres.getElementsByTagNameNS(\\n                'http://jabber.org/protocol/muc#user', 'x')[0];\\n        const mucUserItem\\n            = xElement && xElement.getElementsByTagName('item')[0];\\n\\n        member.affiliation\\n            = mucUserItem && mucUserItem.getAttribute('affiliation');\\n        member.role = mucUserItem && mucUserItem.getAttribute('role');\\n\\n        // Focus recognition\\n        const jid = mucUserItem && mucUserItem.getAttribute('jid');\\n\\n        member.jid = jid;\\n        member.isFocus\\n            = jid && jid.indexOf(`${this.moderator.getFocusUserJid()}/`) === 0;\\n        member.isHiddenDomain\\n            = jid && jid.indexOf('@') > 0\\n                && this.options.hiddenDomain\\n                    === jid.substring(jid.indexOf('@') + 1, jid.indexOf('/'));\\n\\n        this.eventEmitter.emit(XMPPEvents.PRESENCE_RECEIVED, {\\n            fromHiddenDomain: member.isHiddenDomain,\\n            presence: pres\\n        });\\n\\n        const xEl = pres.querySelector('x');\\n\\n        if (xEl) {\\n            xEl.remove();\\n        }\\n\\n        const nodes = [];\\n\\n        parser.packet2JSON(pres, nodes);\\n        this.lastPresences[from] = nodes;\\n\\n        // process nodes to extract data needed for MUC_JOINED and\\n        // MUC_MEMBER_JOINED events\\n        const extractIdentityInformation = node => {\\n            const identity = {};\\n            const userInfo = node.children.find(c => c.tagName === 'user');\\n\\n            if (userInfo) {\\n                identity.user = {};\\n                for (const tag of [ 'id', 'name', 'avatar' ]) {\\n                    const child\\n                        = userInfo.children.find(c => c.tagName === tag);\\n\\n                    if (child) {\\n                        identity.user[tag] = child.value;\\n                    }\\n                }\\n            }\\n            const groupInfo = node.children.find(c => c.tagName === 'group');\\n\\n            if (groupInfo) {\\n                identity.group = groupInfo.value;\\n            }\\n\\n            return identity;\\n        };\\n\\n        for (let i = 0; i < nodes.length; i++) {\\n            const node = nodes[i];\\n\\n            switch (node.tagName) {\\n            case 'bot': {\\n                const { attributes } = node;\\n\\n                if (!attributes) {\\n                    break;\\n                }\\n                const { type } = attributes;\\n\\n                member.botType = type;\\n                break;\\n            }\\n            case 'nick':\\n                member.nick = node.value;\\n                break;\\n            case 'userId':\\n                member.id = node.value;\\n                break;\\n            case 'stats-id':\\n                member.statsID = node.value;\\n                break;\\n            case 'identity':\\n                member.identity = extractIdentityInformation(node);\\n                break;\\n            }\\n        }\\n\\n        if (from === this.myroomjid) {\\n            const newRole\\n                = member.affiliation === 'owner' ? member.role : 'none';\\n\\n            if (this.role !== newRole) {\\n                this.role = newRole;\\n                this.eventEmitter.emit(\\n                    XMPPEvents.LOCAL_ROLE_CHANGED,\\n                    this.role);\\n            }\\n            if (!this.joined) {\\n                this.joined = true;\\n                const now = this.connectionTimes['muc.joined']\\n                    = window.performance.now();\\n\\n                logger.log('(TIME) MUC joined:\\\\t', now);\\n\\n                // set correct initial state of locked\\n                if (this.password) {\\n                    this.locked = true;\\n                }\\n\\n                this.eventEmitter.emit(XMPPEvents.MUC_JOINED);\\n            }\\n        } else if (this.members[from] === undefined) {\\n            // new participant\\n            this.members[from] = member;\\n            logger.log('entered', from, member);\\n            hasStatusUpdate = member.status !== undefined;\\n            if (member.isFocus) {\\n                this._initFocus(from, jid);\\n            } else {\\n                // identity is being added to member joined, so external\\n                // services can be notified for that (currently identity is\\n                // not used inside library)\\n                this.eventEmitter.emit(\\n                    XMPPEvents.MUC_MEMBER_JOINED,\\n                    from,\\n                    member.nick,\\n                    member.role,\\n                    member.isHiddenDomain,\\n                    member.statsID,\\n                    member.status,\\n                    member.identity,\\n                    member.botType);\\n\\n                // we are reporting the status with the join\\n                // so we do not want a second event about status update\\n                hasStatusUpdate = false;\\n            }\\n        } else {\\n            // Presence update for existing participant\\n            // Watch role change:\\n            const memberOfThis = this.members[from];\\n\\n            if (memberOfThis.role !== member.role) {\\n                memberOfThis.role = member.role;\\n                this.eventEmitter.emit(\\n                    XMPPEvents.MUC_ROLE_CHANGED, from, member.role);\\n            }\\n\\n            // fire event that botType had changed\\n            if (memberOfThis.botType !== member.botType) {\\n                memberOfThis.botType = member.botType;\\n                this.eventEmitter.emit(\\n                    XMPPEvents.MUC_MEMBER_BOT_TYPE_CHANGED,\\n                    from,\\n                    member.botType);\\n            }\\n\\n            if (member.isFocus) {\\n                // From time to time first few presences of the focus are not\\n                // containing it's jid. That way we can mark later the focus\\n                // member instead of not marking it at all and not starting the\\n                // conference.\\n                // FIXME: Maybe there is a better way to handle this issue. It\\n                // seems there is some period of time in prosody that the\\n                // configuration form is received but not applied. And if any\\n                // participant joins during that period of time the first\\n                // presence from the focus won't contain\\n                // <item jid=\\\"focus...\\\" />.\\n                memberOfThis.isFocus = true;\\n                this._initFocus(from, jid);\\n            }\\n\\n            // store the new display name\\n            if (member.displayName) {\\n                memberOfThis.displayName = member.displayName;\\n            }\\n\\n            // update stored status message to be able to detect changes\\n            if (memberOfThis.status !== member.status) {\\n                hasStatusUpdate = true;\\n                memberOfThis.status = member.status;\\n            }\\n        }\\n\\n        // after we had fired member or room joined events, lets fire events\\n        // for the rest info we got in presence\\n        for (let i = 0; i < nodes.length; i++) {\\n            const node = nodes[i];\\n\\n            switch (node.tagName) {\\n            case 'nick':\\n                if (!member.isFocus) {\\n                    const displayName\\n                        = this.xmpp.options.displayJids\\n                            ? Strophe.getResourceFromJid(from)\\n                            : member.nick;\\n\\n                    this.eventEmitter.emit(\\n                        XMPPEvents.DISPLAY_NAME_CHANGED,\\n                        from,\\n                        displayName);\\n                }\\n                break;\\n            case 'bridgeNotAvailable':\\n                if (member.isFocus && !this.noBridgeAvailable) {\\n                    this.noBridgeAvailable = true;\\n                    this.eventEmitter.emit(XMPPEvents.BRIDGE_DOWN);\\n                }\\n                break;\\n            case 'conference-properties':\\n                if (member.isFocus) {\\n                    const properties = {};\\n\\n                    for (let j = 0; j < node.children.length; j++) {\\n                        const { attributes } = node.children[j];\\n\\n                        if (attributes && attributes.key) {\\n                            properties[attributes.key] = attributes.value;\\n                        }\\n                    }\\n\\n                    this.eventEmitter.emit(\\n                        XMPPEvents.CONFERENCE_PROPERTIES_CHANGED, properties);\\n                }\\n                break;\\n            case 'transcription-status': {\\n                const { attributes } = node;\\n\\n                if (!attributes) {\\n                    break;\\n                }\\n\\n                const { status } = attributes;\\n\\n                if (status && status !== this.transcriptionStatus) {\\n                    this.transcriptionStatus = status;\\n                    this.eventEmitter.emit(\\n                        XMPPEvents.TRANSCRIPTION_STATUS_CHANGED,\\n                        status\\n                    );\\n                }\\n\\n\\n                break;\\n            }\\n            case 'call-control': {\\n                const att = node.attributes;\\n\\n                if (!att) {\\n                    break;\\n                }\\n                this.phoneNumber = att.phone || null;\\n                this.phonePin = att.pin || null;\\n                this.eventEmitter.emit(XMPPEvents.PHONE_NUMBER_CHANGED);\\n                break;\\n            }\\n            default:\\n                this.processNode(node, from);\\n            }\\n        }\\n\\n        // Trigger status message update if necessary\\n        if (hasStatusUpdate) {\\n            this.eventEmitter.emit(\\n                XMPPEvents.PRESENCE_STATUS,\\n                from,\\n                member.status);\\n        }\\n    }\\n\\n    /**\\n     * Initialize some properties when the focus participant is verified.\\n     * @param from jid of the focus\\n     * @param mucJid the jid of the focus in the muc\\n     */\\n    _initFocus(from, mucJid) {\\n        this.focusMucJid = from;\\n\\n        logger.info(`Ignore focus: ${from}, real JID: ${mucJid}`);\\n    }\\n\\n    /**\\n     * Sets the special listener to be used for \\\"command\\\"s whose name starts\\n     * with \\\"jitsi_participant_\\\".\\n     */\\n    setParticipantPropertyListener(listener) {\\n        this.participantPropertyListener = listener;\\n    }\\n\\n    /**\\n     *\\n     * @param node\\n     * @param from\\n     */\\n    processNode(node, from) {\\n        // make sure we catch all errors coming from any handler\\n        // otherwise we can remove the presence handler from strophe\\n        try {\\n            let tagHandlers = this.presHandlers[node.tagName];\\n\\n            if (node.tagName.startsWith('jitsi_participant_')) {\\n                tagHandlers = [ this.participantPropertyListener ];\\n            }\\n\\n            if (tagHandlers) {\\n                tagHandlers.forEach(handler => {\\n                    handler(node, Strophe.getResourceFromJid(from), from);\\n                });\\n            }\\n        } catch (e) {\\n            GlobalOnErrorHandler.callErrorHandler(e);\\n            logger.error(`Error processing:${node.tagName} node.`, e);\\n        }\\n    }\\n\\n    /**\\n     * Send text message to the other participants in the conference\\n     * @param message\\n     * @param elementName\\n     * @param nickname\\n     */\\n    sendMessage(message, elementName, nickname) {\\n        const msg = $msg({ to: this.roomjid,\\n            type: 'groupchat' });\\n\\n        // We are adding the message in a packet extension. If this element\\n        // is different from 'body', we add a custom namespace.\\n        // e.g. for 'json-message' extension of message stanza.\\n        if (elementName === 'body') {\\n            msg.c(elementName, message).up();\\n        } else {\\n            msg.c(elementName, { xmlns: 'http://jitsi.org/jitmeet' }, message)\\n                .up();\\n        }\\n        if (nickname) {\\n            msg.c('nick', { xmlns: 'http://jabber.org/protocol/nick' })\\n                .t(nickname)\\n                .up()\\n                .up();\\n        }\\n        this.connection.send(msg);\\n        this.eventEmitter.emit(XMPPEvents.SENDING_CHAT_MESSAGE, message);\\n    }\\n\\n    /* eslint-disable max-params */\\n    /**\\n     * Send private text message to another participant of the conference\\n     * @param id id/muc resource of the receiver\\n     * @param message\\n     * @param elementName\\n     * @param nickname\\n     */\\n    sendPrivateMessage(id, message, elementName, nickname) {\\n        const msg = $msg({ to: `${this.roomjid}/${id}`,\\n            type: 'chat' });\\n\\n        // We are adding the message in packet. If this element is different\\n        // from 'body', we add our custom namespace for the same.\\n        // e.g. for 'json-message' message extension.\\n        if (elementName === 'body') {\\n            msg.c(elementName, message).up();\\n        } else {\\n            msg.c(elementName, { xmlns: 'http://jitsi.org/jitmeet' }, message)\\n                .up();\\n        }\\n        if (nickname) {\\n            msg.c('nick', { xmlns: 'http://jabber.org/protocol/nick' })\\n                .t(nickname)\\n                .up()\\n                .up();\\n        }\\n\\n        this.connection.send(msg);\\n        this.eventEmitter.emit(\\n            XMPPEvents.SENDING_PRIVATE_CHAT_MESSAGE, message);\\n    }\\n    /* eslint-enable max-params */\\n\\n    /**\\n     *\\n     * @param subject\\n     */\\n    setSubject(subject) {\\n        const msg = $msg({ to: this.roomjid,\\n            type: 'groupchat' });\\n\\n        msg.c('subject', subject);\\n        this.connection.send(msg);\\n    }\\n\\n    /**\\n     * Called when participant leaves.\\n     * @param jid the jid of the participant that leaves\\n     * @param skipEvents optional params to skip any events, including check\\n     * whether this is the focus that left\\n     */\\n    onParticipantLeft(jid, skipEvents) {\\n        delete this.lastPresences[jid];\\n\\n        if (skipEvents) {\\n            return;\\n        }\\n\\n        this.eventEmitter.emit(XMPPEvents.MUC_MEMBER_LEFT, jid);\\n\\n        this.moderator.onMucMemberLeft(jid);\\n    }\\n\\n    /**\\n     *\\n     * @param pres\\n     * @param from\\n     */\\n    onPresenceUnavailable(pres, from) {\\n        // ignore presence\\n        if ($(pres).find('>ignore[xmlns=\\\"http://jitsi.org/jitmeet/\\\"]').length) {\\n            return true;\\n        }\\n\\n        // room destroyed ?\\n        if ($(pres).find('>x[xmlns=\\\"http://jabber.org/protocol/muc#user\\\"]'\\n            + '>destroy').length) {\\n            let reason;\\n            const reasonSelect\\n                = $(pres).find(\\n                    '>x[xmlns=\\\"http://jabber.org/protocol/muc#user\\\"]'\\n                        + '>destroy>reason');\\n\\n            if (reasonSelect.length) {\\n                reason = reasonSelect.text();\\n            }\\n\\n            this.eventEmitter.emit(XMPPEvents.MUC_DESTROYED, reason);\\n            this.connection.emuc.doLeave(this.roomjid);\\n\\n            return true;\\n        }\\n\\n        // Status code 110 indicates that this notification is \\\"self-presence\\\".\\n        const isSelfPresence\\n            = $(pres)\\n                .find(\\n                    '>x[xmlns=\\\"http://jabber.org/protocol/muc#user\\\"]>'\\n                        + 'status[code=\\\"110\\\"]')\\n                .length;\\n        const isKick\\n            = $(pres)\\n                .find(\\n                    '>x[xmlns=\\\"http://jabber.org/protocol/muc#user\\\"]'\\n                        + '>status[code=\\\"307\\\"]')\\n                .length;\\n        const membersKeys = Object.keys(this.members);\\n\\n        if (!isSelfPresence) {\\n            delete this.members[from];\\n            this.onParticipantLeft(from, false);\\n        } else if (membersKeys.length > 0) {\\n            // If the status code is 110 this means we're leaving and we would\\n            // like to remove everyone else from our view, so we trigger the\\n            // event.\\n            membersKeys.forEach(jid => {\\n                const member = this.members[jid];\\n\\n                delete this.members[jid];\\n                this.onParticipantLeft(jid, member.isFocus);\\n            });\\n            this.connection.emuc.doLeave(this.roomjid);\\n\\n            // we fire muc_left only if this is not a kick,\\n            // kick has both statuses 110 and 307.\\n            if (!isKick) {\\n                this.eventEmitter.emit(XMPPEvents.MUC_LEFT);\\n            }\\n        }\\n\\n        if (isKick && this.myroomjid === from) {\\n            this.eventEmitter.emit(XMPPEvents.KICKED);\\n        }\\n    }\\n\\n    /**\\n     *\\n     * @param msg\\n     * @param from\\n     */\\n    onMessage(msg, from) {\\n        const nick\\n            = $(msg).find('>nick[xmlns=\\\"http://jabber.org/protocol/nick\\\"]')\\n                .text()\\n            || Strophe.getResourceFromJid(from);\\n\\n        const txt = $(msg).find('>body').text();\\n        const type = msg.getAttribute('type');\\n\\n        if (type === 'error') {\\n            this.eventEmitter.emit(XMPPEvents.CHAT_ERROR_RECEIVED,\\n                $(msg).find('>text').text(), txt);\\n\\n            return true;\\n        }\\n\\n        const subject = $(msg).find('>subject');\\n\\n        if (subject.length) {\\n            const subjectText = subject.text();\\n\\n            if (subjectText || subjectText === '') {\\n                this.eventEmitter.emit(XMPPEvents.SUBJECT_CHANGED, subjectText);\\n                logger.log(`Subject is changed to ${subjectText}`);\\n            }\\n        }\\n\\n        // xep-0203 delay\\n        let stamp = $(msg).find('>delay').attr('stamp');\\n\\n        if (!stamp) {\\n            // or xep-0091 delay, UTC timestamp\\n            stamp = $(msg).find('>[xmlns=\\\"jabber:x:delay\\\"]').attr('stamp');\\n\\n            if (stamp) {\\n                // the format is CCYYMMDDThh:mm:ss\\n                const dateParts\\n                    = stamp.match(/(\\\\d{4})(\\\\d{2})(\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2})/);\\n\\n                stamp = `${dateParts[1]}-${dateParts[2]}-${dateParts[3]}Z`;\\n            }\\n        }\\n\\n        if (from === this.roomjid\\n                && $(msg)\\n                    .find(\\n                        '>x[xmlns=\\\"http://jabber.org/protocol/muc#user\\\"]'\\n                            + '>status[code=\\\"104\\\"]')\\n                    .length) {\\n            this.discoRoomInfo();\\n        }\\n        const jsonMessage = $(msg).find('>json-message').text();\\n        const parsedJson = this.xmpp.tryParseJSONAndVerify(jsonMessage);\\n\\n        // We emit this event if the message is a valid json, and is not\\n        // delivered after a delay, i.e. stamp is undefined.\\n        // e.g. - subtitles should not be displayed if delayed.\\n        if (parsedJson && stamp === undefined) {\\n            this.eventEmitter.emit(XMPPEvents.JSON_MESSAGE_RECEIVED,\\n                from, parsedJson);\\n\\n            return;\\n        }\\n\\n        if (txt) {\\n            if (type === 'chat') {\\n                this.eventEmitter.emit(XMPPEvents.PRIVATE_MESSAGE_RECEIVED,\\n                        from, nick, txt, this.myroomjid, stamp);\\n            } else if (type === 'groupchat') {\\n                this.eventEmitter.emit(XMPPEvents.MESSAGE_RECEIVED,\\n                        from, nick, txt, this.myroomjid, stamp);\\n            }\\n        }\\n    }\\n\\n    /**\\n     *\\n     * @param pres\\n     * @param from\\n     */\\n    onPresenceError(pres, from) {\\n        if ($(pres)\\n                .find(\\n                    '>error[type=\\\"auth\\\"]'\\n                        + '>not-authorized['\\n                        + 'xmlns=\\\"urn:ietf:params:xml:ns:xmpp-stanzas\\\"]')\\n                .length) {\\n            logger.log('on password required', from);\\n            this.eventEmitter.emit(XMPPEvents.PASSWORD_REQUIRED);\\n        } else if ($(pres)\\n                .find(\\n                    '>error[type=\\\"cancel\\\"]'\\n                        + '>not-allowed['\\n                        + 'xmlns=\\\"urn:ietf:params:xml:ns:xmpp-stanzas\\\"]')\\n                .length) {\\n            const toDomain = Strophe.getDomainFromJid(pres.getAttribute('to'));\\n\\n            if (toDomain === this.xmpp.options.hosts.anonymousdomain) {\\n                // enter the room by replying with 'not-authorized'. This would\\n                // result in reconnection from authorized domain.\\n                // We're either missing Jicofo/Prosody config for anonymous\\n                // domains or something is wrong.\\n                this.eventEmitter.emit(XMPPEvents.ROOM_JOIN_ERROR);\\n\\n            } else {\\n                logger.warn('onPresError ', pres);\\n                this.eventEmitter.emit(\\n                    XMPPEvents.ROOM_CONNECT_NOT_ALLOWED_ERROR);\\n            }\\n        } else if ($(pres).find('>error>service-unavailable').length) {\\n            logger.warn('Maximum users limit for the room has been reached',\\n                pres);\\n            this.eventEmitter.emit(XMPPEvents.ROOM_MAX_USERS_ERROR);\\n        } else {\\n            logger.warn('onPresError ', pres);\\n            this.eventEmitter.emit(XMPPEvents.ROOM_CONNECT_ERROR);\\n        }\\n    }\\n\\n    /**\\n     *\\n     * @param jid\\n     */\\n    kick(jid) {\\n        const kickIQ = $iq({ to: this.roomjid,\\n            type: 'set' })\\n            .c('query', { xmlns: 'http://jabber.org/protocol/muc#admin' })\\n            .c('item', { nick: Strophe.getResourceFromJid(jid),\\n                role: 'none' })\\n            .c('reason').t('You have been kicked.').up().up().up();\\n\\n        this.connection.sendIQ(\\n            kickIQ,\\n            result => logger.log('Kick participant with jid: ', jid, result),\\n            error => logger.log('Kick participant error: ', error));\\n    }\\n\\n    /* eslint-disable max-params */\\n\\n    /**\\n     *\\n     * @param key\\n     * @param onSuccess\\n     * @param onError\\n     * @param onNotSupported\\n     */\\n    lockRoom(key, onSuccess, onError, onNotSupported) {\\n        // http://xmpp.org/extensions/xep-0045.html#roomconfig\\n        this.connection.sendIQ(\\n            $iq({\\n                to: this.roomjid,\\n                type: 'get'\\n            })\\n                .c('query', { xmlns: 'http://jabber.org/protocol/muc#owner' }),\\n            res => {\\n                if ($(res)\\n                        .find(\\n                            '>query>x[xmlns=\\\"jabber:x:data\\\"]'\\n                                + '>field[var=\\\"muc#roomconfig_roomsecret\\\"]')\\n                        .length) {\\n                    const formsubmit\\n                        = $iq({\\n                            to: this.roomjid,\\n                            type: 'set'\\n                        })\\n                            .c('query', {\\n                                xmlns: 'http://jabber.org/protocol/muc#owner'\\n                            });\\n\\n                    formsubmit.c('x', {\\n                        xmlns: 'jabber:x:data',\\n                        type: 'submit'\\n                    });\\n                    formsubmit\\n                        .c('field', { 'var': 'FORM_TYPE' })\\n                        .c('value')\\n                        .t('http://jabber.org/protocol/muc#roomconfig')\\n                        .up()\\n                        .up();\\n                    formsubmit\\n                        .c('field', { 'var': 'muc#roomconfig_roomsecret' })\\n                        .c('value')\\n                        .t(key)\\n                        .up()\\n                        .up();\\n\\n                    // Fixes a bug in prosody 0.9.+\\n                    // https://prosody.im/issues/issue/373\\n                    formsubmit\\n                        .c('field', { 'var': 'muc#roomconfig_whois' })\\n                        .c('value')\\n                        .t('anyone')\\n                        .up()\\n                        .up();\\n\\n                    // FIXME: is muc#roomconfig_passwordprotectedroom required?\\n                    this.connection.sendIQ(formsubmit, onSuccess, onError);\\n                } else {\\n                    onNotSupported();\\n                }\\n            },\\n            onError);\\n    }\\n\\n    /* eslint-enable max-params */\\n\\n    /**\\n     *\\n     * @param key\\n     * @param values\\n     */\\n    addToPresence(key, values) {\\n        values.tagName = key;\\n        this.removeFromPresence(key);\\n        this.presMap.nodes.push(values);\\n    }\\n\\n    /**\\n     *\\n     * @param key\\n     */\\n    removeFromPresence(key) {\\n        const nodes = this.presMap.nodes.filter(node => key !== node.tagName);\\n\\n        this.presMap.nodes = nodes;\\n    }\\n\\n    /**\\n     *\\n     * @param name\\n     * @param handler\\n     */\\n    addPresenceListener(name, handler) {\\n        if (typeof handler !== 'function') {\\n            throw new Error('\\\"handler\\\" is not a function');\\n        }\\n        let tagHandlers = this.presHandlers[name];\\n\\n        if (!tagHandlers) {\\n            this.presHandlers[name] = tagHandlers = [];\\n        }\\n        if (tagHandlers.indexOf(handler) === -1) {\\n            tagHandlers.push(handler);\\n        } else {\\n            logger.warn(\\n                `Trying to add the same handler more than once for: ${name}`);\\n        }\\n    }\\n\\n    /**\\n     *\\n     * @param name\\n     * @param handler\\n     */\\n    removePresenceListener(name, handler) {\\n        const tagHandlers = this.presHandlers[name];\\n        const handlerIdx = tagHandlers ? tagHandlers.indexOf(handler) : -1;\\n\\n        // eslint-disable-next-line no-negated-condition\\n        if (handlerIdx !== -1) {\\n            tagHandlers.splice(handlerIdx, 1);\\n        } else {\\n            logger.warn(`Handler for: ${name} was not registered`);\\n        }\\n    }\\n\\n    /**\\n     * Checks if the user identified by given <tt>mucJid</tt> is the conference\\n     * focus.\\n     * @param mucJid the full MUC address of the user to be checked.\\n     * @returns {boolean|null} <tt>true</tt> if MUC user is the conference focus\\n     * or <tt>false</tt> if is not. When given <tt>mucJid</tt> does not exist in\\n     * the MUC then <tt>null</tt> is returned.\\n     */\\n    isFocus(mucJid) {\\n        const member = this.members[mucJid];\\n\\n        if (member) {\\n            return member.isFocus;\\n        }\\n\\n        return null;\\n    }\\n\\n    /**\\n     *\\n     */\\n    isModerator() {\\n        return this.role === 'moderator';\\n    }\\n\\n    /**\\n     *\\n     * @param peerJid\\n     */\\n    getMemberRole(peerJid) {\\n        if (this.members[peerJid]) {\\n            return this.members[peerJid].role;\\n        }\\n\\n        return null;\\n    }\\n\\n    /**\\n     *\\n     * @param mute\\n     * @param callback\\n     */\\n    setVideoMute(mute, callback) {\\n        this.sendVideoInfoPresence(mute);\\n        if (callback) {\\n            callback(mute);\\n        }\\n    }\\n\\n    /**\\n     *\\n     * @param mute\\n     * @param callback\\n     */\\n    setAudioMute(mute, callback) {\\n        return this.sendAudioInfoPresence(mute, callback);\\n    }\\n\\n    /**\\n     *\\n     * @param mute\\n     */\\n    addAudioInfoToPresence(mute) {\\n        this.removeFromPresence('audiomuted');\\n        this.addToPresence(\\n            'audiomuted',\\n            {\\n                attributes: { 'xmlns': 'http://jitsi.org/jitmeet/audio' },\\n                value: mute.toString()\\n            });\\n    }\\n\\n    /**\\n     *\\n     * @param mute\\n     * @param callback\\n     */\\n    sendAudioInfoPresence(mute, callback) {\\n        this.addAudioInfoToPresence(mute);\\n        if (this.connection) {\\n            this.sendPresence();\\n        }\\n        if (callback) {\\n            callback();\\n        }\\n    }\\n\\n    /**\\n     *\\n     * @param mute\\n     */\\n    addVideoInfoToPresence(mute) {\\n        this.removeFromPresence('videomuted');\\n        this.addToPresence(\\n            'videomuted',\\n            {\\n                attributes: { 'xmlns': 'http://jitsi.org/jitmeet/video' },\\n                value: mute.toString()\\n            });\\n    }\\n\\n    /**\\n     *\\n     * @param mute\\n     */\\n    sendVideoInfoPresence(mute) {\\n        this.addVideoInfoToPresence(mute);\\n        if (!this.connection) {\\n            return;\\n        }\\n        this.sendPresence();\\n    }\\n\\n    /**\\n     * Obtains the info about given media advertised in the MUC presence of\\n     * the participant identified by the given endpoint JID.\\n     * @param {string} endpointId the endpoint ID mapped to the participant\\n     * which corresponds to MUC nickname.\\n     * @param {MediaType} mediaType the type of the media for which presence\\n     * info will be obtained.\\n     * @return {PeerMediaInfo} presenceInfo an object with media presence\\n     * info or <tt>null</tt> either if there is no presence available or if\\n     * the media type given is invalid.\\n     */\\n    getMediaPresenceInfo(endpointId, mediaType) {\\n        // Will figure out current muted status by looking up owner's presence\\n        const pres = this.lastPresences[`${this.roomjid}/${endpointId}`];\\n\\n        if (!pres) {\\n            // No presence available\\n            return null;\\n        }\\n        const data = {\\n            muted: false, // unmuted by default\\n            videoType: undefined // no video type by default\\n        };\\n        let mutedNode = null;\\n\\n        if (mediaType === MediaType.AUDIO) {\\n            mutedNode = filterNodeFromPresenceJSON(pres, 'audiomuted');\\n        } else if (mediaType === MediaType.VIDEO) {\\n            mutedNode = filterNodeFromPresenceJSON(pres, 'videomuted');\\n            const videoTypeNode = filterNodeFromPresenceJSON(pres, 'videoType');\\n\\n            if (videoTypeNode.length > 0) {\\n                data.videoType = videoTypeNode[0].value;\\n            }\\n        } else {\\n            logger.error(`Unsupported media type: ${mediaType}`);\\n\\n            return null;\\n        }\\n\\n        data.muted = mutedNode.length > 0 && mutedNode[0].value === 'true';\\n\\n        return data;\\n    }\\n\\n    /**\\n     * Returns true if the SIP calls are supported and false otherwise\\n     */\\n    isSIPCallingSupported() {\\n        if (this.moderator) {\\n            return this.moderator.isSipGatewayEnabled();\\n        }\\n\\n        return false;\\n    }\\n\\n    /**\\n     * Dials a number.\\n     * @param number the number\\n     */\\n    dial(number) {\\n        return this.connection.rayo.dial(number, 'fromnumber',\\n            Strophe.getBareJidFromJid(this.myroomjid), this.password,\\n            this.focusMucJid);\\n    }\\n\\n    /**\\n     * Hangup an existing call\\n     */\\n    hangup() {\\n        return this.connection.rayo.hangup();\\n    }\\n\\n    /**\\n     * Returns the phone number for joining the conference.\\n     */\\n    getPhoneNumber() {\\n        return this.phoneNumber;\\n    }\\n\\n    /**\\n     * Returns the pin for joining the conference with phone.\\n     */\\n    getPhonePin() {\\n        return this.phonePin;\\n    }\\n\\n    /**\\n     * Mutes remote participant.\\n     * @param jid of the participant\\n     * @param mute\\n     */\\n    muteParticipant(jid, mute) {\\n        logger.info('set mute', mute);\\n        const iqToFocus = $iq(\\n            { to: this.focusMucJid,\\n                type: 'set' })\\n            .c('mute', {\\n                xmlns: 'http://jitsi.org/jitmeet/audio',\\n                jid\\n            })\\n            .t(mute.toString())\\n            .up();\\n\\n        this.connection.sendIQ(\\n            iqToFocus,\\n            result => logger.log('set mute', result),\\n            error => logger.log('set mute error', error));\\n    }\\n\\n    /**\\n     * TODO: Document\\n     * @param iq\\n     */\\n    onMute(iq) {\\n        const from = iq.getAttribute('from');\\n\\n        if (from !== this.focusMucJid) {\\n            logger.warn('Ignored mute from non focus peer');\\n\\n            return;\\n        }\\n        const mute = $(iq).find('mute');\\n\\n        if (mute.length && mute.text() === 'true') {\\n            this.eventEmitter.emit(XMPPEvents.AUDIO_MUTED_BY_FOCUS);\\n        } else {\\n            // XXX Why do we support anything but muting? Why do we encode the\\n            // value in the text of the element? Why do we use a separate XML\\n            // namespace?\\n            logger.warn('Ignoring a mute request which does not explicitly '\\n                + 'specify a positive mute command.');\\n        }\\n    }\\n\\n    /**\\n     * Leaves the room. Closes the jingle session.\\n     * @returns {Promise} which is resolved if XMPPEvents.MUC_LEFT is received\\n     * less than 5s after sending presence unavailable. Otherwise the promise is\\n     * rejected.\\n     */\\n    leave() {\\n        return new Promise((resolve, reject) => {\\n            const timeout = setTimeout(() => onMucLeft(true), 5000);\\n            const eventEmitter = this.eventEmitter;\\n\\n            /**\\n             *\\n             * @param doReject\\n             */\\n            function onMucLeft(doReject = false) {\\n                eventEmitter.removeListener(XMPPEvents.MUC_LEFT, onMucLeft);\\n                clearTimeout(timeout);\\n                if (doReject) {\\n                    // the timeout expired\\n                    reject(new Error('The timeout for the confirmation about '\\n                        + 'leaving the room expired.'));\\n                } else {\\n                    resolve();\\n                }\\n            }\\n            eventEmitter.on(XMPPEvents.MUC_LEFT, onMucLeft);\\n            this.doLeave();\\n        });\\n    }\\n}\\n\\n/* eslint-enable newline-per-chained-call */\\n\",\"/* global $, Promise */\\n\\nconst logger = require('jitsi-meet-logger').getLogger(__filename);\\n\\nimport { $iq, Strophe } from 'strophe.js';\\n\\nconst XMPPEvents = require('../../service/xmpp/XMPPEvents');\\nconst AuthenticationEvents\\n    = require('../../service/authentication/AuthenticationEvents');\\nconst GlobalOnErrorHandler = require('../util/GlobalOnErrorHandler');\\n\\nimport browser from '../browser';\\nimport Settings from '../settings/Settings';\\n\\n/**\\n *\\n * @param step\\n */\\nfunction createExpBackoffTimer(step) {\\n    let count = 1;\\n\\n    return function(reset) {\\n        // Reset call\\n        if (reset) {\\n            count = 1;\\n\\n            return;\\n        }\\n\\n        // Calculate next timeout\\n        const timeout = Math.pow(2, count - 1);\\n\\n        count += 1;\\n\\n        return timeout * step;\\n    };\\n}\\n\\n/* eslint-disable max-params */\\n\\n/**\\n *\\n * @param roomName\\n * @param xmpp\\n * @param emitter\\n * @param options\\n */\\nexport default function Moderator(roomName, xmpp, emitter, options) {\\n    this.roomName = roomName;\\n    this.xmppService = xmpp;\\n    this.getNextTimeout = createExpBackoffTimer(1000);\\n    this.getNextErrorTimeout = createExpBackoffTimer(1000);\\n\\n    // External authentication stuff\\n    this.externalAuthEnabled = false;\\n    this.options = options;\\n\\n    // Sip gateway can be enabled by configuring Jigasi host in config.js or\\n    // it will be enabled automatically if focus detects the component through\\n    // service discovery.\\n    this.sipGatewayEnabled\\n        = this.options.connection.hosts\\n            && this.options.connection.hosts.call_control !== undefined;\\n\\n    this.eventEmitter = emitter;\\n\\n    this.connection = this.xmppService.connection;\\n\\n    // FIXME: Message listener that talks to POPUP window\\n    /**\\n     *\\n     * @param event\\n     */\\n    function listener(event) {\\n        if (event.data && event.data.sessionId) {\\n            if (event.origin !== window.location.origin) {\\n                logger.warn(\\n                    `Ignoring sessionId from different origin: ${\\n                        event.origin}`);\\n\\n                return;\\n            }\\n            Settings.sessionId = event.data.sessionId;\\n\\n            // After popup is closed we will authenticate\\n        }\\n    }\\n\\n    // Register\\n    if (window.addEventListener) {\\n        window.addEventListener('message', listener, false);\\n    } else {\\n        window.attachEvent('onmessage', listener);\\n    }\\n}\\n\\n/* eslint-enable max-params */\\n\\nModerator.prototype.isExternalAuthEnabled = function() {\\n    return this.externalAuthEnabled;\\n};\\n\\nModerator.prototype.isSipGatewayEnabled = function() {\\n    return this.sipGatewayEnabled;\\n};\\n\\nModerator.prototype.onMucMemberLeft = function(jid) {\\n    logger.info(`Someone left is it focus ? ${jid}`);\\n    const resource = Strophe.getResourceFromJid(jid);\\n\\n    if (resource === 'focus') {\\n        logger.info(\\n            'Focus has left the room - leaving conference');\\n        this.eventEmitter.emit(XMPPEvents.FOCUS_LEFT);\\n    }\\n};\\n\\nModerator.prototype.setFocusUserJid = function(focusJid) {\\n    if (!this.focusUserJid) {\\n        this.focusUserJid = focusJid;\\n        logger.info(`Focus jid set to:  ${this.focusUserJid}`);\\n    }\\n};\\n\\nModerator.prototype.getFocusUserJid = function() {\\n    return this.focusUserJid;\\n};\\n\\nModerator.prototype.getFocusComponent = function() {\\n    // Get focus component address\\n    let focusComponent = this.options.connection.hosts.focus;\\n\\n    // If not specified use default:  'focus.domain'\\n\\n    if (!focusComponent) {\\n        focusComponent = `focus.${this.options.connection.hosts.domain}`;\\n    }\\n\\n    return focusComponent;\\n};\\n\\nModerator.prototype.createConferenceIq = function() {\\n    // Generate create conference IQ\\n    const elem = $iq({ to: this.getFocusComponent(),\\n        type: 'set' });\\n\\n    // Session Id used for authentication\\n    const { sessionId } = Settings;\\n    const machineUID = Settings.machineId;\\n    const config = this.options.conference;\\n\\n    logger.info(`Session ID: ${sessionId} machine UID: ${machineUID}`);\\n\\n    elem.c('conference', {\\n        xmlns: 'http://jitsi.org/protocol/focus',\\n        room: this.roomName,\\n        'machine-uid': machineUID\\n    });\\n\\n    if (sessionId) {\\n        elem.attrs({ 'session-id': sessionId });\\n    }\\n    if (this.options.connection.enforcedBridge !== undefined) {\\n        elem.c(\\n            'property', {\\n                name: 'enforcedBridge',\\n                value: this.options.connection.enforcedBridge\\n            }).up();\\n    }\\n\\n    // Tell the focus we have Jigasi configured\\n    if (this.options.connection.hosts !== undefined\\n        && this.options.connection.hosts.call_control !== undefined) {\\n        elem.c(\\n            'property', {\\n                name: 'call_control',\\n                value: this.options.connection.hosts.call_control\\n            }).up();\\n    }\\n    if (config.channelLastN !== undefined) {\\n        elem.c(\\n            'property', {\\n                name: 'channelLastN',\\n                value: config.channelLastN\\n            }).up();\\n    }\\n    elem.c(\\n        'property', {\\n            name: 'disableRtx',\\n            value: Boolean(config.disableRtx)\\n        }).up();\\n\\n    if (config.enableTcc !== undefined) {\\n        elem.c(\\n                'property', {\\n                    name: 'enableTcc',\\n                    value: Boolean(config.enableTcc)\\n                }).up();\\n    }\\n    if (config.enableRemb !== undefined) {\\n        elem.c(\\n                'property', {\\n                    name: 'enableRemb',\\n                    value: Boolean(config.enableRemb)\\n                }).up();\\n    }\\n    if (config.minParticipants !== undefined) {\\n        elem.c(\\n                'property', {\\n                    name: 'minParticipants',\\n                    value: config.minParticipants\\n                }).up();\\n    }\\n\\n    elem.c(\\n        'property', {\\n            name: 'enableLipSync',\\n            value: this.options.connection.enableLipSync !== false\\n        }).up();\\n    if (config.audioPacketDelay !== undefined) {\\n        elem.c(\\n            'property', {\\n                name: 'audioPacketDelay',\\n                value: config.audioPacketDelay\\n            }).up();\\n    }\\n    if (config.startBitrate) {\\n        elem.c(\\n            'property', {\\n                name: 'startBitrate',\\n                value: config.startBitrate\\n            }).up();\\n    }\\n    if (config.minBitrate) {\\n        elem.c(\\n            'property', {\\n                name: 'minBitrate',\\n                value: config.minBitrate\\n            }).up();\\n    }\\n    if (config.testing && config.testing.octo\\n        && typeof config.testing.octo.probability === 'number') {\\n        if (Math.random() < config.testing.octo.probability) {\\n            elem.c(\\n                'property', {\\n                    name: 'octo',\\n                    value: true\\n                }).up();\\n        }\\n    }\\n\\n    let openSctp;\\n\\n    switch (this.options.conference.openBridgeChannel) {\\n    case 'datachannel':\\n    case true:\\n    case undefined:\\n        openSctp = true;\\n        break;\\n    case 'websocket':\\n        openSctp = false;\\n        break;\\n    }\\n\\n    if (openSctp && !browser.supportsDataChannels()) {\\n        openSctp = false;\\n    }\\n\\n    elem.c(\\n        'property', {\\n            name: 'openSctp',\\n            value: openSctp\\n        }).up();\\n\\n    if (this.options.conference.startAudioMuted !== undefined) {\\n        elem.c(\\n            'property', {\\n                name: 'startAudioMuted',\\n                value: this.options.conference.startAudioMuted\\n            }).up();\\n    }\\n    if (this.options.conference.startVideoMuted !== undefined) {\\n        elem.c(\\n            'property', {\\n                name: 'startVideoMuted',\\n                value: this.options.conference.startVideoMuted\\n            }).up();\\n    }\\n    if (this.options.conference.stereo !== undefined) {\\n        elem.c(\\n            'property', {\\n                name: 'stereo',\\n                value: this.options.conference.stereo\\n            }).up();\\n    }\\n    if (this.options.conference.useRoomAsSharedDocumentName !== undefined) {\\n        elem.c(\\n            'property', {\\n                name: 'useRoomAsSharedDocumentName',\\n                value: this.options.conference.useRoomAsSharedDocumentName\\n            }).up();\\n    }\\n    elem.up();\\n\\n    return elem;\\n};\\n\\n\\nModerator.prototype.parseSessionId = function(resultIq) {\\n    // eslint-disable-next-line newline-per-chained-call\\n    const sessionId = $(resultIq).find('conference').attr('session-id');\\n\\n    if (sessionId) {\\n        logger.info(`Received sessionId:  ${sessionId}`);\\n        Settings.sessionId = sessionId;\\n    }\\n};\\n\\nModerator.prototype.parseConfigOptions = function(resultIq) {\\n    // eslint-disable-next-line newline-per-chained-call\\n    this.setFocusUserJid($(resultIq).find('conference').attr('focusjid'));\\n\\n    const authenticationEnabled\\n        = $(resultIq).find(\\n            '>conference>property'\\n            + '[name=\\\\'authentication\\\\'][value=\\\\'true\\\\']').length > 0;\\n\\n    logger.info(`Authentication enabled: ${authenticationEnabled}`);\\n\\n    this.externalAuthEnabled = $(resultIq).find(\\n        '>conference>property'\\n            + '[name=\\\\'externalAuth\\\\'][value=\\\\'true\\\\']').length > 0;\\n\\n    logger.info(\\n        `External authentication enabled: ${this.externalAuthEnabled}`);\\n\\n    if (!this.externalAuthEnabled) {\\n        // We expect to receive sessionId in 'internal' authentication mode\\n        this.parseSessionId(resultIq);\\n    }\\n\\n    // eslint-disable-next-line newline-per-chained-call\\n    const authIdentity = $(resultIq).find('>conference').attr('identity');\\n\\n    this.eventEmitter.emit(AuthenticationEvents.IDENTITY_UPDATED,\\n        authenticationEnabled, authIdentity);\\n\\n    // Check if focus has auto-detected Jigasi component(this will be also\\n    // included if we have passed our host from the config)\\n    if ($(resultIq).find(\\n        '>conference>property'\\n        + '[name=\\\\'sipGatewayEnabled\\\\'][value=\\\\'true\\\\']').length) {\\n        this.sipGatewayEnabled = true;\\n    }\\n\\n    logger.info(`Sip gateway enabled:  ${this.sipGatewayEnabled}`);\\n};\\n\\n// FIXME We need to show the fact that we're waiting for the focus to the user\\n// (or that the focus is not available)\\n/**\\n * Allocates the conference focus.\\n *\\n * @param {Function} callback - the function to be called back upon the\\n * successful allocation of the conference focus\\n * @returns {Promise} - Resolved when Jicofo allows to join the room. It's never\\n * rejected and it'll keep on pinging Jicofo forever.\\n */\\nModerator.prototype.allocateConferenceFocus = function() {\\n    return new Promise(resolve => {\\n        // Try to use focus user JID from the config\\n        this.setFocusUserJid(this.options.connection.focusUserJid);\\n\\n        // Send create conference IQ\\n        this.connection.sendIQ(\\n            this.createConferenceIq(),\\n            result => this._allocateConferenceFocusSuccess(result, resolve),\\n            error => this._allocateConferenceFocusError(error, resolve));\\n\\n        // XXX We're pressed for time here because we're beginning a complex\\n        // and/or lengthy conference-establishment process which supposedly\\n        // involves multiple RTTs. We don't have the time to wait for Strophe to\\n        // decide to send our IQ.\\n        this.connection.flush();\\n    });\\n};\\n\\n/**\\n * Invoked by {@link #allocateConferenceFocus} upon its request receiving an\\n * error result.\\n *\\n * @param error - the error result of the request that\\n * {@link #allocateConferenceFocus} sent\\n * @param {Function} callback - the function to be called back upon the\\n * successful allocation of the conference focus\\n */\\nModerator.prototype._allocateConferenceFocusError = function(error, callback) {\\n    // If the session is invalid, remove and try again without session ID to get\\n    // a new one\\n    const invalidSession\\n        = $(error).find('>error>session-invalid').length\\n            || $(error).find('>error>not-acceptable').length;\\n\\n    if (invalidSession) {\\n        logger.info('Session expired! - removing');\\n        Settings.sessionId = undefined;\\n    }\\n    if ($(error).find('>error>graceful-shutdown').length) {\\n        this.eventEmitter.emit(XMPPEvents.GRACEFUL_SHUTDOWN);\\n\\n        return;\\n    }\\n\\n    // Check for error returned by the reservation system\\n    const reservationErr = $(error).find('>error>reservation-error');\\n\\n    if (reservationErr.length) {\\n        // Trigger error event\\n        const errorCode = reservationErr.attr('error-code');\\n        const errorTextNode = $(error).find('>error>text');\\n        let errorMsg;\\n\\n        if (errorTextNode) {\\n            errorMsg = errorTextNode.text();\\n        }\\n        this.eventEmitter.emit(\\n            XMPPEvents.RESERVATION_ERROR,\\n            errorCode,\\n            errorMsg);\\n\\n        return;\\n    }\\n\\n    // Not authorized to create new room\\n    if ($(error).find('>error>not-authorized').length) {\\n        logger.warn('Unauthorized to start the conference', error);\\n        const toDomain = Strophe.getDomainFromJid(error.getAttribute('to'));\\n\\n        if (toDomain !== this.options.connection.hosts.anonymousdomain) {\\n            // FIXME \\\"is external\\\" should come either from the focus or\\n            // config.js\\n            this.externalAuthEnabled = true;\\n        }\\n        this.eventEmitter.emit(XMPPEvents.AUTHENTICATION_REQUIRED);\\n\\n        return;\\n    }\\n    const waitMs = this.getNextErrorTimeout();\\n    const errmsg = `Focus error, retry after ${waitMs}`;\\n\\n    GlobalOnErrorHandler.callErrorHandler(new Error(errmsg));\\n    logger.error(errmsg, error);\\n\\n    // Show message\\n    const focusComponent = this.getFocusComponent();\\n    const retrySec = waitMs / 1000;\\n\\n    // FIXME: message is duplicated ? Do not show in case of session invalid\\n    // which means just a retry\\n\\n    if (!invalidSession) {\\n        this.eventEmitter.emit(\\n            XMPPEvents.FOCUS_DISCONNECTED,\\n            focusComponent,\\n            retrySec);\\n    }\\n\\n    // Reset response timeout\\n    this.getNextTimeout(true);\\n    window.setTimeout(\\n        () => this.allocateConferenceFocus().then(callback),\\n        waitMs);\\n};\\n\\n/**\\n * Invoked by {@link #allocateConferenceFocus} upon its request receiving a\\n * success (i.e. non-error) result.\\n *\\n * @param result - the success (i.e. non-error) result of the request that\\n * {@link #allocateConferenceFocus} sent\\n * @param {Function} callback - the function to be called back upon the\\n * successful allocation of the conference focus\\n */\\nModerator.prototype._allocateConferenceFocusSuccess = function(\\n        result,\\n        callback) {\\n    // Setup config options\\n    this.parseConfigOptions(result);\\n\\n    // Reset the error timeout (because we haven't failed here).\\n    this.getNextErrorTimeout(true);\\n\\n    // eslint-disable-next-line newline-per-chained-call\\n    if ($(result).find('conference').attr('ready') === 'true') {\\n        // Reset the non-error timeout (because we've succeeded here).\\n        this.getNextTimeout(true);\\n\\n        // Exec callback\\n        callback();\\n    } else {\\n        const waitMs = this.getNextTimeout();\\n\\n        logger.info(`Waiting for the focus... ${waitMs}`);\\n        window.setTimeout(\\n            () => this.allocateConferenceFocus().then(callback),\\n            waitMs);\\n    }\\n};\\n\\nModerator.prototype.authenticate = function() {\\n    return new Promise((resolve, reject) => {\\n        this.connection.sendIQ(\\n            this.createConferenceIq(),\\n            result => {\\n                this.parseSessionId(result);\\n                resolve();\\n            },\\n            errorIq => reject({\\n                error: $(errorIq).find('iq>error :first')\\n                    .prop('tagName'),\\n                message: $(errorIq).find('iq>error>text')\\n                    .text()\\n            })\\n        );\\n    });\\n};\\n\\nModerator.prototype.getLoginUrl = function(urlCallback, failureCallback) {\\n    this._getLoginUrl(/* popup */ false, urlCallback, failureCallback);\\n};\\n\\n/**\\n *\\n * @param {boolean} popup false for {@link Moderator#getLoginUrl} or true for\\n * {@link Moderator#getPopupLoginUrl}\\n * @param urlCb\\n * @param failureCb\\n */\\nModerator.prototype._getLoginUrl = function(popup, urlCb, failureCb) {\\n    const iq = $iq({ to: this.getFocusComponent(),\\n        type: 'get' });\\n    const attrs = {\\n        xmlns: 'http://jitsi.org/protocol/focus',\\n        room: this.roomName,\\n        'machine-uid': Settings.machineId\\n    };\\n    let str = 'auth url'; // for logger\\n\\n    if (popup) {\\n        attrs.popup = true;\\n        str = `POPUP ${str}`;\\n    }\\n    iq.c('login-url', attrs);\\n\\n    /**\\n     * Implements a failure callback which reports an error message and an error\\n     * through (1) GlobalOnErrorHandler, (2) logger, and (3) failureCb.\\n     *\\n     * @param {string} errmsg the error messsage to report\\n     * @param {*} error the error to report (in addition to errmsg)\\n     */\\n    function reportError(errmsg, err) {\\n        GlobalOnErrorHandler.callErrorHandler(new Error(errmsg));\\n        logger.error(errmsg, err);\\n        failureCb(err);\\n    }\\n    this.connection.sendIQ(\\n        iq,\\n        result => {\\n            // eslint-disable-next-line newline-per-chained-call\\n            let url = $(result).find('login-url').attr('url');\\n\\n            url = decodeURIComponent(url);\\n            if (url) {\\n                logger.info(`Got ${str}: ${url}`);\\n                urlCb(url);\\n            } else {\\n                reportError(`Failed to get ${str} from the focus`, result);\\n            }\\n        },\\n        reportError.bind(undefined, `Get ${str} error`)\\n    );\\n};\\n\\nModerator.prototype.getPopupLoginUrl = function(urlCallback, failureCallback) {\\n    this._getLoginUrl(/* popup */ true, urlCallback, failureCallback);\\n};\\n\\nModerator.prototype.logout = function(callback) {\\n    const iq = $iq({ to: this.getFocusComponent(),\\n        type: 'set' });\\n    const { sessionId } = Settings;\\n\\n    if (!sessionId) {\\n        callback();\\n\\n        return;\\n    }\\n    iq.c('logout', {\\n        xmlns: 'http://jitsi.org/protocol/focus',\\n        'session-id': sessionId\\n    });\\n    this.connection.sendIQ(\\n        iq,\\n        result => {\\n            // eslint-disable-next-line newline-per-chained-call\\n            let logoutUrl = $(result).find('logout').attr('logout-url');\\n\\n            if (logoutUrl) {\\n                logoutUrl = decodeURIComponent(logoutUrl);\\n            }\\n            logger.info(`Log out OK, url: ${logoutUrl}`, result);\\n            Settings.sessionId = undefined;\\n            callback(logoutUrl);\\n        },\\n        error => {\\n            const errmsg = 'Logout error';\\n\\n            GlobalOnErrorHandler.callErrorHandler(new Error(errmsg));\\n            logger.error(errmsg, error);\\n        }\\n    );\\n};\\n\",\"/* global $, __filename */\\n\\nimport {\\n    ACTION_JINGLE_TR_RECEIVED,\\n    ACTION_JINGLE_TR_SUCCESS,\\n    createJingleEvent\\n} from '../../service/statistics/AnalyticsEvents';\\nimport { getLogger } from 'jitsi-meet-logger';\\nimport { $iq, Strophe } from 'strophe.js';\\n\\nimport XMPPEvents from '../../service/xmpp/XMPPEvents';\\nimport GlobalOnErrorHandler from '../util/GlobalOnErrorHandler';\\nimport RandomUtil from '../util/RandomUtil';\\nimport Statistics from '../statistics/statistics';\\n\\nimport JingleSessionPC from './JingleSessionPC';\\nimport ConnectionPlugin from './ConnectionPlugin';\\n\\nconst logger = getLogger(__filename);\\n\\n// XXX Strophe is build around the idea of chaining function calls so allow long\\n// function call chains.\\n/* eslint-disable newline-per-chained-call */\\n\\n/**\\n *\\n */\\nclass JingleConnectionPlugin extends ConnectionPlugin {\\n    /**\\n     * Creates new <tt>JingleConnectionPlugin</tt>\\n     * @param {XMPP} xmpp\\n     * @param {EventEmitter} eventEmitter\\n     * @param {Object} iceConfig an object that holds the iceConfig to be passed\\n     * to the p2p and the jvb <tt>PeerConnection</tt>.\\n     */\\n    constructor(xmpp, eventEmitter, iceConfig) {\\n        super();\\n        this.xmpp = xmpp;\\n        this.eventEmitter = eventEmitter;\\n        this.sessions = {};\\n        this.jvbIceConfig = iceConfig.jvb;\\n        this.p2pIceConfig = iceConfig.p2p;\\n        this.mediaConstraints = {\\n            offerToReceiveAudio: true,\\n            offerToReceiveVideo: true\\n        };\\n    }\\n\\n    /**\\n     *\\n     * @param connection\\n     */\\n    init(connection) {\\n        super.init(connection);\\n        this.connection.addHandler(this.onJingle.bind(this),\\n            'urn:xmpp:jingle:1', 'iq', 'set', null, null);\\n    }\\n\\n    /**\\n     *\\n     * @param iq\\n     */\\n    onJingle(iq) {\\n        const sid = $(iq).find('jingle').attr('sid');\\n        const action = $(iq).find('jingle').attr('action');\\n        const fromJid = iq.getAttribute('from');\\n\\n        // send ack first\\n        const ack = $iq({ type: 'result',\\n            to: fromJid,\\n            id: iq.getAttribute('id')\\n        });\\n\\n        logger.log(`on jingle ${action} from ${fromJid}`, iq);\\n        let sess = this.sessions[sid];\\n\\n        if (action !== 'session-initiate') {\\n            if (!sess) {\\n                ack.attrs({ type: 'error' });\\n                ack.c('error', { type: 'cancel' })\\n                    .c('item-not-found', {\\n                        xmlns: 'urn:ietf:params:xml:ns:xmpp-stanzas'\\n                    })\\n                    .up()\\n                    .c('unknown-session', {\\n                        xmlns: 'urn:xmpp:jingle:errors:1'\\n                    });\\n                logger.warn('invalid session id', iq);\\n                this.connection.send(ack);\\n\\n                return true;\\n            }\\n\\n            // local jid is not checked\\n            if (fromJid !== sess.remoteJid) {\\n                logger.warn(\\n                    'jid mismatch for session id', sid, sess.remoteJid, iq);\\n                ack.attrs({ type: 'error' });\\n                ack.c('error', { type: 'cancel' })\\n                    .c('item-not-found', {\\n                        xmlns: 'urn:ietf:params:xml:ns:xmpp-stanzas'\\n                    })\\n                    .up()\\n                    .c('unknown-session', {\\n                        xmlns: 'urn:xmpp:jingle:errors:1'\\n                    });\\n                this.connection.send(ack);\\n\\n                return true;\\n            }\\n        } else if (sess !== undefined) {\\n            // Existing session with same session id. This might be out-of-order\\n            // if the sess.remoteJid is the same as from.\\n            ack.attrs({ type: 'error' });\\n            ack.c('error', { type: 'cancel' })\\n                .c('service-unavailable', {\\n                    xmlns: 'urn:ietf:params:xml:ns:xmpp-stanzas'\\n                })\\n                .up();\\n            logger.warn('duplicate session id', sid, iq);\\n            this.connection.send(ack);\\n\\n            return true;\\n        }\\n        const now = window.performance.now();\\n\\n        // FIXME that should work most of the time, but we'd have to\\n        // think how secure it is to assume that user with \\\"focus\\\"\\n        // nickname is Jicofo.\\n        const isP2P = Strophe.getResourceFromJid(fromJid) !== 'focus';\\n\\n        // see http://xmpp.org/extensions/xep-0166.html#concepts-session\\n\\n        switch (action) {\\n        case 'session-initiate': {\\n            logger.log('(TIME) received session-initiate:\\\\t', now);\\n            const startMuted = $(iq).find('jingle>startmuted');\\n\\n            if (startMuted && startMuted.length > 0) {\\n                const audioMuted = startMuted.attr('audio');\\n                const videoMuted = startMuted.attr('video');\\n\\n                this.eventEmitter.emit(\\n                    XMPPEvents.START_MUTED_FROM_FOCUS,\\n                    audioMuted === 'true',\\n                    videoMuted === 'true');\\n            }\\n\\n            logger.info(\\n                `Marking session from ${fromJid\\n                } as ${isP2P ? '' : '*not*'} P2P`);\\n            sess\\n                = new JingleSessionPC(\\n                    $(iq).find('jingle').attr('sid'),\\n                    $(iq).attr('to'),\\n                    fromJid,\\n                    this.connection,\\n                    this.mediaConstraints,\\n                    isP2P ? this.p2pIceConfig : this.jvbIceConfig,\\n                    isP2P,\\n                    /* initiator */ false);\\n\\n            this.sessions[sess.sid] = sess;\\n\\n            this.eventEmitter.emit(XMPPEvents.CALL_INCOMING,\\n                sess, $(iq).find('>jingle'), now);\\n            break;\\n        }\\n        case 'session-accept': {\\n            this.eventEmitter.emit(\\n                XMPPEvents.CALL_ACCEPTED, sess, $(iq).find('>jingle'));\\n            break;\\n        }\\n        case 'content-modify': {\\n            sess.modifyContents($(iq).find('>jingle'));\\n            break;\\n        }\\n        case 'transport-info': {\\n            this.eventEmitter.emit(\\n                XMPPEvents.TRANSPORT_INFO, sess, $(iq).find('>jingle'));\\n            break;\\n        }\\n        case 'session-terminate': {\\n            logger.log('terminating...', sess.sid);\\n            let reasonCondition = null;\\n            let reasonText = null;\\n\\n            if ($(iq).find('>jingle>reason').length) {\\n                reasonCondition\\n                    = $(iq).find('>jingle>reason>:first')[0].tagName;\\n                reasonText = $(iq).find('>jingle>reason>text').text();\\n            }\\n            this.terminate(sess.sid, reasonCondition, reasonText);\\n            this.eventEmitter.emit(XMPPEvents.CALL_ENDED,\\n                sess, reasonCondition, reasonText);\\n            break;\\n        }\\n        case 'transport-replace':\\n            logger.info('(TIME) Start transport replace', now);\\n            Statistics.sendAnalytics(createJingleEvent(\\n                ACTION_JINGLE_TR_RECEIVED,\\n                {\\n                    p2p: isP2P,\\n                    value: now\\n                }));\\n\\n            sess.replaceTransport($(iq).find('>jingle'), () => {\\n                const successTime = window.performance.now();\\n\\n                logger.info('(TIME) Transport replace success!', successTime);\\n                Statistics.sendAnalytics(createJingleEvent(\\n                    ACTION_JINGLE_TR_SUCCESS,\\n                    {\\n                        p2p: isP2P,\\n                        value: successTime\\n                    }));\\n            }, error => {\\n                GlobalOnErrorHandler.callErrorHandler(error);\\n                logger.error('Transport replace failed', error);\\n                sess.sendTransportReject();\\n            });\\n            break;\\n        case 'addsource': // FIXME: proprietary, un-jingleish\\n        case 'source-add': // FIXME: proprietary\\n            sess.addRemoteStream($(iq).find('>jingle>content'));\\n            break;\\n        case 'removesource': // FIXME: proprietary, un-jingleish\\n        case 'source-remove': // FIXME: proprietary\\n            sess.removeRemoteStream($(iq).find('>jingle>content'));\\n            break;\\n        default:\\n            logger.warn('jingle action not implemented', action);\\n            ack.attrs({ type: 'error' });\\n            ack.c('error', { type: 'cancel' })\\n                .c('bad-request',\\n                    { xmlns: 'urn:ietf:params:xml:ns:xmpp-stanzas' })\\n                .up();\\n            break;\\n        }\\n        this.connection.send(ack);\\n\\n        return true;\\n    }\\n\\n    /**\\n     * Creates new <tt>JingleSessionPC</tt> meant to be used in a direct P2P\\n     * connection, configured as 'initiator'.\\n     * @param {string} me our JID\\n     * @param {string} peer remote participant's JID\\n     * @return {JingleSessionPC}\\n     */\\n    newP2PJingleSession(me, peer) {\\n        const sess\\n            = new JingleSessionPC(\\n                RandomUtil.randomHexString(12),\\n                me,\\n                peer,\\n                this.connection,\\n                this.mediaConstraints,\\n                this.p2pIceConfig,\\n                /* P2P */ true,\\n                /* initiator */ true);\\n\\n        this.sessions[sess.sid] = sess;\\n\\n        return sess;\\n    }\\n\\n    /**\\n     *\\n     * @param sid\\n     * @param reasonCondition\\n     * @param reasonText\\n     */\\n    terminate(sid, reasonCondition, reasonText) {\\n        if (this.sessions.hasOwnProperty(sid)) {\\n            if (this.sessions[sid].state !== 'ended') {\\n                this.sessions[sid].onTerminated(reasonCondition, reasonText);\\n            }\\n            delete this.sessions[sid];\\n        }\\n    }\\n\\n    /**\\n     *\\n     */\\n    getStunAndTurnCredentials() {\\n        // get stun and turn configuration from server via xep-0215\\n        // uses time-limited credentials as described in\\n        // http://tools.ietf.org/html/draft-uberti-behave-turn-rest-00\\n        //\\n        // See https://modules.prosody.im/mod_turncredentials.html\\n        // for a prosody module which implements this.\\n        //\\n        // Currently, this doesn't work with updateIce and therefore credentials\\n        // with a long validity have to be fetched before creating the\\n        // peerconnection.\\n        // TODO: implement refresh via updateIce as described in\\n        //      https://code.google.com/p/webrtc/issues/detail?id=1650\\n        this.connection.sendIQ(\\n            $iq({ type: 'get',\\n                to: this.connection.domain })\\n                .c('services', { xmlns: 'urn:xmpp:extdisco:1' }),\\n            res => {\\n                const iceservers = [];\\n\\n                $(res).find('>services>service').each((idx, el) => {\\n                    // eslint-disable-next-line no-param-reassign\\n                    el = $(el);\\n                    const dict = {};\\n                    const type = el.attr('type');\\n\\n                    switch (type) {\\n                    case 'stun':\\n                        dict.url = `stun:${el.attr('host')}`;\\n                        if (el.attr('port')) {\\n                            dict.url += `:${el.attr('port')}`;\\n                        }\\n                        iceservers.push(dict);\\n                        break;\\n                    case 'turn':\\n                    case 'turns': {\\n                        dict.url = `${type}:`;\\n                        const username = el.attr('username');\\n\\n                        // https://code.google.com/p/webrtc/issues/detail\\n                        // ?id=1508\\n\\n                        if (username) {\\n                            const match\\n                                = navigator.userAgent.match(\\n                                    /Chrom(e|ium)\\\\/([0-9]+)\\\\./);\\n\\n                            if (match && parseInt(match[2], 10) < 28) {\\n                                dict.url += `${username}@`;\\n                            } else {\\n                                // only works in M28\\n                                dict.username = username;\\n                            }\\n                        }\\n                        dict.url += el.attr('host');\\n                        const port = el.attr('port');\\n\\n                        if (port) {\\n                            dict.url += `:${el.attr('port')}`;\\n                        }\\n                        const transport = el.attr('transport');\\n\\n                        if (transport && transport !== 'udp') {\\n                            dict.url += `?transport=${transport}`;\\n                        }\\n\\n                        dict.credential = el.attr('password')\\n                                || dict.credential;\\n                        iceservers.push(dict);\\n                        break;\\n                    }\\n                    }\\n                });\\n\\n                const options = this.xmpp.options;\\n\\n                if (options.useStunTurn) {\\n                    // we want to filter and leave only tcp/turns candidates\\n                    // which make sense for the jvb connections\\n                    this.jvbIceConfig.iceServers\\n                        = iceservers.filter(s => s.url.startsWith('turns'));\\n                }\\n\\n                if (options.p2p && options.p2p.useStunTurn) {\\n                    this.p2pIceConfig.iceServers = iceservers;\\n                }\\n\\n            }, err => {\\n                logger.warn('getting turn credentials failed', err);\\n                logger.warn('is mod_turncredentials or similar installed?');\\n            });\\n\\n        // implement push?\\n    }\\n\\n    /**\\n     * Returns the data saved in 'updateLog' in a format to be logged.\\n     */\\n    getLog() {\\n        const data = {};\\n\\n        Object.keys(this.sessions).forEach(sid => {\\n            const session = this.sessions[sid];\\n            const pc = session.peerconnection;\\n\\n            if (pc && pc.updateLog) {\\n                // FIXME: should probably be a .dump call\\n                data[`jingle_${sid}`] = {\\n                    updateLog: pc.updateLog,\\n                    stats: pc.stats,\\n                    url: window.location.href\\n                };\\n            }\\n        });\\n\\n        return data;\\n    }\\n}\\n\\n/* eslint-enable newline-per-chained-call */\\n\\n/**\\n *\\n * @param XMPP\\n * @param eventEmitter\\n * @param iceConfig\\n */\\nexport default function initJingle(XMPP, eventEmitter, iceConfig) {\\n    Strophe.addConnectionPlugin(\\n        'jingle',\\n        new JingleConnectionPlugin(XMPP, eventEmitter, iceConfig));\\n}\\n\",\"/*!\\n * async\\n * https://github.com/caolan/async\\n *\\n * Copyright 2010-2014 Caolan McMahon\\n * Released under the MIT license\\n */\\n/*jshint onevar: false, indent:4 */\\n/*global setImmediate: false, setTimeout: false, console: false */\\n(function () {\\n\\n    var async = {};\\n\\n    // global on the server, window in the browser\\n    var root, previous_async;\\n\\n    root = this;\\n    if (root != null) {\\n      previous_async = root.async;\\n    }\\n\\n    async.noConflict = function () {\\n        root.async = previous_async;\\n        return async;\\n    };\\n\\n    function only_once(fn) {\\n        var called = false;\\n        return function() {\\n            if (called) throw new Error(\\\"Callback was already called.\\\");\\n            called = true;\\n            fn.apply(root, arguments);\\n        }\\n    }\\n\\n    //// cross-browser compatiblity functions ////\\n\\n    var _toString = Object.prototype.toString;\\n\\n    var _isArray = Array.isArray || function (obj) {\\n        return _toString.call(obj) === '[object Array]';\\n    };\\n\\n    var _each = function (arr, iterator) {\\n        if (arr.forEach) {\\n            return arr.forEach(iterator);\\n        }\\n        for (var i = 0; i < arr.length; i += 1) {\\n            iterator(arr[i], i, arr);\\n        }\\n    };\\n\\n    var _map = function (arr, iterator) {\\n        if (arr.map) {\\n            return arr.map(iterator);\\n        }\\n        var results = [];\\n        _each(arr, function (x, i, a) {\\n            results.push(iterator(x, i, a));\\n        });\\n        return results;\\n    };\\n\\n    var _reduce = function (arr, iterator, memo) {\\n        if (arr.reduce) {\\n            return arr.reduce(iterator, memo);\\n        }\\n        _each(arr, function (x, i, a) {\\n            memo = iterator(memo, x, i, a);\\n        });\\n        return memo;\\n    };\\n\\n    var _keys = function (obj) {\\n        if (Object.keys) {\\n            return Object.keys(obj);\\n        }\\n        var keys = [];\\n        for (var k in obj) {\\n            if (obj.hasOwnProperty(k)) {\\n                keys.push(k);\\n            }\\n        }\\n        return keys;\\n    };\\n\\n    //// exported async module functions ////\\n\\n    //// nextTick implementation with browser-compatible fallback ////\\n    if (typeof process === 'undefined' || !(process.nextTick)) {\\n        if (typeof setImmediate === 'function') {\\n            async.nextTick = function (fn) {\\n                // not a direct alias for IE10 compatibility\\n                setImmediate(fn);\\n            };\\n            async.setImmediate = async.nextTick;\\n        }\\n        else {\\n            async.nextTick = function (fn) {\\n                setTimeout(fn, 0);\\n            };\\n            async.setImmediate = async.nextTick;\\n        }\\n    }\\n    else {\\n        async.nextTick = process.nextTick;\\n        if (typeof setImmediate !== 'undefined') {\\n            async.setImmediate = function (fn) {\\n              // not a direct alias for IE10 compatibility\\n              setImmediate(fn);\\n            };\\n        }\\n        else {\\n            async.setImmediate = async.nextTick;\\n        }\\n    }\\n\\n    async.each = function (arr, iterator, callback) {\\n        callback = callback || function () {};\\n        if (!arr.length) {\\n            return callback();\\n        }\\n        var completed = 0;\\n        _each(arr, function (x) {\\n            iterator(x, only_once(done) );\\n        });\\n        function done(err) {\\n          if (err) {\\n              callback(err);\\n              callback = function () {};\\n          }\\n          else {\\n              completed += 1;\\n              if (completed >= arr.length) {\\n                  callback();\\n              }\\n          }\\n        }\\n    };\\n    async.forEach = async.each;\\n\\n    async.eachSeries = function (arr, iterator, callback) {\\n        callback = callback || function () {};\\n        if (!arr.length) {\\n            return callback();\\n        }\\n        var completed = 0;\\n        var iterate = function () {\\n            iterator(arr[completed], function (err) {\\n                if (err) {\\n                    callback(err);\\n                    callback = function () {};\\n                }\\n                else {\\n                    completed += 1;\\n                    if (completed >= arr.length) {\\n                        callback();\\n                    }\\n                    else {\\n                        iterate();\\n                    }\\n                }\\n            });\\n        };\\n        iterate();\\n    };\\n    async.forEachSeries = async.eachSeries;\\n\\n    async.eachLimit = function (arr, limit, iterator, callback) {\\n        var fn = _eachLimit(limit);\\n        fn.apply(null, [arr, iterator, callback]);\\n    };\\n    async.forEachLimit = async.eachLimit;\\n\\n    var _eachLimit = function (limit) {\\n\\n        return function (arr, iterator, callback) {\\n            callback = callback || function () {};\\n            if (!arr.length || limit <= 0) {\\n                return callback();\\n            }\\n            var completed = 0;\\n            var started = 0;\\n            var running = 0;\\n\\n            (function replenish () {\\n                if (completed >= arr.length) {\\n                    return callback();\\n                }\\n\\n                while (running < limit && started < arr.length) {\\n                    started += 1;\\n                    running += 1;\\n                    iterator(arr[started - 1], function (err) {\\n                        if (err) {\\n                            callback(err);\\n                            callback = function () {};\\n                        }\\n                        else {\\n                            completed += 1;\\n                            running -= 1;\\n                            if (completed >= arr.length) {\\n                                callback();\\n                            }\\n                            else {\\n                                replenish();\\n                            }\\n                        }\\n                    });\\n                }\\n            })();\\n        };\\n    };\\n\\n\\n    var doParallel = function (fn) {\\n        return function () {\\n            var args = Array.prototype.slice.call(arguments);\\n            return fn.apply(null, [async.each].concat(args));\\n        };\\n    };\\n    var doParallelLimit = function(limit, fn) {\\n        return function () {\\n            var args = Array.prototype.slice.call(arguments);\\n            return fn.apply(null, [_eachLimit(limit)].concat(args));\\n        };\\n    };\\n    var doSeries = function (fn) {\\n        return function () {\\n            var args = Array.prototype.slice.call(arguments);\\n            return fn.apply(null, [async.eachSeries].concat(args));\\n        };\\n    };\\n\\n\\n    var _asyncMap = function (eachfn, arr, iterator, callback) {\\n        arr = _map(arr, function (x, i) {\\n            return {index: i, value: x};\\n        });\\n        if (!callback) {\\n            eachfn(arr, function (x, callback) {\\n                iterator(x.value, function (err) {\\n                    callback(err);\\n                });\\n            });\\n        } else {\\n            var results = [];\\n            eachfn(arr, function (x, callback) {\\n                iterator(x.value, function (err, v) {\\n                    results[x.index] = v;\\n                    callback(err);\\n                });\\n            }, function (err) {\\n                callback(err, results);\\n            });\\n        }\\n    };\\n    async.map = doParallel(_asyncMap);\\n    async.mapSeries = doSeries(_asyncMap);\\n    async.mapLimit = function (arr, limit, iterator, callback) {\\n        return _mapLimit(limit)(arr, iterator, callback);\\n    };\\n\\n    var _mapLimit = function(limit) {\\n        return doParallelLimit(limit, _asyncMap);\\n    };\\n\\n    // reduce only has a series version, as doing reduce in parallel won't\\n    // work in many situations.\\n    async.reduce = function (arr, memo, iterator, callback) {\\n        async.eachSeries(arr, function (x, callback) {\\n            iterator(memo, x, function (err, v) {\\n                memo = v;\\n                callback(err);\\n            });\\n        }, function (err) {\\n            callback(err, memo);\\n        });\\n    };\\n    // inject alias\\n    async.inject = async.reduce;\\n    // foldl alias\\n    async.foldl = async.reduce;\\n\\n    async.reduceRight = function (arr, memo, iterator, callback) {\\n        var reversed = _map(arr, function (x) {\\n            return x;\\n        }).reverse();\\n        async.reduce(reversed, memo, iterator, callback);\\n    };\\n    // foldr alias\\n    async.foldr = async.reduceRight;\\n\\n    var _filter = function (eachfn, arr, iterator, callback) {\\n        var results = [];\\n        arr = _map(arr, function (x, i) {\\n            return {index: i, value: x};\\n        });\\n        eachfn(arr, function (x, callback) {\\n            iterator(x.value, function (v) {\\n                if (v) {\\n                    results.push(x);\\n                }\\n                callback();\\n            });\\n        }, function (err) {\\n            callback(_map(results.sort(function (a, b) {\\n                return a.index - b.index;\\n            }), function (x) {\\n                return x.value;\\n            }));\\n        });\\n    };\\n    async.filter = doParallel(_filter);\\n    async.filterSeries = doSeries(_filter);\\n    // select alias\\n    async.select = async.filter;\\n    async.selectSeries = async.filterSeries;\\n\\n    var _reject = function (eachfn, arr, iterator, callback) {\\n        var results = [];\\n        arr = _map(arr, function (x, i) {\\n            return {index: i, value: x};\\n        });\\n        eachfn(arr, function (x, callback) {\\n            iterator(x.value, function (v) {\\n                if (!v) {\\n                    results.push(x);\\n                }\\n                callback();\\n            });\\n        }, function (err) {\\n            callback(_map(results.sort(function (a, b) {\\n                return a.index - b.index;\\n            }), function (x) {\\n                return x.value;\\n            }));\\n        });\\n    };\\n    async.reject = doParallel(_reject);\\n    async.rejectSeries = doSeries(_reject);\\n\\n    var _detect = function (eachfn, arr, iterator, main_callback) {\\n        eachfn(arr, function (x, callback) {\\n            iterator(x, function (result) {\\n                if (result) {\\n                    main_callback(x);\\n                    main_callback = function () {};\\n                }\\n                else {\\n                    callback();\\n                }\\n            });\\n        }, function (err) {\\n            main_callback();\\n        });\\n    };\\n    async.detect = doParallel(_detect);\\n    async.detectSeries = doSeries(_detect);\\n\\n    async.some = function (arr, iterator, main_callback) {\\n        async.each(arr, function (x, callback) {\\n            iterator(x, function (v) {\\n                if (v) {\\n                    main_callback(true);\\n                    main_callback = function () {};\\n                }\\n                callback();\\n            });\\n        }, function (err) {\\n            main_callback(false);\\n        });\\n    };\\n    // any alias\\n    async.any = async.some;\\n\\n    async.every = function (arr, iterator, main_callback) {\\n        async.each(arr, function (x, callback) {\\n            iterator(x, function (v) {\\n                if (!v) {\\n                    main_callback(false);\\n                    main_callback = function () {};\\n                }\\n                callback();\\n            });\\n        }, function (err) {\\n            main_callback(true);\\n        });\\n    };\\n    // all alias\\n    async.all = async.every;\\n\\n    async.sortBy = function (arr, iterator, callback) {\\n        async.map(arr, function (x, callback) {\\n            iterator(x, function (err, criteria) {\\n                if (err) {\\n                    callback(err);\\n                }\\n                else {\\n                    callback(null, {value: x, criteria: criteria});\\n                }\\n            });\\n        }, function (err, results) {\\n            if (err) {\\n                return callback(err);\\n            }\\n            else {\\n                var fn = function (left, right) {\\n                    var a = left.criteria, b = right.criteria;\\n                    return a < b ? -1 : a > b ? 1 : 0;\\n                };\\n                callback(null, _map(results.sort(fn), function (x) {\\n                    return x.value;\\n                }));\\n            }\\n        });\\n    };\\n\\n    async.auto = function (tasks, callback) {\\n        callback = callback || function () {};\\n        var keys = _keys(tasks);\\n        var remainingTasks = keys.length\\n        if (!remainingTasks) {\\n            return callback();\\n        }\\n\\n        var results = {};\\n\\n        var listeners = [];\\n        var addListener = function (fn) {\\n            listeners.unshift(fn);\\n        };\\n        var removeListener = function (fn) {\\n            for (var i = 0; i < listeners.length; i += 1) {\\n                if (listeners[i] === fn) {\\n                    listeners.splice(i, 1);\\n                    return;\\n                }\\n            }\\n        };\\n        var taskComplete = function () {\\n            remainingTasks--\\n            _each(listeners.slice(0), function (fn) {\\n                fn();\\n            });\\n        };\\n\\n        addListener(function () {\\n            if (!remainingTasks) {\\n                var theCallback = callback;\\n                // prevent final callback from calling itself if it errors\\n                callback = function () {};\\n\\n                theCallback(null, results);\\n            }\\n        });\\n\\n        _each(keys, function (k) {\\n            var task = _isArray(tasks[k]) ? tasks[k]: [tasks[k]];\\n            var taskCallback = function (err) {\\n                var args = Array.prototype.slice.call(arguments, 1);\\n                if (args.length <= 1) {\\n                    args = args[0];\\n                }\\n                if (err) {\\n                    var safeResults = {};\\n                    _each(_keys(results), function(rkey) {\\n                        safeResults[rkey] = results[rkey];\\n                    });\\n                    safeResults[k] = args;\\n                    callback(err, safeResults);\\n                    // stop subsequent errors hitting callback multiple times\\n                    callback = function () {};\\n                }\\n                else {\\n                    results[k] = args;\\n                    async.setImmediate(taskComplete);\\n                }\\n            };\\n            var requires = task.slice(0, Math.abs(task.length - 1)) || [];\\n            var ready = function () {\\n                return _reduce(requires, function (a, x) {\\n                    return (a && results.hasOwnProperty(x));\\n                }, true) && !results.hasOwnProperty(k);\\n            };\\n            if (ready()) {\\n                task[task.length - 1](taskCallback, results);\\n            }\\n            else {\\n                var listener = function () {\\n                    if (ready()) {\\n                        removeListener(listener);\\n                        task[task.length - 1](taskCallback, results);\\n                    }\\n                };\\n                addListener(listener);\\n            }\\n        });\\n    };\\n\\n    async.retry = function(times, task, callback) {\\n        var DEFAULT_TIMES = 5;\\n        var attempts = [];\\n        // Use defaults if times not passed\\n        if (typeof times === 'function') {\\n            callback = task;\\n            task = times;\\n            times = DEFAULT_TIMES;\\n        }\\n        // Make sure times is a number\\n        times = parseInt(times, 10) || DEFAULT_TIMES;\\n        var wrappedTask = function(wrappedCallback, wrappedResults) {\\n            var retryAttempt = function(task, finalAttempt) {\\n                return function(seriesCallback) {\\n                    task(function(err, result){\\n                        seriesCallback(!err || finalAttempt, {err: err, result: result});\\n                    }, wrappedResults);\\n                };\\n            };\\n            while (times) {\\n                attempts.push(retryAttempt(task, !(times-=1)));\\n            }\\n            async.series(attempts, function(done, data){\\n                data = data[data.length - 1];\\n                (wrappedCallback || callback)(data.err, data.result);\\n            });\\n        }\\n        // If a callback is passed, run this as a controll flow\\n        return callback ? wrappedTask() : wrappedTask\\n    };\\n\\n    async.waterfall = function (tasks, callback) {\\n        callback = callback || function () {};\\n        if (!_isArray(tasks)) {\\n          var err = new Error('First argument to waterfall must be an array of functions');\\n          return callback(err);\\n        }\\n        if (!tasks.length) {\\n            return callback();\\n        }\\n        var wrapIterator = function (iterator) {\\n            return function (err) {\\n                if (err) {\\n                    callback.apply(null, arguments);\\n                    callback = function () {};\\n                }\\n                else {\\n                    var args = Array.prototype.slice.call(arguments, 1);\\n                    var next = iterator.next();\\n                    if (next) {\\n                        args.push(wrapIterator(next));\\n                    }\\n                    else {\\n                        args.push(callback);\\n                    }\\n                    async.setImmediate(function () {\\n                        iterator.apply(null, args);\\n                    });\\n                }\\n            };\\n        };\\n        wrapIterator(async.iterator(tasks))();\\n    };\\n\\n    var _parallel = function(eachfn, tasks, callback) {\\n        callback = callback || function () {};\\n        if (_isArray(tasks)) {\\n            eachfn.map(tasks, function (fn, callback) {\\n                if (fn) {\\n                    fn(function (err) {\\n                        var args = Array.prototype.slice.call(arguments, 1);\\n                        if (args.length <= 1) {\\n                            args = args[0];\\n                        }\\n                        callback.call(null, err, args);\\n                    });\\n                }\\n            }, callback);\\n        }\\n        else {\\n            var results = {};\\n            eachfn.each(_keys(tasks), function (k, callback) {\\n                tasks[k](function (err) {\\n                    var args = Array.prototype.slice.call(arguments, 1);\\n                    if (args.length <= 1) {\\n                        args = args[0];\\n                    }\\n                    results[k] = args;\\n                    callback(err);\\n                });\\n            }, function (err) {\\n                callback(err, results);\\n            });\\n        }\\n    };\\n\\n    async.parallel = function (tasks, callback) {\\n        _parallel({ map: async.map, each: async.each }, tasks, callback);\\n    };\\n\\n    async.parallelLimit = function(tasks, limit, callback) {\\n        _parallel({ map: _mapLimit(limit), each: _eachLimit(limit) }, tasks, callback);\\n    };\\n\\n    async.series = function (tasks, callback) {\\n        callback = callback || function () {};\\n        if (_isArray(tasks)) {\\n            async.mapSeries(tasks, function (fn, callback) {\\n                if (fn) {\\n                    fn(function (err) {\\n                        var args = Array.prototype.slice.call(arguments, 1);\\n                        if (args.length <= 1) {\\n                            args = args[0];\\n                        }\\n                        callback.call(null, err, args);\\n                    });\\n                }\\n            }, callback);\\n        }\\n        else {\\n            var results = {};\\n            async.eachSeries(_keys(tasks), function (k, callback) {\\n                tasks[k](function (err) {\\n                    var args = Array.prototype.slice.call(arguments, 1);\\n                    if (args.length <= 1) {\\n                        args = args[0];\\n                    }\\n                    results[k] = args;\\n                    callback(err);\\n                });\\n            }, function (err) {\\n                callback(err, results);\\n            });\\n        }\\n    };\\n\\n    async.iterator = function (tasks) {\\n        var makeCallback = function (index) {\\n            var fn = function () {\\n                if (tasks.length) {\\n                    tasks[index].apply(null, arguments);\\n                }\\n                return fn.next();\\n            };\\n            fn.next = function () {\\n                return (index < tasks.length - 1) ? makeCallback(index + 1): null;\\n            };\\n            return fn;\\n        };\\n        return makeCallback(0);\\n    };\\n\\n    async.apply = function (fn) {\\n        var args = Array.prototype.slice.call(arguments, 1);\\n        return function () {\\n            return fn.apply(\\n                null, args.concat(Array.prototype.slice.call(arguments))\\n            );\\n        };\\n    };\\n\\n    var _concat = function (eachfn, arr, fn, callback) {\\n        var r = [];\\n        eachfn(arr, function (x, cb) {\\n            fn(x, function (err, y) {\\n                r = r.concat(y || []);\\n                cb(err);\\n            });\\n        }, function (err) {\\n            callback(err, r);\\n        });\\n    };\\n    async.concat = doParallel(_concat);\\n    async.concatSeries = doSeries(_concat);\\n\\n    async.whilst = function (test, iterator, callback) {\\n        if (test()) {\\n            iterator(function (err) {\\n                if (err) {\\n                    return callback(err);\\n                }\\n                async.whilst(test, iterator, callback);\\n            });\\n        }\\n        else {\\n            callback();\\n        }\\n    };\\n\\n    async.doWhilst = function (iterator, test, callback) {\\n        iterator(function (err) {\\n            if (err) {\\n                return callback(err);\\n            }\\n            var args = Array.prototype.slice.call(arguments, 1);\\n            if (test.apply(null, args)) {\\n                async.doWhilst(iterator, test, callback);\\n            }\\n            else {\\n                callback();\\n            }\\n        });\\n    };\\n\\n    async.until = function (test, iterator, callback) {\\n        if (!test()) {\\n            iterator(function (err) {\\n                if (err) {\\n                    return callback(err);\\n                }\\n                async.until(test, iterator, callback);\\n            });\\n        }\\n        else {\\n            callback();\\n        }\\n    };\\n\\n    async.doUntil = function (iterator, test, callback) {\\n        iterator(function (err) {\\n            if (err) {\\n                return callback(err);\\n            }\\n            var args = Array.prototype.slice.call(arguments, 1);\\n            if (!test.apply(null, args)) {\\n                async.doUntil(iterator, test, callback);\\n            }\\n            else {\\n                callback();\\n            }\\n        });\\n    };\\n\\n    async.queue = function (worker, concurrency) {\\n        if (concurrency === undefined) {\\n            concurrency = 1;\\n        }\\n        function _insert(q, data, pos, callback) {\\n          if (!q.started){\\n            q.started = true;\\n          }\\n          if (!_isArray(data)) {\\n              data = [data];\\n          }\\n          if(data.length == 0) {\\n             // call drain immediately if there are no tasks\\n             return async.setImmediate(function() {\\n                 if (q.drain) {\\n                     q.drain();\\n                 }\\n             });\\n          }\\n          _each(data, function(task) {\\n              var item = {\\n                  data: task,\\n                  callback: typeof callback === 'function' ? callback : null\\n              };\\n\\n              if (pos) {\\n                q.tasks.unshift(item);\\n              } else {\\n                q.tasks.push(item);\\n              }\\n\\n              if (q.saturated && q.tasks.length === q.concurrency) {\\n                  q.saturated();\\n              }\\n              async.setImmediate(q.process);\\n          });\\n        }\\n\\n        var workers = 0;\\n        var q = {\\n            tasks: [],\\n            concurrency: concurrency,\\n            saturated: null,\\n            empty: null,\\n            drain: null,\\n            started: false,\\n            paused: false,\\n            push: function (data, callback) {\\n              _insert(q, data, false, callback);\\n            },\\n            kill: function () {\\n              q.drain = null;\\n              q.tasks = [];\\n            },\\n            unshift: function (data, callback) {\\n              _insert(q, data, true, callback);\\n            },\\n            process: function () {\\n                if (!q.paused && workers < q.concurrency && q.tasks.length) {\\n                    var task = q.tasks.shift();\\n                    if (q.empty && q.tasks.length === 0) {\\n                        q.empty();\\n                    }\\n                    workers += 1;\\n                    var next = function () {\\n                        workers -= 1;\\n                        if (task.callback) {\\n                            task.callback.apply(task, arguments);\\n                        }\\n                        if (q.drain && q.tasks.length + workers === 0) {\\n                            q.drain();\\n                        }\\n                        q.process();\\n                    };\\n                    var cb = only_once(next);\\n                    worker(task.data, cb);\\n                }\\n            },\\n            length: function () {\\n                return q.tasks.length;\\n            },\\n            running: function () {\\n                return workers;\\n            },\\n            idle: function() {\\n                return q.tasks.length + workers === 0;\\n            },\\n            pause: function () {\\n                if (q.paused === true) { return; }\\n                q.paused = true;\\n                q.process();\\n            },\\n            resume: function () {\\n                if (q.paused === false) { return; }\\n                q.paused = false;\\n                q.process();\\n            }\\n        };\\n        return q;\\n    };\\n    \\n    async.priorityQueue = function (worker, concurrency) {\\n        \\n        function _compareTasks(a, b){\\n          return a.priority - b.priority;\\n        };\\n        \\n        function _binarySearch(sequence, item, compare) {\\n          var beg = -1,\\n              end = sequence.length - 1;\\n          while (beg < end) {\\n            var mid = beg + ((end - beg + 1) >>> 1);\\n            if (compare(item, sequence[mid]) >= 0) {\\n              beg = mid;\\n            } else {\\n              end = mid - 1;\\n            }\\n          }\\n          return beg;\\n        }\\n        \\n        function _insert(q, data, priority, callback) {\\n          if (!q.started){\\n            q.started = true;\\n          }\\n          if (!_isArray(data)) {\\n              data = [data];\\n          }\\n          if(data.length == 0) {\\n             // call drain immediately if there are no tasks\\n             return async.setImmediate(function() {\\n                 if (q.drain) {\\n                     q.drain();\\n                 }\\n             });\\n          }\\n          _each(data, function(task) {\\n              var item = {\\n                  data: task,\\n                  priority: priority,\\n                  callback: typeof callback === 'function' ? callback : null\\n              };\\n              \\n              q.tasks.splice(_binarySearch(q.tasks, item, _compareTasks) + 1, 0, item);\\n\\n              if (q.saturated && q.tasks.length === q.concurrency) {\\n                  q.saturated();\\n              }\\n              async.setImmediate(q.process);\\n          });\\n        }\\n        \\n        // Start with a normal queue\\n        var q = async.queue(worker, concurrency);\\n        \\n        // Override push to accept second parameter representing priority\\n        q.push = function (data, priority, callback) {\\n          _insert(q, data, priority, callback);\\n        };\\n        \\n        // Remove unshift function\\n        delete q.unshift;\\n\\n        return q;\\n    };\\n\\n    async.cargo = function (worker, payload) {\\n        var working     = false,\\n            tasks       = [];\\n\\n        var cargo = {\\n            tasks: tasks,\\n            payload: payload,\\n            saturated: null,\\n            empty: null,\\n            drain: null,\\n            drained: true,\\n            push: function (data, callback) {\\n                if (!_isArray(data)) {\\n                    data = [data];\\n                }\\n                _each(data, function(task) {\\n                    tasks.push({\\n                        data: task,\\n                        callback: typeof callback === 'function' ? callback : null\\n                    });\\n                    cargo.drained = false;\\n                    if (cargo.saturated && tasks.length === payload) {\\n                        cargo.saturated();\\n                    }\\n                });\\n                async.setImmediate(cargo.process);\\n            },\\n            process: function process() {\\n                if (working) return;\\n                if (tasks.length === 0) {\\n                    if(cargo.drain && !cargo.drained) cargo.drain();\\n                    cargo.drained = true;\\n                    return;\\n                }\\n\\n                var ts = typeof payload === 'number'\\n                            ? tasks.splice(0, payload)\\n                            : tasks.splice(0, tasks.length);\\n\\n                var ds = _map(ts, function (task) {\\n                    return task.data;\\n                });\\n\\n                if(cargo.empty) cargo.empty();\\n                working = true;\\n                worker(ds, function () {\\n                    working = false;\\n\\n                    var args = arguments;\\n                    _each(ts, function (data) {\\n                        if (data.callback) {\\n                            data.callback.apply(null, args);\\n                        }\\n                    });\\n\\n                    process();\\n                });\\n            },\\n            length: function () {\\n                return tasks.length;\\n            },\\n            running: function () {\\n                return working;\\n            }\\n        };\\n        return cargo;\\n    };\\n\\n    var _console_fn = function (name) {\\n        return function (fn) {\\n            var args = Array.prototype.slice.call(arguments, 1);\\n            fn.apply(null, args.concat([function (err) {\\n                var args = Array.prototype.slice.call(arguments, 1);\\n                if (typeof console !== 'undefined') {\\n                    if (err) {\\n                        if (console.error) {\\n                            console.error(err);\\n                        }\\n                    }\\n                    else if (console[name]) {\\n                        _each(args, function (x) {\\n                            console[name](x);\\n                        });\\n                    }\\n                }\\n            }]));\\n        };\\n    };\\n    async.log = _console_fn('log');\\n    async.dir = _console_fn('dir');\\n    /*async.info = _console_fn('info');\\n    async.warn = _console_fn('warn');\\n    async.error = _console_fn('error');*/\\n\\n    async.memoize = function (fn, hasher) {\\n        var memo = {};\\n        var queues = {};\\n        hasher = hasher || function (x) {\\n            return x;\\n        };\\n        var memoized = function () {\\n            var args = Array.prototype.slice.call(arguments);\\n            var callback = args.pop();\\n            var key = hasher.apply(null, args);\\n            if (key in memo) {\\n                async.nextTick(function () {\\n                    callback.apply(null, memo[key]);\\n                });\\n            }\\n            else if (key in queues) {\\n                queues[key].push(callback);\\n            }\\n            else {\\n                queues[key] = [callback];\\n                fn.apply(null, args.concat([function () {\\n                    memo[key] = arguments;\\n                    var q = queues[key];\\n                    delete queues[key];\\n                    for (var i = 0, l = q.length; i < l; i++) {\\n                      q[i].apply(null, arguments);\\n                    }\\n                }]));\\n            }\\n        };\\n        memoized.memo = memo;\\n        memoized.unmemoized = fn;\\n        return memoized;\\n    };\\n\\n    async.unmemoize = function (fn) {\\n      return function () {\\n        return (fn.unmemoized || fn).apply(null, arguments);\\n      };\\n    };\\n\\n    async.times = function (count, iterator, callback) {\\n        var counter = [];\\n        for (var i = 0; i < count; i++) {\\n            counter.push(i);\\n        }\\n        return async.map(counter, iterator, callback);\\n    };\\n\\n    async.timesSeries = function (count, iterator, callback) {\\n        var counter = [];\\n        for (var i = 0; i < count; i++) {\\n            counter.push(i);\\n        }\\n        return async.mapSeries(counter, iterator, callback);\\n    };\\n\\n    async.seq = function (/* functions... */) {\\n        var fns = arguments;\\n        return function () {\\n            var that = this;\\n            var args = Array.prototype.slice.call(arguments);\\n            var callback = args.pop();\\n            async.reduce(fns, args, function (newargs, fn, cb) {\\n                fn.apply(that, newargs.concat([function () {\\n                    var err = arguments[0];\\n                    var nextargs = Array.prototype.slice.call(arguments, 1);\\n                    cb(err, nextargs);\\n                }]))\\n            },\\n            function (err, results) {\\n                callback.apply(that, [err].concat(results));\\n            });\\n        };\\n    };\\n\\n    async.compose = function (/* functions... */) {\\n      return async.seq.apply(null, Array.prototype.reverse.call(arguments));\\n    };\\n\\n    var _applyEach = function (eachfn, fns /*args...*/) {\\n        var go = function () {\\n            var that = this;\\n            var args = Array.prototype.slice.call(arguments);\\n            var callback = args.pop();\\n            return eachfn(fns, function (fn, cb) {\\n                fn.apply(that, args.concat([cb]));\\n            },\\n            callback);\\n        };\\n        if (arguments.length > 2) {\\n            var args = Array.prototype.slice.call(arguments, 2);\\n            return go.apply(this, args);\\n        }\\n        else {\\n            return go;\\n        }\\n    };\\n    async.applyEach = doParallel(_applyEach);\\n    async.applyEachSeries = doSeries(_applyEach);\\n\\n    async.forever = function (fn, callback) {\\n        function next(err) {\\n            if (err) {\\n                if (callback) {\\n                    return callback(err);\\n                }\\n                throw err;\\n            }\\n            fn(next);\\n        }\\n        next();\\n    };\\n\\n    // Node.js\\n    if (typeof module !== 'undefined' && module.exports) {\\n        module.exports = async;\\n    }\\n    // AMD / RequireJS\\n    else if (typeof define !== 'undefined' && define.amd) {\\n        define([], function () {\\n            return async;\\n        });\\n    }\\n    // included directly via <script> tag\\n    else {\\n        root.async = async;\\n    }\\n\\n}());\\n\",\"/**\\n * Implements a simple hash code for a string (see\\n * https://en.wikipedia.org/wiki/Java_hashCode()).\\n *\\n * @param {string} The string to return a hash of.\\n * @return {Number} the integer hash code of the string.\\n */\\nfunction integerHash(string) {\\n    if (!string) {\\n        return 0;\\n    }\\n\\n    let char, hash = 0, i;\\n\\n    for (i = 0; i < string.length; i++) {\\n        char = string.charCodeAt(i);\\n        hash += char * Math.pow(31, string.length - 1 - i);\\n        hash = Math.abs(hash | 0); // eslint-disable-line no-bitwise\\n    }\\n\\n    return hash;\\n}\\n\\nmodule.exports = { integerHash };\\n\",\"/* global __filename */\\nimport { getLogger } from 'jitsi-meet-logger';\\nimport * as JingleSessionState from './JingleSessionState';\\n\\nconst logger = getLogger(__filename);\\n\\n/**\\n * JingleSession provides an API to manage a single Jingle session. We will\\n * have different implementations depending on the underlying interface used\\n * (i.e. WebRTC and ORTC) and here we hold the code common to all of them.\\n */\\nexport default class JingleSession {\\n\\n    /* eslint-disable max-params */\\n\\n    /**\\n     * Creates new <tt>JingleSession</tt>.\\n     * @param {string} sid the Jingle session identifier\\n     * @param {string} localJid our JID\\n     * @param {string} remoteJid the JID of the remote peer\\n     * @param {Strophe.Connection} connection the XMPP connection\\n     * @param {Object} mediaConstraints the media constraints object passed to\\n     * the PeerConnection onCreateAnswer/Offer as defined by the WebRTC.\\n     * @param {Object} iceConfig the ICE servers config object as defined by\\n     * the WebRTC. Passed to the PeerConnection's constructor.\\n     * @param {boolean} isInitiator indicates if it will be the side which\\n     * initiates the session.\\n     */\\n    constructor(\\n            sid,\\n            localJid,\\n            remoteJid,\\n            connection,\\n            mediaConstraints,\\n            iceConfig,\\n            isInitiator) {\\n        this.sid = sid;\\n        this.localJid = localJid;\\n        this.remoteJid = remoteJid;\\n        this.connection = connection;\\n        this.mediaConstraints = mediaConstraints;\\n        this.iceConfig = iceConfig;\\n\\n        /**\\n         * Indicates whether this instance is an initiator or an answerer of\\n         * the Jingle session.\\n         * @type {boolean}\\n         */\\n        this.isInitiator = isInitiator;\\n\\n        /**\\n         * Whether to use dripping or not. Dripping is sending trickle\\n         * candidates not one-by-one.\\n         */\\n        this.usedrip = true;\\n\\n        /**\\n         *  When dripping is used, stores ICE candidates which are to be sent.\\n         */\\n        this.dripContainer = [];\\n\\n        /**\\n         * The chat room instance associated with the session.\\n         * @type {ChatRoom}\\n         */\\n        this.room = null;\\n\\n        /**\\n         * Jingle session state - uninitialized until {@link initialize} is\\n         * called @type {JingleSessionState}\\n         */\\n        this.state = null;\\n\\n        /**\\n         * The RTC service instance\\n         * @type {RTC}\\n         */\\n        this.rtc = null;\\n    }\\n\\n    /**\\n     * Returns XMPP address of this session's initiator.\\n     * @return {string}\\n     */\\n    get initiatorJid() {\\n        return this.isInitiator ? this.localJid : this.remoteJid;\\n    }\\n\\n    /**\\n     * Returns XMPP address of this session's responder.\\n     * @return {string}\\n     */\\n    get responderJid() {\\n        return this.isInitiator ? this.remoteJid : this.localJid;\\n    }\\n\\n    /* eslint-enable max-params */\\n\\n    /**\\n     * Prepares this object to initiate a session.\\n     * @param {ChatRoom} room the chat room for the conference associated with\\n     * this session\\n     * @param {RTC} rtc the RTC service instance\\n     * @param {object} options - the options, see implementing class's\\n     * {@link #doInitialize} description for more details.\\n     */\\n    initialize(room, rtc, options) {\\n        if (this.state !== null) {\\n            const errmsg\\n                = `attempt to initiate on session ${this.sid}\\n                   in state ${this.state}`;\\n\\n            logger.error(errmsg);\\n            throw new Error(errmsg);\\n        }\\n        this.room = room;\\n        this.rtc = rtc;\\n        this.state = JingleSessionState.PENDING;\\n        this.doInitialize(options);\\n    }\\n\\n    /**\\n     * The implementing class finishes initialization here. Called at the end of\\n     * {@link initialize}.\\n     * @param {Object} options - The options specific to the implementing class.\\n     * @protected\\n     */\\n    doInitialize(options) { } // eslint-disable-line no-unused-vars, no-empty-function, max-len\\n\\n    /* eslint-disable no-unused-vars, no-empty-function */\\n\\n    /**\\n     * Adds the ICE candidates found in the 'contents' array as remote\\n     * candidates?\\n     * Note: currently only used on transport-info\\n     *\\n     * @param contents\\n     */\\n    addIceCandidates(contents) {}\\n\\n    /* eslint-enable no-unused-vars, no-empty-function */\\n\\n    /**\\n     * Returns current state of this <tt>JingleSession</tt> instance.\\n     * @returns {JingleSessionState} the current state of this session instance.\\n     */\\n    getState() {\\n        return this.state;\\n    }\\n\\n    /* eslint-disable no-unused-vars, no-empty-function */\\n\\n    /**\\n     * Handles an 'add-source' event.\\n     *\\n     * @param contents an array of Jingle 'content' elements.\\n     */\\n    addSources(contents) {}\\n\\n    /**\\n     * Handles a 'remove-source' event.\\n     *\\n     * @param contents an array of Jingle 'content' elements.\\n     */\\n    removeSources(contents) {}\\n\\n    /**\\n     * Terminates this Jingle session by sending session-terminate\\n     * @param success a callback called once the 'session-terminate' packet has\\n     * been acknowledged with RESULT.\\n     * @param failure a callback called when either timeout occurs or ERROR\\n     * response is received.\\n     * @param {Object} options\\n     * @param {string} [options.reason] XMPP Jingle error condition\\n     * @param {string} [options.reasonDescription] some meaningful error message\\n     * @param {boolean} [options.sendSessionTerminate=true] set to false to skip\\n     * sending session-terminate. It may not make sense to send it if the XMPP\\n     * connection has been closed already or if the remote peer has disconnected\\n     */\\n    terminate(success, failure, options) {}\\n\\n    /**\\n     * Handles an offer from the remote peer (prepares to accept a session).\\n     * @param jingle the 'jingle' XML element.\\n     * @param success callback called when we the incoming session has been\\n     * accepted\\n     * @param failure callback called when we fail for any reason, will supply\\n     * error object with details(which is meant more to be printed to the logger\\n     * than analysed in the code, as the error is unrecoverable anyway)\\n     */\\n    acceptOffer(jingle, success, failure) {}\\n\\n    /**\\n     * Returns the JID of the initiator of the jingle session.\\n     */\\n    _getInitiatorJid() {\\n        return this.isInitiator ? this.localJid : this.remoteJid;\\n    }\\n\\n    /* eslint-enable no-unused-vars, no-empty-function */\\n}\\n\",\"/* global __filename */\\n\\nimport { getLogger } from 'jitsi-meet-logger';\\nimport * as MediaType from '../../service/RTC/MediaType';\\nimport * as SignalingEvents from '../../service/RTC/SignalingEvents';\\nimport SignalingLayer from '../../service/RTC/SignalingLayer';\\n\\nconst logger = getLogger(__filename);\\n\\n/**\\n * Default XMPP implementation of the {@link SignalingLayer} interface. Obtains\\n * the data from the MUC presence.\\n */\\nexport default class SignalingLayerImpl extends SignalingLayer {\\n    /**\\n     * Creates new instance.\\n     */\\n    constructor() {\\n        super();\\n\\n        /**\\n         * A map that stores SSRCs of remote streams. And is used only locally\\n         * We store the mapping when jingle is received, and later is used\\n         * onaddstream webrtc event where we have only the ssrc\\n         * FIXME: This map got filled and never cleaned and can grow during long\\n         * conference\\n         * @type {Map<number, string>} maps SSRC number to jid\\n         */\\n        this.ssrcOwners = new Map();\\n\\n        /**\\n         *\\n         * @type {ChatRoom|null}\\n         */\\n        this.chatRoom = null;\\n    }\\n\\n    /**\\n     * Sets the <tt>ChatRoom</tt> instance used and binds presence listeners.\\n     * @param {ChatRoom} room\\n     */\\n    setChatRoom(room) {\\n        const oldChatRoom = this.chatRoom;\\n\\n        this.chatRoom = room;\\n        if (oldChatRoom) {\\n            oldChatRoom.removePresenceListener(\\n                'audiomuted', this._audioMuteHandler);\\n            oldChatRoom.removePresenceListener(\\n                'videomuted', this._videoMuteHandler);\\n            oldChatRoom.removePresenceListener(\\n                'videoType', this._videoTypeHandler);\\n        }\\n        if (room) {\\n            // SignalingEvents\\n            this._audioMuteHandler = (node, from) => {\\n                this.eventEmitter.emit(\\n                    SignalingEvents.PEER_MUTED_CHANGED,\\n                    from, MediaType.AUDIO, node.value === 'true');\\n            };\\n            room.addPresenceListener('audiomuted', this._audioMuteHandler);\\n\\n            this._videoMuteHandler = (node, from) => {\\n                this.eventEmitter.emit(\\n                    SignalingEvents.PEER_MUTED_CHANGED,\\n                    from, MediaType.VIDEO, node.value === 'true');\\n            };\\n            room.addPresenceListener('videomuted', this._videoMuteHandler);\\n\\n            this._videoTypeHandler = (node, from) => {\\n                this.eventEmitter.emit(\\n                    SignalingEvents.PEER_VIDEO_TYPE_CHANGED,\\n                    from, node.value);\\n            };\\n            room.addPresenceListener('videoType', this._videoTypeHandler);\\n        }\\n    }\\n\\n    /**\\n     * @inheritDoc\\n     */\\n    getPeerMediaInfo(owner, mediaType) {\\n        if (this.chatRoom) {\\n            return this.chatRoom.getMediaPresenceInfo(owner, mediaType);\\n        }\\n        logger.error('Requested peer media info, before room was set');\\n    }\\n\\n    /**\\n     * @inheritDoc\\n     */\\n    getSSRCOwner(ssrc) {\\n        return this.ssrcOwners.get(ssrc);\\n    }\\n\\n    /**\\n     * Set an SSRC owner.\\n     * @param {number} ssrc an SSRC to be owned\\n     * @param {string} endpointId owner's ID (MUC nickname)\\n     * @throws TypeError if <tt>ssrc</tt> is not a number\\n     */\\n    setSSRCOwner(ssrc, endpointId) {\\n        if (typeof ssrc !== 'number') {\\n            throw new TypeError(`SSRC(${ssrc}) must be a number`);\\n        }\\n        this.ssrcOwners.set(ssrc, endpointId);\\n    }\\n}\\n\",\"\\nimport Listenable from '../../modules/util/Listenable';\\n\\n/**\\n * An object that carries the info about specific media type advertised by\\n * participant in the signaling channel.\\n * @typedef {Object} PeerMediaInfo\\n * @property {boolean} muted indicates if the media is currently muted\\n * @property {VideoType|undefined} videoType the type of the video if applicable\\n */\\n\\n/**\\n * Interface used to expose the information carried over the signaling channel\\n * which is not available to the RTC module in the media SDP.\\n *\\n * @interface SignalingLayer\\n */\\nexport default class SignalingLayer extends Listenable {\\n\\n    /**\\n     * Obtains the endpoint ID for given SSRC.\\n     * @param {number} ssrc the SSRC number.\\n     * @return {string|null} the endpoint ID for given media SSRC.\\n     */\\n    getSSRCOwner(ssrc) { // eslint-disable-line no-unused-vars\\n        throw new Error('not implemented');\\n    }\\n\\n    /**\\n     * Obtains the info about given media advertised in the MUC presence of\\n     * the participant identified by the given MUC JID.\\n     * @param {string} owner the MUC jid of the participant for whom\\n     * {@link PeerMediaInfo} will be obtained.\\n     * @param {MediaType} mediaType the type of the media for which presence\\n     * info will be obtained.\\n     * @return {PeerMediaInfo|null} presenceInfo an object with media presence\\n     * info or <tt>null</tt> either if there is no presence available for given\\n     * JID or if the media type given is invalid.\\n     */\\n    getPeerMediaInfo(owner, mediaType) { // eslint-disable-line no-unused-vars\\n        throw new Error('not implemented');\\n    }\\n}\\n\",\"/* global __filename */\\n/**\\n * Strophe logger implementation. Logs from level WARN and above.\\n */\\nimport { getLogger } from 'jitsi-meet-logger';\\nimport { Strophe } from 'strophe.js';\\n\\nimport GlobalOnErrorHandler from '../util/GlobalOnErrorHandler';\\n\\nconst logger = getLogger(__filename);\\n\\n/**\\n * This is the last HTTP error status captured from Strophe debug logs.\\n * The purpose of storing it is to distinguish between the network and\\n * infrastructure reason for connection being dropped (see connectionHandler in\\n * xmpp.js). The value will be cleared (-1) if the subsequent request succeeds\\n * which means that the failure could be transient.\\n *\\n * FIXME in the latest Strophe (not released on npm) there is API to handle\\n * particular HTTP errors, but there is no way to learn if the subsequent\\n * request succeeded in order to tell if the error was one time incident or if\\n * it was the reason for dropping the connection by Strophe (the connection is\\n * dropped after 5 subsequent failures). Ideally Strophe should provide more\\n * details about the reason on why the connection stopped.\\n *\\n * @type {number}\\n */\\nlet lastErrorStatus = -1;\\n\\n/**\\n * A regular expression used to catch Strophe's log message indicating that the\\n * last BOSH request was successful. When there is such message seen the\\n * {@link lastErrorStatus} will be set back to '-1'.\\n * @type {RegExp}\\n */\\nconst resetLastErrorStatusRegExpr = /request id \\\\d+.\\\\d+ got 200/;\\n\\n/**\\n * A regular expression used to capture the current value of the BOSH request\\n * error status (HTTP error code or '0' or something else).\\n * @type {RegExp}\\n */\\nconst lastErrorStatusRegExpr\\n    = /request errored, status: (\\\\d+), number of errors: \\\\d+/;\\n\\n/**\\n *\\n */\\nexport default function() {\\n\\n    Strophe.log = function(level, msg) {\\n        // Our global handler reports uncaught errors to the stats which may\\n        // interpret those as partial call failure.\\n        // Strophe log entry about secondary request timeout does not mean that\\n        // it's a final failure(the request will be restarted), so we lower it's\\n        // level here to a warning.\\n        logger.trace('Strophe', level, msg);\\n        if (typeof msg === 'string'\\n                && msg.indexOf('Request ') !== -1\\n                && msg.indexOf('timed out (secondary), restarting') !== -1) {\\n            // eslint-disable-next-line no-param-reassign\\n            level = Strophe.LogLevel.WARN;\\n        }\\n\\n        /* eslint-disable no-case-declarations */\\n        switch (level) {\\n        case Strophe.LogLevel.DEBUG:\\n            // The log message which reports successful status is logged on\\n            // Strophe's DEBUG level.\\n            if (lastErrorStatus !== -1\\n                    && resetLastErrorStatusRegExpr.test(msg)) {\\n                logger.debug('Reset lastErrorStatus');\\n                lastErrorStatus = -1;\\n            }\\n            break;\\n        case Strophe.LogLevel.WARN:\\n            logger.warn(`Strophe: ${msg}`);\\n            const errStatusCapture = lastErrorStatusRegExpr.exec(msg);\\n\\n            if (errStatusCapture && errStatusCapture.length === 2) {\\n                lastErrorStatus = parseInt(errStatusCapture[1], 10);\\n                logger.debug(`lastErrorStatus set to: ${lastErrorStatus}`);\\n            }\\n            break;\\n        case Strophe.LogLevel.ERROR:\\n        case Strophe.LogLevel.FATAL:\\n            // eslint-disable-next-line no-param-reassign\\n            msg = `Strophe: ${msg}`;\\n            GlobalOnErrorHandler.callErrorHandler(new Error(msg));\\n            logger.error(msg);\\n            break;\\n        }\\n\\n        /* eslint-enable no-case-declarations */\\n    };\\n\\n    /**\\n     * Returns error status (HTTP error code) of the last BOSH request.\\n     *\\n     * @return {number} HTTP error code, '0' for unknown or \\\"god knows what\\\"\\n     * (this is a hack).\\n     */\\n    Strophe.getLastErrorStatus = function() {\\n        return lastErrorStatus;\\n    };\\n\\n    Strophe.getStatusString = function(status) {\\n        switch (status) {\\n        case Strophe.Status.ERROR:\\n            return 'ERROR';\\n        case Strophe.Status.CONNECTING:\\n            return 'CONNECTING';\\n        case Strophe.Status.CONNFAIL:\\n            return 'CONNFAIL';\\n        case Strophe.Status.AUTHENTICATING:\\n            return 'AUTHENTICATING';\\n        case Strophe.Status.AUTHFAIL:\\n            return 'AUTHFAIL';\\n        case Strophe.Status.CONNECTED:\\n            return 'CONNECTED';\\n        case Strophe.Status.DISCONNECTED:\\n            return 'DISCONNECTED';\\n        case Strophe.Status.DISCONNECTING:\\n            return 'DISCONNECTING';\\n        case Strophe.Status.ATTACHED:\\n            return 'ATTACHED';\\n        default:\\n            return 'unknown';\\n        }\\n    };\\n}\\n\",\"import { getLogger } from 'jitsi-meet-logger';\\nimport { $iq, Strophe } from 'strophe.js';\\n\\nimport GlobalOnErrorHandler from '../util/GlobalOnErrorHandler';\\n\\nimport ConnectionPlugin from './ConnectionPlugin';\\n\\n\\nconst logger = getLogger(__filename);\\n\\n/**\\n * Ping every 10 sec\\n */\\nconst PING_INTERVAL = 10000;\\n\\n/**\\n * Ping timeout error after 15 sec of waiting.\\n */\\nconst PING_TIMEOUT = 15000;\\n\\n/**\\n * Will close the connection after 3 consecutive ping errors.\\n */\\nconst PING_THRESHOLD = 3;\\n\\n/**\\n * The number of timestamps of send pings to keep.\\n * The current value is 2 minutes.\\n * @type {number} number of timestamps.\\n */\\nconst PING_TIMESTAMPS_TO_KEEP = 120000 / PING_INTERVAL;\\n\\n/**\\n * XEP-0199 ping plugin.\\n *\\n * Registers \\\"urn:xmpp:ping\\\" namespace under Strophe.NS.PING.\\n */\\nclass PingConnectionPlugin extends ConnectionPlugin {\\n    /**\\n     * Contructs new object\\n     * @param {XMPP} xmpp the xmpp module.\\n     * @constructor\\n     */\\n    constructor(xmpp) {\\n        super();\\n        this.failedPings = 0;\\n        this.xmpp = xmpp;\\n        this.pingExecIntervals = new Array(PING_TIMESTAMPS_TO_KEEP);\\n    }\\n\\n    /**\\n     * Initializes the plugin. Method called by Strophe.\\n     * @param connection Strophe connection instance.\\n     */\\n    init(connection) {\\n        super.init(connection);\\n        Strophe.addNamespace('PING', 'urn:xmpp:ping');\\n    }\\n\\n    /* eslint-disable max-params */\\n\\n    /**\\n     * Sends \\\"ping\\\" to given <tt>jid</tt>\\n     * @param jid the JID to which ping request will be sent.\\n     * @param success callback called on success.\\n     * @param error callback called on error.\\n     * @param timeout ms how long are we going to wait for the response. On\\n     * timeout <tt>error<//t> callback is called with undefined error argument.\\n     */\\n    ping(jid, success, error, timeout) {\\n        this._addPingExecutionTimestamp();\\n\\n        const iq = $iq({\\n            type: 'get',\\n            to: jid\\n        });\\n\\n        iq.c('ping', { xmlns: Strophe.NS.PING });\\n        this.connection.sendIQ(iq, success, error, timeout);\\n    }\\n\\n    /* eslint-enable max-params */\\n\\n    /**\\n     * Starts to send ping in given interval to specified remote JID.\\n     * This plugin supports only one such task and <tt>stopInterval</tt>\\n     * must be called before starting a new one.\\n     * @param remoteJid remote JID to which ping requests will be sent to.\\n     * @param interval task interval in ms.\\n     */\\n    startInterval(remoteJid, interval = PING_INTERVAL) {\\n        if (this.intervalId) {\\n            const errmsg = 'Ping task scheduled already';\\n\\n            GlobalOnErrorHandler.callErrorHandler(new Error(errmsg));\\n            logger.error(errmsg);\\n\\n            return;\\n        }\\n        this.intervalId = window.setInterval(() => {\\n            this.ping(remoteJid, () => {\\n                this.failedPings = 0;\\n            }, error => {\\n                this.failedPings += 1;\\n                const errmsg = `Ping ${error ? 'error' : 'timeout'}`;\\n\\n                if (this.failedPings >= PING_THRESHOLD) {\\n                    GlobalOnErrorHandler.callErrorHandler(new Error(errmsg));\\n                    logger.error(errmsg, error);\\n\\n                    // FIXME it doesn't help to disconnect when 3rd PING\\n                    // times out, it only stops Strophe from retrying.\\n                    // Not really sure what's the right thing to do in that\\n                    // situation, but just closing the connection makes no\\n                    // sense.\\n                    // self.connection.disconnect();\\n                } else {\\n                    logger.warn(errmsg, error);\\n                }\\n            }, PING_TIMEOUT);\\n        }, interval);\\n        logger.info(`XMPP pings will be sent every ${interval} ms`);\\n    }\\n\\n    /**\\n     * Stops current \\\"ping\\\"  interval task.\\n     */\\n    stopInterval() {\\n        if (this.intervalId) {\\n            window.clearInterval(this.intervalId);\\n            this.intervalId = null;\\n            this.failedPings = 0;\\n            logger.info('Ping interval cleared');\\n        }\\n    }\\n\\n    /**\\n     * Adds the current time to the array of send ping timestamps.\\n     * @private\\n     */\\n    _addPingExecutionTimestamp() {\\n        this.pingExecIntervals.push(new Date().getTime());\\n\\n        // keep array length to PING_TIMESTAMPS_TO_KEEP\\n        if (this.pingExecIntervals.length > PING_TIMESTAMPS_TO_KEEP) {\\n            this.pingExecIntervals.shift();\\n        }\\n    }\\n\\n    /**\\n     * Returns the maximum time between the recent sent pings, if there is a\\n     * big value it means the computer was inactive for some time(suspended).\\n     * Checks the maximum gap between sending pings, considering and the\\n     * current time. Trying to detect computer inactivity (sleep).\\n     *\\n     * @returns {int} the time ping was suspended, if it was not 0 is returned.\\n     */\\n    getPingSuspendTime() {\\n        const pingIntervals = this.pingExecIntervals.slice();\\n\\n        // we need current time, as if ping was sent now\\n        // if computer sleeps we will get correct interval after next\\n        // scheduled ping, bet we sometimes need that interval before waiting\\n        // for the next ping, on closing the connection on error.\\n        pingIntervals.push(new Date().getTime());\\n\\n        let maxInterval = 0;\\n        let previousTS = pingIntervals[0];\\n\\n        pingIntervals.forEach(e => {\\n            const currentInterval = e - previousTS;\\n\\n            if (currentInterval > maxInterval) {\\n                maxInterval = currentInterval;\\n            }\\n\\n            previousTS = e;\\n        });\\n\\n        // remove the interval between the ping sent\\n        // this way in normal execution there is no suspend and the return\\n        // will be 0 or close to 0.\\n        maxInterval -= PING_INTERVAL;\\n\\n        // make sure we do not return less than 0\\n        return Math.max(maxInterval, 0);\\n    }\\n}\\n\\n/**\\n *\\n * @param xmpp\\n */\\nexport default function(xmpp) {\\n    Strophe.addConnectionPlugin('ping', new PingConnectionPlugin(xmpp));\\n}\\n\",\"/* global $ */\\n\\nimport { getLogger } from 'jitsi-meet-logger';\\nimport { $iq, Strophe } from 'strophe.js';\\n\\nimport ConnectionPlugin from './ConnectionPlugin';\\n\\nconst logger = getLogger(__filename);\\n\\nconst RAYO_XMLNS = 'urn:xmpp:rayo:1';\\n\\n/**\\n *\\n */\\nclass RayoConnectionPlugin extends ConnectionPlugin {\\n    /**\\n     *\\n     * @param connection\\n     */\\n    init(connection) {\\n        super.init(connection);\\n\\n        this.connection.addHandler(\\n            this.onRayo.bind(this), RAYO_XMLNS, 'iq', 'set', null, null);\\n    }\\n\\n    /**\\n     *\\n     * @param iq\\n     */\\n    onRayo(iq) {\\n        logger.info('Rayo IQ', iq);\\n    }\\n\\n    /* eslint-disable max-params */\\n\\n    /**\\n     *\\n     * @param to\\n     * @param from\\n     * @param roomName\\n     * @param roomPass\\n     * @param focusMucJid\\n     */\\n    dial(to, from, roomName, roomPass, focusMucJid) {\\n        return new Promise((resolve, reject) => {\\n            if (!focusMucJid) {\\n                reject(new Error('Internal error!'));\\n\\n                return;\\n            }\\n            const req = $iq({\\n                type: 'set',\\n                to: focusMucJid\\n            });\\n\\n            req.c('dial', {\\n                xmlns: RAYO_XMLNS,\\n                to,\\n                from\\n            });\\n            req.c('header', {\\n                name: 'JvbRoomName',\\n                value: roomName\\n            }).up();\\n\\n            if (roomPass && roomPass.length) {\\n                req.c('header', {\\n                    name: 'JvbRoomPassword',\\n                    value: roomPass\\n                }).up();\\n            }\\n\\n            this.connection.sendIQ(\\n                req,\\n                result => {\\n                    logger.info('Dial result ', result);\\n\\n                    // eslint-disable-next-line newline-per-chained-call\\n                    const resource = $(result).find('ref').attr('uri');\\n\\n                    this.callResource = resource.substr('xmpp:'.length);\\n                    logger.info(`Received call resource: ${this.callResource}`);\\n                    resolve();\\n                },\\n                error => {\\n                    logger.info('Dial error ', error);\\n                    reject(error);\\n                });\\n        });\\n    }\\n\\n    /* eslint-enable max-params */\\n\\n    /**\\n     *\\n     */\\n    hangup() {\\n        return new Promise((resolve, reject) => {\\n            if (!this.callResource) {\\n                reject(new Error('No call in progress'));\\n                logger.warn('No call in progress');\\n\\n                return;\\n            }\\n\\n            const req = $iq({\\n                type: 'set',\\n                to: this.callResource\\n            });\\n\\n            req.c('hangup', {\\n                xmlns: RAYO_XMLNS\\n            });\\n\\n            this.connection.sendIQ(req, result => {\\n                logger.info('Hangup result ', result);\\n                this.callResource = null;\\n                resolve();\\n            }, error => {\\n                logger.info('Hangup error ', error);\\n                this.callResource = null;\\n                reject(new Error('Hangup error '));\\n            });\\n        });\\n    }\\n}\\n\\n/**\\n *\\n */\\nexport default function() {\\n    Strophe.addConnectionPlugin('rayo', new RayoConnectionPlugin());\\n}\\n\",\"import { Strophe } from 'strophe.js';\\n\\nimport ConnectionPlugin from './ConnectionPlugin';\\n\\n/**\\n *  Logs raw stanzas and makes them available for download as JSON\\n */\\nclass StropheLogger extends ConnectionPlugin {\\n    /**\\n     *\\n     */\\n    constructor() {\\n        super();\\n        this.log = [];\\n    }\\n\\n    /**\\n     *\\n     * @param connection\\n     */\\n    init(connection) {\\n        super.init(connection);\\n        this.connection.rawInput = this.logIncoming.bind(this);\\n        this.connection.rawOutput = this.logOutgoing.bind(this);\\n    }\\n\\n    /**\\n     *\\n     * @param stanza\\n     */\\n    logIncoming(stanza) {\\n        this.log.push([ new Date().getTime(), 'incoming', stanza ]);\\n    }\\n\\n    /**\\n     *\\n     * @param stanza\\n     */\\n    logOutgoing(stanza) {\\n        this.log.push([ new Date().getTime(), 'outgoing', stanza ]);\\n    }\\n}\\n\\n/**\\n *\\n */\\nexport default function() {\\n    Strophe.addConnectionPlugin('logger', new StropheLogger());\\n}\\n\",\"/* global $ */\\n\\nimport { b64_sha1, Strophe } from 'strophe.js'; // eslint-disable-line camelcase\\n\\nimport XMPPEvents from '../../service/xmpp/XMPPEvents';\\nimport Listenable from '../util/Listenable';\\n\\n/**\\n * The property\\n */\\nconst IDENTITY_PROPERTIES = [ 'category', 'type', 'lang', 'name' ];\\nconst IDENTITY_PROPERTIES_FOR_COMPARE = [ 'category', 'type', 'lang' ];\\nconst HASH = 'sha-1';\\n\\n/**\\n *\\n * @param a\\n * @param b\\n */\\nfunction compareIdentities(a, b) {\\n    let res = 0;\\n\\n    IDENTITY_PROPERTIES_FOR_COMPARE.some(key =>\\n        (res = ((a[key] > b[key]) && 1) || ((a[key] < b[key]) && -1)) !== 0\\n    );\\n\\n    return res;\\n}\\n\\n/**\\n * Implements xep-0115 ( http://xmpp.org/extensions/xep-0115.html )\\n */\\nexport default class Caps extends Listenable {\\n    /**\\n     * Constructs new Caps instance.\\n     * @param {Strophe.Connection} connection the strophe connection object\\n     * @param {String} node the value of the node attribute of the \\\"c\\\" xml node\\n     * that will be sent to the other participants\\n     */\\n    constructor(connection = {}, node = 'http://jitsi.org/jitsimeet') {\\n        super();\\n        this.node = node;\\n        this.disco = connection.disco;\\n        if (!this.disco) {\\n            throw new Error(\\n                'Missing strophe-plugins '\\n                + '(disco plugin is required)!');\\n        }\\n\\n        this.versionToCapabilities = Object.create(null);\\n        this.jidToVersion = Object.create(null);\\n        this.version = '';\\n        this.rooms = new Set();\\n\\n        const emuc = connection.emuc;\\n\\n        emuc.addListener(XMPPEvents.EMUC_ROOM_ADDED,\\n            room => this._addChatRoom(room));\\n        emuc.addListener(XMPPEvents.EMUC_ROOM_REMOVED,\\n            room => this._removeChatRoom(room));\\n        Object.keys(emuc.rooms).forEach(jid => {\\n            this._addChatRoom(emuc.rooms[jid]);\\n        });\\n\\n        Strophe.addNamespace('CAPS', 'http://jabber.org/protocol/caps');\\n        this.disco.addFeature(Strophe.NS.CAPS);\\n        connection.addHandler(this._handleCaps.bind(this), Strophe.NS.CAPS);\\n\\n        this._onMucMemberLeft = this._removeJidToVersionEntry.bind(this);\\n    }\\n\\n    /**\\n     * Adds new feature to the list of supported features for the local\\n     * participant\\n     * @param {String} feature the name of the feature.\\n     * @param {boolean} submit if true - new presence with updated \\\"c\\\" node\\n     * will be sent.\\n     */\\n    addFeature(feature, submit = false) {\\n        this.disco.addFeature(feature);\\n        this._generateVersion();\\n        if (submit) {\\n            this.submit();\\n        }\\n    }\\n\\n    /**\\n     * Removes a feature from the list of supported features for the local\\n     * participant\\n     * @param {String} feature the name of the feature.\\n     * @param {boolean} submit if true - new presence with updated \\\"c\\\" node\\n     * will be sent.\\n     */\\n    removeFeature(feature, submit = false) {\\n        this.disco.removeFeature(feature);\\n        this._generateVersion();\\n        if (submit) {\\n            this.submit();\\n        }\\n    }\\n\\n    /**\\n     * Sends new presence stanza for every room from the list of rooms.\\n     */\\n    submit() {\\n        this.rooms.forEach(room => room.sendPresence());\\n    }\\n\\n    /**\\n     * Returns a set with the features for a participant.\\n     * @param {String} jid the jid of the participant\\n     * @param {int} timeout the timeout in ms for reply from the participant.\\n     * @returns {Promise<Set<String>, Error>}\\n     */\\n    getFeatures(jid, timeout = 5000) {\\n        const user\\n            = jid in this.jidToVersion ? this.jidToVersion[jid] : null;\\n\\n        if (!user || !(user.version in this.versionToCapabilities)) {\\n            const node = user ? `${user.node}#${user.version}` : null;\\n\\n            return this._getDiscoInfo(jid, node, timeout)\\n                .then(({ features }) => {\\n                    if (user) {\\n                        // TODO: Maybe use the version + node + hash as keys?\\n                        this.versionToCapabilities[user.version] = features;\\n                    }\\n\\n                    return features;\\n                });\\n        }\\n\\n        return Promise.resolve(this.versionToCapabilities[user.version]);\\n    }\\n\\n    /**\\n     * Returns a set with the features for a host.\\n     * @param {String} jid the jid of the host\\n     * @param {int} timeout the timeout in ms for reply from the host.\\n     * @returns {Promise<Set<String>, Error>}\\n     */\\n    getFeaturesAndIdentities(jid, timeout = 5000) {\\n        return this._getDiscoInfo(jid, null, timeout);\\n    }\\n\\n    /**\\n     * Returns a set with the features and identities for a host.\\n     * @param {String} jid the jid of the host\\n     * @param {String|null} node the node to query\\n     * @param {int} timeout the timeout in ms for reply from the host.\\n     * @returns {Promise<Object>}\\n     * @private\\n     */\\n    _getDiscoInfo(jid, node, timeout) {\\n        return new Promise((resolve, reject) =>\\n            this.disco.info(jid, node, response => {\\n                const features = new Set();\\n                const identities = new Set();\\n\\n                $(response)\\n                    .find('>query>feature')\\n                    .each(\\n                        (_, el) => features.add(el.getAttribute('var')));\\n                $(response)\\n                    .find('>query>identity')\\n                    .each(\\n                        (_, el) => identities.add({\\n                            type: el.getAttribute('type'),\\n                            name: el.getAttribute('name'),\\n                            category: el.getAttribute('category')\\n                        }));\\n                resolve({\\n                    features,\\n                    identities });\\n            }, reject, timeout)\\n        );\\n    }\\n\\n    /**\\n     * Adds ChatRoom instance to the list of rooms. Adds listeners to the room\\n     * and adds \\\"c\\\" element to the presences of the room.\\n     * @param {ChatRoom} room the room.\\n     */\\n    _addChatRoom(room) {\\n        this.rooms.add(room);\\n        room.addListener(XMPPEvents.MUC_MEMBER_LEFT, this._onMucMemberLeft);\\n        this._fixChatRoomPresenceMap(room);\\n    }\\n\\n    /**\\n     * Removes ChatRoom instance from the list of rooms. Removes listeners\\n     * added from the Caps class.\\n     * @param {ChatRoom} room the room.\\n     */\\n    _removeChatRoom(room) {\\n        this.rooms.delete(room);\\n        room.removeListener(XMPPEvents.MUC_MEMBER_LEFT, this._onMucMemberLeft);\\n    }\\n\\n    /**\\n     * Creates/updates the \\\"c\\\" xml node into the presence of the passed room.\\n     * @param {ChatRoom} room the room.\\n     */\\n    _fixChatRoomPresenceMap(room) {\\n        room.addToPresence('c', {\\n            attributes: {\\n                xmlns: Strophe.NS.CAPS,\\n                hash: HASH,\\n                node: this.node,\\n                ver: this.version\\n            }\\n        });\\n    }\\n\\n    /**\\n     * Handles this.version changes.\\n     */\\n    _notifyVersionChanged() {\\n        // update the version for all rooms\\n        this.rooms.forEach(room => this._fixChatRoomPresenceMap(room));\\n        this.submit();\\n    }\\n\\n    /**\\n     * Generates the value for the \\\"ver\\\" attribute.\\n     */\\n    _generateVersion() {\\n        const identities\\n          = this.disco._identities.sort(compareIdentities).reduce(\\n              (accumulatedValue, identity) =>\\n                  `${\\n                      IDENTITY_PROPERTIES.reduce(\\n                          (tmp, key, idx) =>\\n                              tmp\\n                                  + (idx === 0 ? '' : '/')\\n                                  + identity[key],\\n                          '')\\n                  }<`,\\n              '');\\n        const features\\n            = this.disco._features.sort().reduce(\\n                (tmp, feature) => `${tmp + feature}<`, '');\\n\\n        this.version = b64_sha1(identities + features);\\n        this._notifyVersionChanged();\\n    }\\n\\n    /**\\n     * Parses the \\\"c\\\" xml node from presence.\\n     * @param {DOMElement} stanza the presence packet\\n     */\\n    _handleCaps(stanza) {\\n        const from = stanza.getAttribute('from');\\n        const caps = stanza.querySelector('c');\\n        const version = caps.getAttribute('ver');\\n        const node = caps.getAttribute('node');\\n        const oldVersion = this.jidToVersion[from];\\n\\n        this.jidToVersion[from] = { version,\\n            node };\\n        if (oldVersion && oldVersion.version !== version) {\\n            this.eventEmitter.emit(XMPPEvents.PARTCIPANT_FEATURES_CHANGED,\\n                from);\\n        }\\n\\n        // return true to not remove the handler from Strophe\\n        return true;\\n    }\\n\\n    /**\\n     * Removes entry from this.jidToVersion map.\\n     * @param {String} jid the jid to be removed.\\n     */\\n    _removeJidToVersionEntry(jid) {\\n        if (jid in this.jidToVersion) {\\n            delete this.jidToVersion[jid];\\n        }\\n    }\\n}\\n\",\"const logger = require('jitsi-meet-logger').getLogger(__filename);\\n\\n/**\\n *\\n * @param localAudio\\n * @param peerConnection\\n */\\nfunction JitsiDTMFManager(localAudio, peerConnection) {\\n    const audioTrack = localAudio.getTrack();\\n\\n    if (!audioTrack) {\\n        throw new Error('Failed to initialize DTMFSender: no audio track.');\\n    }\\n    this.dtmfSender\\n        = peerConnection.peerconnection.createDTMFSender(audioTrack);\\n    logger.debug('Initialized DTMFSender');\\n}\\n\\nJitsiDTMFManager.prototype.sendTones = function(tones, duration, pause) {\\n    this.dtmfSender.insertDTMF(tones, duration || 200, pause || 200);\\n};\\n\\nmodule.exports = JitsiDTMFManager;\\n\\n\",\"import * as JitsiConferenceEvents from '../JitsiConferenceEvents';\\n\\n/**\\n * The value which we use to say, every sound over this threshold\\n * is talking on the mic.\\n * @type {number}\\n */\\nconst SPEECH_DETECT_THRESHOLD = 0.6;\\n\\n/**\\n * The <tt>P2PDominantSpeakerDetection</tt> is activated only when p2p is\\n * currently used.\\n * Listens for changes in the audio level changes of the local p2p audio track\\n * or remote p2p one and fires dominant speaker events to be able to use\\n * features depending on those events (speaker stats), to make them work without\\n * the video bridge.\\n */\\nexport default class P2PDominantSpeakerDetection {\\n    /**\\n     * Creates P2PDominantSpeakerDetection\\n     * @param conference the JitsiConference instance that created us.\\n     * @constructor\\n     */\\n    constructor(conference) {\\n        this.conference = conference;\\n\\n        conference.addEventListener(\\n            JitsiConferenceEvents.TRACK_AUDIO_LEVEL_CHANGED,\\n            this._audioLevel.bind(this));\\n\\n        this.myUserID = this.conference.myUserId();\\n    }\\n\\n    /**\\n     * Receives audio level events for all streams in the conference.\\n     *\\n     * @param {String} id - The participant id\\n     * @param {number} audioLevel - The audio level.\\n     */\\n    _audioLevel(id, audioLevel) {\\n\\n        // we do not process if p2p is not active\\n        // or audio level is under certain threshold\\n        // or if the audio level is for local audio track which is muted\\n        if (!this.conference.isP2PActive()\\n            || audioLevel <= SPEECH_DETECT_THRESHOLD\\n            || (id === this.myUserID\\n                    && this.conference.getLocalAudioTrack().isMuted())) {\\n            return;\\n        }\\n\\n        this.conference.eventEmitter.emit(\\n            JitsiConferenceEvents.DOMINANT_SPEAKER_CHANGED,\\n            id);\\n    }\\n}\\n\",\"import { getLogger } from 'jitsi-meet-logger';\\n\\nimport RTCEvents from '../../service/RTC/RTCEvents';\\nimport GlobalOnErrorHandler from '../util/GlobalOnErrorHandler';\\n\\nconst logger = getLogger(__filename);\\n\\n/**\\n * Handles a WebRTC RTCPeerConnection or a WebSocket instance to communicate\\n * with the videobridge.\\n */\\nexport default class BridgeChannel {\\n    /**\\n     * Binds \\\"ondatachannel\\\" event listener on the given RTCPeerConnection\\n     * instance, or creates a WebSocket connection with the videobridge.\\n     * At least one of both, peerconnection or wsUrl parameters, must be\\n     * given.\\n     * @param {RTCPeerConnection} [peerconnection] WebRTC peer connection\\n     * instance.\\n     * @param {string} [wsUrl] WebSocket URL.\\n     * @param {EventEmitter} eventEmitter EventEmitter instance.\\n     */\\n    constructor(peerconnection, wsUrl, emitter) {\\n        if (!peerconnection && !wsUrl) {\\n            throw new TypeError(\\n                'At least peerconnection or wsUrl must be given');\\n        } else if (peerconnection && wsUrl) {\\n            throw new TypeError(\\n                'Just one of peerconnection or wsUrl must be given');\\n        }\\n\\n        if (peerconnection) {\\n            logger.debug('constructor() with peerconnection');\\n        } else {\\n            logger.debug(`constructor() with wsUrl:\\\"${wsUrl}\\\"`);\\n        }\\n\\n        // The underlying WebRTC RTCDataChannel or WebSocket instance.\\n        // @type {RTCDataChannel|WebSocket}\\n        this._channel = null;\\n\\n        // @type {EventEmitter}\\n        this._eventEmitter = emitter;\\n\\n        // Whether a RTCDataChannel or WebSocket is internally used.\\n        // @type {string} \\\"datachannel\\\" / \\\"websocket\\\"\\n        this._mode = null;\\n\\n        // If a RTCPeerConnection is given, listen for new RTCDataChannel\\n        // event.\\n        if (peerconnection) {\\n            const datachannel\\n                = peerconnection.createDataChannel(\\n                    'JVB data channel', {\\n                        protocol: 'http://jitsi.org/protocols/colibri'\\n                    });\\n\\n            // Handle the RTCDataChannel.\\n            this._handleChannel(datachannel);\\n            this._mode = 'datachannel';\\n\\n        // Otherwise create a WebSocket connection.\\n        } else if (wsUrl) {\\n            // Create a WebSocket instance.\\n            const ws = new WebSocket(wsUrl);\\n\\n            // Handle the WebSocket.\\n            this._handleChannel(ws);\\n            this._mode = 'websocket';\\n        }\\n    }\\n\\n    /**\\n     * The channel mode.\\n     * @return {string} \\\"datachannel\\\" or \\\"websocket\\\" (or null if not yet set).\\n     */\\n    get mode() {\\n        return this._mode;\\n    }\\n\\n    /**\\n     * Closes the currently opened channel.\\n     */\\n    close() {\\n        if (this._channel) {\\n            try {\\n                this._channel.close();\\n            } catch (error) {} // eslint-disable-line no-empty\\n\\n            this._channel = null;\\n        }\\n    }\\n\\n    /**\\n     * Whether there is an underlying RTCDataChannel or WebSocket and it's\\n     * open.\\n     * @return {boolean}\\n     */\\n    isOpen() {\\n        return this._channel && (this._channel.readyState === 'open'\\n            || this._channel.readyState === WebSocket.OPEN);\\n    }\\n\\n    /**\\n     * Sends message via the channel.\\n     * @param {string} to The id of the endpoint that should receive the\\n     * message. If \\\"\\\" the message will be sent to all participants.\\n     * @param  {object} payload The payload of the message.\\n     * @throws NetworkError or InvalidStateError from RTCDataChannel#send (@see\\n     * {@link https://developer.mozilla.org/docs/Web/API/RTCDataChannel/send})\\n     * or from WebSocket#send or Error with \\\"No opened channel\\\" message.\\n     */\\n    sendMessage(to, payload) {\\n        this._send({\\n            colibriClass: 'EndpointMessage',\\n            msgPayload: payload,\\n            to\\n        });\\n    }\\n\\n    /**\\n     * Sends a \\\"lastN value changed\\\" message via the channel.\\n     * @param {number} value The new value for lastN. -1 means unlimited.\\n     */\\n    sendSetLastNMessage(value) {\\n        const jsonObject = {\\n            colibriClass: 'LastNChangedEvent',\\n            lastN: value\\n        };\\n\\n        this._send(jsonObject);\\n        logger.log(`Channel lastN set to: ${value}`);\\n    }\\n\\n    /**\\n     * Sends a \\\"pinned endpoint changed\\\" message via the channel.\\n     * @param {string} endpointId The id of the pinned endpoint.\\n     * @throws NetworkError or InvalidStateError from RTCDataChannel#send (@see\\n     * {@link https://developer.mozilla.org/docs/Web/API/RTCDataChannel/send})\\n     * or from WebSocket#send or Error with \\\"No opened channel\\\" message.\\n     */\\n    sendPinnedEndpointMessage(endpointId) {\\n        logger.log(\\n            'sending pinned changed notification to the bridge for endpoint ',\\n            endpointId);\\n\\n        this._send({\\n            colibriClass: 'PinnedEndpointChangedEvent',\\n            pinnedEndpoint: endpointId || null\\n        });\\n    }\\n\\n    /**\\n     * Sends a \\\"selected endpoints changed\\\" message via the channel.\\n     *\\n     * @param {Array<string>} endpointIds - The ids of the selected endpoints.\\n     * @throws NetworkError or InvalidStateError from RTCDataChannel#send (@see\\n     * {@link https://developer.mozilla.org/docs/Web/API/RTCDataChannel/send})\\n     * or from WebSocket#send or Error with \\\"No opened channel\\\" message.\\n     */\\n    sendSelectedEndpointsMessage(endpointIds) {\\n        logger.log(\\n            'sending selected changed notification to the bridge for endpoints',\\n            endpointIds);\\n\\n        this._send({\\n            colibriClass: 'SelectedEndpointsChangedEvent',\\n            selectedEndpoints: endpointIds\\n        });\\n    }\\n\\n    /**\\n     * Sends a \\\"receiver video constraint\\\" message via the channel.\\n     * @param {Number} maxFrameHeightPixels the maximum frame height,\\n     * in pixels, this receiver is willing to receive\\n     */\\n    sendReceiverVideoConstraintMessage(maxFrameHeightPixels) {\\n        logger.log('sending a ReceiverVideoConstraint message with '\\n            + `a maxFrameHeight of ${maxFrameHeightPixels} pixels`);\\n        this._send({\\n            colibriClass: 'ReceiverVideoConstraint',\\n            maxFrameHeight: maxFrameHeightPixels\\n        });\\n    }\\n\\n    /**\\n     * Set events on the given RTCDataChannel or WebSocket instance.\\n     */\\n    _handleChannel(channel) {\\n        const emitter = this._eventEmitter;\\n\\n        channel.onopen = () => {\\n            logger.info(`${this._mode} channel opened`);\\n\\n            // Code sample for sending string and/or binary data.\\n            // Sends string message to the bridge:\\n            //     channel.send(\\\"Hello bridge!\\\");\\n            // Sends 12 bytes binary message to the bridge:\\n            //     channel.send(new ArrayBuffer(12));\\n\\n            emitter.emit(RTCEvents.DATA_CHANNEL_OPEN);\\n        };\\n\\n        channel.onerror = error => {\\n            logger.error('Channel error:', error);\\n        };\\n\\n        channel.onmessage = ({ data }) => {\\n            // JSON object.\\n            let obj;\\n\\n            try {\\n                obj = JSON.parse(data);\\n            } catch (error) {\\n                GlobalOnErrorHandler.callErrorHandler(error);\\n                logger.error(\\n                    'Failed to parse channel message as JSON: ',\\n                    data, error);\\n\\n                return;\\n            }\\n\\n            const colibriClass = obj.colibriClass;\\n\\n            switch (colibriClass) {\\n            case 'DominantSpeakerEndpointChangeEvent': {\\n                // Endpoint ID from the Videobridge.\\n                const dominantSpeakerEndpoint = obj.dominantSpeakerEndpoint;\\n\\n                logger.info(\\n                    'Channel new dominant speaker event: ',\\n                    dominantSpeakerEndpoint);\\n                emitter.emit(\\n                    RTCEvents.DOMINANT_SPEAKER_CHANGED,\\n                    dominantSpeakerEndpoint);\\n                break;\\n            }\\n            case 'EndpointConnectivityStatusChangeEvent': {\\n                const endpoint = obj.endpoint;\\n                const isActive = obj.active === 'true';\\n\\n                logger.info(\\n                    `Endpoint connection status changed: ${endpoint} active ? ${\\n                        isActive}`);\\n                emitter.emit(RTCEvents.ENDPOINT_CONN_STATUS_CHANGED,\\n                    endpoint, isActive);\\n\\n                break;\\n            }\\n            case 'EndpointMessage': {\\n                emitter.emit(\\n                    RTCEvents.ENDPOINT_MESSAGE_RECEIVED, obj.from,\\n                    obj.msgPayload);\\n\\n                break;\\n            }\\n            case 'LastNEndpointsChangeEvent': {\\n                // The new/latest list of last-n endpoint IDs.\\n                const lastNEndpoints = obj.lastNEndpoints;\\n\\n                logger.info('Channel new last-n event: ',\\n                    lastNEndpoints, obj);\\n                emitter.emit(RTCEvents.LASTN_ENDPOINT_CHANGED,\\n                    lastNEndpoints, obj);\\n\\n                break;\\n            }\\n            case 'SelectedUpdateEvent': {\\n                const isSelected = obj.isSelected;\\n\\n                logger.info(`SelectedUpdateEvent isSelected? ${isSelected}`);\\n                emitter.emit(RTCEvents.IS_SELECTED_CHANGED, isSelected);\\n                break;\\n            }\\n            default: {\\n                logger.debug('Channel JSON-formatted message: ', obj);\\n\\n                // The received message appears to be appropriately formatted\\n                // (i.e. is a JSON object which assigns a value to the\\n                // mandatory property colibriClass) so don't just swallow it,\\n                // expose it to public consumption.\\n                emitter.emit(`rtc.datachannel.${colibriClass}`, obj);\\n            }\\n            }\\n        };\\n\\n        channel.onclose = () => {\\n            logger.info('Channel closed');\\n\\n            // Remove the channel.\\n            this._channel = null;\\n        };\\n\\n        // Store the channel.\\n        this._channel = channel;\\n    }\\n\\n    /**\\n     * Sends passed object via the channel.\\n     * @param {object} jsonObject The object that will be sent.\\n     * @throws NetworkError or InvalidStateError from RTCDataChannel#send (@see\\n     * {@link https://developer.mozilla.org/docs/Web/API/RTCDataChannel/send})\\n     * or from WebSocket#send or Error with \\\"No opened channel\\\" message.\\n     */\\n    _send(jsonObject) {\\n        const channel = this._channel;\\n\\n        if (!this.isOpen()) {\\n            throw new Error('No opened channel');\\n        }\\n\\n        channel.send(JSON.stringify(jsonObject));\\n    }\\n}\\n\",\"/* global __filename, RTCIceGatherer, RTCIceTransport, RTCDtlsTransport,\\nRTCRtpSender, RTCRtpReceiver */\\n\\nimport { getLogger } from 'jitsi-meet-logger';\\nimport yaeti from 'yaeti';\\n\\nimport RTCSessionDescription from './RTCSessionDescription';\\nimport * as utils from './utils';\\nimport { InvalidStateError } from './errors';\\nimport RandomUtil from '../../util/RandomUtil';\\nimport SDPUtil from '../../xmpp/SDPUtil';\\n\\nconst logger = getLogger(__filename);\\n\\nconst RTCSignalingState = {\\n    stable: 'stable',\\n    haveLocalOffer: 'have-local-offer',\\n    haveRemoteOffer: 'have-remote-offer',\\n    closed: 'closed'\\n};\\n\\nconst RTCIceGatheringState = {\\n    new: 'new',\\n    gathering: 'gathering',\\n    complete: 'complete'\\n};\\n\\nconst CNAME = `jitsi-ortc-cname-${RandomUtil.randomInt(10000, 99999)}`;\\n\\n/**\\n * RTCPeerConnection shim for ORTC based endpoints (such as Edge).\\n *\\n * The interface is based on the W3C specification of 2015, which matches\\n * the implementation of Chrome nowadays:\\n *\\n *   https://www.w3.org/TR/2015/WD-webrtc-20150210/\\n *\\n * It also implements Plan-B for multi-stream, and assumes single BUNDLEd\\n * transport and rtcp-mux.\\n */\\nexport default class ortcRTCPeerConnection extends yaeti.EventTarget {\\n    /**\\n     */\\n    constructor(pcConfig) {\\n        super();\\n\\n        logger.debug('constructor() pcConfig:', pcConfig);\\n\\n        // Buffered local ICE candidates (in WebRTC format).\\n        // @type {sequence<RTCIceCandidate>}\\n        this._bufferedIceCandidates = [];\\n\\n        // Closed flag.\\n        // @type {Boolean}\\n        this._closed = false;\\n\\n        // RTCDtlsTransport.\\n        // @type {RTCDtlsTransport}\\n        this._dtlsTransport = null;\\n\\n        // RTCIceGatherer.\\n        // @type {RTCIceGatherer}\\n        this._iceGatherer = null;\\n\\n        // RTCPeerConnection iceGatheringState.\\n        // NOTE: This should not be needed, but Edge does not implement\\n        // iceGatherer.state.\\n        // @type {RTCIceGatheringState}\\n        this._iceGatheringState = RTCIceGatheringState.new;\\n\\n        // Use a promise to signify when the local client has finished gathering\\n        // ice candidates. This is needed to prevent errors on offer creation.\\n        this._resolveLocalIceGatheringPromise = null;\\n        this._iceGatheringCompletePromise = new Promise(resolve => {\\n            this._resolveLocalIceGatheringPromise = resolve;\\n        });\\n\\n        // RTCIceTransport.\\n        // @type {RTCIceTransport}\\n        this._iceTransport = null;\\n\\n        // Local RTP capabilities (filtered with remote ones).\\n        // @type {RTCRtpCapabilities}\\n        this._localCapabilities = null;\\n\\n        // Local RTCSessionDescription.\\n        // @type {RTCSessionDescription}\\n        this._localDescription = null;\\n\\n        // Map with info regarding local media.\\n        // - index: MediaStreamTrack.id\\n        // - value: Object\\n        //   - rtpSender: Associated RTCRtpSender instance\\n        //   - stream: Associated MediaStream instance\\n        //   - ssrc: Provisional or definitive SSRC\\n        //   - rtxSsrc: Provisional or definitive SSRC for RTX\\n        //   - sending: Boolean indicating whether rtpSender.send() was called.\\n        this._localTrackInfos = new Map();\\n\\n        // Ordered Map with MID as key and kind as value.\\n        // @type {map<String, String>}\\n        this._mids = new Map();\\n\\n        // Remote RTCSessionDescription.\\n        // @type {RTCSessionDescription}\\n        this._remoteDescription = null;\\n\\n        // Map of remote streams.\\n        // - index: MediaStream.jitsiRemoteId (as signaled in remote SDP)\\n        // - value: MediaStream (locally generated so id does not match)\\n        // @type {map<Number, MediaStream>}\\n        this._remoteStreams = new Map();\\n\\n        // Map with info about receiving media.\\n        // - index: Media SSRC\\n        // - value: Object\\n        //   - kind: 'audio' / 'video'\\n        //   - ssrc: Media SSRC\\n        //   - rtxSsrc: RTX SSRC (may be unset)\\n        //   - streamId: MediaStream.jitsiRemoteId\\n        //   - trackId: MediaStreamTrack.jitsiRemoteId\\n        //   - cname: CNAME\\n        //   - stream: MediaStream\\n        //   - track: MediaStreamTrack\\n        //   - rtpReceiver: Associated RTCRtpReceiver instance\\n        // @type {map<Number, Object>}\\n        this._remoteTrackInfos = new Map();\\n\\n        // Local SDP global fields.\\n        this._sdpGlobalFields = {\\n            id: SDPUtil.generateSsrc(),\\n            version: 0\\n        };\\n\\n        // RTCPeerConnection signalingState.\\n        // @type {RTCSignalingState}\\n        this._signalingState = RTCSignalingState.stable;\\n\\n        // Create the RTCIceGatherer.\\n        this._setIceGatherer(pcConfig);\\n\\n        // Create the RTCIceTransport.\\n        this._setIceTransport(this._iceGatherer);\\n\\n        // Create the RTCDtlsTransport.\\n        this._setDtlsTransport(this._iceTransport);\\n    }\\n\\n    /**\\n     * Current ICE+DTLS connection state.\\n     * @return {RTCPeerConnectionState}\\n     */\\n    get connectionState() {\\n        return this._dtlsTransport.state;\\n    }\\n\\n    /**\\n     * Current ICE connection state.\\n     * @return {RTCIceConnectionState}\\n     */\\n    get iceConnectionState() {\\n        return this._iceTransport.state;\\n    }\\n\\n    /**\\n     * Current ICE gathering state.\\n     * @return {RTCIceGatheringState}\\n     */\\n    get iceGatheringState() {\\n        return this._iceGatheringState;\\n    }\\n\\n    /**\\n     * Gets the local description.\\n     * @return {RTCSessionDescription}\\n     */\\n    get localDescription() {\\n        return this._localDescription;\\n    }\\n\\n    /**\\n     * Gets the remote description.\\n     * @return {RTCSessionDescription}\\n     */\\n    get remoteDescription() {\\n        return this._remoteDescription;\\n    }\\n\\n    /**\\n     * Current signaling state.\\n     * @return {RTCSignalingState}\\n     */\\n    get signalingState() {\\n        return this._signalingState;\\n    }\\n\\n    /**\\n     * Adds a remote ICE candidate. Implements both the old callbacks based\\n     * signature and the new Promise based style.\\n     *\\n     * Arguments in Promise mode:\\n     * @param {RTCIceCandidate} candidate\\n     *\\n     * Arguments in callbacks mode:\\n     * @param {RTCIceCandidate} candidate\\n     */\\n    addIceCandidate(candidate) { // eslint-disable-line no-unused-vars\\n        if (!candidate) {\\n            throw new TypeError('candidate missing');\\n        }\\n\\n        logger.debug('addIceCandidate() candidate:', candidate);\\n\\n        if (this._closed) {\\n            return Promise.reject(\\n                new InvalidStateError('RTCPeerConnection closed'));\\n        }\\n\\n        // NOTE: Edge does not support Trickle-ICE so just candidates in the\\n        // remote SDP are applied. Candidates given later would be just\\n        // ignored, so notify the called about that.\\n        return Promise.reject(new Error('addIceCandidate() not supported'));\\n    }\\n\\n    /**\\n     * Adds a local MediaStream.\\n     * @param {MediaStream} stream.\\n     * NOTE: Deprecated API.\\n     */\\n    addStream(stream) {\\n        logger.debug('addStream()');\\n\\n        if (this._closed) {\\n            throw new InvalidStateError('RTCPeerConnection closed');\\n        }\\n\\n        // Create a RTCRtpSender for each track.\\n        for (const track of stream.getTracks()) {\\n            // Ignore if ended.\\n            if (track.readyState === 'ended') {\\n                logger.warn('ignoring ended MediaStreamTrack');\\n\\n                continue; // eslint-disable-line no-continue\\n            }\\n\\n            // Ignore if track is already present.\\n            if (this._localTrackInfos.has(track.id)) {\\n                logger.warn('ignoring already handled MediaStreamTrack');\\n\\n                continue; // eslint-disable-line no-continue\\n            }\\n\\n            const rtpSender = new RTCRtpSender(track, this._dtlsTransport);\\n\\n            // Store it in the map.\\n            this._localTrackInfos.set(track.id, {\\n                rtpSender,\\n                stream\\n            });\\n        }\\n\\n        // Check for local tracks removal.\\n        for (const [ trackId, info ] of this._localTrackInfos) {\\n            const track = info.rtpSender.track;\\n\\n            // Check if any of the local tracks has been stopped.\\n            if (track.readyState === 'ended') {\\n                logger.warn(\\n                    'addStream() an already handled track was stopped, '\\n                    + `track.id:${track.id}`);\\n\\n                try {\\n                    info.rtpSender.stop();\\n                } catch (error) {\\n                    logger.warn(`rtpSender.stop() failed:${error}`);\\n                }\\n\\n                // Remove from the map.\\n                this._localTrackInfos.delete(track.id);\\n\\n            // Also, if the stream was already handled, check whether tracks\\n            // have been removed via stream.removeTrack() and, if so, stop\\n            // their RtpSenders.\\n            } else if (info.stream === stream\\n                && !stream.getTrackById(trackId)) {\\n                logger.warn(\\n                    'addStream() a track in this stream was removed, '\\n                    + `track.id:${trackId}`);\\n\\n                try {\\n                    info.rtpSender.stop();\\n                } catch (error) {\\n                    logger.warn(`rtpSender.stop() failed:${error}`);\\n                }\\n\\n                // Remove from the map.\\n                this._localTrackInfos.delete(track.id);\\n            }\\n        }\\n\\n        // It may need to renegotiate.\\n        this._emitNegotiationNeeded();\\n    }\\n\\n    /**\\n     * Closes the RTCPeerConnection and all the underlying ORTC objects.\\n     */\\n    close() {\\n        if (this._closed) {\\n            return;\\n        }\\n\\n        this._closed = true;\\n\\n        logger.debug('close()');\\n\\n        this._updateAndEmitSignalingStateChange(RTCSignalingState.closed);\\n\\n        // Close RTCIceGatherer.\\n        // NOTE: Not yet implemented by Edge.\\n        try {\\n            this._iceGatherer.close();\\n        } catch (error) {\\n            logger.warn(`iceGatherer.close() failed:${error}`);\\n        }\\n\\n        // Close RTCIceTransport.\\n        try {\\n            this._iceTransport.stop();\\n        } catch (error) {\\n            logger.warn(`iceTransport.stop() failed:${error}`);\\n        }\\n\\n        // Close RTCDtlsTransport.\\n        try {\\n            this._dtlsTransport.stop();\\n        } catch (error) {\\n            logger.warn(`dtlsTransport.stop() failed:${error}`);\\n        }\\n\\n        // Close and clear RTCRtpSenders.\\n        for (const info of this._localTrackInfos.values()) {\\n            const rtpSender = info.rtpSender;\\n\\n            try {\\n                rtpSender.stop();\\n            } catch (error) {\\n                logger.warn(`rtpSender.stop() failed:${error}`);\\n            }\\n        }\\n\\n        this._localTrackInfos.clear();\\n\\n        // Close and clear RTCRtpReceivers.\\n        for (const info of this._remoteTrackInfos.values()) {\\n            const rtpReceiver = info.rtpReceiver;\\n\\n            try {\\n                rtpReceiver.stop();\\n            } catch (error) {\\n                logger.warn(`rtpReceiver.stop() failed:${error}`);\\n            }\\n        }\\n\\n        this._remoteTrackInfos.clear();\\n\\n        // Clear remote streams.\\n        this._remoteStreams.clear();\\n    }\\n\\n    /**\\n     * Creates a local answer.\\n     *\\n     * @param {RTCOfferOptions} [options]\\n     */\\n    createAnswer(options) {\\n        logger.debug('createAnswer() options:', options);\\n\\n        if (this._closed) {\\n            return Promise.reject(\\n                new InvalidStateError('RTCPeerConnection closed'));\\n        }\\n\\n        if (this.signalingState !== RTCSignalingState.haveRemoteOffer) {\\n            return Promise.reject(new InvalidStateError(\\n                `invalid signalingState \\\"${this.signalingState}\\\"`));\\n        }\\n\\n        // Create an answer.\\n        const localDescription = this._createLocalDescription('answer');\\n\\n        // Resolve with it.\\n        return Promise.resolve(localDescription);\\n    }\\n\\n    /**\\n     * Creates a RTCDataChannel.\\n     */\\n    createDataChannel() {\\n        logger.debug('createDataChannel()');\\n\\n        // NOTE: DataChannels not implemented in Edge.\\n        throw new Error('createDataChannel() not supported in Edge');\\n    }\\n\\n    /**\\n     * Creates a local offer.\\n     *\\n     * @param {RTCOfferOptions} [options]\\n     */\\n    createOffer(options) {\\n        logger.debug('createOffer() options:', options);\\n\\n        if (this._closed) {\\n            return Promise.reject(\\n                new InvalidStateError('RTCPeerConnection closed'));\\n        }\\n\\n        if (this.signalingState !== RTCSignalingState.stable) {\\n            return Promise.reject(new InvalidStateError(\\n                `invalid signalingState \\\"${this.signalingState}\\\"`));\\n        }\\n\\n        // Use ice gathering complete promise an invalid state error occurs if\\n        // creating a local description before it is complete.\\n        return this._iceGatheringCompletePromise\\n            .then(() => {\\n                // Stub out _mids and _localCapabilities if creating an offer\\n                // as they are normally set on answer and will cause errors in\\n                // create a local description if falsy.\\n                if (!this.hasAttemptedOffer) {\\n                    if (!this._mids.size) {\\n                        this._mids = new Map([\\n                            [ 'audio', 'audio' ],\\n                            [ 'video', 'video' ]\\n                        ]);\\n                    }\\n\\n                    if (!this._localCapabilities) {\\n                        this._localCapabilities\\n                            = utils.getLocalCapabilities(\\n                                RTCRtpSender.getCapabilities());\\n                    }\\n\\n                    this.hasAttemptedOffer = true;\\n                }\\n\\n                return this._createLocalDescription('offer');\\n            });\\n    }\\n\\n    /**\\n     * Gets a sequence of local MediaStreams.\\n     * @return {sequence<MediaStream>}\\n     */\\n    getLocalStreams() {\\n        return Array.from(this._localTrackInfos.values())\\n            .map(info => info.stream)\\n            .filter((elem, pos, arr) => arr.indexOf(elem) === pos);\\n    }\\n\\n    /**\\n     * Gets a sequence of remote MediaStreams.\\n     * @return {sequence<MediaStream>}\\n     */\\n    getRemoteStreams() {\\n        return Array.from(this._remoteStreams.values());\\n    }\\n\\n    /**\\n     * Get RTP statistics. Implements both the old callbacks based signature\\n     * and the new Promise based style.\\n     *\\n     * Arguments in Promise mode:\\n     * @param {MediaStreamTrack} [selector]\\n     *\\n     * Arguments in callbacks mode:\\n     * @param {MediaStreamTrack} [selector]\\n     * @param {function(desc)} callback\\n     * @param {function(error)} errback\\n     */\\n    getStats(...args) {\\n        let usePromise;\\n        let selector;\\n        let callback;\\n        let errback;\\n\\n        if (typeof args[0] === 'function') {\\n            usePromise = false;\\n            callback = args[0];\\n            errback = args[1];\\n        } else if (typeof args[1] === 'function') {\\n            usePromise = false;\\n            selector = args[0];\\n            callback = args[1];\\n            errback = args[2];\\n        } else {\\n            usePromise = true;\\n            selector = args[0];\\n        }\\n\\n        if (!usePromise && !errback) {\\n            errback = error => {\\n                logger.error(`getStats() failed: ${error}`);\\n                logger.error(error.stack);\\n            };\\n        }\\n\\n        if (usePromise) {\\n            return this._getStats(selector);\\n        }\\n\\n        this._getStats(selector)\\n            .then(stats => callback(stats))\\n            .catch(error => errback(error));\\n    }\\n\\n    /**\\n     * Removes a local MediaStream.\\n     * @param {MediaStream} stream.\\n     * NOTE: Deprecated API.\\n     */\\n    removeStream(stream) {\\n        logger.debug('removeStream()');\\n\\n        if (this._closed) {\\n            throw new InvalidStateError('RTCPeerConnection closed');\\n        }\\n\\n        // Stop and remove the RTCRtpSender associated to each track.\\n        for (const track of stream.getTracks()) {\\n            // Ignore if track not present.\\n            if (!this._localTrackInfos.has(track.id)) {\\n                continue; // eslint-disable-line no-continue\\n            }\\n\\n            const rtpSender = this._localTrackInfos.get(track.id).rtpSender;\\n\\n            try {\\n                rtpSender.stop();\\n            } catch (error) {\\n                logger.warn(`rtpSender.stop() failed:${error}`);\\n            }\\n\\n            // Remove from the map.\\n            this._localTrackInfos.delete(track.id);\\n        }\\n\\n        // It may need to renegotiate.\\n        this._emitNegotiationNeeded();\\n    }\\n\\n    /**\\n     * Applies a local description.\\n     *\\n     * Arguments in Promise mode:\\n     * @param {RTCSessionDescriptionInit} desc\\n     */\\n    setLocalDescription(desc) {\\n        if (!desc) {\\n            throw new TypeError('description missing');\\n        }\\n\\n        logger.debug('setLocalDescription() desc:', desc);\\n\\n        return this._setLocalDescription(desc);\\n    }\\n\\n    /**\\n     * Applies a remote description.\\n     *\\n     * Arguments in Promise mode:\\n     * @param {RTCSessionDescriptionInit} desc\\n     */\\n    setRemoteDescription(desc) {\\n        if (!desc) {\\n            throw new TypeError('description missing');\\n        }\\n\\n        logger.debug('setRemoteDescription() desc:', desc);\\n\\n        return this._setRemoteDescription(desc);\\n    }\\n\\n    /**\\n     * Creates the local RTCSessionDescription.\\n     * @param {String} type - 'offer' / 'answer'.\\n     * @return {RTCSessionDescription}\\n     */\\n    _createLocalDescription(type) {\\n        const sdpObject = {};\\n        const localIceParameters = this._iceGatherer.getLocalParameters();\\n        const localIceCandidates = this._iceGatherer.getLocalCandidates();\\n        const localDtlsParameters = this._dtlsTransport.getLocalParameters();\\n\\n        // remoteDtlsParameters are not needed for offers.\\n        const remoteDtlsParameters = type === 'answer'\\n            ? this._dtlsTransport.getRemoteParameters() : null;\\n        const localCapabilities = this._localCapabilities;\\n        const localTrackInfos = this._localTrackInfos;\\n\\n        // Increase SDP version if an offer.\\n        if (type === 'offer') {\\n            this._sdpGlobalFields.version++;\\n        }\\n\\n        // SDP global fields.\\n        sdpObject.version = 0;\\n        sdpObject.origin = {\\n            address: '127.0.0.1',\\n            ipVer: 4,\\n            netType: 'IN',\\n            sessionId: this._sdpGlobalFields.id,\\n            sessionVersion: this._sdpGlobalFields.version,\\n            username: 'jitsi-ortc-webrtc-shim'\\n        };\\n        sdpObject.name = '-';\\n        sdpObject.timing = {\\n            start: 0,\\n            stop: 0\\n        };\\n        sdpObject.msidSemantic = {\\n            semantic: 'WMS',\\n            token: '*'\\n        };\\n        sdpObject.groups = [\\n            {\\n                mids: Array.from(this._mids.keys()).join(' '),\\n                type: 'BUNDLE'\\n            }\\n        ];\\n        sdpObject.media = [];\\n\\n        // DTLS fingerprint.\\n        sdpObject.fingerprint = {\\n            hash: localDtlsParameters.fingerprints[0].value,\\n            type: localDtlsParameters.fingerprints[0].algorithm\\n        };\\n\\n        // Let's check whether there is video RTX.\\n        let hasVideoRtx = false;\\n\\n        for (const codec of localCapabilities.codecs) {\\n            if (codec.kind === 'video' && codec.name === 'rtx') {\\n                hasVideoRtx = true;\\n                break;\\n            }\\n        }\\n\\n        // Add m= sections.\\n        for (const [ mid, kind ] of this._mids) {\\n            addMediaSection.call(this, mid, kind);\\n        }\\n\\n        // Create a RTCSessionDescription.\\n        const localDescription = new RTCSessionDescription({\\n            type,\\n            _sdpObject: sdpObject\\n        });\\n\\n        logger.debug('_createLocalDescription():', localDescription);\\n\\n        return localDescription;\\n\\n        /**\\n         * Add a m= section.\\n         */\\n        function addMediaSection(mid, kind) {\\n            const mediaObject = {};\\n\\n            // m= line.\\n            mediaObject.type = kind;\\n\\n            switch (kind) {\\n            case 'audio':\\n            case 'video':\\n                mediaObject.protocol = 'RTP/SAVPF';\\n                mediaObject.port = 9;\\n                mediaObject.direction = 'sendrecv';\\n                break;\\n            case 'application':\\n                mediaObject.protocol = 'DTLS/SCTP';\\n                mediaObject.port = 0; // Reject m section.\\n                mediaObject.payloads = '0'; // Just put something.\\n                mediaObject.direction = 'inactive';\\n                break;\\n            }\\n\\n            // c= line.\\n            mediaObject.connection = {\\n                ip: '127.0.0.1',\\n                version: 4\\n            };\\n\\n            // a=mid attribute.\\n            mediaObject.mid = mid;\\n\\n            // ICE.\\n            mediaObject.iceUfrag = localIceParameters.usernameFragment;\\n            mediaObject.icePwd = localIceParameters.password;\\n            mediaObject.candidates = [];\\n\\n            for (const candidate of localIceCandidates) {\\n                const candidateObject = {};\\n\\n                // rtcp-mux is assumed, so component is always 1 (RTP).\\n                candidateObject.component = 1;\\n                candidateObject.foundation = candidate.foundation;\\n                candidateObject.ip = candidate.ip;\\n                candidateObject.port = candidate.port;\\n                candidateObject.priority = candidate.priority;\\n                candidateObject.transport\\n                    = candidate.protocol.toLowerCase();\\n                candidateObject.type = candidate.type;\\n                if (candidateObject.transport === 'tcp') {\\n                    candidateObject.tcptype = candidate.tcpType;\\n                }\\n\\n                mediaObject.candidates.push(candidateObject);\\n            }\\n\\n            mediaObject.endOfCandidates = 'end-of-candidates';\\n\\n            // DTLS.\\n            // If 'offer' always use 'actpass'.\\n            if (type === 'offer') {\\n                mediaObject.setup = 'actpass';\\n            } else {\\n                mediaObject.setup = remoteDtlsParameters.role === 'server'\\n                    ? 'active' : 'passive';\\n            }\\n\\n            if (kind === 'audio' || kind === 'video') {\\n                mediaObject.rtp = [];\\n                mediaObject.rtcpFb = [];\\n                mediaObject.fmtp = [];\\n\\n                // Array of payload types.\\n                const payloads = [];\\n\\n                // Add codecs.\\n                for (const codec of localCapabilities.codecs) {\\n                    if (codec.kind && codec.kind !== kind) {\\n                        continue; // eslint-disable-line no-continue\\n                    }\\n\\n                    payloads.push(codec.preferredPayloadType);\\n\\n                    const rtpObject = {\\n                        codec: codec.name,\\n                        payload: codec.preferredPayloadType,\\n                        rate: codec.clockRate\\n                    };\\n\\n                    if (codec.numChannels > 1) {\\n                        rtpObject.encoding = codec.numChannels;\\n                    }\\n\\n                    mediaObject.rtp.push(rtpObject);\\n\\n                    // If codec has parameters add them into a=fmtp attributes.\\n                    if (codec.parameters) {\\n                        const paramFmtp = {\\n                            config: '',\\n                            payload: codec.preferredPayloadType\\n                        };\\n\\n                        for (const name of Object.keys(codec.parameters)) {\\n                            /* eslint-disable max-depth */\\n                            if (paramFmtp.config) {\\n                                paramFmtp.config += ';';\\n                            }\\n                            /* eslint-enable max-depth */\\n\\n                            paramFmtp.config\\n                                += `${name}=${codec.parameters[name]}`;\\n                        }\\n\\n                        if (paramFmtp.config) {\\n                            mediaObject.fmtp.push(paramFmtp);\\n                        }\\n                    }\\n\\n                    // Set RTCP feedback.\\n                    for (const fb of codec.rtcpFeedback || []) {\\n                        mediaObject.rtcpFb.push({\\n                            payload: codec.preferredPayloadType,\\n                            subtype: fb.parameter || undefined,\\n                            type: fb.type\\n                        });\\n                    }\\n                }\\n\\n                // If there are no codecs, set this m section as unavailable.\\n                if (payloads.length === 0) {\\n                    mediaObject.payloads = '9'; // Just put something.\\n                    mediaObject.port = 0;\\n                    mediaObject.direction = 'inactive';\\n                } else {\\n                    mediaObject.payloads = payloads.join(' ');\\n                }\\n\\n                // SSRCs.\\n                mediaObject.ssrcs = [];\\n                mediaObject.ssrcGroups = [];\\n\\n                // Add RTP sending stuff.\\n                for (const info of localTrackInfos.values()) {\\n                    const rtpSender = info.rtpSender;\\n                    const streamId = info.stream.id;\\n                    const track = rtpSender.track;\\n\\n                    // Ignore if ended.\\n                    if (track.readyState === 'ended') {\\n                        continue; // eslint-disable-line no-continue\\n                    }\\n\\n                    if (track.kind !== kind) {\\n                        continue; // eslint-disable-line no-continue\\n                    }\\n\\n                    // Set a random provisional SSRC if not set.\\n                    if (!info.ssrc) {\\n                        info.ssrc = SDPUtil.generateSsrc();\\n                    }\\n\\n                    // Whether RTX should be enabled.\\n                    const enableRtx = hasVideoRtx && track.kind === 'video';\\n\\n                    // Set a random provisional RTX SSRC if not set.\\n                    if (enableRtx && !info.rtxSsrc) {\\n                        info.rtxSsrc = info.ssrc + 1;\\n                    }\\n\\n                    mediaObject.ssrcs.push({\\n                        attribute: 'cname',\\n                        id: info.ssrc,\\n                        value: CNAME\\n                    });\\n\\n                    mediaObject.ssrcs.push({\\n                        attribute: 'msid',\\n                        id: info.ssrc,\\n                        value: `${streamId} ${track.id}`\\n                    });\\n\\n                    mediaObject.ssrcs.push({\\n                        attribute: 'mslabel',\\n                        id: info.ssrc,\\n                        value: streamId\\n                    });\\n\\n                    mediaObject.ssrcs.push({\\n                        attribute: 'label',\\n                        id: info.ssrc,\\n                        value: track.id\\n                    });\\n\\n                    if (enableRtx) {\\n                        mediaObject.ssrcs.push({\\n                            attribute: 'cname',\\n                            id: info.rtxSsrc,\\n                            value: CNAME\\n                        });\\n\\n                        mediaObject.ssrcs.push({\\n                            attribute: 'msid',\\n                            id: info.rtxSsrc,\\n                            value: `${streamId} ${track.id}`\\n                        });\\n\\n                        mediaObject.ssrcs.push({\\n                            attribute: 'mslabel',\\n                            id: info.rtxSsrc,\\n                            value: streamId\\n                        });\\n\\n                        mediaObject.ssrcs.push({\\n                            attribute: 'label',\\n                            id: info.rtxSsrc,\\n                            value: track.id\\n                        });\\n\\n                        mediaObject.ssrcGroups.push({\\n                            semantics: 'FID',\\n                            ssrcs: `${info.ssrc} ${info.rtxSsrc}`\\n                        });\\n                    }\\n                }\\n\\n                // RTP header extensions.\\n                mediaObject.ext = [];\\n\\n                for (const extension of localCapabilities.headerExtensions) {\\n                    if (extension.kind && extension.kind !== kind) {\\n                        continue; // eslint-disable-line no-continue\\n                    }\\n\\n                    mediaObject.ext.push({\\n                        value: extension.preferredId,\\n                        uri: extension.uri\\n                    });\\n                }\\n\\n                // a=rtcp-mux attribute.\\n                mediaObject.rtcpMux = 'rtcp-mux';\\n\\n                // a=rtcp-rsize.\\n                mediaObject.rtcpRsize = 'rtcp-rsize';\\n            }\\n\\n            // Add the media section.\\n            sdpObject.media.push(mediaObject);\\n        }\\n    }\\n\\n    /**\\n     * Emit 'addstream' event.\\n     * @private\\n     */\\n    _emitAddStream(stream) {\\n        if (this._closed) {\\n            return;\\n        }\\n\\n        logger.debug('emitting \\\"addstream\\\"');\\n\\n        const event = new yaeti.Event('addstream');\\n\\n        event.stream = stream;\\n        this.dispatchEvent(event);\\n    }\\n\\n    /**\\n     * May emit buffered ICE candidates.\\n     * @private\\n     */\\n    _emitBufferedIceCandidates() {\\n        if (this._closed) {\\n            return;\\n        }\\n\\n        for (const sdpCandidate of this._bufferedIceCandidates) {\\n            if (!sdpCandidate) {\\n                continue; // eslint-disable-line no-continue\\n            }\\n\\n            // Now we have set the MID values of the SDP O/A, so let's fill the\\n            // sdpMIndex of the candidate.\\n            sdpCandidate.sdpMIndex = this._mids.keys().next().value;\\n\\n            logger.debug(\\n                'emitting buffered \\\"icecandidate\\\", candidate:', sdpCandidate);\\n\\n            const event = new yaeti.Event('icecandidate');\\n\\n            event.candidate = sdpCandidate;\\n            this.dispatchEvent(event);\\n        }\\n\\n        this._bufferedIceCandidates = [];\\n    }\\n\\n    /**\\n     * May emit 'connectionstatechange' event.\\n     * @private\\n     */\\n    _emitConnectionStateChange() {\\n        if (this._closed && this.connectionState !== 'closed') {\\n            return;\\n        }\\n\\n        logger.debug(\\n            'emitting \\\"connectionstatechange\\\", connectionState:',\\n            this.connectionState);\\n\\n        const event = new yaeti.Event('connectionstatechange');\\n\\n        this.dispatchEvent(event);\\n    }\\n\\n    /**\\n     * May emit 'icecandidate' event.\\n     * @private\\n     */\\n    _emitIceCandidate(candidate) {\\n        if (this._closed) {\\n            return;\\n        }\\n\\n        let sdpCandidate = null;\\n\\n        if (candidate) {\\n            // NOTE: We assume BUNDLE so let's just emit candidates for the\\n            // first m= section.\\n            const sdpMIndex = this._mids.keys().next().value;\\n            const sdpMLineIndex = 0;\\n            let sdpAttribute\\n                = `candidate:${candidate.foundation} 1 ${candidate.protocol}`\\n                + ` ${candidate.priority} ${candidate.ip} ${candidate.port}`\\n                + ` typ ${candidate.type}`;\\n\\n            if (candidate.relatedAddress) {\\n                sdpAttribute += ` raddr ${candidate.relatedAddress}`;\\n            }\\n            if (candidate.relatedPort) {\\n                sdpAttribute += ` rport ${candidate.relatedPort}`;\\n            }\\n            if (candidate.protocol === 'tcp') {\\n                sdpAttribute += ` tcptype ${candidate.tcpType}`;\\n            }\\n\\n            sdpCandidate = {\\n                candidate: sdpAttribute,\\n                component: 1, // rtcp-mux assumed, so always 1 (RTP).\\n                foundation: candidate.foundation,\\n                ip: candidate.ip,\\n                port: candidate.port,\\n                priority: candidate.priority,\\n                protocol: candidate.protocol,\\n                type: candidate.type,\\n                sdpMIndex,\\n                sdpMLineIndex\\n            };\\n\\n            if (candidate.protocol === 'tcp') {\\n                sdpCandidate.tcptype = candidate.tcpType;\\n            }\\n            if (candidate.relatedAddress) {\\n                sdpCandidate.relatedAddress = candidate.relatedAddress;\\n            }\\n            if (candidate.relatedPort) {\\n                sdpCandidate.relatedPort = candidate.relatedPort;\\n            }\\n        }\\n\\n        // If we don't have yet a local description, buffer the candidate.\\n        if (this._localDescription) {\\n            logger.debug(\\n                'emitting \\\"icecandidate\\\", candidate:', sdpCandidate);\\n\\n            const event = new yaeti.Event('icecandidate');\\n\\n            event.candidate = sdpCandidate;\\n            this.dispatchEvent(event);\\n        } else {\\n            logger.debug(\\n                'buffering gathered ICE candidate:', sdpCandidate);\\n\\n            this._bufferedIceCandidates.push(sdpCandidate);\\n        }\\n    }\\n\\n    /**\\n     * May emit 'iceconnectionstatechange' event.\\n     * @private\\n     */\\n    _emitIceConnectionStateChange() {\\n        if (this._closed && this.iceConnectionState !== 'closed') {\\n            return;\\n        }\\n\\n        logger.debug(\\n            'emitting \\\"iceconnectionstatechange\\\", iceConnectionState:',\\n            this.iceConnectionState);\\n\\n        const event = new yaeti.Event('iceconnectionstatechange');\\n\\n        this.dispatchEvent(event);\\n    }\\n\\n    /**\\n     * May emit 'negotiationneeded' event.\\n     * @private\\n     */\\n    _emitNegotiationNeeded() {\\n        // Ignore if signalingState is not 'stable'.\\n        if (this.signalingState !== RTCSignalingState.stable) {\\n            return;\\n        }\\n\\n        logger.debug('emitting \\\"negotiationneeded\\\"');\\n\\n        const event = new yaeti.Event('negotiationneeded');\\n\\n        this.dispatchEvent(event);\\n    }\\n\\n    /**\\n     * Emit 'removestream' event.\\n     * @private\\n     */\\n    _emitRemoveStream(stream) {\\n        if (this._closed) {\\n            return;\\n        }\\n\\n        logger.debug('emitting \\\"removestream\\\"');\\n\\n        const event = new yaeti.Event('removestream');\\n\\n        event.stream = stream;\\n        this.dispatchEvent(event);\\n    }\\n\\n    /**\\n     * Get RTP parameters for a RTCRtpReceiver.\\n     * @private\\n     * @return {RTCRtpParameters}\\n     */\\n    _getParametersForRtpReceiver(kind, data) {\\n        const ssrc = data.ssrc;\\n        const rtxSsrc = data.rtxSsrc;\\n        const cname = data.cname;\\n        const localCapabilities = this._localCapabilities;\\n        const parameters = {\\n            codecs: [],\\n            degradationPreference: 'balanced',\\n            encodings: [],\\n            headerExtensions: [],\\n            muxId: '',\\n            rtcp: {\\n                cname,\\n                compound: true, // NOTE: Implemented in Edge.\\n                mux: true,\\n                reducedSize: true // NOTE: Not yet implemented in Edge.\\n            }\\n        };\\n\\n        const codecs = [];\\n        let codecPayloadType;\\n\\n        for (const codecCapability of localCapabilities.codecs) {\\n            if (codecCapability.kind !== kind\\n                || codecCapability.name === 'rtx') {\\n                continue; // eslint-disable-line no-continue\\n            }\\n\\n            codecPayloadType = codecCapability.preferredPayloadType;\\n            codecs.push({\\n                clockRate: codecCapability.clockRate,\\n                maxptime: codecCapability.maxptime,\\n                mimeType: codecCapability.mimeType,\\n                name: codecCapability.name,\\n                numChannels: codecCapability.numChannels,\\n                parameters: codecCapability.parameters,\\n                payloadType: codecCapability.preferredPayloadType,\\n                ptime: codecCapability.ptime,\\n                rtcpFeedback: codecCapability.rtcpFeedback\\n            });\\n\\n            break;\\n        }\\n\\n        if (rtxSsrc) {\\n            for (const codecCapability of localCapabilities.codecs) {\\n                if (codecCapability.kind !== kind\\n                    || codecCapability.name !== 'rtx') {\\n                    continue; // eslint-disable-line no-continue\\n                }\\n\\n                codecs.push({\\n                    clockRate: codecCapability.clockRate,\\n                    mimeType: codecCapability.mimeType,\\n                    name: 'rtx',\\n                    parameters: codecCapability.parameters,\\n                    payloadType: codecCapability.preferredPayloadType,\\n                    rtcpFeedback: codecCapability.rtcpFeedback\\n                });\\n\\n                break;\\n            }\\n        }\\n\\n        parameters.codecs = codecs;\\n\\n        const encoding = {\\n            active: true,\\n            codecPayloadType,\\n            ssrc\\n        };\\n\\n        if (rtxSsrc) {\\n            encoding.rtx = {\\n                ssrc: rtxSsrc\\n            };\\n        }\\n\\n        parameters.encodings.push(encoding);\\n\\n        for (const extension of localCapabilities.headerExtensions) {\\n            if (extension.kind !== kind) {\\n                continue; // eslint-disable-line no-continue\\n            }\\n\\n            parameters.headerExtensions.push({\\n                encrypt: extension.preferredEncrypt,\\n                id: extension.preferredId,\\n                uri: extension.uri\\n            });\\n        }\\n\\n        return parameters;\\n    }\\n\\n    /**\\n     * Get RTP parameters for a RTCRtpSender.\\n     * @private\\n     * @return {RTCRtpParameters}\\n     */\\n    _getParametersForRtpSender(kind, data) {\\n        const ssrc = data.ssrc;\\n        const rtxSsrc = data.rtxSsrc;\\n        const cname = CNAME;\\n        const localCapabilities = this._localCapabilities;\\n        const parameters = {\\n            codecs: [],\\n            degradationPreference: 'balanced',\\n            encodings: [],\\n            headerExtensions: [],\\n            muxId: '',\\n            rtcp: {\\n                cname,\\n                compound: true, // NOTE: Implemented in Edge.\\n                mux: true,\\n                reducedSize: true // NOTE: Not yet implemented in Edge.\\n            }\\n        };\\n\\n        const codecs = [];\\n        let codecPayloadType;\\n\\n        for (const codecCapability of localCapabilities.codecs) {\\n            if (codecCapability.kind !== kind\\n                || codecCapability.name === 'rtx') {\\n                continue; // eslint-disable-line no-continue\\n            }\\n\\n            codecPayloadType = codecCapability.preferredPayloadType;\\n            codecs.push({\\n                clockRate: codecCapability.clockRate,\\n                maxptime: codecCapability.maxptime,\\n                mimeType: codecCapability.mimeType,\\n                name: codecCapability.name,\\n                numChannels: codecCapability.numChannels,\\n                parameters: codecCapability.parameters,\\n                payloadType: codecCapability.preferredPayloadType,\\n                ptime: codecCapability.ptime,\\n                rtcpFeedback: codecCapability.rtcpFeedback\\n            });\\n\\n            break;\\n        }\\n\\n        if (rtxSsrc) {\\n            for (const codecCapability of localCapabilities.codecs) {\\n                if (codecCapability.kind !== kind\\n                    || codecCapability.name !== 'rtx') {\\n                    continue; // eslint-disable-line no-continue\\n                }\\n\\n                codecs.push({\\n                    clockRate: codecCapability.clockRate,\\n                    mimeType: codecCapability.mimeType,\\n                    name: 'rtx',\\n                    parameters: codecCapability.parameters,\\n                    payloadType: codecCapability.preferredPayloadType,\\n                    rtcpFeedback: codecCapability.rtcpFeedback\\n                });\\n\\n                break;\\n            }\\n        }\\n\\n        parameters.codecs = codecs;\\n\\n        const encoding = {\\n            active: true,\\n            codecPayloadType,\\n            ssrc\\n        };\\n\\n        if (rtxSsrc) {\\n            encoding.rtx = {\\n                ssrc: rtxSsrc\\n            };\\n        }\\n\\n        parameters.encodings.push(encoding);\\n\\n        for (const extension of localCapabilities.headerExtensions) {\\n            if (extension.kind !== kind) {\\n                continue; // eslint-disable-line no-continue\\n            }\\n\\n            parameters.headerExtensions.push({\\n                encrypt: extension.preferredEncrypt,\\n                id: extension.preferredId,\\n                uri: extension.uri\\n            });\\n        }\\n\\n        return parameters;\\n    }\\n\\n    /**\\n     * Promise based implementation for getStats().\\n     * @return {Promise} RTCStats dictionary.\\n     * @private\\n     */\\n    _getStats(selector) { // eslint-disable-line no-unused-vars\\n        if (this._closed) {\\n            return Promise.reject(\\n                new InvalidStateError('RTCPeerConnection closed'));\\n        }\\n\\n        const iceGatherer = this._iceGatherer;\\n        const iceTransport = this._iceTransport;\\n        const rtpSenders = [];\\n        const rtpReceivers = [];\\n        const promises = [];\\n\\n        // Get RtpSenders.\\n        for (const info of this._localTrackInfos.values()) {\\n            const { rtpSender, sending } = info;\\n\\n            if (sending) {\\n                rtpSenders.push(rtpSender);\\n            }\\n        }\\n\\n        // Get RtpReceivers.\\n        for (const info of this._remoteTrackInfos.values()) {\\n            const { rtpReceiver } = info;\\n\\n            rtpReceivers.push(rtpReceiver);\\n        }\\n\\n        // Collect all the stats.\\n\\n        if (iceGatherer) {\\n            promises.push(\\n                iceGatherer.getStats()\\n                    .catch(() => null));\\n        }\\n\\n        if (iceTransport) {\\n            promises.push(\\n                iceTransport.getStats()\\n                    .catch(() => null));\\n\\n            // NOTE: Proprietary stuff in Edge.\\n            if (typeof iceTransport.msGetStats === 'function') {\\n                promises.push(\\n                    iceTransport.msGetStats()\\n                        .catch(() => null));\\n            }\\n        }\\n\\n        for (const rtpSender of rtpSenders) {\\n            const isAudio = rtpSender.track.kind === 'audio';\\n\\n            promises.push(rtpSender.getStats()\\n                .then(data => {\\n                    // Remove audioLevel from type=\\\"track\\\" stats if this is\\n                    // not an audio sender.\\n                    if (!isAudio) {\\n                        for (const key of Object.keys(data)) {\\n                            const stat = data[key];\\n\\n                            if (stat.type === 'track') {\\n                                delete stat.audioLevel;\\n                            }\\n                        }\\n                    }\\n\\n                    return data;\\n                })\\n                .catch(() => null));\\n        }\\n\\n        for (const rtpReceiver of rtpReceivers) {\\n            const isAudio = rtpReceiver.track.kind === 'audio';\\n\\n            promises.push(rtpReceiver.getStats()\\n                .then(data => {\\n                    // Remove audioLevel from type=\\\"track\\\" stats if this is\\n                    // not an audio receiver.\\n                    if (!isAudio) {\\n                        for (const key of Object.keys(data)) {\\n                            const stat = data[key];\\n\\n                            if (stat.type === 'track') {\\n                                delete stat.audioLevel;\\n                            }\\n                        }\\n                    }\\n\\n                    return data;\\n                })\\n                .catch(() => null));\\n        }\\n\\n        return Promise.all(promises)\\n            .then(datas => {\\n                const stats = {};\\n\\n                for (const data of datas) {\\n                    if (!data) {\\n                        continue; // eslint-disable-line no-continue\\n                    }\\n\\n                    for (const key of Object.keys(data)) {\\n                        stats[key] = data[key];\\n                    }\\n                }\\n\\n                return stats;\\n            });\\n    }\\n\\n    /**\\n     * Handles the local initial answer.\\n     * @return {Promise}\\n     * @private\\n     */\\n    _handleLocalInitialAnswer(desc) {\\n        logger.debug('_handleLocalInitialAnswer(), desc:', desc);\\n\\n        const sdpObject = desc.sdpObject;\\n\\n        // Update local capabilities as decided by the app.\\n        this._localCapabilities = utils.extractCapabilities(sdpObject);\\n\\n        logger.debug('local capabilities:', this._localCapabilities);\\n\\n        // NOTE: We assume that the answer given by the app does not change\\n        // SSRC or PT values. If so, things won't work as expected.\\n    }\\n\\n    /**\\n     * Handles a local re-answer.\\n     * @return {Promise}\\n     * @private\\n     */\\n    _handleLocalReAnswer(desc) {\\n        logger.debug('_handleLocalReAnswer(), desc:', desc);\\n\\n        const sdpObject = desc.sdpObject;\\n\\n        // Update local capabilities as decided by the app.\\n        this._localCapabilities = utils.extractCapabilities(sdpObject);\\n\\n        logger.debug('local capabilities:', this._localCapabilities);\\n\\n        // NOTE: We assume that the answer given by the app does not change\\n        // SSRC or PT values. If so, things won't work as expected.\\n    }\\n\\n    /**\\n     * Handles the remote initial offer.\\n     * @return {Promise}\\n     * @private\\n     */\\n    _handleRemoteInitialOffer(desc) {\\n        logger.debug('_handleRemoteInitialOffer(), desc:', desc);\\n\\n        const sdpObject = desc.sdpObject;\\n\\n        // Set MID values.\\n        this._mids = utils.extractMids(sdpObject);\\n\\n        // Get remote RTP capabilities.\\n        const remoteCapabilities = utils.extractCapabilities(sdpObject);\\n\\n        logger.debug('remote capabilities:', remoteCapabilities);\\n\\n        // Get local RTP capabilities (filter them with remote capabilities).\\n        this._localCapabilities\\n            = utils.getLocalCapabilities(remoteCapabilities);\\n\\n        // Start ICE and DTLS.\\n        this._startIceAndDtls(desc);\\n    }\\n\\n    /**\\n     * Handles a remote re-offer.\\n     * @return {Promise}\\n     * @private\\n     */\\n    _handleRemoteReOffer(desc) {\\n        logger.debug('_handleRemoteReOffer(), desc:', desc);\\n\\n        const sdpObject = desc.sdpObject;\\n\\n        // Update MID values (just in case).\\n        this._mids = utils.extractMids(sdpObject);\\n\\n        // Get remote RTP capabilities (filter them with remote capabilities).\\n        const remoteCapabilities = utils.extractCapabilities(sdpObject);\\n\\n        logger.debug('remote capabilities:', remoteCapabilities);\\n\\n        // Update local RTP capabilities (just in case).\\n        this._localCapabilities\\n            = utils.getLocalCapabilities(remoteCapabilities);\\n    }\\n\\n    /**\\n     * Start receiving remote media.\\n     */\\n    _receiveMedia() {\\n        logger.debug('_receiveMedia()');\\n\\n        const currentRemoteSsrcs = new Set(this._remoteTrackInfos.keys());\\n        const newRemoteTrackInfos\\n            = utils.extractTrackInfos(this._remoteDescription.sdpObject);\\n\\n        // Map of new remote MediaStream indexed by MediaStream.jitsiRemoteId.\\n        const addedRemoteStreams = new Map();\\n\\n        // Map of remote MediaStream indexed by added MediaStreamTrack.\\n        // NOTE: Just filled for already existing streams.\\n        const addedRemoteTracks = new Map();\\n\\n        // Map of remote MediaStream indexed by removed MediaStreamTrack.\\n        const removedRemoteTracks = new Map();\\n\\n        logger.debug(\\n            '_receiveMedia() remote track infos:', newRemoteTrackInfos);\\n\\n        // Check new tracks.\\n        for (const [ ssrc, info ] of newRemoteTrackInfos) {\\n            // If already handled, ignore it.\\n            if (currentRemoteSsrcs.has(ssrc)) {\\n                continue; // eslint-disable-line no-continue\\n            }\\n\\n            logger.debug(`_receiveMedia() new remote track, ssrc:${ssrc}`);\\n\\n            // Otherwise append to the map.\\n            this._remoteTrackInfos.set(ssrc, info);\\n\\n            const kind = info.kind;\\n            const rtxSsrc = info.rtxSsrc;\\n            const streamRemoteId = info.streamId;\\n            const trackRemoteId = info.trackId;\\n            const cname = info.cname;\\n            const isNewStream = !this._remoteStreams.has(streamRemoteId);\\n            let stream;\\n\\n            if (isNewStream) {\\n                logger.debug(\\n                    `_receiveMedia() new remote stream, id:${streamRemoteId}`);\\n\\n                // Create a new MediaStream.\\n                stream = new MediaStream();\\n\\n                // Set custom property with the remote id.\\n                stream.jitsiRemoteId = streamRemoteId;\\n\\n                addedRemoteStreams.set(streamRemoteId, stream);\\n                this._remoteStreams.set(streamRemoteId, stream);\\n            } else {\\n                stream = this._remoteStreams.get(streamRemoteId);\\n            }\\n\\n            const rtpReceiver = new RTCRtpReceiver(this._dtlsTransport, kind);\\n            const parameters = this._getParametersForRtpReceiver(kind, {\\n                ssrc,\\n                rtxSsrc,\\n                cname\\n            });\\n\\n            // Store the track into the info object.\\n            // NOTE: This should not be needed, but Edge has a bug:\\n            //   https://developer.microsoft.com/en-us/microsoft-edge/platform/\\n            //   issues/12399497/\\n            info.track = rtpReceiver.track;\\n\\n            // Set error handler.\\n            rtpReceiver.onerror = ev => {\\n                logger.error('rtpReceiver \\\"error\\\" event, event:');\\n                logger.error(ev);\\n            };\\n\\n            // Fill the info with the stream and rtpReceiver.\\n            info.stream = stream;\\n            info.rtpReceiver = rtpReceiver;\\n\\n            logger.debug(\\n                'calling rtpReceiver.receive(), parameters:', parameters);\\n\\n            // Start receiving media.\\n            try {\\n                rtpReceiver.receive(parameters);\\n\\n                // Get the associated MediaStreamTrack.\\n                const track = info.track;\\n\\n                // Set custom property with the remote id.\\n                track.jitsiRemoteId = trackRemoteId;\\n\\n                // Add the track to the stream.\\n                stream.addTrack(track);\\n\\n                if (!addedRemoteStreams.has(streamRemoteId)) {\\n                    addedRemoteTracks.set(track, stream);\\n                }\\n            } catch (error) {\\n                logger.error(`rtpReceiver.receive() failed:${error.message}`);\\n                logger.error(error);\\n            }\\n        }\\n\\n        // Check track removal.\\n        for (const ssrc of currentRemoteSsrcs) {\\n            if (newRemoteTrackInfos.has(ssrc)) {\\n                continue; // eslint-disable-line no-continue\\n            }\\n\\n            logger.debug(`_receiveMedia() remote track removed, ssrc:${ssrc}`);\\n\\n            const info = this._remoteTrackInfos.get(ssrc);\\n            const stream = info.stream;\\n            const track = info.track;\\n            const rtpReceiver = info.rtpReceiver;\\n\\n            try {\\n                rtpReceiver.stop();\\n            } catch (error) {\\n                logger.warn(`rtpReceiver.stop() failed:${error}`);\\n            }\\n\\n            removedRemoteTracks.set(track, stream);\\n            stream.removeTrack(track);\\n            this._remoteTrackInfos.delete(ssrc);\\n        }\\n\\n        // Emit MediaStream 'addtrack' for new tracks in already existing\\n        // streams.\\n        for (const [ track, stream ] of addedRemoteTracks) {\\n            const event = new Event('addtrack');\\n\\n            event.track = track;\\n            stream.dispatchEvent(event);\\n        }\\n\\n        // Emit MediaStream 'removetrack' for removed tracks.\\n        for (const [ track, stream ] of removedRemoteTracks) {\\n            const event = new Event('removetrack');\\n\\n            event.track = track;\\n            stream.dispatchEvent(event);\\n        }\\n\\n        // Emit RTCPeerConnection 'addstream' for new remote streams.\\n        for (const stream of addedRemoteStreams.values()) {\\n            // Check whether at least a track was added, otherwise ignore it.\\n            if (stream.getTracks().length === 0) {\\n                logger.warn(\\n                    'ignoring new stream for which no track could be added');\\n\\n                addedRemoteStreams.delete(stream.jitsiRemoteId);\\n                this._remoteStreams.delete(stream.jitsiRemoteId);\\n            } else {\\n                this._emitAddStream(stream);\\n            }\\n        }\\n\\n        // Emit RTCPeerConnection 'removestream' for removed remote streams.\\n        for (const [ streamRemoteId, stream ] of this._remoteStreams) {\\n            if (stream.getTracks().length > 0) {\\n                continue; // eslint-disable-line no-continue\\n            }\\n\\n            this._remoteStreams.delete(streamRemoteId);\\n            this._emitRemoveStream(stream);\\n        }\\n    }\\n\\n    /**\\n     * Start sending our media to the remote.\\n     */\\n    _sendMedia() {\\n        logger.debug('_sendMedia()');\\n\\n        for (const info of this._localTrackInfos.values()) {\\n            // Ignore if already sending.\\n            if (info.sending) {\\n                continue; // eslint-disable-line no-continue\\n            }\\n\\n            const rtpSender = info.rtpSender;\\n            const ssrc = info.ssrc;\\n            const rtxSsrc = info.rtxSsrc;\\n            const track = rtpSender.track;\\n            const kind = track.kind;\\n\\n            const parameters = this._getParametersForRtpSender(kind, {\\n                ssrc,\\n                rtxSsrc\\n            });\\n\\n            logger.debug(\\n                'calling rtpSender.send(), parameters:', parameters);\\n\\n            // Start sending media.\\n            try {\\n                rtpSender.send(parameters);\\n\\n                // Update sending field.\\n                info.sending = true;\\n            } catch (error) {\\n                logger.error(`rtpSender.send() failed:${error.message}`);\\n                logger.error(error);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * Creates the RTCDtlsTransport.\\n     * @private\\n     */\\n    _setDtlsTransport(iceTransport) {\\n        const dtlsTransport = new RTCDtlsTransport(iceTransport);\\n\\n        // NOTE: Not yet implemented by Edge.\\n        dtlsTransport.onstatechange = () => {\\n            logger.debug(\\n                'dtlsTransport \\\"statechange\\\" event, '\\n                + `state:${dtlsTransport.state}`);\\n\\n            this._emitConnectionStateChange();\\n        };\\n\\n        // NOTE: Not standard, but implemented by Edge.\\n        dtlsTransport.ondtlsstatechange = () => {\\n            logger.debug(\\n                'dtlsTransport \\\"dtlsstatechange\\\" event, '\\n                + `state:${dtlsTransport.state}`);\\n\\n            this._emitConnectionStateChange();\\n        };\\n\\n        dtlsTransport.onerror = ev => {\\n            let message;\\n\\n            if (ev.message) {\\n                message = ev.message;\\n            } else if (ev.error) {\\n                message = ev.error.message;\\n            }\\n\\n            logger.error(`dtlsTransport \\\"error\\\" event, message:${message}`);\\n\\n            // TODO: Edge does not set state to 'failed' on error. We may\\n            // hack it.\\n\\n            this._emitConnectionStateChange();\\n        };\\n\\n        this._dtlsTransport = dtlsTransport;\\n    }\\n\\n    /**\\n     * Creates the RTCIceGatherer.\\n     * @private\\n     */\\n    _setIceGatherer(pcConfig) {\\n        const iceGatherOptions = {\\n            gatherPolicy: pcConfig.iceTransportPolicy || 'all',\\n            iceServers: pcConfig.iceServers\\n        };\\n        const iceGatherer = new RTCIceGatherer(iceGatherOptions);\\n\\n        // NOTE: Not yet implemented by Edge.\\n        iceGatherer.onstatechange = () => {\\n            logger.debug(\\n                `iceGatherer \\\"statechange\\\" event, state:${iceGatherer.state}`);\\n\\n            this._updateAndEmitIceGatheringStateChange(iceGatherer.state);\\n        };\\n\\n        iceGatherer.onlocalcandidate = ev => {\\n            let candidate = ev.candidate;\\n\\n            // NOTE: Not yet implemented by Edge.\\n            const complete = ev.complete;\\n\\n            logger.debug(\\n                'iceGatherer \\\"localcandidate\\\" event, candidate:', candidate);\\n\\n            // NOTE: Instead of null candidate or complete:true, current Edge\\n            // signals end of gathering with an empty candidate object.\\n            if (complete\\n                || !candidate\\n                || Object.keys(candidate).length === 0) {\\n\\n                candidate = null;\\n\\n                this._updateAndEmitIceGatheringStateChange(\\n                    RTCIceGatheringState.complete);\\n                this._resolveLocalIceGatheringPromise();\\n                this._emitIceCandidate(null);\\n            } else {\\n                this._emitIceCandidate(candidate);\\n            }\\n        };\\n\\n        iceGatherer.onerror = ev => {\\n            const errorCode = ev.errorCode;\\n            const errorText = ev.errorText;\\n\\n            logger.error(\\n                `iceGatherer \\\"error\\\" event, errorCode:${errorCode}, `\\n                + `errorText:${errorText}`);\\n        };\\n\\n        // NOTE: Not yet implemented by Edge, which starts gathering\\n        // automatically.\\n        try {\\n            iceGatherer.gather();\\n        } catch (error) {\\n            logger.warn(`iceGatherer.gather() failed:${error}`);\\n        }\\n\\n        this._iceGatherer = iceGatherer;\\n    }\\n\\n    /**\\n     * Creates the RTCIceTransport.\\n     * @private\\n     */\\n    _setIceTransport(iceGatherer) {\\n        const iceTransport = new RTCIceTransport(iceGatherer);\\n\\n        // NOTE: Not yet implemented by Edge.\\n        iceTransport.onstatechange = () => {\\n            logger.debug(\\n                'iceTransport \\\"statechange\\\" event, '\\n                + `state:${iceTransport.state}`);\\n\\n            this._emitIceConnectionStateChange();\\n        };\\n\\n        // NOTE: Not standard, but implemented by Edge.\\n        iceTransport.onicestatechange = () => {\\n            logger.debug(\\n                'iceTransport \\\"icestatechange\\\" event, '\\n                + `state:${iceTransport.state}`);\\n\\n            if (iceTransport.state === 'completed') {\\n                logger.debug(\\n                    'nominated candidate pair:',\\n                    iceTransport.getNominatedCandidatePair());\\n            }\\n\\n            this._emitIceConnectionStateChange();\\n        };\\n\\n        iceTransport.oncandidatepairchange = ev => {\\n            logger.debug(\\n                'iceTransport \\\"candidatepairchange\\\" event, '\\n                + `pair:${ev.pair}`);\\n        };\\n\\n        this._iceTransport = iceTransport;\\n    }\\n\\n    /**\\n     * Promise based implementation for setLocalDescription().\\n     * @returns {Promise}\\n     * @private\\n     */\\n    _setLocalDescription(desc) {\\n        if (this._closed) {\\n            return Promise.reject(\\n                new InvalidStateError('RTCPeerConnection closed'));\\n        }\\n\\n        let localDescription;\\n\\n        try {\\n            localDescription = new RTCSessionDescription(desc);\\n        } catch (error) {\\n            return Promise.reject(new TypeError(\\n                `invalid RTCSessionDescriptionInit: ${error}`));\\n        }\\n\\n        switch (desc.type) {\\n        case 'offer': {\\n            if (this.signalingState !== RTCSignalingState.stable) {\\n                return Promise.reject(new InvalidStateError(\\n                    `invalid signalingState \\\"${this.signalingState}\\\"`));\\n            }\\n\\n            return Promise.resolve()\\n                .then(() => {\\n                    const sdpObject = localDescription.sdpObject;\\n\\n                    // Update local values? Needed?\\n                    this._localCapabilities\\n                        = utils.extractCapabilities(sdpObject);\\n                    this._localDescription = localDescription;\\n\\n                    // Update signaling state.\\n                    this._updateAndEmitSignalingStateChange(\\n                        RTCSignalingState.haveLocalOffer);\\n                })\\n                .catch(error => {\\n                    logger.error(\\n                        `setLocalDescription() failed: ${error.message}`);\\n                    logger.error(error);\\n\\n                    throw error;\\n                });\\n        }\\n        case 'answer': {\\n            if (this.signalingState !== RTCSignalingState.haveRemoteOffer) {\\n                return Promise.reject(new InvalidStateError(\\n                    `invalid signalingState \\\"${this.signalingState}\\\"`));\\n            }\\n\\n            const isLocalInitialAnswer = Boolean(!this._localDescription);\\n\\n            return Promise.resolve()\\n                .then(() => {\\n                    // Different handling for initial answer and re-answer.\\n                    if (isLocalInitialAnswer) {\\n                        return this._handleLocalInitialAnswer(localDescription);\\n                    } else { // eslint-disable-line no-else-return\\n                        return this._handleLocalReAnswer(localDescription);\\n                    }\\n                })\\n                .then(() => {\\n                    logger.debug('setLocalDescription() succeed');\\n\\n                    // Update local description.\\n                    this._localDescription = localDescription;\\n\\n                    // Update signaling state.\\n                    this._updateAndEmitSignalingStateChange(\\n                        RTCSignalingState.stable);\\n\\n                    // If initial answer, emit buffered ICE candidates.\\n                    if (isLocalInitialAnswer) {\\n                        this._emitBufferedIceCandidates();\\n                    }\\n\\n                    // Send our RTP.\\n                    this._sendMedia();\\n\\n                    // Receive remote RTP.\\n                    this._receiveMedia();\\n                })\\n                .catch(error => {\\n                    logger.error(\\n                        `setLocalDescription() failed: ${error.message}`);\\n                    logger.error(error);\\n\\n                    throw error;\\n                });\\n        }\\n        default:\\n            return Promise.reject(new TypeError(\\n                `unsupported description.type \\\"${desc.type}\\\"`));\\n        }\\n    }\\n\\n    /**\\n     * Promise based implementation for setRemoteDescription().\\n     * @returns {Promise}\\n     * @private\\n     */\\n    _setRemoteDescription(desc) {\\n        if (this._closed) {\\n            return Promise.reject(\\n                new InvalidStateError('RTCPeerConnection closed'));\\n        }\\n\\n        let remoteDescription;\\n\\n        try {\\n            remoteDescription = new RTCSessionDescription(desc);\\n        } catch (error) {\\n            return Promise.reject(new TypeError(\\n                `invalid RTCSessionDescriptionInit: ${error}`));\\n        }\\n\\n        switch (desc.type) {\\n        case 'offer': {\\n            if (this.signalingState !== RTCSignalingState.stable) {\\n                return Promise.reject(new InvalidStateError(\\n                    `invalid signalingState \\\"${this.signalingState}\\\"`));\\n            }\\n\\n            const isRemoteInitialOffer = Boolean(!this._remoteDescription);\\n\\n            return Promise.resolve()\\n                .then(() => {\\n                    // Different handling for initial answer and re-answer.\\n                    if (isRemoteInitialOffer) {\\n                        return this._handleRemoteInitialOffer(\\n                            remoteDescription);\\n                    } else { // eslint-disable-line no-else-return\\n                        return this._handleRemoteReOffer(remoteDescription);\\n                    }\\n                })\\n                .then(() => {\\n                    logger.debug('setRemoteDescription() succeed');\\n\\n                    this._remoteDescription = remoteDescription;\\n\\n                    this._updateAndEmitSignalingStateChange(\\n                        RTCSignalingState.haveRemoteOffer);\\n                })\\n                .catch(error => {\\n                    logger.error(`setRemoteDescription() failed: ${error}`);\\n\\n                    throw error;\\n                });\\n        }\\n        case 'answer': {\\n            if (this.signalingState !== RTCSignalingState.haveLocalOffer) {\\n                return Promise.reject(new InvalidStateError(\\n                    `invalid signalingState \\\"${this.signalingState}\\\"`));\\n            }\\n\\n            return Promise.resolve()\\n                .then(() => {\\n                    // Update remote description.\\n                    this._remoteDescription = remoteDescription;\\n\\n                    // Update signaling state.\\n                    this._updateAndEmitSignalingStateChange(\\n                        RTCSignalingState.stable);\\n                })\\n                .catch(error => {\\n                    logger.error(`setRemoteDescription() failed: ${error}`);\\n\\n                    throw error;\\n                });\\n        }\\n        default:\\n            return Promise.reject(new TypeError(\\n                `unsupported description.type \\\"${desc.type}\\\"`));\\n        }\\n    }\\n\\n    /**\\n     * Start ICE and DTLS connection procedures.\\n     * @param {RTCSessionDescription} desc - Remote description.\\n     */\\n    _startIceAndDtls(desc) {\\n        const sdpObject = desc.sdpObject;\\n        const remoteIceParameters\\n            = utils.extractIceParameters(sdpObject);\\n        const remoteIceCandidates\\n            = utils.extractIceCandidates(sdpObject);\\n        const remoteDtlsParameters\\n            = utils.extractDtlsParameters(sdpObject);\\n\\n        // Start the RTCIceTransport.\\n        switch (desc.type) {\\n        case 'offer':\\n            this._iceTransport.start(\\n                this._iceGatherer, remoteIceParameters, 'controlled');\\n            break;\\n        case 'answer':\\n            this._iceTransport.start(\\n                this._iceGatherer, remoteIceParameters, 'controlling');\\n            break;\\n        }\\n\\n        // Add remote ICE candidates.\\n        // NOTE: Remove candidates that Edge doesn't like.\\n        for (const candidate of remoteIceCandidates) {\\n            if (candidate.port === 0 || candidate.port === 9) {\\n                continue; // eslint-disable-line no-continue\\n            }\\n\\n            this._iceTransport.addRemoteCandidate(candidate);\\n        }\\n\\n        // Also signal a 'complete' candidate as per spec.\\n        // NOTE: It should be {complete: true} but Edge prefers {}.\\n        // NOTE: We know that addCandidate() is never used so we need to signal\\n        // end of candidates (otherwise the RTCIceTransport never enters the\\n        // 'completed' state).\\n        this._iceTransport.addRemoteCandidate({});\\n\\n        // Set desired remote DTLS role (as we receive the offer).\\n        switch (desc.type) {\\n        case 'offer':\\n            remoteDtlsParameters.role = 'server';\\n            break;\\n        case 'answer':\\n            remoteDtlsParameters.role = 'client';\\n            break;\\n        }\\n\\n        // Start RTCDtlsTransport.\\n        this._dtlsTransport.start(remoteDtlsParameters);\\n    }\\n\\n    /**\\n     * May update iceGatheringState and emit 'icegatheringstatechange' event.\\n     * @private\\n     */\\n    _updateAndEmitIceGatheringStateChange(state) {\\n        if (this._closed || state === this.iceGatheringState) {\\n            return;\\n        }\\n\\n        this._iceGatheringState = state;\\n\\n        logger.debug(\\n            'emitting \\\"icegatheringstatechange\\\", iceGatheringState:',\\n            this.iceGatheringState);\\n\\n        const event = new yaeti.Event('icegatheringstatechange');\\n\\n        this.dispatchEvent(event);\\n    }\\n\\n    /**\\n     * May update signalingState and emit 'signalingstatechange' event.\\n     * @private\\n     */\\n    _updateAndEmitSignalingStateChange(state) {\\n        if (state === this.signalingState) {\\n            return;\\n        }\\n\\n        this._signalingState = state;\\n\\n        logger.debug(\\n            'emitting \\\"signalingstatechange\\\", signalingState:',\\n            this.signalingState);\\n\\n        const event = new yaeti.Event('signalingstatechange');\\n\\n        this.dispatchEvent(event);\\n    }\\n}\\n\",\"/* global __filename, RTCSessionDescription */\\n\\nimport { getLogger } from 'jitsi-meet-logger';\\nimport transform from 'sdp-transform';\\n\\nimport * as GlobalOnErrorHandler from '../util/GlobalOnErrorHandler';\\nimport JitsiRemoteTrack from './JitsiRemoteTrack';\\nimport * as MediaType from '../../service/RTC/MediaType';\\nimport LocalSdpMunger from './LocalSdpMunger';\\nimport RTC from './RTC';\\nimport RTCUtils from './RTCUtils';\\nimport browser from '../browser';\\nimport RTCEvents from '../../service/RTC/RTCEvents';\\nimport RtxModifier from '../xmpp/RtxModifier';\\n\\n// FIXME SDP tools should end up in some kind of util module\\nimport SDP from '../xmpp/SDP';\\nimport SdpConsistency from '../xmpp/SdpConsistency';\\nimport { SdpTransformWrap } from '../xmpp/SdpTransformUtil';\\nimport SDPUtil from '../xmpp/SDPUtil';\\nimport * as SignalingEvents from '../../service/RTC/SignalingEvents';\\n\\nconst logger = getLogger(__filename);\\nconst SIMULCAST_LAYERS = 3;\\nconst SIM_LAYER_1_RID = '1';\\nconst SIM_LAYER_2_RID = '2';\\nconst SIM_LAYER_3_RID = '3';\\nconst SIM_LAYER_RIDS = [ SIM_LAYER_1_RID, SIM_LAYER_2_RID, SIM_LAYER_3_RID ];\\n\\n/* eslint-disable max-params */\\n\\n/**\\n * Creates new instance of 'TraceablePeerConnection'.\\n *\\n * @param {RTC} rtc the instance of <tt>RTC</tt> service\\n * @param {number} id the peer connection id assigned by the parent RTC module.\\n * @param {SignalingLayer} signalingLayer the signaling layer instance\\n * @param {object} iceConfig WebRTC 'PeerConnection' ICE config\\n * @param {object} constraints WebRTC 'PeerConnection' constraints\\n * @param {boolean} isP2P indicates whether or not the new instance will be used\\n * in a peer to peer connection\\n * @param {object} options <tt>TracablePeerConnection</tt> config options.\\n * @param {boolean} options.disableSimulcast if set to 'true' will disable\\n * the simulcast.\\n * @param {boolean} options.disableRtx if set to 'true' will disable the RTX\\n * @param {boolean} options.enableFirefoxSimulcast if set to 'true' will enable\\n * experimental simulcast support on Firefox.\\n * @param {boolean} options.disableH264 If set to 'true' H264 will be\\n *      disabled by removing it from the SDP.\\n * @param {boolean} options.preferH264 if set to 'true' H264 will be preferred\\n * over other video codecs.\\n * @param {boolean} options.enableLayerSuspension if set to 'true', we will\\n * cap the video send bitrate when we are told we have not been selected by\\n * any endpoints (and therefore the non-thumbnail streams are not in use).\\n *\\n * FIXME: initially the purpose of TraceablePeerConnection was to be able to\\n * debug the peer connection. Since many other responsibilities have been added\\n * it would make sense to extract a separate class from it and come up with\\n * a more suitable name.\\n *\\n * @constructor\\n */\\nexport default function TraceablePeerConnection(\\n        rtc,\\n        id,\\n        signalingLayer,\\n        iceConfig,\\n        constraints,\\n        isP2P,\\n        options) {\\n\\n    /**\\n     * Indicates whether or not this peer connection instance is actively\\n     * sending/receiving audio media. When set to <tt>false</tt> the SDP audio\\n     * media direction will be adjusted to 'inactive' in order to suspend\\n     * the transmission.\\n     * @type {boolean}\\n     * @private\\n     */\\n    this.audioTransferActive = true;\\n\\n    /**\\n     * Indicates whether or not this peer connection instance is actively\\n     * sending/receiving video media. When set to <tt>false</tt> the SDP video\\n     * media direction will be adjusted to 'inactive' in order to suspend\\n     * the transmission.\\n     * @type {boolean}\\n     * @private\\n     */\\n    this.videoTransferActive = true;\\n\\n    /**\\n     * The parent instance of RTC service which created this\\n     * <tt>TracablePeerConnection</tt>.\\n     * @type {RTC}\\n     */\\n    this.rtc = rtc;\\n\\n    /**\\n     * The peer connection identifier assigned by the RTC module.\\n     * @type {number}\\n     */\\n    this.id = id;\\n\\n    /**\\n     * Indicates whether or not this instance is used in a peer to peer\\n     * connection.\\n     * @type {boolean}\\n     */\\n    this.isP2P = isP2P;\\n\\n    // FIXME: We should support multiple streams per jid.\\n    /**\\n     * The map holds remote tracks associated with this peer connection.\\n     * It maps user's JID to media type and remote track\\n     * (one track per media type per user's JID).\\n     * @type {Map<string, Map<MediaType, JitsiRemoteTrack>>}\\n     */\\n    this.remoteTracks = new Map();\\n\\n    /**\\n     * A map which stores local tracks mapped by {@link JitsiLocalTrack.rtcId}\\n     * @type {Map<number, JitsiLocalTrack>}\\n     */\\n    this.localTracks = new Map();\\n\\n    /**\\n     * Keeps tracks of the WebRTC <tt>MediaStream</tt>s that have been added to\\n     * the underlying WebRTC PeerConnection.\\n     * @type {Array}\\n     * @private\\n     */\\n    this._addedStreams = [];\\n\\n    /**\\n     * @typedef {Object} TPCGroupInfo\\n     * @property {string} semantics the SSRC groups semantics\\n     * @property {Array<number>} ssrcs group's SSRCs in order where the first\\n     * one is group's primary SSRC, the second one is secondary (RTX) and so\\n     * on...\\n     */\\n    /**\\n     * @typedef {Object} TPCSSRCInfo\\n     * @property {Array<number>} ssrcs an array which holds all track's SSRCs\\n     * @property {Array<TPCGroupInfo>} groups an array stores all track's SSRC\\n     * groups\\n     */\\n    /**\\n     * Holds the info about local track's SSRCs mapped per their\\n     * {@link JitsiLocalTrack.rtcId}\\n     * @type {Map<number, TPCSSRCInfo>}\\n     */\\n    this.localSSRCs = new Map();\\n\\n    /**\\n     * The local ICE username fragment for this session.\\n     */\\n    this.localUfrag = null;\\n\\n    /**\\n     * The remote ICE username fragment for this session.\\n     */\\n    this.remoteUfrag = null;\\n\\n    /**\\n     * The signaling layer which operates this peer connection.\\n     * @type {SignalingLayer}\\n     */\\n    this.signalingLayer = signalingLayer;\\n\\n    // SignalingLayer listeners\\n    this._peerVideoTypeChanged = this._peerVideoTypeChanged.bind(this);\\n    this.signalingLayer.on(\\n        SignalingEvents.PEER_VIDEO_TYPE_CHANGED,\\n        this._peerVideoTypeChanged);\\n\\n    this._peerMutedChanged = this._peerMutedChanged.bind(this);\\n    this.signalingLayer.on(\\n        SignalingEvents.PEER_MUTED_CHANGED,\\n        this._peerMutedChanged);\\n    this.options = options;\\n\\n    this.peerconnection\\n        = new RTCUtils.RTCPeerConnectionType(iceConfig, constraints);\\n    this.updateLog = [];\\n    this.stats = {};\\n    this.statsinterval = null;\\n\\n    /**\\n     * @type {number} The max number of stats to keep in this.stats. Limit to\\n     * 300 values, i.e. 5 minutes; set to 0 to disable\\n     */\\n    this.maxstats = options.maxstats;\\n    const Interop = require('@jitsi/sdp-interop').Interop;\\n\\n    this.interop = new Interop();\\n    const Simulcast = require('@jitsi/sdp-simulcast');\\n\\n    this.simulcast = new Simulcast({ numOfLayers: SIMULCAST_LAYERS,\\n        explodeRemoteSimulcast: false });\\n    this.sdpConsistency = new SdpConsistency(this.toString());\\n\\n    /**\\n     * Munges local SDP provided to the Jingle Session in order to prevent from\\n     * sending SSRC updates on attach/detach and mute/unmute (for video).\\n     * @type {LocalSdpMunger}\\n     */\\n    this.localSdpMunger = new LocalSdpMunger(this);\\n\\n    /**\\n     * TracablePeerConnection uses RTC's eventEmitter\\n     * @type {EventEmitter}\\n     */\\n    this.eventEmitter = rtc.eventEmitter;\\n    this.rtxModifier = new RtxModifier();\\n\\n    // override as desired\\n    this.trace = (what, info) => {\\n        logger.debug(what, info);\\n\\n        this.updateLog.push({\\n            time: new Date(),\\n            type: what,\\n            value: info || ''\\n        });\\n    };\\n    this.onicecandidate = null;\\n    this.peerconnection.onicecandidate = event => {\\n        this.trace(\\n            'onicecandidate',\\n            JSON.stringify(event.candidate, null, ' '));\\n\\n        if (this.onicecandidate !== null) {\\n            this.onicecandidate(event);\\n        }\\n    };\\n    this.peerconnection.onaddstream\\n        = event => this._remoteStreamAdded(event.stream);\\n    this.peerconnection.onremovestream\\n        = event => this._remoteStreamRemoved(event.stream);\\n    this.onsignalingstatechange = null;\\n    this.peerconnection.onsignalingstatechange = event => {\\n        this.trace('onsignalingstatechange', this.signalingState);\\n        if (this.onsignalingstatechange !== null) {\\n            this.onsignalingstatechange(event);\\n        }\\n    };\\n    this.oniceconnectionstatechange = null;\\n    this.peerconnection.oniceconnectionstatechange = event => {\\n        this.trace('oniceconnectionstatechange', this.iceConnectionState);\\n        if (this.oniceconnectionstatechange !== null) {\\n            this.oniceconnectionstatechange(event);\\n        }\\n    };\\n    this.onnegotiationneeded = null;\\n    this.peerconnection.onnegotiationneeded = event => {\\n        this.trace('onnegotiationneeded');\\n        if (this.onnegotiationneeded !== null) {\\n            this.onnegotiationneeded(event);\\n        }\\n    };\\n    this.ondatachannel = null;\\n    this.peerconnection.ondatachannel = event => {\\n        this.trace('ondatachannel');\\n        if (this.ondatachannel !== null) {\\n            this.ondatachannel(event);\\n        }\\n    };\\n\\n    if (this.maxstats) {\\n        this.statsinterval = window.setInterval(() => {\\n            this.getStats(stats => {\\n                if (stats.result\\n                    && typeof stats.result === 'function') {\\n                    const results = stats.result();\\n\\n                    for (let i = 0; i < results.length; ++i) {\\n                        const res = results[i];\\n\\n                        res.names().forEach(name => {\\n                            this._processStat(res, name, res.stat(name));\\n                        });\\n                    }\\n                } else {\\n                    stats.forEach(r => this._processStat(r, '', r));\\n                }\\n            }, () => {\\n\\n                // empty error callback\\n            });\\n        }, 1000);\\n    }\\n\\n    logger.info(`Create new ${this}`);\\n}\\n\\n/* eslint-enable max-params */\\n\\n/**\\n * Process stat and adds it to the array of stats we store.\\n * @param report the current stats report.\\n * @param name the name of the report, if available\\n * @param statValue the value to add.\\n * @private\\n */\\nTraceablePeerConnection.prototype._processStat\\n    = function(report, name, statValue) {\\n        const id = `${report.id}-${name}`;\\n        let s = this.stats[id];\\n        const now = new Date();\\n\\n        if (!s) {\\n            this.stats[id] = s = {\\n                startTime: now,\\n                endTime: now,\\n                values: [],\\n                times: []\\n            };\\n        }\\n        s.values.push(statValue);\\n        s.times.push(now.getTime());\\n        if (s.values.length > this.maxstats) {\\n            s.values.shift();\\n            s.times.shift();\\n        }\\n        s.endTime = now;\\n    };\\n\\n/**\\n * Returns a string representation of a SessionDescription object.\\n */\\nconst dumpSDP = function(description) {\\n    if (typeof description === 'undefined' || description === null) {\\n        return '';\\n    }\\n\\n    return `type: ${description.type}\\\\r\\\\n${description.sdp}`;\\n};\\n\\n\\n/**\\n * Forwards the {@link peerconnection.iceConnectionState} state except that it\\n * will convert \\\"completed\\\" into \\\"connected\\\" where both mean that the ICE has\\n * succeeded and is up and running. We never see \\\"completed\\\" state for\\n * the JVB connection, but it started appearing for the P2P one. This method\\n * allows to adapt old logic to this new situation.\\n * @return {string}\\n */\\nTraceablePeerConnection.prototype.getConnectionState = function() {\\n    const state = this.peerconnection.iceConnectionState;\\n\\n    if (state === 'completed') {\\n        return 'connected';\\n    }\\n\\n    return state;\\n};\\n\\n/**\\n * Obtains the media direction for given {@link MediaType}. The method takes\\n * into account whether or not there are any local tracks for media and\\n * the {@link audioTransferActive} and {@link videoTransferActive} flags.\\n * @param {MediaType} mediaType\\n * @return {string} one of the SDP direction constants ('sendrecv, 'recvonly'\\n * etc.) which should be used when setting local description on the peer\\n * connection.\\n * @private\\n */\\nTraceablePeerConnection.prototype._getDesiredMediaDirection = function(\\n        mediaType) {\\n    let mediaTransferActive = true;\\n\\n    if (mediaType === MediaType.AUDIO) {\\n        mediaTransferActive = this.audioTransferActive;\\n    } else if (mediaType === MediaType.VIDEO) {\\n        mediaTransferActive = this.videoTransferActive;\\n    }\\n    if (mediaTransferActive) {\\n        return this.hasAnyTracksOfType(mediaType) ? 'sendrecv' : 'recvonly';\\n    }\\n\\n    return 'inactive';\\n};\\n\\n/**\\n * Tells whether or not this TPC instance is using Simulcast.\\n * @return {boolean} <tt>true</tt> if simulcast is enabled and active or\\n * <tt>false</tt> if it's turned off.\\n */\\nTraceablePeerConnection.prototype.isSimulcastOn = function() {\\n    return !this.options.disableSimulcast\\n        && browser.supportsSimulcast()\\n\\n        // Firefox has been added as supporting simulcast, but it is\\n        // experimental so we only want to do it for firefox if the config\\n        // option is set.  Unfortunately, browser::supportsSimulcast()\\n        // doesn't have a reference to the config options, so we have\\n        // to do it here\\n        && (!browser.isFirefox()\\n            || this.options.enableFirefoxSimulcast);\\n};\\n\\n/**\\n * Handles {@link SignalingEvents.PEER_VIDEO_TYPE_CHANGED}\\n * @param {string} endpointId the video owner's ID (MUC nickname)\\n * @param {VideoType} videoType the new value\\n * @private\\n */\\nTraceablePeerConnection.prototype._peerVideoTypeChanged = function(\\n        endpointId,\\n        videoType) {\\n    // Check if endpointId has a value to avoid action on random track\\n    if (!endpointId) {\\n        logger.error(`No endpointID on peerVideoTypeChanged ${this}`);\\n\\n        return;\\n    }\\n    const videoTrack = this.getRemoteTracks(endpointId, MediaType.VIDEO);\\n\\n    if (videoTrack.length) {\\n        // NOTE 1 track per media type is assumed\\n        videoTrack[0]._setVideoType(videoType);\\n    }\\n};\\n\\n/**\\n * Handles remote track mute / unmute events.\\n * @param {string} endpointId the track owner's identifier (MUC nickname)\\n * @param {MediaType} mediaType \\\"audio\\\" or \\\"video\\\"\\n * @param {boolean} isMuted the new mute state\\n * @private\\n */\\nTraceablePeerConnection.prototype._peerMutedChanged = function(\\n        endpointId,\\n        mediaType,\\n        isMuted) {\\n    // Check if endpointId is a value to avoid doing action on all remote tracks\\n    if (!endpointId) {\\n        logger.error('On peerMuteChanged - no endpoint ID');\\n\\n        return;\\n    }\\n    const track = this.getRemoteTracks(endpointId, mediaType);\\n\\n    if (track.length) {\\n        // NOTE 1 track per media type is assumed\\n        track[0].setMute(isMuted);\\n    }\\n};\\n\\n/**\\n * Obtains local tracks for given {@link MediaType}. If the <tt>mediaType</tt>\\n * argument is omitted the list of all local tracks will be returned.\\n * @param {MediaType} [mediaType]\\n * @return {Array<JitsiLocalTrack>}\\n */\\nTraceablePeerConnection.prototype.getLocalTracks = function(mediaType) {\\n    let tracks = Array.from(this.localTracks.values());\\n\\n    if (mediaType !== undefined) {\\n        tracks = tracks.filter(track => track.getType() === mediaType);\\n    }\\n\\n    return tracks;\\n};\\n\\n/**\\n * Checks whether or not this {@link TraceablePeerConnection} instance contains\\n * any local tracks for given <tt>mediaType</tt>.\\n * @param {MediaType} mediaType\\n * @return {boolean}\\n */\\nTraceablePeerConnection.prototype.hasAnyTracksOfType = function(mediaType) {\\n    if (!mediaType) {\\n        throw new Error('\\\"mediaType\\\" is required');\\n    }\\n\\n    return this.getLocalTracks(mediaType).length > 0;\\n};\\n\\n/**\\n * Obtains all remote tracks currently known to this PeerConnection instance.\\n * @param {string} [endpointId] the track owner's identifier (MUC nickname)\\n * @param {MediaType} [mediaType] the remote tracks will be filtered\\n * by their media type if this argument is specified.\\n * @return {Array<JitsiRemoteTrack>}\\n */\\nTraceablePeerConnection.prototype.getRemoteTracks = function(\\n        endpointId,\\n        mediaType) {\\n    const remoteTracks = [];\\n    const endpoints\\n        = endpointId ? [ endpointId ] : this.remoteTracks.keys();\\n\\n    for (const endpoint of endpoints) {\\n        const endpointTrackMap = this.remoteTracks.get(endpoint);\\n\\n        if (!endpointTrackMap) {\\n\\n            // Otherwise an empty Map() would have to be allocated above\\n            // eslint-disable-next-line no-continue\\n            continue;\\n        }\\n\\n        for (const trackMediaType of endpointTrackMap.keys()) {\\n            // per media type filtering\\n            if (!mediaType || mediaType === trackMediaType) {\\n                const mediaTrack = endpointTrackMap.get(trackMediaType);\\n\\n                if (mediaTrack) {\\n                    remoteTracks.push(mediaTrack);\\n                }\\n            }\\n        }\\n    }\\n\\n    return remoteTracks;\\n};\\n\\n/**\\n * Tries to find {@link JitsiTrack} for given SSRC number. It will search both\\n * local and remote tracks bound to this instance.\\n * @param {number} ssrc\\n * @return {JitsiTrack|null}\\n */\\nTraceablePeerConnection.prototype.getTrackBySSRC = function(ssrc) {\\n    if (typeof ssrc !== 'number') {\\n        throw new Error(`SSRC ${ssrc} is not a number`);\\n    }\\n    for (const localTrack of this.localTracks.values()) {\\n        if (this.getLocalSSRC(localTrack) === ssrc) {\\n            return localTrack;\\n        }\\n    }\\n    for (const remoteTrack of this.getRemoteTracks()) {\\n        if (remoteTrack.getSSRC() === ssrc) {\\n            return remoteTrack;\\n        }\\n    }\\n\\n    return null;\\n};\\n\\n/**\\n * Tries to find SSRC number for given {@link JitsiTrack} id. It will search\\n * both local and remote tracks bound to this instance.\\n * @param {string} id\\n * @return {number|null}\\n */\\nTraceablePeerConnection.prototype.getSsrcByTrackId = function(id) {\\n\\n    const findTrackById = track => track.getTrack().id === id;\\n    const localTrack = this.getLocalTracks().find(findTrackById);\\n\\n    if (localTrack) {\\n        return this.getLocalSSRC(localTrack);\\n    }\\n\\n    const remoteTrack = this.getRemoteTracks().find(findTrackById);\\n\\n    if (remoteTrack) {\\n        return remoteTrack.getSSRC();\\n    }\\n\\n    return null;\\n};\\n\\n/**\\n * Called when new remote MediaStream is added to the PeerConnection.\\n * @param {MediaStream} stream the WebRTC MediaStream for remote participant\\n */\\nTraceablePeerConnection.prototype._remoteStreamAdded = function(stream) {\\n    const streamId = RTC.getStreamID(stream);\\n\\n    if (!RTC.isUserStreamById(streamId)) {\\n        logger.info(\\n            `${this} ignored remote 'stream added' event for non-user stream`\\n             + `id: ${streamId}`);\\n\\n        return;\\n    }\\n\\n    // Bind 'addtrack'/'removetrack' event handlers\\n    if (browser.isChromiumBased() || browser.isEdge()) {\\n        stream.onaddtrack = event => {\\n            this._remoteTrackAdded(stream, event.track);\\n        };\\n        stream.onremovetrack = event => {\\n            this._remoteTrackRemoved(stream, event.track);\\n        };\\n    }\\n\\n    // Call remoteTrackAdded for each track in the stream\\n    const streamAudioTracks = stream.getAudioTracks();\\n\\n    for (const audioTrack of streamAudioTracks) {\\n        this._remoteTrackAdded(stream, audioTrack);\\n    }\\n    const streamVideoTracks = stream.getVideoTracks();\\n\\n    for (const videoTrack of streamVideoTracks) {\\n        this._remoteTrackAdded(stream, videoTrack);\\n    }\\n};\\n\\n\\n/**\\n * Called on \\\"track added\\\" and \\\"stream added\\\" PeerConnection events (because we\\n * handle streams on per track basis). Finds the owner and the SSRC for\\n * the track and passes that to ChatRoom for further processing.\\n * @param {MediaStream} stream the WebRTC MediaStream instance which is\\n * the parent of the track\\n * @param {MediaStreamTrack} track the WebRTC MediaStreamTrack added for remote\\n * participant\\n */\\nTraceablePeerConnection.prototype._remoteTrackAdded = function(stream, track) {\\n    const streamId = RTC.getStreamID(stream);\\n    const mediaType = track.kind;\\n\\n    logger.info(`${this} remote track added:`, streamId, mediaType);\\n\\n    // look up an associated JID for a stream id\\n    if (!mediaType) {\\n        GlobalOnErrorHandler.callErrorHandler(\\n            new Error(\\n                `MediaType undefined for remote track, stream id: ${streamId}`\\n            ));\\n\\n        // Abort\\n        return;\\n    }\\n\\n    const remoteSDP = new SDP(this.remoteDescription.sdp);\\n    const mediaLines\\n        = remoteSDP.media.filter(mls => mls.startsWith(`m=${mediaType}`));\\n\\n    if (!mediaLines.length) {\\n        GlobalOnErrorHandler.callErrorHandler(\\n            new Error(\\n                `No media lines for type ${\\n                    mediaType} found in remote SDP for remote track: ${\\n                    streamId}`));\\n\\n        // Abort\\n        return;\\n    }\\n\\n    let ssrcLines = SDPUtil.findLines(mediaLines[0], 'a=ssrc:');\\n\\n    ssrcLines\\n        = ssrcLines.filter(line => line.indexOf(`msid:${streamId}`) !== -1);\\n    if (!ssrcLines.length) {\\n        GlobalOnErrorHandler.callErrorHandler(\\n            new Error(\\n                `No SSRC lines for streamId ${\\n                    streamId} for remote track, media type: ${mediaType}`));\\n\\n        // Abort\\n        return;\\n    }\\n\\n    // FIXME the length of ssrcLines[0] not verified, but it will fail\\n    // with global error handler anyway\\n    const ssrcStr = ssrcLines[0].substring(7).split(' ')[0];\\n    const trackSsrc = Number(ssrcStr);\\n    const ownerEndpointId = this.signalingLayer.getSSRCOwner(trackSsrc);\\n\\n    if (isNaN(trackSsrc) || trackSsrc < 0) {\\n        GlobalOnErrorHandler.callErrorHandler(\\n            new Error(\\n                `Invalid SSRC: ${ssrcStr} for remote track, msid: ${\\n                    streamId} media type: ${mediaType}`));\\n\\n        // Abort\\n        return;\\n    } else if (!ownerEndpointId) {\\n        GlobalOnErrorHandler.callErrorHandler(\\n            new Error(\\n                `No SSRC owner known for: ${\\n                    trackSsrc} for remote track, msid: ${\\n                    streamId} media type: ${mediaType}`));\\n\\n        // Abort\\n        return;\\n    }\\n\\n    logger.log(`${this} associated ssrc`, ownerEndpointId, trackSsrc);\\n\\n    const peerMediaInfo\\n        = this.signalingLayer.getPeerMediaInfo(ownerEndpointId, mediaType);\\n\\n    if (!peerMediaInfo) {\\n        GlobalOnErrorHandler.callErrorHandler(\\n            new Error(\\n                `${this}: no peer media info available for ${\\n                    ownerEndpointId}`));\\n\\n        return;\\n    }\\n\\n    const muted = peerMediaInfo.muted;\\n    const videoType = peerMediaInfo.videoType; // can be undefined\\n\\n    this._createRemoteTrack(\\n        ownerEndpointId, stream, track, mediaType, videoType, trackSsrc, muted);\\n};\\n\\n// FIXME cleanup params\\n/* eslint-disable max-params */\\n\\n/**\\n * Initializes a new JitsiRemoteTrack instance with the data provided by\\n * the signaling layer and SDP.\\n *\\n * @param {string} ownerEndpointId the owner's endpoint ID (MUC nickname)\\n * @param {MediaStream} stream the WebRTC stream instance\\n * @param {MediaStreamTrack} track the WebRTC track instance\\n * @param {MediaType} mediaType the track's type of the media\\n * @param {VideoType} [videoType] the track's type of the video (if applicable)\\n * @param {number} ssrc the track's main SSRC number\\n * @param {boolean} muted the initial muted status\\n */\\nTraceablePeerConnection.prototype._createRemoteTrack = function(\\n        ownerEndpointId,\\n        stream,\\n        track,\\n        mediaType,\\n        videoType,\\n        ssrc,\\n        muted) {\\n    let remoteTracksMap = this.remoteTracks.get(ownerEndpointId);\\n\\n    if (!remoteTracksMap) {\\n        remoteTracksMap = new Map();\\n        this.remoteTracks.set(ownerEndpointId, remoteTracksMap);\\n    }\\n\\n    const existingTrack = remoteTracksMap.get(mediaType);\\n\\n    if (existingTrack && existingTrack.getTrack() === track) {\\n        // Ignore duplicated event which can originate either from\\n        // 'onStreamAdded' or 'onTrackAdded'.\\n        logger.info(\\n            `${this} ignored duplicated remote track added event for: `\\n                + `${ownerEndpointId}, ${mediaType}`);\\n\\n        return;\\n    } else if (existingTrack) {\\n        logger.error(\\n            `${this} overwriting remote track for`\\n                + `${ownerEndpointId} ${mediaType}`);\\n    }\\n\\n    const remoteTrack\\n        = new JitsiRemoteTrack(\\n                this.rtc,\\n                this.rtc.conference,\\n                ownerEndpointId,\\n                stream,\\n                track,\\n                mediaType,\\n                videoType,\\n                ssrc,\\n                muted,\\n                this.isP2P);\\n\\n    remoteTracksMap.set(mediaType, remoteTrack);\\n\\n    this.eventEmitter.emit(RTCEvents.REMOTE_TRACK_ADDED, remoteTrack);\\n};\\n\\n/* eslint-enable max-params */\\n\\n/**\\n * Handles remote stream removal.\\n * @param stream the WebRTC MediaStream object which is being removed from the\\n * PeerConnection\\n */\\nTraceablePeerConnection.prototype._remoteStreamRemoved = function(stream) {\\n    if (!RTC.isUserStream(stream)) {\\n        const id = RTC.getStreamID(stream);\\n\\n        logger.info(\\n            `Ignored remote 'stream removed' event for non-user stream ${id}`);\\n\\n        return;\\n    }\\n\\n    // Call remoteTrackRemoved for each track in the stream\\n    const streamVideoTracks = stream.getVideoTracks();\\n\\n    for (const videoTrack of streamVideoTracks) {\\n        this._remoteTrackRemoved(stream, videoTrack);\\n    }\\n    const streamAudioTracks = stream.getAudioTracks();\\n\\n    for (const audioTrack of streamAudioTracks) {\\n        this._remoteTrackRemoved(stream, audioTrack);\\n    }\\n};\\n\\n/**\\n * Handles remote media track removal.\\n * @param {MediaStream} stream WebRTC MediaStream instance which is the parent\\n * of the track.\\n * @param {MediaStreamTrack} track the WebRTC MediaStreamTrack which has been\\n * removed from the PeerConnection.\\n */\\nTraceablePeerConnection.prototype._remoteTrackRemoved = function(\\n        stream,\\n        track) {\\n    const streamId = RTC.getStreamID(stream);\\n    const trackId = track && RTC.getTrackID(track);\\n\\n    logger.info(`${this} - remote track removed: ${streamId}, ${trackId}`);\\n\\n    if (!streamId) {\\n        GlobalOnErrorHandler.callErrorHandler(\\n            new Error(`${this} remote track removal failed - no stream ID`));\\n\\n        return;\\n    }\\n\\n    if (!trackId) {\\n        GlobalOnErrorHandler.callErrorHandler(\\n            new Error(`${this} remote track removal failed - no track ID`));\\n\\n        return;\\n    }\\n\\n    if (!this._removeRemoteTrackById(streamId, trackId)) {\\n        // NOTE this warning is always printed when user leaves the room,\\n        // because we remove remote tracks manually on MUC member left event,\\n        // before the SSRCs are removed by Jicofo. In most cases it is fine to\\n        // ignore this warning, but still it's better to keep it printed for\\n        // debugging purposes.\\n        //\\n        // We could change the behaviour to emit track removed only from here,\\n        // but the order of the events will change and consuming apps could\\n        // behave unexpectedly (the \\\"user left\\\" event would come before \\\"track\\n        // removed\\\" events).\\n        logger.warn(\\n            `${this} Removed track not found for msid: ${streamId},\\n             track id: ${trackId}`);\\n    }\\n};\\n\\n/**\\n * Finds remote track by it's stream and track ids.\\n * @param {string} streamId the media stream id as defined by the WebRTC\\n * @param {string} trackId the media track id as defined by the WebRTC\\n * @return {JitsiRemoteTrack|undefined} the track's instance or\\n * <tt>undefined</tt> if not found.\\n * @private\\n */\\nTraceablePeerConnection.prototype._getRemoteTrackById = function(\\n        streamId,\\n        trackId) {\\n    // .find will break the loop once the first match is found\\n    for (const endpointTrackMap of this.remoteTracks.values()) {\\n        for (const mediaTrack of endpointTrackMap.values()) {\\n            // FIXME verify and try to use ===\\n            /* eslint-disable eqeqeq */\\n            if (mediaTrack.getStreamId() == streamId\\n                && mediaTrack.getTrackId() == trackId) {\\n                return mediaTrack;\\n            }\\n\\n            /* eslint-enable eqeqeq */\\n        }\\n    }\\n\\n    return undefined;\\n};\\n\\n/**\\n * Removes all JitsiRemoteTracks associated with given MUC nickname\\n * (resource part of the JID). Returns array of removed tracks.\\n *\\n * @param {string} owner - The resource part of the MUC JID.\\n * @returns {JitsiRemoteTrack[]}\\n */\\nTraceablePeerConnection.prototype.removeRemoteTracks = function(owner) {\\n    const removedTracks = [];\\n    const remoteTracksMap = this.remoteTracks.get(owner);\\n\\n    if (remoteTracksMap) {\\n        const removedAudioTrack = remoteTracksMap.get(MediaType.AUDIO);\\n        const removedVideoTrack = remoteTracksMap.get(MediaType.VIDEO);\\n\\n        removedAudioTrack && removedTracks.push(removedAudioTrack);\\n        removedVideoTrack && removedTracks.push(removedVideoTrack);\\n\\n        this.remoteTracks.delete(owner);\\n    }\\n\\n    logger.debug(\\n        `${this} removed remote tracks for ${owner} count: ${\\n            removedTracks.length}`);\\n\\n    return removedTracks;\\n};\\n\\n/**\\n * Removes and disposes given <tt>JitsiRemoteTrack</tt> instance. Emits\\n * {@link RTCEvents.REMOTE_TRACK_REMOVED}.\\n * @param {JitsiRemoteTrack} toBeRemoved\\n */\\nTraceablePeerConnection.prototype._removeRemoteTrack = function(toBeRemoved) {\\n    toBeRemoved.dispose();\\n    const participantId = toBeRemoved.getParticipantId();\\n    const remoteTracksMap = this.remoteTracks.get(participantId);\\n\\n    if (!remoteTracksMap) {\\n        logger.error(\\n            `removeRemoteTrack: no remote tracks map for ${participantId}`);\\n    } else if (!remoteTracksMap.delete(toBeRemoved.getType())) {\\n        logger.error(\\n            `Failed to remove ${toBeRemoved} - type mapping messed up ?`);\\n    }\\n    this.eventEmitter.emit(RTCEvents.REMOTE_TRACK_REMOVED, toBeRemoved);\\n};\\n\\n/**\\n * Removes and disposes <tt>JitsiRemoteTrack</tt> identified by given stream and\\n * track ids.\\n *\\n * @param {string} streamId the media stream id as defined by the WebRTC\\n * @param {string} trackId the media track id as defined by the WebRTC\\n * @returns {JitsiRemoteTrack|undefined} the track which has been removed or\\n * <tt>undefined</tt> if no track matching given stream and track ids was\\n * found.\\n */\\nTraceablePeerConnection.prototype._removeRemoteTrackById = function(\\n        streamId,\\n        trackId) {\\n    const toBeRemoved = this._getRemoteTrackById(streamId, trackId);\\n\\n    if (toBeRemoved) {\\n        this._removeRemoteTrack(toBeRemoved);\\n    }\\n\\n    return toBeRemoved;\\n};\\n\\n/**\\n * @typedef {Object} SSRCGroupInfo\\n * @property {Array<number>} ssrcs group's SSRCs\\n * @property {string} semantics\\n */\\n/**\\n * @typedef {Object} TrackSSRCInfo\\n * @property {Array<number>} ssrcs track's SSRCs\\n * @property {Array<SSRCGroupInfo>} groups track's SSRC groups\\n */\\n/**\\n * Returns map with keys msid and <tt>TrackSSRCInfo</tt> values.\\n * @param {Object} desc the WebRTC SDP instance.\\n * @return {Map<string,TrackSSRCInfo>}\\n */\\nfunction extractSSRCMap(desc) {\\n    /**\\n     * Track SSRC infos mapped by stream ID (msid)\\n     * @type {Map<string,TrackSSRCInfo>}\\n     */\\n    const ssrcMap = new Map();\\n\\n    /**\\n     * Groups mapped by primary SSRC number\\n     * @type {Map<number,Array<SSRCGroupInfo>>}\\n     */\\n    const groupsMap = new Map();\\n\\n    if (typeof desc !== 'object' || desc === null\\n        || typeof desc.sdp !== 'string') {\\n        logger.warn('An empty description was passed as an argument.');\\n\\n        return ssrcMap;\\n    }\\n\\n    const session = transform.parse(desc.sdp);\\n\\n    if (!Array.isArray(session.media)) {\\n        return ssrcMap;\\n    }\\n\\n    for (const mLine of session.media) {\\n        if (!Array.isArray(mLine.ssrcs)) {\\n            continue; // eslint-disable-line no-continue\\n        }\\n\\n        if (Array.isArray(mLine.ssrcGroups)) {\\n            for (const group of mLine.ssrcGroups) {\\n                if (typeof group.semantics !== 'undefined'\\n                    && typeof group.ssrcs !== 'undefined') {\\n                    // Parse SSRCs and store as numbers\\n                    const groupSSRCs\\n                        = group.ssrcs.split(' ').map(\\n                            ssrcStr => parseInt(ssrcStr, 10));\\n                    const primarySSRC = groupSSRCs[0];\\n\\n                    // Note that group.semantics is already present\\n\\n                    group.ssrcs = groupSSRCs;\\n\\n                    // eslint-disable-next-line max-depth\\n                    if (!groupsMap.has(primarySSRC)) {\\n                        groupsMap.set(primarySSRC, []);\\n                    }\\n                    groupsMap.get(primarySSRC).push(group);\\n                }\\n            }\\n        }\\n        for (const ssrc of mLine.ssrcs) {\\n            if (ssrc.attribute !== 'msid') {\\n                continue; // eslint-disable-line no-continue\\n            }\\n\\n            const msid = ssrc.value;\\n            let ssrcInfo = ssrcMap.get(msid);\\n\\n            if (!ssrcInfo) {\\n                ssrcInfo = {\\n                    ssrcs: [],\\n                    groups: [],\\n                    msid\\n                };\\n                ssrcMap.set(msid, ssrcInfo);\\n            }\\n\\n            const ssrcNumber = ssrc.id;\\n\\n            ssrcInfo.ssrcs.push(ssrcNumber);\\n\\n            if (groupsMap.has(ssrcNumber)) {\\n                const ssrcGroups = groupsMap.get(ssrcNumber);\\n\\n                for (const group of ssrcGroups) {\\n                    ssrcInfo.groups.push(group);\\n                }\\n            }\\n        }\\n    }\\n\\n    return ssrcMap;\\n}\\n\\n/**\\n * Takes a SessionDescription object and returns a \\\"normalized\\\" version.\\n * Currently it takes care of ordering the a=ssrc lines and denoting receive\\n * only SSRCs.\\n */\\nconst normalizePlanB = function(desc) {\\n    if (typeof desc !== 'object' || desc === null\\n        || typeof desc.sdp !== 'string') {\\n        logger.warn('An empty description was passed as an argument.');\\n\\n        return desc;\\n    }\\n\\n    // eslint-disable-next-line no-shadow\\n    const transform = require('sdp-transform');\\n    const session = transform.parse(desc.sdp);\\n\\n    if (typeof session !== 'undefined'\\n            && typeof session.media !== 'undefined'\\n            && Array.isArray(session.media)) {\\n        session.media.forEach(mLine => {\\n\\n            // Chrome appears to be picky about the order in which a=ssrc lines\\n            // are listed in an m-line when rtx is enabled (and thus there are\\n            // a=ssrc-group lines with FID semantics). Specifically if we have\\n            // \\\"a=ssrc-group:FID S1 S2\\\" and the \\\"a=ssrc:S2\\\" lines appear before\\n            // the \\\"a=ssrc:S1\\\" lines, SRD fails.\\n            // So, put SSRC which appear as the first SSRC in an FID ssrc-group\\n            // first.\\n            const firstSsrcs = [];\\n            const newSsrcLines = [];\\n\\n            if (typeof mLine.ssrcGroups !== 'undefined'\\n                && Array.isArray(mLine.ssrcGroups)) {\\n                mLine.ssrcGroups.forEach(group => {\\n                    if (typeof group.semantics !== 'undefined'\\n                        && group.semantics === 'FID') {\\n                        if (typeof group.ssrcs !== 'undefined') {\\n                            firstSsrcs.push(Number(group.ssrcs.split(' ')[0]));\\n                        }\\n                    }\\n                });\\n            }\\n\\n            if (Array.isArray(mLine.ssrcs)) {\\n                let i;\\n\\n                for (i = 0; i < mLine.ssrcs.length; i++) {\\n                    if (typeof mLine.ssrcs[i] === 'object'\\n                        && typeof mLine.ssrcs[i].id !== 'undefined'\\n                        && firstSsrcs.indexOf(mLine.ssrcs[i].id) >= 0) {\\n                        newSsrcLines.push(mLine.ssrcs[i]);\\n                        delete mLine.ssrcs[i];\\n                    }\\n                }\\n\\n                for (i = 0; i < mLine.ssrcs.length; i++) {\\n                    if (typeof mLine.ssrcs[i] !== 'undefined') {\\n                        newSsrcLines.push(mLine.ssrcs[i]);\\n                    }\\n                }\\n\\n                mLine.ssrcs = replaceDefaultUnifiedPlanMsid(newSsrcLines);\\n            }\\n        });\\n    }\\n\\n    const resStr = transform.write(session);\\n\\n\\n    return new RTCSessionDescription({\\n        type: desc.type,\\n        sdp: resStr\\n    });\\n};\\n\\n/**\\n * Unified plan differentiates a remote track not associated with a stream using\\n * the msid \\\"-\\\", which can incorrectly trigger an onaddstream event in plan-b.\\n * For jitsi, these tracks are actually receive-only ssrcs. To prevent\\n * onaddstream from firing, remove the ssrcs with msid \\\"-\\\" except the cname\\n * line. Normally the ssrcs are not used by the client, as the bridge controls\\n * media flow, but keep one reference to the ssrc for the p2p case.\\n *\\n * @param {Array<Object>} ssrcLines - The ssrc lines from a remote description.\\n * @private\\n * @returns {Array<Object>} ssrcLines with removed lines referencing msid \\\"-\\\".\\n */\\nfunction replaceDefaultUnifiedPlanMsid(ssrcLines = []) {\\n    if (!browser.isChrome() || !browser.isVersionGreaterThan(70)) {\\n        return ssrcLines;\\n    }\\n\\n    let filteredLines = [ ...ssrcLines ];\\n\\n    const problematicSsrcIds = ssrcLines.filter(ssrcLine =>\\n        ssrcLine.attribute === 'mslabel' && ssrcLine.value === '-')\\n        .map(ssrcLine => ssrcLine.id);\\n\\n    problematicSsrcIds.forEach(ssrcId => {\\n        // Find the cname which is to be modified and left in.\\n        const cnameLine = filteredLines.find(line =>\\n            line.id === ssrcId && line.attribute === 'cname');\\n\\n        cnameLine.value = `recvonly-${ssrcId}`;\\n\\n        // Remove all of lines for the ssrc.\\n        filteredLines\\n            = filteredLines.filter(line => line.id !== ssrcId);\\n\\n        // But re-add the cname line so there is a reference kept to the ssrc\\n        // in the SDP.\\n        filteredLines.push(cnameLine);\\n    });\\n\\n    return filteredLines;\\n}\\n\\n/**\\n * Makes sure that both audio and video directions are configured as 'sendrecv'.\\n * @param {Object} localDescription the SDP object as defined by WebRTC.\\n */\\nconst enforceSendRecv = function(localDescription) {\\n    if (!localDescription) {\\n        throw new Error('No local description passed in.');\\n    }\\n\\n    const transformer = new SdpTransformWrap(localDescription.sdp);\\n    const audioMedia = transformer.selectMedia('audio');\\n    let changed = false;\\n\\n    if (audioMedia && audioMedia.direction !== 'sendrecv') {\\n        audioMedia.direction = 'sendrecv';\\n        changed = true;\\n    }\\n\\n    const videoMedia = transformer.selectMedia('video');\\n\\n    if (videoMedia && videoMedia.direction !== 'sendrecv') {\\n        videoMedia.direction = 'sendrecv';\\n        changed = true;\\n    }\\n\\n    if (changed) {\\n        return new RTCSessionDescription({\\n            type: localDescription.type,\\n            sdp: transformer.toRawSDP()\\n        });\\n    }\\n\\n    return localDescription;\\n};\\n\\n/**\\n *\\n * @param {JitsiLocalTrack} localTrack\\n */\\nTraceablePeerConnection.prototype.getLocalSSRC = function(localTrack) {\\n    const ssrcInfo = this._getSSRC(localTrack.rtcId);\\n\\n    return ssrcInfo && ssrcInfo.ssrcs[0];\\n};\\n\\n/**\\n * When doing unified plan simulcast, we'll have a set of ssrcs with the\\n * same msid but no ssrc-group, since unified plan signals the simulcast\\n * group via the a=simulcast line.  Unfortunately, Jicofo will complain\\n * if it sees ssrcs with matching msids but no ssrc-group, so we'll inject\\n * an ssrc-group line to make Jicofo happy.\\n * NOTE: unlike plan B simulcast, the ssrcs in this inject ssrc-group will\\n * NOT necessarily be in order of quality (low to high) because:\\n * a) when translating between unified plan and plan b the order of the ssrcs\\n * is not preserved and\\n * b) it isn't guaranteed that firefox will give them to us in order to begin\\n * with\\n * @param desc A session description object (with 'type' and 'sdp' fields)\\n * @return A session description object with its sdp field modified to\\n * contain an inject ssrc-group for simulcast\\n */\\nTraceablePeerConnection.prototype._injectSsrcGroupForUnifiedSimulcast\\n    = function(desc) {\\n        const sdp = transform.parse(desc.sdp);\\n        const video = sdp.media.find(mline => mline.type === 'video');\\n\\n        if (video.simulcast_03) {\\n            const ssrcs = [];\\n\\n            video.ssrcs.forEach(ssrc => {\\n                if (ssrc.attribute === 'msid') {\\n                    ssrcs.push(ssrc.id);\\n                }\\n            });\\n            video.ssrcGroups = video.ssrcGroups || [];\\n            if (video.ssrcGroups.find(group => group.semantics === 'SIM')) {\\n                // Group already exists, no need to do anything\\n                return desc;\\n            }\\n            video.ssrcGroups.push({\\n                semantics: 'SIM',\\n                ssrcs: ssrcs.join(' ')\\n            });\\n        }\\n\\n        return new RTCSessionDescription({\\n            type: desc.type,\\n            sdp: transform.write(sdp)\\n        });\\n    };\\n\\n/* eslint-disable-next-line vars-on-top */\\nconst getters = {\\n    signalingState() {\\n        return this.peerconnection.signalingState;\\n    },\\n    iceConnectionState() {\\n        return this.peerconnection.iceConnectionState;\\n    },\\n    localDescription() {\\n        let desc = this.peerconnection.localDescription;\\n\\n        if (!desc) {\\n            logger.debug('getLocalDescription no localDescription found');\\n\\n            return {};\\n        }\\n\\n        this.trace('getLocalDescription::preTransform', dumpSDP(desc));\\n\\n        // if we're running on FF, transform to Plan B first.\\n        if (browser.usesUnifiedPlan()) {\\n            desc = this.interop.toPlanB(desc);\\n            this.trace('getLocalDescription::postTransform (Plan B)',\\n                dumpSDP(desc));\\n\\n            desc = this._injectSsrcGroupForUnifiedSimulcast(desc);\\n            this.trace('getLocalDescription::postTransform (inject ssrc group)',\\n                dumpSDP(desc));\\n        }\\n\\n        if (browser.doesVideoMuteByStreamRemove()) {\\n            desc = this.localSdpMunger.maybeAddMutedLocalVideoTracksToSDP(desc);\\n            logger.debug(\\n                'getLocalDescription::postTransform (munge local SDP)', desc);\\n        }\\n\\n        // What comes out of this getter will be signalled over Jingle to\\n        // the other peer, so we need to make sure the media direction is\\n        // 'sendrecv' because we won't change the direction later and don't want\\n        // the other peer to think we can't send or receive.\\n        //\\n        // Note that the description we set in chrome does have the accurate\\n        // direction (e.g. 'recvonly'), since that is technically what is\\n        // happening (check setLocalDescription impl).\\n        desc = enforceSendRecv(desc);\\n\\n        // See the method's doc for more info about this transformation.\\n        desc = this.localSdpMunger.transformStreamIdentifiers(desc);\\n\\n        return desc;\\n    },\\n    remoteDescription() {\\n        let desc = this.peerconnection.remoteDescription;\\n\\n        this.trace('getRemoteDescription::preTransform', dumpSDP(desc));\\n\\n        // if we're running on FF, transform to Plan B first.\\n        if (browser.usesUnifiedPlan()) {\\n            desc = this.interop.toPlanB(desc);\\n            this.trace(\\n                'getRemoteDescription::postTransform (Plan B)', dumpSDP(desc));\\n        }\\n\\n        return desc || {};\\n    }\\n};\\n\\nObject.keys(getters).forEach(prop => {\\n    Object.defineProperty(\\n        TraceablePeerConnection.prototype,\\n        prop, {\\n            get: getters[prop]\\n        }\\n    );\\n});\\n\\nTraceablePeerConnection.prototype._getSSRC = function(rtcId) {\\n    return this.localSSRCs.get(rtcId);\\n};\\n\\n/**\\n * Add {@link JitsiLocalTrack} to this TPC.\\n * @param {JitsiLocalTrack} track\\n */\\nTraceablePeerConnection.prototype.addTrack = function(track) {\\n    const rtcId = track.rtcId;\\n\\n    logger.info(`add ${track} to: ${this}`);\\n\\n    if (this.localTracks.has(rtcId)) {\\n        logger.error(`${track} is already in ${this}`);\\n\\n        return;\\n    }\\n\\n    this.localTracks.set(rtcId, track);\\n\\n    const webrtcStream = track.getOriginalStream();\\n\\n    if (webrtcStream) {\\n        this._addStream(webrtcStream);\\n\\n    // It's not ok for a track to not have a WebRTC stream if:\\n    } else if (!browser.doesVideoMuteByStreamRemove()\\n                || track.isAudioTrack()\\n                || (track.isVideoTrack() && !track.isMuted())) {\\n        logger.error(`${this} no WebRTC stream for: ${track}`);\\n    }\\n\\n    // Muted video tracks do not have WebRTC stream\\n    if (browser.doesVideoMuteByStreamRemove()\\n            && track.isVideoTrack() && track.isMuted()) {\\n        const ssrcInfo = this.generateNewStreamSSRCInfo(track);\\n\\n        this.sdpConsistency.setPrimarySsrc(ssrcInfo.ssrcs[0]);\\n        const simGroup\\n            = ssrcInfo.groups.find(groupInfo => groupInfo.semantics === 'SIM');\\n\\n        if (simGroup) {\\n            this.simulcast.setSsrcCache(simGroup.ssrcs);\\n        }\\n        const fidGroups\\n            = ssrcInfo.groups.filter(\\n                groupInfo => groupInfo.semantics === 'FID');\\n\\n        if (fidGroups) {\\n            const rtxSsrcMapping = new Map();\\n\\n            fidGroups.forEach(fidGroup => {\\n                const primarySsrc = fidGroup.ssrcs[0];\\n                const rtxSsrc = fidGroup.ssrcs[1];\\n\\n                rtxSsrcMapping.set(primarySsrc, rtxSsrc);\\n            });\\n            this.rtxModifier.setSsrcCache(rtxSsrcMapping);\\n        }\\n    }\\n};\\n\\n/**\\n * Adds local track as part of the unmute operation.\\n * @param {JitsiLocalTrack} track the track to be added as part of the unmute\\n * operation\\n * @return {boolean} <tt>true</tt> if the state of underlying PC has changed and\\n * the renegotiation is required or <tt>false</tt> otherwise.\\n */\\nTraceablePeerConnection.prototype.addTrackUnmute = function(track) {\\n    if (!this._assertTrackBelongs('addTrackUnmute', track)) {\\n        // Abort\\n        return false;\\n    }\\n\\n    logger.info(`Adding ${track} as unmute to ${this}`);\\n    const webRtcStream = track.getOriginalStream();\\n\\n    if (!webRtcStream) {\\n        logger.error(\\n            `Unable to add ${track} as unmute to ${this} - no WebRTC stream`);\\n\\n        return false;\\n    }\\n    this._addStream(webRtcStream);\\n\\n    return true;\\n};\\n\\n/**\\n * Adds WebRTC media stream to the underlying PeerConnection\\n * @param {MediaStream} mediaStream\\n * @private\\n */\\nTraceablePeerConnection.prototype._addStream = function(mediaStream) {\\n    this.peerconnection.addStream(mediaStream);\\n    this._addedStreams.push(mediaStream);\\n};\\n\\n/**\\n * Removes WebRTC media stream from the underlying PeerConection\\n * @param {MediaStream} mediaStream\\n */\\nTraceablePeerConnection.prototype._removeStream = function(mediaStream) {\\n    if (browser.supportsRtpSender()) {\\n        this._handleSenderRemoveStream(mediaStream);\\n    } else {\\n        this.peerconnection.removeStream(mediaStream);\\n    }\\n    this._addedStreams\\n        = this._addedStreams.filter(stream => stream !== mediaStream);\\n};\\n\\n/**\\n * This method when called will check if given <tt>localTrack</tt> belongs to\\n * this TPC (that it has been previously added using {@link addTrack}). If the\\n * track does not belong an error message will be logged.\\n * @param {string} methodName the method name that will be logged in an error\\n * message\\n * @param {JitsiLocalTrack} localTrack\\n * @return {boolean} <tt>true</tt> if given local track belongs to this TPC or\\n * <tt>false</tt> otherwise.\\n * @private\\n */\\nTraceablePeerConnection.prototype._assertTrackBelongs = function(\\n        methodName,\\n        localTrack) {\\n    const doesBelong = this.localTracks.has(localTrack.rtcId);\\n\\n    if (!doesBelong) {\\n        logger.error(\\n            `${methodName}: ${localTrack} does not belong to ${this}`);\\n    }\\n\\n    return doesBelong;\\n};\\n\\n/**\\n * Tells if the given WebRTC <tt>MediaStream</tt> has been added to\\n * the underlying WebRTC PeerConnection.\\n * @param {MediaStream} mediaStream\\n * @returns {boolean}\\n */\\nTraceablePeerConnection.prototype.isMediaStreamInPc = function(mediaStream) {\\n    return this._addedStreams.indexOf(mediaStream) > -1;\\n};\\n\\n/**\\n * Remove local track from this TPC.\\n * @param {JitsiLocalTrack} localTrack the track to be removed from this TPC.\\n *\\n * FIXME It should probably remove a boolean just like {@link removeTrackMute}\\n *       The same applies to addTrack.\\n */\\nTraceablePeerConnection.prototype.removeTrack = function(localTrack) {\\n    const webRtcStream = localTrack.getOriginalStream();\\n\\n    this.trace(\\n        'removeStream',\\n        localTrack.rtcId, webRtcStream ? webRtcStream.id : undefined);\\n\\n    if (!this._assertTrackBelongs('removeStream', localTrack)) {\\n        // Abort - nothing to be done here\\n        return;\\n    }\\n    this.localTracks.delete(localTrack.rtcId);\\n    this.localSSRCs.delete(localTrack.rtcId);\\n\\n    if (webRtcStream) {\\n        if (browser.supportsRtpSender()) {\\n            this._handleSenderRemoveStream(webRtcStream);\\n        } else {\\n            this.peerconnection.removeStream(webRtcStream);\\n        }\\n    }\\n};\\n\\n/**\\n * Returns the sender corresponding to the given MediaStream.\\n *\\n * @param {MediaStream} stream - The media stream used for the search.\\n * @returns {RTPSender|undefined} - The found sender or undefined if no sender\\n * was found.\\n */\\nTraceablePeerConnection.prototype.findSenderByStream = function(stream) {\\n    const track = stream.getTracks()[0];\\n\\n    if (!track) {\\n        logger.error('Cannot find sender: no tracks.');\\n\\n        return;\\n    }\\n\\n    // Find the right sender (for audio or video)\\n    return this.peerconnection.getSenders().find(s => s.track === track);\\n};\\n\\n/**\\n * Replaces <tt>oldTrack</tt> with <tt>newTrack</tt> from the peer connection.\\n * Either <tt>oldTrack</tt> or <tt>newTrack</tt> can be null; replacing a valid\\n * <tt>oldTrack</tt> with a null <tt>newTrack</tt> effectively just removes\\n * <tt>oldTrack</tt>\\n *\\n * @param {JitsiLocalTrack|null} oldTrack - The current track in use to be\\n * replaced\\n * @param {JitsiLocalTrack|null} newTrack - The new track to use\\n * @returns {Promise<boolean>} - If the promise resolves with true,\\n * renegotiation will be needed. Otherwise no renegotiation is needed.\\n */\\nTraceablePeerConnection.prototype.replaceTrack = function(oldTrack, newTrack) {\\n    if (browser.supportsRtpSender() && oldTrack && newTrack) {\\n        // Add and than remove stream in FF leads to wrong local SDP. In order\\n        // to workaround the issue we need to use sender.replaceTrack().\\n        const sender = this.findSenderByStream(oldTrack.getOriginalStream());\\n        const stream = newTrack.getOriginalStream();\\n\\n        if (sender && stream) {\\n            const track = stream.getTracks()[0];\\n\\n            if (track) {\\n                return sender.replaceTrack(track, stream).then(() => {\\n                    // Since there is no need to do renegotiations we need to\\n                    // fix all ssrc-msid mappings here.\\n                    // NOTE: after sender.replaceTrack the sdp will remain the\\n                    // same but the stream attach to the new JitsiLocalTrack\\n                    // will have different msid. Luckily on FF we are not doing\\n                    // all the transformations related to video mute.\\n\\n                    const ssrc = this.localSSRCs.get(oldTrack.rtcId);\\n\\n                    this.localTracks.delete(oldTrack.rtcId);\\n                    this.localSSRCs.delete(oldTrack.rtcId);\\n                    this._addedStreams\\n                        = this._addedStreams.filter(s => s !== stream);\\n\\n                    this.localTracks.set(newTrack.rtcId, newTrack);\\n\\n                    // Override the msid of JitsiLocalTrack in order to be\\n                    // consistent with the SDP values.\\n                    newTrack.storedMSID = oldTrack.storedMSID;\\n                    this._addedStreams.push(stream);\\n\\n                    this.localSSRCs.set(newTrack.rtcId, ssrc);\\n                    this.eventEmitter.emit(\\n                        RTCEvents.LOCAL_TRACK_SSRC_UPDATED,\\n                        newTrack,\\n                        extractPrimarySSRC(ssrc));\\n\\n                    return false;\\n                });\\n            }\\n        }\\n    }\\n\\n    if (oldTrack) {\\n        this.removeTrack(oldTrack);\\n    }\\n    if (newTrack) {\\n        this.addTrack(newTrack);\\n    }\\n\\n    return Promise.resolve(true);\\n};\\n\\n/**\\n * Removes local track as part of the mute operation.\\n * @param {JitsiLocalTrack} localTrack the local track to be remove as part of\\n * the mute operation.\\n * @return {boolean} <tt>true</tt> if the underlying PeerConnection's state has\\n * changed and the renegotiation is required or <tt>false</tt> otherwise.\\n */\\nTraceablePeerConnection.prototype.removeTrackMute = function(localTrack) {\\n    const webRtcStream = localTrack.getOriginalStream();\\n\\n    this.trace(\\n        'removeStreamMute',\\n        localTrack.rtcId, webRtcStream ? webRtcStream.id : null);\\n\\n    if (!this._assertTrackBelongs('removeStreamMute', localTrack)) {\\n        // Abort - nothing to be done here\\n        return false;\\n    }\\n\\n    if (webRtcStream) {\\n        logger.info(\\n            `Removing ${localTrack} as mute from ${this}`);\\n        this._removeStream(webRtcStream);\\n\\n        return true;\\n    }\\n\\n    logger.error(`removeStreamMute - no WebRTC stream for ${localTrack}`);\\n\\n    return false;\\n};\\n\\n/**\\n * Remove stream handling for browsers supporting RTPSender\\n * @param stream: webrtc media stream\\n */\\nTraceablePeerConnection.prototype._handleSenderRemoveStream = function(\\n        stream) {\\n    if (!stream) {\\n        // There is nothing to be changed\\n        return;\\n    }\\n\\n    const sender = this.findSenderByStream(stream);\\n\\n    if (sender) {\\n        this.peerconnection.removeTrack(sender);\\n    } else {\\n        logger.log('Cannot remove tracks: no RTPSender.');\\n    }\\n};\\n\\nTraceablePeerConnection.prototype.createDataChannel = function(label, opts) {\\n    this.trace('createDataChannel', label, opts);\\n\\n    return this.peerconnection.createDataChannel(label, opts);\\n};\\n\\n/**\\n * Ensures that the simulcast ssrc-group appears after any other ssrc-groups\\n * in the SDP so that simulcast is properly activated.\\n *\\n * @param {Object} localSdp the WebRTC session description instance for\\n * the local description.\\n * @private\\n */\\nTraceablePeerConnection.prototype._ensureSimulcastGroupIsLast = function(\\n        localSdp) {\\n    let sdpStr = localSdp.sdp;\\n\\n    const videoStartIndex = sdpStr.indexOf('m=video');\\n    const simStartIndex = sdpStr.indexOf('a=ssrc-group:SIM', videoStartIndex);\\n    let otherStartIndex = sdpStr.lastIndexOf('a=ssrc-group');\\n\\n    if (simStartIndex === -1\\n        || otherStartIndex === -1\\n        || otherStartIndex === simStartIndex) {\\n        return localSdp;\\n    }\\n\\n    const simEndIndex = sdpStr.indexOf('\\\\r\\\\n', simStartIndex);\\n    const simStr = sdpStr.substring(simStartIndex, simEndIndex + 2);\\n\\n    sdpStr = sdpStr.replace(simStr, '');\\n    otherStartIndex = sdpStr.lastIndexOf('a=ssrc-group');\\n    const otherEndIndex = sdpStr.indexOf('\\\\r\\\\n', otherStartIndex);\\n    const sdpHead = sdpStr.slice(0, otherEndIndex);\\n    const simStrTrimmed = simStr.trim();\\n    const sdpTail = sdpStr.slice(otherEndIndex);\\n\\n    sdpStr = `${sdpHead}\\\\r\\\\n${simStrTrimmed}${sdpTail}`;\\n\\n    return new RTCSessionDescription({\\n        type: localSdp.type,\\n        sdp: sdpStr\\n    });\\n};\\n\\n/**\\n * Will adjust audio and video media direction in the given SDP object to\\n * reflect the current status of the {@link audioTransferActive} and\\n * {@link videoTransferActive} flags.\\n * @param {Object} localDescription the WebRTC session description instance for\\n * the local description.\\n * @private\\n */\\nTraceablePeerConnection.prototype._adjustLocalMediaDirection = function(\\n        localDescription) {\\n    const transformer = new SdpTransformWrap(localDescription.sdp);\\n    let modifiedDirection = false;\\n    const audioMedia = transformer.selectMedia('audio');\\n\\n    if (audioMedia) {\\n        const desiredAudioDirection\\n            = this._getDesiredMediaDirection(MediaType.AUDIO);\\n\\n        if (audioMedia.direction !== desiredAudioDirection) {\\n            audioMedia.direction = desiredAudioDirection;\\n            logger.info(\\n                `Adjusted local audio direction to ${desiredAudioDirection}`);\\n            modifiedDirection = true;\\n        }\\n    } else {\\n        logger.warn('No \\\"audio\\\" media found int the local description');\\n    }\\n\\n    const videoMedia = transformer.selectMedia('video');\\n\\n    if (videoMedia) {\\n        const desiredVideoDirection\\n            = this._getDesiredMediaDirection(MediaType.VIDEO);\\n\\n        if (videoMedia.direction !== desiredVideoDirection) {\\n            videoMedia.direction = desiredVideoDirection;\\n            logger.info(\\n                `Adjusted local video direction to ${desiredVideoDirection}`);\\n            modifiedDirection = true;\\n        }\\n    } else {\\n        logger.warn('No \\\"video\\\" media found in the local description');\\n    }\\n\\n    if (modifiedDirection) {\\n        return new RTCSessionDescription({\\n            type: localDescription.type,\\n            sdp: transformer.toRawSDP()\\n        });\\n    }\\n\\n    return localDescription;\\n};\\n\\nTraceablePeerConnection.prototype.setLocalDescription = function(description) {\\n    let localSdp = description;\\n\\n    this.trace('setLocalDescription::preTransform', dumpSDP(localSdp));\\n\\n    if (this.options.disableH264 || this.options.preferH264) {\\n        const parsedSdp = transform.parse(localSdp.sdp);\\n        const videoMLine = parsedSdp.media.find(m => m.type === 'video');\\n\\n        if (this.options.disableH264) {\\n            SDPUtil.stripVideoCodec(videoMLine, 'h264');\\n        } else {\\n            SDPUtil.preferVideoCodec(videoMLine, 'h264');\\n        }\\n\\n        localSdp = new RTCSessionDescription({\\n            type: localSdp.type,\\n            sdp: transform.write(parsedSdp)\\n        });\\n\\n        this.trace('setLocalDescription::postTransform (H264)',\\n            dumpSDP(localSdp));\\n    }\\n\\n    localSdp = this._adjustLocalMediaDirection(localSdp);\\n\\n    localSdp = this._ensureSimulcastGroupIsLast(localSdp);\\n\\n    // if we're using unified plan, transform to it first.\\n    if (browser.usesUnifiedPlan()) {\\n        localSdp = this.interop.toUnifiedPlan(localSdp);\\n        this.trace(\\n            'setLocalDescription::postTransform (Unified Plan)',\\n            dumpSDP(localSdp));\\n    }\\n\\n    return new Promise((resolve, reject) => {\\n        this.peerconnection.setLocalDescription(localSdp)\\n            .then(() => {\\n                this.trace('setLocalDescriptionOnSuccess');\\n                const localUfrag = SDPUtil.getUfrag(localSdp.sdp);\\n\\n                if (localUfrag !== this.localUfrag) {\\n                    this.localUfrag = localUfrag;\\n                    this.eventEmitter.emit(\\n                        RTCEvents.LOCAL_UFRAG_CHANGED, this, localUfrag);\\n                }\\n                resolve();\\n            }, err => {\\n                this.trace('setLocalDescriptionOnFailure', err);\\n                this.eventEmitter.emit(\\n                    RTCEvents.SET_LOCAL_DESCRIPTION_FAILED,\\n                    err, this);\\n                reject(err);\\n            });\\n    });\\n};\\n\\n/**\\n * Enables/disables audio media transmission on this peer connection. When\\n * disabled the SDP audio media direction in the local SDP will be adjusted to\\n * 'inactive' which means that no data will be sent nor accepted, but\\n * the connection should be kept alive.\\n * @param {boolean} active <tt>true</tt> to enable video media transmission or\\n * <tt>false</tt> to disable. If the value is not a boolean the call will have\\n * no effect.\\n * @return {boolean} <tt>true</tt> if the value has changed and sRD/sLD cycle\\n * needs to be executed in order for the changes to take effect or\\n * <tt>false</tt> if the given value was the same as the previous one.\\n * @public\\n */\\nTraceablePeerConnection.prototype.setAudioTransferActive = function(active) {\\n    logger.debug(`${this} audio transfer active: ${active}`);\\n    const changed = this.audioTransferActive !== active;\\n\\n    this.audioTransferActive = active;\\n\\n    return changed;\\n};\\n\\n/**\\n * Takes in a *unified plan* offer and inserts the appropriate\\n * parameters for adding simulcast receive support.\\n * @param {Object} desc - A session description object\\n * @param {String} desc.type - the type (offer/answer)\\n * @param {String} desc.sdp - the sdp content\\n *\\n * @return {Object} A session description (same format as above) object\\n * with its sdp field modified to advertise simulcast receive support\\n */\\nTraceablePeerConnection.prototype._insertUnifiedPlanSimulcastReceive\\n    = function(desc) {\\n        const sdp = transform.parse(desc.sdp);\\n        const video = sdp.media.find(mline => mline.type === 'video');\\n\\n        // In order of lowest to highest spatial quality\\n        video.rids = [\\n            {\\n                id: SIM_LAYER_1_RID,\\n                direction: 'recv'\\n            },\\n            {\\n                id: SIM_LAYER_2_RID,\\n                direction: 'recv'\\n            },\\n            {\\n                id: SIM_LAYER_3_RID,\\n                direction: 'recv'\\n            }\\n        ];\\n        // eslint-disable-next-line camelcase\\n        video.simulcast_03 = {\\n            value: `recv rid=${SIM_LAYER_RIDS.join(';')}`\\n        };\\n\\n        return new RTCSessionDescription({\\n            type: desc.type,\\n            sdp: transform.write(sdp)\\n        });\\n    };\\n\\nTraceablePeerConnection.prototype.setRemoteDescription = function(description) {\\n    this.trace('setRemoteDescription::preTransform', dumpSDP(description));\\n\\n    // TODO the focus should squeze or explode the remote simulcast\\n    // eslint-disable-next-line no-param-reassign\\n    description = this.simulcast.mungeRemoteDescription(description);\\n    this.trace(\\n        'setRemoteDescription::postTransform (simulcast)',\\n        dumpSDP(description));\\n\\n    if (this.options.preferH264) {\\n        const parsedSdp = transform.parse(description.sdp);\\n        const videoMLine = parsedSdp.media.find(m => m.type === 'video');\\n\\n        SDPUtil.preferVideoCodec(videoMLine, 'h264');\\n\\n        // eslint-disable-next-line no-param-reassign\\n        description = new RTCSessionDescription({\\n            type: description.type,\\n            sdp: transform.write(parsedSdp)\\n        });\\n    }\\n\\n    // If the browser uses unified plan, transform to it first\\n    if (browser.usesUnifiedPlan()) {\\n        // eslint-disable-next-line no-param-reassign\\n        description = new RTCSessionDescription({\\n            type: description.type,\\n            sdp: this.rtxModifier.stripRtx(description.sdp)\\n        });\\n\\n        this.trace(\\n            'setRemoteDescription::postTransform (stripRtx)',\\n            dumpSDP(description));\\n\\n        // eslint-disable-next-line no-param-reassign\\n        description = this.interop.toUnifiedPlan(description);\\n        this.trace(\\n            'setRemoteDescription::postTransform (Plan A)',\\n            dumpSDP(description));\\n\\n        if (this.isSimulcastOn()) {\\n            // eslint-disable-next-line no-param-reassign\\n            description = this._insertUnifiedPlanSimulcastReceive(description);\\n            this.trace(\\n                'setRemoteDescription::postTransform (sim receive)',\\n                dumpSDP(description));\\n        }\\n    } else {\\n        // Plan B\\n        // eslint-disable-next-line no-param-reassign\\n        description = normalizePlanB(description);\\n    }\\n\\n    // Safari WebRTC errors when no supported video codec is found in the offer.\\n    // To prevent the error, inject H264 into the video mLine.\\n    if (browser.isSafariWithWebrtc() && !browser.isSafariWithVP8()) {\\n        logger.debug('Maybe injecting H264 into the remote description');\\n\\n        // eslint-disable-next-line no-param-reassign\\n        description = this._injectH264IfNotPresent(description);\\n    }\\n\\n    return new Promise((resolve, reject) => {\\n        this.peerconnection.setRemoteDescription(description)\\n            .then(() => {\\n                this.trace('setRemoteDescriptionOnSuccess');\\n                const remoteUfrag = SDPUtil.getUfrag(description.sdp);\\n\\n                if (remoteUfrag !== this.remoteUfrag) {\\n                    this.remoteUfrag = remoteUfrag;\\n                    this.eventEmitter.emit(\\n                        RTCEvents.REMOTE_UFRAG_CHANGED, this, remoteUfrag);\\n                }\\n                resolve();\\n            }, err => {\\n                this.trace('setRemoteDescriptionOnFailure', err);\\n                this.eventEmitter.emit(\\n                    RTCEvents.SET_REMOTE_DESCRIPTION_FAILED,\\n                    err,\\n                    this);\\n                reject(err);\\n            });\\n    });\\n};\\n\\n/**\\n * Inserts an H264 payload into the description if not already present. This is\\n * need for Safari WebRTC, which errors when no supported video codec is found\\n * in the offer. Related bug reports:\\n * https://bugs.webkit.org/show_bug.cgi?id=173141\\n * https://bugs.chromium.org/p/webrtc/issues/detail?id=4957\\n *\\n * @param {RTCSessionDescription} description - An RTCSessionDescription\\n * to inject with an H264 payload.\\n * @private\\n * @returns {RTCSessionDescription}\\n */\\nTraceablePeerConnection.prototype._injectH264IfNotPresent = function(\\n        description) {\\n    const parsedSdp = transform.parse(description.sdp);\\n    const videoMLine = parsedSdp.media.find(m => m.type === 'video');\\n\\n    if (!videoMLine) {\\n        logger.debug('No videoMLine found, no need to inject H264.');\\n\\n        return description;\\n    }\\n\\n    if (videoMLine.rtp.some(rtp => rtp.codec.toLowerCase() === 'h264')) {\\n        logger.debug('H264 codec found in video mLine, no need to inject.');\\n\\n        return description;\\n    }\\n\\n    const { fmtp, payloads, rtp } = videoMLine;\\n    const payloadsArray = payloads.toString().split(' ');\\n    let dummyPayloadType;\\n\\n    for (let i = 127; i >= 96; i--) {\\n        if (!payloadsArray.includes(i)) {\\n            dummyPayloadType = i;\\n            payloadsArray.push(i);\\n            videoMLine.payloads = payloadsArray.join(' ');\\n            break;\\n        }\\n    }\\n\\n    if (typeof dummyPayloadType === 'undefined') {\\n        logger.error('Could not find valid payload type to inject.');\\n\\n        return description;\\n    }\\n\\n    rtp.push({\\n        codec: 'H264',\\n        payload: dummyPayloadType,\\n        rate: 90000\\n    });\\n\\n    fmtp.push({\\n        config: 'level-asymmetry-allowed=1;'\\n            + 'packetization-mode=1;'\\n            + 'profile-level-id=42e01f',\\n        payload: dummyPayloadType\\n    });\\n\\n    logger.debug(\\n        `Injecting H264 payload type ${dummyPayloadType} into video mLine.`);\\n\\n    return new RTCSessionDescription({\\n        type: description.type,\\n        sdp: transform.write(parsedSdp)\\n    });\\n};\\n\\n/**\\n * Enables/disables video media transmission on this peer connection. When\\n * disabled the SDP video media direction in the local SDP will be adjusted to\\n * 'inactive' which means that no data will be sent nor accepted, but\\n * the connection should be kept alive.\\n * @param {boolean} active <tt>true</tt> to enable video media transmission or\\n * <tt>false</tt> to disable. If the value is not a boolean the call will have\\n * no effect.\\n * @return {boolean} <tt>true</tt> if the value has changed and sRD/sLD cycle\\n * needs to be executed in order for the changes to take effect or\\n * <tt>false</tt> if the given value was the same as the previous one.\\n * @public\\n */\\nTraceablePeerConnection.prototype.setVideoTransferActive = function(active) {\\n    logger.debug(`${this} video transfer active: ${active}`);\\n    const changed = this.videoTransferActive !== active;\\n\\n    this.videoTransferActive = active;\\n\\n    return changed;\\n};\\n\\n/**\\n * Makes the underlying TraceablePeerConnection generate new SSRC for\\n * the recvonly video stream.\\n */\\nTraceablePeerConnection.prototype.generateRecvonlySsrc = function() {\\n    const newSSRC = SDPUtil.generateSsrc();\\n\\n    logger.info(`${this} generated new recvonly SSRC: ${newSSRC}`);\\n    this.sdpConsistency.setPrimarySsrc(newSSRC);\\n};\\n\\n/**\\n * Makes the underlying TraceablePeerConnection forget the current primary video\\n * SSRC.\\n */\\nTraceablePeerConnection.prototype.clearRecvonlySsrc = function() {\\n    logger.info('Clearing primary video SSRC!');\\n    this.sdpConsistency.clearVideoSsrcCache();\\n};\\n\\n/**\\n * Closes underlying WebRTC PeerConnection instance and removes all remote\\n * tracks by emitting {@link RTCEvents.REMOTE_TRACK_REMOVED} for each one of\\n * them.\\n */\\nTraceablePeerConnection.prototype.close = function() {\\n    this.trace('stop');\\n\\n    // Off SignalingEvents\\n    this.signalingLayer.off(\\n        SignalingEvents.PEER_MUTED_CHANGED, this._peerMutedChanged);\\n    this.signalingLayer.off(\\n        SignalingEvents.PEER_VIDEO_TYPE_CHANGED, this._peerVideoTypeChanged);\\n\\n    for (const peerTracks of this.remoteTracks.values()) {\\n        for (const remoteTrack of peerTracks.values()) {\\n            this._removeRemoteTrack(remoteTrack);\\n        }\\n    }\\n    this.remoteTracks.clear();\\n\\n    this._addedStreams = [];\\n\\n    if (!this.rtc._removePeerConnection(this)) {\\n        logger.error('RTC._removePeerConnection returned false');\\n    }\\n    if (this.statsinterval !== null) {\\n        window.clearInterval(this.statsinterval);\\n        this.statsinterval = null;\\n    }\\n    logger.info(`Closing ${this}...`);\\n    this.peerconnection.close();\\n};\\n\\n/**\\n * Modifies the values of the setup attributes (defined by\\n * {@link http://tools.ietf.org/html/rfc4145#section-4}) of a specific SDP\\n * answer in order to overcome a delay of 1 second in the connection\\n * establishment between some devices and Videobridge.\\n *\\n * @param {SDP} offer - the SDP offer to which the specified SDP answer is\\n * being prepared to respond\\n * @param {SDP} answer - the SDP to modify\\n * @private\\n */\\nconst _fixAnswerRFC4145Setup = function(offer, answer) {\\n    if (!(browser.isChromiumBased() || browser.isReactNative())) {\\n        // It looks like Firefox doesn't agree with the fix (at least in its\\n        // current implementation) because it effectively remains active even\\n        // after we tell it to become passive. Apart from Firefox which I tested\\n        // after the fix was deployed, I tested Chrome only. In order to prevent\\n        // issues with other browsers, limit the fix to known devices for the\\n        // time being.\\n        return;\\n    }\\n\\n    // XXX Videobridge is the (SDP) offerer and WebRTC (e.g. Chrome) is the\\n    // answerer (as orchestrated by Jicofo). In accord with\\n    // http://tools.ietf.org/html/rfc5245#section-5.2 and because both peers\\n    // are ICE FULL agents, Videobridge will take on the controlling role and\\n    // WebRTC will take on the controlled role. In accord with\\n    // https://tools.ietf.org/html/rfc5763#section-5, Videobridge will use the\\n    // setup attribute value of setup:actpass and WebRTC will be allowed to\\n    // choose either the setup attribute value of setup:active or\\n    // setup:passive. Chrome will by default choose setup:active because it is\\n    // RECOMMENDED by the respective RFC since setup:passive adds additional\\n    // latency. The case of setup:active allows WebRTC to send a DTLS\\n    // ClientHello as soon as an ICE connectivity check of its succeeds.\\n    // Unfortunately, Videobridge will be unable to respond immediately because\\n    // may not have WebRTC's answer or may have not completed the ICE\\n    // connectivity establishment. Even more unfortunate is that in the\\n    // described scenario Chrome's DTLS implementation will insist on\\n    // retransmitting its ClientHello after a second (the time is in accord\\n    // with the respective RFC) and will thus cause the whole connection\\n    // establishment to exceed at least 1 second. To work around Chrome's\\n    // idiosyncracy, don't allow it to send a ClientHello i.e. change its\\n    // default choice of setup:active to setup:passive.\\n    if (offer && answer\\n            && offer.media && answer.media\\n            && offer.media.length === answer.media.length) {\\n        answer.media.forEach((a, i) => {\\n            if (SDPUtil.findLine(\\n                    offer.media[i],\\n                    'a=setup:actpass',\\n                    offer.session)) {\\n                answer.media[i]\\n                    = a.replace(/a=setup:active/g, 'a=setup:passive');\\n            }\\n        });\\n        answer.raw = answer.session + answer.media.join('');\\n    }\\n};\\n\\nTraceablePeerConnection.prototype.createAnswer = function(constraints) {\\n    if (browser.isFirefox() && this.isSimulcastOn()) {\\n        const videoSender\\n            = this.peerconnection.getSenders().find(sender =>\\n                sender.track !== null && sender.track.kind === 'video');\\n        const simParams = {\\n            encodings: [\\n                {\\n                    rid: SIM_LAYER_1_RID,\\n                    scaleResolutionDownBy: 4\\n                },\\n                {\\n                    rid: SIM_LAYER_2_RID,\\n                    scaleResolutionDownBy: 2\\n                },\\n                {\\n                    rid: SIM_LAYER_3_RID\\n                }\\n            ]\\n        };\\n\\n        videoSender.setParameters(simParams);\\n    }\\n\\n    return this._createOfferOrAnswer(false /* answer */, constraints);\\n};\\n\\nTraceablePeerConnection.prototype.createOffer = function(constraints) {\\n    return this._createOfferOrAnswer(true /* offer */, constraints);\\n};\\n\\nTraceablePeerConnection.prototype._createOfferOrAnswer = function(\\n        isOffer,\\n        constraints) {\\n    const logName = isOffer ? 'Offer' : 'Answer';\\n\\n    this.trace(`create${logName}`, JSON.stringify(constraints, null, ' '));\\n\\n    const handleSuccess = (resultSdp, resolveFn, rejectFn) => {\\n        try {\\n            this.trace(\\n                `create${logName}OnSuccess::preTransform`, dumpSDP(resultSdp));\\n\\n            // if we're using unified plan, transform to Plan B.\\n            if (browser.usesUnifiedPlan()) {\\n                // eslint-disable-next-line no-param-reassign\\n                resultSdp = this.interop.toPlanB(resultSdp);\\n                this.trace(\\n                    `create${logName}OnSuccess::postTransform (Plan B)`,\\n                    dumpSDP(resultSdp));\\n                if (this.isSimulcastOn()) {\\n                    // eslint-disable-next-line no-param-reassign\\n                    resultSdp\\n                        = this._injectSsrcGroupForUnifiedSimulcast(resultSdp);\\n                    this.trace(\\n                        `create${logName}OnSuccess::postTransform`\\n                        + '(inject ssrc group)', dumpSDP(resultSdp));\\n                }\\n            }\\n\\n            /**\\n             * We don't keep ssrcs consitent for Firefox because rewriting\\n             *  the ssrcs between createAnswer and setLocalDescription breaks\\n             *  the caching in sdp-interop (sdp-interop must know about all\\n             *  ssrcs, and it updates its cache in toPlanB so if we rewrite them\\n             *  after that, when we try and go back to unified plan it will\\n             *  complain about unmapped ssrcs)\\n             */\\n            if (!browser.usesUnifiedPlan()) {\\n                // If there are no local video tracks, then a \\\"recvonly\\\"\\n                // SSRC needs to be generated\\n                if (!this.hasAnyTracksOfType(MediaType.VIDEO)\\n                    && !this.sdpConsistency.hasPrimarySsrcCached()) {\\n                    this.generateRecvonlySsrc();\\n                }\\n\\n                // eslint-disable-next-line no-param-reassign\\n                resultSdp = new RTCSessionDescription({\\n                    type: resultSdp.type,\\n                    sdp: this.sdpConsistency.makeVideoPrimarySsrcsConsistent(\\n                        resultSdp.sdp)\\n                });\\n\\n                this.trace(\\n                    `create${logName}OnSuccess::postTransform `\\n                         + '(make primary audio/video ssrcs consistent)',\\n                    dumpSDP(resultSdp));\\n            }\\n\\n            // Add simulcast streams if simulcast is enabled\\n            if (this.isSimulcastOn()) {\\n                // eslint-disable-next-line no-param-reassign\\n                resultSdp = this.simulcast.mungeLocalDescription(resultSdp);\\n                this.trace(\\n                    `create${logName}`\\n                        + 'OnSuccess::postTransform (simulcast)',\\n                    dumpSDP(resultSdp));\\n            }\\n\\n            if (!this.options.disableRtx && browser.supportsRtx()) {\\n                // eslint-disable-next-line no-param-reassign\\n                resultSdp = new RTCSessionDescription({\\n                    type: resultSdp.type,\\n                    sdp: this.rtxModifier.modifyRtxSsrcs(resultSdp.sdp)\\n                });\\n\\n                this.trace(\\n                    `create${logName}`\\n                         + 'OnSuccess::postTransform (rtx modifier)',\\n                    dumpSDP(resultSdp));\\n            }\\n\\n            // Fix the setup attribute (see _fixAnswerRFC4145Setup for\\n            //  details)\\n            if (!isOffer) {\\n                const remoteDescription\\n                    = new SDP(this.remoteDescription.sdp);\\n                const localDescription = new SDP(resultSdp.sdp);\\n\\n                _fixAnswerRFC4145Setup(remoteDescription, localDescription);\\n\\n                // eslint-disable-next-line no-param-reassign\\n                resultSdp = new RTCSessionDescription({\\n                    type: resultSdp.type,\\n                    sdp: localDescription.raw\\n                });\\n            }\\n\\n            const ssrcMap = extractSSRCMap(resultSdp);\\n\\n            logger.debug('Got local SSRCs MAP: ', ssrcMap);\\n            this._processLocalSSRCsMap(ssrcMap);\\n\\n            resolveFn(resultSdp);\\n        } catch (e) {\\n            this.trace(`create${logName}OnError`, e);\\n            this.trace(`create${logName}OnError`, dumpSDP(resultSdp));\\n            logger.error(`create${logName}OnError`, e, dumpSDP(resultSdp));\\n\\n            rejectFn(e);\\n        }\\n    };\\n\\n    const handleFailure = (err, rejectFn) => {\\n        this.trace(`create${logName}OnFailure`, err);\\n        const eventType\\n            = isOffer\\n                ? RTCEvents.CREATE_OFFER_FAILED\\n                : RTCEvents.CREATE_ANSWER_FAILED;\\n\\n        this.eventEmitter.emit(eventType, err, this);\\n\\n        rejectFn(err);\\n    };\\n\\n    return new Promise((resolve, reject) => {\\n        let oaPromise;\\n\\n        if (isOffer) {\\n            oaPromise = this.peerconnection.createOffer(constraints);\\n        } else {\\n            oaPromise = this.peerconnection.createAnswer(constraints);\\n        }\\n\\n        oaPromise\\n            .then(\\n                sdp => handleSuccess(sdp, resolve, reject),\\n                error => handleFailure(error, reject));\\n    });\\n};\\n\\n/**\\n * Extract primary SSRC from given {@link TrackSSRCInfo} object.\\n * @param {TrackSSRCInfo} ssrcObj\\n * @return {number|null} the primary SSRC or <tt>null</tt>\\n */\\nfunction extractPrimarySSRC(ssrcObj) {\\n    if (ssrcObj && ssrcObj.groups && ssrcObj.groups.length) {\\n        return ssrcObj.groups[0].ssrcs[0];\\n    } else if (ssrcObj && ssrcObj.ssrcs && ssrcObj.ssrcs.length) {\\n        return ssrcObj.ssrcs[0];\\n    }\\n\\n    return null;\\n}\\n\\n/**\\n * Goes over the SSRC map extracted from the latest local description and tries\\n * to match them with the local tracks (by MSID). Will update the values\\n * currently stored in the {@link TraceablePeerConnection.localSSRCs} map.\\n * @param {Map<string,TrackSSRCInfo>} ssrcMap\\n * @private\\n */\\nTraceablePeerConnection.prototype._processLocalSSRCsMap = function(ssrcMap) {\\n    for (const track of this.localTracks.values()) {\\n        const trackMSID = track.storedMSID;\\n\\n        if (ssrcMap.has(trackMSID)) {\\n            const newSSRC = ssrcMap.get(trackMSID);\\n\\n            if (!newSSRC) {\\n                logger.error(`No SSRC found for: ${trackMSID} in ${this}`);\\n\\n                return;\\n            }\\n            const oldSSRC = this.localSSRCs.get(track.rtcId);\\n            const newSSRCNum = extractPrimarySSRC(newSSRC);\\n            const oldSSRCNum = extractPrimarySSRC(oldSSRC);\\n\\n            // eslint-disable-next-line no-negated-condition\\n            if (newSSRCNum !== oldSSRCNum) {\\n                if (oldSSRCNum === null) {\\n                    logger.info(\\n                        `Storing new local SSRC for ${track} in ${this}`,\\n                        newSSRC);\\n                } else {\\n                    logger.error(\\n                        `Overwriting SSRC for ${track} ${trackMSID} in ${this\\n                        } with: `, newSSRC);\\n                }\\n                this.localSSRCs.set(track.rtcId, newSSRC);\\n\\n                this.eventEmitter.emit(\\n                    RTCEvents.LOCAL_TRACK_SSRC_UPDATED, track, newSSRCNum);\\n            } else {\\n                logger.debug(\\n                    `The local SSRC(${newSSRCNum}) for ${track} ${trackMSID}`\\n                     + `is still up to date in ${this}`);\\n            }\\n        } else {\\n            logger.warn(`No local track matched with: ${trackMSID} in ${this}`);\\n        }\\n    }\\n};\\n\\nTraceablePeerConnection.prototype.addIceCandidate = function(candidate) {\\n    this.trace('addIceCandidate', JSON.stringify({\\n        candidate: candidate.candidate,\\n        sdpMid: candidate.sdpMid,\\n        sdpMLineIndex: candidate.sdpMLineIndex,\\n        usernameFragment: candidate.usernameFragment\\n    }, null, ' '));\\n\\n    return this.peerconnection.addIceCandidate(candidate);\\n};\\n\\n/**\\n * Obtains call-related stats from the peer connection.\\n *\\n * @param {Function} callback - The function to invoke after successfully\\n * obtaining stats.\\n * @param {Function} errback - The function to invoke after failing to obtain\\n * stats.\\n * @returns {void}\\n */\\nTraceablePeerConnection.prototype.getStats = function(callback, errback) {\\n    // TODO (brian): After moving all browsers to adapter, check if adapter is\\n    // accounting for different getStats apis, making the browser-checking-if\\n    // unnecessary.\\n    if (browser.isSafariWithWebrtc() || browser.isFirefox()\\n            || browser.isReactNative()) {\\n        // uses the new Promise based getStats\\n        this.peerconnection.getStats()\\n            .then(callback)\\n            .catch(errback || (() => {\\n\\n                // Making sure that getStats won't fail if error callback is\\n                // not passed.\\n            }));\\n    } else {\\n        this.peerconnection.getStats(callback);\\n    }\\n};\\n\\n/**\\n * Generates and stores new SSRC info object for given local track.\\n * The method should be called only for a video track being added to this TPC\\n * in the muted state (given that the current browser uses this strategy).\\n * @param {JitsiLocalTrack} track\\n * @return {TPCSSRCInfo}\\n */\\nTraceablePeerConnection.prototype.generateNewStreamSSRCInfo = function(track) {\\n    const rtcId = track.rtcId;\\n    let ssrcInfo = this._getSSRC(rtcId);\\n\\n    if (ssrcInfo) {\\n        logger.error(`Will overwrite local SSRCs for track ID: ${rtcId}`);\\n    }\\n    if (this.isSimulcastOn()) {\\n        ssrcInfo = {\\n            ssrcs: [],\\n            groups: []\\n        };\\n        for (let i = 0; i < SIMULCAST_LAYERS; i++) {\\n            ssrcInfo.ssrcs.push(SDPUtil.generateSsrc());\\n        }\\n        ssrcInfo.groups.push({\\n            ssrcs: ssrcInfo.ssrcs.slice(),\\n            semantics: 'SIM'\\n        });\\n    } else {\\n        ssrcInfo = {\\n            ssrcs: [ SDPUtil.generateSsrc() ],\\n            groups: []\\n        };\\n    }\\n    if (!this.options.disableRtx && browser.supportsRtx()) {\\n        // Specifically use a for loop here because we'll\\n        //  be adding to the list we're iterating over, so we\\n        //  only want to iterate through the items originally\\n        //  on the list\\n        const currNumSsrcs = ssrcInfo.ssrcs.length;\\n\\n        for (let i = 0; i < currNumSsrcs; ++i) {\\n            const primarySsrc = ssrcInfo.ssrcs[i];\\n            const rtxSsrc = SDPUtil.generateSsrc();\\n\\n            ssrcInfo.ssrcs.push(rtxSsrc);\\n            ssrcInfo.groups.push({\\n                ssrcs: [ primarySsrc, rtxSsrc ],\\n                semantics: 'FID'\\n            });\\n        }\\n    }\\n    ssrcInfo.msid = track.storedMSID;\\n    this.localSSRCs.set(rtcId, ssrcInfo);\\n\\n    return ssrcInfo;\\n};\\n\\nconst handleLayerSuspension = function(peerConnection, isSelected) {\\n    if (!peerConnection.getSenders) {\\n        logger.debug('Browser doesn\\\\'t support RTPSender');\\n\\n        return;\\n    }\\n\\n    const videoSender = peerConnection.getSenders()\\n        .find(sender => sender.track.kind === 'video');\\n\\n    if (!videoSender) {\\n        logger.warn('handleLayerSuspension unable to find video sender');\\n\\n        return;\\n    }\\n    if (!videoSender.getParameters) {\\n        logger.debug('Browser doesn\\\\'t support RTPSender parameters');\\n\\n        return;\\n    }\\n    const parameters = videoSender.getParameters();\\n\\n    if (isSelected) {\\n        logger.debug('Currently selected, enabling all sim layers');\\n\\n        // Make sure all encodings are enabled\\n        parameters.encodings.forEach(e => {\\n            e.active = true;\\n        });\\n    } else {\\n        logger.debug('Not currently selected, disabling upper layers');\\n\\n        // Turn off the upper simulcast layers\\n        [ 1, 2 ].forEach(simIndex => {\\n            if (parameters.encodings[simIndex]) {\\n                parameters.encodings[simIndex].active = false;\\n            }\\n        });\\n    }\\n    videoSender.setParameters(parameters);\\n};\\n\\n/**\\n * Set whether or not the endpoint is 'selected' by other endpoints, meaning\\n * it appears on their main stage\\n */\\nTraceablePeerConnection.prototype.setIsSelected = function(isSelected) {\\n    if (this.options.enableLayerSuspension) {\\n        logger.debug('Layer suspension enabled,'\\n            + `currently selected? ${isSelected}`);\\n        handleLayerSuspension(this.peerconnection, isSelected);\\n    }\\n};\\n\\n/**\\n * Creates a text representation of this <tt>TraceablePeerConnection</tt>\\n * instance.\\n * @return {string}\\n */\\nTraceablePeerConnection.prototype.toString = function() {\\n    return `TPC[${this.id},p2p:${this.isP2P}]`;\\n};\\n\",\"import { createTtfmEvent } from '../../service/statistics/AnalyticsEvents';\\nimport JitsiTrack from './JitsiTrack';\\nimport * as JitsiTrackEvents from '../../JitsiTrackEvents';\\nimport Statistics from '../statistics/statistics';\\n\\nconst logger = require('jitsi-meet-logger').getLogger(__filename);\\nconst RTCEvents = require('../../service/RTC/RTCEvents');\\n\\nlet ttfmTrackerAudioAttached = false;\\nlet ttfmTrackerVideoAttached = false;\\n\\n/* eslint-disable max-params */\\n\\n/**\\n * Represents a single media track (either audio or video).\\n */\\nexport default class JitsiRemoteTrack extends JitsiTrack {\\n    /**\\n     * Creates new JitsiRemoteTrack instance.\\n     * @param {RTC} rtc the RTC service instance.\\n     * @param {JitsiConference} conference the conference to which this track\\n     *        belongs to\\n     * @param {string} ownerEndpointId the endpoint ID of the track owner\\n     * @param {MediaStream} stream WebRTC MediaStream, parent of the track\\n     * @param {MediaStreamTrack} track underlying WebRTC MediaStreamTrack for\\n     *        the new JitsiRemoteTrack\\n     * @param {MediaType} mediaType the type of the media\\n     * @param {VideoType} videoType the type of the video if applicable\\n     * @param {number} ssrc the SSRC number of the Media Stream\\n     * @param {boolean} muted the initial muted state\\n     * @param {boolean} isP2P indicates whether or not this track belongs to a\\n     * P2P session\\n     * @throws {TypeError} if <tt>ssrc</tt> is not a number.\\n     * @constructor\\n     */\\n    constructor(\\n            rtc,\\n            conference,\\n            ownerEndpointId,\\n            stream,\\n            track,\\n            mediaType,\\n            videoType,\\n            ssrc,\\n            muted,\\n            isP2P) {\\n        super(\\n            conference,\\n            stream,\\n            track,\\n            () => {\\n                // Nothing to do if the track is inactive.\\n            },\\n            mediaType,\\n            videoType);\\n        this.rtc = rtc;\\n\\n        // Prevent from mixing up type of SSRC which should be a number\\n        if (typeof ssrc !== 'number') {\\n            throw new TypeError(`SSRC ${ssrc} is not a number`);\\n        }\\n        this.ssrc = ssrc;\\n        this.ownerEndpointId = ownerEndpointId;\\n        this.muted = muted;\\n        this.isP2P = isP2P;\\n\\n        // we want to mark whether the track has been ever muted\\n        // to detect ttfm events for startmuted conferences, as it can\\n        // significantly increase ttfm values\\n        this.hasBeenMuted = muted;\\n\\n        // Bind 'onmute' and 'onunmute' event handlers\\n        if (this.rtc && this.track) {\\n            this._bindMuteHandlers();\\n        }\\n    }\\n\\n    /* eslint-enable max-params */\\n    /**\\n     * Attaches the track muted handlers.\\n     *\\n     * @returns {void}\\n     */\\n    _bindMuteHandlers() {\\n        this.track.addEventListener('mute', () => this._onTrackMute());\\n        this.track.addEventListener('unmute', () => this._onTrackUnmute());\\n    }\\n\\n    /**\\n     * Callback invoked when the track is muted. Emits an event notifying\\n     * listeners of the mute event.\\n     *\\n     * @private\\n     * @returns {void}\\n     */\\n    _onTrackMute() {\\n        logger.debug(\\n            `\\\"onmute\\\" event(${Date.now()}): `,\\n            this.getParticipantId(), this.getType(), this.getSSRC());\\n\\n        this.rtc.eventEmitter.emit(RTCEvents.REMOTE_TRACK_MUTE, this);\\n    }\\n\\n    /**\\n     * Callback invoked when the track is unmuted. Emits an event notifying\\n     * listeners of the mute event.\\n     *\\n     * @private\\n     * @returns {void}\\n     */\\n    _onTrackUnmute() {\\n        logger.debug(\\n            `\\\"onunmute\\\" event(${Date.now()}): `,\\n            this.getParticipantId(), this.getType(), this.getSSRC());\\n\\n        this.rtc.eventEmitter.emit(RTCEvents.REMOTE_TRACK_UNMUTE, this);\\n    }\\n\\n    /**\\n     * Sets current muted status and fires an events for the change.\\n     * @param value the muted status.\\n     */\\n    setMute(value) {\\n        if (this.muted === value) {\\n            return;\\n        }\\n\\n        if (value) {\\n            this.hasBeenMuted = true;\\n        }\\n\\n        // we can have a fake video stream\\n        if (this.stream) {\\n            this.stream.muted = value;\\n        }\\n\\n        this.muted = value;\\n        this.emit(JitsiTrackEvents.TRACK_MUTE_CHANGED, this);\\n    }\\n\\n    /**\\n     * Returns the current muted status of the track.\\n     * @returns {boolean|*|JitsiRemoteTrack.muted} <tt>true</tt> if the track is\\n     * muted and <tt>false</tt> otherwise.\\n     */\\n    isMuted() {\\n        return this.muted;\\n    }\\n\\n    /**\\n     * Returns the participant id which owns the track.\\n     *\\n     * @returns {string} the id of the participants. It corresponds to the\\n     * Colibri endpoint id/MUC nickname in case of Jitsi-meet.\\n     */\\n    getParticipantId() {\\n        return this.ownerEndpointId;\\n    }\\n\\n    /**\\n     * Return false;\\n     */\\n    isLocal() {\\n        return false;\\n    }\\n\\n    /**\\n     * Returns the synchronization source identifier (SSRC) of this remote\\n     * track.\\n     *\\n     * @returns {number} the SSRC of this remote track.\\n     */\\n    getSSRC() {\\n        return this.ssrc;\\n    }\\n\\n    /**\\n     * Changes the video type of the track.\\n     *\\n     * @param {string} type - The new video type(\\\"camera\\\", \\\"desktop\\\").\\n     */\\n    _setVideoType(type) {\\n        if (this.videoType === type) {\\n            return;\\n        }\\n        this.videoType = type;\\n        this.emit(JitsiTrackEvents.TRACK_VIDEOTYPE_CHANGED, type);\\n    }\\n\\n    /**\\n     * Handles track play events.\\n     */\\n    _playCallback() {\\n        const type = this.isVideoTrack() ? 'video' : 'audio';\\n\\n        const now = window.performance.now();\\n\\n        console.log(`(TIME) Render ${type}:\\\\t`, now);\\n        this.conference.getConnectionTimes()[`${type}.render`] = now;\\n\\n        // The conference can be started without calling GUM\\n        // FIXME if there would be a module for connection times this kind\\n        // of logic (gumDuration or ttfm) should end up there\\n        const gumStart = window.connectionTimes['obtainPermissions.start'];\\n        const gumEnd = window.connectionTimes['obtainPermissions.end'];\\n        const gumDuration\\n            = !isNaN(gumEnd) && !isNaN(gumStart) ? gumEnd - gumStart : 0;\\n\\n        // Subtract the muc.joined-to-session-initiate duration because jicofo\\n        // waits until there are 2 participants to start Jingle sessions.\\n        const ttfm = now\\n            - (this.conference.getConnectionTimes()['session.initiate']\\n                - this.conference.getConnectionTimes()['muc.joined'])\\n            - gumDuration;\\n\\n        this.conference.getConnectionTimes()[`${type}.ttfm`] = ttfm;\\n        console.log(`(TIME) TTFM ${type}:\\\\t`, ttfm);\\n\\n        Statistics.sendAnalytics(createTtfmEvent(\\n            {\\n                'media_type': type,\\n                muted: this.hasBeenMuted,\\n                value: ttfm\\n            }));\\n\\n    }\\n\\n    /**\\n     * Attach time to first media tracker only if there is conference and only\\n     * for the first element.\\n     * @param container the HTML container which can be 'video' or 'audio'\\n     * element.\\n     * @private\\n     */\\n    _attachTTFMTracker(container) {\\n        if ((ttfmTrackerAudioAttached && this.isAudioTrack())\\n            || (ttfmTrackerVideoAttached && this.isVideoTrack())) {\\n            return;\\n        }\\n\\n        if (this.isAudioTrack()) {\\n            ttfmTrackerAudioAttached = true;\\n        }\\n        if (this.isVideoTrack()) {\\n            ttfmTrackerVideoAttached = true;\\n        }\\n\\n        container.addEventListener('canplay', this._playCallback.bind(this));\\n    }\\n\\n    /**\\n     * Creates a text representation of this remote track instance.\\n     * @return {string}\\n     */\\n    toString() {\\n        return `RemoteTrack[${\\n            this.ownerEndpointId}, ${\\n            this.getType()}, p2p: ${\\n            this.isP2P}]`;\\n    }\\n}\\n\",\"/* global __filename */\\n\\nimport { getLogger } from 'jitsi-meet-logger';\\nimport * as MediaType from '../../service/RTC/MediaType';\\nimport { SdpTransformWrap } from '../xmpp/SdpTransformUtil';\\n\\nconst logger = getLogger(__filename);\\n\\n/**\\n * Fakes local SDP exposed to {@link JingleSessionPC} through the local\\n * description getter. Modifies the SDP, so that it will contain muted local\\n * video tracks description, even though their underlying {MediaStreamTrack}s\\n * are no longer in the WebRTC peerconnection. That prevents from SSRC updates\\n * being sent to Jicofo/remote peer and prevents sRD/sLD cycle on the remote\\n * side.\\n */\\nexport default class LocalSdpMunger {\\n\\n    /**\\n     * Creates new <tt>LocalSdpMunger</tt> instance.\\n     *\\n     * @param {TraceablePeerConnection} tpc\\n     */\\n    constructor(tpc) {\\n        this.tpc = tpc;\\n    }\\n\\n    /**\\n     * Makes sure that muted local video tracks associated with the parent\\n     * {@link TraceablePeerConnection} are described in the local SDP. It's done\\n     * in order to prevent from sending 'source-remove'/'source-add' Jingle\\n     * notifications when local video track is muted (<tt>MediaStream</tt> is\\n     * removed from the peerconnection).\\n     *\\n     * NOTE 1 video track is assumed\\n     *\\n     * @param {SdpTransformWrap} transformer the transformer instance which will\\n     * be used to process the SDP.\\n     * @return {boolean} <tt>true</tt> if there were any modifications to\\n     * the SDP wrapped by <tt>transformer</tt>.\\n     * @private\\n     */\\n    _addMutedLocalVideoTracksToSDP(transformer) {\\n        // Go over each video tracks and check if the SDP has to be changed\\n        const localVideos = this.tpc.getLocalTracks(MediaType.VIDEO);\\n\\n        if (!localVideos.length) {\\n            return false;\\n        } else if (localVideos.length !== 1) {\\n            logger.error(\\n                `${this.tpc} there is more than 1 video track ! `\\n                    + 'Strange things may happen !', localVideos);\\n        }\\n\\n        const videoMLine = transformer.selectMedia('video');\\n\\n        if (!videoMLine) {\\n            logger.debug(\\n                `${this.tpc} unable to hack local video track SDP`\\n                    + '- no \\\"video\\\" media');\\n\\n            return false;\\n        }\\n\\n        let modified = false;\\n\\n        for (const videoTrack of localVideos) {\\n            const muted = videoTrack.isMuted();\\n            const mediaStream = videoTrack.getOriginalStream();\\n\\n            // During the mute/unmute operation there are periods of time when\\n            // the track's underlying MediaStream is not added yet to\\n            // the PeerConnection. The SDP needs to be munged in such case.\\n            const isInPeerConnection\\n                = mediaStream && this.tpc.isMediaStreamInPc(mediaStream);\\n            const shouldFakeSdp = muted || !isInPeerConnection;\\n\\n            logger.debug(\\n                `${this.tpc} ${videoTrack} muted: ${\\n                    muted}, is in PeerConnection: ${\\n                    isInPeerConnection} => should fake sdp ? : ${\\n                    shouldFakeSdp}`);\\n\\n            if (!shouldFakeSdp) {\\n                continue; // eslint-disable-line no-continue\\n            }\\n\\n            // Inject removed SSRCs\\n            const requiredSSRCs\\n                = this.tpc.isSimulcastOn()\\n                    ? this.tpc.simulcast.ssrcCache\\n                    : [ this.tpc.sdpConsistency.cachedPrimarySsrc ];\\n\\n            if (!requiredSSRCs.length) {\\n                logger.error(\\n                    `No SSRCs stored for: ${videoTrack} in ${this.tpc}`);\\n\\n                continue; // eslint-disable-line no-continue\\n            }\\n\\n            modified = true;\\n\\n            // We need to fake sendrecv.\\n            // NOTE the SDP produced here goes only to Jicofo and is never set\\n            // as localDescription. That's why\\n            // TraceablePeerConnection.mediaTransferActive is ignored here.\\n            videoMLine.direction = 'sendrecv';\\n\\n            // Check if the recvonly has MSID\\n            const primarySSRC = requiredSSRCs[0];\\n\\n            // FIXME The cname could come from the stream, but may turn out to\\n            // be too complex. It is fine to come up with any value, as long as\\n            // we only care about the actual SSRC values when deciding whether\\n            // or not an update should be sent.\\n            const primaryCname = `injected-${primarySSRC}`;\\n\\n            for (const ssrcNum of requiredSSRCs) {\\n                // Remove old attributes\\n                videoMLine.removeSSRC(ssrcNum);\\n\\n                // Inject\\n                logger.debug(\\n                    `${this.tpc} injecting video SSRC: ${ssrcNum} for ${\\n                        videoTrack}`);\\n                videoMLine.addSSRCAttribute({\\n                    id: ssrcNum,\\n                    attribute: 'cname',\\n                    value: primaryCname\\n                });\\n                videoMLine.addSSRCAttribute({\\n                    id: ssrcNum,\\n                    attribute: 'msid',\\n                    value: videoTrack.storedMSID\\n                });\\n            }\\n            if (requiredSSRCs.length > 1) {\\n                const group = {\\n                    ssrcs: requiredSSRCs.join(' '),\\n                    semantics: 'SIM'\\n                };\\n\\n                if (!videoMLine.findGroup(group.semantics, group.ssrcs)) {\\n                    // Inject the group\\n                    logger.debug(\\n                        `${this.tpc} injecting SIM group for ${videoTrack}`,\\n                        group);\\n                    videoMLine.addSSRCGroup(group);\\n                }\\n            }\\n\\n            // Insert RTX\\n            // FIXME in P2P RTX is used by Chrome regardless of config option\\n            // status. Because of that 'source-remove'/'source-add'\\n            // notifications are still sent to remove/add RTX SSRC and FID group\\n            if (!this.tpc.options.disableRtx) {\\n                this.tpc.rtxModifier.modifyRtxSsrcs2(videoMLine);\\n            }\\n        }\\n\\n        return modified;\\n    }\\n\\n    /**\\n     * Modifies 'cname', 'msid', 'label' and 'mslabel' by appending\\n     * the id of {@link LocalSdpMunger#tpc} at the end, preceding by a dash\\n     * sign.\\n     *\\n     * @param {MLineWrap} mediaSection - The media part (audio or video) of the\\n     * session description which will be modified in place.\\n     * @returns {void}\\n     * @private\\n     */\\n    _transformMediaIdentifiers(mediaSection) {\\n        const pcId = this.tpc.id;\\n\\n        for (const ssrcLine of mediaSection.ssrcs) {\\n            switch (ssrcLine.attribute) {\\n            case 'cname':\\n            case 'label':\\n            case 'mslabel':\\n                ssrcLine.value = ssrcLine.value && `${ssrcLine.value}-${pcId}`;\\n                break;\\n            case 'msid': {\\n                if (ssrcLine.value) {\\n                    const streamAndTrackIDs = ssrcLine.value.split(' ');\\n\\n                    if (streamAndTrackIDs.length === 2) {\\n                        const streamId = streamAndTrackIDs[0];\\n                        const trackId = streamAndTrackIDs[1];\\n\\n                        ssrcLine.value\\n                            = `${streamId}-${pcId} ${trackId}-${pcId}`;\\n                    } else {\\n                        logger.warn(\\n                            'Unable to munge local MSID'\\n                                + `- weird format detected: ${ssrcLine.value}`);\\n                    }\\n                }\\n                break;\\n            }\\n            }\\n        }\\n    }\\n\\n    /**\\n     * Maybe modifies local description to fake local video tracks SDP when\\n     * those are muted.\\n     *\\n     * @param {object} desc the WebRTC SDP object instance for the local\\n     * description.\\n     * @returns {RTCSessionDescription}\\n     */\\n    maybeAddMutedLocalVideoTracksToSDP(desc) {\\n        if (!desc) {\\n            throw new Error('No local description passed in.');\\n        }\\n\\n        const transformer = new SdpTransformWrap(desc.sdp);\\n\\n        if (this._addMutedLocalVideoTracksToSDP(transformer)) {\\n            return new RTCSessionDescription({\\n                type: desc.type,\\n                sdp: transformer.toRawSDP()\\n            });\\n        }\\n\\n        return desc;\\n    }\\n\\n    /**\\n     * This transformation will make sure that stream identifiers are unique\\n     * across all of the local PeerConnections even if the same stream is used\\n     * by multiple instances at the same time.\\n     * Each PeerConnection assigns different SSRCs to the same local\\n     * MediaStream, but the MSID remains the same as it's used to identify\\n     * the stream by the WebRTC backend. The transformation will append\\n     * {@link TraceablePeerConnection#id} at the end of each stream's identifier\\n     * (\\\"cname\\\", \\\"msid\\\", \\\"label\\\" and \\\"mslabel\\\").\\n     *\\n     * @param {RTCSessionDescription} sessionDesc - The local session\\n     * description (this instance remains unchanged).\\n     * @return {RTCSessionDescription} - Transformed local session description\\n     * (a modified copy of the one given as the input).\\n     */\\n    transformStreamIdentifiers(sessionDesc) {\\n        // FIXME similar check is probably duplicated in all other transformers\\n        if (!sessionDesc || !sessionDesc.sdp || !sessionDesc.type) {\\n            return sessionDesc;\\n        }\\n\\n        const transformer = new SdpTransformWrap(sessionDesc.sdp);\\n        const audioMLine = transformer.selectMedia('audio');\\n\\n        if (audioMLine) {\\n            this._transformMediaIdentifiers(audioMLine);\\n        }\\n\\n        const videoMLine = transformer.selectMedia('video');\\n\\n        if (videoMLine) {\\n            this._transformMediaIdentifiers(videoMLine);\\n        }\\n\\n        return new RTCSessionDescription({\\n            type: sessionDesc.type,\\n            sdp: transformer.toRawSDP()\\n        });\\n    }\\n}\\n\",\"/* global __filename */\\n\\nimport { getLogger } from 'jitsi-meet-logger';\\nimport { parseSecondarySSRC, SdpTransformWrap } from './SdpTransformUtil';\\nimport SDPUtil from './SDPUtil';\\n\\nconst logger = getLogger(__filename);\\n\\n/**\\n * Begin helper functions\\n */\\n/**\\n * Updates or inserts the appropriate rtx information for primarySsrc with\\n *  the given rtxSsrc.  If no rtx ssrc for primarySsrc currently exists, it will\\n *  add the appropriate ssrc and ssrc group lines.  If primarySsrc already has\\n *  an rtx ssrc, the appropriate ssrc and group lines will be updated\\n * @param {MLineWrap} mLine\\n * @param {object} primarySsrcInfo the info (ssrc, msid & cname) for the\\n *  primary ssrc\\n * @param {number} rtxSsrc the rtx ssrc to associate with the primary ssrc\\n */\\nfunction updateAssociatedRtxStream(mLine, primarySsrcInfo, rtxSsrc) {\\n    logger.debug(\\n        `Updating mline to associate ${rtxSsrc}`\\n        + `rtx ssrc with primary stream, ${primarySsrcInfo.id}`);\\n    const primarySsrc = primarySsrcInfo.id;\\n    const primarySsrcMsid = primarySsrcInfo.msid;\\n    const primarySsrcCname = primarySsrcInfo.cname;\\n\\n    const previousRtxSSRC = mLine.getRtxSSRC(primarySsrc);\\n\\n    if (previousRtxSSRC === rtxSsrc) {\\n        logger.debug(`${rtxSsrc} was already associated with ${primarySsrc}`);\\n\\n        return;\\n    }\\n    if (previousRtxSSRC) {\\n        logger.debug(\\n            `${primarySsrc} was previously associated with rtx`\\n            + `${previousRtxSSRC}, removing all references to it`);\\n\\n        // Stream already had an rtx ssrc that is different than the one given,\\n        //  remove all trace of the old one\\n        mLine.removeSSRC(previousRtxSSRC);\\n\\n        logger.debug(`groups before filtering for ${previousRtxSSRC}`);\\n        logger.debug(mLine.dumpSSRCGroups());\\n\\n        mLine.removeGroupsWithSSRC(previousRtxSSRC);\\n    }\\n    mLine.addSSRCAttribute({\\n        id: rtxSsrc,\\n        attribute: 'cname',\\n        value: primarySsrcCname\\n    });\\n    mLine.addSSRCAttribute({\\n        id: rtxSsrc,\\n        attribute: 'msid',\\n        value: primarySsrcMsid\\n    });\\n    mLine.addSSRCGroup({\\n        semantics: 'FID',\\n        ssrcs: `${primarySsrc} ${rtxSsrc}`\\n    });\\n}\\n\\n/**\\n * End helper functions\\n */\\n\\n/**\\n * Adds any missing RTX streams for video streams\\n *  and makes sure that they remain consistent\\n */\\nexport default class RtxModifier {\\n    /**\\n     * Constructor\\n     */\\n    constructor() {\\n        /**\\n         * Map of video ssrc to corresponding RTX\\n         *  ssrc\\n         */\\n        this.correspondingRtxSsrcs = new Map();\\n    }\\n\\n    /**\\n     * Clear the cached map of primary video ssrcs to\\n     *  their corresponding rtx ssrcs so that they will\\n     *  not be used for the next call to modifyRtxSsrcs\\n     */\\n    clearSsrcCache() {\\n        this.correspondingRtxSsrcs.clear();\\n    }\\n\\n    /**\\n     * Explicitly set the primary video ssrc -> rtx ssrc\\n     *  mapping to be used in modifyRtxSsrcs\\n     * @param {Map} ssrcMapping a mapping of primary video\\n     *  ssrcs to their corresponding rtx ssrcs\\n     */\\n    setSsrcCache(ssrcMapping) {\\n        logger.debug('Setting ssrc cache to ', ssrcMapping);\\n        this.correspondingRtxSsrcs = ssrcMapping;\\n    }\\n\\n    /**\\n     * Adds RTX ssrcs for any video ssrcs that don't\\n     *  already have them.  If the video ssrc has been\\n     *  seen before, and already had an RTX ssrc generated,\\n     *  the same RTX ssrc will be used again.\\n     * @param {string} sdpStr sdp in raw string format\\n     */\\n    modifyRtxSsrcs(sdpStr) {\\n        const sdpTransformer = new SdpTransformWrap(sdpStr);\\n        const videoMLine = sdpTransformer.selectMedia('video');\\n\\n        if (!videoMLine) {\\n            logger.debug(`No 'video' media found in the sdp: ${sdpStr}`);\\n\\n            return sdpStr;\\n        }\\n\\n        return this.modifyRtxSsrcs2(videoMLine)\\n            ? sdpTransformer.toRawSDP() : sdpStr;\\n    }\\n\\n    /**\\n     * Does the same thing as {@link modifyRtxSsrcs}, but takes the\\n     *  {@link MLineWrap} instance wrapping video media as an argument.\\n     * @param {MLineWrap} videoMLine\\n     * @return {boolean} <tt>true</tt> if the SDP wrapped by\\n     *  {@link SdpTransformWrap} has been modified or <tt>false</tt> otherwise.\\n     */\\n    modifyRtxSsrcs2(videoMLine) {\\n        if (videoMLine.direction === 'recvonly') {\\n            logger.debug('RtxModifier doing nothing, video m line is recvonly');\\n\\n            return false;\\n        }\\n        if (videoMLine.getSSRCCount() < 1) {\\n            logger.debug('RtxModifier doing nothing, no video ssrcs present');\\n\\n            return false;\\n        }\\n        logger.debug('Current ssrc mapping: ', this.correspondingRtxSsrcs);\\n        const primaryVideoSsrcs = videoMLine.getPrimaryVideoSSRCs();\\n\\n        logger.debug('Parsed primary video ssrcs ', primaryVideoSsrcs,\\n            ' making sure all have rtx streams');\\n        for (const ssrc of primaryVideoSsrcs) {\\n            const msid = videoMLine.getSSRCAttrValue(ssrc, 'msid');\\n            const cname = videoMLine.getSSRCAttrValue(ssrc, 'cname');\\n            let correspondingRtxSsrc = this.correspondingRtxSsrcs.get(ssrc);\\n\\n            if (correspondingRtxSsrc) {\\n                logger.debug(\\n                    'Already have an associated rtx ssrc for'\\n                    + `video ssrc ${ssrc}: ${correspondingRtxSsrc}`);\\n            } else {\\n                logger.debug(\\n                    `No previously associated rtx ssrc for video ssrc ${ssrc}`);\\n\\n                // If there's one in the sdp already for it, we'll just set\\n                //  that as the corresponding one\\n                const previousAssociatedRtxStream = videoMLine.getRtxSSRC(ssrc);\\n\\n                if (previousAssociatedRtxStream) {\\n                    logger.debug(\\n                        `Rtx stream ${previousAssociatedRtxStream} `\\n                        + 'already existed in the sdp as an rtx stream for '\\n                        + `${ssrc}`);\\n                    correspondingRtxSsrc = previousAssociatedRtxStream;\\n                } else {\\n                    correspondingRtxSsrc = SDPUtil.generateSsrc();\\n                    logger.debug(`Generated rtx ssrc ${correspondingRtxSsrc} `\\n                                 + `for ssrc ${ssrc}`);\\n                }\\n                logger.debug(`Caching rtx ssrc ${correspondingRtxSsrc} `\\n                             + `for video ssrc ${ssrc}`);\\n                this.correspondingRtxSsrcs.set(ssrc, correspondingRtxSsrc);\\n            }\\n            updateAssociatedRtxStream(\\n                videoMLine,\\n                {\\n                    id: ssrc,\\n                    cname,\\n                    msid\\n                },\\n                correspondingRtxSsrc);\\n        }\\n\\n        // FIXME we're not looking into much details whether the SDP has been\\n        // modified or not once the precondition requirements are met.\\n        return true;\\n    }\\n\\n    /**\\n     * Strip all rtx streams from the given sdp\\n     * @param {string} sdpStr sdp in raw string format\\n     * @returns {string} sdp string with all rtx streams stripped\\n     */\\n    stripRtx(sdpStr) {\\n        const sdpTransformer = new SdpTransformWrap(sdpStr);\\n        const videoMLine = sdpTransformer.selectMedia('video');\\n\\n        if (!videoMLine) {\\n            logger.debug(`No 'video' media found in the sdp: ${sdpStr}`);\\n\\n            return sdpStr;\\n        }\\n        if (videoMLine.direction === 'recvonly') {\\n            logger.debug('RtxModifier doing nothing, video m line is recvonly');\\n\\n            return sdpStr;\\n        }\\n        if (videoMLine.getSSRCCount() < 1) {\\n            logger.debug('RtxModifier doing nothing, no video ssrcs present');\\n\\n            return sdpStr;\\n        }\\n        if (!videoMLine.containsAnySSRCGroups()) {\\n            logger.debug('RtxModifier doing nothing, '\\n              + 'no video ssrcGroups present');\\n\\n            return sdpStr;\\n        }\\n        const fidGroups = videoMLine.findGroups('FID');\\n\\n        // Remove the fid groups from the mline\\n\\n        videoMLine.removeGroupsBySemantics('FID');\\n\\n        // Get the rtx ssrcs and remove them from the mline\\n        for (const fidGroup of fidGroups) {\\n            const rtxSsrc = parseSecondarySSRC(fidGroup);\\n\\n            videoMLine.removeSSRC(rtxSsrc);\\n        }\\n\\n        return sdpTransformer.toRawSDP();\\n    }\\n}\\n\",\"/* global __filename */\\n\\nimport { getLogger } from 'jitsi-meet-logger';\\nimport {\\n    parsePrimarySSRC,\\n    parseSecondarySSRC,\\n    SdpTransformWrap\\n} from './SdpTransformUtil';\\n\\nconst logger = getLogger(__filename);\\n\\n/**\\n * Handles the work of keeping video ssrcs consistent across multiple\\n * o/a cycles, making it such that all stream operations can be\\n * kept local and do not need to be signaled.\\n * NOTE: This only keeps the 'primary' video ssrc consistent: meaning\\n * the primary video stream\\n */\\nexport default class SdpConsistency {\\n    /**\\n     * Constructor\\n     * @param {string} logPrefix the log prefix appended to every logged\\n     * message, currently used to distinguish for which\\n     * <tt>TraceablePeerConnection</tt> the instance works.\\n     */\\n    constructor(logPrefix) {\\n        this.clearVideoSsrcCache();\\n        this.logPrefix = logPrefix;\\n    }\\n\\n    /**\\n     * Clear the cached video primary and primary rtx ssrcs so that\\n     *  they will not be used for the next call to\\n     *  makeVideoPrimarySsrcsConsistent\\n     */\\n    clearVideoSsrcCache() {\\n        this.cachedPrimarySsrc = null;\\n        this.injectRecvOnly = false;\\n    }\\n\\n    /**\\n     * Explicitly set the primary ssrc to be used in\\n     *  makeVideoPrimarySsrcsConsistent\\n     * @param {number} primarySsrc the primarySsrc to be used\\n     *  in future calls to makeVideoPrimarySsrcsConsistent\\n     * @throws Error if <tt>primarySsrc</tt> is not a number\\n     */\\n    setPrimarySsrc(primarySsrc) {\\n        if (typeof primarySsrc !== 'number') {\\n            throw new Error('Primary SSRC must be a number!');\\n        }\\n        this.cachedPrimarySsrc = primarySsrc;\\n    }\\n\\n    /**\\n     * Checks whether or not there is a primary video SSRC cached already.\\n     * @return {boolean}\\n     */\\n    hasPrimarySsrcCached() {\\n        return Boolean(this.cachedPrimarySsrc);\\n    }\\n\\n    /**\\n     * Given an sdp string, either:\\n     *  1) record the primary video and primary rtx ssrcs to be\\n     *   used in future calls to makeVideoPrimarySsrcsConsistent or\\n     *  2) change the primary and primary rtx ssrcs in the given sdp\\n     *   to match the ones previously cached\\n     * @param {string} sdpStr the sdp string to (potentially)\\n     *  change to make the video ssrcs consistent\\n     * @returns {string} a (potentially) modified sdp string\\n     *  with ssrcs consistent with this class' cache\\n     */\\n    makeVideoPrimarySsrcsConsistent(sdpStr) {\\n        const sdpTransformer = new SdpTransformWrap(sdpStr);\\n        const videoMLine = sdpTransformer.selectMedia('video');\\n\\n        if (!videoMLine) {\\n            logger.debug(\\n                `${this.logPrefix} no 'video' media found in the sdp: `\\n                    + `${sdpStr}`);\\n\\n            return sdpStr;\\n        }\\n\\n        if (videoMLine.direction === 'recvonly') {\\n            // If the mline is recvonly, we'll add the primary\\n            //  ssrc as a recvonly ssrc\\n            if (this.cachedPrimarySsrc && this.injectRecvOnly) {\\n                videoMLine.addSSRCAttribute({\\n                    id: this.cachedPrimarySsrc,\\n                    attribute: 'cname',\\n                    value: `recvonly-${this.cachedPrimarySsrc}`\\n                });\\n            } else {\\n                logger.info(\\n                    `${this.logPrefix} no SSRC found for the recvonly video`\\n                        + 'stream!');\\n            }\\n        } else {\\n            const newPrimarySsrc = videoMLine.getPrimaryVideoSsrc();\\n\\n            if (!newPrimarySsrc) {\\n                logger.info(\\n                    `${this.logPrefix} sdp-consistency couldn't`\\n                        + ' parse new primary ssrc');\\n\\n                return sdpStr;\\n            }\\n            if (this.cachedPrimarySsrc) {\\n                logger.info(\\n                    `${this.logPrefix} sdp-consistency replacing new ssrc`\\n                        + `${newPrimarySsrc} with cached `\\n                        + `${this.cachedPrimarySsrc}`);\\n                videoMLine.replaceSSRC(newPrimarySsrc, this.cachedPrimarySsrc);\\n                for (const group of videoMLine.ssrcGroups) {\\n                    if (group.semantics === 'FID') {\\n                        const primarySsrc = parsePrimarySSRC(group);\\n                        const rtxSsrc = parseSecondarySSRC(group);\\n\\n                        // eslint-disable-next-line max-depth\\n                        if (primarySsrc === newPrimarySsrc) {\\n                            group.ssrcs\\n                                = `${this.cachedPrimarySsrc} ${rtxSsrc}`;\\n                        }\\n                    }\\n                }\\n            } else {\\n                this.cachedPrimarySsrc = newPrimarySsrc;\\n                logger.info(\\n                    `${this.logPrefix} sdp-consistency caching primary ssrc`\\n                        + `${this.cachedPrimarySsrc}`);\\n            }\\n\\n            this.injectRecvOnly = true;\\n        }\\n\\n        return sdpTransformer.toRawSDP();\\n    }\\n}\\n\",\"import * as JitsiConferenceEvents from '../JitsiConferenceEvents';\\n\\n/**\\n * The value which we use to say, every sound over this threshold\\n * is talking on the mic.\\n * @type {number}\\n */\\nconst SPEECH_DETECT_THRESHOLD = 0.6;\\n\\n/**\\n * Detect user trying to speek while is locally muted and fires an event.\\n */\\nexport default class TalkMutedDetection {\\n    /**\\n     * Creates TalkMutedDetection\\n     * @param conference the JitsiConference instance that created us.\\n     * @param callback the callback to call when detected that the local user is\\n     * talking while her microphone is muted.\\n     * @constructor\\n     */\\n    constructor(conference, callback) {\\n        /**\\n         * The callback to call when detected that the local user is talking\\n         * while her microphone is muted.\\n         *\\n         * @private\\n         */\\n        this._callback = callback;\\n\\n        /**\\n         * The indicator which determines whether <tt>callback</tt> has been\\n         * invoked for the current local audio track of <tt>conference</tt> so\\n         * that it is invoked once only.\\n         *\\n         * @private\\n         */\\n        this._eventFired = false;\\n\\n        // XXX I went back and forth on the subject of where to put the access\\n        // to statistics. On the one had, (1) statistics is likely intended to\\n        // be private to conference and (2) there is a desire to keep the\\n        // dependencies of modules to the minimum (i.e. not have\\n        // TalkMutedDetection depend on statistics). On the other hand, (1)\\n        // statistics is technically not private because\\n        // JitsiConferenceEventManager accesses it and (2) TalkMutedDetection\\n        // works exactly because it knows that there are no audio levels for\\n        // JitsiLocalTrack but there are audio levels for the local participant\\n        // through statistics.\\n        conference.statistics.addAudioLevelListener(\\n            this._audioLevel.bind(this));\\n\\n        conference.on(\\n            JitsiConferenceEvents.TRACK_MUTE_CHANGED,\\n            this._trackMuteChanged.bind(this));\\n        conference.on(\\n            JitsiConferenceEvents.TRACK_ADDED,\\n            this._trackAdded.bind(this));\\n    }\\n\\n    /* eslint-disable max-params */\\n    /**\\n     * Receives audio level events for all send and receive streams.\\n     *\\n     * @param {TraceablePeerConnection} pc - WebRTC PeerConnection object of the\\n     * @param {number} ssrc - The synchronization source identifier (SSRC) of\\n     * the endpoint/participant/stream being reported.\\n     * @param {number} audioLevel - The audio level of <tt>ssrc</tt>.\\n     * @param {boolean} isLocal - <tt>true</tt> if <tt>ssrc</tt> represents a\\n     * local/send stream or <tt>false</tt> for a remote/receive stream.\\n     */\\n    _audioLevel(tpc, ssrc, audioLevel, isLocal) {\\n        // We are interested in the local audio stream only and if event is not\\n        // sent yet.\\n        if (!isLocal || !this.audioTrack || this._eventFired) {\\n            return;\\n        }\\n\\n        if (this.audioTrack.isMuted()\\n            && audioLevel > SPEECH_DETECT_THRESHOLD) {\\n            this._eventFired = true;\\n            this._callback();\\n        }\\n    }\\n    /* eslint-enable max-params */\\n\\n    /**\\n     * Determines whether a specific {@link JitsiTrack} represents a local audio\\n     * track.\\n     *\\n     * @param {JitsiTrack} track - The <tt>JitsiTrack</tt> to be checked whether\\n     * it represents a local audio track.\\n     * @private\\n     * @return {boolean} - <tt>true</tt> if the specified <tt>track</tt>\\n     * represents a local audio track; otherwise, <tt>false</tt>.\\n     */\\n    _isLocalAudioTrack(track) {\\n        return track.isAudioTrack() && track.isLocal();\\n    }\\n\\n    /**\\n     * Notifies this <tt>TalkMutedDetection</tt> that a {@link JitsiTrack} was\\n     * added to the associated {@link JitsiConference}. Looks for the local\\n     * audio track only.\\n     *\\n     * @param {JitsiTrack} track - The added <tt>JitsiTrack</tt>.\\n     * @private\\n     */\\n    _trackAdded(track) {\\n        if (this._isLocalAudioTrack(track)) {\\n            this.audioTrack = track;\\n        }\\n    }\\n\\n    /**\\n     * Notifies this <tt>TalkMutedDetection</tt> that the mute state of a\\n     * {@link JitsiTrack} has changed. Looks for the local audio track only.\\n     *\\n     * @param {JitsiTrack} track - The <tt>JitsiTrack</tt> whose mute state has\\n     * changed.\\n     * @private\\n     */\\n    _trackMuteChanged(track) {\\n        if (this._isLocalAudioTrack(track) && track.isMuted()) {\\n            this._eventFired = false;\\n        }\\n    }\\n}\\n\",\"import * as ConnectionQualityEvents\\n    from '../../service/connectivity/ConnectionQualityEvents';\\nimport * as ConferenceEvents from '../../JitsiConferenceEvents';\\nimport { getLogger } from 'jitsi-meet-logger';\\n\\nconst XMPPEvents = require('../../service/xmpp/XMPPEvents');\\nconst VideoType = require('../../service/RTC/VideoType');\\nconst Resolutions = require('../../service/RTC/Resolutions');\\n\\nconst logger = getLogger(__filename);\\n\\n/**\\n * The value to use for the \\\"type\\\" field for messages sent by ConnectionQuality\\n * over the data channel.\\n */\\nconst STATS_MESSAGE_TYPE = 'stats';\\n\\n/**\\n * See media/engine/simulcast.ss from webrtc.org\\n */\\nconst kSimulcastFormats = [\\n    { width: 1920,\\n        height: 1080,\\n        layers: 3,\\n        max: 5000,\\n        target: 4000,\\n        min: 800 },\\n    { width: 1280,\\n        height: 720,\\n        layers: 3,\\n        max: 2500,\\n        target: 2500,\\n        min: 600 },\\n    { width: 960,\\n        height: 540,\\n        layers: 3,\\n        max: 900,\\n        target: 900,\\n        min: 450 },\\n    { width: 640,\\n        height: 360,\\n        layers: 2,\\n        max: 700,\\n        target: 500,\\n        min: 150 },\\n    { width: 480,\\n        height: 270,\\n        layers: 2,\\n        max: 450,\\n        target: 350,\\n        min: 150 },\\n    { width: 320,\\n        height: 180,\\n        layers: 1,\\n        max: 200,\\n        target: 150,\\n        min: 30 }\\n];\\n\\n/**\\n * The maximum bitrate to use as a measurement against the participant's current\\n * bitrate. This cap helps in the cases where the participant's bitrate is high\\n * but not enough to fulfill high targets, such as with 1080p.\\n */\\nconst MAX_TARGET_BITRATE = 2500;\\n\\n/**\\n * The initial bitrate for video in kbps.\\n */\\nlet startBitrate = 800;\\n\\n\\n/**\\n * The current cap (in kbps) put on the video stream (or null if there isn't\\n * a cap).  If there is a cap, we'll take it into account when calculating\\n * the current quality.\\n */\\nlet videoBitrateCap = null;\\n\\n/**\\n * Gets the expected bitrate (in kbps) in perfect network conditions.\\n * @param simulcast {boolean} whether simulcast is enabled or not.\\n * @param resolution {Resolution} the resolution.\\n * @param millisSinceStart {number} the number of milliseconds since sending\\n * video started.\\n */\\nfunction getTarget(simulcast, resolution, millisSinceStart) {\\n    // Completely ignore the bitrate in the first 5 seconds, as the first\\n    // event seems to fire very early and the value is suspicious and causes\\n    // false positives.\\n    if (millisSinceStart < 15000) {\\n        return 1;\\n    }\\n\\n    let target = 0;\\n    let height = Math.min(resolution.height, resolution.width);\\n\\n    if (simulcast) {\\n        // Find the first format with height no bigger than ours.\\n        let simulcastFormat = kSimulcastFormats.find(f => f.height <= height);\\n\\n        if (simulcastFormat) {\\n            // Sum the target fields from all simulcast layers for the given\\n            // resolution (e.g. 720p + 360p + 180p).\\n            for (height = simulcastFormat.height; height >= 180; height /= 2) {\\n                const targetHeight = height;\\n\\n                simulcastFormat\\n                    = kSimulcastFormats.find(f => f.height === targetHeight);\\n                if (simulcastFormat) {\\n                    target += simulcastFormat.target;\\n                } else {\\n                    break;\\n                }\\n            }\\n        }\\n    } else {\\n        // See GetMaxDefaultVideoBitrateKbps in\\n        // media/engine/webrtcvideoengine2.cc from webrtc.org\\n        const pixels = resolution.width * resolution.height;\\n\\n        if (pixels <= 320 * 240) {\\n            target = 600;\\n        } else if (pixels <= 640 * 480) {\\n            target = 1700;\\n        } else if (pixels <= 960 * 540) {\\n            target = 2000;\\n        } else {\\n            target = 2500;\\n        }\\n    }\\n\\n    // Allow for an additional 1 second for ramp up -- delay any initial drop\\n    // of connection quality by 1 second.\\n    return Math.min(target, rampUp(Math.max(0, millisSinceStart - 1000)));\\n}\\n\\n/**\\n * Gets the bitrate to which GCC would have ramped up in perfect network\\n * conditions after millisSinceStart milliseconds.\\n * @param millisSinceStart {number} the number of milliseconds since sending\\n * video was enabled.\\n */\\nfunction rampUp(millisSinceStart) {\\n    if (millisSinceStart > 60000) {\\n        return Number.MAX_SAFE_INTEGER;\\n    }\\n\\n    // According to GCC the send side bandwidth estimation grows with at most\\n    // 8% per second.\\n    // https://tools.ietf.org/html/draft-ietf-rmcat-gcc-02#section-5.5\\n    return startBitrate * Math.pow(1.08, millisSinceStart / 1000);\\n}\\n\\n/**\\n * A class which monitors the local statistics coming from the RTC modules, and\\n * calculates a \\\"connection quality\\\" value, in percent, for the media\\n * connection. A value of 100% indicates a very good network connection, and a\\n * value of 0% indicates a poor connection.\\n */\\nexport default class ConnectionQuality {\\n    /**\\n     *\\n     * @param conference\\n     * @param eventEmitter\\n     * @param options\\n     */\\n    constructor(conference, eventEmitter, options) {\\n        this.eventEmitter = eventEmitter;\\n\\n        /**\\n         * The owning JitsiConference.\\n         */\\n        this._conference = conference;\\n\\n        /**\\n         * Holds statistics about the local connection quality.\\n         */\\n        this._localStats = {\\n            connectionQuality: 100,\\n            jvbRTT: undefined\\n        };\\n\\n        /**\\n         * The time this._localStats.connectionQuality was last updated.\\n         */\\n        this._lastConnectionQualityUpdate = -1;\\n\\n        /**\\n         * Maps a participant ID to an object holding connection quality\\n         * statistics received from this participant.\\n         */\\n        this._remoteStats = {};\\n\\n        /**\\n         * The time that the ICE state last changed to CONNECTED. We use this\\n         * to calculate how much time we as a sender have had to ramp-up.\\n         */\\n        this._timeIceConnected = -1;\\n\\n        /**\\n         * The time that local video was unmuted. We use this to calculate how\\n         * much time we as a sender have had to ramp-up.\\n         */\\n        this._timeVideoUnmuted = -1;\\n\\n        /**\\n         * The time at which a video bitrate cap was last removed.  We use\\n         * this to calculate how much time we, as a sender, have had to\\n         * ramp-up\\n         */\\n        this._timeLastBwCapRemoved = -1;\\n\\n        // We assume a global startBitrate value for the sake of simplicity.\\n        if (options.startBitrate && options.startBitrate > 0) {\\n            startBitrate = options.startBitrate;\\n        }\\n\\n        // TODO: consider ignoring these events and letting the user of\\n        // lib-jitsi-meet handle these separately.\\n        conference.on(\\n            ConferenceEvents.CONNECTION_INTERRUPTED,\\n            () => {\\n                this._updateLocalConnectionQuality(0);\\n                this.eventEmitter.emit(\\n                    ConnectionQualityEvents.LOCAL_STATS_UPDATED,\\n                    this._localStats);\\n                this._broadcastLocalStats();\\n            });\\n\\n        conference.room.addListener(\\n            XMPPEvents.ICE_CONNECTION_STATE_CHANGED,\\n            (jingleSession, newState) => {\\n                if (!jingleSession.isP2P && newState === 'connected') {\\n                    this._timeIceConnected = window.performance.now();\\n                }\\n            });\\n\\n        // Listen to DataChannel message from other participants in the\\n        // conference, and update the _remoteStats field accordingly.\\n        conference.on(\\n            ConferenceEvents.ENDPOINT_MESSAGE_RECEIVED,\\n            (participant, payload) => {\\n                if (payload.type === STATS_MESSAGE_TYPE) {\\n                    this._updateRemoteStats(\\n                        participant.getId(), payload.values);\\n                }\\n            });\\n\\n        // Listen to local statistics events originating from the RTC module\\n        // and update the _localStats field.\\n        // Oh, and by the way, the resolutions of all remote participants are\\n        // also piggy-backed in these \\\"local\\\" statistics. It's obvious, really,\\n        // if one carefully reads the *code* (but not the docs) in\\n        // UI/VideoLayout/VideoLayout.js#updateLocalConnectionStats in\\n        // jitsi-meet\\n        // TODO: We should keep track of the remote resolution in _remoteStats,\\n        // and notify about changes via separate events.\\n        conference.statistics.addConnectionStatsListener(\\n            this._updateLocalStats.bind(this));\\n\\n        // Save the last time we were unmuted.\\n        conference.on(\\n            ConferenceEvents.TRACK_MUTE_CHANGED,\\n            track => {\\n                if (track.isVideoTrack()) {\\n                    if (track.isMuted()) {\\n                        this._timeVideoUnmuted = -1;\\n                    } else {\\n                        this._maybeUpdateUnmuteTime();\\n                    }\\n                }\\n            });\\n        conference.on(\\n            ConferenceEvents.TRACK_ADDED,\\n            track => {\\n                if (track.isVideoTrack() && !track.isMuted()) {\\n                    this._maybeUpdateUnmuteTime();\\n                }\\n            });\\n\\n        conference.on(\\n            ConferenceEvents.SERVER_REGION_CHANGED,\\n            serverRegion => {\\n                this._localStats.serverRegion = serverRegion;\\n            });\\n\\n        conference.on(\\n            ConferenceEvents.PROPERTIES_CHANGED,\\n            properties => {\\n                this._localStats.bridgeCount\\n                    = Number((properties || {})['bridge-count']);\\n            }\\n        );\\n    }\\n\\n    /**\\n     * Sets _timeVideoUnmuted if it was previously unset. If it was already set,\\n     * doesn't change it.\\n     */\\n    _maybeUpdateUnmuteTime() {\\n        if (this._timeVideoUnmuted < 0) {\\n            this._timeVideoUnmuted = window.performance.now();\\n        }\\n    }\\n\\n    /**\\n     * Calculates a new \\\"connection quality\\\" value.\\n     * @param videoType {VideoType} the type of the video source (camera or\\n     * a screen capture).\\n     * @param isMuted {boolean} whether the local video is muted.\\n     * @param resolutionName {Resolution} the input resolution used by the\\n     * camera.\\n     * @returns {*} the newly calculated connection quality.\\n     */\\n    _calculateConnectionQuality(videoType, isMuted, resolutionName) {\\n\\n        // resolutionName is an index into Resolutions (where \\\"720\\\" is\\n        // \\\"1280x720\\\" and \\\"960\\\" is \\\"960x720\\\" ...).\\n        const resolution = Resolutions[resolutionName];\\n\\n        let quality = 100;\\n        let packetLoss;\\n\\n        // TODO: take into account packet loss for received streams\\n\\n        if (this._localStats.packetLoss) {\\n            packetLoss = this._localStats.packetLoss.upload;\\n\\n            // Ugly Hack Alert (UHA):\\n            // The packet loss for the upload direction is calculated based on\\n            // incoming RTCP Receiver Reports. Since we don't have RTCP\\n            // termination for audio, these reports come from the actual\\n            // receivers in the conference and therefore the reported packet\\n            // loss includes loss from the bridge to the receiver.\\n            // When we are sending video this effect is small, because the\\n            // number of video packets is much larger than the number of audio\\n            // packets (and our calculation is based on the total number of\\n            // received and lost packets).\\n            // When video is muted, however, the effect might be significant,\\n            // but we don't know what it is. We do know that it is positive, so\\n            // as a temporary solution, until RTCP termination is implemented\\n            // for the audio streams, we relax the packet loss checks here.\\n            if (isMuted) {\\n                packetLoss *= 0.5;\\n            }\\n        }\\n\\n        if (isMuted || !resolution || videoType === VideoType.DESKTOP\\n            || this._timeIceConnected < 0\\n            || this._timeVideoUnmuted < 0) {\\n\\n            // Calculate a value based on packet loss only.\\n            if (packetLoss === undefined) {\\n                logger.error('Cannot calculate connection quality, unknown '\\n                    + 'packet loss.');\\n                quality = 100;\\n            } else if (packetLoss <= 2) {\\n                quality = 100; // Full 5 bars.\\n            } else if (packetLoss <= 4) {\\n                quality = 70; // 4 bars\\n            } else if (packetLoss <= 6) {\\n                quality = 50; // 3 bars\\n            } else if (packetLoss <= 8) {\\n                quality = 30; // 2 bars\\n            } else if (packetLoss <= 12) {\\n                quality = 10; // 1 bars\\n            } else {\\n                quality = 0; // Still 1 bar, but slower climb-up.\\n            }\\n        } else {\\n            // Calculate a value based on the sending bitrate.\\n\\n            // Figure out if simulcast is in use\\n            const activeTPC = this._conference.getActivePeerConnection();\\n            const isSimulcastOn\\n                = Boolean(activeTPC && activeTPC.isSimulcastOn());\\n\\n            const newVideoBitrateCap\\n                = activeTPC && activeTPC.bandwidthLimiter\\n                && activeTPC.bandwidthLimiter.getBandwidthLimit('video');\\n\\n            // If we had a cap set but there isn't one now, then it has\\n            // just been 'lifted', so we should treat this like a new\\n            // ramp up.\\n            if (!newVideoBitrateCap && videoBitrateCap) {\\n                this._timeLastBwCapRemoved = window.performance.now();\\n\\n                // Set the start bitrate to whatever we were just capped to\\n                startBitrate = videoBitrateCap;\\n            }\\n            videoBitrateCap = newVideoBitrateCap;\\n\\n            // time since sending of video was enabled.\\n            const millisSinceStart = window.performance.now()\\n                - Math.max(this._timeVideoUnmuted,\\n                    this._timeIceConnected,\\n                    this._timeLastBwCapRemoved);\\n\\n            // expected sending bitrate in perfect conditions\\n            let target\\n                = getTarget(isSimulcastOn, resolution, millisSinceStart);\\n\\n            target = Math.min(0.9 * target, MAX_TARGET_BITRATE);\\n\\n            if (videoBitrateCap) {\\n                target = Math.min(target, videoBitrateCap);\\n            }\\n\\n            quality = 100 * this._localStats.bitrate.upload / target;\\n\\n            // Whatever the bitrate, drop early if there is significant loss\\n            if (packetLoss && packetLoss >= 10) {\\n                quality = Math.min(quality, 30);\\n            }\\n        }\\n\\n        // Make sure that the quality doesn't climb quickly\\n        if (this._lastConnectionQualityUpdate > 0) {\\n            const maxIncreasePerSecond = 2;\\n            const prevConnectionQuality = this._localStats.connectionQuality;\\n            const diffSeconds\\n                = (window.performance.now() - this._lastConnectionQualityUpdate)\\n                    / 1000;\\n\\n            quality\\n                = Math.min(\\n                    quality,\\n                    prevConnectionQuality\\n                        + (diffSeconds * maxIncreasePerSecond));\\n        }\\n\\n        return Math.min(100, quality);\\n    }\\n\\n    /**\\n     * Updates the localConnectionQuality value\\n     * @param values {number} the new value. Should be in [0, 100].\\n     */\\n    _updateLocalConnectionQuality(value) {\\n        this._localStats.connectionQuality = value;\\n        this._lastConnectionQualityUpdate = window.performance.now();\\n    }\\n\\n    /**\\n     * Broadcasts the local statistics to all other participants in the\\n     * conference.\\n     */\\n    _broadcastLocalStats() {\\n        // Send only the data that remote participants care about.\\n        const data = {\\n            bitrate: this._localStats.bitrate,\\n            packetLoss: this._localStats.packetLoss,\\n            connectionQuality: this._localStats.connectionQuality,\\n            jvbRTT: this._localStats.jvbRTT,\\n            serverRegion: this._localStats.serverRegion\\n        };\\n\\n        try {\\n            this._conference.broadcastEndpointMessage({\\n                type: STATS_MESSAGE_TYPE,\\n                values: data });\\n        } catch (e) {\\n            // We often hit this in the beginning of a call, before the data\\n            // channel is ready. It is not a big problem, because we will\\n            // send the statistics again after a few seconds, and the error is\\n            // already logged elsewhere. So just ignore it.\\n\\n            // let errorMsg = \\\"Failed to broadcast local stats\\\";\\n            // logger.error(errorMsg, e);\\n            // GlobalOnErrorHandler.callErrorHandler(\\n            //    new Error(errorMsg + \\\": \\\" + e));\\n        }\\n    }\\n\\n    /**\\n     * Updates the local statistics\\n     * @param {TraceablePeerConnection} tpc the peerconnection which emitted\\n     * the stats\\n     * @param data new statistics\\n     */\\n    _updateLocalStats(tpc, data) {\\n        // Update jvbRTT\\n        if (!tpc.isP2P) {\\n            const jvbRTT\\n                = data.transport\\n                    && data.transport.length && data.transport[0].rtt;\\n\\n            this._localStats.jvbRTT = jvbRTT ? jvbRTT : undefined;\\n        }\\n\\n        // Do not continue with processing of other stats if they do not\\n        // originate from the active peerconnection\\n        if (tpc !== this._conference.getActivePeerConnection()) {\\n            return;\\n        }\\n\\n        let key;\\n        const updateLocalConnectionQuality\\n            = !this._conference.isConnectionInterrupted();\\n        const localVideoTrack\\n            = this._conference.getLocalVideoTrack();\\n        const videoType\\n            = localVideoTrack ? localVideoTrack.videoType : undefined;\\n        const isMuted = localVideoTrack ? localVideoTrack.isMuted() : true;\\n        const resolution = localVideoTrack ? localVideoTrack.resolution : null;\\n\\n        if (!isMuted) {\\n            this._maybeUpdateUnmuteTime();\\n        }\\n\\n        // Copy the fields already in 'data'.\\n        for (key in data) {\\n            if (data.hasOwnProperty(key)) {\\n                this._localStats[key] = data[key];\\n            }\\n        }\\n\\n        // And re-calculate the connectionQuality field.\\n        if (updateLocalConnectionQuality) {\\n            this._updateLocalConnectionQuality(\\n                this._calculateConnectionQuality(\\n                    videoType,\\n                    isMuted,\\n                    resolution));\\n        }\\n\\n        this.eventEmitter.emit(\\n            ConnectionQualityEvents.LOCAL_STATS_UPDATED,\\n            this._localStats);\\n        this._broadcastLocalStats();\\n    }\\n\\n    /**\\n     * Updates remote statistics\\n     * @param id the id of the remote participant\\n     * @param data the statistics received\\n     */\\n    _updateRemoteStats(id, data) {\\n        // Use only the fields we need\\n        this._remoteStats[id] = {\\n            bitrate: data.bitrate,\\n            packetLoss: data.packetLoss,\\n            connectionQuality: data.connectionQuality,\\n            jvbRTT: data.jvbRTT,\\n            serverRegion: data.serverRegion\\n        };\\n\\n        this.eventEmitter.emit(\\n            ConnectionQualityEvents.REMOTE_STATS_UPDATED,\\n            id,\\n            this._remoteStats[id]);\\n    }\\n\\n    /**\\n     * Returns the local statistics.\\n     * Exported only for use in jitsi-meet-torture.\\n     */\\n    getStats() {\\n        return this._localStats;\\n    }\\n}\\n\",\"/* global __filename */\\nimport { getLogger } from 'jitsi-meet-logger';\\n\\nconst logger = getLogger(__filename);\\n\\n/**\\n * A delayed ICE failed notification which is triggered only if the ICE\\n * connection does not recover soon after or before the XMPP connection is\\n * restored (if it was ever broken). If ICE fails while the XMPP connection is\\n * not broken then the notifications will be sent after 2 seconds delay. This\\n * extra delay is not intentional just a side effect of the code.\\n * NOTE that this delayed task can only be used if PING is supported by the XMPP\\n * server.\\n */\\nexport default class IceFailedNotification {\\n    /**\\n     * Creates new {@code DelayedIceFailed} task.\\n     * @param {JitsiConference} conference\\n     */\\n    constructor(conference) {\\n        this._conference = conference;\\n    }\\n\\n    /**\\n     * Starts the task.\\n     * @param {JingleSessionPC} session - the JVB Jingle session.\\n     */\\n    start(session) {\\n        // The 65 seconds are greater than the default Prosody's BOSH\\n        // timeout of 60. This gives some time for the XMPP connection\\n        // to recover.\\n        this._conference.xmpp.ping(65000).then(\\n            () => {\\n                if (this._canceled) {\\n                    return;\\n                }\\n\\n                if (this._conference.isJvbConnectionInterrupted) {\\n                    this._iceFailedTimeout = window.setTimeout(() => {\\n                        logger.info(\\n                            'Sending ICE failed'\\n                            + ' - the connection has not recovered');\\n                        this._iceFailedTimeout = undefined;\\n                        session.sendIceFailedNotification();\\n                    }, 2000);\\n                } else {\\n                    logger.info(\\n                        'ICE connection restored - not sending ICE failed');\\n                }\\n            },\\n            error => {\\n                logger.error(\\n                    'PING error/timeout - not sending ICE failed', error);\\n            });\\n    }\\n\\n    /**\\n     * Cancels the task.\\n     */\\n    cancel() {\\n        this._canceled = true;\\n        if (this._iceFailedTimeout) {\\n            window.clearTimeout(this._iceFailedTimeout);\\n        }\\n    }\\n}\\n\",\"/* global __filename */\\nimport { getLogger } from 'jitsi-meet-logger';\\nimport { createE2eRttEvent } from '../../service/statistics/AnalyticsEvents';\\nimport * as E2ePingEvents\\n    from '../../service/e2eping/E2ePingEvents';\\nimport * as JitsiConferenceEvents from '../../JitsiConferenceEvents';\\nimport Statistics from '../statistics/statistics';\\n\\nconst logger = getLogger(__filename);\\n\\n/**\\n * The 'type' of a message which designates an e2e ping request.\\n * @type {string}\\n */\\nconst E2E_PING_REQUEST = 'e2e-ping-request';\\n\\n/**\\n * The 'type' of a message which designates an e2e ping response.\\n * @type {string}\\n */\\nconst E2E_PING_RESPONSE = 'e2e-ping-response';\\n\\n/**\\n * Saves e2e ping related state for a single JitsiParticipant.\\n */\\nclass ParticipantWrapper {\\n    /**\\n     * Creates a ParticipantWrapper\\n     * @param {JitsiParticipant} participant - The remote participant that this\\n     * object wraps.\\n     * @param {E2ePing} e2eping\\n     */\\n    constructor(participant, e2eping) {\\n        // The JitsiParticipant\\n        this.participant = participant;\\n\\n        // The E2ePing\\n        this.e2eping = e2eping;\\n\\n        // Caches the ID\\n        this.id = participant.getId();\\n\\n        // Recently sent requests\\n        this.requests = {};\\n\\n        // The ID of the last sent request. We just increment it for each new\\n        // request. Start at 1 so we can consider only thruthy values valid.\\n        this.lastRequestId = 1;\\n\\n        this.clearIntervals = this.clearIntervals.bind(this);\\n        this.sendRequest = this.sendRequest.bind(this);\\n        this.handleResponse = this.handleResponse.bind(this);\\n        this.maybeSendAnalytics = this.maybeSendAnalytics.bind(this);\\n        this.sendAnalytics = this.sendAnalytics.bind(this);\\n\\n        // If the data channel was already open (this is likely a participant\\n        // joining an existing conference) send a request immediately.\\n        if (e2eping.isDataChannelOpen) {\\n            this.sendRequest();\\n        }\\n\\n        this.pingInterval = window.setInterval(\\n            this.sendRequest, e2eping.pingIntervalMs);\\n        this.analyticsInterval = window.setTimeout(\\n            this.maybeSendAnalytics, this.e2eping.analyticsIntervalMs);\\n    }\\n\\n    /**\\n     * Clears the interval which sends pings.\\n     * @type {*}\\n     */\\n    clearIntervals() {\\n        if (this.pingInterval) {\\n            window.clearInterval(this.pingInterval);\\n        }\\n        if (this.analyticsInterval) {\\n            window.clearInterval(this.analyticsInterval);\\n        }\\n    }\\n\\n    /**\\n     * Sends the next ping request.\\n     * @type {*}\\n     */\\n    sendRequest() {\\n        const requestId = this.lastRequestId++;\\n        const requestMessage = {\\n            type: E2E_PING_REQUEST,\\n            id: requestId\\n        };\\n\\n        this.e2eping.sendMessage(requestMessage, this.id);\\n        this.requests[requestId] = {\\n            id: requestId,\\n            timeSent: window.performance.now()\\n        };\\n    }\\n\\n    /**\\n     * Handles a response from this participant.\\n     * @type {*}\\n     */\\n    handleResponse(response) {\\n        const request = this.requests[response.id];\\n\\n        if (request) {\\n            request.rtt = window.performance.now() - request.timeSent;\\n            this.e2eping.eventEmitter.emit(\\n                E2ePingEvents.E2E_RTT_CHANGED,\\n                this.participant,\\n                request.rtt);\\n        }\\n\\n        this.maybeSendAnalytics();\\n    }\\n\\n    /**\\n     * Goes over the requests, clearing ones which we don't need anymore, and\\n     * if it finds at least one request with a valid RTT in the last\\n     * 'analyticsIntervalMs' then sends an analytics event.\\n     * @type {*}\\n     */\\n    maybeSendAnalytics() {\\n        const now = window.performance.now();\\n\\n        // The RTT we'll report is the minimum RTT measured in the last\\n        // analyticsInterval\\n        let rtt = Infinity;\\n        let request, requestId;\\n\\n        // It's time to send analytics. Clean up all requests and find the\\n        for (requestId in this.requests) {\\n            if (this.requests.hasOwnProperty(requestId)) {\\n                request = this.requests[requestId];\\n\\n                if (request.timeSent < now - this.e2eping.analyticsIntervalMs) {\\n                    // An old request. We don't care about it anymore.\\n                    delete this.requests[requestId];\\n                } else if (request.rtt) {\\n                    rtt = Math.min(rtt, request.rtt);\\n                }\\n            }\\n        }\\n\\n        if (rtt < Infinity) {\\n            this.sendAnalytics(rtt);\\n        }\\n    }\\n\\n    /**\\n     * Sends an analytics event for this participant with the given RTT.\\n     * @type {*}\\n     */\\n    sendAnalytics(rtt) {\\n        Statistics.sendAnalytics(createE2eRttEvent(\\n            this.id,\\n            this.participant.getProperty('region'),\\n            rtt));\\n    }\\n}\\n\\n/**\\n * Implements end-to-end ping (from one conference participant to another) via\\n * the jitsi-videobridge channel (either WebRTC data channel or web socket).\\n *\\n * TODO: use a broadcast message instead of individual pings to each remote\\n * participant.\\n *\\n * This class:\\n * 1. Sends periodic ping requests to all other participants in the\\n * conference.\\n * 2. Responds to ping requests from other participants.\\n * 3. Fires events with the end-to-end RTT to each participant whenever a\\n * response is received.\\n * 4. Fires analytics events with the end-to-end RTT periodically.\\n */\\nexport default class E2ePing {\\n    /**\\n     * @param {JitsiConference} conference - The conference.\\n     * @param {Function} sendMessage - The function to use to send a message.\\n     * @param {Object} options\\n     */\\n    constructor(conference, options, sendMessage) {\\n        this.conference = conference;\\n        this.eventEmitter = conference.eventEmitter;\\n        this.sendMessage = sendMessage;\\n\\n        // The interval at which pings will be sent (<= 0 disables sending).\\n        this.pingIntervalMs = 10000;\\n\\n        // The interval at which analytics events will be sent.\\n        this.analyticsIntervalMs = 60000;\\n\\n        // Maps a participant ID to its ParticipantWrapper\\n        this.participants = {};\\n\\n        // Whether the WebRTC channel has been opened or not.\\n        this.isDataChannelOpen = false;\\n\\n        if (options && options.e2eping) {\\n            if (typeof options.e2eping.pingInterval === 'number') {\\n                this.pingIntervalMs = options.e2eping.pingInterval;\\n            }\\n            if (typeof options.e2eping.analyticsInterval === 'number') {\\n                this.analyticsIntervalMs = options.e2eping.analyticsInterval;\\n            }\\n\\n            // We want to report at most once a ping interval.\\n            if (this.analyticsIntervalMs > 0 && this.analyticsIntervalMs\\n                < this.pingIntervalMs) {\\n                this.analyticsIntervalMs = this.pingIntervalMs;\\n            }\\n        }\\n        logger.info(\\n            `Initializing e2e ping; pingInterval=${\\n                this.pingIntervalMs}, analyticsInterval=${\\n                this.analyticsIntervalMs}.`);\\n\\n        this.participantJoined = this.participantJoined.bind(this);\\n        conference.on(\\n            JitsiConferenceEvents.USER_JOINED,\\n            this.participantJoined);\\n\\n        this.participantLeft = this.participantLeft.bind(this);\\n        conference.on(\\n            JitsiConferenceEvents.USER_LEFT,\\n            this.participantLeft);\\n\\n        this.messageReceived = this.messageReceived.bind(this);\\n        conference.on(\\n            JitsiConferenceEvents.ENDPOINT_MESSAGE_RECEIVED,\\n            this.messageReceived);\\n\\n        this.dataChannelOpened = this.dataChannelOpened.bind(this);\\n        conference.on(\\n            JitsiConferenceEvents.DATA_CHANNEL_OPENED,\\n            this.dataChannelOpened);\\n    }\\n\\n    /**\\n     * Notifies this instance that the communications channel has been opened\\n     * and it can now send messages via sendMessage.\\n     */\\n    dataChannelOpened() {\\n        this.isDataChannelOpen = true;\\n\\n        // We don't want to wait the whole interval before sending the first\\n        // request, but we can't send it immediately after the participant joins\\n        // either, because our data channel might not have initialized.\\n        // So once the data channel initializes, send requests to everyone.\\n        // Wait an additional 200ms to give a chance to the remote side (if it\\n        // also just connected as is the case for the first 2 participants in a\\n        // conference) to open its data channel.\\n        for (const id in this.participants) {\\n            if (this.participants.hasOwnProperty(id)) {\\n                const participantWrapper = this.participants[id];\\n\\n                window.setTimeout(participantWrapper.sendRequest, 200);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * Handles a message that was received.\\n     *\\n     * @param participant - The message sender.\\n     * @param payload - The payload of the message.\\n     */\\n    messageReceived(participant, payload) {\\n        // Listen to E2E PING requests and responses from other participants\\n        // in the conference.\\n        if (payload.type === E2E_PING_REQUEST) {\\n            this.handleRequest(participant.getId(), payload);\\n        } else if (payload.type === E2E_PING_RESPONSE) {\\n            this.handleResponse(participant.getId(), payload);\\n        }\\n    }\\n\\n    /**\\n     * Handles a participant joining the conference. Starts to send ping\\n     * requests to the participant.\\n     *\\n     * @param {String} id - The ID of the participant.\\n     * @param {JitsiParticipant} participant - The participant that joined.\\n     */\\n    participantJoined(id, participant) {\\n        if (this.pingIntervalMs <= 0) {\\n            return;\\n        }\\n\\n        if (this.participants[id]) {\\n            logger.info(\\n                `Participant wrapper already exists for ${id}. Clearing.`);\\n            this.participants[id].clearIntervals();\\n            delete this.participants[id];\\n        }\\n\\n        this.participants[id] = new ParticipantWrapper(participant, this);\\n    }\\n\\n    /**\\n     * Handles a participant leaving the conference. Stops sending requests.\\n     *\\n     * @param {String} id - The ID of the participant.\\n     */\\n    participantLeft(id) {\\n        if (this.pingIntervalMs <= 0) {\\n            return;\\n        }\\n\\n        if (this.participants[id]) {\\n            this.participants[id].clearIntervals();\\n            delete this.participants[id];\\n        }\\n    }\\n\\n    /**\\n     * Handles a ping request coming from another participant.\\n     *\\n     * @param {string} participantId - The ID of the participant who sent the\\n     * request.\\n     * @param {Object} request - The request.\\n     */\\n    handleRequest(participantId, request) {\\n        // If it's a valid request, just send a response.\\n        if (request && request.id) {\\n            const response = {\\n                type: E2E_PING_RESPONSE,\\n                id: request.id\\n            };\\n\\n            this.sendMessage(response, participantId);\\n        } else {\\n            logger.info(\\n                `Received an invalid e2e ping request from ${participantId}.`);\\n        }\\n    }\\n\\n    /**\\n     * Handles a ping response coming from another participant\\n     * @param {string} participantId - The ID of the participant who sent the\\n     * response.\\n     * @param {Object} response - The response.\\n     */\\n    handleResponse(participantId, response) {\\n        const participantWrapper = this.participants[participantId];\\n\\n        if (participantWrapper) {\\n            participantWrapper.handleResponse(response);\\n        }\\n    }\\n\\n    /**\\n     * Stops this E2ePing (i.e. stop sending requests).\\n     */\\n    stop() {\\n        logger.info('Stopping e2eping');\\n\\n        this.conference.off(\\n            JitsiConferenceEvents.USER_JOINED,\\n            this.participantJoined);\\n        this.conference.off(\\n            JitsiConferenceEvents.USER_LEFT,\\n            this.participantLeft);\\n        this.conference.off(\\n            JitsiConferenceEvents.ENDPOINT_MESSAGE_RECEIVED,\\n            this.messageReceived);\\n        this.conference.off(\\n            JitsiConferenceEvents.DATA_CHANNEL_OPENED,\\n            this.dataChannelOpened);\\n\\n        for (const id in this.participants) {\\n            if (this.participants.hasOwnProperty(id)) {\\n                this.participants[id].clearIntervals();\\n            }\\n        }\\n\\n        this.participants = {};\\n    }\\n}\\n\\n\",\"/* global __filename */\\n\\nimport { getLogger } from 'jitsi-meet-logger';\\nimport * as JitsiConferenceEvents from '../../JitsiConferenceEvents';\\n\\nconst logger = getLogger(__filename);\\n\\n/**\\n * Emits {@link JitsiConferenceEvents.JVB121_STATUS} events based on the current\\n * P2P status and the conference participants count. See the event description\\n * for more info.\\n */\\nexport default class Jvb121EventGenerator {\\n    /**\\n     * Creates new <tt>Jvb121EventGenerator</tt> for the given conference.\\n     * @param {JitsiConference} conference\\n     */\\n    constructor(conference) {\\n        this._conference = conference;\\n\\n        /**\\n         * Indicates whether it's a one to one JVB conference (<tt>true</tt>)\\n         * or a multiparty (<tt>false</tt>). Will be also <tt>false</tt> if\\n         * the conference is currently in the P2P mode.\\n         * @type {boolean}\\n         * @private\\n         */\\n        this._jvb121 = true;\\n\\n        this._conference.addEventListener(\\n            JitsiConferenceEvents.USER_JOINED, () => this.evaluateStatus());\\n        this._conference.addEventListener(\\n            JitsiConferenceEvents.USER_LEFT, () => this.evaluateStatus());\\n        this._conference.addEventListener(\\n            JitsiConferenceEvents.P2P_STATUS, () => this.evaluateStatus());\\n    }\\n\\n    /**\\n     * Checks whether the JVB121 value should be updated and a new event\\n     * emitted.\\n     */\\n    evaluateStatus() {\\n        const oldStatus = this._jvb121;\\n        const newStatus\\n            = !this._conference.isP2PActive()\\n                && this._conference.getParticipantCount() <= 2;\\n\\n        if (oldStatus !== newStatus) {\\n            this._jvb121 = newStatus;\\n            logger.debug(`JVB121 status ${oldStatus} => ${newStatus}`);\\n            this._conference.eventEmitter.emit(\\n                JitsiConferenceEvents.JVB121_STATUS, oldStatus, newStatus);\\n        }\\n    }\\n}\\n\",\"import { getLogger } from 'jitsi-meet-logger';\\n\\nimport XMPPEvents from '../../service/xmpp/XMPPEvents';\\n\\nimport JibriSession from './JibriSession';\\nimport recordingXMLUtils from './recordingXMLUtils';\\n\\nconst logger = getLogger(__filename);\\n\\n/**\\n * A class responsible for starting and stopping recording sessions and emitting\\n * state updates for them.\\n */\\nclass RecordingManager {\\n    /**\\n     * Initialize {@code RecordingManager} with other objects that are necessary\\n     * for starting a recording.\\n     *\\n     * @param {ChatRoom} chatRoom - The chat room to handle.\\n     * @returns {void}\\n     */\\n    constructor(chatRoom) {\\n        /**\\n         * All known recording sessions from the current conference.\\n         */\\n        this._sessions = {};\\n\\n        this._chatRoom = chatRoom;\\n\\n        this.onPresence = this.onPresence.bind(this);\\n\\n        this._chatRoom.eventEmitter.addListener(\\n            XMPPEvents.PRESENCE_RECEIVED, this.onPresence);\\n    }\\n\\n    /**\\n     * Finds an existing recording session by session ID.\\n     *\\n     * @param {string} sessionID - The session ID associated with the recording.\\n     * @returns {JibriSession|undefined}\\n     */\\n    getSession(sessionID) {\\n        return this._sessions[sessionID];\\n    }\\n\\n    /**\\n     * Callback to invoke to parse through a presence update to find recording\\n     * related updates (from Jibri participant doing the recording and the\\n     * focus which controls recording).\\n     *\\n     * @param {Object} event - The presence data from the pubsub event.\\n     * @param {Node} event.presence - An XMPP presence update.\\n     * @param {boolean} event.fromHiddenDomain - Whether or not the update comes\\n     * from a participant that is trusted but not visible, as would be the case\\n     * with the Jibri recorder participant.\\n     * @returns {void}\\n     */\\n    onPresence({ fromHiddenDomain, presence }) {\\n        if (recordingXMLUtils.isFromFocus(presence)) {\\n            this._handleFocusPresence(presence);\\n        } else if (fromHiddenDomain) {\\n            this._handleJibriPresence(presence);\\n        }\\n    }\\n\\n    /**\\n     * Start a recording session.\\n     *\\n     * @param {Object} options - Configuration for the recording.\\n     * @param {string} [options.appData] - Data specific to the app/service that\\n     * the result file will be uploaded.\\n     * @param {string} [optional] options.broadcastId - The channel on which a\\n     * live stream will occur.\\n     * @param {string} options.mode - The mode in which recording should be\\n     * started. Recognized values are \\\"file\\\" and \\\"stream\\\".\\n     * @param {string} [optional] options.streamId - The stream key to be used\\n     * for live stream broadcasting. Required for live streaming.\\n     * @returns {Promise} A promise for starting a recording, which will pass\\n     * back the session on success. The promise resolves after receiving an\\n     * acknowledgment of the start request success or fail.\\n     */\\n    startRecording(options) {\\n        const session = new JibriSession({\\n            ...options,\\n            connection: this._chatRoom.connection\\n        });\\n\\n        return session.start({\\n            appData: options.appData,\\n            broadcastId: options.broadcastId,\\n            focusMucJid: this._chatRoom.focusMucJid,\\n            streamId: options.streamId\\n        })\\n            .then(() => {\\n                // Only store the session and emit if the session has not been\\n                // added already. This is a workaround for the session getting\\n                // created due to a presence update to announce a \\\"pending\\\"\\n                // recording being received before JibriSession#start finishes.\\n                if (!this.getSession(session.getID())) {\\n                    this._addSession(session);\\n                    this._emitSessionUpdate(session);\\n                }\\n\\n                return session;\\n            })\\n            .catch(error => {\\n                this._emitSessionUpdate(session);\\n\\n                return Promise.reject(error);\\n            });\\n    }\\n\\n    /**\\n     * Stop a recording session.\\n     *\\n     * @param {string} sessionID - The ID associated with the recording session\\n     * to be stopped.\\n     * @returns {Promise} The promise resolves after receiving an\\n     * acknowledgment of the stop request success or fail.\\n     */\\n    stopRecording(sessionID) {\\n        const session = this.getSession(sessionID);\\n\\n        if (session) {\\n            return session.stop({ focusMucJid: this._chatRoom.focusMucJid });\\n        }\\n\\n        return Promise.reject(new Error('Could not find session'));\\n    }\\n\\n    /**\\n     * Stores a reference to the passed in JibriSession.\\n     *\\n     * @param {string} session - The JibriSession instance to store.\\n     * @returns {void}\\n     */\\n    _addSession(session) {\\n        this._sessions[session.getID()] = session;\\n    }\\n\\n    /**\\n     * Create a new instance of a recording session and stores a reference to\\n     * it.\\n     *\\n     * @param {string} sessionID - The session ID of the recording in progress.\\n     * @param {string} status - The current status of the recording session.\\n     * @param {string} mode - The recording mode of the session.\\n     * @returns {JibriSession}\\n     */\\n    _createSession(sessionID, status, mode) {\\n        const session = new JibriSession({\\n            connection: this._chatRoom.connection,\\n            focusMucJid: this._chatRoom.focusMucJid,\\n            mode,\\n            sessionID,\\n            status\\n        });\\n\\n        this._addSession(session);\\n\\n        return session;\\n    }\\n\\n    /**\\n     * Notifies listeners of an update to a recording session.\\n     *\\n     * @param {JibriSession} session - The session that has been updated.\\n     */\\n    _emitSessionUpdate(session) {\\n        this._chatRoom.eventEmitter.emit(\\n            XMPPEvents.RECORDER_STATE_CHANGED, session);\\n    }\\n\\n    /**\\n     * Parses presence to update an existing JibriSession or to create a new\\n     * JibriSession.\\n     *\\n     * @param {Node} presence - An XMPP presence update.\\n     * @returns {void}\\n     */\\n    _handleFocusPresence(presence) {\\n        const jibriStatus = recordingXMLUtils.getFocusRecordingUpdate(presence);\\n\\n        if (!jibriStatus) {\\n            return;\\n        }\\n\\n        const { sessionID, status, error, recordingMode } = jibriStatus;\\n\\n        // We'll look for an existing session or create one (in case we're a\\n        // participant joining a call with an existing recording going on).\\n        let session = this.getSession(sessionID);\\n\\n        // Handle the case where a status update is received in presence but\\n        // the local participant has joined while the JibriSession has already\\n        // ended.\\n        if (!session && status === 'off') {\\n            logger.warn(\\n                'Ignoring recording presence update',\\n                'Received a new session with status off.');\\n\\n            return;\\n        }\\n\\n        // Jicofo sends updates via presence, and any extension in presence\\n        // is sent until it is explicitly removed.  It's difficult for\\n        // Jicofo to know when a presence has been sent once, so it won't\\n        // remove jibri status extension.  This means we may receive the same\\n        // status update more than once, so check for that here\\n        if (session\\n            && session.getStatus() === status\\n            && session.getError() === error) {\\n            logger.warn('Ignoring duplicate presence update: ',\\n                JSON.stringify(jibriStatus));\\n\\n            return;\\n        }\\n\\n        if (!session) {\\n            session = this._createSession(sessionID, status, recordingMode);\\n        }\\n\\n        session.setStatus(status);\\n\\n        if (error) {\\n            session.setError(error);\\n        }\\n\\n        this._emitSessionUpdate(session);\\n    }\\n\\n    /**\\n     * Handles updates from the Jibri which can broadcast a YouTube URL that\\n     * needs to be updated in a JibriSession.\\n     *\\n     * @param {Node} presence - An XMPP presence update.\\n     * @returns {void}\\n     */\\n    _handleJibriPresence(presence) {\\n        const { liveStreamViewURL, mode, sessionID }\\n            = recordingXMLUtils.getHiddenDomainUpdate(presence);\\n\\n        if (!sessionID) {\\n            logger.warn(\\n                'Ignoring potential jibri presence due to no session id.');\\n\\n            return;\\n        }\\n\\n        let session = this.getSession(sessionID);\\n\\n        if (!session) {\\n            session = this._createSession(sessionID, '', mode);\\n        }\\n\\n        session.setLiveStreamViewURL(liveStreamViewURL);\\n\\n        this._emitSessionUpdate(session);\\n    }\\n}\\n\\nexport default RecordingManager;\\n\",\"import browser from '../browser';\\nimport { createRttByRegionEvent }\\n    from '../../service/statistics/AnalyticsEvents';\\nimport { getLogger } from 'jitsi-meet-logger';\\nimport RTCUtils from '../RTC/RTCUtils';\\nimport Statistics from '../statistics/statistics';\\n\\nconst logger = getLogger(__filename);\\n\\n/**\\n * The options to pass to createOffer (we need to offer to receive *something*\\n * for the PC to gather candidates.\\n */\\nconst offerOptions = {\\n    offerToReceiveAudio: 1,\\n    offerToReceiveVideo: 0\\n};\\n\\n\\n/**\\n * The interval at which the webrtc engine sends STUN keep alive requests.\\n * @type {number}\\n */\\nconst stunKeepAliveIntervalMs = 10000;\\n\\n/**\\n * Wraps a PeerConnection with one specific STUN server and measures the RTT\\n * to the STUN server.\\n */\\nclass PCMonitor {\\n    /* eslint-disable max-params */\\n    /**\\n     *\\n     * @param {String} region - The region of the STUN server.\\n     * @param {String} address - The address of the STUN server.\\n     * @param {number} getStatsIntervalMs how often to call getStats.\\n     * @param {number} delay the delay after which the PeerConnection will be\\n     * started (that is, createOffer and setLocalDescription will be invoked).\\n     *\\n     */\\n    constructor(region, address, getStatsIntervalMs, delay) {\\n        /* eslint-disable max-params */\\n        this.region = region;\\n        this.getStatsIntervalMs = getStatsIntervalMs;\\n        this.getStatsInterval = null;\\n\\n        // What we consider the current RTT. It is Math.min(this.rtts).\\n        this.rtt = Infinity;\\n\\n        // The RTT measurements we've made from the latest getStats() calls.\\n        this.rtts = [];\\n\\n        const iceServers = [ { 'url': `stun:${address}` } ];\\n\\n        this.pc = new RTCUtils.RTCPeerConnectionType(\\n            {\\n                'iceServers': iceServers\\n            });\\n\\n        // Maps a key consisting of the IP address, port and priority of a\\n        // candidate to some state related to it. If we have more than one\\n        // network interface we will might multiple srflx candidates and this\\n        // helps to distinguish between then.\\n        this.candidates = {};\\n\\n        this.stopped = false;\\n\\n        this.start = this.start.bind(this);\\n        this.stop = this.stop.bind(this);\\n        this.startStatsInterval = this.startStatsInterval.bind(this);\\n        this.handleCandidateRtt = this.handleCandidateRtt.bind(this);\\n\\n        window.setTimeout(this.start, delay);\\n    }\\n\\n    /**\\n     * Starts this PCMonitor. That is, invokes createOffer and\\n     * setLocalDescription on the PeerConnection and starts an interval which\\n     * calls getStats.\\n     */\\n    start() {\\n        if (this.stopped) {\\n            return;\\n        }\\n\\n        this.pc.createOffer(offerOptions).then(offer => {\\n            this.pc.setLocalDescription(\\n                offer,\\n                () => {\\n                    logger.info(\\n                        `setLocalDescription success for ${this.region}`);\\n                    this.startStatsInterval();\\n                },\\n                error => {\\n                    logger.warn(\\n                        `setLocalDescription failed for ${this.region}: ${\\n                            error}`);\\n                }\\n            );\\n        });\\n    }\\n\\n    /**\\n     * Starts an interval which invokes getStats on the PeerConnection and\\n     * measures the RTTs for the different candidates.\\n     */\\n    startStatsInterval() {\\n        this.getStatsInterval = window.setInterval(\\n            () => {\\n                // Note that the data that we use to measure the RTT is only\\n                // available in the legacy (callback based) getStats API.\\n                this.pc.getStats(stats => {\\n                    const results = stats.result();\\n\\n                    for (let i = 0; i < results.length; ++i) {\\n                        const res = results[i];\\n                        const rttTotal\\n                            = Number(res.stat('stunKeepaliveRttTotal'));\\n\\n                        // We recognize the results that we care for (local\\n                        // candidates of type srflx) by the existance of the\\n                        // stunKeepaliveRttTotal stat.\\n                        if (rttTotal > 0) {\\n                            const candidateKey\\n                                = `${res.stat('ipAddress')}_${\\n                                    res.stat('portNumber')}_${\\n                                    res.stat('priority')}`;\\n\\n                            this.handleCandidateRtt(\\n                                candidateKey,\\n                                rttTotal,\\n                                Number(\\n                                    res.stat('stunKeepaliveResponsesReceived')),\\n                                Number(\\n                                    res.stat('stunKeepaliveRequestsSent')));\\n                        }\\n                    }\\n\\n                    // After we've measured the RTT for all candidates we,\\n                    // update the state of the PC with the shortest one.\\n                    let rtt = Infinity;\\n\\n                    for (const key in this.candidates) {\\n                        if (this.candidates.hasOwnProperty(key)\\n                            && this.candidates[key].rtt > 0) {\\n                            rtt = Math.min(rtt, this.candidates[key].rtt);\\n                        }\\n                    }\\n\\n                    // We keep the last 6 measured RTTs and choose the shortest\\n                    // one to export to analytics. This is because we often see\\n                    // failures get a real measurement which end up as Infinity.\\n                    this.rtts.push(rtt);\\n                    if (this.rtts.length > 6) {\\n                        this.rtts = this.rtts.splice(1, 7);\\n                    }\\n                    this.rtt = Math.min(...this.rtts);\\n                });\\n            },\\n            this.getStatsIntervalMs\\n        );\\n    }\\n\\n    /* eslint-disable max-params */\\n    /**\\n     * Updates the RTT for a candidate identified by \\\"key\\\" based on the values\\n     * from getStats() and the previously saved state (i.e. old values).\\n     *\\n     * @param {String} key the ID for the candidate\\n     * @param {number} rttTotal the value of the 'stunKeepaliveRttTotal' just\\n     * measured.\\n     * @param {number} responsesReceived the value of the\\n     * 'stunKeepaliveResponsesReceived' stat just measured.\\n     * @param {number} requestsSent the value of the 'stunKeepaliveRequestsSent'\\n     * stat just measured.\\n     */\\n    handleCandidateRtt(key, rttTotal, responsesReceived, requestsSent) {\\n        /* eslist-enable max-params */\\n        if (!this.candidates[key]) {\\n            this.candidates[key] = {\\n                rttTotal: 0,\\n                responsesReceived: 0,\\n                requestsSent: 0,\\n                rtt: NaN\\n            };\\n        }\\n\\n        const rttTotalDiff = rttTotal - this.candidates[key].rttTotal;\\n        const responsesReceivedDiff\\n            = responsesReceived - this.candidates[key].responsesReceived;\\n\\n        // We observe that when the difference between the number of requests\\n        // and responses has grown (i.q. when the value below is positive), the\\n        // the RTT measurements are incorrect (too low). For this reason we\\n        // ignore these measurement (setting rtt=NaN), but update our state.\\n        const requestsResponsesDiff\\n            = (requestsSent - responsesReceived)\\n            - (this.candidates[key].requestsSent\\n                - this.candidates[key].responsesReceived);\\n        let rtt = NaN;\\n\\n        if (responsesReceivedDiff > 0 && requestsResponsesDiff === 0) {\\n            rtt = rttTotalDiff / responsesReceivedDiff;\\n        }\\n\\n        this.candidates[key].rttTotal = rttTotal;\\n        this.candidates[key].responsesReceived = responsesReceived;\\n        this.candidates[key].requestsSent = requestsSent;\\n        this.candidates[key].rtt = rtt;\\n    }\\n\\n\\n    /**\\n     * Stops this PCMonitor, clearing its intervals and stopping the\\n     * PeerConnection.\\n     */\\n    stop() {\\n        if (this.getStatsInterval) {\\n            window.clearInterval(this.getStatsInterval);\\n        }\\n\\n        this.pc.close();\\n\\n        this.stopped = true;\\n    }\\n}\\n\\n/**\\n * A class which monitors the round-trip time (RTT) to a set of STUN servers.\\n * The measured RTTs are sent as analytics events. It uses a separate\\n * PeerConnection (represented as a PCMonitor) for each STUN server.\\n */\\nexport default class RttMonitor {\\n    /**\\n     * Initializes a new RttMonitor.\\n     * @param {Object} config the object holding the configuration.\\n     */\\n    constructor(config) {\\n        if (!config || !config.enabled\\n            || !browser.supportsLocalCandidateRttStatistics()) {\\n            return;\\n        }\\n\\n        // Maps a region to the PCMonitor instance for that region.\\n        this.pcMonitors = {};\\n\\n        this.startPCMonitors = this.startPCMonitors.bind(this);\\n        this.sendAnalytics = this.sendAnalytics.bind(this);\\n        this.stop = this.stop.bind(this);\\n\\n        this.analyticsInterval = null;\\n        this.stopped = false;\\n\\n        const initialDelay = config.initialDelay || 60000;\\n\\n\\n        logger.info(\\n            `Starting RTT monitor with an initial delay of ${initialDelay}`);\\n\\n\\n        window.setTimeout(\\n            () => this.startPCMonitors(config),\\n            initialDelay);\\n    }\\n\\n    /**\\n     * Starts the PCMonitors according to the configuration.\\n     */\\n    startPCMonitors(config) {\\n        if (!config.stunServers) {\\n            logger.warn('No stun servers configured.');\\n\\n            return;\\n        }\\n\\n        if (this.stopped) {\\n            return;\\n        }\\n\\n        const getStatsIntervalMs\\n            = config.getStatsInterval || stunKeepAliveIntervalMs;\\n        const analyticsIntervalMs\\n            = config.analyticsInterval || getStatsIntervalMs;\\n        const count = Object.keys(config.stunServers).length;\\n        const offset = getStatsIntervalMs / count;\\n\\n        // We delay the initialization of each PC so that they are uniformly\\n        // distributed across the getStatsIntervalMs.\\n        let i = 0;\\n\\n        for (const region in config.stunServers) {\\n            if (config.stunServers.hasOwnProperty(region)) {\\n                const address = config.stunServers[region];\\n\\n                this.pcMonitors[region]\\n                    = new PCMonitor(\\n                        region,\\n                        address,\\n                        getStatsIntervalMs,\\n                        offset * i);\\n                i++;\\n            }\\n        }\\n\\n        window.setTimeout(\\n            () => {\\n                if (!this.stopped) {\\n                    this.analyticsInterval\\n                        = window.setInterval(\\n                        this.sendAnalytics, analyticsIntervalMs);\\n                }\\n            },\\n            1000);\\n    }\\n\\n    /**\\n     * Sends an analytics event with the measured RTT to each region/STUN\\n     * server.\\n     */\\n    sendAnalytics() {\\n        const rtts = {};\\n\\n        for (const region in this.pcMonitors) {\\n            if (this.pcMonitors.hasOwnProperty(region)) {\\n                const rtt = this.pcMonitors[region].rtt;\\n\\n                if (!isNaN(rtt) && rtt !== Infinity) {\\n                    rtts[region.replace('-', '_')] = rtt;\\n                }\\n            }\\n        }\\n\\n        if (rtts) {\\n            Statistics.sendAnalytics(createRttByRegionEvent(rtts));\\n        }\\n    }\\n\\n    /**\\n     * Stops this RttMonitor, clearing all intervals and closing all\\n     * PeerConnections.\\n     */\\n    stop() {\\n        logger.info('Stopping RttMonitor.');\\n        this.stopped = true;\\n        for (const region in this.pcMonitors) {\\n            if (this.pcMonitors.hasOwnProperty(region)) {\\n                this.pcMonitors[region].stop();\\n            }\\n        }\\n        this.pcMonitors = {};\\n\\n        if (this.analyticsInterval) {\\n            window.clearInterval(this.analyticsInterval);\\n        }\\n    }\\n}\\n\",\"/* global __filename */\\n\\nimport { createRtpStatsEvent } from '../../service/statistics/AnalyticsEvents';\\nimport { getLogger } from 'jitsi-meet-logger';\\nimport * as ConnectionQualityEvents\\n    from '../../service/connectivity/ConnectionQualityEvents';\\nimport * as ConferenceEvents from '../../JitsiConferenceEvents';\\nimport * as MediaType from '../../service/RTC/MediaType';\\nimport browser from '../browser';\\nimport Statistics from './statistics';\\nimport * as VideoType from '../../service/RTC/VideoType';\\n\\nconst logger = getLogger(__filename);\\n\\n/**\\n * This will calculate an average for one, named stat and submit it to\\n * the analytics module when requested. It automatically counts the samples.\\n */\\nclass AverageStatReport {\\n    /**\\n     * Creates new <tt>AverageStatReport</tt> for given name.\\n     * @param {string} name that's the name of the event that will be reported\\n     * to the analytics module.\\n     */\\n    constructor(name) {\\n        this.name = name;\\n        this.count = 0;\\n        this.sum = 0;\\n        this.samples = [];\\n    }\\n\\n    /**\\n     * Adds the next value that will be included in the average when\\n     * {@link calculate} is called.\\n     * @param {number} nextValue\\n     */\\n    addNext(nextValue) {\\n        if (typeof nextValue !== 'number') {\\n            logger.error(\\n                `${this.name} - invalid value for idx: ${this.count}`,\\n                nextValue);\\n        } else if (!isNaN(nextValue)) {\\n            this.sum += nextValue;\\n            this.samples.push(nextValue);\\n            this.count += 1;\\n        }\\n    }\\n\\n    /**\\n     * Calculates an average for the samples collected using {@link addNext}.\\n     * @return {number|NaN} an average of all collected samples or <tt>NaN</tt>\\n     * if no samples were collected.\\n     */\\n    calculate() {\\n        return this.sum / this.count;\\n    }\\n\\n    /**\\n     * Appends the report to the analytics \\\"data\\\" object. The object will be\\n     * set under <tt>prefix</tt> + {@link this.name} key.\\n     * @param {Object} report the analytics \\\"data\\\" object\\n     */\\n    appendReport(report) {\\n        report[`${this.name}_avg`] = this.calculate();\\n        report[`${this.name}_samples`] = JSON.stringify(this.samples);\\n    }\\n\\n    /**\\n     * Clears all memory of any samples collected, so that new average can be\\n     * calculated using this instance.\\n     */\\n    reset() {\\n        this.samples = [];\\n        this.sum = 0;\\n        this.count = 0;\\n    }\\n}\\n\\n/**\\n * Class gathers the stats that are calculated and reported for a\\n * {@link TraceablePeerConnection} even if it's not currently active. For\\n * example we want to monitor RTT for the JVB connection while in P2P mode.\\n */\\nclass ConnectionAvgStats {\\n    /**\\n     * Creates new <tt>ConnectionAvgStats</tt>\\n     * @param {AvgRTPStatsReporter} avgRtpStatsReporter\\n     * @param {boolean} isP2P\\n     * @param {number} n the number of samples, before arithmetic mean is to be\\n     * calculated and values submitted to the analytics module.\\n     */\\n    constructor(avgRtpStatsReporter, isP2P, n) {\\n        /**\\n         * Is this instance for JVB or P2P connection ?\\n         * @type {boolean}\\n         */\\n        this.isP2P = isP2P;\\n\\n        /**\\n         * How many samples are to be included in arithmetic mean calculation.\\n         * @type {number}\\n         * @private\\n         */\\n        this._n = n;\\n\\n        /**\\n         * The current sample index. Starts from 0 and goes up to {@link _n})\\n         * when analytics report will be submitted.\\n         * @type {number}\\n         * @private\\n         */\\n        this._sampleIdx = 0;\\n\\n        /**\\n         * Average round trip time reported by the ICE candidate pair.\\n         * @type {AverageStatReport}\\n         */\\n        this._avgRTT = new AverageStatReport('rtt');\\n\\n        /**\\n         * Map stores average RTT to the JVB reported by remote participants.\\n         * Mapped per participant id {@link JitsiParticipant.getId}.\\n         *\\n         * This is used only when {@link ConnectionAvgStats.isP2P} equals to\\n         * <tt>false</tt>.\\n         *\\n         * @type {Map<string,AverageStatReport>}\\n         * @private\\n         */\\n        this._avgRemoteRTTMap = new Map();\\n\\n        /**\\n         * The conference for which stats will be collected and reported.\\n         * @type {JitsiConference}\\n         * @private\\n         */\\n        this._avgRtpStatsReporter = avgRtpStatsReporter;\\n\\n        /**\\n         * The latest average E2E RTT for the JVB connection only.\\n         *\\n         * This is used only when {@link ConnectionAvgStats.isP2P} equals to\\n         * <tt>false</tt>.\\n         *\\n         * @type {number}\\n         */\\n        this._avgEnd2EndRTT = undefined;\\n\\n        this._onConnectionStats = (tpc, stats) => {\\n            if (this.isP2P === tpc.isP2P) {\\n                this._calculateAvgStats(stats);\\n            }\\n        };\\n\\n        const conference = avgRtpStatsReporter._conference;\\n\\n        conference.statistics.addConnectionStatsListener(\\n            this._onConnectionStats);\\n\\n        if (!this.isP2P) {\\n            this._onUserLeft = id => this._avgRemoteRTTMap.delete(id);\\n            conference.on(ConferenceEvents.USER_LEFT, this._onUserLeft);\\n\\n            this._onRemoteStatsUpdated\\n                = (id, data) => this._processRemoteStats(id, data);\\n            conference.on(\\n                ConnectionQualityEvents.REMOTE_STATS_UPDATED,\\n                this._onRemoteStatsUpdated);\\n        }\\n    }\\n\\n    /**\\n     * Processes next batch of stats.\\n     * @param {go figure} data\\n     * @private\\n     */\\n    _calculateAvgStats(data) {\\n        if (!data) {\\n            logger.error('No stats');\\n\\n            return;\\n        }\\n\\n        if (browser.supportsRTTStatistics()) {\\n            if (data.transport && data.transport.length) {\\n                this._avgRTT.addNext(data.transport[0].rtt);\\n            }\\n        }\\n\\n        this._sampleIdx += 1;\\n\\n        if (this._sampleIdx >= this._n) {\\n            if (browser.supportsRTTStatistics()) {\\n                const conference = this._avgRtpStatsReporter._conference;\\n\\n                const batchReport = {\\n                    p2p: this.isP2P,\\n                    'conference_size': conference.getParticipantCount()\\n                };\\n\\n                if (data.transport && data.transport.length) {\\n                    Object.assign(batchReport, {\\n                        'local_candidate_type':\\n                            data.transport[0].localCandidateType,\\n                        'remote_candidate_type':\\n                            data.transport[0].remoteCandidateType,\\n                        'transport_type': data.transport[0].type\\n                    });\\n                }\\n\\n                this._avgRTT.appendReport(batchReport);\\n\\n                if (this.isP2P) {\\n                    // Report RTT diff only for P2P.\\n                    const jvbEnd2EndRTT = this\\n                        ._avgRtpStatsReporter.jvbStatsMonitor._avgEnd2EndRTT;\\n\\n                    if (!isNaN(jvbEnd2EndRTT)) {\\n                        // eslint-disable-next-line dot-notation\\n                        batchReport['rtt_diff']\\n                            = this._avgRTT.calculate() - jvbEnd2EndRTT;\\n                    }\\n                } else {\\n                    // Report end to end RTT only for JVB.\\n                    const avgRemoteRTT = this._calculateAvgRemoteRTT();\\n                    const avgLocalRTT = this._avgRTT.calculate();\\n\\n                    this._avgEnd2EndRTT = avgLocalRTT + avgRemoteRTT;\\n\\n                    if (!isNaN(avgLocalRTT) && !isNaN(avgRemoteRTT)) {\\n                        // eslint-disable-next-line dot-notation\\n                        batchReport['end2end_rtt_avg'] = this._avgEnd2EndRTT;\\n                    }\\n                }\\n\\n                Statistics.sendAnalytics(createRtpStatsEvent(batchReport));\\n            }\\n\\n            this._resetAvgStats();\\n        }\\n    }\\n\\n    /**\\n     * Calculates arithmetic mean of all RTTs towards the JVB reported by\\n     * participants.\\n     * @return {number|NaN} NaN if not available (not enough data)\\n     * @private\\n     */\\n    _calculateAvgRemoteRTT() {\\n        let count = 0, sum = 0;\\n\\n        // FIXME should we ignore RTT for participant\\n        // who \\\"is having connectivity issues\\\" ?\\n        for (const remoteAvg of this._avgRemoteRTTMap.values()) {\\n            const avg = remoteAvg.calculate();\\n\\n            if (!isNaN(avg)) {\\n                sum += avg;\\n                count += 1;\\n                remoteAvg.reset();\\n            }\\n        }\\n\\n        return sum / count;\\n    }\\n\\n    /**\\n     * Processes {@link ConnectionQualityEvents.REMOTE_STATS_UPDATED} to analyse\\n     * RTT towards the JVB reported by each participant.\\n     * @param {string} id {@link JitsiParticipant.getId}\\n     * @param {go figure in ConnectionQuality.js} data\\n     * @private\\n     */\\n    _processRemoteStats(id, data) {\\n        const validData = typeof data.jvbRTT === 'number';\\n        let rttAvg = this._avgRemoteRTTMap.get(id);\\n\\n        if (!rttAvg && validData) {\\n            rttAvg = new AverageStatReport(`${id}_stat_rtt`);\\n            this._avgRemoteRTTMap.set(id, rttAvg);\\n        }\\n\\n        if (validData) {\\n            rttAvg.addNext(data.jvbRTT);\\n        } else if (rttAvg) {\\n            this._avgRemoteRTTMap.delete(id);\\n        }\\n    }\\n\\n    /**\\n     * Reset cache of all averages and {@link _sampleIdx}.\\n     * @private\\n     */\\n    _resetAvgStats() {\\n        this._avgRTT.reset();\\n        if (this._avgRemoteRTTMap) {\\n            this._avgRemoteRTTMap.clear();\\n        }\\n        this._sampleIdx = 0;\\n    }\\n\\n    /**\\n     *\\n     */\\n    dispose() {\\n\\n        const conference = this._avgRtpStatsReporter._conference;\\n\\n        conference.statistics.removeConnectionStatsListener(\\n            this._onConnectionStats);\\n        if (!this.isP2P) {\\n            conference.off(\\n                ConnectionQualityEvents.REMOTE_STATS_UPDATED,\\n                this._onRemoteStatsUpdated);\\n            conference.off(\\n                ConferenceEvents.USER_LEFT,\\n                this._onUserLeft);\\n        }\\n    }\\n}\\n\\n/**\\n * Reports average RTP statistics values (arithmetic mean) to the analytics\\n * module for things like bit rate, bandwidth, packet loss etc. It keeps track\\n * of the P2P vs JVB conference modes and submits the values under different\\n * namespaces (the events for P2P mode have 'p2p.' prefix). Every switch between\\n * P2P mode resets the data collected so far and averages are calculated from\\n * scratch.\\n */\\nexport default class AvgRTPStatsReporter {\\n    /**\\n     * Creates new instance of <tt>AvgRTPStatsReporter</tt>\\n     * @param {JitsiConference} conference\\n     * @param {number} n the number of samples, before arithmetic mean is to be\\n     * calculated and values submitted to the analytics module.\\n     */\\n    constructor(conference, n) {\\n        /**\\n         * How many {@link ConnectionQualityEvents.LOCAL_STATS_UPDATED} samples\\n         * are to be included in arithmetic mean calculation.\\n         * @type {number}\\n         * @private\\n         */\\n        this._n = n;\\n\\n        if (n > 0) {\\n            logger.info(`Avg RTP stats will be calculated every ${n} samples`);\\n        } else {\\n            logger.info('Avg RTP stats reports are disabled.');\\n\\n            // Do not initialize\\n            return;\\n        }\\n\\n        /**\\n         * The current sample index. Starts from 0 and goes up to {@link _n})\\n         * when analytics report will be submitted.\\n         * @type {number}\\n         * @private\\n         */\\n        this._sampleIdx = 0;\\n\\n        /**\\n         * The conference for which stats will be collected and reported.\\n         * @type {JitsiConference}\\n         * @private\\n         */\\n        this._conference = conference;\\n\\n        /**\\n         * Average audio upload bitrate\\n         * XXX What are the units?\\n         * @type {AverageStatReport}\\n         * @private\\n         */\\n        this._avgAudioBitrateUp\\n            = new AverageStatReport('bitrate_audio_upload');\\n\\n        /**\\n         * Average audio download bitrate\\n         * XXX What are the units?\\n         * @type {AverageStatReport}\\n         * @private\\n         */\\n        this._avgAudioBitrateDown\\n            = new AverageStatReport('bitrate_audio_download');\\n\\n        /**\\n         * Average video upload bitrate\\n         * XXX What are the units?\\n         * @type {AverageStatReport}\\n         * @private\\n         */\\n        this._avgVideoBitrateUp\\n            = new AverageStatReport('bitrate_video_upload');\\n\\n        /**\\n         * Average video download bitrate\\n         * XXX What are the units?\\n         * @type {AverageStatReport}\\n         * @private\\n         */\\n        this._avgVideoBitrateDown\\n            = new AverageStatReport('bitrate_video_download');\\n\\n        /**\\n         * Average upload bandwidth\\n         * XXX What are the units?\\n         * @type {AverageStatReport}\\n         * @private\\n         */\\n        this._avgBandwidthUp\\n            = new AverageStatReport('bandwidth_upload');\\n\\n        /**\\n         * Average download bandwidth\\n         * XXX What are the units?\\n         * @type {AverageStatReport}\\n         * @private\\n         */\\n        this._avgBandwidthDown\\n            = new AverageStatReport('bandwidth_download');\\n\\n        /**\\n         * Average total packet loss\\n         * XXX What are the units?\\n         * @type {AverageStatReport}\\n         * @private\\n         */\\n        this._avgPacketLossTotal\\n            = new AverageStatReport('packet_loss_total');\\n\\n        /**\\n         * Average upload packet loss\\n         * XXX What are the units?\\n         * @type {AverageStatReport}\\n         * @private\\n         */\\n        this._avgPacketLossUp\\n            = new AverageStatReport('packet_loss_upload');\\n\\n        /**\\n         * Average download packet loss\\n         * XXX What are the units?\\n         * @type {AverageStatReport}\\n         * @private\\n         */\\n        this._avgPacketLossDown\\n            = new AverageStatReport('packet_loss_download');\\n\\n        /**\\n         * Average FPS for remote videos\\n         * @type {AverageStatReport}\\n         * @private\\n         */\\n        this._avgRemoteFPS = new AverageStatReport('framerate_remote');\\n\\n        /**\\n         * Average FPS for remote screen streaming videos (reported only if not\\n         * a <tt>NaN</tt>).\\n         * @type {AverageStatReport}\\n         * @private\\n         */\\n        this._avgRemoteScreenFPS\\n            = new AverageStatReport('framerate_screen_remote');\\n\\n        /**\\n         * Average FPS for local video (camera)\\n         * @type {AverageStatReport}\\n         * @private\\n         */\\n        this._avgLocalFPS = new AverageStatReport('framerate_local');\\n\\n        /**\\n         * Average FPS for local screen streaming video (reported only if not\\n         * a <tt>NaN</tt>).\\n         * @type {AverageStatReport}\\n         * @private\\n         */\\n        this._avgLocalScreenFPS\\n            = new AverageStatReport('framerate_screen_local');\\n\\n        /**\\n         * Average pixels for remote screen streaming videos (reported only if\\n         * not a <tt>NaN</tt>).\\n         * @type {AverageStatReport}\\n         * @private\\n         */\\n        this._avgRemoteCameraPixels\\n            = new AverageStatReport('pixels_remote');\\n\\n        /**\\n         * Average pixels for remote screen streaming videos (reported only if\\n         * not a <tt>NaN</tt>).\\n         * @type {AverageStatReport}\\n         * @private\\n         */\\n        this._avgRemoteScreenPixels\\n            = new AverageStatReport('pixels_screen_remote');\\n\\n        /**\\n         * Average pixels for local video (camera)\\n         * @type {AverageStatReport}\\n         * @private\\n         */\\n        this._avgLocalCameraPixels\\n            = new AverageStatReport('pixels_local');\\n\\n        /**\\n         * Average pixels for local screen streaming video (reported only if not\\n         * a <tt>NaN</tt>).\\n         * @type {AverageStatReport}\\n         * @private\\n         */\\n        this._avgLocalScreenPixels\\n            = new AverageStatReport('pixels_screen_local');\\n\\n        /**\\n         * Average connection quality as defined by\\n         * the {@link ConnectionQuality} module.\\n         * @type {AverageStatReport}\\n         * @private\\n         */\\n        this._avgCQ = new AverageStatReport('connection_quality');\\n\\n        this._onLocalStatsUpdated = data => this._calculateAvgStats(data);\\n        conference.on(\\n            ConnectionQualityEvents.LOCAL_STATS_UPDATED,\\n            this._onLocalStatsUpdated);\\n\\n        this._onP2PStatusChanged = () => {\\n            logger.debug('Resetting average stats calculation');\\n            this._resetAvgStats();\\n            this.jvbStatsMonitor._resetAvgStats();\\n            this.p2pStatsMonitor._resetAvgStats();\\n        };\\n        conference.on(\\n            ConferenceEvents.P2P_STATUS,\\n            this._onP2PStatusChanged);\\n\\n        this._onJvb121StatusChanged = (oldStatus, newStatus) => {\\n            // We want to reset only on the transition from false => true,\\n            // because otherwise those stats are resetted on JVB <=> P2P\\n            // transition.\\n            if (newStatus === true) {\\n                logger.info('Resetting JVB avg RTP stats');\\n                this._resetAvgJvbStats();\\n            }\\n        };\\n        conference.on(\\n            ConferenceEvents.JVB121_STATUS,\\n            this._onJvb121StatusChanged);\\n\\n        this.jvbStatsMonitor\\n            = new ConnectionAvgStats(this, false /* JVB */, n);\\n\\n        this.p2pStatsMonitor\\n            = new ConnectionAvgStats(this, true /* P2P */, n);\\n    }\\n\\n    /**\\n     * Processes next batch of stats reported on\\n     * {@link ConnectionQualityEvents.LOCAL_STATS_UPDATED}.\\n     * @param {go figure} data\\n     * @private\\n     */\\n    _calculateAvgStats(data) {\\n\\n        if (!data) {\\n            logger.error('No stats');\\n\\n            return;\\n        }\\n\\n        const isP2P = this._conference.isP2PActive();\\n        const confSize = this._conference.getParticipantCount();\\n\\n        if (!isP2P && confSize < 2) {\\n\\n            // There's no point in collecting stats for a JVB conference of 1.\\n            // That happens for short period of time after everyone leaves\\n            // the room, until Jicofo terminates the session.\\n            return;\\n        }\\n\\n        /* Uncomment to figure out stats structure\\n        for (const key in data) {\\n            if (data.hasOwnProperty(key)) {\\n                logger.info(`local stat ${key}: `, data[key]);\\n            }\\n        } */\\n\\n        const bitrate = data.bitrate;\\n        const bandwidth = data.bandwidth;\\n        const packetLoss = data.packetLoss;\\n        const frameRate = data.framerate;\\n        const resolution = data.resolution;\\n\\n        if (!bitrate) {\\n            logger.error('No \\\"bitrate\\\"');\\n\\n            return;\\n        } else if (!bandwidth) {\\n            logger.error('No \\\"bandwidth\\\"');\\n\\n            return;\\n        } else if (!packetLoss) {\\n            logger.error('No \\\"packetloss\\\"');\\n\\n            return;\\n        } else if (!frameRate) {\\n            logger.error('No \\\"framerate\\\"');\\n\\n            return;\\n        } else if (!resolution) {\\n            logger.error('No resolution');\\n\\n            return;\\n        }\\n\\n        this._avgAudioBitrateUp.addNext(bitrate.audio.upload);\\n        this._avgAudioBitrateDown.addNext(bitrate.audio.download);\\n\\n        this._avgVideoBitrateUp.addNext(bitrate.video.upload);\\n        this._avgVideoBitrateDown.addNext(bitrate.video.download);\\n\\n        if (browser.supportsBandwidthStatistics()) {\\n            this._avgBandwidthUp.addNext(bandwidth.upload);\\n            this._avgBandwidthDown.addNext(bandwidth.download);\\n        }\\n\\n        this._avgPacketLossUp.addNext(packetLoss.upload);\\n        this._avgPacketLossDown.addNext(packetLoss.download);\\n        this._avgPacketLossTotal.addNext(packetLoss.total);\\n\\n        this._avgCQ.addNext(data.connectionQuality);\\n\\n        if (frameRate) {\\n            this._avgRemoteFPS.addNext(\\n                this._calculateAvgVideoFps(\\n                    frameRate, false /* remote */, VideoType.CAMERA));\\n            this._avgRemoteScreenFPS.addNext(\\n                this._calculateAvgVideoFps(\\n                    frameRate, false /* remote */, VideoType.DESKTOP));\\n\\n            this._avgLocalFPS.addNext(\\n                this._calculateAvgVideoFps(\\n                    frameRate, true /* local */, VideoType.CAMERA));\\n            this._avgLocalScreenFPS.addNext(\\n                this._calculateAvgVideoFps(\\n                    frameRate, true /* local */, VideoType.DESKTOP));\\n        }\\n\\n        if (resolution) {\\n            this._avgRemoteCameraPixels.addNext(\\n                this._calculateAvgVideoPixels(\\n                    resolution, false /* remote */, VideoType.CAMERA));\\n\\n            this._avgRemoteScreenPixels.addNext(\\n                this._calculateAvgVideoPixels(\\n                    resolution, false /* remote */, VideoType.DESKTOP));\\n\\n            this._avgLocalCameraPixels.addNext(\\n                this._calculateAvgVideoPixels(\\n                    resolution, true /* local */, VideoType.CAMERA));\\n\\n            this._avgLocalScreenPixels.addNext(\\n                this._calculateAvgVideoPixels(\\n                    resolution, true /* local */, VideoType.DESKTOP));\\n        }\\n\\n        this._sampleIdx += 1;\\n\\n        if (this._sampleIdx >= this._n) {\\n\\n            const batchReport = {\\n                p2p: isP2P,\\n                'conference_size': confSize\\n            };\\n\\n            if (data.transport && data.transport.length) {\\n                Object.assign(batchReport, {\\n                    'local_candidate_type':\\n                        data.transport[0].localCandidateType,\\n                    'remote_candidate_type':\\n                        data.transport[0].remoteCandidateType,\\n                    'transport_type': data.transport[0].type\\n                });\\n            }\\n\\n            this._avgAudioBitrateUp.appendReport(batchReport);\\n            this._avgAudioBitrateDown.appendReport(batchReport);\\n\\n            this._avgVideoBitrateUp.appendReport(batchReport);\\n            this._avgVideoBitrateDown.appendReport(batchReport);\\n\\n            if (browser.supportsBandwidthStatistics()) {\\n                this._avgBandwidthUp.appendReport(batchReport);\\n                this._avgBandwidthDown.appendReport(batchReport);\\n            }\\n            this._avgPacketLossUp.appendReport(batchReport);\\n            this._avgPacketLossDown.appendReport(batchReport);\\n            this._avgPacketLossTotal.appendReport(batchReport);\\n\\n            this._avgRemoteFPS.appendReport(batchReport);\\n            if (!isNaN(this._avgRemoteScreenFPS.calculate())) {\\n                this._avgRemoteScreenFPS.appendReport(batchReport);\\n            }\\n            this._avgLocalFPS.appendReport(batchReport);\\n            if (!isNaN(this._avgLocalScreenFPS.calculate())) {\\n                this._avgLocalScreenFPS.appendReport(batchReport);\\n            }\\n\\n            this._avgRemoteCameraPixels.appendReport(batchReport);\\n            if (!isNaN(this._avgRemoteScreenPixels.calculate())) {\\n                this._avgRemoteScreenPixels.appendReport(batchReport);\\n            }\\n            this._avgLocalCameraPixels.appendReport(batchReport);\\n            if (!isNaN(this._avgLocalScreenPixels.calculate())) {\\n                this._avgLocalScreenPixels.appendReport(batchReport);\\n            }\\n\\n            this._avgCQ.appendReport(batchReport);\\n\\n            Statistics.sendAnalytics(createRtpStatsEvent(batchReport));\\n\\n            this._resetAvgStats();\\n        }\\n    }\\n\\n    /**\\n     * Calculates average number of pixels for the report\\n     *\\n     * @param {map} peerResolutions a map of peer resolutions\\n     * @param {boolean} isLocal if the average is to be calculated for the local\\n     * video or <tt>false</tt> if for remote videos.\\n     * @param {VideoType} videoType\\n     * @return {number|NaN} average number of pixels or <tt>NaN</tt> if there\\n     * are no samples.\\n     * @private\\n     */\\n    _calculateAvgVideoPixels(peerResolutions, isLocal, videoType) {\\n        let peerPixelsSum = 0;\\n        let peerCount = 0;\\n        const myID = this._conference.myUserId();\\n\\n        for (const peerID of Object.keys(peerResolutions)) {\\n            if (isLocal ? peerID === myID : peerID !== myID) {\\n                const participant\\n                    = isLocal\\n                        ? null\\n                        : this._conference.getParticipantById(peerID);\\n                const videosResolution = peerResolutions[peerID];\\n\\n                // Do not continue without participant for non local peerID\\n                if ((isLocal || participant) && videosResolution) {\\n                    const peerAvgPixels = this._calculatePeerAvgVideoPixels(\\n                        videosResolution, participant, videoType);\\n\\n                    if (!isNaN(peerAvgPixels)) {\\n                        peerPixelsSum += peerAvgPixels;\\n                        peerCount += 1;\\n                    }\\n                }\\n            }\\n        }\\n\\n        return peerPixelsSum / peerCount;\\n    }\\n\\n    /**\\n     * Calculate average pixels for either remote or local participant\\n     * @param {object} videos maps resolution per video SSRC\\n     * @param {JitsiParticipant|null} participant remote participant or\\n     * <tt>null</tt> for local video pixels calculation.\\n     * @param {VideoType} videoType the type of the video for which an average\\n     * will be calculated.\\n     * @return {number|NaN} average video pixels of all participant's videos or\\n     * <tt>NaN</tt> if currently not available\\n     * @private\\n     */\\n    _calculatePeerAvgVideoPixels(videos, participant, videoType) {\\n        let ssrcs = Object.keys(videos).map(ssrc => Number(ssrc));\\n        let videoTracks = null;\\n\\n        // NOTE that this method is supposed to be called for the stats\\n        // received from the current peerconnection.\\n        const tpc = this._conference.getActivePeerConnection();\\n\\n        if (participant) {\\n            videoTracks = participant.getTracksByMediaType(MediaType.VIDEO);\\n            if (videoTracks) {\\n                ssrcs\\n                    = ssrcs.filter(\\n                        ssrc => videoTracks.find(\\n                            track =>\\n                                !track.isMuted()\\n                                    && track.getSSRC() === ssrc\\n                                    && track.videoType === videoType));\\n            }\\n        } else {\\n            videoTracks = this._conference.getLocalTracks(MediaType.VIDEO);\\n            ssrcs\\n                = ssrcs.filter(\\n                    ssrc => videoTracks.find(\\n                        track =>\\n                            !track.isMuted()\\n                                && tpc.getLocalSSRC(track) === ssrc\\n                                && track.videoType === videoType));\\n        }\\n\\n        let peerPixelsSum = 0;\\n        let peerSsrcCount = 0;\\n\\n        for (const ssrc of ssrcs) {\\n            const peerSsrcPixels\\n                = Number(videos[ssrc].height) * Number(videos[ssrc].width);\\n\\n            // FPS is reported as 0 for users with no video\\n            if (!isNaN(peerSsrcPixels) && peerSsrcPixels > 0) {\\n                peerPixelsSum += peerSsrcPixels;\\n                peerSsrcCount += 1;\\n            }\\n        }\\n\\n        return peerPixelsSum / peerSsrcCount;\\n    }\\n\\n\\n    /**\\n     * Calculates average FPS for the report\\n     * @param {go figure} frameRate\\n     * @param {boolean} isLocal if the average is to be calculated for the local\\n     * video or <tt>false</tt> if for remote videos.\\n     * @param {VideoType} videoType\\n     * @return {number|NaN} average FPS or <tt>NaN</tt> if there are no samples.\\n     * @private\\n     */\\n    _calculateAvgVideoFps(frameRate, isLocal, videoType) {\\n        let peerFpsSum = 0;\\n        let peerCount = 0;\\n        const myID = this._conference.myUserId();\\n\\n        for (const peerID of Object.keys(frameRate)) {\\n            if (isLocal ? peerID === myID : peerID !== myID) {\\n                const participant\\n                    = isLocal\\n                        ? null : this._conference.getParticipantById(peerID);\\n                const videosFps = frameRate[peerID];\\n\\n                // Do not continue without participant for non local peerID\\n                if ((isLocal || participant) && videosFps) {\\n                    const peerAvgFPS\\n                        = this._calculatePeerAvgVideoFps(\\n                            videosFps, participant, videoType);\\n\\n                    if (!isNaN(peerAvgFPS)) {\\n                        peerFpsSum += peerAvgFPS;\\n                        peerCount += 1;\\n                    }\\n                }\\n            }\\n        }\\n\\n        return peerFpsSum / peerCount;\\n    }\\n\\n    /**\\n     * Calculate average FPS for either remote or local participant\\n     * @param {object} videos maps FPS per video SSRC\\n     * @param {JitsiParticipant|null} participant remote participant or\\n     * <tt>null</tt> for local FPS calculation.\\n     * @param {VideoType} videoType the type of the video for which an average\\n     * will be calculated.\\n     * @return {number|NaN} average FPS of all participant's videos or\\n     * <tt>NaN</tt> if currently not available\\n     * @private\\n     */\\n    _calculatePeerAvgVideoFps(videos, participant, videoType) {\\n        let ssrcs = Object.keys(videos).map(ssrc => Number(ssrc));\\n        let videoTracks = null;\\n\\n        // NOTE that this method is supposed to be called for the stats\\n        // received from the current peerconnection.\\n        const tpc = this._conference.getActivePeerConnection();\\n\\n        if (participant) {\\n            videoTracks = participant.getTracksByMediaType(MediaType.VIDEO);\\n            if (videoTracks) {\\n                ssrcs\\n                    = ssrcs.filter(\\n                        ssrc => videoTracks.find(\\n                            track => !track.isMuted()\\n                                && track.getSSRC() === ssrc\\n                                && track.videoType === videoType));\\n            }\\n        } else {\\n            videoTracks = this._conference.getLocalTracks(MediaType.VIDEO);\\n            ssrcs\\n                = ssrcs.filter(\\n                    ssrc => videoTracks.find(\\n                        track => !track.isMuted()\\n                            && tpc.getLocalSSRC(track) === ssrc\\n                            && track.videoType === videoType));\\n        }\\n\\n        let peerFpsSum = 0;\\n        let peerSsrcCount = 0;\\n\\n        for (const ssrc of ssrcs) {\\n            const peerSsrcFps = Number(videos[ssrc]);\\n\\n            // FPS is reported as 0 for users with no video\\n            if (!isNaN(peerSsrcFps) && peerSsrcFps > 0) {\\n                peerFpsSum += peerSsrcFps;\\n                peerSsrcCount += 1;\\n            }\\n        }\\n\\n        return peerFpsSum / peerSsrcCount;\\n    }\\n\\n    /**\\n     * Resets the stats related to JVB connection. Must not be called when in\\n     * P2P mode, because then the {@link AverageStatReport} instances are\\n     * tracking P2P stats. Note that this should never happen unless something\\n     * is wrong with the P2P and JVB121 events.\\n     * @private\\n     */\\n    _resetAvgJvbStats() {\\n        this._resetAvgStats();\\n        this.jvbStatsMonitor._resetAvgStats();\\n    }\\n\\n    /**\\n     * Reset cache of all averages and {@link _sampleIdx}.\\n     * @private\\n     */\\n    _resetAvgStats() {\\n        this._avgAudioBitrateUp.reset();\\n        this._avgAudioBitrateDown.reset();\\n\\n        this._avgVideoBitrateUp.reset();\\n        this._avgVideoBitrateDown.reset();\\n\\n        this._avgBandwidthUp.reset();\\n        this._avgBandwidthDown.reset();\\n\\n        this._avgPacketLossUp.reset();\\n        this._avgPacketLossDown.reset();\\n        this._avgPacketLossTotal.reset();\\n\\n        this._avgRemoteFPS.reset();\\n        this._avgRemoteScreenFPS.reset();\\n        this._avgLocalFPS.reset();\\n        this._avgLocalScreenFPS.reset();\\n\\n        this._avgRemoteCameraPixels.reset();\\n        this._avgRemoteScreenPixels.reset();\\n        this._avgLocalCameraPixels.reset();\\n        this._avgLocalScreenPixels.reset();\\n\\n        this._avgCQ.reset();\\n\\n        this._sampleIdx = 0;\\n    }\\n\\n    /**\\n     * Unregisters all event listeners and stops working.\\n     */\\n    dispose() {\\n        this._conference.off(\\n            ConferenceEvents.P2P_STATUS,\\n            this._onP2PStatusChanged);\\n        this._conference.off(\\n            ConnectionQualityEvents.LOCAL_STATS_UPDATED,\\n            this._onLocalStatsUpdated);\\n        this._conference.off(\\n            ConferenceEvents.JVB121_STATUS,\\n            this._onJvb121StatusChanged);\\n        this.jvbStatsMonitor.dispose();\\n        this.p2pStatsMonitor.dispose();\\n    }\\n}\\n\",\"import * as JitsiConferenceEvents from '../../JitsiConferenceEvents';\\nimport SpeakerStats from './SpeakerStats';\\nimport XMPPEvents from '../../service/xmpp/XMPPEvents';\\n\\n/**\\n * A collection for tracking speaker stats. Attaches listeners\\n * to the conference to automatically update on tracked events.\\n */\\nexport default class SpeakerStatsCollector {\\n    /**\\n     * Initializes a new SpeakerStatsCollector instance.\\n     *\\n     * @constructor\\n     * @param {JitsiConference} conference - The conference to track.\\n     * @returns {void}\\n     */\\n    constructor(conference) {\\n        this.stats = {\\n            users: {\\n\\n                // userId: SpeakerStats\\n            },\\n            dominantSpeakerId: null\\n        };\\n\\n        const userId = conference.myUserId();\\n\\n        this.stats.users[userId] = new SpeakerStats(userId, null, true);\\n\\n        conference.addEventListener(\\n            JitsiConferenceEvents.DOMINANT_SPEAKER_CHANGED,\\n            this._onDominantSpeaker.bind(this));\\n        conference.addEventListener(\\n            JitsiConferenceEvents.USER_JOINED,\\n            this._onUserJoin.bind(this));\\n        conference.addEventListener(\\n            JitsiConferenceEvents.USER_LEFT,\\n            this._onUserLeave.bind(this));\\n        conference.addEventListener(\\n            JitsiConferenceEvents.DISPLAY_NAME_CHANGED,\\n            this._onDisplayNameChange.bind(this));\\n        if (conference.xmpp) {\\n            conference.xmpp.addListener(\\n                XMPPEvents.SPEAKER_STATS_RECEIVED,\\n                this._updateStats.bind(this));\\n        }\\n    }\\n\\n    /**\\n     * Reacts to dominant speaker change events by changing its speaker stats\\n     * models to reflect the current dominant speaker.\\n     *\\n     * @param {string} dominantSpeakerId - The user id of the new\\n     * dominant speaker.\\n     * @returns {void}\\n     * @private\\n     */\\n    _onDominantSpeaker(dominantSpeakerId) {\\n        const oldDominantSpeaker\\n            = this.stats.users[this.stats.dominantSpeakerId];\\n        const newDominantSpeaker = this.stats.users[dominantSpeakerId];\\n\\n        oldDominantSpeaker && oldDominantSpeaker.setDominantSpeaker(false);\\n        newDominantSpeaker && newDominantSpeaker.setDominantSpeaker(true);\\n        this.stats.dominantSpeakerId = dominantSpeakerId;\\n    }\\n\\n    /**\\n     * Reacts to user join events by creating a new SpeakerStats model.\\n     *\\n     * @param {string} userId - The user id of the new user.\\n     * @param {JitsiParticipant} - The JitsiParticipant model for the new user.\\n     * @returns {void}\\n     * @private\\n     */\\n    _onUserJoin(userId, participant) {\\n        let savedUser = this.stats.users[userId];\\n\\n        if (!savedUser) {\\n            savedUser = this.stats.users[userId]\\n                = new SpeakerStats(userId, participant.getDisplayName());\\n        }\\n    }\\n\\n    /**\\n     * Reacts to user leave events by updating the associated user's\\n     * SpeakerStats model.\\n     *\\n     * @param {string} userId - The user id of the user that left.\\n     * @returns {void}\\n     * @private\\n     */\\n    _onUserLeave(userId) {\\n        const savedUser = this.stats.users[userId];\\n\\n        if (savedUser) {\\n            savedUser.markAsHasLeft();\\n        }\\n    }\\n\\n    /**\\n     * Reacts to user name change events by updating the last known name\\n     * tracked in the associated SpeakerStats model.\\n     *\\n     * @param {string} userId - The user id of the user that left.\\n     * @returns {void}\\n     * @private\\n     */\\n    _onDisplayNameChange(userId, newName) {\\n        const savedUser = this.stats.users[userId];\\n\\n        if (savedUser) {\\n            savedUser.setDisplayName(newName);\\n        }\\n    }\\n\\n    /**\\n     * Return a copy of the tracked SpeakerStats models.\\n     *\\n     * @returns {Object} The keys are the user ids and the values are the\\n     * associated user's SpeakerStats model.\\n     * @private\\n     */\\n    getStats() {\\n        return this.stats.users;\\n    }\\n\\n    /**\\n     * Updates of the current stats is requested, passing the new values.\\n     *\\n     * @param {Object} newStats - The new values used to update current one.\\n     * @private\\n     */\\n    _updateStats(newStats) {\\n        for (const userId in newStats) { // eslint-disable-line guard-for-in\\n            let speakerStatsToUpdate;\\n\\n            if (this.stats.users[userId]) {\\n                speakerStatsToUpdate = this.stats.users[userId];\\n\\n                if (!speakerStatsToUpdate.getDisplayName()) {\\n                    speakerStatsToUpdate\\n                        .setDisplayName(newStats[userId].displayName);\\n                }\\n            } else {\\n                speakerStatsToUpdate = new SpeakerStats(\\n                    userId, newStats[userId].displayName);\\n                this.stats.users[userId] = speakerStatsToUpdate;\\n                speakerStatsToUpdate.markAsHasLeft();\\n            }\\n\\n            speakerStatsToUpdate.totalDominantSpeakerTime\\n                = newStats[userId].totalDominantSpeakerTime;\\n        }\\n    }\\n}\\n\",\"const AudioRecorder = require('./audioRecorder');\\nconst SphinxService = require(\\n    './transcriptionServices/SphinxTranscriptionService');\\n\\nconst BEFORE_STATE = 'before';\\nconst RECORDING_STATE = 'recording';\\nconst TRANSCRIBING_STATE = 'transcribing';\\nconst FINISHED_STATE = 'finished';\\n\\n// the amount of characters each line in the transcription will have\\nconst MAXIMUM_SENTENCE_LENGTH = 80;\\n\\n/**\\n * This is the main object for handing the Transcription. It interacts with\\n * the audioRecorder to record every person in a conference and sends the\\n * recorder audio to a transcriptionService. The returned speech-to-text result\\n * will be merged to create a transcript\\n * @param {AudioRecorder} audioRecorder An audioRecorder recording a conference\\n */\\nfunction Transcriber() {\\n    // the object which can record all audio in the conference\\n    this.audioRecorder = new AudioRecorder();\\n\\n    // this object can send the recorder audio to a speech-to-text service\\n    this.transcriptionService = new SphinxService();\\n\\n    // holds a counter to keep track if merging can start\\n    this.counter = null;\\n\\n    // holds the date when transcription started which makes it possible\\n    // to calculate the offset between recordings\\n    this.startTime = null;\\n\\n    // will hold the transcription once it is completed\\n    this.transcription = null;\\n\\n    // this will be a method which will be called once the transcription is done\\n    // with the transcription as parameter\\n    this.callback = null;\\n\\n    // stores all the retrieved speech-to-text results to merge together\\n    // this value will store an Array<Word> object\\n    this.results = [];\\n\\n    // Stores the current state of the transcription process\\n    this.state = BEFORE_STATE;\\n\\n    // Used in the updateTranscription method to add a new line when the\\n    // sentence becomes to long\\n    this.lineLength = 0;\\n}\\n\\n/**\\n * Method to start the transcription process. It will tell the audioRecorder\\n * to start storing all audio streams and record the start time for merging\\n * purposes\\n */\\nTranscriber.prototype.start = function start() {\\n    if (this.state !== BEFORE_STATE) {\\n        throw new Error(\\n            `The transcription can only start when it's in the \\\"${\\n                BEFORE_STATE}\\\" state. It's currently in the \\\"${\\n                this.state}\\\" state`);\\n    }\\n    this.state = RECORDING_STATE;\\n    this.audioRecorder.start();\\n    this.startTime = new Date();\\n};\\n\\n/**\\n * Method to stop the transcription process. It will tell the audioRecorder to\\n * stop, and get all the recorded audio to send it to the transcription service\\n\\n * @param callback a callback which will receive the transcription\\n */\\nTranscriber.prototype.stop = function stop(callback) {\\n    if (this.state !== RECORDING_STATE) {\\n        throw new Error(\\n            `The transcription can only stop when it's in the \\\"${\\n                RECORDING_STATE}\\\" state. It's currently in the \\\"${\\n                this.state}\\\" state`);\\n    }\\n\\n    // stop the recording\\n    console.log('stopping recording and sending audio files');\\n    this.audioRecorder.stop();\\n\\n    // and send all recorded audio the the transcription service\\n    const callBack = blobCallBack.bind(null, this);\\n\\n    this.audioRecorder.getRecordingResults().forEach(recordingResult => {\\n        this.transcriptionService.send(recordingResult, callBack);\\n        this.counter++;\\n    });\\n\\n    // set the state to \\\"transcribing\\\" so that maybeMerge() functions correctly\\n    this.state = TRANSCRIBING_STATE;\\n\\n    // and store the callback for later\\n    this.callback = callback;\\n};\\n\\n/**\\n * This method gets the answer from the transcription service, calculates the\\n * offset and adds is to every Word object. It will also start the merging\\n * when every send request has been received\\n *\\n * note: Make sure to bind this as a Transcription object\\n * @param {Transcriber} transcriber the transcriber instance\\n * @param {RecordingResult} answer a RecordingResult object with a defined\\n * WordArray\\n */\\nfunction blobCallBack(transcriber, answer) {\\n    console.log(\\n        'retrieved an answer from the transcription service. The answer has an'\\n            + ` array of length: ${answer.wordArray.length}`);\\n\\n    // first add the offset between the start of the transcription and\\n    // the start of the recording to all start and end times\\n    if (answer.wordArray.length > 0) {\\n        let offset = answer.startTime.getUTCMilliseconds()\\n            - transcriber.startTime.getUTCMilliseconds();\\n\\n        // transcriber time will always be earlier\\n\\n        if (offset < 0) {\\n            offset = 0; // presume 0 if it somehow not earlier\\n        }\\n\\n        let array = '[';\\n\\n        answer.wordArray.forEach(wordObject => {\\n            wordObject.begin += offset;\\n            wordObject.end += offset;\\n            array += `${wordObject.word},`;\\n        });\\n        array += ']';\\n        console.log(array);\\n\\n        // give a name value to the Array object so that the merging can access\\n        // the name value without having to use the whole recordingResult object\\n        // in the algorithm\\n        answer.wordArray.name = answer.name;\\n    }\\n\\n    // then store the array and decrease the counter\\n    transcriber.results.push(answer.wordArray);\\n    transcriber.counter--;\\n    console.log(`current counter: ${transcriber.counter}`);\\n\\n    // and check if all results have been received.\\n    transcriber.maybeMerge();\\n}\\n\\n/**\\n * this method will check if the counter is zero. If it is, it will call\\n * the merging method\\n */\\nTranscriber.prototype.maybeMerge = function() {\\n    if (this.state === TRANSCRIBING_STATE && this.counter === 0) {\\n        // make sure to include the events in the result arrays before\\n        // merging starts\\n        this.merge();\\n    }\\n};\\n\\n/**\\n * This method will merge all speech-to-text arrays together in one\\n * readable transcription string\\n */\\nTranscriber.prototype.merge = function() {\\n    console.log(\\n        `starting merge process!\\\\n The length of the array: ${\\n            this.results.length}`);\\n    this.transcription = '';\\n\\n    // the merging algorithm will look over all Word objects who are at pos 0 in\\n    // every array. It will then select the one closest in time to the\\n    // previously placed word, while removing the selected word from its array\\n    // note: words can be skipped the skipped word's begin and end time somehow\\n    // end up between the closest word start and end time\\n    const arrays = this.results;\\n\\n    // arrays of Word objects\\n    const potentialWords = []; // array of the first Word objects\\n    // check if any arrays are already empty and remove them\\n\\n    hasPopulatedArrays(arrays);\\n\\n    // populate all the potential Words for a first time\\n    arrays.forEach(array => pushWordToSortedArray(potentialWords, array));\\n\\n    // keep adding words to transcription until all arrays are exhausted\\n    while (hasPopulatedArrays(arrays)) {\\n        // first select the lowest array;\\n        let lowestWordArray = arrays[0];\\n\\n        arrays.forEach(wordArray => {\\n            if (wordArray[0].begin < lowestWordArray[0].begin) {\\n                lowestWordArray = wordArray;\\n            }\\n        });\\n\\n        // put the word in the transcription\\n        let wordToAdd = lowestWordArray.shift();\\n\\n        this.updateTranscription(wordToAdd, lowestWordArray.name);\\n\\n        // keep going until a word in another array has a smaller time\\n        // or the array is empty\\n        while (lowestWordArray.length > 0) {\\n            let foundSmaller = false;\\n            const wordToCompare = lowestWordArray[0].begin;\\n\\n            arrays.forEach(wordArray => {\\n                if (wordArray[0].begin < wordToCompare) {\\n                    foundSmaller = true;\\n                }\\n            });\\n\\n            // add next word if no smaller time has been found\\n            if (foundSmaller) {\\n                break;\\n            }\\n\\n            wordToAdd = lowestWordArray.shift();\\n            this.updateTranscription(wordToAdd, null);\\n        }\\n\\n    }\\n\\n    // set the state to finished and do the necessary left-over tasks\\n    this.state = FINISHED_STATE;\\n    if (this.callback) {\\n        this.callback(this.transcription);\\n    }\\n};\\n\\n/**\\n * Appends a word object to the transcription. It will make a new line with a\\n * name if a name is specified\\n * @param {Word} word the Word object holding the word to append\\n * @param {String|null} name the name of a new speaker. Null if not applicable\\n */\\nTranscriber.prototype.updateTranscription = function(word, name) {\\n    if (name !== undefined && name !== null) {\\n        this.transcription += `\\\\n${name}:`;\\n        this.lineLength = name.length + 1; // +1 for the semi-colon\\n    }\\n    if (this.lineLength + word.word.length > MAXIMUM_SENTENCE_LENGTH) {\\n        this.transcription += '\\\\n    ';\\n        this.lineLength = 4; // because of the 4 spaces after the new line\\n    }\\n    this.transcription += ` ${word.word}`;\\n    this.lineLength += word.word.length + 1; // +1 for the space\\n};\\n\\n/**\\n * Check if the given 2 dimensional array has any non-zero Word-arrays in them.\\n * All zero-element arrays inside will be removed\\n * If any non-zero-element arrays are found, the method will return true.\\n * otherwise it will return false\\n * @param {Array<Array>} twoDimensionalArray the array to check\\n * @returns {boolean} true if any non-zero arrays inside, otherwise false\\n */\\nfunction hasPopulatedArrays(twoDimensionalArray) {\\n    for (let i = 0; i < twoDimensionalArray.length; i++) {\\n        if (twoDimensionalArray[i].length === 0) {\\n            twoDimensionalArray.splice(i, 1);\\n        }\\n    }\\n\\n    return twoDimensionalArray.length > 0;\\n}\\n\\n/**\\n * Push a word to the right location in a sorted array. The array is sorted\\n * from lowest to highest start time. Every word is stored in an object which\\n * includes the name of the person saying the word.\\n *\\n * @param {Array<Word>} array the sorted array to push to\\n * @param {Word} word the word to push into the array\\n */\\nfunction pushWordToSortedArray(array, word) {\\n    if (array.length === 0) {\\n        array.push(word);\\n    } else {\\n        if (array[array.length - 1].begin <= word.begin) {\\n            array.push(word);\\n\\n            return;\\n        }\\n\\n        for (let i = 0; i < array.length; i++) {\\n            if (word.begin < array[i].begin) {\\n                array.splice(i, 0, word);\\n\\n                return;\\n            }\\n        }\\n        array.push(word); // fail safe\\n    }\\n}\\n\\n/**\\n * Gives the transcriber a JitsiTrack holding an audioStream to transcribe.\\n * The JitsiTrack is given to the audioRecorder. If it doesn't hold an\\n * audiostream, it will not be added by the audioRecorder\\n * @param {JitsiTrack} track the track to give to the audioRecorder\\n */\\nTranscriber.prototype.addTrack = function(track) {\\n    this.audioRecorder.addTrack(track);\\n};\\n\\n/**\\n * Remove the given track from the auioRecorder\\n * @param track\\n */\\nTranscriber.prototype.removeTrack = function(track) {\\n    this.audioRecorder.removeTrack(track);\\n};\\n\\n/**\\n * Will return the created transcription if it's avialable or throw an error\\n * when it's not done yet\\n * @returns {String} the transcription as a String\\n */\\nTranscriber.prototype.getTranscription = function() {\\n    if (this.state !== FINISHED_STATE) {\\n        throw new Error(\\n            `The transcription can only be retrieved when it's in the \\\"${\\n                FINISHED_STATE}\\\" state. It's currently in the \\\"${\\n                this.state}\\\" state`);\\n    }\\n\\n    return this.transcription;\\n};\\n\\n/**\\n * Returns the current state of the transcription process\\n */\\nTranscriber.prototype.getState = function() {\\n    return this.state;\\n};\\n\\n/**\\n * Resets the state to the \\\"before\\\" state, such that it's again possible to\\n * call the start method\\n */\\nTranscriber.prototype.reset = function() {\\n    this.state = BEFORE_STATE;\\n    this.counter = null;\\n    this.transcription = null;\\n    this.startTime = null;\\n    this.callback = null;\\n    this.results = [];\\n    this.lineLength = 0;\\n};\\n\\nmodule.exports = Transcriber;\\n\",\"import Statistics from '../statistics/statistics';\\n\\nconst logger = require('jitsi-meet-logger').getLogger(__filename);\\n\\n/**\\n * The constant for the name of the focus component.\\n * @type {string}\\n */\\nComponentsVersions.FOCUS_COMPONENT = 'focus';\\n\\n/**\\n * The constant for the name of the videobridge component.\\n * @type {string}\\n */\\nComponentsVersions.VIDEOBRIDGE_COMPONENT = 'videobridge';\\n\\n/**\\n * The constant for the name of the XMPP server component.\\n * @type {string}\\n */\\nComponentsVersions.XMPP_SERVER_COMPONENT = 'xmpp';\\n\\n/**\\n * Creates new instance of <tt>ComponentsVersions</tt> which will be discovering\\n * the versions of conferencing system components in given\\n * <tt>JitsiConference</tt>.\\n * @param conference <tt>JitsiConference</tt> instance which will be used to\\n *        listen for focus presence updates.\\n * @constructor\\n */\\nexport default function ComponentsVersions(conference) {\\n\\n    this.versions = {};\\n\\n    this.conference = conference;\\n    this.conference.addCommandListener(\\n        'versions', this.processPresence.bind(this));\\n}\\n\\nComponentsVersions.prototype.processPresence\\n    = function(node, mucResource, mucJid) {\\n        if (node.attributes.xmlns !== 'http://jitsi.org/jitmeet') {\\n            logger.warn('Ignored presence versions node - invalid xmlns', node);\\n\\n            return;\\n        }\\n\\n        if (!this.conference._isFocus(mucJid)) {\\n            logger.warn(\\n                `Received versions not from the focus user: ${node}`,\\n                mucJid);\\n\\n            return;\\n        }\\n\\n        const log = [];\\n\\n        node.children.forEach(item => {\\n\\n            const componentName = item.attributes.name;\\n\\n            if (componentName !== ComponentsVersions.FOCUS_COMPONENT\\n            && componentName !== ComponentsVersions.XMPP_SERVER_COMPONENT\\n            && componentName !== ComponentsVersions.VIDEOBRIDGE_COMPONENT) {\\n                logger.warn(\\n                    `Received version for not supported component name: ${\\n                        componentName}`);\\n\\n                return;\\n            }\\n\\n            const version = item.value;\\n\\n            if (this.versions[componentName] !== version) {\\n                this.versions[componentName] = version;\\n                logger.info(`Got ${componentName} version: ${version}`);\\n\\n                log.push({\\n                    id: 'component_version',\\n                    component: componentName,\\n                    version\\n                });\\n            }\\n        });\\n\\n        // logs versions to stats\\n        if (log.length > 0) {\\n            Statistics.sendLog(JSON.stringify(log));\\n        }\\n    };\\n\\n/**\\n * Obtains the version of conferencing system component.\\n * @param componentName the name of the component for which we want to obtain\\n *        the version.\\n * @returns {String} which describes the version of the component identified by\\n *          given <tt>componentName</tt> or <tt>undefined</tt> if not found.\\n */\\nComponentsVersions.prototype.getComponentVersion = function(componentName) {\\n    return this.versions[componentName];\\n};\\n\",\"import { getLogger } from 'jitsi-meet-logger';\\nconst logger = getLogger(__filename);\\n\\nimport JitsiVideoSIPGWSession from './JitsiVideoSIPGWSession';\\nimport * as Constants from './VideoSIPGWConstants';\\nimport XMPPEvents from '../../service/xmpp/XMPPEvents';\\n\\n/**\\n * Main video SIP GW handler. Stores references of all created sessions.\\n */\\nexport default class VideoSIPGW {\\n\\n    /**\\n     * Creates new handler.\\n     *\\n     * @param {ChatRoom} chatRoom - Tha chat room to handle.\\n     */\\n    constructor(chatRoom) {\\n        this.chatRoom = chatRoom;\\n        this.eventEmitter = chatRoom.eventEmitter;\\n        logger.debug('creating VideoSIPGW');\\n        this.sessions = {};\\n\\n        this.sessionStateChangeListener = this.sessionStateChanged.bind(this);\\n\\n        // VideoSIPGW, JitsiConference and ChatRoom are not reusable and no\\n        // more than one VideoSIPGW can be created per JitsiConference,\\n        // so we don't bother to cleanup\\n        chatRoom.addPresenceListener('jibri-sip-call-state',\\n            this.handleJibriSIPState.bind(this));\\n    }\\n\\n    /**\\n     * Handles presence nodes with name: jibri-sip-call-state.\\n     *\\n     * @param {Object} node the presence node Object to handle.\\n     * Object representing part of the presence received over xmpp.\\n     */\\n    handleJibriSIPState(node) {\\n        const attributes = node.attributes;\\n\\n        if (!attributes) {\\n            return;\\n        }\\n\\n        logger.debug('Handle video sip gw state : ', attributes);\\n\\n        const newState = attributes.state;\\n\\n        if (newState === this.state) {\\n            return;\\n        }\\n\\n        switch (newState) {\\n        case Constants.STATE_ON:\\n        case Constants.STATE_OFF:\\n        case Constants.STATE_PENDING:\\n        case Constants.STATE_RETRYING:\\n        case Constants.STATE_FAILED: {\\n            const address = attributes.sipaddress;\\n\\n            if (!address) {\\n                return;\\n            }\\n\\n            // find the corresponding session and set its state\\n            const session = this.sessions[address];\\n\\n            if (session) {\\n                session.setState(newState, attributes.failure_reason);\\n            } else {\\n                logger.warn('Video SIP GW session not found:', address);\\n            }\\n        }\\n        }\\n    }\\n\\n    /**\\n     * Creates new session and stores its reference if it does not exist or\\n     * returns an error otherwise.\\n     *\\n     * @param {string} sipAddress - The sip address to use.\\n     * @param {string} displayName - The display name to use.\\n     * @returns {JitsiVideoSIPGWSession|Error}\\n     */\\n    createVideoSIPGWSession(sipAddress, displayName) {\\n        if (this.sessions[sipAddress]) {\\n            logger.warn('There was already a Video SIP GW session for address',\\n                sipAddress);\\n\\n            return new Error(Constants.ERROR_SESSION_EXISTS);\\n        }\\n\\n        const session = new JitsiVideoSIPGWSession(\\n            sipAddress, displayName, this.chatRoom);\\n\\n        session.addStateListener(this.sessionStateChangeListener);\\n\\n        this.sessions[sipAddress] = session;\\n\\n        return session;\\n    }\\n\\n    /**\\n     * Listener for session state changed. When a session goes to off or failed\\n     * we delete its reference.\\n     *\\n     * @param {options} event - { address, oldState, newState, displayName }\\n     */\\n    sessionStateChanged(event) {\\n        const address = event.address;\\n\\n        if (event.newState === Constants.STATE_OFF\\n            || event.newState === Constants.STATE_FAILED) {\\n            const session = this.sessions[address];\\n\\n            if (!session) {\\n                logger.error('Missing Video SIP GW session with address:',\\n                    address);\\n\\n                return;\\n            }\\n\\n            session.removeStateListener(this.sessionStateChangeListener);\\n            delete this.sessions[address];\\n        }\\n\\n        this.eventEmitter.emit(\\n            XMPPEvents.VIDEO_SIP_GW_SESSION_STATE_CHANGED,\\n            event);\\n    }\\n}\\n\",\"import { getLogger } from 'jitsi-meet-logger';\\nimport { $iq } from 'strophe.js';\\n\\nimport Listenable from '../util/Listenable';\\n\\nimport * as VideoSIPGWConstants from './VideoSIPGWConstants';\\n\\nconst logger = getLogger(__filename);\\n\\n/**\\n * The event name for current sip video session state changed.\\n * @type {string} event name for sip video session state changed.\\n */\\nconst STATE_CHANGED = 'STATE_CHANGED';\\n\\n/**\\n * Jitsi video SIP GW session. Holding its state and able to start/stop it.\\n * When session is in OFF or FAILED stated it cannot be used anymore.\\n */\\nexport default class JitsiVideoSIPGWSession extends Listenable {\\n\\n    /**\\n     * Creates new session with the desired sip address and display name.\\n     *\\n     * @param {string} sipAddress - The sip address to use when\\n     * starting the session.\\n     * @param {string} displayName - The display name to use for\\n     * that participant.\\n     * @param {ChatRoom} chatRoom - The chat room this session is bound to.\\n     */\\n    constructor(sipAddress, displayName, chatRoom) {\\n        super();\\n\\n        this.sipAddress = sipAddress;\\n        this.displayName = displayName;\\n        this.chatRoom = chatRoom;\\n\\n        /*\\n         * The initial state is undefined. Initial state cannot be STATE_OFF,\\n         * the session enters this state when it was in STATE_ON and was stopped\\n         * and such session cannot be used anymore.\\n         *\\n         * @type {VideoSIPGWConstants|undefined}\\n         */\\n        this.state = undefined;\\n    }\\n\\n    /**\\n     * Stops the current session.\\n     */\\n    stop() {\\n        if (this.state === VideoSIPGWConstants.STATE_OFF\\n            || this.state === VideoSIPGWConstants.STATE_FAILED) {\\n            logger.warn('Video SIP GW session already stopped or failed!');\\n\\n            return;\\n        }\\n\\n        this._sendJibriIQ('stop');\\n    }\\n\\n    /**\\n     * Starts a new session. Sends an iq to the focus.\\n     */\\n    start() {\\n        // if state is off, this session was active for some reason\\n        // and we should create new one, rather than reusing it\\n        if (this.state === VideoSIPGWConstants.STATE_ON\\n            || this.state === VideoSIPGWConstants.STATE_OFF\\n            || this.state === VideoSIPGWConstants.STATE_PENDING\\n            || this.state === VideoSIPGWConstants.STATE_RETRYING) {\\n            logger.warn('Video SIP GW session already started!');\\n\\n            return;\\n        }\\n\\n        this._sendJibriIQ('start');\\n    }\\n\\n    /**\\n     * Changes the state of this session.\\n     *\\n     * @param {string} newState - The new {VideoSIPGWConstants} state to set.\\n     * @param {string} [optional] failureReason - The reason why a failure state\\n     * was entered.\\n     * @returns {void}\\n     */\\n    setState(newState, failureReason) {\\n        if (newState === this.state) {\\n            return;\\n        }\\n\\n        const oldState = this.state;\\n\\n        this.state = newState;\\n        this.eventEmitter.emit(STATE_CHANGED,\\n            {\\n                address: this.sipAddress,\\n                failureReason,\\n                oldState,\\n                newState: this.state,\\n                displayName: this.displayName\\n            }\\n        );\\n    }\\n\\n    /**\\n     * Subscribes the passed listener to the event for state change of this\\n     * session.\\n     *\\n     * @param {Function} listener - The function that will receive the event.\\n     */\\n    addStateListener(listener) {\\n        this.addListener(STATE_CHANGED, listener);\\n    }\\n\\n    /**\\n     * Unsubscribes the passed handler.\\n     *\\n     * @param {Function} listener - The function to be removed.\\n     */\\n    removeStateListener(listener) {\\n        this.removeListener(STATE_CHANGED, listener);\\n    }\\n\\n    /**\\n     * Sends a jibri command using an iq.\\n     *\\n     * @private\\n     * @param {string} action - The action to send ('start' or 'stop').\\n     */\\n    _sendJibriIQ(action) {\\n        const attributes = {\\n            'xmlns': 'http://jitsi.org/protocol/jibri',\\n            'action': action,\\n            sipaddress: this.sipAddress\\n        };\\n\\n        attributes.displayname = this.displayName;\\n\\n        const iq = $iq({\\n            to: this.chatRoom.focusMucJid,\\n            type: 'set' })\\n            .c('jibri', attributes)\\n            .up();\\n\\n        logger.debug(`${action} video SIP GW session`, iq.nodeTree);\\n        this.chatRoom.connection.sendIQ(\\n            iq,\\n            () => {}, // eslint-disable-line no-empty-function\\n            error => {\\n                logger.error(\\n                    `Failed to ${action} video SIP GW session, error: `, error);\\n                this.setState(VideoSIPGWConstants.STATE_FAILED);\\n            });\\n    }\\n}\\n\",\"export default {\\n    error: {\\n        BUSY: 'busy',\\n        ERROR: 'error',\\n        RESOURCE_CONSTRAINT: 'resource-constraint',\\n        SERVICE_UNAVAILABLE: 'service-unavailable'\\n    },\\n    mode: {\\n        FILE: 'file',\\n        STREAM: 'stream'\\n    },\\n    status: {\\n        OFF: 'off',\\n        ON: 'on',\\n        PENDING: 'pending'\\n    }\\n};\\n\",\"/* globals $ */\\n\\nimport { getLogger } from 'jitsi-meet-logger';\\nimport { $iq } from 'strophe.js';\\n\\nimport * as MediaType from '../../service/RTC/MediaType';\\nimport VideoType from '../../service/RTC/VideoType';\\nimport RTC from '../RTC/RTC';\\n\\nimport ProxyConnectionPC from './ProxyConnectionPC';\\nimport { ACTIONS } from './constants';\\n\\nconst logger = getLogger(__filename);\\n\\n/**\\n * Instantiates a new ProxyConnectionPC and ensures only one exists at a given\\n * time. Currently it assumes ProxyConnectionPC is used only for screensharing\\n * and assumes IQs to be used for communication.\\n */\\nexport default class ProxyConnectionService {\\n    /**\\n     * Initializes a new {@code ProxyConnectionService} instance.\\n     *\\n     * @param {Object} options - Values to initialize the instance with.\\n     * @param {boolean} [options.convertVideoToDesktop] - Whether or not proxied\\n     * video should be returned as a desktop stream. Defaults to false.\\n     * @param {Object} [options.iceConfig] - The {@code RTCConfiguration} to use\\n     * for the peer connection.\\n     * @param {JitsiConnection} [options.jitsiConnection] - The\\n     * {@code JitsiConnection} which will be used to fetch TURN credentials for\\n     * the P2P connection.\\n     * @param {Function} options.onRemoteStream - Callback to invoke when a\\n     * remote video stream has been received and converted to a\\n     * {@code JitsiLocakTrack}. The {@code JitsiLocakTrack} will be passed in.\\n     * @param {Function} options.onSendMessage - Callback to invoke when a\\n     * message has to be sent (signaled) out. The arguments passed in are the\\n     * jid to send the message to and the message\\n     */\\n    constructor(options = {}) {\\n        const {\\n            jitsiConnection,\\n            ...otherOptions\\n        } = options;\\n\\n        /**\\n         * Holds a reference to the collection of all callbacks.\\n         *\\n         * @type {Object}\\n         */\\n        this._options = {\\n            iceConfig: jitsiConnection\\n                && jitsiConnection.xmpp.connection.jingle.p2pIceConfig,\\n            ...otherOptions\\n        };\\n\\n        /**\\n         * The active instance of {@code ProxyConnectionService}.\\n         *\\n         * @type {ProxyConnectionPC|null}\\n         */\\n        this._peerConnection = null;\\n\\n        // Bind event handlers so they are only bound once for every instance.\\n        this._onFatalError = this._onFatalError.bind(this);\\n        this._onSendMessage = this._onSendMessage.bind(this);\\n        this._onRemoteStream = this._onRemoteStream.bind(this);\\n    }\\n\\n    /**\\n     * Parses a message object regarding a proxy connection to create a new\\n     * proxy connection or update and existing connection.\\n     *\\n     * @param {Object} message - A message object regarding establishing or\\n     * updating a proxy connection.\\n     * @param {Object} message.data - An object containing additional message\\n     * details.\\n     * @param {string} message.data.iq - The stringified iq which explains how\\n     * and what to update regarding the proxy connection.\\n     * @param {string} message.from - The message sender's full jid. Used for\\n     * sending replies.\\n     * @returns {void}\\n     */\\n    processMessage(message) {\\n        const peerJid = message.from;\\n\\n        if (!peerJid) {\\n            return;\\n        }\\n\\n        // If a proxy connection has already been established and messages come\\n        // from another peer jid then those messages should be replied to with\\n        // a rejection.\\n        if (this._peerConnection\\n            && this._peerConnection.getPeerJid() !== peerJid) {\\n            this._onFatalError(\\n                peerJid,\\n                ACTIONS.CONNECTION_ERROR,\\n                'rejected'\\n            );\\n\\n            return;\\n        }\\n\\n        const iq = this._convertStringToXML(message.data.iq);\\n        const $jingle = iq && iq.find('jingle');\\n        const action = $jingle && $jingle.attr('action');\\n\\n        if (action === ACTIONS.INITIATE) {\\n            this._peerConnection = this._createPeerConnection(peerJid, {\\n                isInitiator: false,\\n                receiveVideo: true\\n            });\\n        }\\n\\n        // Truthy check for peer connection added to protect against possibly\\n        // receiving actions before an ACTIONS.INITIATE.\\n        if (this._peerConnection) {\\n            this._peerConnection.processMessage($jingle);\\n        }\\n\\n        // Take additional steps to ensure the peer connection is cleaned up\\n        // if it is to be closed.\\n        if (action === ACTIONS.CONNECTION_ERROR\\n            || action === ACTIONS.UNAVAILABLE\\n            || action === ACTIONS.TERMINATE) {\\n            this._selfCloseConnection();\\n        }\\n\\n        return;\\n    }\\n\\n    /**\\n     * Instantiates and initiates a proxy peer connection.\\n     *\\n     * @param {string} peerJid - The jid of the remote client that should\\n     * receive messages.\\n     * @param {Array<JitsiLocalTrack>} localTracks - Initial media tracks to\\n     * send through to the peer.\\n     * @returns {void}\\n     */\\n    start(peerJid, localTracks = []) {\\n        this._peerConnection = this._createPeerConnection(peerJid, {\\n            isInitiator: true,\\n            receiveVideo: false\\n        });\\n\\n        this._peerConnection.start(localTracks);\\n    }\\n\\n    /**\\n     * Terminates any active proxy peer connection.\\n     *\\n     * @returns {void}\\n     */\\n    stop() {\\n        if (this._peerConnection) {\\n            this._peerConnection.stop();\\n        }\\n\\n        this._peerConnection = null;\\n    }\\n\\n    /**\\n     * Transforms a stringified xML into a XML wrapped in jQuery.\\n     *\\n     * @param {string} xml - The XML in string form.\\n     * @private\\n     * @returns {Object|null} A jQuery version of the xml. Null will be returned\\n     * if an error is encountered during transformation.\\n     */\\n    _convertStringToXML(xml) {\\n        try {\\n            const xmlDom = new DOMParser().parseFromString(xml, 'text/xml');\\n\\n            return $(xmlDom);\\n        } catch (e) {\\n            logger.error('Attempted to convert incorrectly formatted xml');\\n\\n            return null;\\n        }\\n    }\\n\\n    /**\\n     * Helper for creating an instance of {@code ProxyConnectionPC}.\\n     *\\n     * @param {string} peerJid - The jid of the remote peer with which the\\n     * {@code ProxyConnectionPC} will be established with.\\n     * @param {Object} options - Additional defaults to instantiate the\\n     * {@code ProxyConnectionPC} with. See the constructor of ProxyConnectionPC\\n     * for more details.\\n     * @private\\n     * @returns {ProxyConnectionPC}\\n     */\\n    _createPeerConnection(peerJid, options = {}) {\\n        if (!peerJid) {\\n            throw new Error('Cannot create ProxyConnectionPC without a peer.');\\n        }\\n\\n        const pcOptions = {\\n            iceConfig: this._options.iceConfig,\\n            onError: this._onFatalError,\\n            onRemoteStream: this._onRemoteStream,\\n            onSendMessage: this._onSendMessage,\\n            peerJid,\\n            ...options\\n        };\\n\\n        return new ProxyConnectionPC(pcOptions);\\n    }\\n\\n    /**\\n     * Callback invoked when an error occurs that should cause\\n     * {@code ProxyConnectionPC} to be closed if the peer is currently\\n     * connected. Sends an error message/reply back to the peer.\\n     *\\n     * @param {string} peerJid - The peer jid with which the connection was\\n     * attempted or started, and to which an iq with error details should be\\n     * sent.\\n     * @param {string} errorType - The constant indicating the type of the error\\n     * that occured.\\n     * @param {string} details - Optional additional data about the error.\\n     * @private\\n     * @returns {void}\\n     */\\n    _onFatalError(peerJid, errorType, details = '') {\\n        logger.error(\\n            'Received a proxy connection error', peerJid, errorType, details);\\n\\n        const iq = $iq({\\n            to: peerJid,\\n            type: 'set'\\n        })\\n            .c('jingle', {\\n                xmlns: 'urn:xmpp:jingle:1',\\n                action: errorType\\n            })\\n            .c('details')\\n            .t(details)\\n            .up();\\n\\n        this._onSendMessage(peerJid, iq);\\n\\n        if (this._peerConnection\\n            && this._peerConnection.getPeerJid() === peerJid) {\\n            this._selfCloseConnection();\\n        }\\n    }\\n\\n    /**\\n     * Callback invoked when the remote peer of the {@code ProxyConnectionPC}\\n     * has offered a media stream. The stream is converted into a\\n     * {@code JitsiLocalTrack} for local usage if the {@code onRemoteStream}\\n     * callback is defined.\\n     *\\n     * @param {JitsiRemoteTrack} jitsiRemoteTrack - The {@code JitsiRemoteTrack}\\n     * for the peer's media stream.\\n     * @private\\n     * @returns {void}\\n     */\\n    _onRemoteStream(jitsiRemoteTrack) {\\n        if (!this._options.onRemoteStream) {\\n            logger.error('Remote track received without callback.');\\n            jitsiRemoteTrack.dispose();\\n\\n            return;\\n        }\\n\\n        const isVideo = jitsiRemoteTrack.isVideoTrack();\\n        let videoType;\\n\\n        if (isVideo) {\\n            videoType = this._options.convertVideoToDesktop\\n                ? VideoType.DESKTOP : VideoType.CAMERA;\\n        }\\n\\n        // Grab the webrtc media stream and pipe it through the same processing\\n        // that would occur for a locally obtained media stream.\\n        const mediaStream = jitsiRemoteTrack.getOriginalStream();\\n        const jitsiLocalTracks = RTC.newCreateLocalTracks(\\n            [\\n                {\\n                    deviceId:\\n                        `proxy:${this._peerConnection.getPeerJid()}`,\\n                    mediaType: isVideo ? MediaType.VIDEO : MediaType.AUDIO,\\n                    sourceType: 'proxy',\\n                    stream: mediaStream,\\n                    track: mediaStream.getVideoTracks()[0],\\n                    videoType\\n                }\\n            ]);\\n\\n        this._options.onRemoteStream(jitsiLocalTracks[0]);\\n    }\\n\\n    /**\\n     * Formats and forwards a message an iq to be sent to a peer jid.\\n     *\\n     * @param {string} peerJid - The jid the iq should be sent to.\\n     * @param {Object} iq - The iq which would be sent to the peer jid.\\n     * @private\\n     * @returns {void}\\n     */\\n    _onSendMessage(peerJid, iq) {\\n        if (!this._options.onSendMessage) {\\n            return;\\n        }\\n\\n        try {\\n            const stringifiedIq\\n                = new XMLSerializer().serializeToString(iq.nodeTree || iq);\\n\\n            this._options.onSendMessage(peerJid, { iq: stringifiedIq });\\n        } catch (e) {\\n            logger.error('Attempted to send an incorrectly formatted iq.');\\n        }\\n    }\\n\\n    /**\\n     * Invoked when preemptively closing the {@code ProxyConnectionPC}.\\n     *\\n     * @private\\n     * @returns {void}\\n     */\\n    _selfCloseConnection() {\\n        this.stop();\\n\\n        this._options.onConnectionClosed\\n            && this._options.onConnectionClosed();\\n    }\\n}\\n\",\"import { getLogger } from 'jitsi-meet-logger';\\n\\nimport RTC from '../RTC/RTC';\\nimport RTCEvents from '../../service/RTC/RTCEvents';\\nimport XMPPEvents from '../../service/xmpp/XMPPEvents';\\n\\nimport JingleSessionPC from '../xmpp/JingleSessionPC';\\nimport { DEFAULT_STUN_SERVERS } from '../xmpp/xmpp';\\n\\nimport { ACTIONS } from './constants';\\n\\nconst logger = getLogger(__filename);\\n\\n/**\\n * An adapter around {@code JingleSessionPC} so its logic can be re-used without\\n * an XMPP connection. It is being re-used for consistency with the rest of the\\n * codebase and to leverage existing peer connection event handling. Also\\n * this class provides a facade to hide most of the API for\\n * {@code JingleSessionPC}.\\n */\\nexport default class ProxyConnectionPC {\\n    /**\\n     * Initializes a new {@code ProxyConnectionPC} instance.\\n     *\\n     * @param {Object} options - Values to initialize the instance with.\\n     * @param {Object} [options.iceConfig] - The {@code RTCConfiguration} to use\\n     * for the peer connection.\\n     * @param {boolean} [options.isInitiator] - If true, the local client should\\n     * send offers. If false, the local client should send answers. Defaults to\\n     * false.\\n     * @param {Function} options.onRemoteStream - Callback to invoke when a\\n     * remote media stream has been received through the peer connection.\\n     * @param {string} options.peerJid - The jid of the remote client with which\\n     * the peer connection is being establish and which should receive direct\\n     * messages regarding peer connection updates.\\n     * @param {boolean} [options.receiveVideo] - Whether or not the peer\\n     * connection should accept incoming video streams. Defaults to false.\\n     * @param {Function} options.onSendMessage - Callback to invoke when a\\n     * message has to be sent (signaled) out.\\n     */\\n    constructor(options = {}) {\\n        this._options = {\\n            iceConfig: {},\\n            isInitiator: false,\\n            receiveAudio: false,\\n            receiveVideo: false,\\n            ...options\\n        };\\n\\n        /**\\n         * Instances of {@code JitsiTrack} associated with this instance of\\n         * {@code ProxyConnectionPC}.\\n         *\\n         * @type {Array<JitsiTrack>}\\n         */\\n        this._tracks = [];\\n\\n        /**\\n         * The active instance of {@code JingleSessionPC}.\\n         *\\n         * @type {JingleSessionPC|null}\\n         */\\n        this._peerConnection = null;\\n\\n        // Bind event handlers so they are only bound once for every instance.\\n        this._onError = this._onError.bind(this);\\n        this._onRemoteStream = this._onRemoteStream.bind(this);\\n        this._onSendMessage = this._onSendMessage.bind(this);\\n    }\\n\\n    /**\\n     * Returns the jid of the remote peer with which this peer connection should\\n     * be established with.\\n     *\\n     * @returns {string}\\n     */\\n    getPeerJid() {\\n        return this._options.peerJid;\\n    }\\n\\n    /**\\n     * Updates the peer connection based on the passed in jingle.\\n     *\\n     * @param {Object} $jingle - An XML jingle element, wrapped in query,\\n     * describing how the peer connection should be updated.\\n     * @returns {void}\\n     */\\n    processMessage($jingle) {\\n        switch ($jingle.attr('action')) {\\n        case ACTIONS.ACCEPT:\\n            this._onSessionAccept($jingle);\\n            break;\\n\\n        case ACTIONS.INITIATE:\\n            this._onSessionInitiate($jingle);\\n            break;\\n\\n        case ACTIONS.TERMINATE:\\n            this._onSessionTerminate($jingle);\\n            break;\\n\\n        case ACTIONS.TRANSPORT_INFO:\\n            this._onTransportInfo($jingle);\\n            break;\\n        }\\n    }\\n\\n    /**\\n     * Instantiates a peer connection and starts the offer/answer cycle to\\n     * establish a connection with a remote peer.\\n     *\\n     * @param {Array<JitsiLocalTrack>} localTracks - Initial local tracks to add\\n     * to add to the peer connection.\\n     * @returns {void}\\n     */\\n    start(localTracks = []) {\\n        if (this._peerConnection) {\\n            return;\\n        }\\n\\n        this._tracks = this._tracks.concat(localTracks);\\n\\n        this._peerConnection = this._createPeerConnection();\\n\\n        this._peerConnection.invite(localTracks);\\n    }\\n\\n    /**\\n     * Begins the process of disconnecting from a remote peer and cleaning up\\n     * the peer connection.\\n     *\\n     * @returns {void}\\n     */\\n    stop() {\\n        if (this._peerConnection) {\\n            this._peerConnection.terminate();\\n        }\\n\\n        this._onSessionTerminate();\\n    }\\n\\n    /**\\n     * Instantiates a new {@code JingleSessionPC} by stubbing out the various\\n     * dependencies of {@code JingleSessionPC}.\\n     *\\n     * @private\\n     * @returns {JingleSessionPC}\\n     */\\n    _createPeerConnection() {\\n        /**\\n         * {@code JingleSessionPC} takes in the entire jitsi-meet config.js\\n         * object, which may not be accessible from the caller.\\n         *\\n         * @type {Object}\\n         */\\n        const configStub = {};\\n\\n        /**\\n         * {@code JingleSessionPC} assumes an XMPP/Strophe connection object is\\n         * passed through, which also has the jingle plugin initialized on it.\\n         * This connection object is used to signal out peer connection updates\\n         * via iqs, and those updates need to be piped back out to the remote\\n         * peer.\\n         *\\n         * @type {Object}\\n         */\\n        const connectionStub = {\\n            jingle: {\\n                terminate: () => { /** no-op */ }\\n            },\\n            sendIQ: this._onSendMessage\\n        };\\n\\n        /**\\n         * {@code JingleSessionPC} can take in a custom ice configuration,\\n         * depending on the peer connection type, peer-to-peer or other.\\n         * However, {@code ProxyConnectionPC} always assume a peer-to-peer\\n         * connection so the ice configuration is hard-coded with defaults.\\n         *\\n         * @type {Object}\\n         */\\n        const iceConfigStub = {\\n            iceServers: DEFAULT_STUN_SERVERS,\\n            ...this._options.iceConfig\\n        };\\n\\n        /**\\n         * {@code JingleSessionPC} expects an instance of\\n         * {@code JitsiConference}, which has an event emitter that is used\\n         * to signal various connection updates that the local client should\\n         * act upon. The conference instance is not a dependency of a proxy\\n         * connection, but the emitted events can be relevant to the proxy\\n         * connection so the event emitter is stubbed.\\n         *\\n         * @param {string} event - The constant for the event type.\\n         * @type {Function}\\n         * @returns {void}\\n         */\\n        const emitter = event => {\\n            switch (event) {\\n            case XMPPEvents.CONNECTION_ICE_FAILED:\\n            case XMPPEvents.CONNECTION_FAILED:\\n                this._onError(ACTIONS.CONNECTION_ERROR, event);\\n                break;\\n            }\\n        };\\n\\n        /**\\n         * {@code JingleSessionPC} expects an instance of\\n         * {@code JitsiConference} to be passed in. {@code ProxyConnectionPC}\\n         * is instantiated outside of the {@code JitsiConference}, so it must be\\n         * stubbed to prevent errors.\\n         *\\n         * @type {Object}\\n         */\\n        const roomStub = {\\n            addPresenceListener: () => { /** no-op */ },\\n            connectionTimes: [],\\n            eventEmitter: { emit: emitter },\\n            getMediaPresenceInfo: () => {\\n                // Errors occur if this function does not return an object\\n\\n                return {};\\n            },\\n            removePresenceListener: () => { /** no-op */ }\\n        };\\n\\n        /**\\n         * Create an instance of {@code RTC} as it is required for peer\\n         * connection creation by {@code JingleSessionPC}. An existing instance\\n         * of {@code RTC} from elsewhere should not be re-used because it is\\n         * a stateful grouping of utilities.\\n         */\\n        this._rtc = new RTC(this, {});\\n\\n        /**\\n         * Add the remote track listener here as {@code JingleSessionPC} has\\n         * {@code TraceablePeerConnection} which uses {@code RTC}'s event\\n         * emitter.\\n         */\\n        this._rtc.addListener(\\n            RTCEvents.REMOTE_TRACK_ADDED,\\n            this._onRemoteStream\\n        );\\n\\n        const peerConnection = new JingleSessionPC(\\n            undefined, // sid\\n            undefined, // localJid\\n            this._options.peerJid, // remoteJid\\n            connectionStub, // connection\\n            {\\n                offerToReceiveAudio: this._options.receiveAudio,\\n                offerToReceiveVideo: this._options.receiveVideo\\n            }, // mediaConstraints\\n            iceConfigStub, // iceConfig\\n            true, // isP2P\\n            this._options.isInitiator // isInitiator\\n        );\\n\\n        /**\\n         * An additional initialize call is necessary to properly set instance\\n         * variable for calling.\\n         */\\n        peerConnection.initialize(roomStub, this._rtc, configStub);\\n\\n        return peerConnection;\\n    }\\n\\n    /**\\n     * Invoked when a connection related issue has been encountered.\\n     *\\n     * @param {string} errorType - The constant indicating the type of the error\\n     * that occured.\\n     * @param {string} details - Optional additional data about the error.\\n     * @private\\n     * @returns {void}\\n     */\\n    _onError(errorType, details = '') {\\n        this._options.onError(this._options.peerJid, errorType, details);\\n    }\\n\\n    /**\\n     * Callback invoked when the peer connection has received a remote media\\n     * stream.\\n     *\\n     * @param {JitsiRemoteTrack} jitsiRemoteTrack - The remote media stream\\n     * wrapped in {@code JitsiRemoteTrack}.\\n     * @private\\n     * @returns {void}\\n     */\\n    _onRemoteStream(jitsiRemoteTrack) {\\n        this._tracks.push(jitsiRemoteTrack);\\n\\n        this._options.onRemoteStream(jitsiRemoteTrack);\\n    }\\n\\n    /**\\n     * Callback invoked when {@code JingleSessionPC} needs to signal a message\\n     * out to the remote peer.\\n     *\\n     * @param {XML} iq - The message to signal out.\\n     * @private\\n     * @returns {void}\\n     */\\n    _onSendMessage(iq) {\\n        this._options.onSendMessage(this._options.peerJid, iq);\\n    }\\n\\n    /**\\n     * Callback invoked in response to an agreement to start a proxy connection.\\n     * The passed in jingle element should contain an SDP answer to a previously\\n     * sent SDP offer.\\n     *\\n     * @param {Object} $jingle - The jingle element wrapped in jQuery.\\n     * @private\\n     * @returns {void}\\n     */\\n    _onSessionAccept($jingle) {\\n        if (!this._peerConnection) {\\n            logger.error('Received an answer when no peer connection exists.');\\n\\n            return;\\n        }\\n\\n        this._peerConnection.setAnswer($jingle);\\n    }\\n\\n    /**\\n     * Callback invoked in response to a request to start a proxy connection.\\n     * The passed in jingle element should contain an SDP offer.\\n     *\\n     * @param {Object} $jingle - The jingle element wrapped in jQuery.\\n     * @private\\n     * @returns {void}\\n     */\\n    _onSessionInitiate($jingle) {\\n        if (this._peerConnection) {\\n            logger.error('Received an offer when an offer was already sent.');\\n\\n            return;\\n        }\\n\\n        this._peerConnection = this._createPeerConnection();\\n\\n        this._peerConnection.acceptOffer(\\n            $jingle,\\n            () => { /** no-op */ },\\n            () => this._onError(\\n                this._options.peerJid,\\n                ACTIONS.CONNECTION_ERROR,\\n                'session initiate error'\\n            )\\n        );\\n    }\\n\\n    /**\\n     * Callback invoked in response to a request to disconnect an active proxy\\n     * connection. Cleans up tracks and the peer connection.\\n     *\\n     * @private\\n     * @returns {void}\\n     */\\n    _onSessionTerminate() {\\n        this._tracks.forEach(track => track.dispose());\\n        this._tracks = [];\\n\\n        if (this._peerConnection) {\\n            this._peerConnection.onTerminated();\\n        }\\n\\n        if (this._rtc) {\\n            this._rtc.removeListener(\\n                RTCEvents.REMOTE_TRACK_ADDED,\\n                this._onRemoteStream\\n            );\\n\\n            this._rtc.destroy();\\n        }\\n    }\\n\\n    /**\\n     * Callback invoked in response to ICE candidates from the remote peer.\\n     * The passed in jingle element should contain an ICE candidate.\\n     *\\n     * @param {Object} $jingle - The jingle element wrapped in jQuery.\\n     * @private\\n     * @returns {void}\\n     */\\n    _onTransportInfo($jingle) {\\n        this._peerConnection.addIceCandidates($jingle);\\n    }\\n}\\n\",\"// For legacy purposes, preserve the UMD of the public API of the Jitsi Meet\\n// library (a.k.a. JitsiMeetJS).\\nmodule.exports = require('./JitsiMeetJS').default;\\n\",\"/* global __filename */\\n\\nimport { createGetUserMediaEvent } from './service/statistics/AnalyticsEvents';\\nimport AuthUtil from './modules/util/AuthUtil';\\nimport * as ConnectionQualityEvents\\n    from './service/connectivity/ConnectionQualityEvents';\\nimport * as E2ePingEvents from './service/e2eping/E2ePingEvents';\\nimport GlobalOnErrorHandler from './modules/util/GlobalOnErrorHandler';\\nimport * as JitsiConferenceErrors from './JitsiConferenceErrors';\\nimport * as JitsiConferenceEvents from './JitsiConferenceEvents';\\nimport JitsiConnection from './JitsiConnection';\\nimport * as JitsiConnectionErrors from './JitsiConnectionErrors';\\nimport * as JitsiConnectionEvents from './JitsiConnectionEvents';\\nimport JitsiMediaDevices from './JitsiMediaDevices';\\nimport * as JitsiMediaDevicesEvents from './JitsiMediaDevicesEvents';\\nimport JitsiTrackError from './JitsiTrackError';\\nimport * as JitsiTrackErrors from './JitsiTrackErrors';\\nimport * as JitsiTrackEvents from './JitsiTrackEvents';\\nimport * as JitsiTranscriptionStatus from './JitsiTranscriptionStatus';\\nimport LocalStatsCollector from './modules/statistics/LocalStatsCollector';\\nimport Logger from 'jitsi-meet-logger';\\nimport * as MediaType from './service/RTC/MediaType';\\nimport Resolutions from './service/RTC/Resolutions';\\nimport { ParticipantConnectionStatus }\\n    from './modules/connectivity/ParticipantConnectionStatus';\\nimport RTC from './modules/RTC/RTC';\\nimport browser from './modules/browser';\\nimport ScriptUtil from './modules/util/ScriptUtil';\\nimport recordingConstants from './modules/recording/recordingConstants';\\nimport ProxyConnectionService\\n    from './modules/proxyconnection/ProxyConnectionService';\\nimport Statistics from './modules/statistics/statistics';\\nimport * as VideoSIPGWConstants from './modules/videosipgw/VideoSIPGWConstants';\\n\\nconst logger = Logger.getLogger(__filename);\\n\\n/**\\n * The amount of time to wait until firing\\n * {@link JitsiMediaDevicesEvents.PERMISSION_PROMPT_IS_SHOWN} event.\\n */\\nconst USER_MEDIA_PERMISSION_PROMPT_TIMEOUT = 1000;\\n\\n/**\\n * Gets the next lowest desirable resolution to try for a camera. If the given\\n * resolution is already the lowest acceptable resolution, returns {@code null}.\\n *\\n * @param resolution the current resolution\\n * @return the next lowest resolution from the given one, or {@code null} if it\\n * is already the lowest acceptable resolution.\\n */\\nfunction getLowerResolution(resolution) {\\n    if (!Resolutions[resolution]) {\\n        return null;\\n    }\\n    const order = Resolutions[resolution].order;\\n    let res = null;\\n    let resName = null;\\n\\n    Object.keys(Resolutions).forEach(r => {\\n        const value = Resolutions[r];\\n\\n        if (!res || (res.order < value.order && value.order < order)) {\\n            resName = r;\\n            res = value;\\n        }\\n    });\\n\\n    if (resName === resolution) {\\n        resName = null;\\n    }\\n\\n    return resName;\\n}\\n\\n/**\\n * Extracts from an 'options' objects with a specific format (TODO what IS the\\n * format?) the attributes which are to be logged in analytics events.\\n *\\n * @param options gum options (???)\\n * @returns {*} the attributes to attach to analytics events.\\n */\\nfunction getAnalyticsAttributesFromOptions(options) {\\n    const attributes = {\\n        'audio_requested':\\n            options.devices.includes('audio'),\\n        'video_requested':\\n            options.devices.includes('video'),\\n        'screen_sharing_requested':\\n            options.devices.includes('desktop')\\n    };\\n\\n    if (attributes.video_requested) {\\n        attributes.resolution = options.resolution;\\n    }\\n\\n    return attributes;\\n}\\n\\n/**\\n * Tries to deal with the following problem: {@code JitsiMeetJS} is not only\\n * this module, it's also a global (i.e. attached to {@code window}) namespace\\n * for all globals of the projects in the Jitsi Meet family. If lib-jitsi-meet\\n * is loaded through an HTML {@code script} tag, {@code JitsiMeetJS} will\\n * automatically be attached to {@code window} by webpack. Unfortunately,\\n * webpack's source code does not check whether the global variable has already\\n * been assigned and overwrites it. Which is OK for the module\\n * {@code JitsiMeetJS} but is not OK for the namespace {@code JitsiMeetJS}\\n * because it may already contain the values of other projects in the Jitsi Meet\\n * family. The solution offered here works around webpack by merging all\\n * existing values of the namespace {@code JitsiMeetJS} into the module\\n * {@code JitsiMeetJS}.\\n *\\n * @param {Object} module - The module {@code JitsiMeetJS} (which will be\\n * exported and may be attached to {@code window} by webpack later on).\\n * @private\\n * @returns {Object} - A {@code JitsiMeetJS} module which contains all existing\\n * value of the namespace {@code JitsiMeetJS} (if any).\\n */\\nfunction _mergeNamespaceAndModule(module) {\\n    return (\\n        typeof window.JitsiMeetJS === 'object'\\n            ? Object.assign({}, window.JitsiMeetJS, module)\\n            : module);\\n}\\n\\n/**\\n * The public API of the Jitsi Meet library (a.k.a. {@code JitsiMeetJS}).\\n */\\nexport default _mergeNamespaceAndModule({\\n\\n    version: '{#COMMIT_HASH#}',\\n\\n    JitsiConnection,\\n\\n    /**\\n     * {@code ProxyConnectionService} is used to connect a remote peer to a\\n     * local Jitsi participant without going through a Jitsi conference. It is\\n     * currently used for room integration development, specifically wireless\\n     * screensharing. Its API is experimental and will likely change; usage of\\n     * it is advised against.\\n     */\\n    ProxyConnectionService,\\n\\n    constants: {\\n        participantConnectionStatus: ParticipantConnectionStatus,\\n        recording: recordingConstants,\\n        sipVideoGW: VideoSIPGWConstants,\\n        transcriptionStatus: JitsiTranscriptionStatus\\n    },\\n    events: {\\n        conference: JitsiConferenceEvents,\\n        connection: JitsiConnectionEvents,\\n        track: JitsiTrackEvents,\\n        mediaDevices: JitsiMediaDevicesEvents,\\n        connectionQuality: ConnectionQualityEvents,\\n        e2eping: E2ePingEvents\\n    },\\n    errors: {\\n        conference: JitsiConferenceErrors,\\n        connection: JitsiConnectionErrors,\\n        track: JitsiTrackErrors\\n    },\\n    errorTypes: {\\n        JitsiTrackError\\n    },\\n    logLevels: Logger.levels,\\n    mediaDevices: JitsiMediaDevices,\\n    analytics: Statistics.analytics,\\n    init(options = {}) {\\n        Statistics.init(options);\\n\\n        // Initialize global window.connectionTimes\\n        // FIXME do not use 'window'\\n        if (!window.connectionTimes) {\\n            window.connectionTimes = {};\\n        }\\n\\n        if (options.enableAnalyticsLogging !== true) {\\n            logger.warn('Analytics disabled, disposing.');\\n            this.analytics.dispose();\\n        }\\n\\n        if (options.enableWindowOnErrorHandler) {\\n            GlobalOnErrorHandler.addHandler(\\n                this.getGlobalOnErrorHandler.bind(this));\\n        }\\n\\n        // Log deployment-specific information, if available. Defined outside\\n        // the application by individual deployments\\n        const aprops = options.deploymentInfo;\\n\\n        if (aprops && Object.keys(aprops).length > 0) {\\n            const logObject = {};\\n\\n            for (const attr in aprops) {\\n                if (aprops.hasOwnProperty(attr)) {\\n                    logObject[attr] = aprops[attr];\\n                }\\n            }\\n\\n            logObject.id = 'deployment_info';\\n            Statistics.sendLog(JSON.stringify(logObject));\\n        }\\n\\n        if (this.version) {\\n            const logObject = {\\n                id: 'component_version',\\n                component: 'lib-jitsi-meet',\\n                version: this.version\\n            };\\n\\n            Statistics.sendLog(JSON.stringify(logObject));\\n        }\\n\\n        return RTC.init(options);\\n    },\\n\\n    /**\\n     * Returns whether the desktop sharing is enabled or not.\\n     *\\n     * @returns {boolean}\\n     */\\n    isDesktopSharingEnabled() {\\n        return RTC.isDesktopSharingEnabled();\\n    },\\n\\n    /**\\n     * Returns whether the current execution environment supports WebRTC (for\\n     * use within this library).\\n     *\\n     * @returns {boolean} {@code true} if WebRTC is supported in the current\\n     * execution environment (for use within this library); {@code false},\\n     * otherwise.\\n     */\\n    isWebRtcSupported() {\\n        return RTC.isWebRtcSupported();\\n    },\\n\\n    setLogLevel(level) {\\n        Logger.setLogLevel(level);\\n    },\\n\\n    /**\\n     * Sets the log level to the <tt>Logger</tt> instance with given id.\\n     *\\n     * @param {Logger.levels} level the logging level to be set\\n     * @param {string} id the logger id to which new logging level will be set.\\n     * Usually it's the name of the JavaScript source file including the path\\n     * ex. \\\"modules/xmpp/ChatRoom.js\\\"\\n     */\\n    setLogLevelById(level, id) {\\n        Logger.setLogLevelById(level, id);\\n    },\\n\\n    /**\\n     * Registers new global logger transport to the library logging framework.\\n     *\\n     * @param globalTransport\\n     * @see Logger.addGlobalTransport\\n     */\\n    addGlobalLogTransport(globalTransport) {\\n        Logger.addGlobalTransport(globalTransport);\\n    },\\n\\n    /**\\n     * Removes global logging transport from the library logging framework.\\n     *\\n     * @param globalTransport\\n     * @see Logger.removeGlobalTransport\\n     */\\n    removeGlobalLogTransport(globalTransport) {\\n        Logger.removeGlobalTransport(globalTransport);\\n    },\\n\\n    /**\\n     * Creates the media tracks and returns them trough the callback.\\n     *\\n     * @param options Object with properties / settings specifying the tracks\\n     * which should be created. should be created or some additional\\n     * configurations about resolution for example.\\n     * @param {Array} options.devices the devices that will be requested\\n     * @param {string} options.resolution resolution constraints\\n     * @param {string} options.cameraDeviceId\\n     * @param {string} options.micDeviceId\\n     * @param {object} options.desktopSharingExtensionExternalInstallation -\\n     * enables external installation process for desktop sharing extension if\\n     * the inline installation is not posible. The following properties should\\n     * be provided:\\n     * @param {intiger} interval - the interval (in ms) for\\n     * checking whether the desktop sharing extension is installed or not\\n     * @param {Function} checkAgain - returns boolean. While checkAgain()==true\\n     * createLocalTracks will wait and check on every \\\"interval\\\" ms for the\\n     * extension. If the desktop extension is not install and checkAgain()==true\\n     * createLocalTracks will finish with rejected Promise.\\n     * @param {Function} listener - The listener will be called to notify the\\n     * user of lib-jitsi-meet that createLocalTracks is starting external\\n     * extension installation process.\\n     * NOTE: If the inline installation process is not possible and external\\n     * installation is enabled the listener property will be called to notify\\n     * the start of external installation process. After that createLocalTracks\\n     * will start to check for the extension on every interval ms until the\\n     * plugin is installed or until checkAgain return false. If the extension\\n     * is found createLocalTracks will try to get the desktop sharing track and\\n     * will finish the execution. If checkAgain returns false, createLocalTracks\\n     * will finish the execution with rejected Promise.\\n     *\\n     * @param {boolean} (firePermissionPromptIsShownEvent) - if event\\n     * JitsiMediaDevicesEvents.PERMISSION_PROMPT_IS_SHOWN should be fired\\n     * @param originalOptions - internal use only, to be able to store the\\n     * originally requested options.\\n     * @returns {Promise.<{Array.<JitsiTrack>}, JitsiConferenceError>} A promise\\n     * that returns an array of created JitsiTracks if resolved, or a\\n     * JitsiConferenceError if rejected.\\n     */\\n    createLocalTracks(\\n            options = {}, firePermissionPromptIsShownEvent, originalOptions) {\\n        let promiseFulfilled = false;\\n\\n        if (firePermissionPromptIsShownEvent === true) {\\n            window.setTimeout(() => {\\n                if (!promiseFulfilled) {\\n                    JitsiMediaDevices.emitEvent(\\n                        JitsiMediaDevicesEvents.PERMISSION_PROMPT_IS_SHOWN,\\n                        browser.getName());\\n                }\\n            }, USER_MEDIA_PERMISSION_PROMPT_TIMEOUT);\\n        }\\n\\n        if (!window.connectionTimes) {\\n            window.connectionTimes = {};\\n        }\\n        window.connectionTimes['obtainPermissions.start']\\n            = window.performance.now();\\n\\n        return RTC.obtainAudioAndVideoPermissions(options)\\n            .then(tracks => {\\n                promiseFulfilled = true;\\n\\n                window.connectionTimes['obtainPermissions.end']\\n                    = window.performance.now();\\n\\n                Statistics.sendAnalytics(\\n                    createGetUserMediaEvent(\\n                        'success',\\n                        getAnalyticsAttributesFromOptions(options)));\\n\\n                if (!RTC.options.disableAudioLevels) {\\n                    for (let i = 0; i < tracks.length; i++) {\\n                        const track = tracks[i];\\n                        const mStream = track.getOriginalStream();\\n\\n                        if (track.getType() === MediaType.AUDIO) {\\n                            Statistics.startLocalStats(mStream,\\n                                track.setAudioLevel.bind(track));\\n                            track.addEventListener(\\n                                JitsiTrackEvents.LOCAL_TRACK_STOPPED,\\n                                () => {\\n                                    Statistics.stopLocalStats(mStream);\\n                                });\\n                        }\\n                    }\\n                }\\n\\n                // set real device ids\\n                const currentlyAvailableMediaDevices\\n                    = RTC.getCurrentlyAvailableMediaDevices();\\n\\n                if (currentlyAvailableMediaDevices) {\\n                    for (let i = 0; i < tracks.length; i++) {\\n                        const track = tracks[i];\\n\\n                        track._setRealDeviceIdFromDeviceList(\\n                            currentlyAvailableMediaDevices);\\n                    }\\n                }\\n\\n                return tracks;\\n            })\\n            .catch(error => {\\n                promiseFulfilled = true;\\n\\n                if (error.name === JitsiTrackErrors.UNSUPPORTED_RESOLUTION\\n                    && !browser.usesNewGumFlow()) {\\n                    const oldResolution = options.resolution || '720';\\n                    const newResolution = getLowerResolution(oldResolution);\\n\\n                    if (newResolution !== null) {\\n                        options.resolution = newResolution;\\n\\n                        logger.debug(\\n                            'Retry createLocalTracks with resolution',\\n                            newResolution);\\n\\n                        Statistics.sendAnalytics(createGetUserMediaEvent(\\n                            'warning',\\n                            {\\n                                'old_resolution': oldResolution,\\n                                'new_resolution': newResolution,\\n                                reason: 'unsupported resolution'\\n                            }));\\n\\n                        return this.createLocalTracks(\\n                            options,\\n                            undefined,\\n                            originalOptions || Object.assign({}, options));\\n                    }\\n\\n                    // We tried everything. If there is a mandatory device id,\\n                    // remove it and let gum find a device to use.\\n                    if (originalOptions\\n                        && error.gum.constraints\\n                        && error.gum.constraints.video\\n                        && error.gum.constraints.video.mandatory\\n                        && error.gum.constraints.video.mandatory.sourceId) {\\n                        originalOptions.cameraDeviceId = undefined;\\n\\n                        return this.createLocalTracks(originalOptions);\\n                    }\\n                }\\n\\n                if (error.name\\n                        === JitsiTrackErrors.CHROME_EXTENSION_USER_CANCELED) {\\n                    // User cancelled action is not really an error, so only\\n                    // log it as an event to avoid having conference classified\\n                    // as partially failed\\n                    const logObject = {\\n                        id: 'chrome_extension_user_canceled',\\n                        message: error.message\\n                    };\\n\\n                    Statistics.sendLog(JSON.stringify(logObject));\\n\\n                    Statistics.sendAnalytics(\\n                        createGetUserMediaEvent(\\n                            'warning',\\n                            {\\n                                reason: 'extension install user canceled'\\n                            }));\\n                } else if (error.name === JitsiTrackErrors.NOT_FOUND) {\\n                    // logs not found devices with just application log to cs\\n                    const logObject = {\\n                        id: 'usermedia_missing_device',\\n                        status: error.gum.devices\\n                    };\\n\\n                    Statistics.sendLog(JSON.stringify(logObject));\\n\\n                    const attributes\\n                        = getAnalyticsAttributesFromOptions(options);\\n\\n                    attributes.reason = 'device not found';\\n                    attributes.devices = error.gum.devices.join('.');\\n                    Statistics.sendAnalytics(\\n                        createGetUserMediaEvent('error', attributes));\\n                } else {\\n                    // Report gUM failed to the stats\\n                    Statistics.sendGetUserMediaFailed(error);\\n\\n                    const attributes\\n                        = getAnalyticsAttributesFromOptions(options);\\n\\n                    attributes.reason = error.name;\\n                    Statistics.sendAnalytics(\\n                        createGetUserMediaEvent('error', attributes));\\n                }\\n\\n                window.connectionTimes['obtainPermissions.end']\\n                    = window.performance.now();\\n\\n                return Promise.reject(error);\\n            });\\n    },\\n\\n    /**\\n     * Checks if its possible to enumerate available cameras/microphones.\\n     *\\n     * @returns {Promise<boolean>} a Promise which will be resolved only once\\n     * the WebRTC stack is ready, either with true if the device listing is\\n     * available available or with false otherwise.\\n     * @deprecated use JitsiMeetJS.mediaDevices.isDeviceListAvailable instead\\n     */\\n    isDeviceListAvailable() {\\n        logger.warn('This method is deprecated, use '\\n            + 'JitsiMeetJS.mediaDevices.isDeviceListAvailable instead');\\n\\n        return this.mediaDevices.isDeviceListAvailable();\\n    },\\n\\n    /**\\n     * Returns true if changing the input (camera / microphone) or output\\n     * (audio) device is supported and false if not.\\n     *\\n     * @param {string} [deviceType] - type of device to change. Default is\\n     * {@code undefined} or 'input', 'output' - for audio output device change.\\n     * @returns {boolean} {@code true} if available; {@code false}, otherwise.\\n     * @deprecated use JitsiMeetJS.mediaDevices.isDeviceChangeAvailable instead\\n     */\\n    isDeviceChangeAvailable(deviceType) {\\n        logger.warn('This method is deprecated, use '\\n            + 'JitsiMeetJS.mediaDevices.isDeviceChangeAvailable instead');\\n\\n        return this.mediaDevices.isDeviceChangeAvailable(deviceType);\\n    },\\n\\n\\n    /**\\n     * Checks if the current environment supports having multiple audio\\n     * input devices in use simultaneously.\\n     *\\n     * @returns {boolean} True if multiple audio input devices can be used.\\n     */\\n    isMultipleAudioInputSupported() {\\n        return this.mediaDevices.isMultipleAudioInputSupported();\\n    },\\n\\n    /**\\n     * Checks if local tracks can collect stats and collection is enabled.\\n     *\\n     * @param {boolean} True if stats are being collected for local tracks.\\n     */\\n    isCollectingLocalStats() {\\n        return Statistics.audioLevelsEnabled\\n            && LocalStatsCollector.isLocalStatsSupported();\\n    },\\n\\n    /**\\n     * Executes callback with list of media devices connected.\\n     *\\n     * @param {function} callback\\n     * @deprecated use JitsiMeetJS.mediaDevices.enumerateDevices instead\\n     */\\n    enumerateDevices(callback) {\\n        logger.warn('This method is deprecated, use '\\n            + 'JitsiMeetJS.mediaDevices.enumerateDevices instead');\\n        this.mediaDevices.enumerateDevices(callback);\\n    },\\n\\n    /* eslint-disable max-params */\\n\\n    /**\\n     * @returns function that can be used to be attached to window.onerror and\\n     * if options.enableWindowOnErrorHandler is enabled returns\\n     * the function used by the lib.\\n     * (function(message, source, lineno, colno, error)).\\n     */\\n    getGlobalOnErrorHandler(message, source, lineno, colno, error) {\\n        logger.error(\\n            `UnhandledError: ${message}`,\\n            `Script: ${source}`,\\n            `Line: ${lineno}`,\\n            `Column: ${colno}`,\\n            'StackTrace: ', error);\\n        Statistics.reportGlobalError(error);\\n    },\\n\\n    /* eslint-enable max-params */\\n\\n    /**\\n     * Represents a hub/namespace for utility functionality which may be of\\n     * interest to lib-jitsi-meet clients.\\n     */\\n    util: {\\n        AuthUtil,\\n        ScriptUtil,\\n        browser\\n    }\\n});\\n\",\"/* Copyright @ 2016 Atlassian Pty Ltd\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *     http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */\\nvar Logger = require('./Logger.js');\\n\\n/**\\n * Creates new <tt>LogCollector</tt>. Class implements <tt>LoggerTransport</tt>\\n * and thus can be added as global transport in order to capture all the logs.\\n *\\n * It captures subsequent log lines created whenever <tt>Logger</tt> logs\\n * a message and stores them in a queue in order to batch log entries. There are\\n * time and size limit constraints which determine how often batch entries are\\n * stored. Whenever one of these limits is exceeded the <tt>LogCollector</tt>\\n * will use the <tt>logStorage</tt> object given as an argument to save\\n * the batch log entry.\\n *\\n * @param {Object} logStorage an object which allows to store the logs collected\\n * @param {function(string|object[])} logStorage.storeLogs a method called when\\n * this <tt>LogCollector</tt> requests log entry storage. The method's argument\\n * is an array which can contain <tt>string</tt>s and <tt>object</tt>s. If given\\n * item is an object it means that it's an aggregated message. That is a message\\n * which is the same as the previous one and it's representation has\\n * the following format:\\n * {\\n *   {string} text: 'the text of some duplicated message'\\n *   {number} count: 3 // how many times the message appeared in a row\\n * }\\n * If a message \\\"B\\\" after an aggregated message \\\"A\\\" is different, then it breaks\\n * the sequence of \\\"A\\\". Which means that even if the next message \\\"C\\\" is\\n * the same as \\\"A\\\" it will start a new aggregated message \\\"C\\\".\\n * @param {function()} logStorage.isReady a method which should return\\n * a <tt>boolean</tt> to tell the collector that it's ready to store. During the\\n * time storage is not ready log batches will be cached and stored on the next\\n * occasion (flush or interval timeout).\\n *\\n * @param {Object} options the <tt>LogCollector</tt> configuration options.\\n * @param {number} options.maxEntryLength the size limit for a single log entry\\n * to be stored. The <tt>LogCollector</tt> will push the entry as soon as it\\n * reaches or exceeds this limit given that <tt>logStorage.isReady</tt>\\n * returns <tt>true</tt>. Otherwise the log entry will be cached until the log\\n * storage becomes ready. Note that the \\\"is ready\\\" condition is checked every\\n * <tt>options.storeInterval</tt> milliseconds.\\n * @param {number} options.storeInterval how often the logs should be stored in\\n * case <tt>maxEntryLength</tt> was not exceeded.\\n * @param {boolean} options.stringifyObjects indicates whether or not object\\n * arguments should be \\\"stringified\\\" with <tt>JSON.stringify</tt> when a log\\n * message is composed. Note that objects logged on the error log level are\\n * always stringified.\\n *\\n * @constructor\\n */\\nfunction LogCollector(logStorage, options) {\\n    this.logStorage = logStorage;\\n    this.stringifyObjects\\n        = options && options.stringifyObjects\\n            ? options.stringifyObjects : false;\\n    this.storeInterval\\n        = options && options.storeInterval\\n            ? options.storeInterval: 30000;\\n    this.maxEntryLength\\n        = options && options.maxEntryLength\\n            ? options.maxEntryLength : 10000;\\n    // Bind the log method for each level to the corresponding method name\\n    // in order to implement \\\"global log transport\\\" object.\\n    Object.keys(Logger.levels).forEach(\\n    function (logLevel) {\\n        var methodName = Logger.levels[logLevel];\\n        this[methodName] = function (logLevel) {\\n            this._log.apply(this, arguments);\\n        }.bind(this, logLevel);\\n    }.bind(this));\\n    /**\\n     * The ID of store logs interval if one is currently scheduled or\\n     * <tt>null</tt> otherwise.\\n     * @type {number|null}\\n     */\\n    this.storeLogsIntervalID = null;\\n    /**\\n     * The log messages that are to be batched into log entry when\\n     * {@link LogCollector._flush} method is called.\\n     * @type {string[]}\\n     */\\n    this.queue = [];\\n    /**\\n     * The total length of all messages currently stored in the {@link queue}.\\n     * @type {number}\\n     */\\n    this.totalLen = 0;\\n    /**\\n     * An array used to temporarily store log batches, before the storage gets\\n     * ready.\\n     * @type {string[]}\\n     */\\n    this.outputCache = [];\\n}\\n\\n/**\\n * Method called inside of {@link formatLogMessage} in order to covert an\\n * <tt>Object</tt> argument to string. The conversion will happen when either\\n * 'stringifyObjects' option is enabled or on the {@link Logger.levels.ERROR}\\n * log level. The default implementation uses <tt>JSON.stringify</tt> and\\n * returns \\\"[object with circular refs?]\\\" instead of an object if it fails.\\n *\\n * @param {object} someObject the <tt>object</tt> to be stringified.\\n *\\n * @return {string} the result of <tt>JSON.stringify</tt> or\\n * \\\"[object with circular refs?]\\\" if any error occurs during \\\"stringification\\\".\\n *\\n * @protected\\n */\\nLogCollector.prototype.stringify = function (someObject) {\\n    try {\\n        return JSON.stringify(someObject);\\n    } catch (error) {\\n        return \\\"[object with circular refs?]\\\";\\n    }\\n};\\n\\n/**\\n * Formats log entry for the given logging level and arguments passed to the\\n * <tt>Logger</tt>'s log method. The first argument is log level and the next\\n * arguments have to be captured using JS built-in 'arguments' variable.\\n *\\n * @param {Logger.levels} logLevel provides the logging level of the message to\\n * be logged.\\n *\\n * @return {string|null} a non-empty string representation of the log entry\\n * crafted from the log arguments. If the return value is <tt>null</tt> then\\n * the message wil be discarded by this <tt>LogCollector</tt>.\\n *\\n * @protected\\n */\\nLogCollector.prototype.formatLogMessage\\n= function (logLevel/*, arg1, arg2, arg3... */) {\\n    var msg = '';\\n    for (var i = 1, len = arguments.length; i < len; i++) {\\n        var arg = arguments[i];\\n        // objects logged on error level are always converted to JSON\\n        if ((this.stringifyObjects || logLevel === Logger.levels.ERROR)\\n            && typeof arg === 'object') {\\n            arg = this.stringify(arg);\\n        }\\n        msg += arg;\\n        if (i != len - 1) {\\n            msg += ' ';\\n        }\\n    }\\n    return msg.length ? msg : null;\\n};\\n\\n/**\\n * The log method bound to each of the logging levels in order to implement\\n * \\\"global log transport\\\" object.\\n *\\n * @private\\n */\\nLogCollector.prototype._log = function() {\\n\\n    // var logLevel = arguments[0]; first argument is the log level\\n    var msg = this.formatLogMessage.apply(this, arguments);\\n    if (msg) {\\n        // The same as the previous message aggregation logic\\n        var prevMessage\\n            = this.queue.length ? this.queue[this.queue.length -1] : undefined;\\n        // NOTE that typeof undefined is 'undefined'\\n        var prevMessageText\\n            = typeof prevMessage === 'object' ? prevMessage.text : prevMessage;\\n        // Is it the same as the previous one ?\\n        if (prevMessageText == msg) {\\n            if (typeof prevMessage === 'object') {\\n                prevMessage.count += 1;\\n            } else {\\n                this.queue[this.queue.length-1] = {\\n                    text: msg,\\n                    count: 2\\n                }\\n            }\\n        } else {\\n            this.queue.push(msg);\\n            this.totalLen += msg.length;\\n        }\\n    }\\n\\n    if (this.totalLen >= this.maxEntryLength) {\\n        this._flush(true /* force */, true /* reschedule */);\\n    }\\n};\\n\\n/**\\n * Starts periodical \\\"store logs\\\" task which will be triggered at the interval\\n * specified in the constructor options.\\n */\\nLogCollector.prototype.start = function () {\\n    this._reschedulePublishInterval();\\n};\\n\\n/**\\n * Reschedules the periodical \\\"store logs\\\" task which will store the next batch\\n * log entry in the storage.\\n * @private\\n */\\nLogCollector.prototype._reschedulePublishInterval = function () {\\n    if (this.storeLogsIntervalID) {\\n        window.clearTimeout(this.storeLogsIntervalID);\\n        this.storeLogsIntervalID = null;\\n    }\\n    // It's actually a timeout, because it is rescheduled on every flush\\n    this.storeLogsIntervalID\\n        = window.setTimeout(\\n            this._flush.bind(\\n                this, false /* do not force */, true /* reschedule */),\\n            this.storeInterval);\\n};\\n\\n/**\\n * Call this method to flush the log entry buffer and store it in the log\\n * storage immediately (given that the storage is ready).\\n */\\nLogCollector.prototype.flush = function() {\\n    this._flush(\\n        false /* do not force, as it will not be stored anyway */,\\n        true /* reschedule next update */ )\\n};\\n\\n/**\\n * Stores the next batch log entry in the log storage.\\n * @param {boolean} force enforce current logs batch to be stored or cached if\\n * there is anything to be logged, but the storage is not ready yet. One of\\n * legitimate reasons to force is when the logs length exceeds size limit which\\n * could result in truncation.\\n * @param {boolean} reschedule <tt>true</tt> if the next periodic task should be\\n * scheduled after the log entry is stored. <tt>false</tt> will end the periodic\\n * task cycle.\\n * @private\\n */\\nLogCollector.prototype._flush = function(force, reschedule) {\\n    // Publish only if there's anything to be logged\\n    if (this.totalLen > 0 && (this.logStorage.isReady() || force)) {\\n        //FIXME avoid truncating\\n        // right now we don't care if the message size is \\\"slightly\\\" exceeded\\n        if (this.logStorage.isReady()) {\\n            // Sends all cached logs\\n            if (this.outputCache.length) {\\n                this.outputCache.forEach(\\n                    function (cachedQueue) {\\n                        this.logStorage.storeLogs(cachedQueue);\\n                    }.bind(this)\\n                );\\n                // Clear the cache\\n                this.outputCache = [];\\n            }\\n            // Send current batch\\n            this.logStorage.storeLogs(this.queue);\\n        } else {\\n            this.outputCache.push(this.queue);\\n        }\\n\\n        this.queue = [];\\n        this.totalLen = 0;\\n    }\\n\\n    if (reschedule) {\\n        this._reschedulePublishInterval();\\n    }\\n};\\n\\n/**\\n * Stops the periodical \\\"store logs\\\" task and immediately stores any pending\\n * log entries as a batch.\\n */\\nLogCollector.prototype.stop = function() {\\n    // Flush and stop publishing logs\\n    this._flush(false /* do not force */, false /* do not reschedule */);\\n};\\n\\nmodule.exports = LogCollector;\\n\",\"module.exports = function() {\\r\\n\\tthrow new Error(\\\"define cannot be used indirect\\\");\\r\\n};\\r\\n\",\"/* globals __webpack_amd_options__ */\\r\\nmodule.exports = __webpack_amd_options__;\\r\\n\",\"/*!\\n * currentExecutingScript\\n * Get the currently executing script, regardless of its source/trigger/synchronicity. Similar to HTML5's `document.currentScript` but arguably much more useful!\\n * Copyright (c) 2015 James M. Greene\\n * Licensed MIT\\n * https://github.com/JamesMGreene/currentExecutingScript\\n * v0.1.3\\n */\\n(function(root, factory) {\\n  if (typeof define === \\\"function\\\" && define.amd) {\\n    // AMD. Register as an anonymous module.\\n    define([], factory);\\n  } else if (typeof exports === \\\"object\\\") {\\n    // CommonJS-like environments that support `module.exports`,\\n    // like Node.js. Does not work with strict CommonJS!\\n    module.exports = factory();\\n  } else {\\n    // Browser globals (`root` is `window`)\\n    root.currentExecutingScript = factory();\\n  }\\n}(\\n  // Current context/scope\\n  this || window,\\n\\n  // Factory function to return the export\\n  function() {\\n\\nvar scriptReadyRegex = /^(interactive|loaded|complete)$/;\\n\\n// This page's URL (minus query string and fragment identifer hash, if any)\\nvar fullPageUrl = !!window.location ? window.location.href : null;\\nvar pageUrl = fullPageUrl ? fullPageUrl.replace(/#.*$/, \\\"\\\").replace(/\\\\?.*$/, \\\"\\\") || null : null;\\n\\n// Live NodeList collection\\nvar scripts = document.getElementsByTagName(\\\"script\\\");\\n\\n// Check if the browser supports the `readyState` property on `script` elements\\nvar supportsScriptReadyState = \\\"readyState\\\" in (scripts[0] || document.createElement(\\\"script\\\"));\\n\\n// Lousy browser detection for [not] Opera\\nvar isNotOpera = !window.opera || window.opera.toString() !== \\\"[object Opera]\\\";\\n\\n// Detect if `document.currentScript` is supported\\nvar hasNativeCurrentScriptAccessor = \\\"currentScript\\\" in document;\\n\\nvar originalStackDepthConfig;\\n// Detect if the V8 Error Stack Trace API is supported\\nif (\\\"stackTraceLimit\\\" in Error && Error.stackTraceLimit !== Infinity) {\\n  originalStackDepthConfig = Error.stackTraceLimit;\\n  Error.stackTraceLimit = Infinity;\\n}\\n\\n\\n// In some browsers (e.g. Chrome), you can get the current stack from an Error\\n// object instance without needing to throw it. Avoiding an unnecessary\\n// use of `throw` saves time and performance.\\nvar hasStackBeforeThrowing = false,\\n    hasStackAfterThrowing = false;\\n(function() {\\n  try {\\n    var err = new Error();\\n    hasStackBeforeThrowing = typeof err.stack === \\\"string\\\" && !!err.stack;\\n    throw err;\\n  }\\n  catch (thrownErr) {\\n    hasStackAfterThrowing = typeof thrownErr.stack === \\\"string\\\" && !!thrownErr.stack;\\n  }\\n})();\\n\\n\\n// Normalize whitespace within a string\\nfunction normalizeWhitespace(str) {\\n  return str ? str.replace(/^\\\\s+$|\\\\s+$/g, \\\"\\\").replace(/\\\\s\\\\s+/g, \\\" \\\") : \\\"\\\";\\n}\\n\\n// Get script object based on the `src` URL\\nfunction getScriptFromUrl(url, eligibleScripts) {\\n  var i,\\n      script = null;\\n\\n  eligibleScripts = eligibleScripts || scripts;\\n\\n  if (typeof url === \\\"string\\\" && url) {\\n    for (i = eligibleScripts.length; i--; ) {\\n      if (eligibleScripts[i].src === url) {\\n        // NOTE: Could check if the same script URL is used by more than one `script` element\\n        // here... but let's not. That would yield less useful results in \\\"loose\\\" detection. ;)\\n        script = eligibleScripts[i];\\n        break;\\n      }\\n    }\\n  }\\n  return script;\\n}\\n\\n// Get script object based on the caller function's source code body (text)\\nfunction getInlineScriptFromCallerSource(callerFnSource, eligibleScripts) {\\n  var i, inlineScriptText,\\n      script = null,\\n      callerSourceText = normalizeWhitespace(callerFnSource);\\n\\n  eligibleScripts = eligibleScripts || scripts;\\n\\n  if (callerFnSource && callerSourceText) {\\n    for (i = eligibleScripts.length; i--; ) {\\n      // Only look at inline scripts\\n      if (!eligibleScripts[i].hasAttribute(\\\"src\\\")) {\\n        inlineScriptText = normalizeWhitespace(eligibleScripts[i].text);\\n        if (inlineScriptText.indexOf(callerSourceText) !== -1) {\\n          // If more than one match is found, don't return any\\n          if (script) {\\n            script = null;\\n            break;\\n          }\\n          script = eligibleScripts[i];\\n        }\\n      }\\n    }\\n  }\\n\\n  return script;\\n}\\n\\n// If there is only a single inline script on the page, return it; otherwise `null`\\nfunction getSoleInlineScript(eligibleScripts) {\\n  var i, len,\\n      script = null;\\n  eligibleScripts = eligibleScripts || scripts;\\n  for (i = 0, len = eligibleScripts.length; i < len; i++) {\\n    if (!eligibleScripts[i].hasAttribute(\\\"src\\\")) {\\n      if (script) {\\n        script = null;\\n        break;\\n      }\\n      script = eligibleScripts[i];\\n    }\\n  }\\n  return script;\\n}\\n\\n// Get the currently executing script URL from an Error stack trace\\nfunction getScriptUrlFromStack(stack, skipStackDepth) {\\n  var matches, remainingStack,\\n      url = null,\\n      ignoreMessage = typeof skipStackDepth === \\\"number\\\";\\n  skipStackDepth = ignoreMessage ? Math.round(skipStackDepth) : 0;\\n  if (typeof stack === \\\"string\\\" && stack) {\\n    if (ignoreMessage) {\\n      matches = stack.match(/(data:text\\\\/javascript(?:;[^,]+)?,.+?|(?:|blob:)(?:http[s]?|file):\\\\/\\\\/[\\\\/]?.+?\\\\/[^:\\\\)]*?)(?::\\\\d+)(?::\\\\d+)?/);\\n    }\\n    else {\\n      matches = stack.match(/^(?:|[^:@]*@|.+\\\\)@(?=data:text\\\\/javascript|blob|http[s]?|file)|.+?\\\\s+(?: at |@)(?:[^:\\\\(]+ )*[\\\\(]?)(data:text\\\\/javascript(?:;[^,]+)?,.+?|(?:|blob:)(?:http[s]?|file):\\\\/\\\\/[\\\\/]?.+?\\\\/[^:\\\\)]*?)(?::\\\\d+)(?::\\\\d+)?/);\\n\\n      if (!(matches && matches[1])) {\\n        matches = stack.match(/\\\\)@(data:text\\\\/javascript(?:;[^,]+)?,.+?|(?:|blob:)(?:http[s]?|file):\\\\/\\\\/[\\\\/]?.+?\\\\/[^:\\\\)]*?)(?::\\\\d+)(?::\\\\d+)?/);\\n      }\\n    }\\n\\n    if (matches && matches[1]) {\\n      if (skipStackDepth > 0) {\\n        remainingStack = stack.slice(stack.indexOf(matches[0]) + matches[0].length);\\n        url = getScriptUrlFromStack(remainingStack, (skipStackDepth - 1));\\n      }\\n      else {\\n        url = matches[1];\\n      }\\n    }\\n\\n    // TODO: Handle more edge cases!\\n    // Fixes #1\\n    // See https://github.com/JamesMGreene/currentExecutingScript/issues/1\\n\\n    // ???\\n\\n  }\\n  return url;\\n}\\n\\n\\n// Get the farthest currently executing (i.e. yes, EXECUTING) `script` DOM\\n// element for the caller function, regardless of whether it is that `script`\\n// DOM element is currently being evaluated for the first time. The farthest\\n// currently executing `script` DOM element would typically be considered the\\n// originator of the current execution stack.\\nfunction _farthestExecutingScript() {\\n  /*jshint noarg:false */\\n\\n  // TODO: Implement!\\n  // Fixes #3\\n  // See https://github.com/JamesMGreene/currentExecutingScript/issues/3\\n  return null;\\n\\n/*\\n  // Yes, this IS possible, i.e. if a script removes other scripts (or itself)\\n  if (scripts.length === 0) {\\n    return null;\\n  }\\n\\n  // Guaranteed accurate in IE 6-10.\\n  // Not accurate/supported in any other browsers.\\n  if (isNotOpera && supportsScriptReadyState) {\\n    for (var i = scripts.length; i--; ) {\\n      if (scripts[i].readyState === \\\"interactive\\\") {\\n        return scripts[i];\\n      }\\n    }\\n  }\\n\\n  var stack,\\n      e = new Error();\\n  if (hasStackBeforeThrowing) {\\n    stack = e.stack;\\n  }\\n  if (!stack && hasStackAfterThrowing) {\\n    try {\\n      throw e;\\n    }\\n    catch (err) {\\n      // NOTE: Cannot use `err.sourceURL` or `err.fileName` as they will always be THIS script\\n      stack = err.stack;\\n    }\\n  }\\n  if (stack) {\\n    var url = getScriptUrlFromStack(stack, skipStackDepth);\\n    var script = getScriptFromUrl(url, scripts );\\n    if (!script && pageUrl && url === pageUrl) {\\n      // Try to find the correct inline script by searching through\\n      // inline scripts' text content for the caller function's source\\n      // code to be present. If the caller function's source code is\\n      // not available, see if there is only one inline script element\\n      // in the DOM and return that (even though it may be wrong)\\n\\n      // TODO: Implement!\\n      // Fixes #4 in part\\n      // See https://github.com/JamesMGreene/currentExecutingScript/issues/4\\n\\n      var callerFn = _farthestExecutingScript.caller || null,\\n          callerFnStack = [],\\n          callerFnSource = null;\\n\\n      while (callerFn) {\\n        callerFnStack.push(callerFn);\\n        callerFn = callerFn.caller || null;\\n      }\\n      callerFn = callerFnStack.slice(-1)[0];\\n      callerFnSource = callerFn ? (\\\"\\\" + callerFn) : null;\\n\\n\\n      if (callerFnSource) {\\n        script = getInlineScriptFromCallerSource(callerFnSource);\\n      }\\n      else {\\n        // NOTE: This is a loose assumption that could be inaccurate!\\n        //\\n        // Inaccuracies:\\n        //  - If the inline script that initiated the call was also removed from the DOM.\\n        //  - If the call was initiated by an element's inline event handler,\\n        //    e.g. `<a onclick=\\\"(function() { alert(currentExecutingScript()); }()\\\">click</a>`\\n        script = getSoleInlineScript();\\n      }\\n    }\\n    return script;\\n  }\\n\\n  // NOTE: This is a loose assumption that could be inaccurate!\\n  //\\n  // Inaccuracies:\\n  //  - If a script is created dynamically and appended to some position\\n  //    other than the very end of the document.\\n  //  - If multiple scripts are created dynamically and all appended to the\\n  //    same position within the document (and do not have their `async` attributes\\n  //    set to `false`, at least in browsers that support async script evaluation.\\n  //    other than the very end of the document.\\n  //  - If any scripts are added with the `async` attribute set to `true` in a browser\\n  //    that supports it.\\n  //  - May get confused by `script` elements within `svg` elements\\n  return scripts[scripts.length - 1] || null;\\n*/\\n}\\n\\n\\n// Get the originating currently executing (i.e. yes, EXECUTING) `script` DOM\\n// element or attribute node (e.g. `onclick`) for the caller function,\\n// regardless of whether it is that `script` DOM element is currently being\\n// evaluated for the first time. The originating currently executing `script`\\n// DOM element [or attribute node] is the originator of the current execution stack.\\nfunction _originatingExecutingScript() {\\n  // TODO: Implement!\\n  // Fixes #2\\n  // See https://github.com/JamesMGreene/currentExecutingScript/issues/2\\n  return null;\\n}\\n\\n// Get the nearest currently executing (i.e. yes, EXECUTING) `script` DOM\\n// element for the caller function, regardless of whether it is that `script`\\n// DOM element is currently being evaluated for the first time.\\nfunction _nearestExecutingScript() {\\n  /*jshint noarg:false */\\n\\n  // Yes, this IS possible, i.e. if a script removes other scripts (or itself)\\n  if (scripts.length === 0) {\\n    return null;\\n  }\\n\\n  var i, e, stack, url, script,\\n      eligibleScripts = [],\\n      skipStackDepth = _nearestExecutingScript.skipStackDepth || 1,\\n\\n      // TODO: Implement!\\n      // Fixes #4 in part\\n      // See https://github.com/JamesMGreene/currentExecutingScript/issues/4\\n      callerFnSource = null;  //(\\\"\\\" + (_nearestExecutingScript.caller || \\\"\\\")) || null;\\n\\n  // This part will only help in IE 6-10.\\n  for (i = 0; i < scripts.length; i++) {\\n    if (isNotOpera && supportsScriptReadyState) {\\n      if (scriptReadyRegex.test(scripts[i].readyState)) {\\n        eligibleScripts.push(scripts[i]);\\n      }\\n    }\\n    else {\\n      eligibleScripts.push(scripts[i]);\\n    }\\n  }\\n\\n  e = new Error();\\n  if (hasStackBeforeThrowing) {\\n    stack = e.stack;\\n  }\\n  if (!stack && hasStackAfterThrowing) {\\n    try {\\n      throw e;\\n    }\\n    catch (err) {\\n      // NOTE: Cannot use `err.sourceURL` or `err.fileName` as they will always be THIS script\\n      stack = err.stack;\\n    }\\n  }\\n\\n  if (stack) {\\n    url = getScriptUrlFromStack(stack, skipStackDepth);\\n    script = getScriptFromUrl(url, eligibleScripts);\\n\\n    if (!script && pageUrl && url === pageUrl) {\\n      // Try to find the correct inline script by searching through\\n      // inline scripts' text content for the caller function's source\\n      // code to be present.\\n      if (callerFnSource) {\\n        script = getInlineScriptFromCallerSource(callerFnSource, eligibleScripts);\\n      }\\n      // If the caller function's source code is not available, see if\\n      // there is only one inline script element in the DOM and return\\n      // that (even though it may be wrong)...\\n      else {\\n        // NOTE: This is a loose assumption that could be inaccurate!\\n        //\\n        // Inaccuracies:\\n        //  - If the inline script that initiated the call was also removed from the DOM.\\n        //  - If the call was initiated by an element's inline event handler,\\n        //    e.g. `<a onclick=\\\"(function() { alert(currentExecutingScript()); }()\\\">click</a>`\\n        script = getSoleInlineScript(eligibleScripts);\\n      }\\n    }\\n  }\\n\\n  //\\n  // Welcome to the Island of Inaccurate Assumptions!\\n  // NOTE: ALL of the following are loose assumptions that could be inaccurate!\\n  //\\n\\n  if (!script) {\\n    // Inaccuracies:\\n    //  - If the inline script that initiated the call was also removed from the DOM.\\n    //  - If the call was initiated by an element's inline event handler,\\n    //    e.g. `<a onclick=\\\"(function() { alert(currentExecutingScript()); }()\\\">click</a>`\\n    if (eligibleScripts.length === 1) {\\n      script = eligibleScripts[0];\\n    }\\n  }\\n\\n  if (!script) {\\n    // Inaccuracies:\\n    //  - If script currently being synchronously evaluated by the parser is the\\n    //    originator of this call stack but NOT the source script of the caller/invocation\\n    //    e.g.\\n    //    ```html\\n    //    <script id=\\\"a\\\">\\n    //    function getCurrentScriptCallerFn() {\\n    //      return currentExecutingScript.near();\\n    //    }\\n    //    </script>\\n    //    <script id=\\\"b\\\">\\n    //    // Should get `script[id=\\\"a\\\"]` but will get `script[id=\\\"b\\\"]` instead\\n    //    getCurrentScriptCallerFn();\\n    //    </script>\\n    if (hasNativeCurrentScriptAccessor) {\\n      script = document.currentScript;\\n    }\\n  }\\n\\n  if (!script) {\\n    // Inaccuracies:\\n    //  - If script currently being synchronously evaluated by the parser is the\\n    //    originator of this call stack but NOT the source script of the caller/invocation\\n    //    e.g.\\n    //    ```html\\n    //    <script id=\\\"a\\\">\\n    //    function getCurrentScriptCallerFn() {\\n    //      return currentExecutingScript.near();\\n    //    }\\n    //    </script>\\n    //    <script id=\\\"b\\\">\\n    //    // Should get `script[id=\\\"a\\\"]` but will get `script[id=\\\"b\\\"]` instead\\n    //    getCurrentScriptCallerFn();\\n    //    </script>\\n    if (isNotOpera && supportsScriptReadyState) {\\n      for (i = eligibleScripts.length; i--; ) {\\n        if (eligibleScripts[i].readyState === \\\"interactive\\\") {\\n          script = eligibleScripts[i];\\n          break;\\n        }\\n      }\\n    }\\n  }\\n\\n  if (!script) {\\n    // Inaccuracies:\\n    //  - If a script is created dynamically and appended to some position\\n    //    other than the very end of the document.\\n    //  - If multiple scripts are created dynamically and all appended to the\\n    //    same position within the document (and do not have their `async` attributes\\n    //    set to `false`, at least in browsers that support async script evaluation.\\n    //    other than the very end of the document.\\n    //  - If any scripts are added with the `async` attribute set to `true` in a browser\\n    //    that supports it.\\n    //  - May get confused by `script` elements within `svg` elements\\n    //  - If script currently being synchronously evaluated by the parser is the\\n    //    originator of this call stack but NOT the source script of the caller/invocation\\n    //    e.g.\\n    //    ```html\\n    //    <script id=\\\"a\\\">\\n    //    function getCurrentScriptCallerFn() {\\n    //      return currentExecutingScript.near();\\n    //    }\\n    //    </script>\\n    //    <script id=\\\"b\\\">\\n    //    // Should get `script[id=\\\"a\\\"]` but will get `script[id=\\\"b\\\"]` instead\\n    //    getCurrentScriptCallerFn();\\n    //    </script>\\n    //    ```\\n    script = eligibleScripts[eligibleScripts.length - 1] || null;\\n  }\\n\\n  return script;\\n}\\n\\n// Default stack depth to skip over when analyzing call stack frames\\n_nearestExecutingScript.skipStackDepth = 1;\\n\\n\\n\\n    //\\n    // Export the API\\n    //\\n    var currentExecutingScript    = _nearestExecutingScript;      // default\\n    currentExecutingScript.near   = _nearestExecutingScript;\\n    currentExecutingScript.far    = _farthestExecutingScript;\\n    currentExecutingScript.origin = _originatingExecutingScript;\\n\\n\\n    // Just return a value to define the module export.\\n    // This example returns an object, but the module\\n    // can return a function as the exported value.\\n    return currentExecutingScript;\\n  })\\n);\\n\",\"const Constants = {\\n    LOCAL_JID: 'local'\\n};\\n\\nmodule.exports = Constants;\\n\",\"import { $iq, Strophe } from 'strophe.js';\\n\\nStrophe.addConnectionPlugin('disco',\\n{\\n    _connection: null,\\n    _identities : [],\\n    _features : [],\\n    _items : [],\\n    /** Function: init\\n     * Plugin init\\n     *\\n     * Parameters:\\n     *   (Strophe.Connection) conn - Strophe connection\\n     */\\n    init: function(conn)\\n    {\\n    this._connection = conn;\\n        this._identities = [];\\n        this._features   = [];\\n        this._items      = [];\\n        // disco info\\n        conn.addHandler(this._onDiscoInfo.bind(this), Strophe.NS.DISCO_INFO, 'iq', 'get', null, null);\\n        // disco items\\n        conn.addHandler(this._onDiscoItems.bind(this), Strophe.NS.DISCO_ITEMS, 'iq', 'get', null, null);\\n    },\\n    /** Function: addIdentity\\n     * See http://xmpp.org/registrar/disco-categories.html\\n     * Parameters:\\n     *   (String) category - category of identity (like client, automation, etc ...)\\n     *   (String) type - type of identity (like pc, web, bot , etc ...)\\n     *   (String) name - name of identity in natural language\\n     *   (String) lang - lang of name parameter\\n     *\\n     * Returns:\\n     *   Boolean\\n     */\\n    addIdentity: function(category, type, name, lang)\\n    {\\n        for (var i=0; i<this._identities.length; i++)\\n        {\\n            if (this._identities[i].category == category &&\\n                this._identities[i].type == type &&\\n                this._identities[i].name == name &&\\n                this._identities[i].lang == lang)\\n            {\\n                return false;\\n            }\\n        }\\n        this._identities.push({category: category, type: type, name: name, lang: lang});\\n        return true;\\n    },\\n    /** Function: addFeature\\n     *\\n     * Parameters:\\n     *   (String) var_name - feature name (like jabber:iq:version)\\n     *\\n     * Returns:\\n     *   boolean\\n     */\\n    addFeature: function(var_name)\\n    {\\n        for (var i=0; i<this._features.length; i++)\\n        {\\n             if (this._features[i] == var_name)\\n                 return false;\\n        }\\n        this._features.push(var_name);\\n        return true;\\n    },\\n    /** Function: removeFeature\\n     *\\n     * Parameters:\\n     *   (String) var_name - feature name (like jabber:iq:version)\\n     *\\n     * Returns:\\n     *   boolean\\n     */\\n    removeFeature: function(var_name)\\n    {\\n        for (var i=0; i<this._features.length; i++)\\n        {\\n             if (this._features[i] === var_name){\\n                 this._features.splice(i,1);\\n                 return true;\\n             }\\n        }\\n        return false;\\n    },\\n    /** Function: addItem\\n     *\\n     * Parameters:\\n     *   (String) jid\\n     *   (String) name\\n     *   (String) node\\n     *   (Function) call_back\\n     *\\n     * Returns:\\n     *   boolean\\n     */\\n    addItem: function(jid, name, node, call_back)\\n    {\\n        if (node && !call_back)\\n            return false;\\n        this._items.push({jid: jid, name: name, node: node, call_back: call_back});\\n        return true;\\n    },\\n    /** Function: info\\n     * Info query\\n     *\\n     * Parameters:\\n     *   (Function) call_back\\n     *   (String) jid\\n     *   (String) node\\n     */\\n    info: function(jid, node, success, error, timeout)\\n    {\\n        var attrs = {xmlns: Strophe.NS.DISCO_INFO};\\n        if (node)\\n            attrs.node = node;\\n\\n        var info = $iq({from:this._connection.jid,\\n                         to:jid, type:'get'}).c('query', attrs);\\n        this._connection.sendIQ(info, success, error, timeout);\\n    },\\n    /** Function: items\\n     * Items query\\n     *\\n     * Parameters:\\n     *   (Function) call_back\\n     *   (String) jid\\n     *   (String) node\\n     */\\n    items: function(jid, node, success, error, timeout)\\n    {\\n        var attrs = {xmlns: Strophe.NS.DISCO_ITEMS};\\n        if (node)\\n            attrs.node = node;\\n\\n        var items = $iq({from:this._connection.jid,\\n                         to:jid, type:'get'}).c('query', attrs);\\n        this._connection.sendIQ(items, success, error, timeout);\\n    },\\n\\n    /** PrivateFunction: _buildIQResult\\n     */\\n    _buildIQResult: function(stanza, query_attrs)\\n    {\\n        var id   =  stanza.getAttribute('id');\\n        var from = stanza.getAttribute('from');\\n        var iqresult = $iq({type: 'result', id: id});\\n\\n        if (from !== null) {\\n            iqresult.attrs({to: from});\\n        }\\n\\n        return iqresult.c('query', query_attrs);\\n    },\\n\\n    /** PrivateFunction: _onDiscoInfo\\n     * Called when receive info request\\n     */\\n    _onDiscoInfo: function(stanza)\\n    {\\n        var node = stanza.getElementsByTagName('query')[0].getAttribute('node');\\n        var attrs = {xmlns: Strophe.NS.DISCO_INFO};\\n        var i;\\n        if (node)\\n        {\\n            attrs.node = node;\\n        }\\n        var iqresult = this._buildIQResult(stanza, attrs);\\n        for (i=0; i<this._identities.length; i++)\\n        {\\n            attrs = {category: this._identities[i].category,\\n                         type    : this._identities[i].type};\\n            if (this._identities[i].name)\\n                attrs.name = this._identities[i].name;\\n            if (this._identities[i].lang)\\n                attrs['xml:lang'] = this._identities[i].lang;\\n            iqresult.c('identity', attrs).up();\\n        }\\n        for (i=0; i<this._features.length; i++)\\n        {\\n            iqresult.c('feature', {'var':this._features[i]}).up();\\n        }\\n        this._connection.send(iqresult.tree());\\n        return true;\\n    },\\n    /** PrivateFunction: _onDiscoItems\\n     * Called when receive items request\\n     */\\n    _onDiscoItems: function(stanza)\\n    {\\n        var query_attrs = {xmlns: Strophe.NS.DISCO_ITEMS};\\n        var node = stanza.getElementsByTagName('query')[0].getAttribute('node');\\n        var items, i;\\n        if (node)\\n        {\\n            query_attrs.node = node;\\n            items = [];\\n            for (i = 0; i < this._items.length; i++)\\n            {\\n                if (this._items[i].node == node)\\n                {\\n                    items = this._items[i].call_back(stanza);\\n                    break;\\n                }\\n            }\\n        }\\n        else\\n        {\\n            items = this._items;\\n        }\\n        var iqresult = this._buildIQResult(stanza, query_attrs);\\n        for (i = 0; i < items.length; i++)\\n        {\\n            var attrs = {jid:  items[i].jid};\\n            if (items[i].name)\\n                attrs.name = items[i].name;\\n            if (items[i].node)\\n                attrs.node = items[i].node;\\n            iqresult.c('item', attrs).up();\\n        }\\n        this._connection.send(iqresult.tree());\\n        return true;\\n    }\\n});\\n\",\"var scope = (typeof global !== \\\"undefined\\\" && global) ||\\n            (typeof self !== \\\"undefined\\\" && self) ||\\n            window;\\nvar apply = Function.prototype.apply;\\n\\n// DOM APIs, for completeness\\n\\nexports.setTimeout = function() {\\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\\n};\\nexports.setInterval = function() {\\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\\n};\\nexports.clearTimeout =\\nexports.clearInterval = function(timeout) {\\n  if (timeout) {\\n    timeout.close();\\n  }\\n};\\n\\nfunction Timeout(id, clearFn) {\\n  this._id = id;\\n  this._clearFn = clearFn;\\n}\\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\\nTimeout.prototype.close = function() {\\n  this._clearFn.call(scope, this._id);\\n};\\n\\n// Does not start the time, just sets up the members needed.\\nexports.enroll = function(item, msecs) {\\n  clearTimeout(item._idleTimeoutId);\\n  item._idleTimeout = msecs;\\n};\\n\\nexports.unenroll = function(item) {\\n  clearTimeout(item._idleTimeoutId);\\n  item._idleTimeout = -1;\\n};\\n\\nexports._unrefActive = exports.active = function(item) {\\n  clearTimeout(item._idleTimeoutId);\\n\\n  var msecs = item._idleTimeout;\\n  if (msecs >= 0) {\\n    item._idleTimeoutId = setTimeout(function onTimeout() {\\n      if (item._onTimeout)\\n        item._onTimeout();\\n    }, msecs);\\n  }\\n};\\n\\n// setimmediate attaches itself to the global object\\nrequire(\\\"setimmediate\\\");\\n// On some exotic environments, it's not clear which object `setimmediate` was\\n// able to install onto.  Search each possibility in the same order as the\\n// `setimmediate` library.\\nexports.setImmediate = (typeof self !== \\\"undefined\\\" && self.setImmediate) ||\\n                       (typeof global !== \\\"undefined\\\" && global.setImmediate) ||\\n                       (this && this.setImmediate);\\nexports.clearImmediate = (typeof self !== \\\"undefined\\\" && self.clearImmediate) ||\\n                         (typeof global !== \\\"undefined\\\" && global.clearImmediate) ||\\n                         (this && this.clearImmediate);\\n\",\"(function (global, undefined) {\\n    \\\"use strict\\\";\\n\\n    if (global.setImmediate) {\\n        return;\\n    }\\n\\n    var nextHandle = 1; // Spec says greater than zero\\n    var tasksByHandle = {};\\n    var currentlyRunningATask = false;\\n    var doc = global.document;\\n    var registerImmediate;\\n\\n    function setImmediate(callback) {\\n      // Callback can either be a function or a string\\n      if (typeof callback !== \\\"function\\\") {\\n        callback = new Function(\\\"\\\" + callback);\\n      }\\n      // Copy function arguments\\n      var args = new Array(arguments.length - 1);\\n      for (var i = 0; i < args.length; i++) {\\n          args[i] = arguments[i + 1];\\n      }\\n      // Store and register the task\\n      var task = { callback: callback, args: args };\\n      tasksByHandle[nextHandle] = task;\\n      registerImmediate(nextHandle);\\n      return nextHandle++;\\n    }\\n\\n    function clearImmediate(handle) {\\n        delete tasksByHandle[handle];\\n    }\\n\\n    function run(task) {\\n        var callback = task.callback;\\n        var args = task.args;\\n        switch (args.length) {\\n        case 0:\\n            callback();\\n            break;\\n        case 1:\\n            callback(args[0]);\\n            break;\\n        case 2:\\n            callback(args[0], args[1]);\\n            break;\\n        case 3:\\n            callback(args[0], args[1], args[2]);\\n            break;\\n        default:\\n            callback.apply(undefined, args);\\n            break;\\n        }\\n    }\\n\\n    function runIfPresent(handle) {\\n        // From the spec: \\\"Wait until any invocations of this algorithm started before this one have completed.\\\"\\n        // So if we're currently running a task, we'll need to delay this invocation.\\n        if (currentlyRunningATask) {\\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\\n            // \\\"too much recursion\\\" error.\\n            setTimeout(runIfPresent, 0, handle);\\n        } else {\\n            var task = tasksByHandle[handle];\\n            if (task) {\\n                currentlyRunningATask = true;\\n                try {\\n                    run(task);\\n                } finally {\\n                    clearImmediate(handle);\\n                    currentlyRunningATask = false;\\n                }\\n            }\\n        }\\n    }\\n\\n    function installNextTickImplementation() {\\n        registerImmediate = function(handle) {\\n            process.nextTick(function () { runIfPresent(handle); });\\n        };\\n    }\\n\\n    function canUsePostMessage() {\\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\\n        if (global.postMessage && !global.importScripts) {\\n            var postMessageIsAsynchronous = true;\\n            var oldOnMessage = global.onmessage;\\n            global.onmessage = function() {\\n                postMessageIsAsynchronous = false;\\n            };\\n            global.postMessage(\\\"\\\", \\\"*\\\");\\n            global.onmessage = oldOnMessage;\\n            return postMessageIsAsynchronous;\\n        }\\n    }\\n\\n    function installPostMessageImplementation() {\\n        // Installs an event handler on `global` for the `message` event: see\\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\\n\\n        var messagePrefix = \\\"setImmediate$\\\" + Math.random() + \\\"$\\\";\\n        var onGlobalMessage = function(event) {\\n            if (event.source === global &&\\n                typeof event.data === \\\"string\\\" &&\\n                event.data.indexOf(messagePrefix) === 0) {\\n                runIfPresent(+event.data.slice(messagePrefix.length));\\n            }\\n        };\\n\\n        if (global.addEventListener) {\\n            global.addEventListener(\\\"message\\\", onGlobalMessage, false);\\n        } else {\\n            global.attachEvent(\\\"onmessage\\\", onGlobalMessage);\\n        }\\n\\n        registerImmediate = function(handle) {\\n            global.postMessage(messagePrefix + handle, \\\"*\\\");\\n        };\\n    }\\n\\n    function installMessageChannelImplementation() {\\n        var channel = new MessageChannel();\\n        channel.port1.onmessage = function(event) {\\n            var handle = event.data;\\n            runIfPresent(handle);\\n        };\\n\\n        registerImmediate = function(handle) {\\n            channel.port2.postMessage(handle);\\n        };\\n    }\\n\\n    function installReadyStateChangeImplementation() {\\n        var html = doc.documentElement;\\n        registerImmediate = function(handle) {\\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\\n            var script = doc.createElement(\\\"script\\\");\\n            script.onreadystatechange = function () {\\n                runIfPresent(handle);\\n                script.onreadystatechange = null;\\n                html.removeChild(script);\\n                script = null;\\n            };\\n            html.appendChild(script);\\n        };\\n    }\\n\\n    function installSetTimeoutImplementation() {\\n        registerImmediate = function(handle) {\\n            setTimeout(runIfPresent, 0, handle);\\n        };\\n    }\\n\\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\\n\\n    // Don't get fooled by e.g. browserify environments.\\n    if ({}.toString.call(global.process) === \\\"[object process]\\\") {\\n        // For Node.js before 0.9\\n        installNextTickImplementation();\\n\\n    } else if (canUsePostMessage()) {\\n        // For non-IE10 modern browsers\\n        installPostMessageImplementation();\\n\\n    } else if (global.MessageChannel) {\\n        // For web workers, where supported\\n        installMessageChannelImplementation();\\n\\n    } else if (doc && \\\"onreadystatechange\\\" in doc.createElement(\\\"script\\\")) {\\n        // For IE 6–8\\n        installReadyStateChangeImplementation();\\n\\n    } else {\\n        // For older browsers\\n        installSetTimeoutImplementation();\\n    }\\n\\n    attachTo.setImmediate = setImmediate;\\n    attachTo.clearImmediate = clearImmediate;\\n}(typeof self === \\\"undefined\\\" ? typeof global === \\\"undefined\\\" ? this : global : self));\\n\",\"function yaetiEventTarget()\\n{\\n\\tthis._listeners = {};\\n}\\n\\nObject.defineProperties(yaetiEventTarget.prototype,\\n\\t{\\n\\t\\tlisteners:\\n\\t\\t{\\n\\t\\t\\tget: function()\\n\\t\\t\\t{\\n\\t\\t\\t\\treturn this._listeners;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t});\\n\\nyaetiEventTarget.prototype.addEventListener = function(type, newListener)\\n{\\n\\tvar listenersType;\\n\\tvar i;\\n\\tvar listener;\\n\\n\\tif (!type || !newListener)\\n\\t\\treturn;\\n\\n\\tlistenersType = this._listeners[type];\\n\\n\\tif (listenersType === undefined)\\n\\t\\tthis._listeners[type] = listenersType = [];\\n\\n\\tfor (i = 0; !!(listener = listenersType[i]); i++)\\n\\t{\\n\\t\\tif (listener === newListener)\\n\\t\\t\\treturn;\\n\\t}\\n\\n\\tlistenersType.push(newListener);\\n};\\n\\nyaetiEventTarget.prototype.removeEventListener = function(type, oldListener)\\n{\\n\\tvar listenersType;\\n\\tvar i;\\n\\tvar listener;\\n\\n\\tif (!type || !oldListener)\\n\\t\\treturn;\\n\\n\\tlistenersType = this._listeners[type];\\n\\n\\tif (listenersType === undefined)\\n\\t\\treturn;\\n\\n\\tfor (i = 0; !!(listener = listenersType[i]); i++)\\n\\t{\\n\\t\\tif (listener === oldListener)\\n\\t\\t{\\n\\t\\t\\tlistenersType.splice(i, 1);\\n\\t\\t\\tbreak;\\n\\t\\t}\\n\\t}\\n\\n\\tif (listenersType.length === 0)\\n\\t\\tdelete this._listeners[type];\\n};\\n\\nyaetiEventTarget.prototype.dispatchEvent = function(event)\\n{\\n\\tvar type;\\n\\tvar listenersType;\\n\\tvar dummyListener;\\n\\tvar stopImmediatePropagation = false;\\n\\tvar i;\\n\\tvar listener;\\n\\n\\tif (!event || typeof event.type !== 'string')\\n\\t\\tthrow new Error('`event` must have a valid `type` property');\\n\\n\\t// Do some stuff to emulate DOM Event behavior (just if this is not a\\n\\t// DOM Event object).\\n\\tif (event._yaeti)\\n\\t{\\n\\t\\tevent.target = this;\\n\\t\\tevent.cancelable = true;\\n\\t}\\n\\n\\t// Attempt to override the stopImmediatePropagation() method.\\n\\ttry\\n\\t{\\n\\t\\tevent.stopImmediatePropagation = function()\\n\\t\\t{\\n\\t\\t\\tstopImmediatePropagation = true;\\n\\t\\t};\\n\\t}\\n\\tcatch (error)\\n\\t{}\\n\\n\\ttype = event.type;\\n\\tlistenersType = (this._listeners[type] || []);\\n\\n\\tdummyListener = this['on' + type];\\n\\n\\tif (typeof dummyListener === 'function')\\n\\t{\\n\\t\\ttry\\n\\t\\t{\\n\\t\\t\\tdummyListener.call(this, event);\\n\\t\\t}\\n\\t\\tcatch (error)\\n\\t\\t{\\n\\t\\t\\tconsole.error(error);\\n\\t\\t}\\n\\t}\\n\\n\\tfor (i = 0; !!(listener = listenersType[i]); i++)\\n\\t{\\n\\t\\tif (stopImmediatePropagation)\\n\\t\\t\\tbreak;\\n\\n\\t\\ttry\\n\\t\\t{\\n\\t\\t\\tlistener.call(this, event);\\n\\t\\t}\\n\\t\\tcatch (error)\\n\\t\\t{\\n\\t\\t\\tconsole.error(error);\\n\\t\\t}\\n\\t}\\n\\n\\treturn !event.defaultPrevented;\\n};\\n\\nmodule.exports = yaetiEventTarget;\\n\",\"/**\\n * In browsers export the native Event interface.\\n */\\n\\nmodule.exports = global.Event;\\n\",\"var toIntIfInt = function (v) {\\n  return String(Number(v)) === v ? Number(v) : v;\\n};\\n\\nvar attachProperties = function (match, location, names, rawName) {\\n  if (rawName && !names) {\\n    location[rawName] = toIntIfInt(match[1]);\\n  }\\n  else {\\n    for (var i = 0; i < names.length; i += 1) {\\n      if (match[i+1] != null) {\\n        location[names[i]] = toIntIfInt(match[i+1]);\\n      }\\n    }\\n  }\\n};\\n\\nvar parseReg = function (obj, location, content) {\\n  var needsBlank = obj.name && obj.names;\\n  if (obj.push && !location[obj.push]) {\\n    location[obj.push] = [];\\n  }\\n  else if (needsBlank && !location[obj.name]) {\\n    location[obj.name] = {};\\n  }\\n  var keyLocation = obj.push ?\\n    {} :  // blank object that will be pushed\\n    needsBlank ? location[obj.name] : location; // otherwise, named location or root\\n\\n  attachProperties(content.match(obj.reg), keyLocation, obj.names, obj.name);\\n\\n  if (obj.push) {\\n    location[obj.push].push(keyLocation);\\n  }\\n};\\n\\nvar grammar = require('./grammar');\\nvar validLine = RegExp.prototype.test.bind(/^([a-z])=(.*)/);\\n\\nexports.parse = function (sdp) {\\n  var session = {}\\n    , media = []\\n    , location = session; // points at where properties go under (one of the above)\\n\\n  // parse lines we understand\\n  sdp.split(/(\\\\r\\\\n|\\\\r|\\\\n)/).filter(validLine).forEach(function (l) {\\n    var type = l[0];\\n    var content = l.slice(2);\\n    if (type === 'm') {\\n      media.push({rtp: [], fmtp: []});\\n      location = media[media.length-1]; // point at latest media line\\n    }\\n\\n    for (var j = 0; j < (grammar[type] || []).length; j += 1) {\\n      var obj = grammar[type][j];\\n      if (obj.reg.test(content)) {\\n        return parseReg(obj, location, content);\\n      }\\n    }\\n  });\\n\\n  session.media = media; // link it up\\n  return session;\\n};\\n\\nvar paramReducer = function (acc, expr) {\\n  var s = expr.split(/=(.+)/, 2);\\n  if (s.length === 2) {\\n    acc[s[0]] = toIntIfInt(s[1]);\\n  }\\n  return acc;\\n};\\n\\nexports.parseParams = function (str) {\\n  return str.split(/\\\\;\\\\s?/).reduce(paramReducer, {});\\n};\\n\\n// For backward compatibility - alias will be removed in 3.0.0\\nexports.parseFmtpConfig = exports.parseParams;\\n\\nexports.parsePayloads = function (str) {\\n  return str.split(' ').map(Number);\\n};\\n\\nexports.parseRemoteCandidates = function (str) {\\n  var candidates = [];\\n  var parts = str.split(' ').map(toIntIfInt);\\n  for (var i = 0; i < parts.length; i += 3) {\\n    candidates.push({\\n      component: parts[i],\\n      ip: parts[i + 1],\\n      port: parts[i + 2]\\n    });\\n  }\\n  return candidates;\\n};\\n\\nexports.parseImageAttributes = function (str) {\\n  return str.split(' ').map(function (item) {\\n    return item.substring(1, item.length-1).split(',').reduce(paramReducer, {});\\n  });\\n};\\n\\nexports.parseSimulcastStreamList = function (str) {\\n  return str.split(';').map(function (stream) {\\n    return stream.split(',').map(function (format) {\\n      var scid, paused = false;\\n\\n      if (format[0] !== '~') {\\n        scid = toIntIfInt(format);\\n      } else {\\n        scid = toIntIfInt(format.substring(1, format.length));\\n        paused = true;\\n      }\\n\\n      return {\\n        scid: scid,\\n        paused: paused\\n      };\\n    });\\n  });\\n};\\n\",\"var grammar = require('./grammar');\\n\\n// customized util.format - discards excess arguments and can void middle ones\\nvar formatRegExp = /%[sdv%]/g;\\nvar format = function (formatStr) {\\n  var i = 1;\\n  var args = arguments;\\n  var len = args.length;\\n  return formatStr.replace(formatRegExp, function (x) {\\n    if (i >= len) {\\n      return x; // missing argument\\n    }\\n    var arg = args[i];\\n    i += 1;\\n    switch (x) {\\n    case '%%':\\n      return '%';\\n    case '%s':\\n      return String(arg);\\n    case '%d':\\n      return Number(arg);\\n    case '%v':\\n      return '';\\n    }\\n  });\\n  // NB: we discard excess arguments - they are typically undefined from makeLine\\n};\\n\\nvar makeLine = function (type, obj, location) {\\n  var str = obj.format instanceof Function ?\\n    (obj.format(obj.push ? location : location[obj.name])) :\\n    obj.format;\\n\\n  var args = [type + '=' + str];\\n  if (obj.names) {\\n    for (var i = 0; i < obj.names.length; i += 1) {\\n      var n = obj.names[i];\\n      if (obj.name) {\\n        args.push(location[obj.name][n]);\\n      }\\n      else { // for mLine and push attributes\\n        args.push(location[obj.names[i]]);\\n      }\\n    }\\n  }\\n  else {\\n    args.push(location[obj.name]);\\n  }\\n  return format.apply(null, args);\\n};\\n\\n// RFC specified order\\n// TODO: extend this with all the rest\\nvar defaultOuterOrder = [\\n  'v', 'o', 's', 'i',\\n  'u', 'e', 'p', 'c',\\n  'b', 't', 'r', 'z', 'a'\\n];\\nvar defaultInnerOrder = ['i', 'c', 'b', 'a'];\\n\\n\\nmodule.exports = function (session, opts) {\\n  opts = opts || {};\\n  // ensure certain properties exist\\n  if (session.version == null) {\\n    session.version = 0; // 'v=0' must be there (only defined version atm)\\n  }\\n  if (session.name == null) {\\n    session.name = ' '; // 's= ' must be there if no meaningful name set\\n  }\\n  session.media.forEach(function (mLine) {\\n    if (mLine.payloads == null) {\\n      mLine.payloads = '';\\n    }\\n  });\\n\\n  var outerOrder = opts.outerOrder || defaultOuterOrder;\\n  var innerOrder = opts.innerOrder || defaultInnerOrder;\\n  var sdp = [];\\n\\n  // loop through outerOrder for matching properties on session\\n  outerOrder.forEach(function (type) {\\n    grammar[type].forEach(function (obj) {\\n      if (obj.name in session && session[obj.name] != null) {\\n        sdp.push(makeLine(type, obj, session));\\n      }\\n      else if (obj.push in session && session[obj.push] != null) {\\n        session[obj.push].forEach(function (el) {\\n          sdp.push(makeLine(type, obj, el));\\n        });\\n      }\\n    });\\n  });\\n\\n  // then for each media line, follow the innerOrder\\n  session.media.forEach(function (mLine) {\\n    sdp.push(makeLine('m', grammar.m[0], mLine));\\n\\n    innerOrder.forEach(function (type) {\\n      grammar[type].forEach(function (obj) {\\n        if (obj.name in mLine && mLine[obj.name] != null) {\\n          sdp.push(makeLine(type, obj, mLine));\\n        }\\n        else if (obj.push in mLine && mLine[obj.push] != null) {\\n          mLine[obj.push].forEach(function (el) {\\n            sdp.push(makeLine(type, obj, el));\\n          });\\n        }\\n      });\\n    });\\n  });\\n\\n  return sdp.join('\\\\r\\\\n') + '\\\\r\\\\n';\\n};\\n\",\"/*\\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\\n *\\n *  Use of this source code is governed by a BSD-style license\\n *  that can be found in the LICENSE file in the root of the source\\n *  tree.\\n */\\n /* eslint-env node */\\n\\n'use strict';\\n\\nvar adapterFactory = require('./adapter_factory.js');\\nmodule.exports = adapterFactory({window: global.window});\\n\",\"/*\\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\\n *\\n *  Use of this source code is governed by a BSD-style license\\n *  that can be found in the LICENSE file in the root of the source\\n *  tree.\\n */\\n /* eslint-env node */\\n\\n'use strict';\\n\\nvar utils = require('./utils');\\n// Shimming starts here.\\nmodule.exports = function(dependencies, opts) {\\n  var window = dependencies && dependencies.window;\\n\\n  var options = {\\n    shimChrome: true,\\n    shimFirefox: true,\\n    shimEdge: true,\\n    shimSafari: true,\\n  };\\n\\n  for (var key in opts) {\\n    if (hasOwnProperty.call(opts, key)) {\\n      options[key] = opts[key];\\n    }\\n  }\\n\\n  // Utils.\\n  var logging = utils.log;\\n  var browserDetails = utils.detectBrowser(window);\\n\\n  // Export to the adapter global object visible in the browser.\\n  var adapter = {\\n    browserDetails: browserDetails,\\n    extractVersion: utils.extractVersion,\\n    disableLog: utils.disableLog,\\n    disableWarnings: utils.disableWarnings\\n  };\\n\\n  // Uncomment the line below if you want logging to occur, including logging\\n  // for the switch statement below. Can also be turned on in the browser via\\n  // adapter.disableLog(false), but then logging from the switch statement below\\n  // will not appear.\\n  // require('./utils').disableLog(false);\\n\\n  // Browser shims.\\n  var chromeShim = require('./chrome/chrome_shim') || null;\\n  var edgeShim = require('./edge/edge_shim') || null;\\n  var firefoxShim = require('./firefox/firefox_shim') || null;\\n  var safariShim = require('./safari/safari_shim') || null;\\n  var commonShim = require('./common_shim') || null;\\n\\n  // Shim browser if found.\\n  switch (browserDetails.browser) {\\n    case 'chrome':\\n      if (!chromeShim || !chromeShim.shimPeerConnection ||\\n          !options.shimChrome) {\\n        logging('Chrome shim is not included in this adapter release.');\\n        return adapter;\\n      }\\n      logging('adapter.js shimming chrome.');\\n      // Export to the adapter global object visible in the browser.\\n      adapter.browserShim = chromeShim;\\n      commonShim.shimCreateObjectURL(window);\\n\\n      chromeShim.shimGetUserMedia(window);\\n      chromeShim.shimMediaStream(window);\\n      chromeShim.shimSourceObject(window);\\n      chromeShim.shimPeerConnection(window);\\n      chromeShim.shimOnTrack(window);\\n      chromeShim.shimAddTrackRemoveTrack(window);\\n      chromeShim.shimGetSendersWithDtmf(window);\\n\\n      commonShim.shimRTCIceCandidate(window);\\n      break;\\n    case 'firefox':\\n      if (!firefoxShim || !firefoxShim.shimPeerConnection ||\\n          !options.shimFirefox) {\\n        logging('Firefox shim is not included in this adapter release.');\\n        return adapter;\\n      }\\n      logging('adapter.js shimming firefox.');\\n      // Export to the adapter global object visible in the browser.\\n      adapter.browserShim = firefoxShim;\\n      commonShim.shimCreateObjectURL(window);\\n\\n      firefoxShim.shimGetUserMedia(window);\\n      firefoxShim.shimSourceObject(window);\\n      firefoxShim.shimPeerConnection(window);\\n      firefoxShim.shimOnTrack(window);\\n\\n      commonShim.shimRTCIceCandidate(window);\\n      break;\\n    case 'edge':\\n      if (!edgeShim || !edgeShim.shimPeerConnection || !options.shimEdge) {\\n        logging('MS edge shim is not included in this adapter release.');\\n        return adapter;\\n      }\\n      logging('adapter.js shimming edge.');\\n      // Export to the adapter global object visible in the browser.\\n      adapter.browserShim = edgeShim;\\n      commonShim.shimCreateObjectURL(window);\\n\\n      edgeShim.shimGetUserMedia(window);\\n      edgeShim.shimPeerConnection(window);\\n      edgeShim.shimReplaceTrack(window);\\n\\n      // the edge shim implements the full RTCIceCandidate object.\\n      break;\\n    case 'safari':\\n      if (!safariShim || !options.shimSafari) {\\n        logging('Safari shim is not included in this adapter release.');\\n        return adapter;\\n      }\\n      logging('adapter.js shimming safari.');\\n      // Export to the adapter global object visible in the browser.\\n      adapter.browserShim = safariShim;\\n      commonShim.shimCreateObjectURL(window);\\n\\n      safariShim.shimRTCIceServerUrls(window);\\n      safariShim.shimCallbacksAPI(window);\\n      safariShim.shimLocalStreamsAPI(window);\\n      safariShim.shimRemoteStreamsAPI(window);\\n      safariShim.shimTrackEventTransceiver(window);\\n      safariShim.shimGetUserMedia(window);\\n      safariShim.shimCreateOfferLegacy(window);\\n\\n      commonShim.shimRTCIceCandidate(window);\\n      break;\\n    default:\\n      logging('Unsupported browser!');\\n      break;\\n  }\\n\\n  return adapter;\\n};\\n\",\"\\n/*\\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\\n *\\n *  Use of this source code is governed by a BSD-style license\\n *  that can be found in the LICENSE file in the root of the source\\n *  tree.\\n */\\n /* eslint-env node */\\n'use strict';\\nvar utils = require('../utils.js');\\nvar logging = utils.log;\\n\\nvar chromeShim = {\\n  shimMediaStream: function(window) {\\n    window.MediaStream = window.MediaStream || window.webkitMediaStream;\\n  },\\n\\n  shimOnTrack: function(window) {\\n    if (typeof window === 'object' && window.RTCPeerConnection && !('ontrack' in\\n        window.RTCPeerConnection.prototype)) {\\n      Object.defineProperty(window.RTCPeerConnection.prototype, 'ontrack', {\\n        get: function() {\\n          return this._ontrack;\\n        },\\n        set: function(f) {\\n          if (this._ontrack) {\\n            this.removeEventListener('track', this._ontrack);\\n          }\\n          this.addEventListener('track', this._ontrack = f);\\n        }\\n      });\\n      var origSetRemoteDescription =\\n          window.RTCPeerConnection.prototype.setRemoteDescription;\\n      window.RTCPeerConnection.prototype.setRemoteDescription = function() {\\n        var pc = this;\\n        if (!pc._ontrackpoly) {\\n          pc._ontrackpoly = function(e) {\\n            // onaddstream does not fire when a track is added to an existing\\n            // stream. But stream.onaddtrack is implemented so we use that.\\n            e.stream.addEventListener('addtrack', function(te) {\\n              var receiver;\\n              if (window.RTCPeerConnection.prototype.getReceivers) {\\n                receiver = pc.getReceivers().find(function(r) {\\n                  return r.track && r.track.id === te.track.id;\\n                });\\n              } else {\\n                receiver = {track: te.track};\\n              }\\n\\n              var event = new Event('track');\\n              event.track = te.track;\\n              event.receiver = receiver;\\n              event.transceiver = {receiver: receiver};\\n              event.streams = [e.stream];\\n              pc.dispatchEvent(event);\\n            });\\n            e.stream.getTracks().forEach(function(track) {\\n              var receiver;\\n              if (window.RTCPeerConnection.prototype.getReceivers) {\\n                receiver = pc.getReceivers().find(function(r) {\\n                  return r.track && r.track.id === track.id;\\n                });\\n              } else {\\n                receiver = {track: track};\\n              }\\n              var event = new Event('track');\\n              event.track = track;\\n              event.receiver = receiver;\\n              event.transceiver = {receiver: receiver};\\n              event.streams = [e.stream];\\n              pc.dispatchEvent(event);\\n            });\\n          };\\n          pc.addEventListener('addstream', pc._ontrackpoly);\\n        }\\n        return origSetRemoteDescription.apply(pc, arguments);\\n      };\\n    }\\n  },\\n\\n  shimGetSendersWithDtmf: function(window) {\\n    // Overrides addTrack/removeTrack, depends on shimAddTrackRemoveTrack.\\n    if (typeof window === 'object' && window.RTCPeerConnection &&\\n        !('getSenders' in window.RTCPeerConnection.prototype) &&\\n        'createDTMFSender' in window.RTCPeerConnection.prototype) {\\n      var shimSenderWithDtmf = function(pc, track) {\\n        return {\\n          track: track,\\n          get dtmf() {\\n            if (this._dtmf === undefined) {\\n              if (track.kind === 'audio') {\\n                this._dtmf = pc.createDTMFSender(track);\\n              } else {\\n                this._dtmf = null;\\n              }\\n            }\\n            return this._dtmf;\\n          },\\n          _pc: pc\\n        };\\n      };\\n\\n      // augment addTrack when getSenders is not available.\\n      if (!window.RTCPeerConnection.prototype.getSenders) {\\n        window.RTCPeerConnection.prototype.getSenders = function() {\\n          this._senders = this._senders || [];\\n          return this._senders.slice(); // return a copy of the internal state.\\n        };\\n        var origAddTrack = window.RTCPeerConnection.prototype.addTrack;\\n        window.RTCPeerConnection.prototype.addTrack = function(track, stream) {\\n          var pc = this;\\n          var sender = origAddTrack.apply(pc, arguments);\\n          if (!sender) {\\n            sender = shimSenderWithDtmf(pc, track);\\n            pc._senders.push(sender);\\n          }\\n          return sender;\\n        };\\n\\n        var origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;\\n        window.RTCPeerConnection.prototype.removeTrack = function(sender) {\\n          var pc = this;\\n          origRemoveTrack.apply(pc, arguments);\\n          var idx = pc._senders.indexOf(sender);\\n          if (idx !== -1) {\\n            pc._senders.splice(idx, 1);\\n          }\\n        };\\n      }\\n      var origAddStream = window.RTCPeerConnection.prototype.addStream;\\n      window.RTCPeerConnection.prototype.addStream = function(stream) {\\n        var pc = this;\\n        pc._senders = pc._senders || [];\\n        origAddStream.apply(pc, [stream]);\\n        stream.getTracks().forEach(function(track) {\\n          pc._senders.push(shimSenderWithDtmf(pc, track));\\n        });\\n      };\\n\\n      var origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\\n      window.RTCPeerConnection.prototype.removeStream = function(stream) {\\n        var pc = this;\\n        pc._senders = pc._senders || [];\\n        origRemoveStream.apply(pc, [stream]);\\n\\n        stream.getTracks().forEach(function(track) {\\n          var sender = pc._senders.find(function(s) {\\n            return s.track === track;\\n          });\\n          if (sender) {\\n            pc._senders.splice(pc._senders.indexOf(sender), 1); // remove sender\\n          }\\n        });\\n      };\\n    } else if (typeof window === 'object' && window.RTCPeerConnection &&\\n               'getSenders' in window.RTCPeerConnection.prototype &&\\n               'createDTMFSender' in window.RTCPeerConnection.prototype &&\\n               window.RTCRtpSender &&\\n               !('dtmf' in window.RTCRtpSender.prototype)) {\\n      var origGetSenders = window.RTCPeerConnection.prototype.getSenders;\\n      window.RTCPeerConnection.prototype.getSenders = function() {\\n        var pc = this;\\n        var senders = origGetSenders.apply(pc, []);\\n        senders.forEach(function(sender) {\\n          sender._pc = pc;\\n        });\\n        return senders;\\n      };\\n\\n      Object.defineProperty(window.RTCRtpSender.prototype, 'dtmf', {\\n        get: function() {\\n          if (this._dtmf === undefined) {\\n            if (this.track.kind === 'audio') {\\n              this._dtmf = this._pc.createDTMFSender(this.track);\\n            } else {\\n              this._dtmf = null;\\n            }\\n          }\\n          return this._dtmf;\\n        }\\n      });\\n    }\\n  },\\n\\n  shimSourceObject: function(window) {\\n    var URL = window && window.URL;\\n\\n    if (typeof window === 'object') {\\n      if (window.HTMLMediaElement &&\\n        !('srcObject' in window.HTMLMediaElement.prototype)) {\\n        // Shim the srcObject property, once, when HTMLMediaElement is found.\\n        Object.defineProperty(window.HTMLMediaElement.prototype, 'srcObject', {\\n          get: function() {\\n            return this._srcObject;\\n          },\\n          set: function(stream) {\\n            var self = this;\\n            // Use _srcObject as a private property for this shim\\n            this._srcObject = stream;\\n            if (this.src) {\\n              URL.revokeObjectURL(this.src);\\n            }\\n\\n            if (!stream) {\\n              this.src = '';\\n              return undefined;\\n            }\\n            this.src = URL.createObjectURL(stream);\\n            // We need to recreate the blob url when a track is added or\\n            // removed. Doing it manually since we want to avoid a recursion.\\n            stream.addEventListener('addtrack', function() {\\n              if (self.src) {\\n                URL.revokeObjectURL(self.src);\\n              }\\n              self.src = URL.createObjectURL(stream);\\n            });\\n            stream.addEventListener('removetrack', function() {\\n              if (self.src) {\\n                URL.revokeObjectURL(self.src);\\n              }\\n              self.src = URL.createObjectURL(stream);\\n            });\\n          }\\n        });\\n      }\\n    }\\n  },\\n\\n  shimAddTrackRemoveTrack: function(window) {\\n    var browserDetails = utils.detectBrowser(window);\\n    // shim addTrack and removeTrack.\\n    if (window.RTCPeerConnection.prototype.addTrack &&\\n        browserDetails.version >= 63) {\\n      return;\\n    }\\n\\n    // also shim pc.getLocalStreams when addTrack is shimmed\\n    // to return the original streams.\\n    var origGetLocalStreams = window.RTCPeerConnection.prototype\\n        .getLocalStreams;\\n    window.RTCPeerConnection.prototype.getLocalStreams = function() {\\n      var self = this;\\n      var nativeStreams = origGetLocalStreams.apply(this);\\n      self._reverseStreams = self._reverseStreams || {};\\n      return nativeStreams.map(function(stream) {\\n        return self._reverseStreams[stream.id];\\n      });\\n    };\\n\\n    var origAddStream = window.RTCPeerConnection.prototype.addStream;\\n    window.RTCPeerConnection.prototype.addStream = function(stream) {\\n      var pc = this;\\n      pc._streams = pc._streams || {};\\n      pc._reverseStreams = pc._reverseStreams || {};\\n\\n      stream.getTracks().forEach(function(track) {\\n        var alreadyExists = pc.getSenders().find(function(s) {\\n          return s.track === track;\\n        });\\n        if (alreadyExists) {\\n          throw new DOMException('Track already exists.',\\n              'InvalidAccessError');\\n        }\\n      });\\n      // Add identity mapping for consistency with addTrack.\\n      // Unless this is being used with a stream from addTrack.\\n      if (!pc._reverseStreams[stream.id]) {\\n        var newStream = new window.MediaStream(stream.getTracks());\\n        pc._streams[stream.id] = newStream;\\n        pc._reverseStreams[newStream.id] = stream;\\n        stream = newStream;\\n      }\\n      origAddStream.apply(pc, [stream]);\\n    };\\n\\n    var origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\\n    window.RTCPeerConnection.prototype.removeStream = function(stream) {\\n      var pc = this;\\n      pc._streams = pc._streams || {};\\n      pc._reverseStreams = pc._reverseStreams || {};\\n\\n      origRemoveStream.apply(pc, [(pc._streams[stream.id] || stream)]);\\n      delete pc._reverseStreams[(pc._streams[stream.id] ?\\n          pc._streams[stream.id].id : stream.id)];\\n      delete pc._streams[stream.id];\\n    };\\n\\n    window.RTCPeerConnection.prototype.addTrack = function(track, stream) {\\n      var pc = this;\\n      if (pc.signalingState === 'closed') {\\n        throw new DOMException(\\n          'The RTCPeerConnection\\\\'s signalingState is \\\\'closed\\\\'.',\\n          'InvalidStateError');\\n      }\\n      var streams = [].slice.call(arguments, 1);\\n      if (streams.length !== 1 ||\\n          !streams[0].getTracks().find(function(t) {\\n            return t === track;\\n          })) {\\n        // this is not fully correct but all we can manage without\\n        // [[associated MediaStreams]] internal slot.\\n        throw new DOMException(\\n          'The adapter.js addTrack polyfill only supports a single ' +\\n          ' stream which is associated with the specified track.',\\n          'NotSupportedError');\\n      }\\n\\n      var alreadyExists = pc.getSenders().find(function(s) {\\n        return s.track === track;\\n      });\\n      if (alreadyExists) {\\n        throw new DOMException('Track already exists.',\\n            'InvalidAccessError');\\n      }\\n\\n      pc._streams = pc._streams || {};\\n      pc._reverseStreams = pc._reverseStreams || {};\\n      var oldStream = pc._streams[stream.id];\\n      if (oldStream) {\\n        // this is using odd Chrome behaviour, use with caution:\\n        // https://bugs.chromium.org/p/webrtc/issues/detail?id=7815\\n        // Note: we rely on the high-level addTrack/dtmf shim to\\n        // create the sender with a dtmf sender.\\n        oldStream.addTrack(track);\\n\\n        // Trigger ONN async.\\n        Promise.resolve().then(function() {\\n          pc.dispatchEvent(new Event('negotiationneeded'));\\n        });\\n      } else {\\n        var newStream = new window.MediaStream([track]);\\n        pc._streams[stream.id] = newStream;\\n        pc._reverseStreams[newStream.id] = stream;\\n        pc.addStream(newStream);\\n      }\\n      return pc.getSenders().find(function(s) {\\n        return s.track === track;\\n      });\\n    };\\n\\n    // replace the internal stream id with the external one and\\n    // vice versa.\\n    function replaceInternalStreamId(pc, description) {\\n      var sdp = description.sdp;\\n      Object.keys(pc._reverseStreams || []).forEach(function(internalId) {\\n        var externalStream = pc._reverseStreams[internalId];\\n        var internalStream = pc._streams[externalStream.id];\\n        sdp = sdp.replace(new RegExp(internalStream.id, 'g'),\\n            externalStream.id);\\n      });\\n      return new RTCSessionDescription({\\n        type: description.type,\\n        sdp: sdp\\n      });\\n    }\\n    function replaceExternalStreamId(pc, description) {\\n      var sdp = description.sdp;\\n      Object.keys(pc._reverseStreams || []).forEach(function(internalId) {\\n        var externalStream = pc._reverseStreams[internalId];\\n        var internalStream = pc._streams[externalStream.id];\\n        sdp = sdp.replace(new RegExp(externalStream.id, 'g'),\\n            internalStream.id);\\n      });\\n      return new RTCSessionDescription({\\n        type: description.type,\\n        sdp: sdp\\n      });\\n    }\\n    ['createOffer', 'createAnswer'].forEach(function(method) {\\n      var nativeMethod = window.RTCPeerConnection.prototype[method];\\n      window.RTCPeerConnection.prototype[method] = function() {\\n        var pc = this;\\n        var args = arguments;\\n        var isLegacyCall = arguments.length &&\\n            typeof arguments[0] === 'function';\\n        if (isLegacyCall) {\\n          return nativeMethod.apply(pc, [\\n            function(description) {\\n              var desc = replaceInternalStreamId(pc, description);\\n              args[0].apply(null, [desc]);\\n            },\\n            function(err) {\\n              if (args[1]) {\\n                args[1].apply(null, err);\\n              }\\n            }, arguments[2]\\n          ]);\\n        }\\n        return nativeMethod.apply(pc, arguments)\\n        .then(function(description) {\\n          return replaceInternalStreamId(pc, description);\\n        });\\n      };\\n    });\\n\\n    var origSetLocalDescription =\\n        window.RTCPeerConnection.prototype.setLocalDescription;\\n    window.RTCPeerConnection.prototype.setLocalDescription = function() {\\n      var pc = this;\\n      if (!arguments.length || !arguments[0].type) {\\n        return origSetLocalDescription.apply(pc, arguments);\\n      }\\n      arguments[0] = replaceExternalStreamId(pc, arguments[0]);\\n      return origSetLocalDescription.apply(pc, arguments);\\n    };\\n\\n    // TODO: mangle getStats: https://w3c.github.io/webrtc-stats/#dom-rtcmediastreamstats-streamidentifier\\n\\n    var origLocalDescription = Object.getOwnPropertyDescriptor(\\n        window.RTCPeerConnection.prototype, 'localDescription');\\n    Object.defineProperty(window.RTCPeerConnection.prototype,\\n        'localDescription', {\\n          get: function() {\\n            var pc = this;\\n            var description = origLocalDescription.get.apply(this);\\n            if (description.type === '') {\\n              return description;\\n            }\\n            return replaceInternalStreamId(pc, description);\\n          }\\n        });\\n\\n    window.RTCPeerConnection.prototype.removeTrack = function(sender) {\\n      var pc = this;\\n      if (pc.signalingState === 'closed') {\\n        throw new DOMException(\\n          'The RTCPeerConnection\\\\'s signalingState is \\\\'closed\\\\'.',\\n          'InvalidStateError');\\n      }\\n      // We can not yet check for sender instanceof RTCRtpSender\\n      // since we shim RTPSender. So we check if sender._pc is set.\\n      if (!sender._pc) {\\n        throw new DOMException('Argument 1 of RTCPeerConnection.removeTrack ' +\\n            'does not implement interface RTCRtpSender.', 'TypeError');\\n      }\\n      var isLocal = sender._pc === pc;\\n      if (!isLocal) {\\n        throw new DOMException('Sender was not created by this connection.',\\n            'InvalidAccessError');\\n      }\\n\\n      // Search for the native stream the senders track belongs to.\\n      pc._streams = pc._streams || {};\\n      var stream;\\n      Object.keys(pc._streams).forEach(function(streamid) {\\n        var hasTrack = pc._streams[streamid].getTracks().find(function(track) {\\n          return sender.track === track;\\n        });\\n        if (hasTrack) {\\n          stream = pc._streams[streamid];\\n        }\\n      });\\n\\n      if (stream) {\\n        if (stream.getTracks().length === 1) {\\n          // if this is the last track of the stream, remove the stream. This\\n          // takes care of any shimmed _senders.\\n          pc.removeStream(pc._reverseStreams[stream.id]);\\n        } else {\\n          // relying on the same odd chrome behaviour as above.\\n          stream.removeTrack(sender.track);\\n        }\\n        pc.dispatchEvent(new Event('negotiationneeded'));\\n      }\\n    };\\n  },\\n\\n  shimPeerConnection: function(window) {\\n    var browserDetails = utils.detectBrowser(window);\\n\\n    // The RTCPeerConnection object.\\n    if (!window.RTCPeerConnection) {\\n      window.RTCPeerConnection = function(pcConfig, pcConstraints) {\\n        // Translate iceTransportPolicy to iceTransports,\\n        // see https://code.google.com/p/webrtc/issues/detail?id=4869\\n        // this was fixed in M56 along with unprefixing RTCPeerConnection.\\n        logging('PeerConnection');\\n        if (pcConfig && pcConfig.iceTransportPolicy) {\\n          pcConfig.iceTransports = pcConfig.iceTransportPolicy;\\n        }\\n\\n        return new window.webkitRTCPeerConnection(pcConfig, pcConstraints);\\n      };\\n      window.RTCPeerConnection.prototype =\\n          window.webkitRTCPeerConnection.prototype;\\n      // wrap static methods. Currently just generateCertificate.\\n      if (window.webkitRTCPeerConnection.generateCertificate) {\\n        Object.defineProperty(window.RTCPeerConnection, 'generateCertificate', {\\n          get: function() {\\n            return window.webkitRTCPeerConnection.generateCertificate;\\n          }\\n        });\\n      }\\n    } else {\\n      // migrate from non-spec RTCIceServer.url to RTCIceServer.urls\\n      var OrigPeerConnection = window.RTCPeerConnection;\\n      window.RTCPeerConnection = function(pcConfig, pcConstraints) {\\n        if (pcConfig && pcConfig.iceServers) {\\n          var newIceServers = [];\\n          for (var i = 0; i < pcConfig.iceServers.length; i++) {\\n            var server = pcConfig.iceServers[i];\\n            if (!server.hasOwnProperty('urls') &&\\n                server.hasOwnProperty('url')) {\\n              utils.deprecated('RTCIceServer.url', 'RTCIceServer.urls');\\n              server = JSON.parse(JSON.stringify(server));\\n              server.urls = server.url;\\n              newIceServers.push(server);\\n            } else {\\n              newIceServers.push(pcConfig.iceServers[i]);\\n            }\\n          }\\n          pcConfig.iceServers = newIceServers;\\n        }\\n        return new OrigPeerConnection(pcConfig, pcConstraints);\\n      };\\n      window.RTCPeerConnection.prototype = OrigPeerConnection.prototype;\\n      // wrap static methods. Currently just generateCertificate.\\n      Object.defineProperty(window.RTCPeerConnection, 'generateCertificate', {\\n        get: function() {\\n          return OrigPeerConnection.generateCertificate;\\n        }\\n      });\\n    }\\n\\n    var origGetStats = window.RTCPeerConnection.prototype.getStats;\\n    window.RTCPeerConnection.prototype.getStats = function(selector,\\n        successCallback, errorCallback) {\\n      var self = this;\\n      var args = arguments;\\n\\n      // If selector is a function then we are in the old style stats so just\\n      // pass back the original getStats format to avoid breaking old users.\\n      if (arguments.length > 0 && typeof selector === 'function') {\\n        return origGetStats.apply(this, arguments);\\n      }\\n\\n      // When spec-style getStats is supported, return those when called with\\n      // either no arguments or the selector argument is null.\\n      if (origGetStats.length === 0 && (arguments.length === 0 ||\\n          typeof arguments[0] !== 'function')) {\\n        return origGetStats.apply(this, []);\\n      }\\n\\n      var fixChromeStats_ = function(response) {\\n        var standardReport = {};\\n        var reports = response.result();\\n        reports.forEach(function(report) {\\n          var standardStats = {\\n            id: report.id,\\n            timestamp: report.timestamp,\\n            type: {\\n              localcandidate: 'local-candidate',\\n              remotecandidate: 'remote-candidate'\\n            }[report.type] || report.type\\n          };\\n          report.names().forEach(function(name) {\\n            standardStats[name] = report.stat(name);\\n          });\\n          standardReport[standardStats.id] = standardStats;\\n        });\\n\\n        return standardReport;\\n      };\\n\\n      // shim getStats with maplike support\\n      var makeMapStats = function(stats) {\\n        return new Map(Object.keys(stats).map(function(key) {\\n          return [key, stats[key]];\\n        }));\\n      };\\n\\n      if (arguments.length >= 2) {\\n        var successCallbackWrapper_ = function(response) {\\n          args[1](makeMapStats(fixChromeStats_(response)));\\n        };\\n\\n        return origGetStats.apply(this, [successCallbackWrapper_,\\n          arguments[0]]);\\n      }\\n\\n      // promise-support\\n      return new Promise(function(resolve, reject) {\\n        origGetStats.apply(self, [\\n          function(response) {\\n            resolve(makeMapStats(fixChromeStats_(response)));\\n          }, reject]);\\n      }).then(successCallback, errorCallback);\\n    };\\n\\n    // add promise support -- natively available in Chrome 51\\n    if (browserDetails.version < 51) {\\n      ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\\n          .forEach(function(method) {\\n            var nativeMethod = window.RTCPeerConnection.prototype[method];\\n            window.RTCPeerConnection.prototype[method] = function() {\\n              var args = arguments;\\n              var self = this;\\n              var promise = new Promise(function(resolve, reject) {\\n                nativeMethod.apply(self, [args[0], resolve, reject]);\\n              });\\n              if (args.length < 2) {\\n                return promise;\\n              }\\n              return promise.then(function() {\\n                args[1].apply(null, []);\\n              },\\n              function(err) {\\n                if (args.length >= 3) {\\n                  args[2].apply(null, [err]);\\n                }\\n              });\\n            };\\n          });\\n    }\\n\\n    // promise support for createOffer and createAnswer. Available (without\\n    // bugs) since M52: crbug/619289\\n    if (browserDetails.version < 52) {\\n      ['createOffer', 'createAnswer'].forEach(function(method) {\\n        var nativeMethod = window.RTCPeerConnection.prototype[method];\\n        window.RTCPeerConnection.prototype[method] = function() {\\n          var self = this;\\n          if (arguments.length < 1 || (arguments.length === 1 &&\\n              typeof arguments[0] === 'object')) {\\n            var opts = arguments.length === 1 ? arguments[0] : undefined;\\n            return new Promise(function(resolve, reject) {\\n              nativeMethod.apply(self, [resolve, reject, opts]);\\n            });\\n          }\\n          return nativeMethod.apply(this, arguments);\\n        };\\n      });\\n    }\\n\\n    // shim implicit creation of RTCSessionDescription/RTCIceCandidate\\n    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\\n        .forEach(function(method) {\\n          var nativeMethod = window.RTCPeerConnection.prototype[method];\\n          window.RTCPeerConnection.prototype[method] = function() {\\n            arguments[0] = new ((method === 'addIceCandidate') ?\\n                window.RTCIceCandidate :\\n                window.RTCSessionDescription)(arguments[0]);\\n            return nativeMethod.apply(this, arguments);\\n          };\\n        });\\n\\n    // support for addIceCandidate(null or undefined)\\n    var nativeAddIceCandidate =\\n        window.RTCPeerConnection.prototype.addIceCandidate;\\n    window.RTCPeerConnection.prototype.addIceCandidate = function() {\\n      if (!arguments[0]) {\\n        if (arguments[1]) {\\n          arguments[1].apply(null);\\n        }\\n        return Promise.resolve();\\n      }\\n      return nativeAddIceCandidate.apply(this, arguments);\\n    };\\n  }\\n};\\n\\n\\n// Expose public methods.\\nmodule.exports = {\\n  shimMediaStream: chromeShim.shimMediaStream,\\n  shimOnTrack: chromeShim.shimOnTrack,\\n  shimAddTrackRemoveTrack: chromeShim.shimAddTrackRemoveTrack,\\n  shimGetSendersWithDtmf: chromeShim.shimGetSendersWithDtmf,\\n  shimSourceObject: chromeShim.shimSourceObject,\\n  shimPeerConnection: chromeShim.shimPeerConnection,\\n  shimGetUserMedia: require('./getusermedia')\\n};\\n\",\"/*\\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\\n *\\n *  Use of this source code is governed by a BSD-style license\\n *  that can be found in the LICENSE file in the root of the source\\n *  tree.\\n */\\n /* eslint-env node */\\n'use strict';\\nvar utils = require('../utils.js');\\nvar logging = utils.log;\\n\\n// Expose public methods.\\nmodule.exports = function(window) {\\n  var browserDetails = utils.detectBrowser(window);\\n  var navigator = window && window.navigator;\\n\\n  var constraintsToChrome_ = function(c) {\\n    if (typeof c !== 'object' || c.mandatory || c.optional) {\\n      return c;\\n    }\\n    var cc = {};\\n    Object.keys(c).forEach(function(key) {\\n      if (key === 'require' || key === 'advanced' || key === 'mediaSource') {\\n        return;\\n      }\\n      var r = (typeof c[key] === 'object') ? c[key] : {ideal: c[key]};\\n      if (r.exact !== undefined && typeof r.exact === 'number') {\\n        r.min = r.max = r.exact;\\n      }\\n      var oldname_ = function(prefix, name) {\\n        if (prefix) {\\n          return prefix + name.charAt(0).toUpperCase() + name.slice(1);\\n        }\\n        return (name === 'deviceId') ? 'sourceId' : name;\\n      };\\n      if (r.ideal !== undefined) {\\n        cc.optional = cc.optional || [];\\n        var oc = {};\\n        if (typeof r.ideal === 'number') {\\n          oc[oldname_('min', key)] = r.ideal;\\n          cc.optional.push(oc);\\n          oc = {};\\n          oc[oldname_('max', key)] = r.ideal;\\n          cc.optional.push(oc);\\n        } else {\\n          oc[oldname_('', key)] = r.ideal;\\n          cc.optional.push(oc);\\n        }\\n      }\\n      if (r.exact !== undefined && typeof r.exact !== 'number') {\\n        cc.mandatory = cc.mandatory || {};\\n        cc.mandatory[oldname_('', key)] = r.exact;\\n      } else {\\n        ['min', 'max'].forEach(function(mix) {\\n          if (r[mix] !== undefined) {\\n            cc.mandatory = cc.mandatory || {};\\n            cc.mandatory[oldname_(mix, key)] = r[mix];\\n          }\\n        });\\n      }\\n    });\\n    if (c.advanced) {\\n      cc.optional = (cc.optional || []).concat(c.advanced);\\n    }\\n    return cc;\\n  };\\n\\n  var shimConstraints_ = function(constraints, func) {\\n    if (browserDetails.version >= 61) {\\n      return func(constraints);\\n    }\\n    constraints = JSON.parse(JSON.stringify(constraints));\\n    if (constraints && typeof constraints.audio === 'object') {\\n      var remap = function(obj, a, b) {\\n        if (a in obj && !(b in obj)) {\\n          obj[b] = obj[a];\\n          delete obj[a];\\n        }\\n      };\\n      constraints = JSON.parse(JSON.stringify(constraints));\\n      remap(constraints.audio, 'autoGainControl', 'googAutoGainControl');\\n      remap(constraints.audio, 'noiseSuppression', 'googNoiseSuppression');\\n      constraints.audio = constraintsToChrome_(constraints.audio);\\n    }\\n    if (constraints && typeof constraints.video === 'object') {\\n      // Shim facingMode for mobile & surface pro.\\n      var face = constraints.video.facingMode;\\n      face = face && ((typeof face === 'object') ? face : {ideal: face});\\n      var getSupportedFacingModeLies = browserDetails.version < 66;\\n\\n      if ((face && (face.exact === 'user' || face.exact === 'environment' ||\\n                    face.ideal === 'user' || face.ideal === 'environment')) &&\\n          !(navigator.mediaDevices.getSupportedConstraints &&\\n            navigator.mediaDevices.getSupportedConstraints().facingMode &&\\n            !getSupportedFacingModeLies)) {\\n        delete constraints.video.facingMode;\\n        var matches;\\n        if (face.exact === 'environment' || face.ideal === 'environment') {\\n          matches = ['back', 'rear'];\\n        } else if (face.exact === 'user' || face.ideal === 'user') {\\n          matches = ['front'];\\n        }\\n        if (matches) {\\n          // Look for matches in label, or use last cam for back (typical).\\n          return navigator.mediaDevices.enumerateDevices()\\n          .then(function(devices) {\\n            devices = devices.filter(function(d) {\\n              return d.kind === 'videoinput';\\n            });\\n            var dev = devices.find(function(d) {\\n              return matches.some(function(match) {\\n                return d.label.toLowerCase().indexOf(match) !== -1;\\n              });\\n            });\\n            if (!dev && devices.length && matches.indexOf('back') !== -1) {\\n              dev = devices[devices.length - 1]; // more likely the back cam\\n            }\\n            if (dev) {\\n              constraints.video.deviceId = face.exact ? {exact: dev.deviceId} :\\n                                                        {ideal: dev.deviceId};\\n            }\\n            constraints.video = constraintsToChrome_(constraints.video);\\n            logging('chrome: ' + JSON.stringify(constraints));\\n            return func(constraints);\\n          });\\n        }\\n      }\\n      constraints.video = constraintsToChrome_(constraints.video);\\n    }\\n    logging('chrome: ' + JSON.stringify(constraints));\\n    return func(constraints);\\n  };\\n\\n  var shimError_ = function(e) {\\n    return {\\n      name: {\\n        PermissionDeniedError: 'NotAllowedError',\\n        InvalidStateError: 'NotReadableError',\\n        DevicesNotFoundError: 'NotFoundError',\\n        ConstraintNotSatisfiedError: 'OverconstrainedError',\\n        TrackStartError: 'NotReadableError',\\n        MediaDeviceFailedDueToShutdown: 'NotReadableError',\\n        MediaDeviceKillSwitchOn: 'NotReadableError'\\n      }[e.name] || e.name,\\n      message: e.message,\\n      constraint: e.constraintName,\\n      toString: function() {\\n        return this.name + (this.message && ': ') + this.message;\\n      }\\n    };\\n  };\\n\\n  var getUserMedia_ = function(constraints, onSuccess, onError) {\\n    shimConstraints_(constraints, function(c) {\\n      navigator.webkitGetUserMedia(c, onSuccess, function(e) {\\n        if (onError) {\\n          onError(shimError_(e));\\n        }\\n      });\\n    });\\n  };\\n\\n  navigator.getUserMedia = getUserMedia_;\\n\\n  // Returns the result of getUserMedia as a Promise.\\n  var getUserMediaPromise_ = function(constraints) {\\n    return new Promise(function(resolve, reject) {\\n      navigator.getUserMedia(constraints, resolve, reject);\\n    });\\n  };\\n\\n  if (!navigator.mediaDevices) {\\n    navigator.mediaDevices = {\\n      getUserMedia: getUserMediaPromise_,\\n      enumerateDevices: function() {\\n        return new Promise(function(resolve) {\\n          var kinds = {audio: 'audioinput', video: 'videoinput'};\\n          return window.MediaStreamTrack.getSources(function(devices) {\\n            resolve(devices.map(function(device) {\\n              return {label: device.label,\\n                kind: kinds[device.kind],\\n                deviceId: device.id,\\n                groupId: ''};\\n            }));\\n          });\\n        });\\n      },\\n      getSupportedConstraints: function() {\\n        return {\\n          deviceId: true, echoCancellation: true, facingMode: true,\\n          frameRate: true, height: true, width: true\\n        };\\n      }\\n    };\\n  }\\n\\n  // A shim for getUserMedia method on the mediaDevices object.\\n  // TODO(KaptenJansson) remove once implemented in Chrome stable.\\n  if (!navigator.mediaDevices.getUserMedia) {\\n    navigator.mediaDevices.getUserMedia = function(constraints) {\\n      return getUserMediaPromise_(constraints);\\n    };\\n  } else {\\n    // Even though Chrome 45 has navigator.mediaDevices and a getUserMedia\\n    // function which returns a Promise, it does not accept spec-style\\n    // constraints.\\n    var origGetUserMedia = navigator.mediaDevices.getUserMedia.\\n        bind(navigator.mediaDevices);\\n    navigator.mediaDevices.getUserMedia = function(cs) {\\n      return shimConstraints_(cs, function(c) {\\n        return origGetUserMedia(c).then(function(stream) {\\n          if (c.audio && !stream.getAudioTracks().length ||\\n              c.video && !stream.getVideoTracks().length) {\\n            stream.getTracks().forEach(function(track) {\\n              track.stop();\\n            });\\n            throw new DOMException('', 'NotFoundError');\\n          }\\n          return stream;\\n        }, function(e) {\\n          return Promise.reject(shimError_(e));\\n        });\\n      });\\n    };\\n  }\\n\\n  // Dummy devicechange event methods.\\n  // TODO(KaptenJansson) remove once implemented in Chrome stable.\\n  if (typeof navigator.mediaDevices.addEventListener === 'undefined') {\\n    navigator.mediaDevices.addEventListener = function() {\\n      logging('Dummy mediaDevices.addEventListener called.');\\n    };\\n  }\\n  if (typeof navigator.mediaDevices.removeEventListener === 'undefined') {\\n    navigator.mediaDevices.removeEventListener = function() {\\n      logging('Dummy mediaDevices.removeEventListener called.');\\n    };\\n  }\\n};\\n\",\"/*\\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\\n *\\n *  Use of this source code is governed by a BSD-style license\\n *  that can be found in the LICENSE file in the root of the source\\n *  tree.\\n */\\n /* eslint-env node */\\n'use strict';\\n\\nvar utils = require('../utils');\\nvar shimRTCPeerConnection = require('rtcpeerconnection-shim');\\n\\nmodule.exports = {\\n  shimGetUserMedia: require('./getusermedia'),\\n  shimPeerConnection: function(window) {\\n    var browserDetails = utils.detectBrowser(window);\\n\\n    if (window.RTCIceGatherer) {\\n      // ORTC defines an RTCIceCandidate object but no constructor.\\n      // Not implemented in Edge.\\n      if (!window.RTCIceCandidate) {\\n        window.RTCIceCandidate = function(args) {\\n          return args;\\n        };\\n      }\\n      // ORTC does not have a session description object but\\n      // other browsers (i.e. Chrome) that will support both PC and ORTC\\n      // in the future might have this defined already.\\n      if (!window.RTCSessionDescription) {\\n        window.RTCSessionDescription = function(args) {\\n          return args;\\n        };\\n      }\\n      // this adds an additional event listener to MediaStrackTrack that signals\\n      // when a tracks enabled property was changed. Workaround for a bug in\\n      // addStream, see below. No longer required in 15025+\\n      if (browserDetails.version < 15025) {\\n        var origMSTEnabled = Object.getOwnPropertyDescriptor(\\n            window.MediaStreamTrack.prototype, 'enabled');\\n        Object.defineProperty(window.MediaStreamTrack.prototype, 'enabled', {\\n          set: function(value) {\\n            origMSTEnabled.set.call(this, value);\\n            var ev = new Event('enabled');\\n            ev.enabled = value;\\n            this.dispatchEvent(ev);\\n          }\\n        });\\n      }\\n    }\\n\\n    // ORTC defines the DTMF sender a bit different.\\n    // https://github.com/w3c/ortc/issues/714\\n    if (window.RTCRtpSender && !('dtmf' in window.RTCRtpSender.prototype)) {\\n      Object.defineProperty(window.RTCRtpSender.prototype, 'dtmf', {\\n        get: function() {\\n          if (this._dtmf === undefined) {\\n            if (this.track.kind === 'audio') {\\n              this._dtmf = new window.RTCDtmfSender(this);\\n            } else if (this.track.kind === 'video') {\\n              this._dtmf = null;\\n            }\\n          }\\n          return this._dtmf;\\n        }\\n      });\\n    }\\n\\n    window.RTCPeerConnection =\\n        shimRTCPeerConnection(window, browserDetails.version);\\n  },\\n  shimReplaceTrack: function(window) {\\n    // ORTC has replaceTrack -- https://github.com/w3c/ortc/issues/614\\n    if (window.RTCRtpSender &&\\n        !('replaceTrack' in window.RTCRtpSender.prototype)) {\\n      window.RTCRtpSender.prototype.replaceTrack =\\n          window.RTCRtpSender.prototype.setTrack;\\n    }\\n  }\\n};\\n\",\"/*\\n *  Copyright (c) 2017 The WebRTC project authors. All Rights Reserved.\\n *\\n *  Use of this source code is governed by a BSD-style license\\n *  that can be found in the LICENSE file in the root of the source\\n *  tree.\\n */\\n /* eslint-env node */\\n'use strict';\\n\\nvar SDPUtils = require('sdp');\\n\\nfunction fixStatsType(stat) {\\n  return {\\n    inboundrtp: 'inbound-rtp',\\n    outboundrtp: 'outbound-rtp',\\n    candidatepair: 'candidate-pair',\\n    localcandidate: 'local-candidate',\\n    remotecandidate: 'remote-candidate'\\n  }[stat.type] || stat.type;\\n}\\n\\nfunction writeMediaSection(transceiver, caps, type, stream, dtlsRole) {\\n  var sdp = SDPUtils.writeRtpDescription(transceiver.kind, caps);\\n\\n  // Map ICE parameters (ufrag, pwd) to SDP.\\n  sdp += SDPUtils.writeIceParameters(\\n      transceiver.iceGatherer.getLocalParameters());\\n\\n  // Map DTLS parameters to SDP.\\n  sdp += SDPUtils.writeDtlsParameters(\\n      transceiver.dtlsTransport.getLocalParameters(),\\n      type === 'offer' ? 'actpass' : dtlsRole || 'active');\\n\\n  sdp += 'a=mid:' + transceiver.mid + '\\\\r\\\\n';\\n\\n  if (transceiver.rtpSender && transceiver.rtpReceiver) {\\n    sdp += 'a=sendrecv\\\\r\\\\n';\\n  } else if (transceiver.rtpSender) {\\n    sdp += 'a=sendonly\\\\r\\\\n';\\n  } else if (transceiver.rtpReceiver) {\\n    sdp += 'a=recvonly\\\\r\\\\n';\\n  } else {\\n    sdp += 'a=inactive\\\\r\\\\n';\\n  }\\n\\n  if (transceiver.rtpSender) {\\n    var trackId = transceiver.rtpSender._initialTrackId ||\\n        transceiver.rtpSender.track.id;\\n    transceiver.rtpSender._initialTrackId = trackId;\\n    // spec.\\n    var msid = 'msid:' + (stream ? stream.id : '-') + ' ' +\\n        trackId + '\\\\r\\\\n';\\n    sdp += 'a=' + msid;\\n    // for Chrome. Legacy should no longer be required.\\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\\n        ' ' + msid;\\n\\n    // RTX\\n    if (transceiver.sendEncodingParameters[0].rtx) {\\n      sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\\n          ' ' + msid;\\n      sdp += 'a=ssrc-group:FID ' +\\n          transceiver.sendEncodingParameters[0].ssrc + ' ' +\\n          transceiver.sendEncodingParameters[0].rtx.ssrc +\\n          '\\\\r\\\\n';\\n    }\\n  }\\n  // FIXME: this should be written by writeRtpDescription.\\n  sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\\n      ' cname:' + SDPUtils.localCName + '\\\\r\\\\n';\\n  if (transceiver.rtpSender && transceiver.sendEncodingParameters[0].rtx) {\\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\\n        ' cname:' + SDPUtils.localCName + '\\\\r\\\\n';\\n  }\\n  return sdp;\\n}\\n\\n// Edge does not like\\n// 1) stun: filtered after 14393 unless ?transport=udp is present\\n// 2) turn: that does not have all of turn:host:port?transport=udp\\n// 3) turn: with ipv6 addresses\\n// 4) turn: occurring muliple times\\nfunction filterIceServers(iceServers, edgeVersion) {\\n  var hasTurn = false;\\n  iceServers = JSON.parse(JSON.stringify(iceServers));\\n  return iceServers.filter(function(server) {\\n    if (server && (server.urls || server.url)) {\\n      var urls = server.urls || server.url;\\n      if (server.url && !server.urls) {\\n        console.warn('RTCIceServer.url is deprecated! Use urls instead.');\\n      }\\n      var isString = typeof urls === 'string';\\n      if (isString) {\\n        urls = [urls];\\n      }\\n      urls = urls.filter(function(url) {\\n        var validTurn = url.indexOf('turn:') === 0 &&\\n            url.indexOf('transport=udp') !== -1 &&\\n            url.indexOf('turn:[') === -1 &&\\n            !hasTurn;\\n\\n        if (validTurn) {\\n          hasTurn = true;\\n          return true;\\n        }\\n        return url.indexOf('stun:') === 0 && edgeVersion >= 14393 &&\\n            url.indexOf('?transport=udp') === -1;\\n      });\\n\\n      delete server.url;\\n      server.urls = isString ? urls[0] : urls;\\n      return !!urls.length;\\n    }\\n  });\\n}\\n\\n// Determines the intersection of local and remote capabilities.\\nfunction getCommonCapabilities(localCapabilities, remoteCapabilities) {\\n  var commonCapabilities = {\\n    codecs: [],\\n    headerExtensions: [],\\n    fecMechanisms: []\\n  };\\n\\n  var findCodecByPayloadType = function(pt, codecs) {\\n    pt = parseInt(pt, 10);\\n    for (var i = 0; i < codecs.length; i++) {\\n      if (codecs[i].payloadType === pt ||\\n          codecs[i].preferredPayloadType === pt) {\\n        return codecs[i];\\n      }\\n    }\\n  };\\n\\n  var rtxCapabilityMatches = function(lRtx, rRtx, lCodecs, rCodecs) {\\n    var lCodec = findCodecByPayloadType(lRtx.parameters.apt, lCodecs);\\n    var rCodec = findCodecByPayloadType(rRtx.parameters.apt, rCodecs);\\n    return lCodec && rCodec &&\\n        lCodec.name.toLowerCase() === rCodec.name.toLowerCase();\\n  };\\n\\n  localCapabilities.codecs.forEach(function(lCodec) {\\n    for (var i = 0; i < remoteCapabilities.codecs.length; i++) {\\n      var rCodec = remoteCapabilities.codecs[i];\\n      if (lCodec.name.toLowerCase() === rCodec.name.toLowerCase() &&\\n          lCodec.clockRate === rCodec.clockRate) {\\n        if (lCodec.name.toLowerCase() === 'rtx' &&\\n            lCodec.parameters && rCodec.parameters.apt) {\\n          // for RTX we need to find the local rtx that has a apt\\n          // which points to the same local codec as the remote one.\\n          if (!rtxCapabilityMatches(lCodec, rCodec,\\n              localCapabilities.codecs, remoteCapabilities.codecs)) {\\n            continue;\\n          }\\n        }\\n        rCodec = JSON.parse(JSON.stringify(rCodec)); // deepcopy\\n        // number of channels is the highest common number of channels\\n        rCodec.numChannels = Math.min(lCodec.numChannels,\\n            rCodec.numChannels);\\n        // push rCodec so we reply with offerer payload type\\n        commonCapabilities.codecs.push(rCodec);\\n\\n        // determine common feedback mechanisms\\n        rCodec.rtcpFeedback = rCodec.rtcpFeedback.filter(function(fb) {\\n          for (var j = 0; j < lCodec.rtcpFeedback.length; j++) {\\n            if (lCodec.rtcpFeedback[j].type === fb.type &&\\n                lCodec.rtcpFeedback[j].parameter === fb.parameter) {\\n              return true;\\n            }\\n          }\\n          return false;\\n        });\\n        // FIXME: also need to determine .parameters\\n        //  see https://github.com/openpeer/ortc/issues/569\\n        break;\\n      }\\n    }\\n  });\\n\\n  localCapabilities.headerExtensions.forEach(function(lHeaderExtension) {\\n    for (var i = 0; i < remoteCapabilities.headerExtensions.length;\\n         i++) {\\n      var rHeaderExtension = remoteCapabilities.headerExtensions[i];\\n      if (lHeaderExtension.uri === rHeaderExtension.uri) {\\n        commonCapabilities.headerExtensions.push(rHeaderExtension);\\n        break;\\n      }\\n    }\\n  });\\n\\n  // FIXME: fecMechanisms\\n  return commonCapabilities;\\n}\\n\\n// is action=setLocalDescription with type allowed in signalingState\\nfunction isActionAllowedInSignalingState(action, type, signalingState) {\\n  return {\\n    offer: {\\n      setLocalDescription: ['stable', 'have-local-offer'],\\n      setRemoteDescription: ['stable', 'have-remote-offer']\\n    },\\n    answer: {\\n      setLocalDescription: ['have-remote-offer', 'have-local-pranswer'],\\n      setRemoteDescription: ['have-local-offer', 'have-remote-pranswer']\\n    }\\n  }[type][action].indexOf(signalingState) !== -1;\\n}\\n\\nfunction maybeAddCandidate(iceTransport, candidate) {\\n  // Edge's internal representation adds some fields therefore\\n  // not all fieldѕ are taken into account.\\n  var alreadyAdded = iceTransport.getRemoteCandidates()\\n      .find(function(remoteCandidate) {\\n        return candidate.foundation === remoteCandidate.foundation &&\\n            candidate.ip === remoteCandidate.ip &&\\n            candidate.port === remoteCandidate.port &&\\n            candidate.priority === remoteCandidate.priority &&\\n            candidate.protocol === remoteCandidate.protocol &&\\n            candidate.type === remoteCandidate.type;\\n      });\\n  if (!alreadyAdded) {\\n    iceTransport.addRemoteCandidate(candidate);\\n  }\\n  return !alreadyAdded;\\n}\\n\\n\\nfunction makeError(name, description) {\\n  var e = new Error(description);\\n  e.name = name;\\n  // legacy error codes from https://heycam.github.io/webidl/#idl-DOMException-error-names\\n  e.code = {\\n    NotSupportedError: 9,\\n    InvalidStateError: 11,\\n    InvalidAccessError: 15,\\n    TypeError: undefined,\\n    OperationError: undefined\\n  }[name];\\n  return e;\\n}\\n\\nmodule.exports = function(window, edgeVersion) {\\n  // https://w3c.github.io/mediacapture-main/#mediastream\\n  // Helper function to add the track to the stream and\\n  // dispatch the event ourselves.\\n  function addTrackToStreamAndFireEvent(track, stream) {\\n    stream.addTrack(track);\\n    stream.dispatchEvent(new window.MediaStreamTrackEvent('addtrack',\\n        {track: track}));\\n  }\\n\\n  function removeTrackFromStreamAndFireEvent(track, stream) {\\n    stream.removeTrack(track);\\n    stream.dispatchEvent(new window.MediaStreamTrackEvent('removetrack',\\n        {track: track}));\\n  }\\n\\n  function fireAddTrack(pc, track, receiver, streams) {\\n    var trackEvent = new Event('track');\\n    trackEvent.track = track;\\n    trackEvent.receiver = receiver;\\n    trackEvent.transceiver = {receiver: receiver};\\n    trackEvent.streams = streams;\\n    window.setTimeout(function() {\\n      pc._dispatchEvent('track', trackEvent);\\n    });\\n  }\\n\\n  var RTCPeerConnection = function(config) {\\n    var pc = this;\\n\\n    var _eventTarget = document.createDocumentFragment();\\n    ['addEventListener', 'removeEventListener', 'dispatchEvent']\\n        .forEach(function(method) {\\n          pc[method] = _eventTarget[method].bind(_eventTarget);\\n        });\\n\\n    this.canTrickleIceCandidates = null;\\n\\n    this.needNegotiation = false;\\n\\n    this.localStreams = [];\\n    this.remoteStreams = [];\\n\\n    this._localDescription = null;\\n    this._remoteDescription = null;\\n\\n    this.signalingState = 'stable';\\n    this.iceConnectionState = 'new';\\n    this.connectionState = 'new';\\n    this.iceGatheringState = 'new';\\n\\n    config = JSON.parse(JSON.stringify(config || {}));\\n\\n    this.usingBundle = config.bundlePolicy === 'max-bundle';\\n    if (config.rtcpMuxPolicy === 'negotiate') {\\n      throw(makeError('NotSupportedError',\\n          'rtcpMuxPolicy \\\\'negotiate\\\\' is not supported'));\\n    } else if (!config.rtcpMuxPolicy) {\\n      config.rtcpMuxPolicy = 'require';\\n    }\\n\\n    switch (config.iceTransportPolicy) {\\n      case 'all':\\n      case 'relay':\\n        break;\\n      default:\\n        config.iceTransportPolicy = 'all';\\n        break;\\n    }\\n\\n    switch (config.bundlePolicy) {\\n      case 'balanced':\\n      case 'max-compat':\\n      case 'max-bundle':\\n        break;\\n      default:\\n        config.bundlePolicy = 'balanced';\\n        break;\\n    }\\n\\n    config.iceServers = filterIceServers(config.iceServers || [], edgeVersion);\\n\\n    this._iceGatherers = [];\\n    if (config.iceCandidatePoolSize) {\\n      for (var i = config.iceCandidatePoolSize; i > 0; i--) {\\n        this._iceGatherers.push(new window.RTCIceGatherer({\\n          iceServers: config.iceServers,\\n          gatherPolicy: config.iceTransportPolicy\\n        }));\\n      }\\n    } else {\\n      config.iceCandidatePoolSize = 0;\\n    }\\n\\n    this._config = config;\\n\\n    // per-track iceGathers, iceTransports, dtlsTransports, rtpSenders, ...\\n    // everything that is needed to describe a SDP m-line.\\n    this.transceivers = [];\\n\\n    this._sdpSessionId = SDPUtils.generateSessionId();\\n    this._sdpSessionVersion = 0;\\n\\n    this._dtlsRole = undefined; // role for a=setup to use in answers.\\n\\n    this._isClosed = false;\\n  };\\n\\n  Object.defineProperty(RTCPeerConnection.prototype, 'localDescription', {\\n    configurable: true,\\n    get: function() {\\n      return this._localDescription;\\n    }\\n  });\\n  Object.defineProperty(RTCPeerConnection.prototype, 'remoteDescription', {\\n    configurable: true,\\n    get: function() {\\n      return this._remoteDescription;\\n    }\\n  });\\n\\n  // set up event handlers on prototype\\n  RTCPeerConnection.prototype.onicecandidate = null;\\n  RTCPeerConnection.prototype.onaddstream = null;\\n  RTCPeerConnection.prototype.ontrack = null;\\n  RTCPeerConnection.prototype.onremovestream = null;\\n  RTCPeerConnection.prototype.onsignalingstatechange = null;\\n  RTCPeerConnection.prototype.oniceconnectionstatechange = null;\\n  RTCPeerConnection.prototype.onconnectionstatechange = null;\\n  RTCPeerConnection.prototype.onicegatheringstatechange = null;\\n  RTCPeerConnection.prototype.onnegotiationneeded = null;\\n  RTCPeerConnection.prototype.ondatachannel = null;\\n\\n  RTCPeerConnection.prototype._dispatchEvent = function(name, event) {\\n    if (this._isClosed) {\\n      return;\\n    }\\n    this.dispatchEvent(event);\\n    if (typeof this['on' + name] === 'function') {\\n      this['on' + name](event);\\n    }\\n  };\\n\\n  RTCPeerConnection.prototype._emitGatheringStateChange = function() {\\n    var event = new Event('icegatheringstatechange');\\n    this._dispatchEvent('icegatheringstatechange', event);\\n  };\\n\\n  RTCPeerConnection.prototype.getConfiguration = function() {\\n    return this._config;\\n  };\\n\\n  RTCPeerConnection.prototype.getLocalStreams = function() {\\n    return this.localStreams;\\n  };\\n\\n  RTCPeerConnection.prototype.getRemoteStreams = function() {\\n    return this.remoteStreams;\\n  };\\n\\n  // internal helper to create a transceiver object.\\n  // (which is not yet the same as the WebRTC 1.0 transceiver)\\n  RTCPeerConnection.prototype._createTransceiver = function(kind, doNotAdd) {\\n    var hasBundleTransport = this.transceivers.length > 0;\\n    var transceiver = {\\n      track: null,\\n      iceGatherer: null,\\n      iceTransport: null,\\n      dtlsTransport: null,\\n      localCapabilities: null,\\n      remoteCapabilities: null,\\n      rtpSender: null,\\n      rtpReceiver: null,\\n      kind: kind,\\n      mid: null,\\n      sendEncodingParameters: null,\\n      recvEncodingParameters: null,\\n      stream: null,\\n      associatedRemoteMediaStreams: [],\\n      wantReceive: true\\n    };\\n    if (this.usingBundle && hasBundleTransport) {\\n      transceiver.iceTransport = this.transceivers[0].iceTransport;\\n      transceiver.dtlsTransport = this.transceivers[0].dtlsTransport;\\n    } else {\\n      var transports = this._createIceAndDtlsTransports();\\n      transceiver.iceTransport = transports.iceTransport;\\n      transceiver.dtlsTransport = transports.dtlsTransport;\\n    }\\n    if (!doNotAdd) {\\n      this.transceivers.push(transceiver);\\n    }\\n    return transceiver;\\n  };\\n\\n  RTCPeerConnection.prototype.addTrack = function(track, stream) {\\n    if (this._isClosed) {\\n      throw makeError('InvalidStateError',\\n          'Attempted to call addTrack on a closed peerconnection.');\\n    }\\n\\n    var alreadyExists = this.transceivers.find(function(s) {\\n      return s.track === track;\\n    });\\n\\n    if (alreadyExists) {\\n      throw makeError('InvalidAccessError', 'Track already exists.');\\n    }\\n\\n    var transceiver;\\n    for (var i = 0; i < this.transceivers.length; i++) {\\n      if (!this.transceivers[i].track &&\\n          this.transceivers[i].kind === track.kind) {\\n        transceiver = this.transceivers[i];\\n      }\\n    }\\n    if (!transceiver) {\\n      transceiver = this._createTransceiver(track.kind);\\n    }\\n\\n    this._maybeFireNegotiationNeeded();\\n\\n    if (this.localStreams.indexOf(stream) === -1) {\\n      this.localStreams.push(stream);\\n    }\\n\\n    transceiver.track = track;\\n    transceiver.stream = stream;\\n    transceiver.rtpSender = new window.RTCRtpSender(track,\\n        transceiver.dtlsTransport);\\n    return transceiver.rtpSender;\\n  };\\n\\n  RTCPeerConnection.prototype.addStream = function(stream) {\\n    var pc = this;\\n    if (edgeVersion >= 15025) {\\n      stream.getTracks().forEach(function(track) {\\n        pc.addTrack(track, stream);\\n      });\\n    } else {\\n      // Clone is necessary for local demos mostly, attaching directly\\n      // to two different senders does not work (build 10547).\\n      // Fixed in 15025 (or earlier)\\n      var clonedStream = stream.clone();\\n      stream.getTracks().forEach(function(track, idx) {\\n        var clonedTrack = clonedStream.getTracks()[idx];\\n        track.addEventListener('enabled', function(event) {\\n          clonedTrack.enabled = event.enabled;\\n        });\\n      });\\n      clonedStream.getTracks().forEach(function(track) {\\n        pc.addTrack(track, clonedStream);\\n      });\\n    }\\n  };\\n\\n  RTCPeerConnection.prototype.removeTrack = function(sender) {\\n    if (this._isClosed) {\\n      throw makeError('InvalidStateError',\\n          'Attempted to call removeTrack on a closed peerconnection.');\\n    }\\n\\n    if (!(sender instanceof window.RTCRtpSender)) {\\n      throw new TypeError('Argument 1 of RTCPeerConnection.removeTrack ' +\\n          'does not implement interface RTCRtpSender.');\\n    }\\n\\n    var transceiver = this.transceivers.find(function(t) {\\n      return t.rtpSender === sender;\\n    });\\n\\n    if (!transceiver) {\\n      throw makeError('InvalidAccessError',\\n          'Sender was not created by this connection.');\\n    }\\n    var stream = transceiver.stream;\\n\\n    transceiver.rtpSender.stop();\\n    transceiver.rtpSender = null;\\n    transceiver.track = null;\\n    transceiver.stream = null;\\n\\n    // remove the stream from the set of local streams\\n    var localStreams = this.transceivers.map(function(t) {\\n      return t.stream;\\n    });\\n    if (localStreams.indexOf(stream) === -1 &&\\n        this.localStreams.indexOf(stream) > -1) {\\n      this.localStreams.splice(this.localStreams.indexOf(stream), 1);\\n    }\\n\\n    this._maybeFireNegotiationNeeded();\\n  };\\n\\n  RTCPeerConnection.prototype.removeStream = function(stream) {\\n    var pc = this;\\n    stream.getTracks().forEach(function(track) {\\n      var sender = pc.getSenders().find(function(s) {\\n        return s.track === track;\\n      });\\n      if (sender) {\\n        pc.removeTrack(sender);\\n      }\\n    });\\n  };\\n\\n  RTCPeerConnection.prototype.getSenders = function() {\\n    return this.transceivers.filter(function(transceiver) {\\n      return !!transceiver.rtpSender;\\n    })\\n    .map(function(transceiver) {\\n      return transceiver.rtpSender;\\n    });\\n  };\\n\\n  RTCPeerConnection.prototype.getReceivers = function() {\\n    return this.transceivers.filter(function(transceiver) {\\n      return !!transceiver.rtpReceiver;\\n    })\\n    .map(function(transceiver) {\\n      return transceiver.rtpReceiver;\\n    });\\n  };\\n\\n\\n  RTCPeerConnection.prototype._createIceGatherer = function(sdpMLineIndex,\\n      usingBundle) {\\n    var pc = this;\\n    if (usingBundle && sdpMLineIndex > 0) {\\n      return this.transceivers[0].iceGatherer;\\n    } else if (this._iceGatherers.length) {\\n      return this._iceGatherers.shift();\\n    }\\n    var iceGatherer = new window.RTCIceGatherer({\\n      iceServers: this._config.iceServers,\\n      gatherPolicy: this._config.iceTransportPolicy\\n    });\\n    Object.defineProperty(iceGatherer, 'state',\\n        {value: 'new', writable: true}\\n    );\\n\\n    this.transceivers[sdpMLineIndex].bufferedCandidateEvents = [];\\n    this.transceivers[sdpMLineIndex].bufferCandidates = function(event) {\\n      var end = !event.candidate || Object.keys(event.candidate).length === 0;\\n      // polyfill since RTCIceGatherer.state is not implemented in\\n      // Edge 10547 yet.\\n      iceGatherer.state = end ? 'completed' : 'gathering';\\n      if (pc.transceivers[sdpMLineIndex].bufferedCandidateEvents !== null) {\\n        pc.transceivers[sdpMLineIndex].bufferedCandidateEvents.push(event);\\n      }\\n    };\\n    iceGatherer.addEventListener('localcandidate',\\n      this.transceivers[sdpMLineIndex].bufferCandidates);\\n    return iceGatherer;\\n  };\\n\\n  // start gathering from an RTCIceGatherer.\\n  RTCPeerConnection.prototype._gather = function(mid, sdpMLineIndex) {\\n    var pc = this;\\n    var iceGatherer = this.transceivers[sdpMLineIndex].iceGatherer;\\n    if (iceGatherer.onlocalcandidate) {\\n      return;\\n    }\\n    var bufferedCandidateEvents =\\n      this.transceivers[sdpMLineIndex].bufferedCandidateEvents;\\n    this.transceivers[sdpMLineIndex].bufferedCandidateEvents = null;\\n    iceGatherer.removeEventListener('localcandidate',\\n      this.transceivers[sdpMLineIndex].bufferCandidates);\\n    iceGatherer.onlocalcandidate = function(evt) {\\n      if (pc.usingBundle && sdpMLineIndex > 0) {\\n        // if we know that we use bundle we can drop candidates with\\n        // ѕdpMLineIndex > 0. If we don't do this then our state gets\\n        // confused since we dispose the extra ice gatherer.\\n        return;\\n      }\\n      var event = new Event('icecandidate');\\n      event.candidate = {sdpMid: mid, sdpMLineIndex: sdpMLineIndex};\\n\\n      var cand = evt.candidate;\\n      // Edge emits an empty object for RTCIceCandidateComplete‥\\n      var end = !cand || Object.keys(cand).length === 0;\\n      if (end) {\\n        // polyfill since RTCIceGatherer.state is not implemented in\\n        // Edge 10547 yet.\\n        if (iceGatherer.state === 'new' || iceGatherer.state === 'gathering') {\\n          iceGatherer.state = 'completed';\\n        }\\n      } else {\\n        if (iceGatherer.state === 'new') {\\n          iceGatherer.state = 'gathering';\\n        }\\n        // RTCIceCandidate doesn't have a component, needs to be added\\n        cand.component = 1;\\n        // also the usernameFragment. TODO: update SDP to take both variants.\\n        cand.ufrag = iceGatherer.getLocalParameters().usernameFragment;\\n\\n        var serializedCandidate = SDPUtils.writeCandidate(cand);\\n        event.candidate = Object.assign(event.candidate,\\n            SDPUtils.parseCandidate(serializedCandidate));\\n\\n        event.candidate.candidate = serializedCandidate;\\n        event.candidate.toJSON = function() {\\n          return {\\n            candidate: event.candidate.candidate,\\n            sdpMid: event.candidate.sdpMid,\\n            sdpMLineIndex: event.candidate.sdpMLineIndex,\\n            usernameFragment: event.candidate.usernameFragment\\n          };\\n        };\\n      }\\n\\n      // update local description.\\n      var sections = SDPUtils.getMediaSections(pc._localDescription.sdp);\\n      if (!end) {\\n        sections[event.candidate.sdpMLineIndex] +=\\n            'a=' + event.candidate.candidate + '\\\\r\\\\n';\\n      } else {\\n        sections[event.candidate.sdpMLineIndex] +=\\n            'a=end-of-candidates\\\\r\\\\n';\\n      }\\n      pc._localDescription.sdp =\\n          SDPUtils.getDescription(pc._localDescription.sdp) +\\n          sections.join('');\\n      var complete = pc.transceivers.every(function(transceiver) {\\n        return transceiver.iceGatherer &&\\n            transceiver.iceGatherer.state === 'completed';\\n      });\\n\\n      if (pc.iceGatheringState !== 'gathering') {\\n        pc.iceGatheringState = 'gathering';\\n        pc._emitGatheringStateChange();\\n      }\\n\\n      // Emit candidate. Also emit null candidate when all gatherers are\\n      // complete.\\n      if (!end) {\\n        pc._dispatchEvent('icecandidate', event);\\n      }\\n      if (complete) {\\n        pc._dispatchEvent('icecandidate', new Event('icecandidate'));\\n        pc.iceGatheringState = 'complete';\\n        pc._emitGatheringStateChange();\\n      }\\n    };\\n\\n    // emit already gathered candidates.\\n    window.setTimeout(function() {\\n      bufferedCandidateEvents.forEach(function(e) {\\n        iceGatherer.onlocalcandidate(e);\\n      });\\n    }, 0);\\n  };\\n\\n  // Create ICE transport and DTLS transport.\\n  RTCPeerConnection.prototype._createIceAndDtlsTransports = function() {\\n    var pc = this;\\n    var iceTransport = new window.RTCIceTransport(null);\\n    iceTransport.onicestatechange = function() {\\n      pc._updateIceConnectionState();\\n      pc._updateConnectionState();\\n    };\\n\\n    var dtlsTransport = new window.RTCDtlsTransport(iceTransport);\\n    dtlsTransport.ondtlsstatechange = function() {\\n      pc._updateConnectionState();\\n    };\\n    dtlsTransport.onerror = function() {\\n      // onerror does not set state to failed by itself.\\n      Object.defineProperty(dtlsTransport, 'state',\\n          {value: 'failed', writable: true});\\n      pc._updateConnectionState();\\n    };\\n\\n    return {\\n      iceTransport: iceTransport,\\n      dtlsTransport: dtlsTransport\\n    };\\n  };\\n\\n  // Destroy ICE gatherer, ICE transport and DTLS transport.\\n  // Without triggering the callbacks.\\n  RTCPeerConnection.prototype._disposeIceAndDtlsTransports = function(\\n      sdpMLineIndex) {\\n    var iceGatherer = this.transceivers[sdpMLineIndex].iceGatherer;\\n    if (iceGatherer) {\\n      delete iceGatherer.onlocalcandidate;\\n      delete this.transceivers[sdpMLineIndex].iceGatherer;\\n    }\\n    var iceTransport = this.transceivers[sdpMLineIndex].iceTransport;\\n    if (iceTransport) {\\n      delete iceTransport.onicestatechange;\\n      delete this.transceivers[sdpMLineIndex].iceTransport;\\n    }\\n    var dtlsTransport = this.transceivers[sdpMLineIndex].dtlsTransport;\\n    if (dtlsTransport) {\\n      delete dtlsTransport.ondtlsstatechange;\\n      delete dtlsTransport.onerror;\\n      delete this.transceivers[sdpMLineIndex].dtlsTransport;\\n    }\\n  };\\n\\n  // Start the RTP Sender and Receiver for a transceiver.\\n  RTCPeerConnection.prototype._transceive = function(transceiver,\\n      send, recv) {\\n    var params = getCommonCapabilities(transceiver.localCapabilities,\\n        transceiver.remoteCapabilities);\\n    if (send && transceiver.rtpSender) {\\n      params.encodings = transceiver.sendEncodingParameters;\\n      params.rtcp = {\\n        cname: SDPUtils.localCName,\\n        compound: transceiver.rtcpParameters.compound\\n      };\\n      if (transceiver.recvEncodingParameters.length) {\\n        params.rtcp.ssrc = transceiver.recvEncodingParameters[0].ssrc;\\n      }\\n      transceiver.rtpSender.send(params);\\n    }\\n    if (recv && transceiver.rtpReceiver && params.codecs.length > 0) {\\n      // remove RTX field in Edge 14942\\n      if (transceiver.kind === 'video'\\n          && transceiver.recvEncodingParameters\\n          && edgeVersion < 15019) {\\n        transceiver.recvEncodingParameters.forEach(function(p) {\\n          delete p.rtx;\\n        });\\n      }\\n      if (transceiver.recvEncodingParameters.length) {\\n        params.encodings = transceiver.recvEncodingParameters;\\n      } else {\\n        params.encodings = [{}];\\n      }\\n      params.rtcp = {\\n        compound: transceiver.rtcpParameters.compound\\n      };\\n      if (transceiver.rtcpParameters.cname) {\\n        params.rtcp.cname = transceiver.rtcpParameters.cname;\\n      }\\n      if (transceiver.sendEncodingParameters.length) {\\n        params.rtcp.ssrc = transceiver.sendEncodingParameters[0].ssrc;\\n      }\\n      transceiver.rtpReceiver.receive(params);\\n    }\\n  };\\n\\n  RTCPeerConnection.prototype.setLocalDescription = function(description) {\\n    var pc = this;\\n\\n    // Note: pranswer is not supported.\\n    if (['offer', 'answer'].indexOf(description.type) === -1) {\\n      return Promise.reject(makeError('TypeError',\\n          'Unsupported type \\\"' + description.type + '\\\"'));\\n    }\\n\\n    if (!isActionAllowedInSignalingState('setLocalDescription',\\n        description.type, pc.signalingState) || pc._isClosed) {\\n      return Promise.reject(makeError('InvalidStateError',\\n          'Can not set local ' + description.type +\\n          ' in state ' + pc.signalingState));\\n    }\\n\\n    var sections;\\n    var sessionpart;\\n    if (description.type === 'offer') {\\n      // VERY limited support for SDP munging. Limited to:\\n      // * changing the order of codecs\\n      sections = SDPUtils.splitSections(description.sdp);\\n      sessionpart = sections.shift();\\n      sections.forEach(function(mediaSection, sdpMLineIndex) {\\n        var caps = SDPUtils.parseRtpParameters(mediaSection);\\n        pc.transceivers[sdpMLineIndex].localCapabilities = caps;\\n      });\\n\\n      pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\\n        pc._gather(transceiver.mid, sdpMLineIndex);\\n      });\\n    } else if (description.type === 'answer') {\\n      sections = SDPUtils.splitSections(pc._remoteDescription.sdp);\\n      sessionpart = sections.shift();\\n      var isIceLite = SDPUtils.matchPrefix(sessionpart,\\n          'a=ice-lite').length > 0;\\n      sections.forEach(function(mediaSection, sdpMLineIndex) {\\n        var transceiver = pc.transceivers[sdpMLineIndex];\\n        var iceGatherer = transceiver.iceGatherer;\\n        var iceTransport = transceiver.iceTransport;\\n        var dtlsTransport = transceiver.dtlsTransport;\\n        var localCapabilities = transceiver.localCapabilities;\\n        var remoteCapabilities = transceiver.remoteCapabilities;\\n\\n        // treat bundle-only as not-rejected.\\n        var rejected = SDPUtils.isRejected(mediaSection) &&\\n            SDPUtils.matchPrefix(mediaSection, 'a=bundle-only').length === 0;\\n\\n        if (!rejected && !transceiver.rejected) {\\n          var remoteIceParameters = SDPUtils.getIceParameters(\\n              mediaSection, sessionpart);\\n          var remoteDtlsParameters = SDPUtils.getDtlsParameters(\\n              mediaSection, sessionpart);\\n          if (isIceLite) {\\n            remoteDtlsParameters.role = 'server';\\n          }\\n\\n          if (!pc.usingBundle || sdpMLineIndex === 0) {\\n            pc._gather(transceiver.mid, sdpMLineIndex);\\n            if (iceTransport.state === 'new') {\\n              iceTransport.start(iceGatherer, remoteIceParameters,\\n                  isIceLite ? 'controlling' : 'controlled');\\n            }\\n            if (dtlsTransport.state === 'new') {\\n              dtlsTransport.start(remoteDtlsParameters);\\n            }\\n          }\\n\\n          // Calculate intersection of capabilities.\\n          var params = getCommonCapabilities(localCapabilities,\\n              remoteCapabilities);\\n\\n          // Start the RTCRtpSender. The RTCRtpReceiver for this\\n          // transceiver has already been started in setRemoteDescription.\\n          pc._transceive(transceiver,\\n              params.codecs.length > 0,\\n              false);\\n        }\\n      });\\n    }\\n\\n    pc._localDescription = {\\n      type: description.type,\\n      sdp: description.sdp\\n    };\\n    if (description.type === 'offer') {\\n      pc._updateSignalingState('have-local-offer');\\n    } else {\\n      pc._updateSignalingState('stable');\\n    }\\n\\n    return Promise.resolve();\\n  };\\n\\n  RTCPeerConnection.prototype.setRemoteDescription = function(description) {\\n    var pc = this;\\n\\n    // Note: pranswer is not supported.\\n    if (['offer', 'answer'].indexOf(description.type) === -1) {\\n      return Promise.reject(makeError('TypeError',\\n          'Unsupported type \\\"' + description.type + '\\\"'));\\n    }\\n\\n    if (!isActionAllowedInSignalingState('setRemoteDescription',\\n        description.type, pc.signalingState) || pc._isClosed) {\\n      return Promise.reject(makeError('InvalidStateError',\\n          'Can not set remote ' + description.type +\\n          ' in state ' + pc.signalingState));\\n    }\\n\\n    var streams = {};\\n    pc.remoteStreams.forEach(function(stream) {\\n      streams[stream.id] = stream;\\n    });\\n    var receiverList = [];\\n    var sections = SDPUtils.splitSections(description.sdp);\\n    var sessionpart = sections.shift();\\n    var isIceLite = SDPUtils.matchPrefix(sessionpart,\\n        'a=ice-lite').length > 0;\\n    var usingBundle = SDPUtils.matchPrefix(sessionpart,\\n        'a=group:BUNDLE ').length > 0;\\n    pc.usingBundle = usingBundle;\\n    var iceOptions = SDPUtils.matchPrefix(sessionpart,\\n        'a=ice-options:')[0];\\n    if (iceOptions) {\\n      pc.canTrickleIceCandidates = iceOptions.substr(14).split(' ')\\n          .indexOf('trickle') >= 0;\\n    } else {\\n      pc.canTrickleIceCandidates = false;\\n    }\\n\\n    sections.forEach(function(mediaSection, sdpMLineIndex) {\\n      var lines = SDPUtils.splitLines(mediaSection);\\n      var kind = SDPUtils.getKind(mediaSection);\\n      // treat bundle-only as not-rejected.\\n      var rejected = SDPUtils.isRejected(mediaSection) &&\\n          SDPUtils.matchPrefix(mediaSection, 'a=bundle-only').length === 0;\\n      var protocol = lines[0].substr(2).split(' ')[2];\\n\\n      var direction = SDPUtils.getDirection(mediaSection, sessionpart);\\n      var remoteMsid = SDPUtils.parseMsid(mediaSection);\\n\\n      var mid = SDPUtils.getMid(mediaSection) || SDPUtils.generateIdentifier();\\n\\n      // Reject datachannels which are not implemented yet.\\n      if (rejected || (kind === 'application' && (protocol === 'DTLS/SCTP' ||\\n          protocol === 'UDP/DTLS/SCTP'))) {\\n        // TODO: this is dangerous in the case where a non-rejected m-line\\n        //     becomes rejected.\\n        pc.transceivers[sdpMLineIndex] = {\\n          mid: mid,\\n          kind: kind,\\n          protocol: protocol,\\n          rejected: true\\n        };\\n        return;\\n      }\\n\\n      if (!rejected && pc.transceivers[sdpMLineIndex] &&\\n          pc.transceivers[sdpMLineIndex].rejected) {\\n        // recycle a rejected transceiver.\\n        pc.transceivers[sdpMLineIndex] = pc._createTransceiver(kind, true);\\n      }\\n\\n      var transceiver;\\n      var iceGatherer;\\n      var iceTransport;\\n      var dtlsTransport;\\n      var rtpReceiver;\\n      var sendEncodingParameters;\\n      var recvEncodingParameters;\\n      var localCapabilities;\\n\\n      var track;\\n      // FIXME: ensure the mediaSection has rtcp-mux set.\\n      var remoteCapabilities = SDPUtils.parseRtpParameters(mediaSection);\\n      var remoteIceParameters;\\n      var remoteDtlsParameters;\\n      if (!rejected) {\\n        remoteIceParameters = SDPUtils.getIceParameters(mediaSection,\\n            sessionpart);\\n        remoteDtlsParameters = SDPUtils.getDtlsParameters(mediaSection,\\n            sessionpart);\\n        remoteDtlsParameters.role = 'client';\\n      }\\n      recvEncodingParameters =\\n          SDPUtils.parseRtpEncodingParameters(mediaSection);\\n\\n      var rtcpParameters = SDPUtils.parseRtcpParameters(mediaSection);\\n\\n      var isComplete = SDPUtils.matchPrefix(mediaSection,\\n          'a=end-of-candidates', sessionpart).length > 0;\\n      var cands = SDPUtils.matchPrefix(mediaSection, 'a=candidate:')\\n          .map(function(cand) {\\n            return SDPUtils.parseCandidate(cand);\\n          })\\n          .filter(function(cand) {\\n            return cand.component === 1;\\n          });\\n\\n      // Check if we can use BUNDLE and dispose transports.\\n      if ((description.type === 'offer' || description.type === 'answer') &&\\n          !rejected && usingBundle && sdpMLineIndex > 0 &&\\n          pc.transceivers[sdpMLineIndex]) {\\n        pc._disposeIceAndDtlsTransports(sdpMLineIndex);\\n        pc.transceivers[sdpMLineIndex].iceGatherer =\\n            pc.transceivers[0].iceGatherer;\\n        pc.transceivers[sdpMLineIndex].iceTransport =\\n            pc.transceivers[0].iceTransport;\\n        pc.transceivers[sdpMLineIndex].dtlsTransport =\\n            pc.transceivers[0].dtlsTransport;\\n        if (pc.transceivers[sdpMLineIndex].rtpSender) {\\n          pc.transceivers[sdpMLineIndex].rtpSender.setTransport(\\n              pc.transceivers[0].dtlsTransport);\\n        }\\n        if (pc.transceivers[sdpMLineIndex].rtpReceiver) {\\n          pc.transceivers[sdpMLineIndex].rtpReceiver.setTransport(\\n              pc.transceivers[0].dtlsTransport);\\n        }\\n      }\\n      if (description.type === 'offer' && !rejected) {\\n        transceiver = pc.transceivers[sdpMLineIndex] ||\\n            pc._createTransceiver(kind);\\n        transceiver.mid = mid;\\n\\n        if (!transceiver.iceGatherer) {\\n          transceiver.iceGatherer = pc._createIceGatherer(sdpMLineIndex,\\n              usingBundle);\\n        }\\n\\n        if (cands.length && transceiver.iceTransport.state === 'new') {\\n          if (isComplete && (!usingBundle || sdpMLineIndex === 0)) {\\n            transceiver.iceTransport.setRemoteCandidates(cands);\\n          } else {\\n            cands.forEach(function(candidate) {\\n              maybeAddCandidate(transceiver.iceTransport, candidate);\\n            });\\n          }\\n        }\\n\\n        localCapabilities = window.RTCRtpReceiver.getCapabilities(kind);\\n\\n        // filter RTX until additional stuff needed for RTX is implemented\\n        // in adapter.js\\n        if (edgeVersion < 15019) {\\n          localCapabilities.codecs = localCapabilities.codecs.filter(\\n              function(codec) {\\n                return codec.name !== 'rtx';\\n              });\\n        }\\n\\n        sendEncodingParameters = transceiver.sendEncodingParameters || [{\\n          ssrc: (2 * sdpMLineIndex + 2) * 1001\\n        }];\\n\\n        // TODO: rewrite to use http://w3c.github.io/webrtc-pc/#set-associated-remote-streams\\n        var isNewTrack = false;\\n        if (direction === 'sendrecv' || direction === 'sendonly') {\\n          isNewTrack = !transceiver.rtpReceiver;\\n          rtpReceiver = transceiver.rtpReceiver ||\\n              new window.RTCRtpReceiver(transceiver.dtlsTransport, kind);\\n\\n          if (isNewTrack) {\\n            var stream;\\n            track = rtpReceiver.track;\\n            // FIXME: does not work with Plan B.\\n            if (remoteMsid && remoteMsid.stream === '-') {\\n              // no-op. a stream id of '-' means: no associated stream.\\n            } else if (remoteMsid) {\\n              if (!streams[remoteMsid.stream]) {\\n                streams[remoteMsid.stream] = new window.MediaStream();\\n                Object.defineProperty(streams[remoteMsid.stream], 'id', {\\n                  get: function() {\\n                    return remoteMsid.stream;\\n                  }\\n                });\\n              }\\n              Object.defineProperty(track, 'id', {\\n                get: function() {\\n                  return remoteMsid.track;\\n                }\\n              });\\n              stream = streams[remoteMsid.stream];\\n            } else {\\n              if (!streams.default) {\\n                streams.default = new window.MediaStream();\\n              }\\n              stream = streams.default;\\n            }\\n            if (stream) {\\n              addTrackToStreamAndFireEvent(track, stream);\\n              transceiver.associatedRemoteMediaStreams.push(stream);\\n            }\\n            receiverList.push([track, rtpReceiver, stream]);\\n          }\\n        } else if (transceiver.rtpReceiver && transceiver.rtpReceiver.track) {\\n          transceiver.associatedRemoteMediaStreams.forEach(function(s) {\\n            var nativeTrack = s.getTracks().find(function(t) {\\n              return t.id === transceiver.rtpReceiver.track.id;\\n            });\\n            if (nativeTrack) {\\n              removeTrackFromStreamAndFireEvent(nativeTrack, s);\\n            }\\n          });\\n          transceiver.associatedRemoteMediaStreams = [];\\n        }\\n\\n        transceiver.localCapabilities = localCapabilities;\\n        transceiver.remoteCapabilities = remoteCapabilities;\\n        transceiver.rtpReceiver = rtpReceiver;\\n        transceiver.rtcpParameters = rtcpParameters;\\n        transceiver.sendEncodingParameters = sendEncodingParameters;\\n        transceiver.recvEncodingParameters = recvEncodingParameters;\\n\\n        // Start the RTCRtpReceiver now. The RTPSender is started in\\n        // setLocalDescription.\\n        pc._transceive(pc.transceivers[sdpMLineIndex],\\n            false,\\n            isNewTrack);\\n      } else if (description.type === 'answer' && !rejected) {\\n        transceiver = pc.transceivers[sdpMLineIndex];\\n        iceGatherer = transceiver.iceGatherer;\\n        iceTransport = transceiver.iceTransport;\\n        dtlsTransport = transceiver.dtlsTransport;\\n        rtpReceiver = transceiver.rtpReceiver;\\n        sendEncodingParameters = transceiver.sendEncodingParameters;\\n        localCapabilities = transceiver.localCapabilities;\\n\\n        pc.transceivers[sdpMLineIndex].recvEncodingParameters =\\n            recvEncodingParameters;\\n        pc.transceivers[sdpMLineIndex].remoteCapabilities =\\n            remoteCapabilities;\\n        pc.transceivers[sdpMLineIndex].rtcpParameters = rtcpParameters;\\n\\n        if (cands.length && iceTransport.state === 'new') {\\n          if ((isIceLite || isComplete) &&\\n              (!usingBundle || sdpMLineIndex === 0)) {\\n            iceTransport.setRemoteCandidates(cands);\\n          } else {\\n            cands.forEach(function(candidate) {\\n              maybeAddCandidate(transceiver.iceTransport, candidate);\\n            });\\n          }\\n        }\\n\\n        if (!usingBundle || sdpMLineIndex === 0) {\\n          if (iceTransport.state === 'new') {\\n            iceTransport.start(iceGatherer, remoteIceParameters,\\n                'controlling');\\n          }\\n          if (dtlsTransport.state === 'new') {\\n            dtlsTransport.start(remoteDtlsParameters);\\n          }\\n        }\\n\\n        // If the offer contained RTX but the answer did not,\\n        // remove RTX from sendEncodingParameters.\\n        var commonCapabilities = getCommonCapabilities(\\n          transceiver.localCapabilities,\\n          transceiver.remoteCapabilities);\\n\\n        var hasRtx = commonCapabilities.codecs.filter(function(c) {\\n          return c.name.toLowerCase() === 'rtx';\\n        }).length;\\n        if (!hasRtx && transceiver.sendEncodingParameters[0].rtx) {\\n          delete transceiver.sendEncodingParameters[0].rtx;\\n        }\\n\\n        pc._transceive(transceiver,\\n            direction === 'sendrecv' || direction === 'recvonly',\\n            direction === 'sendrecv' || direction === 'sendonly');\\n\\n        // TODO: rewrite to use http://w3c.github.io/webrtc-pc/#set-associated-remote-streams\\n        if (rtpReceiver &&\\n            (direction === 'sendrecv' || direction === 'sendonly')) {\\n          track = rtpReceiver.track;\\n          if (remoteMsid) {\\n            if (!streams[remoteMsid.stream]) {\\n              streams[remoteMsid.stream] = new window.MediaStream();\\n            }\\n            addTrackToStreamAndFireEvent(track, streams[remoteMsid.stream]);\\n            receiverList.push([track, rtpReceiver, streams[remoteMsid.stream]]);\\n          } else {\\n            if (!streams.default) {\\n              streams.default = new window.MediaStream();\\n            }\\n            addTrackToStreamAndFireEvent(track, streams.default);\\n            receiverList.push([track, rtpReceiver, streams.default]);\\n          }\\n        } else {\\n          // FIXME: actually the receiver should be created later.\\n          delete transceiver.rtpReceiver;\\n        }\\n      }\\n    });\\n\\n    if (pc._dtlsRole === undefined) {\\n      pc._dtlsRole = description.type === 'offer' ? 'active' : 'passive';\\n    }\\n\\n    pc._remoteDescription = {\\n      type: description.type,\\n      sdp: description.sdp\\n    };\\n    if (description.type === 'offer') {\\n      pc._updateSignalingState('have-remote-offer');\\n    } else {\\n      pc._updateSignalingState('stable');\\n    }\\n    Object.keys(streams).forEach(function(sid) {\\n      var stream = streams[sid];\\n      if (stream.getTracks().length) {\\n        if (pc.remoteStreams.indexOf(stream) === -1) {\\n          pc.remoteStreams.push(stream);\\n          var event = new Event('addstream');\\n          event.stream = stream;\\n          window.setTimeout(function() {\\n            pc._dispatchEvent('addstream', event);\\n          });\\n        }\\n\\n        receiverList.forEach(function(item) {\\n          var track = item[0];\\n          var receiver = item[1];\\n          if (stream.id !== item[2].id) {\\n            return;\\n          }\\n          fireAddTrack(pc, track, receiver, [stream]);\\n        });\\n      }\\n    });\\n    receiverList.forEach(function(item) {\\n      if (item[2]) {\\n        return;\\n      }\\n      fireAddTrack(pc, item[0], item[1], []);\\n    });\\n\\n    // check whether addIceCandidate({}) was called within four seconds after\\n    // setRemoteDescription.\\n    window.setTimeout(function() {\\n      if (!(pc && pc.transceivers)) {\\n        return;\\n      }\\n      pc.transceivers.forEach(function(transceiver) {\\n        if (transceiver.iceTransport &&\\n            transceiver.iceTransport.state === 'new' &&\\n            transceiver.iceTransport.getRemoteCandidates().length > 0) {\\n          console.warn('Timeout for addRemoteCandidate. Consider sending ' +\\n              'an end-of-candidates notification');\\n          transceiver.iceTransport.addRemoteCandidate({});\\n        }\\n      });\\n    }, 4000);\\n\\n    return Promise.resolve();\\n  };\\n\\n  RTCPeerConnection.prototype.close = function() {\\n    this.transceivers.forEach(function(transceiver) {\\n      /* not yet\\n      if (transceiver.iceGatherer) {\\n        transceiver.iceGatherer.close();\\n      }\\n      */\\n      if (transceiver.iceTransport) {\\n        transceiver.iceTransport.stop();\\n      }\\n      if (transceiver.dtlsTransport) {\\n        transceiver.dtlsTransport.stop();\\n      }\\n      if (transceiver.rtpSender) {\\n        transceiver.rtpSender.stop();\\n      }\\n      if (transceiver.rtpReceiver) {\\n        transceiver.rtpReceiver.stop();\\n      }\\n    });\\n    // FIXME: clean up tracks, local streams, remote streams, etc\\n    this._isClosed = true;\\n    this._updateSignalingState('closed');\\n  };\\n\\n  // Update the signaling state.\\n  RTCPeerConnection.prototype._updateSignalingState = function(newState) {\\n    this.signalingState = newState;\\n    var event = new Event('signalingstatechange');\\n    this._dispatchEvent('signalingstatechange', event);\\n  };\\n\\n  // Determine whether to fire the negotiationneeded event.\\n  RTCPeerConnection.prototype._maybeFireNegotiationNeeded = function() {\\n    var pc = this;\\n    if (this.signalingState !== 'stable' || this.needNegotiation === true) {\\n      return;\\n    }\\n    this.needNegotiation = true;\\n    window.setTimeout(function() {\\n      if (pc.needNegotiation) {\\n        pc.needNegotiation = false;\\n        var event = new Event('negotiationneeded');\\n        pc._dispatchEvent('negotiationneeded', event);\\n      }\\n    }, 0);\\n  };\\n\\n  // Update the ice connection state.\\n  RTCPeerConnection.prototype._updateIceConnectionState = function() {\\n    var newState;\\n    var states = {\\n      'new': 0,\\n      closed: 0,\\n      checking: 0,\\n      connected: 0,\\n      completed: 0,\\n      disconnected: 0,\\n      failed: 0\\n    };\\n    this.transceivers.forEach(function(transceiver) {\\n      if (transceiver.iceTransport && !transceiver.rejected) {\\n        states[transceiver.iceTransport.state]++;\\n      }\\n    });\\n\\n    newState = 'new';\\n    if (states.failed > 0) {\\n      newState = 'failed';\\n    } else if (states.checking > 0) {\\n      newState = 'checking';\\n    } else if (states.disconnected > 0) {\\n      newState = 'disconnected';\\n    } else if (states.new > 0) {\\n      newState = 'new';\\n    } else if (states.connected > 0) {\\n      newState = 'connected';\\n    } else if (states.completed > 0) {\\n      newState = 'completed';\\n    }\\n\\n    if (newState !== this.iceConnectionState) {\\n      this.iceConnectionState = newState;\\n      var event = new Event('iceconnectionstatechange');\\n      this._dispatchEvent('iceconnectionstatechange', event);\\n    }\\n  };\\n\\n  // Update the connection state.\\n  RTCPeerConnection.prototype._updateConnectionState = function() {\\n    var newState;\\n    var states = {\\n      'new': 0,\\n      closed: 0,\\n      connecting: 0,\\n      connected: 0,\\n      completed: 0,\\n      disconnected: 0,\\n      failed: 0\\n    };\\n    this.transceivers.forEach(function(transceiver) {\\n      if (transceiver.iceTransport && transceiver.dtlsTransport &&\\n          !transceiver.rejected) {\\n        states[transceiver.iceTransport.state]++;\\n        states[transceiver.dtlsTransport.state]++;\\n      }\\n    });\\n    // ICETransport.completed and connected are the same for this purpose.\\n    states.connected += states.completed;\\n\\n    newState = 'new';\\n    if (states.failed > 0) {\\n      newState = 'failed';\\n    } else if (states.connecting > 0) {\\n      newState = 'connecting';\\n    } else if (states.disconnected > 0) {\\n      newState = 'disconnected';\\n    } else if (states.new > 0) {\\n      newState = 'new';\\n    } else if (states.connected > 0) {\\n      newState = 'connected';\\n    }\\n\\n    if (newState !== this.connectionState) {\\n      this.connectionState = newState;\\n      var event = new Event('connectionstatechange');\\n      this._dispatchEvent('connectionstatechange', event);\\n    }\\n  };\\n\\n  RTCPeerConnection.prototype.createOffer = function() {\\n    var pc = this;\\n\\n    if (pc._isClosed) {\\n      return Promise.reject(makeError('InvalidStateError',\\n          'Can not call createOffer after close'));\\n    }\\n\\n    var numAudioTracks = pc.transceivers.filter(function(t) {\\n      return t.kind === 'audio';\\n    }).length;\\n    var numVideoTracks = pc.transceivers.filter(function(t) {\\n      return t.kind === 'video';\\n    }).length;\\n\\n    // Determine number of audio and video tracks we need to send/recv.\\n    var offerOptions = arguments[0];\\n    if (offerOptions) {\\n      // Reject Chrome legacy constraints.\\n      if (offerOptions.mandatory || offerOptions.optional) {\\n        throw new TypeError(\\n            'Legacy mandatory/optional constraints not supported.');\\n      }\\n      if (offerOptions.offerToReceiveAudio !== undefined) {\\n        if (offerOptions.offerToReceiveAudio === true) {\\n          numAudioTracks = 1;\\n        } else if (offerOptions.offerToReceiveAudio === false) {\\n          numAudioTracks = 0;\\n        } else {\\n          numAudioTracks = offerOptions.offerToReceiveAudio;\\n        }\\n      }\\n      if (offerOptions.offerToReceiveVideo !== undefined) {\\n        if (offerOptions.offerToReceiveVideo === true) {\\n          numVideoTracks = 1;\\n        } else if (offerOptions.offerToReceiveVideo === false) {\\n          numVideoTracks = 0;\\n        } else {\\n          numVideoTracks = offerOptions.offerToReceiveVideo;\\n        }\\n      }\\n    }\\n\\n    pc.transceivers.forEach(function(transceiver) {\\n      if (transceiver.kind === 'audio') {\\n        numAudioTracks--;\\n        if (numAudioTracks < 0) {\\n          transceiver.wantReceive = false;\\n        }\\n      } else if (transceiver.kind === 'video') {\\n        numVideoTracks--;\\n        if (numVideoTracks < 0) {\\n          transceiver.wantReceive = false;\\n        }\\n      }\\n    });\\n\\n    // Create M-lines for recvonly streams.\\n    while (numAudioTracks > 0 || numVideoTracks > 0) {\\n      if (numAudioTracks > 0) {\\n        pc._createTransceiver('audio');\\n        numAudioTracks--;\\n      }\\n      if (numVideoTracks > 0) {\\n        pc._createTransceiver('video');\\n        numVideoTracks--;\\n      }\\n    }\\n\\n    var sdp = SDPUtils.writeSessionBoilerplate(pc._sdpSessionId,\\n        pc._sdpSessionVersion++);\\n    pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\\n      // For each track, create an ice gatherer, ice transport,\\n      // dtls transport, potentially rtpsender and rtpreceiver.\\n      var track = transceiver.track;\\n      var kind = transceiver.kind;\\n      var mid = transceiver.mid || SDPUtils.generateIdentifier();\\n      transceiver.mid = mid;\\n\\n      if (!transceiver.iceGatherer) {\\n        transceiver.iceGatherer = pc._createIceGatherer(sdpMLineIndex,\\n            pc.usingBundle);\\n      }\\n\\n      var localCapabilities = window.RTCRtpSender.getCapabilities(kind);\\n      // filter RTX until additional stuff needed for RTX is implemented\\n      // in adapter.js\\n      if (edgeVersion < 15019) {\\n        localCapabilities.codecs = localCapabilities.codecs.filter(\\n            function(codec) {\\n              return codec.name !== 'rtx';\\n            });\\n      }\\n      localCapabilities.codecs.forEach(function(codec) {\\n        // work around https://bugs.chromium.org/p/webrtc/issues/detail?id=6552\\n        // by adding level-asymmetry-allowed=1\\n        if (codec.name === 'H264' &&\\n            codec.parameters['level-asymmetry-allowed'] === undefined) {\\n          codec.parameters['level-asymmetry-allowed'] = '1';\\n        }\\n\\n        // for subsequent offers, we might have to re-use the payload\\n        // type of the last offer.\\n        if (transceiver.remoteCapabilities &&\\n            transceiver.remoteCapabilities.codecs) {\\n          transceiver.remoteCapabilities.codecs.forEach(function(remoteCodec) {\\n            if (codec.name.toLowerCase() === remoteCodec.name.toLowerCase() &&\\n                codec.clockRate === remoteCodec.clockRate) {\\n              codec.preferredPayloadType = remoteCodec.payloadType;\\n            }\\n          });\\n        }\\n      });\\n      localCapabilities.headerExtensions.forEach(function(hdrExt) {\\n        var remoteExtensions = transceiver.remoteCapabilities &&\\n            transceiver.remoteCapabilities.headerExtensions || [];\\n        remoteExtensions.forEach(function(rHdrExt) {\\n          if (hdrExt.uri === rHdrExt.uri) {\\n            hdrExt.id = rHdrExt.id;\\n          }\\n        });\\n      });\\n\\n      // generate an ssrc now, to be used later in rtpSender.send\\n      var sendEncodingParameters = transceiver.sendEncodingParameters || [{\\n        ssrc: (2 * sdpMLineIndex + 1) * 1001\\n      }];\\n      if (track) {\\n        // add RTX\\n        if (edgeVersion >= 15019 && kind === 'video' &&\\n            !sendEncodingParameters[0].rtx) {\\n          sendEncodingParameters[0].rtx = {\\n            ssrc: sendEncodingParameters[0].ssrc + 1\\n          };\\n        }\\n      }\\n\\n      if (transceiver.wantReceive) {\\n        transceiver.rtpReceiver = new window.RTCRtpReceiver(\\n            transceiver.dtlsTransport, kind);\\n      }\\n\\n      transceiver.localCapabilities = localCapabilities;\\n      transceiver.sendEncodingParameters = sendEncodingParameters;\\n    });\\n\\n    // always offer BUNDLE and dispose on return if not supported.\\n    if (pc._config.bundlePolicy !== 'max-compat') {\\n      sdp += 'a=group:BUNDLE ' + pc.transceivers.map(function(t) {\\n        return t.mid;\\n      }).join(' ') + '\\\\r\\\\n';\\n    }\\n    sdp += 'a=ice-options:trickle\\\\r\\\\n';\\n\\n    pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\\n      sdp += writeMediaSection(transceiver, transceiver.localCapabilities,\\n          'offer', transceiver.stream, pc._dtlsRole);\\n      sdp += 'a=rtcp-rsize\\\\r\\\\n';\\n\\n      if (transceiver.iceGatherer && pc.iceGatheringState !== 'new' &&\\n          (sdpMLineIndex === 0 || !pc.usingBundle)) {\\n        transceiver.iceGatherer.getLocalCandidates().forEach(function(cand) {\\n          cand.component = 1;\\n          sdp += 'a=' + SDPUtils.writeCandidate(cand) + '\\\\r\\\\n';\\n        });\\n\\n        if (transceiver.iceGatherer.state === 'completed') {\\n          sdp += 'a=end-of-candidates\\\\r\\\\n';\\n        }\\n      }\\n    });\\n\\n    var desc = new window.RTCSessionDescription({\\n      type: 'offer',\\n      sdp: sdp\\n    });\\n    return Promise.resolve(desc);\\n  };\\n\\n  RTCPeerConnection.prototype.createAnswer = function() {\\n    var pc = this;\\n\\n    if (pc._isClosed) {\\n      return Promise.reject(makeError('InvalidStateError',\\n          'Can not call createAnswer after close'));\\n    }\\n\\n    if (!(pc.signalingState === 'have-remote-offer' ||\\n        pc.signalingState === 'have-local-pranswer')) {\\n      return Promise.reject(makeError('InvalidStateError',\\n          'Can not call createAnswer in signalingState ' + pc.signalingState));\\n    }\\n\\n    var sdp = SDPUtils.writeSessionBoilerplate(pc._sdpSessionId,\\n        pc._sdpSessionVersion++);\\n    if (pc.usingBundle) {\\n      sdp += 'a=group:BUNDLE ' + pc.transceivers.map(function(t) {\\n        return t.mid;\\n      }).join(' ') + '\\\\r\\\\n';\\n    }\\n    sdp += 'a=ice-options:trickle\\\\r\\\\n';\\n\\n    var mediaSectionsInOffer = SDPUtils.getMediaSections(\\n        pc._remoteDescription.sdp).length;\\n    pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\\n      if (sdpMLineIndex + 1 > mediaSectionsInOffer) {\\n        return;\\n      }\\n      if (transceiver.rejected) {\\n        if (transceiver.kind === 'application') {\\n          if (transceiver.protocol === 'DTLS/SCTP') { // legacy fmt\\n            sdp += 'm=application 0 DTLS/SCTP 5000\\\\r\\\\n';\\n          } else {\\n            sdp += 'm=application 0 ' + transceiver.protocol +\\n                ' webrtc-datachannel\\\\r\\\\n';\\n          }\\n        } else if (transceiver.kind === 'audio') {\\n          sdp += 'm=audio 0 UDP/TLS/RTP/SAVPF 0\\\\r\\\\n' +\\n              'a=rtpmap:0 PCMU/8000\\\\r\\\\n';\\n        } else if (transceiver.kind === 'video') {\\n          sdp += 'm=video 0 UDP/TLS/RTP/SAVPF 120\\\\r\\\\n' +\\n              'a=rtpmap:120 VP8/90000\\\\r\\\\n';\\n        }\\n        sdp += 'c=IN IP4 0.0.0.0\\\\r\\\\n' +\\n            'a=inactive\\\\r\\\\n' +\\n            'a=mid:' + transceiver.mid + '\\\\r\\\\n';\\n        return;\\n      }\\n\\n      // FIXME: look at direction.\\n      if (transceiver.stream) {\\n        var localTrack;\\n        if (transceiver.kind === 'audio') {\\n          localTrack = transceiver.stream.getAudioTracks()[0];\\n        } else if (transceiver.kind === 'video') {\\n          localTrack = transceiver.stream.getVideoTracks()[0];\\n        }\\n        if (localTrack) {\\n          // add RTX\\n          if (edgeVersion >= 15019 && transceiver.kind === 'video' &&\\n              !transceiver.sendEncodingParameters[0].rtx) {\\n            transceiver.sendEncodingParameters[0].rtx = {\\n              ssrc: transceiver.sendEncodingParameters[0].ssrc + 1\\n            };\\n          }\\n        }\\n      }\\n\\n      // Calculate intersection of capabilities.\\n      var commonCapabilities = getCommonCapabilities(\\n          transceiver.localCapabilities,\\n          transceiver.remoteCapabilities);\\n\\n      var hasRtx = commonCapabilities.codecs.filter(function(c) {\\n        return c.name.toLowerCase() === 'rtx';\\n      }).length;\\n      if (!hasRtx && transceiver.sendEncodingParameters[0].rtx) {\\n        delete transceiver.sendEncodingParameters[0].rtx;\\n      }\\n\\n      sdp += writeMediaSection(transceiver, commonCapabilities,\\n          'answer', transceiver.stream, pc._dtlsRole);\\n      if (transceiver.rtcpParameters &&\\n          transceiver.rtcpParameters.reducedSize) {\\n        sdp += 'a=rtcp-rsize\\\\r\\\\n';\\n      }\\n    });\\n\\n    var desc = new window.RTCSessionDescription({\\n      type: 'answer',\\n      sdp: sdp\\n    });\\n    return Promise.resolve(desc);\\n  };\\n\\n  RTCPeerConnection.prototype.addIceCandidate = function(candidate) {\\n    var pc = this;\\n    var sections;\\n    if (candidate && !(candidate.sdpMLineIndex !== undefined ||\\n        candidate.sdpMid)) {\\n      return Promise.reject(new TypeError('sdpMLineIndex or sdpMid required'));\\n    }\\n\\n    // TODO: needs to go into ops queue.\\n    return new Promise(function(resolve, reject) {\\n      if (!pc._remoteDescription) {\\n        return reject(makeError('InvalidStateError',\\n            'Can not add ICE candidate without a remote description'));\\n      } else if (!candidate || candidate.candidate === '') {\\n        for (var j = 0; j < pc.transceivers.length; j++) {\\n          if (pc.transceivers[j].rejected) {\\n            continue;\\n          }\\n          pc.transceivers[j].iceTransport.addRemoteCandidate({});\\n          sections = SDPUtils.getMediaSections(pc._remoteDescription.sdp);\\n          sections[j] += 'a=end-of-candidates\\\\r\\\\n';\\n          pc._remoteDescription.sdp =\\n              SDPUtils.getDescription(pc._remoteDescription.sdp) +\\n              sections.join('');\\n          if (pc.usingBundle) {\\n            break;\\n          }\\n        }\\n      } else {\\n        var sdpMLineIndex = candidate.sdpMLineIndex;\\n        if (candidate.sdpMid) {\\n          for (var i = 0; i < pc.transceivers.length; i++) {\\n            if (pc.transceivers[i].mid === candidate.sdpMid) {\\n              sdpMLineIndex = i;\\n              break;\\n            }\\n          }\\n        }\\n        var transceiver = pc.transceivers[sdpMLineIndex];\\n        if (transceiver) {\\n          if (transceiver.rejected) {\\n            return resolve();\\n          }\\n          var cand = Object.keys(candidate.candidate).length > 0 ?\\n              SDPUtils.parseCandidate(candidate.candidate) : {};\\n          // Ignore Chrome's invalid candidates since Edge does not like them.\\n          if (cand.protocol === 'tcp' && (cand.port === 0 || cand.port === 9)) {\\n            return resolve();\\n          }\\n          // Ignore RTCP candidates, we assume RTCP-MUX.\\n          if (cand.component && cand.component !== 1) {\\n            return resolve();\\n          }\\n          // when using bundle, avoid adding candidates to the wrong\\n          // ice transport. And avoid adding candidates added in the SDP.\\n          if (sdpMLineIndex === 0 || (sdpMLineIndex > 0 &&\\n              transceiver.iceTransport !== pc.transceivers[0].iceTransport)) {\\n            if (!maybeAddCandidate(transceiver.iceTransport, cand)) {\\n              return reject(makeError('OperationError',\\n                  'Can not add ICE candidate'));\\n            }\\n          }\\n\\n          // update the remoteDescription.\\n          var candidateString = candidate.candidate.trim();\\n          if (candidateString.indexOf('a=') === 0) {\\n            candidateString = candidateString.substr(2);\\n          }\\n          sections = SDPUtils.getMediaSections(pc._remoteDescription.sdp);\\n          sections[sdpMLineIndex] += 'a=' +\\n              (cand.type ? candidateString : 'end-of-candidates')\\n              + '\\\\r\\\\n';\\n          pc._remoteDescription.sdp =\\n              SDPUtils.getDescription(pc._remoteDescription.sdp) +\\n              sections.join('');\\n        } else {\\n          return reject(makeError('OperationError',\\n              'Can not add ICE candidate'));\\n        }\\n      }\\n      resolve();\\n    });\\n  };\\n\\n  RTCPeerConnection.prototype.getStats = function(selector) {\\n    if (selector && selector instanceof window.MediaStreamTrack) {\\n      var senderOrReceiver = null;\\n      this.transceivers.forEach(function(transceiver) {\\n        if (transceiver.rtpSender &&\\n            transceiver.rtpSender.track === selector) {\\n          senderOrReceiver = transceiver.rtpSender;\\n        } else if (transceiver.rtpReceiver &&\\n            transceiver.rtpReceiver.track === selector) {\\n          senderOrReceiver = transceiver.rtpReceiver;\\n        }\\n      });\\n      if (!senderOrReceiver) {\\n        throw makeError('InvalidAccessError', 'Invalid selector.');\\n      }\\n      return senderOrReceiver.getStats();\\n    }\\n\\n    var promises = [];\\n    this.transceivers.forEach(function(transceiver) {\\n      ['rtpSender', 'rtpReceiver', 'iceGatherer', 'iceTransport',\\n          'dtlsTransport'].forEach(function(method) {\\n            if (transceiver[method]) {\\n              promises.push(transceiver[method].getStats());\\n            }\\n          });\\n    });\\n    return Promise.all(promises).then(function(allStats) {\\n      var results = new Map();\\n      allStats.forEach(function(stats) {\\n        stats.forEach(function(stat) {\\n          results.set(stat.id, stat);\\n        });\\n      });\\n      return results;\\n    });\\n  };\\n\\n  // fix low-level stat names and return Map instead of object.\\n  var ortcObjects = ['RTCRtpSender', 'RTCRtpReceiver', 'RTCIceGatherer',\\n    'RTCIceTransport', 'RTCDtlsTransport'];\\n  ortcObjects.forEach(function(ortcObjectName) {\\n    var obj = window[ortcObjectName];\\n    if (obj && obj.prototype && obj.prototype.getStats) {\\n      var nativeGetstats = obj.prototype.getStats;\\n      obj.prototype.getStats = function() {\\n        return nativeGetstats.apply(this)\\n        .then(function(nativeStats) {\\n          var mapStats = new Map();\\n          Object.keys(nativeStats).forEach(function(id) {\\n            nativeStats[id].type = fixStatsType(nativeStats[id]);\\n            mapStats.set(id, nativeStats[id]);\\n          });\\n          return mapStats;\\n        });\\n      };\\n    }\\n  });\\n\\n  // legacy callback shims. Should be moved to adapter.js some days.\\n  var methods = ['createOffer', 'createAnswer'];\\n  methods.forEach(function(method) {\\n    var nativeMethod = RTCPeerConnection.prototype[method];\\n    RTCPeerConnection.prototype[method] = function() {\\n      var args = arguments;\\n      if (typeof args[0] === 'function' ||\\n          typeof args[1] === 'function') { // legacy\\n        return nativeMethod.apply(this, [arguments[2]])\\n        .then(function(description) {\\n          if (typeof args[0] === 'function') {\\n            args[0].apply(null, [description]);\\n          }\\n        }, function(error) {\\n          if (typeof args[1] === 'function') {\\n            args[1].apply(null, [error]);\\n          }\\n        });\\n      }\\n      return nativeMethod.apply(this, arguments);\\n    };\\n  });\\n\\n  methods = ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate'];\\n  methods.forEach(function(method) {\\n    var nativeMethod = RTCPeerConnection.prototype[method];\\n    RTCPeerConnection.prototype[method] = function() {\\n      var args = arguments;\\n      if (typeof args[1] === 'function' ||\\n          typeof args[2] === 'function') { // legacy\\n        return nativeMethod.apply(this, arguments)\\n        .then(function() {\\n          if (typeof args[1] === 'function') {\\n            args[1].apply(null);\\n          }\\n        }, function(error) {\\n          if (typeof args[2] === 'function') {\\n            args[2].apply(null, [error]);\\n          }\\n        });\\n      }\\n      return nativeMethod.apply(this, arguments);\\n    };\\n  });\\n\\n  // getStats is special. It doesn't have a spec legacy method yet we support\\n  // getStats(something, cb) without error callbacks.\\n  ['getStats'].forEach(function(method) {\\n    var nativeMethod = RTCPeerConnection.prototype[method];\\n    RTCPeerConnection.prototype[method] = function() {\\n      var args = arguments;\\n      if (typeof args[1] === 'function') {\\n        return nativeMethod.apply(this, arguments)\\n        .then(function() {\\n          if (typeof args[1] === 'function') {\\n            args[1].apply(null);\\n          }\\n        });\\n      }\\n      return nativeMethod.apply(this, arguments);\\n    };\\n  });\\n\\n  return RTCPeerConnection;\\n};\\n\",\"/*\\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\\n *\\n *  Use of this source code is governed by a BSD-style license\\n *  that can be found in the LICENSE file in the root of the source\\n *  tree.\\n */\\n /* eslint-env node */\\n'use strict';\\n\\n// Expose public methods.\\nmodule.exports = function(window) {\\n  var navigator = window && window.navigator;\\n\\n  var shimError_ = function(e) {\\n    return {\\n      name: {PermissionDeniedError: 'NotAllowedError'}[e.name] || e.name,\\n      message: e.message,\\n      constraint: e.constraint,\\n      toString: function() {\\n        return this.name;\\n      }\\n    };\\n  };\\n\\n  // getUserMedia error shim.\\n  var origGetUserMedia = navigator.mediaDevices.getUserMedia.\\n      bind(navigator.mediaDevices);\\n  navigator.mediaDevices.getUserMedia = function(c) {\\n    return origGetUserMedia(c).catch(function(e) {\\n      return Promise.reject(shimError_(e));\\n    });\\n  };\\n};\\n\",\"/*\\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\\n *\\n *  Use of this source code is governed by a BSD-style license\\n *  that can be found in the LICENSE file in the root of the source\\n *  tree.\\n */\\n /* eslint-env node */\\n'use strict';\\n\\nvar utils = require('../utils');\\n\\nvar firefoxShim = {\\n  shimOnTrack: function(window) {\\n    if (typeof window === 'object' && window.RTCPeerConnection && !('ontrack' in\\n        window.RTCPeerConnection.prototype)) {\\n      Object.defineProperty(window.RTCPeerConnection.prototype, 'ontrack', {\\n        get: function() {\\n          return this._ontrack;\\n        },\\n        set: function(f) {\\n          if (this._ontrack) {\\n            this.removeEventListener('track', this._ontrack);\\n            this.removeEventListener('addstream', this._ontrackpoly);\\n          }\\n          this.addEventListener('track', this._ontrack = f);\\n          this.addEventListener('addstream', this._ontrackpoly = function(e) {\\n            e.stream.getTracks().forEach(function(track) {\\n              var event = new Event('track');\\n              event.track = track;\\n              event.receiver = {track: track};\\n              event.transceiver = {receiver: event.receiver};\\n              event.streams = [e.stream];\\n              this.dispatchEvent(event);\\n            }.bind(this));\\n          }.bind(this));\\n        }\\n      });\\n    }\\n    if (typeof window === 'object' && window.RTCTrackEvent &&\\n        ('receiver' in window.RTCTrackEvent.prototype) &&\\n        !('transceiver' in window.RTCTrackEvent.prototype)) {\\n      Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\\n        get: function() {\\n          return {receiver: this.receiver};\\n        }\\n      });\\n    }\\n  },\\n\\n  shimSourceObject: function(window) {\\n    // Firefox has supported mozSrcObject since FF22, unprefixed in 42.\\n    if (typeof window === 'object') {\\n      if (window.HTMLMediaElement &&\\n        !('srcObject' in window.HTMLMediaElement.prototype)) {\\n        // Shim the srcObject property, once, when HTMLMediaElement is found.\\n        Object.defineProperty(window.HTMLMediaElement.prototype, 'srcObject', {\\n          get: function() {\\n            return this.mozSrcObject;\\n          },\\n          set: function(stream) {\\n            this.mozSrcObject = stream;\\n          }\\n        });\\n      }\\n    }\\n  },\\n\\n  shimPeerConnection: function(window) {\\n    var browserDetails = utils.detectBrowser(window);\\n\\n    if (typeof window !== 'object' || !(window.RTCPeerConnection ||\\n        window.mozRTCPeerConnection)) {\\n      return; // probably media.peerconnection.enabled=false in about:config\\n    }\\n    // The RTCPeerConnection object.\\n    if (!window.RTCPeerConnection) {\\n      window.RTCPeerConnection = function(pcConfig, pcConstraints) {\\n        if (browserDetails.version < 38) {\\n          // .urls is not supported in FF < 38.\\n          // create RTCIceServers with a single url.\\n          if (pcConfig && pcConfig.iceServers) {\\n            var newIceServers = [];\\n            for (var i = 0; i < pcConfig.iceServers.length; i++) {\\n              var server = pcConfig.iceServers[i];\\n              if (server.hasOwnProperty('urls')) {\\n                for (var j = 0; j < server.urls.length; j++) {\\n                  var newServer = {\\n                    url: server.urls[j]\\n                  };\\n                  if (server.urls[j].indexOf('turn') === 0) {\\n                    newServer.username = server.username;\\n                    newServer.credential = server.credential;\\n                  }\\n                  newIceServers.push(newServer);\\n                }\\n              } else {\\n                newIceServers.push(pcConfig.iceServers[i]);\\n              }\\n            }\\n            pcConfig.iceServers = newIceServers;\\n          }\\n        }\\n        return new window.mozRTCPeerConnection(pcConfig, pcConstraints);\\n      };\\n      window.RTCPeerConnection.prototype =\\n          window.mozRTCPeerConnection.prototype;\\n\\n      // wrap static methods. Currently just generateCertificate.\\n      if (window.mozRTCPeerConnection.generateCertificate) {\\n        Object.defineProperty(window.RTCPeerConnection, 'generateCertificate', {\\n          get: function() {\\n            return window.mozRTCPeerConnection.generateCertificate;\\n          }\\n        });\\n      }\\n\\n      window.RTCSessionDescription = window.mozRTCSessionDescription;\\n      window.RTCIceCandidate = window.mozRTCIceCandidate;\\n    }\\n\\n    // shim away need for obsolete RTCIceCandidate/RTCSessionDescription.\\n    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\\n        .forEach(function(method) {\\n          var nativeMethod = window.RTCPeerConnection.prototype[method];\\n          window.RTCPeerConnection.prototype[method] = function() {\\n            arguments[0] = new ((method === 'addIceCandidate') ?\\n                window.RTCIceCandidate :\\n                window.RTCSessionDescription)(arguments[0]);\\n            return nativeMethod.apply(this, arguments);\\n          };\\n        });\\n\\n    // support for addIceCandidate(null or undefined)\\n    var nativeAddIceCandidate =\\n        window.RTCPeerConnection.prototype.addIceCandidate;\\n    window.RTCPeerConnection.prototype.addIceCandidate = function() {\\n      if (!arguments[0]) {\\n        if (arguments[1]) {\\n          arguments[1].apply(null);\\n        }\\n        return Promise.resolve();\\n      }\\n      return nativeAddIceCandidate.apply(this, arguments);\\n    };\\n\\n    // shim getStats with maplike support\\n    var makeMapStats = function(stats) {\\n      var map = new Map();\\n      Object.keys(stats).forEach(function(key) {\\n        map.set(key, stats[key]);\\n        map[key] = stats[key];\\n      });\\n      return map;\\n    };\\n\\n    var modernStatsTypes = {\\n      inboundrtp: 'inbound-rtp',\\n      outboundrtp: 'outbound-rtp',\\n      candidatepair: 'candidate-pair',\\n      localcandidate: 'local-candidate',\\n      remotecandidate: 'remote-candidate'\\n    };\\n\\n    var nativeGetStats = window.RTCPeerConnection.prototype.getStats;\\n    window.RTCPeerConnection.prototype.getStats = function(\\n      selector,\\n      onSucc,\\n      onErr\\n    ) {\\n      return nativeGetStats.apply(this, [selector || null])\\n        .then(function(stats) {\\n          if (browserDetails.version < 48) {\\n            stats = makeMapStats(stats);\\n          }\\n          if (browserDetails.version < 53 && !onSucc) {\\n            // Shim only promise getStats with spec-hyphens in type names\\n            // Leave callback version alone; misc old uses of forEach before Map\\n            try {\\n              stats.forEach(function(stat) {\\n                stat.type = modernStatsTypes[stat.type] || stat.type;\\n              });\\n            } catch (e) {\\n              if (e.name !== 'TypeError') {\\n                throw e;\\n              }\\n              // Avoid TypeError: \\\"type\\\" is read-only, in old versions. 34-43ish\\n              stats.forEach(function(stat, i) {\\n                stats.set(i, Object.assign({}, stat, {\\n                  type: modernStatsTypes[stat.type] || stat.type\\n                }));\\n              });\\n            }\\n          }\\n          return stats;\\n        })\\n        .then(onSucc, onErr);\\n    };\\n  }\\n};\\n\\n// Expose public methods.\\nmodule.exports = {\\n  shimOnTrack: firefoxShim.shimOnTrack,\\n  shimSourceObject: firefoxShim.shimSourceObject,\\n  shimPeerConnection: firefoxShim.shimPeerConnection,\\n  shimGetUserMedia: require('./getusermedia')\\n};\\n\",\"/*\\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\\n *\\n *  Use of this source code is governed by a BSD-style license\\n *  that can be found in the LICENSE file in the root of the source\\n *  tree.\\n */\\n /* eslint-env node */\\n'use strict';\\n\\nvar utils = require('../utils');\\nvar logging = utils.log;\\n\\n// Expose public methods.\\nmodule.exports = function(window) {\\n  var browserDetails = utils.detectBrowser(window);\\n  var navigator = window && window.navigator;\\n  var MediaStreamTrack = window && window.MediaStreamTrack;\\n\\n  var shimError_ = function(e) {\\n    return {\\n      name: {\\n        InternalError: 'NotReadableError',\\n        NotSupportedError: 'TypeError',\\n        PermissionDeniedError: 'NotAllowedError',\\n        SecurityError: 'NotAllowedError'\\n      }[e.name] || e.name,\\n      message: {\\n        'The operation is insecure.': 'The request is not allowed by the ' +\\n        'user agent or the platform in the current context.'\\n      }[e.message] || e.message,\\n      constraint: e.constraint,\\n      toString: function() {\\n        return this.name + (this.message && ': ') + this.message;\\n      }\\n    };\\n  };\\n\\n  // getUserMedia constraints shim.\\n  var getUserMedia_ = function(constraints, onSuccess, onError) {\\n    var constraintsToFF37_ = function(c) {\\n      if (typeof c !== 'object' || c.require) {\\n        return c;\\n      }\\n      var require = [];\\n      Object.keys(c).forEach(function(key) {\\n        if (key === 'require' || key === 'advanced' || key === 'mediaSource') {\\n          return;\\n        }\\n        var r = c[key] = (typeof c[key] === 'object') ?\\n            c[key] : {ideal: c[key]};\\n        if (r.min !== undefined ||\\n            r.max !== undefined || r.exact !== undefined) {\\n          require.push(key);\\n        }\\n        if (r.exact !== undefined) {\\n          if (typeof r.exact === 'number') {\\n            r. min = r.max = r.exact;\\n          } else {\\n            c[key] = r.exact;\\n          }\\n          delete r.exact;\\n        }\\n        if (r.ideal !== undefined) {\\n          c.advanced = c.advanced || [];\\n          var oc = {};\\n          if (typeof r.ideal === 'number') {\\n            oc[key] = {min: r.ideal, max: r.ideal};\\n          } else {\\n            oc[key] = r.ideal;\\n          }\\n          c.advanced.push(oc);\\n          delete r.ideal;\\n          if (!Object.keys(r).length) {\\n            delete c[key];\\n          }\\n        }\\n      });\\n      if (require.length) {\\n        c.require = require;\\n      }\\n      return c;\\n    };\\n    constraints = JSON.parse(JSON.stringify(constraints));\\n    if (browserDetails.version < 38) {\\n      logging('spec: ' + JSON.stringify(constraints));\\n      if (constraints.audio) {\\n        constraints.audio = constraintsToFF37_(constraints.audio);\\n      }\\n      if (constraints.video) {\\n        constraints.video = constraintsToFF37_(constraints.video);\\n      }\\n      logging('ff37: ' + JSON.stringify(constraints));\\n    }\\n    return navigator.mozGetUserMedia(constraints, onSuccess, function(e) {\\n      onError(shimError_(e));\\n    });\\n  };\\n\\n  // Returns the result of getUserMedia as a Promise.\\n  var getUserMediaPromise_ = function(constraints) {\\n    return new Promise(function(resolve, reject) {\\n      getUserMedia_(constraints, resolve, reject);\\n    });\\n  };\\n\\n  // Shim for mediaDevices on older versions.\\n  if (!navigator.mediaDevices) {\\n    navigator.mediaDevices = {getUserMedia: getUserMediaPromise_,\\n      addEventListener: function() { },\\n      removeEventListener: function() { }\\n    };\\n  }\\n  navigator.mediaDevices.enumerateDevices =\\n      navigator.mediaDevices.enumerateDevices || function() {\\n        return new Promise(function(resolve) {\\n          var infos = [\\n            {kind: 'audioinput', deviceId: 'default', label: '', groupId: ''},\\n            {kind: 'videoinput', deviceId: 'default', label: '', groupId: ''}\\n          ];\\n          resolve(infos);\\n        });\\n      };\\n\\n  if (browserDetails.version < 41) {\\n    // Work around http://bugzil.la/1169665\\n    var orgEnumerateDevices =\\n        navigator.mediaDevices.enumerateDevices.bind(navigator.mediaDevices);\\n    navigator.mediaDevices.enumerateDevices = function() {\\n      return orgEnumerateDevices().then(undefined, function(e) {\\n        if (e.name === 'NotFoundError') {\\n          return [];\\n        }\\n        throw e;\\n      });\\n    };\\n  }\\n  if (browserDetails.version < 49) {\\n    var origGetUserMedia = navigator.mediaDevices.getUserMedia.\\n        bind(navigator.mediaDevices);\\n    navigator.mediaDevices.getUserMedia = function(c) {\\n      return origGetUserMedia(c).then(function(stream) {\\n        // Work around https://bugzil.la/802326\\n        if (c.audio && !stream.getAudioTracks().length ||\\n            c.video && !stream.getVideoTracks().length) {\\n          stream.getTracks().forEach(function(track) {\\n            track.stop();\\n          });\\n          throw new DOMException('The object can not be found here.',\\n                                 'NotFoundError');\\n        }\\n        return stream;\\n      }, function(e) {\\n        return Promise.reject(shimError_(e));\\n      });\\n    };\\n  }\\n  if (!(browserDetails.version > 55 &&\\n      'autoGainControl' in navigator.mediaDevices.getSupportedConstraints())) {\\n    var remap = function(obj, a, b) {\\n      if (a in obj && !(b in obj)) {\\n        obj[b] = obj[a];\\n        delete obj[a];\\n      }\\n    };\\n\\n    var nativeGetUserMedia = navigator.mediaDevices.getUserMedia.\\n        bind(navigator.mediaDevices);\\n    navigator.mediaDevices.getUserMedia = function(c) {\\n      if (typeof c === 'object' && typeof c.audio === 'object') {\\n        c = JSON.parse(JSON.stringify(c));\\n        remap(c.audio, 'autoGainControl', 'mozAutoGainControl');\\n        remap(c.audio, 'noiseSuppression', 'mozNoiseSuppression');\\n      }\\n      return nativeGetUserMedia(c);\\n    };\\n\\n    if (MediaStreamTrack && MediaStreamTrack.prototype.getSettings) {\\n      var nativeGetSettings = MediaStreamTrack.prototype.getSettings;\\n      MediaStreamTrack.prototype.getSettings = function() {\\n        var obj = nativeGetSettings.apply(this, arguments);\\n        remap(obj, 'mozAutoGainControl', 'autoGainControl');\\n        remap(obj, 'mozNoiseSuppression', 'noiseSuppression');\\n        return obj;\\n      };\\n    }\\n\\n    if (MediaStreamTrack && MediaStreamTrack.prototype.applyConstraints) {\\n      var nativeApplyConstraints = MediaStreamTrack.prototype.applyConstraints;\\n      MediaStreamTrack.prototype.applyConstraints = function(c) {\\n        if (this.kind === 'audio' && typeof c === 'object') {\\n          c = JSON.parse(JSON.stringify(c));\\n          remap(c, 'autoGainControl', 'mozAutoGainControl');\\n          remap(c, 'noiseSuppression', 'mozNoiseSuppression');\\n        }\\n        return nativeApplyConstraints.apply(this, [c]);\\n      };\\n    }\\n  }\\n  navigator.getUserMedia = function(constraints, onSuccess, onError) {\\n    if (browserDetails.version < 44) {\\n      return getUserMedia_(constraints, onSuccess, onError);\\n    }\\n    // Replace Firefox 44+'s deprecation warning with unprefixed version.\\n    utils.deprecated('navigator.getUserMedia',\\n        'navigator.mediaDevices.getUserMedia');\\n    navigator.mediaDevices.getUserMedia(constraints).then(onSuccess, onError);\\n  };\\n};\\n\",\"/*\\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\\n *\\n *  Use of this source code is governed by a BSD-style license\\n *  that can be found in the LICENSE file in the root of the source\\n *  tree.\\n */\\n'use strict';\\nvar utils = require('../utils');\\n\\nvar safariShim = {\\n  // TODO: DrAlex, should be here, double check against LayoutTests\\n\\n  // TODO: once the back-end for the mac port is done, add.\\n  // TODO: check for webkitGTK+\\n  // shimPeerConnection: function() { },\\n\\n  shimLocalStreamsAPI: function(window) {\\n    if (typeof window !== 'object' || !window.RTCPeerConnection) {\\n      return;\\n    }\\n    if (!('getLocalStreams' in window.RTCPeerConnection.prototype)) {\\n      window.RTCPeerConnection.prototype.getLocalStreams = function() {\\n        if (!this._localStreams) {\\n          this._localStreams = [];\\n        }\\n        return this._localStreams;\\n      };\\n    }\\n    if (!('getStreamById' in window.RTCPeerConnection.prototype)) {\\n      window.RTCPeerConnection.prototype.getStreamById = function(id) {\\n        var result = null;\\n        if (this._localStreams) {\\n          this._localStreams.forEach(function(stream) {\\n            if (stream.id === id) {\\n              result = stream;\\n            }\\n          });\\n        }\\n        if (this._remoteStreams) {\\n          this._remoteStreams.forEach(function(stream) {\\n            if (stream.id === id) {\\n              result = stream;\\n            }\\n          });\\n        }\\n        return result;\\n      };\\n    }\\n    if (!('addStream' in window.RTCPeerConnection.prototype)) {\\n      var _addTrack = window.RTCPeerConnection.prototype.addTrack;\\n      window.RTCPeerConnection.prototype.addStream = function(stream) {\\n        if (!this._localStreams) {\\n          this._localStreams = [];\\n        }\\n        if (this._localStreams.indexOf(stream) === -1) {\\n          this._localStreams.push(stream);\\n        }\\n        var self = this;\\n        stream.getTracks().forEach(function(track) {\\n          _addTrack.call(self, track, stream);\\n        });\\n      };\\n\\n      window.RTCPeerConnection.prototype.addTrack = function(track, stream) {\\n        if (stream) {\\n          if (!this._localStreams) {\\n            this._localStreams = [stream];\\n          } else if (this._localStreams.indexOf(stream) === -1) {\\n            this._localStreams.push(stream);\\n          }\\n        }\\n        _addTrack.call(this, track, stream);\\n      };\\n    }\\n    if (!('removeStream' in window.RTCPeerConnection.prototype)) {\\n      window.RTCPeerConnection.prototype.removeStream = function(stream) {\\n        if (!this._localStreams) {\\n          this._localStreams = [];\\n        }\\n        var index = this._localStreams.indexOf(stream);\\n        if (index === -1) {\\n          return;\\n        }\\n        this._localStreams.splice(index, 1);\\n        var self = this;\\n        var tracks = stream.getTracks();\\n        this.getSenders().forEach(function(sender) {\\n          if (tracks.indexOf(sender.track) !== -1) {\\n            self.removeTrack(sender);\\n          }\\n        });\\n      };\\n    }\\n  },\\n  shimRemoteStreamsAPI: function(window) {\\n    if (typeof window !== 'object' || !window.RTCPeerConnection) {\\n      return;\\n    }\\n    if (!('getRemoteStreams' in window.RTCPeerConnection.prototype)) {\\n      window.RTCPeerConnection.prototype.getRemoteStreams = function() {\\n        return this._remoteStreams ? this._remoteStreams : [];\\n      };\\n    }\\n    if (!('onaddstream' in window.RTCPeerConnection.prototype)) {\\n      Object.defineProperty(window.RTCPeerConnection.prototype, 'onaddstream', {\\n        get: function() {\\n          return this._onaddstream;\\n        },\\n        set: function(f) {\\n          if (this._onaddstream) {\\n            this.removeEventListener('addstream', this._onaddstream);\\n            this.removeEventListener('track', this._onaddstreampoly);\\n          }\\n          this.addEventListener('addstream', this._onaddstream = f);\\n          this.addEventListener('track', this._onaddstreampoly = function(e) {\\n            var stream = e.streams[0];\\n            if (!this._remoteStreams) {\\n              this._remoteStreams = [];\\n            }\\n            if (this._remoteStreams.indexOf(stream) >= 0) {\\n              return;\\n            }\\n            this._remoteStreams.push(stream);\\n            var event = new Event('addstream');\\n            event.stream = e.streams[0];\\n            this.dispatchEvent(event);\\n          }.bind(this));\\n        }\\n      });\\n    }\\n  },\\n  shimCallbacksAPI: function(window) {\\n    if (typeof window !== 'object' || !window.RTCPeerConnection) {\\n      return;\\n    }\\n    var prototype = window.RTCPeerConnection.prototype;\\n    var createOffer = prototype.createOffer;\\n    var createAnswer = prototype.createAnswer;\\n    var setLocalDescription = prototype.setLocalDescription;\\n    var setRemoteDescription = prototype.setRemoteDescription;\\n    var addIceCandidate = prototype.addIceCandidate;\\n\\n    prototype.createOffer = function(successCallback, failureCallback) {\\n      var options = (arguments.length >= 2) ? arguments[2] : arguments[0];\\n      var promise = createOffer.apply(this, [options]);\\n      if (!failureCallback) {\\n        return promise;\\n      }\\n      promise.then(successCallback, failureCallback);\\n      return Promise.resolve();\\n    };\\n\\n    prototype.createAnswer = function(successCallback, failureCallback) {\\n      var options = (arguments.length >= 2) ? arguments[2] : arguments[0];\\n      var promise = createAnswer.apply(this, [options]);\\n      if (!failureCallback) {\\n        return promise;\\n      }\\n      promise.then(successCallback, failureCallback);\\n      return Promise.resolve();\\n    };\\n\\n    var withCallback = function(description, successCallback, failureCallback) {\\n      var promise = setLocalDescription.apply(this, [description]);\\n      if (!failureCallback) {\\n        return promise;\\n      }\\n      promise.then(successCallback, failureCallback);\\n      return Promise.resolve();\\n    };\\n    prototype.setLocalDescription = withCallback;\\n\\n    withCallback = function(description, successCallback, failureCallback) {\\n      var promise = setRemoteDescription.apply(this, [description]);\\n      if (!failureCallback) {\\n        return promise;\\n      }\\n      promise.then(successCallback, failureCallback);\\n      return Promise.resolve();\\n    };\\n    prototype.setRemoteDescription = withCallback;\\n\\n    withCallback = function(candidate, successCallback, failureCallback) {\\n      var promise = addIceCandidate.apply(this, [candidate]);\\n      if (!failureCallback) {\\n        return promise;\\n      }\\n      promise.then(successCallback, failureCallback);\\n      return Promise.resolve();\\n    };\\n    prototype.addIceCandidate = withCallback;\\n  },\\n  shimGetUserMedia: function(window) {\\n    var navigator = window && window.navigator;\\n\\n    if (!navigator.getUserMedia) {\\n      if (navigator.webkitGetUserMedia) {\\n        navigator.getUserMedia = navigator.webkitGetUserMedia.bind(navigator);\\n      } else if (navigator.mediaDevices &&\\n          navigator.mediaDevices.getUserMedia) {\\n        navigator.getUserMedia = function(constraints, cb, errcb) {\\n          navigator.mediaDevices.getUserMedia(constraints)\\n          .then(cb, errcb);\\n        }.bind(navigator);\\n      }\\n    }\\n  },\\n  shimRTCIceServerUrls: function(window) {\\n    // migrate from non-spec RTCIceServer.url to RTCIceServer.urls\\n    var OrigPeerConnection = window.RTCPeerConnection;\\n    window.RTCPeerConnection = function(pcConfig, pcConstraints) {\\n      if (pcConfig && pcConfig.iceServers) {\\n        var newIceServers = [];\\n        for (var i = 0; i < pcConfig.iceServers.length; i++) {\\n          var server = pcConfig.iceServers[i];\\n          if (!server.hasOwnProperty('urls') &&\\n              server.hasOwnProperty('url')) {\\n            utils.deprecated('RTCIceServer.url', 'RTCIceServer.urls');\\n            server = JSON.parse(JSON.stringify(server));\\n            server.urls = server.url;\\n            delete server.url;\\n            newIceServers.push(server);\\n          } else {\\n            newIceServers.push(pcConfig.iceServers[i]);\\n          }\\n        }\\n        pcConfig.iceServers = newIceServers;\\n      }\\n      return new OrigPeerConnection(pcConfig, pcConstraints);\\n    };\\n    window.RTCPeerConnection.prototype = OrigPeerConnection.prototype;\\n    // wrap static methods. Currently just generateCertificate.\\n    if ('generateCertificate' in window.RTCPeerConnection) {\\n      Object.defineProperty(window.RTCPeerConnection, 'generateCertificate', {\\n        get: function() {\\n          return OrigPeerConnection.generateCertificate;\\n        }\\n      });\\n    }\\n  },\\n  shimTrackEventTransceiver: function(window) {\\n    // Add event.transceiver member over deprecated event.receiver\\n    if (typeof window === 'object' && window.RTCPeerConnection &&\\n        ('receiver' in window.RTCTrackEvent.prototype) &&\\n        // can't check 'transceiver' in window.RTCTrackEvent.prototype, as it is\\n        // defined for some reason even when window.RTCTransceiver is not.\\n        !window.RTCTransceiver) {\\n      Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\\n        get: function() {\\n          return {receiver: this.receiver};\\n        }\\n      });\\n    }\\n  },\\n\\n  shimCreateOfferLegacy: function(window) {\\n    var origCreateOffer = window.RTCPeerConnection.prototype.createOffer;\\n    window.RTCPeerConnection.prototype.createOffer = function(offerOptions) {\\n      var pc = this;\\n      if (offerOptions) {\\n        var audioTransceiver = pc.getTransceivers().find(function(transceiver) {\\n          return transceiver.sender.track &&\\n              transceiver.sender.track.kind === 'audio';\\n        });\\n        if (offerOptions.offerToReceiveAudio === false && audioTransceiver) {\\n          if (audioTransceiver.direction === 'sendrecv') {\\n            audioTransceiver.setDirection('sendonly');\\n          } else if (audioTransceiver.direction === 'recvonly') {\\n            audioTransceiver.setDirection('inactive');\\n          }\\n        } else if (offerOptions.offerToReceiveAudio === true &&\\n            !audioTransceiver) {\\n          pc.addTransceiver('audio');\\n        }\\n\\n        var videoTransceiver = pc.getTransceivers().find(function(transceiver) {\\n          return transceiver.sender.track &&\\n              transceiver.sender.track.kind === 'video';\\n        });\\n        if (offerOptions.offerToReceiveVideo === false && videoTransceiver) {\\n          if (videoTransceiver.direction === 'sendrecv') {\\n            videoTransceiver.setDirection('sendonly');\\n          } else if (videoTransceiver.direction === 'recvonly') {\\n            videoTransceiver.setDirection('inactive');\\n          }\\n        } else if (offerOptions.offerToReceiveVideo === true &&\\n            !videoTransceiver) {\\n          pc.addTransceiver('video');\\n        }\\n      }\\n      return origCreateOffer.apply(pc, arguments);\\n    };\\n  }\\n};\\n\\n// Expose public methods.\\nmodule.exports = {\\n  shimCallbacksAPI: safariShim.shimCallbacksAPI,\\n  shimLocalStreamsAPI: safariShim.shimLocalStreamsAPI,\\n  shimRemoteStreamsAPI: safariShim.shimRemoteStreamsAPI,\\n  shimGetUserMedia: safariShim.shimGetUserMedia,\\n  shimRTCIceServerUrls: safariShim.shimRTCIceServerUrls,\\n  shimTrackEventTransceiver: safariShim.shimTrackEventTransceiver,\\n  shimCreateOfferLegacy: safariShim.shimCreateOfferLegacy\\n  // TODO\\n  // shimPeerConnection: safariShim.shimPeerConnection\\n};\\n\",\"/*\\n *  Copyright (c) 2017 The WebRTC project authors. All Rights Reserved.\\n *\\n *  Use of this source code is governed by a BSD-style license\\n *  that can be found in the LICENSE file in the root of the source\\n *  tree.\\n */\\n /* eslint-env node */\\n'use strict';\\n\\nvar SDPUtils = require('sdp');\\nvar utils = require('./utils');\\n\\n// Wraps the peerconnection event eventNameToWrap in a function\\n// which returns the modified event object.\\nfunction wrapPeerConnectionEvent(window, eventNameToWrap, wrapper) {\\n  if (!window.RTCPeerConnection) {\\n    return;\\n  }\\n  var proto = window.RTCPeerConnection.prototype;\\n  var nativeAddEventListener = proto.addEventListener;\\n  proto.addEventListener = function(nativeEventName, cb) {\\n    if (nativeEventName !== eventNameToWrap) {\\n      return nativeAddEventListener.apply(this, arguments);\\n    }\\n    var wrappedCallback = function(e) {\\n      cb(wrapper(e));\\n    };\\n    this._eventMap = this._eventMap || {};\\n    this._eventMap[cb] = wrappedCallback;\\n    return nativeAddEventListener.apply(this, [nativeEventName,\\n      wrappedCallback]);\\n  };\\n\\n  var nativeRemoveEventListener = proto.removeEventListener;\\n  proto.removeEventListener = function(nativeEventName, cb) {\\n    if (nativeEventName !== eventNameToWrap || !this._eventMap\\n        || !this._eventMap[cb]) {\\n      return nativeRemoveEventListener.apply(this, arguments);\\n    }\\n    var unwrappedCb = this._eventMap[cb];\\n    delete this._eventMap[cb];\\n    return nativeRemoveEventListener.apply(this, [nativeEventName,\\n      unwrappedCb]);\\n  };\\n\\n  Object.defineProperty(proto, 'on' + eventNameToWrap, {\\n    get: function() {\\n      return this['_on' + eventNameToWrap];\\n    },\\n    set: function(cb) {\\n      if (this['_on' + eventNameToWrap]) {\\n        this.removeEventListener(eventNameToWrap,\\n            this['_on' + eventNameToWrap]);\\n        delete this['_on' + eventNameToWrap];\\n      }\\n      if (cb) {\\n        this.addEventListener(eventNameToWrap,\\n            this['_on' + eventNameToWrap] = cb);\\n      }\\n    }\\n  });\\n}\\n\\nmodule.exports = {\\n  shimRTCIceCandidate: function(window) {\\n    // foundation is arbitrarily chosen as an indicator for full support for\\n    // https://w3c.github.io/webrtc-pc/#rtcicecandidate-interface\\n    if (window.RTCIceCandidate && 'foundation' in\\n        window.RTCIceCandidate.prototype) {\\n      return;\\n    }\\n\\n    var NativeRTCIceCandidate = window.RTCIceCandidate;\\n    window.RTCIceCandidate = function(args) {\\n      // Remove the a= which shouldn't be part of the candidate string.\\n      if (typeof args === 'object' && args.candidate &&\\n          args.candidate.indexOf('a=') === 0) {\\n        args = JSON.parse(JSON.stringify(args));\\n        args.candidate = args.candidate.substr(2);\\n      }\\n\\n      // Augment the native candidate with the parsed fields.\\n      var nativeCandidate = new NativeRTCIceCandidate(args);\\n      var parsedCandidate = SDPUtils.parseCandidate(args.candidate);\\n      var augmentedCandidate = Object.assign(nativeCandidate,\\n          parsedCandidate);\\n\\n      // Add a serializer that does not serialize the extra attributes.\\n      augmentedCandidate.toJSON = function() {\\n        return {\\n          candidate: augmentedCandidate.candidate,\\n          sdpMid: augmentedCandidate.sdpMid,\\n          sdpMLineIndex: augmentedCandidate.sdpMLineIndex,\\n          usernameFragment: augmentedCandidate.usernameFragment,\\n        };\\n      };\\n      return augmentedCandidate;\\n    };\\n\\n    // Hook up the augmented candidate in onicecandidate and\\n    // addEventListener('icecandidate', ...)\\n    wrapPeerConnectionEvent(window, 'icecandidate', function(e) {\\n      if (e.candidate) {\\n        Object.defineProperty(e, 'candidate', {\\n          value: new window.RTCIceCandidate(e.candidate),\\n          writable: 'false'\\n        });\\n      }\\n      return e;\\n    });\\n  },\\n\\n  // shimCreateObjectURL must be called before shimSourceObject to avoid loop.\\n\\n  shimCreateObjectURL: function(window) {\\n    var URL = window && window.URL;\\n\\n    if (!(typeof window === 'object' && window.HTMLMediaElement &&\\n          'srcObject' in window.HTMLMediaElement.prototype &&\\n        URL.createObjectURL && URL.revokeObjectURL)) {\\n      // Only shim CreateObjectURL using srcObject if srcObject exists.\\n      return undefined;\\n    }\\n\\n    var nativeCreateObjectURL = URL.createObjectURL.bind(URL);\\n    var nativeRevokeObjectURL = URL.revokeObjectURL.bind(URL);\\n    var streams = new Map(), newId = 0;\\n\\n    URL.createObjectURL = function(stream) {\\n      if ('getTracks' in stream) {\\n        var url = 'polyblob:' + (++newId);\\n        streams.set(url, stream);\\n        utils.deprecated('URL.createObjectURL(stream)',\\n            'elem.srcObject = stream');\\n        return url;\\n      }\\n      return nativeCreateObjectURL(stream);\\n    };\\n    URL.revokeObjectURL = function(url) {\\n      nativeRevokeObjectURL(url);\\n      streams.delete(url);\\n    };\\n\\n    var dsc = Object.getOwnPropertyDescriptor(window.HTMLMediaElement.prototype,\\n                                              'src');\\n    Object.defineProperty(window.HTMLMediaElement.prototype, 'src', {\\n      get: function() {\\n        return dsc.get.apply(this);\\n      },\\n      set: function(url) {\\n        this.srcObject = streams.get(url) || null;\\n        return dsc.set.apply(this, [url]);\\n      }\\n    });\\n\\n    var nativeSetAttribute = window.HTMLMediaElement.prototype.setAttribute;\\n    window.HTMLMediaElement.prototype.setAttribute = function() {\\n      if (arguments.length === 2 &&\\n          ('' + arguments[0]).toLowerCase() === 'src') {\\n        this.srcObject = streams.get(arguments[1]) || null;\\n      }\\n      return nativeSetAttribute.apply(this, arguments);\\n    };\\n  }\\n};\\n\",\"/* Copyright @ 2015 Atlassian Pty Ltd\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *     http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */\\n\\nexports.Interop = require('./interop');\\n\",\"/* Copyright @ 2015 Atlassian Pty Ltd\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *     http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */\\n\\n/* global RTCSessionDescription */\\n/* global RTCIceCandidate */\\n/* jshint -W097 */\\n\\\"use strict\\\";\\n\\nvar transform = require('./transform');\\nvar arrayEquals = require('./array-equals');\\n\\n/**\\n * Unified Plan mids may be parsed as integers\\n */\\nfunction midToString(line) {\\n    if (typeof line.mid === 'number') {\\n        line.mid = line.mid.toString();\\n    }\\n}\\n\\n\\nfunction Interop() {\\n\\n    /**\\n     * This map holds the most recent Unified Plan offer/answer SDP that was\\n     * converted to Plan B, with the SDP type ('offer' or 'answer') as keys and\\n     * the SDP string as values.\\n     *\\n     * @type {{}}\\n     */\\n    this.cache = {\\n        mlB2UMap : {},\\n        mlU2BMap : {}\\n    };\\n}\\n\\nmodule.exports = Interop;\\n\\n/**\\n * Changes the candidate args to match with the related Unified Plan\\n */\\nInterop.prototype.candidateToUnifiedPlan = function(candidate) {\\n    var cand = new RTCIceCandidate(candidate);\\n\\n    cand.sdpMLineIndex = this.cache.mlB2UMap[cand.sdpMLineIndex];\\n    /* TODO: change sdpMid to (audio|video)-SSRC */\\n\\n    return cand;\\n};\\n\\n/**\\n * Changes the candidate args to match with the related Plan B\\n */\\nInterop.prototype.candidateToPlanB = function(candidate) {\\n    var cand = new RTCIceCandidate(candidate);\\n\\n    if (cand.sdpMid.indexOf('audio') === 0) {\\n      cand.sdpMid = 'audio';\\n    } else if (cand.sdpMid.indexOf('video') === 0) {\\n      cand.sdpMid = 'video';\\n    } else {\\n      throw new Error('candidate with ' + cand.sdpMid + ' not allowed');\\n    }\\n\\n    cand.sdpMLineIndex = this.cache.mlU2BMap[cand.sdpMLineIndex];\\n\\n    return cand;\\n};\\n\\n/**\\n * Returns the index of the first m-line with the given media type and with a\\n * direction which allows sending, in the last Unified Plan description with\\n * type \\\"answer\\\" converted to Plan B. Returns {null} if there is no saved\\n * answer, or if none of its m-lines with the given type allow sending.\\n * @param type the media type (\\\"audio\\\" or \\\"video\\\").\\n * @returns {*}\\n */\\nInterop.prototype.getFirstSendingIndexFromAnswer = function(type) {\\n    if (!this.cache.answer) {\\n        return null;\\n    }\\n\\n    var session = transform.parse(this.cache.answer);\\n    if (session && session.media && Array.isArray(session.media)){\\n        for (var i = 0; i < session.media.length; i++) {\\n            if (session.media[i].type == type &&\\n                (!session.media[i].direction /* default to sendrecv */ ||\\n                    session.media[i].direction === 'sendrecv' ||\\n                    session.media[i].direction === 'sendonly')){\\n                return i;\\n            }\\n        }\\n    }\\n\\n    return null;\\n};\\n\\n/**\\n * This method transforms a Unified Plan SDP to an equivalent Plan B SDP. A\\n * PeerConnection wrapper transforms the SDP to Plan B before passing it to the\\n * application.\\n *\\n * @param desc\\n * @returns {*}\\n */\\nInterop.prototype.toPlanB = function(desc) {\\n    var self = this;\\n    //#region Preliminary input validation.\\n\\n    if (typeof desc !== 'object' || desc === null ||\\n        typeof desc.sdp !== 'string') {\\n        console.warn('An empty description was passed as an argument.');\\n        return desc;\\n    }\\n\\n    // Objectify the SDP for easier manipulation.\\n    var session = transform.parse(desc.sdp);\\n\\n    // If the SDP contains no media, there's nothing to transform.\\n    if (typeof session.media === 'undefined' ||\\n        !Array.isArray(session.media) || session.media.length === 0) {\\n        console.warn('The description has no media.');\\n        return desc;\\n    }\\n\\n    // Try some heuristics to \\\"make sure\\\" this is a Unified Plan SDP. Plan B\\n    // SDP has a video, an audio and a data \\\"channel\\\" at most.\\n    if (session.media.length <= 3 && session.media.every(function(m) {\\n            return ['video', 'audio', 'data'].indexOf(m.mid) !== -1;\\n        })) {\\n        console.warn('This description does not look like Unified Plan.');\\n        return desc;\\n    }\\n\\n    //#endregion\\n\\n    // HACK https://bugzilla.mozilla.org/show_bug.cgi?id=1113443\\n    var sdp = desc.sdp;\\n    var rewrite = false;\\n    for (var i = 0; i < session.media.length; i++) {\\n        var uLine = session.media[i];\\n        uLine.rtp.forEach(function(rtp) {\\n            if (rtp.codec === 'NULL')\\n            {\\n                rewrite = true;\\n                var offer = transform.parse(self.cache.offer);\\n                rtp.codec = offer.media[i].rtp[0].codec;\\n            }\\n        });\\n    }\\n    if (rewrite) {\\n        sdp = transform.write(session);\\n    }\\n\\n    // Unified Plan SDP is our \\\"precious\\\". Cache it for later use in the Plan B\\n    // -> Unified Plan transformation.\\n    this.cache[desc.type] = sdp;\\n\\n    //#region Convert from Unified Plan to Plan B.\\n\\n    // We rebuild the session.media array.\\n    var media = session.media;\\n    session.media = [];\\n\\n    // Associative array that maps channel types to channel objects for fast\\n    // access to channel objects by their type, e.g. type2bl['audio']->channel\\n    // obj.\\n    var type2bl = {};\\n\\n    // Used to build the group:BUNDLE value after the channels construction\\n    // loop.\\n    var types = [];\\n\\n    // Used to aggregate the directions of the m-lines.\\n    var directionResult = {};\\n\\n    media.forEach(function(uLine) {\\n        midToString(uLine);\\n        // rtcp-mux is required in the Plan B SDP.\\n        if ((typeof uLine.rtcpMux !== 'string' ||\\n            uLine.rtcpMux !== 'rtcp-mux') &&\\n            uLine.direction !== 'inactive' && uLine.type !== 'application') {\\n            throw new Error('Cannot convert to Plan B because m-lines ' +\\n                'without the rtcp-mux attribute were found.');\\n        }\\n\\n        // If we don't have a channel for this uLine.type OR the selected is\\n        // inactive, then select this uLine as the channel basis.\\n        if (typeof type2bl[uLine.type] === 'undefined' ||\\n            type2bl[uLine.type].direction === 'inactive') {\\n            type2bl[uLine.type] = uLine;\\n        }\\n    });\\n\\n    // Implode the Unified Plan m-lines/tracks into Plan B channels.\\n    media.forEach(function(uLine) {\\n        var type = uLine.type;\\n\\n        if (type === 'application') {\\n            uLine.mid = \\\"data\\\";\\n            session.media.push(uLine);\\n            types.push(uLine.mid);\\n            return;\\n        }\\n\\n        // Add sources to the channel and handle a=msid.\\n        if (typeof uLine.sources === 'object') {\\n            Object.keys(uLine.sources).forEach(function(ssrc) {\\n                if (typeof type2bl[type].sources !== 'object')\\n                    type2bl[type].sources = {};\\n\\n                // Assign the sources to the channel.\\n                type2bl[type].sources[ssrc] = uLine.sources[ssrc];\\n\\n                if (typeof uLine.msid !== 'undefined') {\\n                    // In Plan B the msid is an SSRC attribute. Also, we don't\\n                    // care about the obsolete label and mslabel attributes.\\n                    //\\n                    // Note that it is not guaranteed that the uLine will\\n                    // have an msid. recvonly channels in particular don't have\\n                    // one.\\n                    type2bl[type].sources[ssrc].msid = uLine.msid;\\n                }\\n                // NOTE ssrcs in ssrc groups will share msids, as\\n                // draft-uberti-rtcweb-plan-00 mandates.\\n            });\\n        }\\n\\n        // Add ssrc groups to the channel.\\n        if (typeof uLine.ssrcGroups !== 'undefined' &&\\n                Array.isArray(uLine.ssrcGroups)) {\\n\\n            // Create the ssrcGroups array, if it's not defined.\\n            if (typeof type2bl[type].ssrcGroups === 'undefined' ||\\n                    !Array.isArray(type2bl[type].ssrcGroups)) {\\n                type2bl[type].ssrcGroups = [];\\n            }\\n\\n            // Different ssrc may belong to the same group\\n            if (!arrayEquals.apply(type2bl[type].ssrcGroups,\\n                                   [uLine.ssrcGroups])) {\\n                type2bl[type].ssrcGroups\\n                    = type2bl[type].ssrcGroups.concat(uLine.ssrcGroups);\\n            }\\n        }\\n\\n        var direction = uLine.direction;\\n\\n        directionResult[type]\\n            = (directionResult[type] || 0 /* inactive */)\\n                | directionMasks[direction || 'inactive'];\\n\\n        if (type2bl[type] === uLine) {\\n            // Plan B mids are in ['audio', 'video', 'data']\\n            uLine.mid = type;\\n\\n            // Plan B doesn't support/need the bundle-only attribute.\\n            delete uLine.bundleOnly;\\n\\n            // In Plan B the msid is an SSRC attribute.\\n            delete uLine.msid;\\n\\n            if (direction !== 'inactive') {\\n              // Used to build the group:BUNDLE value after this loop.\\n              types.push(type);\\n            }\\n\\n            // Add the channel to the new media array.\\n            session.media.push(uLine);\\n        }\\n    });\\n\\n    // We regenerate the BUNDLE group with the new mids.\\n    session.groups.some(function(group) {\\n        if (group.type === 'BUNDLE') {\\n            group.mids = types.join(' ');\\n            return true;\\n        }\\n    });\\n\\n    // msid semantic\\n    session.msidSemantic = {\\n        semantic: 'WMS',\\n        token: '*'\\n    };\\n\\n    var resStr = transform.write(session);\\n\\n    return new RTCSessionDescription({\\n        type: desc.type,\\n        sdp: resStr\\n    });\\n\\n    //#endregion\\n};\\n\\n/**\\n * This method transforms a Plan B SDP to an equivalent Unified Plan SDP. A\\n * PeerConnection wrapper transforms the SDP to Unified Plan before passing it\\n * to FF.\\n *\\n * @param desc\\n * @returns {*}\\n */\\nInterop.prototype.toUnifiedPlan = function(desc) {\\n    var self = this;\\n    //#region Preliminary input validation.\\n\\n    if (typeof desc !== 'object' || desc === null ||\\n        typeof desc.sdp !== 'string') {\\n        console.warn('An empty description was passed as an argument.');\\n        return desc;\\n    }\\n\\n    var session = transform.parse(desc.sdp);\\n\\n    // If the SDP contains no media, there's nothing to transform.\\n    if (typeof session.media === 'undefined' ||\\n        !Array.isArray(session.media) || session.media.length === 0) {\\n        console.warn('The description has no media.');\\n        return desc;\\n    }\\n\\n    // Try some heuristics to \\\"make sure\\\" this is a Plan B SDP. Plan B SDP has\\n    // a video, an audio and a data \\\"channel\\\" at most.\\n    if (session.media.length > 3 || !session.media.every(function(m) {\\n            return ['video', 'audio', 'data'].indexOf(m.mid) !== -1;\\n        })) {\\n        console.warn('This description does not look like Plan B.');\\n        return desc;\\n    }\\n\\n    // Make sure this Plan B SDP can be converted to a Unified Plan SDP.\\n    var mids = [];\\n    session.media.forEach(function(m) {\\n        mids.push(m.mid);\\n    });\\n\\n    var hasBundle = false;\\n    if (typeof session.groups !== 'undefined' &&\\n        Array.isArray(session.groups)) {\\n        hasBundle = session.groups.every(function(g) {\\n            return g.type !== 'BUNDLE' ||\\n                arrayEquals.apply(g.mids.sort(), [mids.sort()]);\\n        });\\n    }\\n\\n    if (!hasBundle) {\\n        throw new Error(\\\"Cannot convert to Unified Plan because m-lines that\\\" +\\n            \\\" are not bundled were found.\\\");\\n    }\\n\\n    //#endregion\\n\\n\\n    //#region Convert from Plan B to Unified Plan.\\n\\n    // Unfortunately, a Plan B offer/answer doesn't have enough information to\\n    // rebuild an equivalent Unified Plan offer/answer.\\n    //\\n    // For example, if this is a local answer (in Unified Plan style) that we\\n    // convert to Plan B prior to handing it over to the application (the\\n    // PeerConnection wrapper called us, for instance, after a successful\\n    // createAnswer), we want to remember the m-line at which we've seen the\\n    // (local) SSRC. That's because when the application wants to do call the\\n    // SLD method, forcing us to do the inverse transformation (from Plan B to\\n    // Unified Plan), we need to know to which m-line to assign the (local)\\n    // SSRC. We also need to know all the other m-lines that the original\\n    // answer had and include them in the transformed answer as well.\\n    //\\n    // Another example is if this is a remote offer that we convert to Plan B\\n    // prior to giving it to the application, we want to remember the mid at\\n    // which we've seen the (remote) SSRC.\\n    //\\n    // In the iteration that follows, we use the cached Unified Plan (if it\\n    // exists) to assign mids to ssrcs.\\n\\n    var cached;\\n    if (typeof this.cache[desc.type] !== 'undefined') {\\n        cached = transform.parse(this.cache[desc.type]);\\n    }\\n\\n    var recvonlySsrcs = {\\n        audio: {},\\n        video: {}\\n    };\\n\\n    // A helper map that sends mids to m-line objects. We use it later to\\n    // rebuild the Unified Plan style session.media array.\\n    var mid2ul = {};\\n    var bIdx = 0;\\n    var uIdx = 0;\\n\\n    session.media.forEach(function(bLine) {\\n\\n        if ((typeof bLine.rtcpMux !== 'string' ||\\n            bLine.rtcpMux !== 'rtcp-mux') &&\\n            bLine.direction !== 'inactive' && bLine.type !== 'application') {\\n            throw new Error(\\\"Cannot convert to Unified Plan because m-lines \\\" +\\n                \\\"without the rtcp-mux attribute were found.\\\");\\n        }\\n\\n        if (bLine.type === 'application') {\\n            var uLineData = null;\\n            if (cached && cached.media) {\\n                uLineData = cached.media.find(function(uLine) {\\n                    return uLine.type === 'application';\\n                });\\n            }\\n            if (uLineData) {\\n                mid2ul[uLineData.mid] = uLineData;\\n            } else {\\n                mid2ul[bLine.mid] = bLine;\\n            }\\n            return;\\n        }\\n\\n        // With rtcp-mux and bundle all the channels should have the same ICE\\n        // stuff.\\n        var sources = bLine.sources;\\n        var ssrcGroups = bLine.ssrcGroups;\\n        var candidates = bLine.candidates;\\n        var iceUfrag = bLine.iceUfrag;\\n        var icePwd = bLine.icePwd;\\n        var fingerprint = bLine.fingerprint;\\n        var port = bLine.port;\\n\\n        // We'll use the \\\"bLine\\\" object as a prototype for each new \\\"mLine\\\"\\n        // that we create, but first we need to clean it up a bit.\\n        delete bLine.sources;\\n        delete bLine.ssrcGroups;\\n        delete bLine.candidates;\\n        delete bLine.iceUfrag;\\n        delete bLine.icePwd;\\n        delete bLine.fingerprint;\\n        delete bLine.port;\\n        delete bLine.mid;\\n\\n        // inverted ssrc group map\\n        var ssrc2group = {};\\n        if (typeof ssrcGroups !== 'undefined' && Array.isArray(ssrcGroups)) {\\n            ssrcGroups.forEach(function (ssrcGroup) {\\n\\n                // TODO(gp) find out how to receive simulcast with FF. For the\\n                // time being, hide it.\\n                if (ssrcGroup.semantics === 'SIM') {\\n                    return;\\n                }\\n\\n                // XXX This might brake if an SSRC is in more than one group\\n                // for some reason.\\n                if (typeof ssrcGroup.ssrcs !== 'undefined' &&\\n                    Array.isArray(ssrcGroup.ssrcs)) {\\n                    ssrcGroup.ssrcs.forEach(function (ssrc) {\\n                        if (typeof ssrc2group[ssrc] === 'undefined') {\\n                            ssrc2group[ssrc] = [];\\n                        }\\n\\n                        ssrc2group[ssrc].push(ssrcGroup);\\n                    });\\n                }\\n            });\\n        }\\n\\n        // ssrc to m-line index.\\n        var ssrc2ml = {};\\n\\n        if (typeof sources === 'object') {\\n\\n            // Explode the Plan B channel sources with one m-line per source.\\n            Object.keys(sources).forEach(function(ssrc) {\\n\\n                // The (unified) m-line for this SSRC. We either create it from\\n                // scratch or, if it's a grouped SSRC, we re-use a related\\n                // mline. In other words, if the source is grouped with another\\n                // source, put the two together in the same m-line.\\n                var uLine;\\n\\n                // We assume here that we are the answerer in the O/A, so any\\n                // offers which we translate come from the remote side, while\\n                // answers are local. So the check below is to make that we\\n                // handle receive-only SSRCs in a special way only if they come\\n                // from the remote side.\\n                if (desc.type==='offer') {\\n                    // We want to detect SSRCs which are used by a remote peer\\n                    // in an m-line with direction=recvonly (i.e. they are\\n                    // being used for RTCP only).\\n                    // This information would have gotten lost if the remote\\n                    // peer used Unified Plan and their local description was\\n                    // translated to Plan B. So we use the lack of an MSID\\n                    // attribute to deduce a \\\"receive only\\\" SSRC.\\n                    if (!sources[ssrc].msid) {\\n                        recvonlySsrcs[bLine.type][ssrc] = sources[ssrc];\\n                        // Receive-only SSRCs must not create new m-lines. We\\n                        // will assign them to an existing m-line later.\\n                        return;\\n                    }\\n                }\\n\\n                if (typeof ssrc2group[ssrc] !== 'undefined' &&\\n                    Array.isArray(ssrc2group[ssrc])) {\\n                    ssrc2group[ssrc].some(function (ssrcGroup) {\\n                        // ssrcGroup.ssrcs *is* an Array, no need to check\\n                        // again here.\\n                        return ssrcGroup.ssrcs.some(function (related) {\\n                            if (typeof ssrc2ml[related] === 'object') {\\n                                uLine = ssrc2ml[related];\\n                                return true;\\n                            }\\n                        });\\n                    });\\n                }\\n\\n                if (typeof uLine === 'object') {\\n                    // the m-line already exists. Just add the source.\\n                    uLine.sources[ssrc] = sources[ssrc];\\n                    delete sources[ssrc].msid;\\n                } else {\\n                    // Use the \\\"bLine\\\" as a prototype for the \\\"uLine\\\".\\n                    uLine = Object.create(bLine);\\n                    ssrc2ml[ssrc] = uLine;\\n\\n                    if (typeof sources[ssrc].msid !== 'undefined') {\\n                        // Assign the msid of the source to the m-line. Note\\n                        // that it is not guaranteed that the source will have\\n                        // msid. In particular \\\"recvonly\\\" sources don't have an\\n                        // msid. Note that \\\"recvonly\\\" is a term only defined\\n                        // for m-lines.\\n                        uLine.msid = sources[ssrc].msid;\\n                        delete sources[ssrc].msid;\\n                    }\\n\\n                    // We assign one SSRC per media line.\\n                    uLine.sources = {};\\n                    uLine.sources[ssrc] = sources[ssrc];\\n                    uLine.ssrcGroups = ssrc2group[ssrc];\\n\\n                    // Use the cached Unified Plan SDP (if it exists) to assign\\n                    // SSRCs to mids.\\n                    if (typeof cached !== 'undefined' &&\\n                        typeof cached.media !== 'undefined' &&\\n                        Array.isArray(cached.media)) {\\n\\n                        cached.media.forEach(function (m) {\\n                            if (typeof m.sources === 'object') {\\n                                Object.keys(m.sources).forEach(function (s) {\\n                                    if (s === ssrc) {\\n                                        uLine.mid = m.mid;\\n                                    }\\n                                });\\n                            }\\n                        });\\n                    }\\n\\n                    midToString(uLine);\\n\\n                    if (typeof uLine.mid === 'undefined') {\\n\\n                        // If this is an SSRC that we see for the first time\\n                        // assign it a new mid. This is typically the case when\\n                        // this method is called to transform a remote\\n                        // description for the first time or when there is a\\n                        // new SSRC in the remote description because a new\\n                        // peer has joined the conference. Local SSRCs should\\n                        // have already been added to the map in the toPlanB\\n                        // method.\\n                        //\\n                        // Because FF generates answers in Unified Plan style,\\n                        // we MUST already have a cached answer with all the\\n                        // local SSRCs mapped to some m-line/mid.\\n\\n                        if (desc.type === 'answer') {\\n                            throw new Error(\\\"An unmapped SSRC was found.\\\");\\n                        }\\n\\n                        uLine.mid = [bLine.type, '-', ssrc].join('');\\n                    }\\n\\n                    // Include the candidates in the 1st media line.\\n                    uLine.candidates = candidates;\\n                    uLine.iceUfrag = iceUfrag;\\n                    uLine.icePwd = icePwd;\\n                    uLine.fingerprint = fingerprint;\\n                    uLine.port = port;\\n\\n                    mid2ul[uLine.mid] = uLine;\\n\\n                    self.cache.mlU2BMap[uIdx] = bIdx;\\n                    if (typeof self.cache.mlB2UMap[bIdx] === 'undefined') {\\n                      self.cache.mlB2UMap[bIdx] = uIdx;\\n                    }\\n                    uIdx++;\\n                }\\n            });\\n        }\\n\\n        bIdx++;\\n    });\\n\\n    // Rebuild the media array in the right order and add the missing mLines\\n    // (missing from the Plan B SDP).\\n    session.media = [];\\n    mids = []; // reuse\\n\\n    if (desc.type === 'answer') {\\n\\n        // The media lines in the answer must match the media lines in the\\n        // offer. The order is important too. Here we assume that Firefox is\\n        // the answerer, so we merely have to use the reconstructed (unified)\\n        // answer to update the cached (unified) answer accordingly.\\n        //\\n        // In the general case, one would have to use the cached (unified)\\n        // offer to find the m-lines that are missing from the reconstructed\\n        // answer, potentially grabbing them from the cached (unified) answer.\\n        // One has to be careful with this approach because inactive m-lines do\\n        // not always have an mid, making it tricky (impossible?) to find where\\n        // exactly and which m-lines are missing from the reconstructed answer.\\n\\n        for (var i = 0; i < cached.media.length; i++) {\\n            var uLine = cached.media[i];\\n            midToString(uLine);\\n\\n            if (typeof mid2ul[uLine.mid] === 'undefined') {\\n\\n                // The mid isn't in the reconstructed (unified) answer.\\n                // This is either a (unified) m-line containing a remote\\n                // track only, or a (unified) m-line containing a remote\\n                // track and a local track that has been removed.\\n                // In either case, it MUST exist in the cached\\n                // (unified) answer.\\n                //\\n                // In case this is a removed local track, clean-up\\n                // the (unified) m-line and make sure it's 'recvonly' or\\n                // 'inactive'.\\n\\n                delete uLine.msid;\\n                delete uLine.sources;\\n                delete uLine.ssrcGroups;\\n                if (!uLine.direction\\n                    || uLine.direction === 'sendrecv')\\n                    uLine.direction = 'recvonly';\\n                else if (uLine.direction === 'sendonly')\\n                    uLine.direction = 'inactive';\\n            } else {\\n                // This is an (unified) m-line/channel that contains a local\\n                // track (sendrecv or sendonly channel) or it's a unified\\n                // recvonly m-line/channel. In either case, since we're\\n                // going from PlanB -> Unified Plan this m-line MUST\\n                // exist in the cached answer.\\n            }\\n\\n            session.media.push(uLine);\\n            if (typeof uLine.mid === 'string') {\\n                // inactive lines don't/may not have an mid.\\n                mids.push(uLine.mid);\\n            }\\n        }\\n    } else {\\n\\n        // SDP offer/answer (and the JSEP spec) forbids removing an m-section\\n        // under any circumstances. If we are no longer interested in sending a\\n        // track, we just remove the msid and ssrc attributes and set it to\\n        // either a=recvonly (as the reofferer, we must use recvonly if the\\n        // other side was previously sending on the m-section, but we can also\\n        // leave the possibility open if it wasn't previously in use), or\\n        // a=inactive.\\n\\n        if (typeof cached !== 'undefined' &&\\n            typeof cached.media !== 'undefined' &&\\n            Array.isArray(cached.media)) {\\n            cached.media.forEach(function(uLine) {\\n                midToString(uLine);\\n                mids.push(uLine.mid);\\n                if (typeof mid2ul[uLine.mid] !== 'undefined') {\\n                    session.media.push(mid2ul[uLine.mid]);\\n                } else {\\n                    delete uLine.msid;\\n                    delete uLine.sources;\\n                    delete uLine.ssrcGroups;\\n                    if (!uLine.direction\\n                        || uLine.direction === 'sendrecv')\\n                        uLine.direction = 'recvonly';\\n                    if (!uLine.direction\\n                        || uLine.direction === 'sendonly')\\n                        uLine.direction = 'inactive';\\n                    session.media.push(uLine);\\n                }\\n            });\\n        }\\n\\n        // Add all the remaining (new) m-lines of the transformed SDP.\\n        Object.keys(mid2ul).forEach(function(mid) {\\n            if (mids.indexOf(mid) === -1) {\\n                mids.push(mid);\\n                if (mid2ul[mid].direction === 'recvonly') {\\n                    // This is a remote recvonly channel. Add its SSRC to the\\n                    // appropriate sendrecv or sendonly channel.\\n                    // TODO(gp) what if we don't have sendrecv/sendonly\\n                    // channel?\\n\\n                    session.media.some(function (uLine) {\\n                        if ((uLine.direction === 'sendrecv' ||\\n                            uLine.direction === 'sendonly') &&\\n                            uLine.type === mid2ul[mid].type) {\\n\\n                            // mid2ul[mid] shouldn't have any ssrc-groups\\n                            Object.keys(mid2ul[mid].sources).forEach(\\n                                function (ssrc) {\\n                                uLine.sources[ssrc] =\\n                                    mid2ul[mid].sources[ssrc];\\n                            });\\n\\n                            return true;\\n                        }\\n                    });\\n                } else {\\n                    session.media.push(mid2ul[mid]);\\n                }\\n            }\\n        });\\n    }\\n\\n    // After we have constructed the Plan Unified m-lines we can figure out\\n    // where (in which m-line) to place the 'recvonly SSRCs'.\\n    // Note: we assume here that we are the answerer in the O/A, so any offers\\n    // which we translate come from the remote side, while answers are local\\n    // (and so our last local description is cached as an 'answer').\\n    [\\\"audio\\\", \\\"video\\\"].forEach(function (type) {\\n        if (!session || !session.media || !Array.isArray(session.media))\\n            return;\\n\\n        var idx = null;\\n        if (Object.keys(recvonlySsrcs[type]).length > 0) {\\n            idx = self.getFirstSendingIndexFromAnswer(type);\\n            if (idx === null){\\n                // If this is the first offer we receive, we don't have a\\n                // cached answer. Assume that we will be sending media using\\n                // the first m-line for each media type.\\n\\n                for (var i = 0; i < session.media.length; i++) {\\n                    if (session.media[i].type === type) {\\n                        idx = i;\\n                        break;\\n                    }\\n                }\\n            }\\n        }\\n\\n        if (idx && session.media.length > idx) {\\n            var mLine = session.media[idx];\\n            Object.keys(recvonlySsrcs[type]).forEach(function(ssrc) {\\n                if (mLine.sources && mLine.sources[ssrc]) {\\n                    console.warn(\\\"Replacing an existing SSRC.\\\");\\n                }\\n                if (!mLine.sources) {\\n                    mLine.sources = {};\\n                }\\n\\n                mLine.sources[ssrc] = recvonlySsrcs[type][ssrc];\\n            });\\n        }\\n    });\\n\\n    // We regenerate the BUNDLE group (since we regenerated the mids)\\n    session.groups.some(function(group) {\\n        if (group.type === 'BUNDLE') {\\n            group.mids = mids.join(' ');\\n            return true;\\n        }\\n    });\\n\\n    // msid semantic\\n    session.msidSemantic = {\\n        semantic: 'WMS',\\n        token: '*'\\n    };\\n\\n    var resStr = transform.write(session);\\n\\n    // Cache the transformed SDP (Unified Plan) for later re-use in this\\n    // function.\\n    this.cache[desc.type] = resStr;\\n\\n    return new RTCSessionDescription({\\n        type: desc.type,\\n        sdp: resStr\\n    });\\n\\n    //#endregion\\n};\\n\\n/**\\n * Maps the direction strings to their binary representation. The binary\\n * representation of the directions will contain only 2 bits. The least\\n * significant bit will indicate the receiving direction and the other bit will\\n * indicate the sending direction.\\n *\\n * @type {Map<string, number>}\\n */\\nvar directionMasks = {\\n    'inactive': 0, // 00\\n    'recvonly': 1, // 01\\n    'sendonly': 2, // 10\\n    'sendrecv': 3  // 11\\n};\\n\\n/**\\n * Parses a number into direction string.\\n *\\n * @param {number} direction - The number to be parsed.\\n * @returns {string} - The parsed direction string.\\n */\\nfunction parseDirection(direction) { // eslint-disable-line no-unused-vars\\n    // Filter all other bits except the 2 less significant.\\n    var directionMask = direction & 3;\\n\\n    switch (directionMask) {\\n    case 0:\\n        return 'inactive';\\n    case 1:\\n        return 'recvonly';\\n    case 2:\\n        return 'sendonly';\\n    case 3:\\n        return 'sendrecv';\\n    }\\n}\\n\",\"/* Copyright @ 2015 Atlassian Pty Ltd\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *     http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */\\n\\nvar transform = require('sdp-transform');\\n\\nexports.write = function(session, opts) {\\n\\n  if (typeof session !== 'undefined' &&\\n      typeof session.media !== 'undefined' &&\\n      Array.isArray(session.media)) {\\n\\n    session.media.forEach(function (mLine) {\\n      // expand sources to ssrcs\\n      if (typeof mLine.sources !== 'undefined' &&\\n        Object.keys(mLine.sources).length !== 0) {\\n          mLine.ssrcs = [];\\n          Object.keys(mLine.sources).forEach(function (ssrc) {\\n            var source = mLine.sources[ssrc];\\n            Object.keys(source).forEach(function (attribute) {\\n              mLine.ssrcs.push({\\n                id: ssrc,\\n                attribute: attribute,\\n                value: source[attribute]\\n              });\\n            });\\n          });\\n          delete mLine.sources;\\n        }\\n\\n      // join ssrcs in ssrc groups\\n      if (typeof mLine.ssrcGroups !== 'undefined' &&\\n        Array.isArray(mLine.ssrcGroups)) {\\n          mLine.ssrcGroups.forEach(function (ssrcGroup) {\\n            if (typeof ssrcGroup.ssrcs !== 'undefined' &&\\n                Array.isArray(ssrcGroup.ssrcs)) {\\n              ssrcGroup.ssrcs = ssrcGroup.ssrcs.join(' ');\\n            }\\n          });\\n        }\\n    });\\n  }\\n\\n  // join group mids\\n  if (typeof session !== 'undefined' &&\\n      typeof session.groups !== 'undefined' && Array.isArray(session.groups)) {\\n\\n    session.groups.forEach(function (g) {\\n      if (typeof g.mids !== 'undefined' && Array.isArray(g.mids)) {\\n        g.mids = g.mids.join(' ');\\n      }\\n    });\\n  }\\n\\n  return transform.write(session, opts);\\n};\\n\\nexports.parse = function(sdp) {\\n  var session = transform.parse(sdp);\\n\\n  if (typeof session !== 'undefined' && typeof session.media !== 'undefined' &&\\n      Array.isArray(session.media)) {\\n\\n    session.media.forEach(function (mLine) {\\n      // group sources attributes by ssrc\\n      if (typeof mLine.ssrcs !== 'undefined' && Array.isArray(mLine.ssrcs)) {\\n        mLine.sources = {};\\n        mLine.ssrcs.forEach(function (ssrc) {\\n          if (!mLine.sources[ssrc.id])\\n          mLine.sources[ssrc.id] = {};\\n        mLine.sources[ssrc.id][ssrc.attribute] = ssrc.value;\\n        });\\n\\n        delete mLine.ssrcs;\\n      }\\n\\n      // split ssrcs in ssrc groups\\n      if (typeof mLine.ssrcGroups !== 'undefined' &&\\n        Array.isArray(mLine.ssrcGroups)) {\\n          mLine.ssrcGroups.forEach(function (ssrcGroup) {\\n            if (typeof ssrcGroup.ssrcs === 'string') {\\n              ssrcGroup.ssrcs = ssrcGroup.ssrcs.split(' ');\\n            }\\n          });\\n        }\\n    });\\n  }\\n  // split group mids\\n  if (typeof session !== 'undefined' &&\\n      typeof session.groups !== 'undefined' && Array.isArray(session.groups)) {\\n\\n    session.groups.forEach(function (g) {\\n      if (typeof g.mids === 'string') {\\n        g.mids = g.mids.split(' ');\\n      }\\n    });\\n  }\\n\\n  return session;\\n};\\n\\n\",\"/* Copyright @ 2015 Atlassian Pty Ltd\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *     http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */\\n\\nmodule.exports = function arrayEquals(array) {\\n    // if the other array is a falsy value, return\\n    if (!array)\\n        return false;\\n\\n    // compare lengths - can save a lot of time\\n    if (this.length != array.length)\\n        return false;\\n\\n    for (var i = 0, l = this.length; i < l; i++) {\\n        // Check if we have nested arrays\\n        if (this[i] instanceof Array && array[i] instanceof Array) {\\n            // recurse into the nested arrays\\n            if (!arrayEquals.apply(this[i], [array[i]]))\\n                return false;\\n        } else if (this[i] != array[i]) {\\n            // Warning - two different object instances will never be equal:\\n            // {x:20} != {x:20}\\n            return false;\\n        }\\n    }\\n    return true;\\n};\\n\\n\",\"/* Copyright @ 2016 Atlassian Pty Ltd\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *     http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */\\n\\nvar transform = require('sdp-transform');\\nvar transformUtils = require('./transform-utils');\\nvar parseSsrcs = transformUtils.parseSsrcs;\\nvar writeSsrcs = transformUtils.writeSsrcs;\\n\\n//region Constants\\n\\nvar DEFAULT_NUM_OF_LAYERS = 3;\\n\\n//endregion\\n\\nfunction getSsrcAttribute (mLine, ssrc, attributeName) {\\n    return mLine\\n        .ssrcs\\n        .filter(function(ssrcInfo) { return ssrcInfo.id === ssrc; })\\n        .filter(function(ssrcInfo) { return ssrcInfo.attribute === attributeName; })\\n        .map(function(ssrcInfo) { return ssrcInfo.value; })[0];\\n}\\n\\n//region Ctor\\n\\nfunction Simulcast(options) {\\n\\n    this.options = options ? options : {};\\n\\n    if (!this.options.numOfLayers) {\\n        this.options.numOfLayers = DEFAULT_NUM_OF_LAYERS;\\n    }\\n    console.log(\\\"SdpSimulcast: using \\\" + this.options.numOfLayers + \\\" layers\\\");\\n\\n    /**\\n     * An IN-ORDER list of the simulcast ssrcs\\n     * @type {list<number>}\\n     */\\n    this.ssrcCache = [];\\n}\\n\\n//endregion\\n\\n//region Stateless private utility functions\\n\\n/**\\n * Returns a random integer between min (included) and max (excluded)\\n * Using Math.round() gives a non-uniform distribution!\\n * @returns {number}\\n */\\nfunction generateSSRC() {\\n    var min = 0, max = 0xffffffff;\\n    return Math.floor(Math.random() * (max - min)) + min;\\n};\\n\\nfunction processVideo(session, action) {\\n    if (session == null || !Array.isArray(session.media)) {\\n        return;\\n    }\\n\\n    session.media.forEach(function (mLine) {\\n        if (mLine.type === 'video') {\\n            action(mLine);\\n        }\\n    });\\n};\\n\\nfunction validateDescription(desc)\\n{\\n    return desc && desc != null\\n        && desc.type && desc.type != ''\\n        && desc.sdp && desc.sdp != '';\\n}\\n\\nfunction explodeRemoteSimulcast(mLine) {\\n\\n    if (!mLine || !Array.isArray(mLine.ssrcGroups)) {\\n        return;\\n    }\\n\\n    var sources = parseSsrcs(mLine);\\n    var order = [];\\n\\n    // Find the SIM group and explode its sources.\\n    var j = mLine.ssrcGroups.length;\\n    while (j--) {\\n\\n        if (mLine.ssrcGroups[j].semantics !== 'SIM') {\\n            continue;\\n        }\\n\\n        var simulcastSsrcs = mLine.ssrcGroups[j].ssrcs.split(' ');\\n\\n        for (var i = 0; i < simulcastSsrcs.length; i++) {\\n\\n            var ssrc = simulcastSsrcs[i];\\n            order.push(ssrc);\\n\\n            var parts = sources[ssrc].msid.split(' ');\\n            sources[ssrc].msid = [parts[0], '/', i, ' ', parts[1], '/', i].join('');\\n            sources[ssrc].cname = [sources[ssrc].cname, '/', i].join('');\\n\\n            // Remove all the groups that this SSRC participates in.\\n            mLine.ssrcGroups.forEach(function (relatedGroup) {\\n                if (relatedGroup.semantics === 'SIM') {\\n                    return;\\n                }\\n\\n                var relatedSsrcs = relatedGroup.ssrcs.split(' ');\\n                if (relatedSsrcs.indexOf(ssrc) === -1) {\\n                    return;\\n                }\\n\\n                // Nuke all the related SSRCs.\\n                relatedSsrcs.forEach(function (relatedSSRC) {\\n                    sources[relatedSSRC].msid = sources[ssrc].msid;\\n                    sources[relatedSSRC].cname = sources[ssrc].cname;\\n                    if (relatedSSRC !== ssrc) {\\n                        order.push(relatedSSRC);\\n                    }\\n                });\\n\\n                // Schedule the related group for nuking.\\n            })\\n        }\\n\\n        mLine.ssrcs = writeSsrcs(sources, order);\\n        mLine.ssrcGroups.splice(j, 1);\\n    };\\n}\\n\\nfunction implodeRemoteSimulcast(mLine) {\\n\\n    if (!mLine || !Array.isArray(mLine.ssrcGroups)) {\\n        console.info('Halt: There are no SSRC groups in the remote ' +\\n                'description.');\\n        return;\\n    }\\n\\n    var sources = parseSsrcs(mLine);\\n\\n    // Find the SIM group and nuke it.\\n    mLine.ssrcGroups.forEach(function (simulcastGroup) {\\n        if (simulcastGroup.semantics !== 'SIM') {\\n            return;\\n        }\\n\\n        console.info(\\\"Imploding SIM group: \\\" + simulcastGroup.ssrcs);\\n        // Schedule the SIM group for nuking.\\n        simulcastGroup.nuke = true;\\n\\n        var simulcastSsrcs = simulcastGroup.ssrcs.split(' ');\\n\\n        // Nuke all the higher layer SSRCs.\\n        for (var i = 1; i < simulcastSsrcs.length; i++) {\\n\\n            var ssrc = simulcastSsrcs[i];\\n            delete sources[ssrc];\\n\\n            // Remove all the groups that this SSRC participates in.\\n            mLine.ssrcGroups.forEach(function (relatedGroup) {\\n                if (relatedGroup.semantics === 'SIM') {\\n                    return;\\n                }\\n\\n                var relatedSsrcs = relatedGroup.ssrcs.split(' ');\\n                if (relatedSsrcs.indexOf(ssrc) === -1) {\\n                    return;\\n                }\\n\\n                // Nuke all the related SSRCs.\\n                relatedSsrcs.forEach(function (relatedSSRC) {\\n                    delete sources[relatedSSRC];\\n                });\\n\\n                // Schedule the related group for nuking.\\n                relatedGroup.nuke = true;\\n            })\\n        }\\n\\n        return;\\n    });\\n\\n    mLine.ssrcs = writeSsrcs(sources);\\n\\n    // Nuke all the scheduled groups.\\n    var i = mLine.ssrcGroups.length;\\n    while (i--) {\\n        if (mLine.ssrcGroups[i].nuke) {\\n            mLine.ssrcGroups.splice(i, 1);\\n        }\\n    }\\n}\\n\\nfunction removeGoogConference(mLine) {\\n    if (!mLine || !Array.isArray(mLine.invalid)) {\\n        return;\\n    }\\n\\n    var i = mLine.invalid.length;\\n    while (i--) {\\n        if (mLine.invalid[i].value == 'x-google-flag:conference') {\\n            mLine.invalid.splice(i, 1);\\n        }\\n    }\\n}\\n\\nfunction assertGoogConference(mLine) {\\n    if (!mLine) {\\n        return;\\n    }\\n\\n    if (!Array.isArray(mLine.invalid)) {\\n        mLine.invalid = [];\\n    }\\n\\n    if (!mLine.invalid.some(\\n            function (i) { return i.value === 'x-google-flag:conference' })) {\\n        mLine.invalid.push({'value': 'x-google-flag:conference'});\\n    }\\n}\\n\\nSimulcast.prototype.clearSsrcCache = function() {\\n    this.ssrcCache = [];\\n}\\n\\n/**\\n * When we start as video muted, all of the video\\n *  ssrcs get generated so we can include them as part\\n *  of the original session-accept.  That means we\\n *  need this library to restore to those same ssrcs\\n *  the first time we unmute, so we need the ability to\\n *  force its cache\\n */\\nSimulcast.prototype.setSsrcCache = function(ssrcs) {\\n    this.ssrcCache = ssrcs;\\n}\\n\\n//endregion\\n\\n//region \\\"Private\\\" functions\\n\\n/**\\n * Given a video mLine, return a list of the video ssrcs\\n *  in simulcast layer order (returns a list of just\\n *  the primary ssrc if there are no simulcast layers)\\n */\\nSimulcast.prototype._parseSimLayers = function (mLine) {\\n    var simGroup = mLine.ssrcGroups &&\\n        mLine.ssrcGroups.find(function(group) { return group.semantics === \\\"SIM\\\"; });\\n    if (simGroup) {\\n        return simGroup.ssrcs\\n            .split(\\\" \\\")\\n            .map(function(ssrcStr) { return parseInt(ssrcStr) });\\n    } else {\\n        return [mLine.ssrcs[0].id];\\n    }\\n}\\n\\nSimulcast.prototype._buildNewToOldSsrcMap = function (newSsrcList, oldSsrcList) {\\n    var ssrcMap = {};\\n    for (var i = 0; i < newSsrcList.length; ++i) {\\n        var newSsrc = newSsrcList[i];\\n        var oldSsrc = oldSsrcList[i] || null;\\n        ssrcMap[newSsrc] = oldSsrc;\\n    }\\n    return ssrcMap;\\n}\\n\\nSimulcast.prototype._fillInSourceDataFromCache = function(mLine) {\\n    console.log(\\\"SdpSimulcast restoring from cache: \\\", this.ssrcCache);\\n    var newSimSsrcs = this._parseSimLayers(mLine);\\n    console.log(\\\"SdpSimulcast Parsed new sim ssrcs: \\\", newSimSsrcs);\\n    var newMsid = getSsrcAttribute(mLine, newSimSsrcs[0], \\\"msid\\\");\\n    var newCname = getSsrcAttribute(mLine, newSimSsrcs[0], \\\"cname\\\");\\n    var ssrcsToReplace = this._buildNewToOldSsrcMap(newSimSsrcs, this.ssrcCache);\\n    console.log(\\\"SdpSimulcast built replacement map: \\\", ssrcsToReplace);\\n    // New sdp might only have 1 layer, so not every cached ssrc will have a new one\\n    //  to replace directly\\n    var ssrcsToAdd = this.ssrcCache\\n        .filter(function(ssrc) { return Object.values(ssrcsToReplace).indexOf(ssrc) === -1; });\\n    console.log(\\\"SdpSimulcast built ssrcs to add: \\\", ssrcsToAdd);\\n\\n    // First do the replacements\\n    mLine.ssrcs.forEach(function(ssrc) {\\n        if (ssrcsToReplace[ssrc.id]) {\\n            ssrc.id = ssrcsToReplace[ssrc.id];\\n        }\\n    });\\n    // Now the adds\\n    ssrcsToAdd.forEach(function(ssrc) {\\n        mLine.ssrcs.push({\\n            id: ssrc,\\n            attribute: \\\"msid\\\",\\n            value: newMsid\\n        });\\n        mLine.ssrcs.push({\\n            id: ssrc,\\n            attribute: \\\"cname\\\",\\n            value: newCname\\n        });\\n    });\\n    mLine.ssrcGroups = mLine.ssrcGroups || [];\\n    mLine.ssrcGroups.push({\\n        semantics: \\\"SIM\\\",\\n        ssrcs: this.ssrcCache.join(\\\" \\\")\\n    });\\n    return mLine;\\n}\\n\\nSimulcast.prototype._generateSourceData = function(mLine, primarySsrc) {\\n    var addAssociatedStream = function(mLine, ssrc) {\\n        mLine.ssrcs.push({\\n            id: ssrc,\\n            attribute: \\\"cname\\\",\\n            value: primarySsrcCname\\n        });\\n        mLine.ssrcs.push({\\n            id: ssrc,\\n            attribute: \\\"msid\\\",\\n            value: primarySsrcMsid\\n        });\\n    }\\n    var primarySsrcMsid = getSsrcAttribute(mLine, primarySsrc, \\\"msid\\\");\\n    var primarySsrcCname = getSsrcAttribute(mLine, primarySsrc, \\\"cname\\\");\\n\\n    // Generate sim layers\\n    var simSsrcs = [];\\n    for (var i = 0; i < this.options.numOfLayers - 1; ++i) {\\n        var simSsrc = generateSSRC();\\n        addAssociatedStream(mLine, simSsrc);\\n        simSsrcs.push(simSsrc);\\n    }\\n    mLine.ssrcGroups = mLine.ssrcGroups || [];\\n    mLine.ssrcGroups.push({\\n        semantics: \\\"SIM\\\",\\n        ssrcs: primarySsrc + \\\" \\\" + simSsrcs.join(\\\" \\\")\\n    });\\n    return mLine;\\n}\\n\\n\\n\\n// Assumptions:\\n//  1) 'mLine' contains only a single primary video source\\n//   (i.e. it will not already have simulcast streams inserted)\\n//  2) 'mLine' MAY already contain an RTX stream for its video source\\n//  3) 'mLine' is in sendrecv or sendonly state\\n// Guarantees:\\n//  1) return mLine will contain 2 additional simulcast layers\\n//   generated\\n//  2) if the base video ssrc in mLine has been seen before,\\n//   then the same generated simulcast streams from before will\\n//   be used again\\n//  3) if rtx is enabled for the mLine, all generated simulcast\\n//   streams will have rtx streams generated as well\\n//  4) if rtx has been generated for a src before, we will generate\\n//   the same rtx stream again\\nSimulcast.prototype._restoreSimulcast = function(mLine) {\\n    // First, find the primary video source in the given\\n    // mLine and see if we've seen it before.\\n    var primarySsrc;\\n    var numSsrcs = mLine.ssrcs && mLine.ssrcs\\n        .map(function(ssrcInfo) { return ssrcInfo.id; })\\n        .filter(function(ssrc, index, array) {\\n            return array.indexOf(ssrc) === index;\\n        })\\n        .length || 0;\\n    var numGroups = (mLine.ssrcGroups && mLine.ssrcGroups.length) || 0;\\n\\n    if (numSsrcs === 0 || numSsrcs > 2) {\\n        // Unsupported scenario\\n        return mLine;\\n    }\\n    if (numSsrcs == 2 && numGroups === 0) {\\n        // Unsupported scenario\\n        return mLine;\\n    }\\n\\n    if (numSsrcs === 1) {\\n        primarySsrc = mLine.ssrcs[0].id;\\n    } else {\\n        // There must be an FID group, so parse\\n        //  that and pull the primary ssrc from there\\n        var fidGroup = mLine.ssrcGroups.filter(function(group) { return group.semantics === \\\"FID\\\"; })[0];\\n        if (fidGroup) {\\n            primarySsrc = parseInt(fidGroup.ssrcs.split(\\\" \\\")[0]);\\n        } else {\\n            // Unsupported scenario\\n            return mLine;\\n        }\\n    }\\n    console.log(\\\"SdpSimulcast: current ssrc cache: \\\", this.ssrcCache);\\n    console.log(\\\"SdpSimulcast: parsed primary ssrc \\\" + primarySsrc);\\n\\n    var seenPrimarySsrc = this.ssrcCache.indexOf(primarySsrc) !== -1;\\n\\n    if (seenPrimarySsrc) {\\n        console.log(\\\"SdpSimulcast: Have seen primary ssrc before, \\\" +\\n            \\\"filling in data from cache\\\");\\n        mLine = this._fillInSourceDataFromCache(mLine);\\n    } else {\\n        console.log(\\\"SdpSimulcast: Have not seen primary ssrc before, \\\" +\\n            \\\"generating source data\\\");\\n        mLine = this._generateSourceData(mLine, primarySsrc);\\n    }\\n    // Now update the cache to match whatever we've just put into this sdp\\n    this.ssrcCache = this._parseSimLayers(mLine);\\n    return mLine;\\n}\\n\\n//endregion\\n\\n//region \\\"Public\\\" functions\\n\\n/**\\n *\\n * @param desc\\n * @returns {RTCSessionDescription}\\n */\\nSimulcast.prototype.mungeRemoteDescription = function (desc) {\\n\\n    if (!validateDescription(desc)) {\\n        return desc;\\n    }\\n\\n    var session = transform.parse(desc.sdp);\\n\\n    var self = this;\\n    processVideo(session, function (mLine) {\\n\\n        // Handle simulcast reception.\\n        if (self.options.explodeRemoteSimulcast) {\\n            explodeRemoteSimulcast(mLine);\\n        } else {\\n            implodeRemoteSimulcast(mLine);\\n        }\\n\\n        // If native simulcast is enabled, we must append the x-goog-conference\\n        // attribute to the SDP.\\n        if (self.ssrcCache.length < 1) {\\n            removeGoogConference(mLine);\\n        } else {\\n            assertGoogConference(mLine);\\n        }\\n    });\\n\\n    return new RTCSessionDescription({\\n        type: desc.type,\\n        sdp: transform.write(session)\\n    });\\n};\\n\\n/**\\n *\\n * NOTE this method should be called only if simulcast is supported by\\n * the current browser, otherwise local SDP should not be munged.\\n * @param desc\\n * @returns {RTCSessionDescription}\\n */\\nSimulcast.prototype.mungeLocalDescription = function (desc) {\\n\\n    if (!validateDescription(desc)) {\\n        return desc;\\n    }\\n\\n    var session = transform.parse(desc.sdp);\\n\\n    var self = this;\\n    processVideo(session, function (mLine) {\\n        if (mLine.direction == 'recvonly' || mLine.direction == 'inactive')\\n        {\\n            return;\\n        }\\n        self._restoreSimulcast(mLine);\\n    });\\n\\n    return new RTCSessionDescription({\\n        type: desc.type,\\n        sdp: transform.write(session)\\n    });\\n};\\n\\n//endregion\\n\\nmodule.exports = Simulcast;\\n\",\"/* Copyright @ 2015 Atlassian Pty Ltd\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *     http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */\\n\\n/**\\n * FIXME\\n * @param sources FIXME\\n * @param order An array of SSRCs which will be used to order the entries in\\n * the returned array. Sources whose SSRC appears in 'order' will be added first,\\n * in the specified order, and all other sources will be added afterwards (in\\n * no specific order).\\n * @returns {Array} FIXME\\n */\\nexports.writeSsrcs = function(sources, order) {\\n  var ssrcs = [];\\n\\n  // expand sources to ssrcs\\n  if (typeof sources !== 'undefined' &&\\n      Object.keys(sources).length !== 0) {\\n\\n    if (!Array.isArray(order)) {\\n      order = []\\n    }\\n\\n    // Add the sources that appear in 'order' first.\\n    for (var i = 0; i < order.length; i++) {\\n      var ssrc = order[i];\\n      var source = sources[ssrc];\\n      Object.keys(source).forEach(function (attribute) {\\n        ssrcs.push({\\n          id: ssrc,\\n          attribute: attribute,\\n          value: source[attribute]\\n        });\\n      });\\n    }\\n\\n    // Now add the rest of the sources.\\n    Object.keys(sources).forEach(function (ssrc) {\\n      ssrc = parseInt(ssrc); // Object.keys() returns string\\n      if (order.indexOf(ssrc) >= 0) {\\n        // Already added.\\n        return;\\n      }\\n\\n      var source = sources[ssrc];\\n      Object.keys(source).forEach(function (attribute) {\\n        ssrcs.push({\\n          id: ssrc,\\n          attribute: attribute,\\n          value: source[attribute]\\n        });\\n      });\\n    });\\n  }\\n\\n  return ssrcs;\\n};\\n\\nexports.parseSsrcs = function (mLine) {\\n  var sources = {};\\n  // group sources attributes by ssrc.\\n  if (typeof mLine.ssrcs !== 'undefined' && Array.isArray(mLine.ssrcs)) {\\n    mLine.ssrcs.forEach(function (ssrc) {\\n      if (!sources[ssrc.id])\\n        sources[ssrc.id] = {};\\n      sources[ssrc.id][ssrc.attribute] = ssrc.value;\\n    });\\n  }\\n  return sources;\\n};\\n\\n\",\"/* eslint-disable max-params */\\n\\n/**\\n * This object stores variables needed around the recording of an audio stream\\n * and passing this recording along with additional information along to\\n * different processes\\n * @param blob the recording audio stream as a single blob\\n * @param name the name of the person of the audio stream\\n * @param startTime the time in UTC when recording of the audiostream started\\n * @param wordArray the recorder audio stream transcribed as an array of Word\\n *                  objects\\n */\\nconst RecordingResult = function(blob, name, startTime, wordArray) {\\n    this.blob = blob;\\n    this.name = name;\\n    this.startTime = startTime;\\n    this.wordArray = wordArray;\\n};\\n\\n/* eslint-enable max-params */\\n\\nmodule.exports = RecordingResult;\\n\",\"/* global config */\\n\\nconst TranscriptionService = require('./AbstractTranscriptionService');\\nconst Word = require('../word');\\nconst audioRecorder = require('./../audioRecorder');\\n\\n/**\\n * Implements a TranscriptionService for a Sphinx4 http server\\n */\\nconst SphinxService = function() {\\n    // set the correct url\\n    this.url = getURL();\\n};\\n\\n/**\\n * Subclass of AbstractTranscriptionService\\n */\\nSphinxService.prototype = Object.create(TranscriptionService.prototype);\\n\\n/**\\n * Set the right constructor\\n */\\nSphinxService.constructor = SphinxService;\\n\\n/**\\n * Overrides the sendRequest method from AbstractTranscriptionService\\n * it will send the audio stream the a Sphinx4 server to get the transcription\\n *\\n * @param audioFileBlob the recorder audio stream an a single Blob\\n * @param callback the callback function retrieving the server response\\n */\\nSphinxService.prototype.sendRequest = function(audioFileBlob, callback) {\\n    console.log(`sending an audio file  to ${this.url}`);\\n    console.log(`the audio file being sent: ${audioFileBlob}`);\\n    const request = new XMLHttpRequest();\\n\\n    request.onreadystatechange = function() {\\n        if (request.readyState === XMLHttpRequest.DONE\\n            && request.status === 200) {\\n            callback(request.responseText);\\n        } else if (request.readyState === XMLHttpRequest.DONE) {\\n            throw new Error(\\n                `unable to accept response from sphinx server. status: ${\\n                    request.status}`);\\n        }\\n\\n        // if not ready no point to throw an error\\n    };\\n    request.open('POST', this.url);\\n    request.setRequestHeader('Content-Type',\\n        audioRecorder.determineCorrectFileType());\\n    request.send(audioFileBlob);\\n    console.log(`send ${audioFileBlob}`);\\n};\\n\\n/**\\n * Overrides the formatResponse method from AbstractTranscriptionService\\n * It will parse the answer from the server in the expected format\\n *\\n * @param response the JSON body retrieved from the Sphinx4 server\\n */\\nSphinxService.prototype.formatResponse = function(response) {\\n    const result = JSON.parse(response).objects;\\n\\n    // make sure to delete the session id object, which is always\\n    // the first value in the JSON array\\n\\n    result.shift();\\n    const array = [];\\n\\n    result.forEach(\\n        word =>\\n            word.filler\\n                || array.push(new Word(word.word, word.start, word.end)));\\n\\n    return array;\\n};\\n\\n/**\\n * checks wether the reply is empty, or doesn't contain a correct JSON object\\n * @param response the server response\\n * @return {boolean} whether the response is valid\\n */\\nSphinxService.prototype.verify = function(response) {\\n    console.log(`response from server:${response.toString()}`);\\n\\n    // test if server responded with a string object\\n    if (typeof response !== 'string') {\\n        return false;\\n    }\\n\\n    // test if the string can be parsed into valid JSON\\n    let json;\\n\\n    try {\\n        json = JSON.parse(response);\\n    } catch (error) {\\n        console.log(error);\\n\\n        return false;\\n    }\\n\\n    // check if the JSON has a \\\"objects\\\" value\\n    if (json.objects === undefined) {\\n        return false;\\n    }\\n\\n    // get the \\\"objects\\\" value and check for a session ID\\n    const array = json.objects;\\n\\n    if (!(array[0] && array[0]['session-id'])) {\\n        return false;\\n    }\\n\\n    // everything seems to be in order\\n    return true;\\n};\\n\\n/**\\n * Gets the URL to the Sphinx4 server from the config file. If it's not there,\\n * it will throw an error\\n *\\n * @returns {string} the URL to the sphinx4 server\\n */\\nfunction getURL() {\\n    const message = 'config does not contain an url to a Sphinx4 https server';\\n\\n    if (config.sphinxURL === undefined) {\\n        console.log(message);\\n    } else {\\n        const toReturn = config.sphinxURL;\\n\\n        if (toReturn.includes !== undefined && toReturn.includes('https://')) {\\n            return toReturn;\\n        }\\n        console.log(message);\\n\\n    }\\n}\\n\\nmodule.exports = SphinxService;\\n\",\"/**\\n * Abstract class representing an interface to implement a speech-to-text\\n * service on.\\n */\\nconst TranscriptionService = function() {\\n    throw new Error('TranscriptionService is abstract and cannot be'\\n        + 'created');\\n};\\n\\n/**\\n * This method can be used to send the recorder audio stream and\\n * retrieve the answer from the transcription service from the callback\\n *\\n * @param {RecordingResult} recordingResult a recordingResult object which\\n * includes the recorded audio stream as a blob\\n * @param {Function} callback  which will retrieve the a RecordingResult with\\n *        the answer as a WordArray\\n */\\nTranscriptionService.prototype.send = function send(recordingResult, callback) {\\n    this.sendRequest(recordingResult.blob, response => {\\n        if (this.verify(response)) {\\n            recordingResult.wordArray = this.formatResponse(response);\\n        } else {\\n            console.log('the retrieved response from the server is not valid!');\\n            recordingResult.wordArray = [];\\n        }\\n        callback(recordingResult);\\n    });\\n};\\n\\n/**\\n * Abstract method which will rend the recorder audio stream to the implemented\\n * transcription service and will retrieve an answer, which will be\\n * called on the given callback method\\n *\\n * @param {Blob} audioBlob the recorded audio stream as a single Blob\\n * @param {function} callback function which will retrieve the answer\\n *                            from the service\\n */\\n// eslint-disable-next-line no-unused-vars\\nTranscriptionService.prototype.sendRequest = function(audioBlob, callback) {\\n    throw new Error('TranscriptionService.sendRequest is abstract');\\n};\\n\\n/**\\n * Abstract method which will parse the output from the implemented\\n * transcription service to the expected format\\n *\\n * The transcriber class expect an array of word objects, where each word\\n * object is one transcribed word by the service.\\n *\\n * The expected output of this method is an array of word objects, in\\n * the correct order. That is, the first object in the array is the first word\\n * being said, and the last word in the array is the last word being said\\n *\\n * @param response the answer from the speech-to-text server which needs to be\\n *                 formatted\\n * @return {Array<Word>} an array of Word objects\\n */\\n// eslint-disable-next-line no-unused-vars\\nTranscriptionService.prototype.formatResponse = function(response) {\\n    throw new Error('TranscriptionService.format is abstract');\\n};\\n\\n/**\\n * Abstract method which will verify that the response from the server is valid\\n *\\n * @param response the response from the server\\n * @return {boolean} true if response is valid, false otherwise\\n */\\n// eslint-disable-next-line no-unused-vars\\nTranscriptionService.prototype.verify = function(response) {\\n    throw new Error('TranscriptionService.verify is abstract');\\n};\\n\\nmodule.exports = TranscriptionService;\\n\",\"/**\\n * An object representing a transcribed word, with some additional information\\n * @param word the word\\n * @param begin the time the word was started being uttered\\n * @param end the time the word stopped being uttered\\n */\\nconst Word = function(word, begin, end) {\\n    this.word = word;\\n    this.begin = begin;\\n    this.end = end;\\n};\\n\\n/**\\n * Get the string representation of the word\\n * @returns {*} the word as a string\\n */\\nWord.prototype.getWord = function() {\\n    return this.word;\\n};\\n\\n/**\\n * Get the time the word started being uttered\\n * @returns {*} the start time as an integer\\n */\\nWord.prototype.getBeginTime = function() {\\n    return this.begin;\\n};\\n\\n/**\\n * Get the time the word stopped being uttered\\n * @returns {*} the end time as an integer\\n */\\nWord.prototype.getEndTime = function() {\\n    return this.end;\\n};\\n\\nmodule.exports = Word;\\n\"]}","code":"!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define([],t):\"object\"==typeof exports?exports.JitsiMeetJS=t():e.JitsiMeetJS=t()}(window,function(){return function(e){var t={};function n(r){if(t[r])return t[r].exports;var i=t[r]={i:r,l:!1,exports:{}};return e[r].call(i.exports,i,i.exports,n),i.l=!0,i.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var i in e)n.d(r,i,function(t){return e[t]}.bind(null,i));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,\"a\",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p=\"\",n(n.s=121)}([function(e,t){e.exports={ADD_ICE_CANDIDATE_FAILED:\"xmpp.add_ice_candidate_failed\",AUDIO_MUTED_BY_FOCUS:\"xmpp.audio_muted_by_focus\",AUTHENTICATION_REQUIRED:\"xmpp.authentication_required\",BRIDGE_DOWN:\"xmpp.bridge_down\",CALL_ACCEPTED:\"xmpp.callaccepted.jingle\",CALL_INCOMING:\"xmpp.callincoming.jingle\",CALL_ENDED:\"xmpp.callended.jingle\",CHAT_ERROR_RECEIVED:\"xmpp.chat_error_received\",CONFERENCE_PROPERTIES_CHANGED:\"xmpp.conference_properties_changed\",CONFERENCE_SETUP_FAILED:\"xmpp.conference_setup_failed\",CONNECTION_ESTABLISHED:\"xmpp.connection.connected\",CONNECTION_FAILED:\"xmpp.connection.failed\",CONNECTION_INTERRUPTED:\"xmpp.connection.interrupted\",CONNECTION_RESTORED:\"xmpp.connection.restored\",CONNECTION_ICE_FAILED:\"xmpp.connection.ice.failed\",DISPLAY_NAME_CHANGED:\"xmpp.display_name_changed\",EMUC_ROOM_ADDED:\"xmpp.emuc_room_added\",EMUC_ROOM_REMOVED:\"xmpp.emuc_room_removed\",ETHERPAD:\"xmpp.etherpad\",FOCUS_DISCONNECTED:\"xmpp.focus_disconnected\",FOCUS_LEFT:\"xmpp.focus_left\",GRACEFUL_SHUTDOWN:\"xmpp.graceful_shutdown\",ICE_RESTARTING:\"rtc.ice_restarting\",ICE_RESTART_SUCCESS:\"rtc.ice_restart_success\",JINGLE_ERROR:\"xmpp.jingle_error\",JINGLE_FATAL_ERROR:\"xmpp.jingle_fatal_error\",KICKED:\"xmpp.kicked\",LOCAL_ROLE_CHANGED:\"xmpp.localrole_changed\",MESSAGE_RECEIVED:\"xmpp.message_received\",PRIVATE_MESSAGE_RECEIVED:\"xmpp.private_message_received\",MUC_MEMBER_BOT_TYPE_CHANGED:\"xmpp.muc_member_bot_type_changed\",MUC_DESTROYED:\"xmpp.muc_destroyed\",MUC_JOINED:\"xmpp.muc_joined\",MUC_MEMBER_JOINED:\"xmpp.muc_member_joined\",MUC_MEMBER_LEFT:\"xmpp.muc_member_left\",MUC_LEFT:\"xmpp.muc_left\",MUC_ROLE_CHANGED:\"xmpp.muc_role_changed\",MUC_LOCK_CHANGED:\"xmpp.muc_lock_changed\",PARTICIPANT_AUDIO_MUTED:\"xmpp.audio_muted\",PARTICIPANT_VIDEO_MUTED:\"xmpp.video_muted\",PARTICIPANT_VIDEO_TYPE_CHANGED:\"xmpp.video_type\",PARTCIPANT_FEATURES_CHANGED:\"xmpp.partcipant_features_changed\",PASSWORD_REQUIRED:\"xmpp.password_required\",PEERCONNECTION_READY:\"xmpp.peerconnection_ready\",PHONE_NUMBER_CHANGED:\"conference.phoneNumberChanged\",PRESENCE_RECEIVED:\"xmpp.presence_received\",PRESENCE_STATUS:\"xmpp.presence_status\",PROMPT_FOR_LOGIN:\"xmpp.prompt_for_login\",READY_TO_JOIN:\"xmpp.ready_to_join\",RECORDER_STATE_CHANGED:\"xmpp.recorderStateChanged\",REMOTE_STATS:\"xmpp.remote_stats\",RESERVATION_ERROR:\"xmpp.room_reservation_error\",ROOM_CONNECT_ERROR:\"xmpp.room_connect_error\",ROOM_CONNECT_NOT_ALLOWED_ERROR:\"xmpp.room_connect_error.not_allowed\",ROOM_JOIN_ERROR:\"xmpp.room_join_error\",ROOM_MAX_USERS_ERROR:\"xmpp.room_max_users_error\",SENDING_CHAT_MESSAGE:\"xmpp.sending_chat_message\",SENDING_PRIVATE_CHAT_MESSAGE:\"xmpp.sending_private_chat_message\",SESSION_ACCEPT_TIMEOUT:\"xmpp.session_accept_timeout\",SPEAKER_STATS_RECEIVED:\"xmpp.speaker_stats_received\",START_MUTED_FROM_FOCUS:\"xmpp.start_muted_from_focus\",SUBJECT_CHANGED:\"xmpp.subject_changed\",SUSPEND_DETECTED:\"xmpp.suspend_detected\",TRANSCRIPTION_STATUS_CHANGED:\"xmpp.transcription_status_changed\",TRANSPORT_INFO:\"xmpp.transportinfo.jingle\",VIDEO_SIP_GW_AVAILABILITY_CHANGED:\"xmpp.videoSIPGWAvailabilityChanged\",VIDEO_SIP_GW_SESSION_STATE_CHANGED:\"xmpp.videoSIPGWSessionStateChanged\",ICE_CONNECTION_STATE_CHANGED:\"xmpp.ice_connection_state_changed\",JSON_MESSAGE_RECEIVED:\"xmmp.json_message_received\"}},function(e,t,n){var r,i,o;function a(e){return(a=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}i=[],void 0===(o=\"function\"==typeof(r=function(){\n/**\n   * @license almond 0.3.3 Copyright jQuery Foundation and other contributors.\n   * Released under MIT license, http://github.com/requirejs/almond/LICENSE\n   */\nvar n,r,i,o,s;return function(e){var t,o,s,c,u={},l={},d={},p={},h=Object.prototype.hasOwnProperty,f=[].slice,m=/\\.js$/;function v(e,t){return h.call(e,t)}function y(e,t){var n,r,i,o,a,s,c,u,l,p,h,f=t&&t.split(\"/\"),v=d.map,y=v&&v[\"*\"]||{};if(e){for(a=(e=e.split(\"/\")).length-1,d.nodeIdCompat&&m.test(e[a])&&(e[a]=e[a].replace(m,\"\")),\".\"===e[0].charAt(0)&&f&&(e=f.slice(0,f.length-1).concat(e)),l=0;l<e.length;l++)if(\".\"===(h=e[l]))e.splice(l,1),l-=1;else if(\"..\"===h){if(0===l||1===l&&\"..\"===e[2]||\"..\"===e[l-1])continue;l>0&&(e.splice(l-1,2),l-=2)}e=e.join(\"/\")}if((f||y)&&v){for(l=(n=e.split(\"/\")).length;l>0;l-=1){if(r=n.slice(0,l).join(\"/\"),f)for(p=f.length;p>0;p-=1)if((i=v[f.slice(0,p).join(\"/\")])&&(i=i[r])){o=i,s=l;break}if(o)break;!c&&y&&y[r]&&(c=y[r],u=l)}!o&&c&&(o=c,s=u),o&&(n.splice(0,s,o),e=n.join(\"/\"))}return e}function g(t,n){return function(){var r=f.call(arguments,0);return\"string\"!=typeof r[0]&&1===r.length&&r.push(null),o.apply(e,r.concat([t,n]))}}function _(e){return function(t){u[e]=t}}function S(n){if(v(l,n)){var r=l[n];delete l[n],p[n]=!0,t.apply(e,r)}if(!v(u,n)&&!v(p,n))throw new Error(\"No \"+n);return u[n]}function b(e){var t,n=e?e.indexOf(\"!\"):-1;return n>-1&&(t=e.substring(0,n),e=e.substring(n+1,e.length)),[t,e]}function E(e){return e?b(e):[]}function T(e){return function(){return d&&d.config&&d.config[e]||{}}}s=function(e,t){var n,r,i=b(e),o=i[0],a=t[1];return e=i[1],o&&(n=S(o=y(o,a))),o?e=n&&n.normalize?n.normalize(e,(r=a,function(e){return y(e,r)})):y(e,a):(o=(i=b(e=y(e,a)))[0],e=i[1],o&&(n=S(o))),{f:o?o+\"!\"+e:e,n:e,pr:o,p:n}},c={require:function(e){return g(e)},exports:function(e){var t=u[e];return void 0!==t?t:u[e]={}},module:function(e){return{id:e,uri:\"\",exports:u[e],config:T(e)}}},t=function(t,n,r,i){var o,d,h,f,m,y,b,T=[],C=a(r);if(y=E(i=i||t),\"undefined\"===C||\"function\"===C){for(n=!n.length&&r.length?[\"require\",\"exports\",\"module\"]:n,m=0;m<n.length;m+=1)if(\"require\"===(d=(f=s(n[m],y)).f))T[m]=c.require(t);else if(\"exports\"===d)T[m]=c.exports(t),b=!0;else if(\"module\"===d)o=T[m]=c.module(t);else if(v(u,d)||v(l,d)||v(p,d))T[m]=S(d);else{if(!f.p)throw new Error(t+\" missing \"+d);f.p.load(f.n,g(i,!0),_(d),{}),T[m]=u[d]}h=r?r.apply(u[t],T):void 0,t&&(o&&o.exports!==e&&o.exports!==u[t]?u[t]=o.exports:h===e&&b||(u[t]=h))}else t&&(u[t]=r)},n=r=o=function(n,r,i,a,u){if(\"string\"==typeof n)return c[n]?c[n](r):S(s(n,E(r)).f);if(!n.splice){if((d=n).deps&&o(d.deps,d.callback),!r)return;r.splice?(n=r,r=i,i=null):n=e}return r=r||function(){},\"function\"==typeof i&&(i=a,a=u),a?t(e,n,r,i):setTimeout(function(){t(e,n,r,i)},4),o},o.config=function(e){return o(e)},n._defined=u,(i=function(e,t,n){if(\"string\"!=typeof e)throw new Error(\"See almond README: incorrect module build, no module name\");t.splice||(n=t,t=[]),v(u,e)||v(l,e)||(l[e]=[e,t,n])}).amd={jQuery:!0}}(),i(\"node_modules/almond/almond.js\",function(){}),o=this,s=function(e){Function.prototype.bind||(Function.prototype.bind=function(e){var t=this,n=Array.prototype.slice,r=Array.prototype.concat,i=n.call(arguments,1);return function(){return t.apply(e||this,r.call(i,n.call(arguments,0)))}}),Array.isArray||(Array.isArray=function(e){return\"[object Array]\"===Object.prototype.toString.call(e)}),Array.prototype.indexOf||(Array.prototype.indexOf=function(e){var t=this.length,n=Number(arguments[1])||0;for((n=n<0?Math.ceil(n):Math.floor(n))<0&&(n+=t);n<t;n++)if(n in this&&this[n]===e)return n;return-1}),Array.prototype.forEach||(Array.prototype.forEach=function(e,t){var n,r;if(null===this)throw new TypeError(\" this is null or not defined\");var i=Object(this),o=i.length>>>0;if(\"function\"!=typeof e)throw new TypeError(e+\" is not a function\");for(arguments.length>1&&(n=t),r=0;r<o;){var a;r in i&&(a=i[r],e.call(n,a,r,i)),r++}});var t=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";e.btoa||(e.btoa=function(e){var n,r,i,o,a,s,c,u=\"\",l=0;do{o=(n=e.charCodeAt(l++))>>2,a=(3&n)<<4|(r=e.charCodeAt(l++))>>4,s=(15&r)<<2|(i=e.charCodeAt(l++))>>6,c=63&i,isNaN(r)?(a=(3&n)<<4,s=c=64):isNaN(i)&&(c=64),u=u+t.charAt(o)+t.charAt(a)+t.charAt(s)+t.charAt(c)}while(l<e.length);return u}),e.atob||(e.atob=function(e){var n,r,i,o,a,s,c=\"\",u=0;e=e.replace(/[^A-Za-z0-9\\+\\/\\=]/g,\"\");do{n=t.indexOf(e.charAt(u++))<<2|(o=t.indexOf(e.charAt(u++)))>>4,r=(15&o)<<4|(a=t.indexOf(e.charAt(u++)))>>2,i=(3&a)<<6|(s=t.indexOf(e.charAt(u++))),c+=String.fromCharCode(n),64!==a&&(c+=String.fromCharCode(r)),64!==s&&(c+=String.fromCharCode(i))}while(u<e.length);return c})},\"function\"==typeof i&&i.amd?i(\"strophe-polyfill\",[],function(){return s(o)}):s(o),function(n,r){\"function\"==typeof i&&i.amd?i(\"strophe-sha1\",[],function(){return r()}):\"object\"===a(t)?e.exports=r():n.SHA1=r()}(this,function(){function e(e,r){e[r>>5]|=128<<24-r%32,e[15+(r+64>>9<<4)]=r;var a,s,c,u,l,d,p,h,f=new Array(80),m=1732584193,v=-271733879,y=-1732584194,g=271733878,_=-1009589776;for(a=0;a<e.length;a+=16){for(u=m,l=v,d=y,p=g,h=_,s=0;s<80;s++)f[s]=s<16?e[a+s]:o(f[s-3]^f[s-8]^f[s-14]^f[s-16],1),c=i(i(o(m,5),t(s,v,y,g)),i(i(_,f[s]),n(s))),_=g,g=y,y=o(v,30),v=m,m=c;m=i(m,u),v=i(v,l),y=i(y,d),g=i(g,p),_=i(_,h)}return[m,v,y,g,_]}function t(e,t,n,r){return e<20?t&n|~t&r:e<40?t^n^r:e<60?t&n|t&r|n&r:t^n^r}function n(e){return e<20?1518500249:e<40?1859775393:e<60?-1894007588:-899497514}function r(t,n){var r=a(t);r.length>16&&(r=e(r,8*t.length));for(var i=new Array(16),o=new Array(16),s=0;s<16;s++)i[s]=909522486^r[s],o[s]=1549556828^r[s];var c=e(i.concat(a(n)),512+8*n.length);return e(o.concat(c),672)}function i(e,t){var n=(65535&e)+(65535&t);return(e>>16)+(t>>16)+(n>>16)<<16|65535&n}function o(e,t){return e<<t|e>>>32-t}function a(e){for(var t=[],n=0;n<8*e.length;n+=8)t[n>>5]|=(255&e.charCodeAt(n/8))<<24-n%32;return t}function s(e){for(var t=\"\",n=0;n<32*e.length;n+=8)t+=String.fromCharCode(e[n>>5]>>>24-n%32&255);return t}function c(e){for(var t,n,r=\"\",i=0;i<4*e.length;i+=3)for(t=(e[i>>2]>>8*(3-i%4)&255)<<16|(e[i+1>>2]>>8*(3-(i+1)%4)&255)<<8|e[i+2>>2]>>8*(3-(i+2)%4)&255,n=0;n<4;n++)8*i+6*n>32*e.length?r+=\"=\":r+=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\".charAt(t>>6*(3-n)&63);return r}return{b64_hmac_sha1:function(e,t){return c(r(e,t))},b64_sha1:function(t){return c(e(a(t),8*t.length))},binb2str:s,core_hmac_sha1:r,str_hmac_sha1:function(e,t){return s(r(e,t))},str_sha1:function(t){return s(e(a(t),8*t.length))}}}),function(n,r){\"function\"==typeof i&&i.amd?i(\"strophe-md5\",[],function(){return r()}):\"object\"===a(t)?e.exports=r():n.MD5=r()}(this,function(){var e=function(e,t){var n=(65535&e)+(65535&t);return(e>>16)+(t>>16)+(n>>16)<<16|65535&n},t=function(e){for(var t=[],n=0;n<8*e.length;n+=8)t[n>>5]|=(255&e.charCodeAt(n/8))<<n%32;return t},n=function(t,n,r,i,o,a){return e((s=e(e(n,t),e(i,a)))<<(c=o)|s>>>32-c,r);var s,c},r=function(e,t,r,i,o,a,s){return n(t&r|~t&i,e,t,o,a,s)},i=function(e,t,r,i,o,a,s){return n(t&i|r&~i,e,t,o,a,s)},o=function(e,t,r,i,o,a,s){return n(t^r^i,e,t,o,a,s)},a=function(e,t,r,i,o,a,s){return n(r^(t|~i),e,t,o,a,s)},s=function(t,n){t[n>>5]|=128<<n%32,t[14+(n+64>>>9<<4)]=n;for(var s,c,u,l,d=1732584193,p=-271733879,h=-1732584194,f=271733878,m=0;m<t.length;m+=16)s=d,c=p,u=h,l=f,d=r(d,p,h,f,t[m+0],7,-680876936),f=r(f,d,p,h,t[m+1],12,-389564586),h=r(h,f,d,p,t[m+2],17,606105819),p=r(p,h,f,d,t[m+3],22,-1044525330),d=r(d,p,h,f,t[m+4],7,-176418897),f=r(f,d,p,h,t[m+5],12,1200080426),h=r(h,f,d,p,t[m+6],17,-1473231341),p=r(p,h,f,d,t[m+7],22,-45705983),d=r(d,p,h,f,t[m+8],7,1770035416),f=r(f,d,p,h,t[m+9],12,-1958414417),h=r(h,f,d,p,t[m+10],17,-42063),p=r(p,h,f,d,t[m+11],22,-1990404162),d=r(d,p,h,f,t[m+12],7,1804603682),f=r(f,d,p,h,t[m+13],12,-40341101),h=r(h,f,d,p,t[m+14],17,-1502002290),p=r(p,h,f,d,t[m+15],22,1236535329),d=i(d,p,h,f,t[m+1],5,-165796510),f=i(f,d,p,h,t[m+6],9,-1069501632),h=i(h,f,d,p,t[m+11],14,643717713),p=i(p,h,f,d,t[m+0],20,-373897302),d=i(d,p,h,f,t[m+5],5,-701558691),f=i(f,d,p,h,t[m+10],9,38016083),h=i(h,f,d,p,t[m+15],14,-660478335),p=i(p,h,f,d,t[m+4],20,-405537848),d=i(d,p,h,f,t[m+9],5,568446438),f=i(f,d,p,h,t[m+14],9,-1019803690),h=i(h,f,d,p,t[m+3],14,-187363961),p=i(p,h,f,d,t[m+8],20,1163531501),d=i(d,p,h,f,t[m+13],5,-1444681467),f=i(f,d,p,h,t[m+2],9,-51403784),h=i(h,f,d,p,t[m+7],14,1735328473),p=i(p,h,f,d,t[m+12],20,-1926607734),d=o(d,p,h,f,t[m+5],4,-378558),f=o(f,d,p,h,t[m+8],11,-2022574463),h=o(h,f,d,p,t[m+11],16,1839030562),p=o(p,h,f,d,t[m+14],23,-35309556),d=o(d,p,h,f,t[m+1],4,-1530992060),f=o(f,d,p,h,t[m+4],11,1272893353),h=o(h,f,d,p,t[m+7],16,-155497632),p=o(p,h,f,d,t[m+10],23,-1094730640),d=o(d,p,h,f,t[m+13],4,681279174),f=o(f,d,p,h,t[m+0],11,-358537222),h=o(h,f,d,p,t[m+3],16,-722521979),p=o(p,h,f,d,t[m+6],23,76029189),d=o(d,p,h,f,t[m+9],4,-640364487),f=o(f,d,p,h,t[m+12],11,-421815835),h=o(h,f,d,p,t[m+15],16,530742520),p=o(p,h,f,d,t[m+2],23,-995338651),d=a(d,p,h,f,t[m+0],6,-198630844),f=a(f,d,p,h,t[m+7],10,1126891415),h=a(h,f,d,p,t[m+14],15,-1416354905),p=a(p,h,f,d,t[m+5],21,-57434055),d=a(d,p,h,f,t[m+12],6,1700485571),f=a(f,d,p,h,t[m+3],10,-1894986606),h=a(h,f,d,p,t[m+10],15,-1051523),p=a(p,h,f,d,t[m+1],21,-2054922799),d=a(d,p,h,f,t[m+8],6,1873313359),f=a(f,d,p,h,t[m+15],10,-30611744),h=a(h,f,d,p,t[m+6],15,-1560198380),p=a(p,h,f,d,t[m+13],21,1309151649),d=a(d,p,h,f,t[m+4],6,-145523070),f=a(f,d,p,h,t[m+11],10,-1120210379),h=a(h,f,d,p,t[m+2],15,718787259),p=a(p,h,f,d,t[m+9],21,-343485551),d=e(d,s),p=e(p,c),h=e(h,u),f=e(f,l);return[d,p,h,f]};return{hexdigest:function(e){return function(e){for(var t=\"\",n=0;n<4*e.length;n++)t+=\"0123456789abcdef\".charAt(e[n>>2]>>n%4*8+4&15)+\"0123456789abcdef\".charAt(e[n>>2]>>n%4*8&15);return t}(s(t(e),8*e.length))},hash:function(e){return function(e){for(var t=\"\",n=0;n<32*e.length;n+=8)t+=String.fromCharCode(e[n>>5]>>>n%32&255);return t}(s(t(e),8*e.length))}}}),function(n,r){\"function\"==typeof i&&i.amd?i(\"strophe-utils\",[],function(){return r()}):\"object\"===a(t)?e.exports=r():n.stropheUtils=r()}(this,function(){return{utf16to8:function(e){var t,n,r=\"\",i=e.length;for(t=0;t<i;t++)(n=e.charCodeAt(t))>=0&&n<=127?r+=e.charAt(t):n>2047?(r+=String.fromCharCode(224|n>>12&15),r+=String.fromCharCode(128|n>>6&63),r+=String.fromCharCode(128|n>>0&63)):(r+=String.fromCharCode(192|n>>6&31),r+=String.fromCharCode(128|n>>0&63));return r},addCookies:function(e){var t,n,r,i,o,s,c;for(t in e||{})o=\"\",s=\"\",c=\"\",r=\"object\"===a(n=e[t]),i=escape(unescape(r?n.value:n)),r&&(o=n.expires?\";expires=\"+n.expires:\"\",s=n.domain?\";domain=\"+n.domain:\"\",c=n.path?\";path=\"+n.path:\"\"),document.cookie=t+\"=\"+i+o+s+c}}}),function(n,o){if(\"function\"==typeof i&&i.amd)i(\"strophe-core\",[\"strophe-sha1\",\"strophe-md5\",\"strophe-utils\"],function(){return o.apply(this,arguments)});else if(\"object\"===a(t))e.exports=o(r(\"./sha1\"),r(\"./md5\"),r(\"./utils\"));else{var s=o(n.SHA1,n.MD5,n.stropheUtils);n.Strophe=s.Strophe,n.$build=s.$build,n.$iq=s.$iq,n.$msg=s.$msg,n.$pres=s.$pres,n.SHA1=s.SHA1,n.MD5=s.MD5,n.b64_hmac_sha1=s.SHA1.b64_hmac_sha1,n.b64_sha1=s.SHA1.b64_sha1,n.str_hmac_sha1=s.SHA1.str_hmac_sha1,n.str_sha1=s.SHA1.str_sha1}}(this,function(e,t,n){var r;function i(e,t){return new r.Builder(e,t)}function o(e){return new r.Builder(\"iq\",e)}function s(e){return new r.Builder(\"presence\",e)}return(r={VERSION:\"1.2.16\",NS:{HTTPBIND:\"http://jabber.org/protocol/httpbind\",BOSH:\"urn:xmpp:xbosh\",CLIENT:\"jabber:client\",AUTH:\"jabber:iq:auth\",ROSTER:\"jabber:iq:roster\",PROFILE:\"jabber:iq:profile\",DISCO_INFO:\"http://jabber.org/protocol/disco#info\",DISCO_ITEMS:\"http://jabber.org/protocol/disco#items\",MUC:\"http://jabber.org/protocol/muc\",SASL:\"urn:ietf:params:xml:ns:xmpp-sasl\",STREAM:\"http://etherx.jabber.org/streams\",FRAMING:\"urn:ietf:params:xml:ns:xmpp-framing\",BIND:\"urn:ietf:params:xml:ns:xmpp-bind\",SESSION:\"urn:ietf:params:xml:ns:xmpp-session\",VERSION:\"jabber:iq:version\",STANZAS:\"urn:ietf:params:xml:ns:xmpp-stanzas\",XHTML_IM:\"http://jabber.org/protocol/xhtml-im\",XHTML:\"http://www.w3.org/1999/xhtml\"},XHTML:{tags:[\"a\",\"blockquote\",\"br\",\"cite\",\"em\",\"img\",\"li\",\"ol\",\"p\",\"span\",\"strong\",\"ul\",\"body\"],attributes:{a:[\"href\"],blockquote:[\"style\"],br:[],cite:[\"style\"],em:[],img:[\"src\",\"alt\",\"style\",\"height\",\"width\"],li:[\"style\"],ol:[\"style\"],p:[\"style\"],span:[\"style\"],strong:[],ul:[\"style\"],body:[]},css:[\"background-color\",\"color\",\"font-family\",\"font-size\",\"font-style\",\"font-weight\",\"margin-left\",\"margin-right\",\"text-align\",\"text-decoration\"],validTag:function(e){for(var t=0;t<r.XHTML.tags.length;t++)if(e===r.XHTML.tags[t])return!0;return!1},validAttribute:function(e,t){if(void 0!==r.XHTML.attributes[e]&&r.XHTML.attributes[e].length>0)for(var n=0;n<r.XHTML.attributes[e].length;n++)if(t===r.XHTML.attributes[e][n])return!0;return!1},validCSS:function(e){for(var t=0;t<r.XHTML.css.length;t++)if(e===r.XHTML.css[t])return!0;return!1}},Status:{ERROR:0,CONNECTING:1,CONNFAIL:2,AUTHENTICATING:3,AUTHFAIL:4,CONNECTED:5,DISCONNECTED:6,DISCONNECTING:7,ATTACHED:8,REDIRECT:9,CONNTIMEOUT:10},ErrorCondition:{BAD_FORMAT:\"bad-format\",CONFLICT:\"conflict\",MISSING_JID_NODE:\"x-strophe-bad-non-anon-jid\",NO_AUTH_MECH:\"no-auth-mech\",UNKNOWN_REASON:\"unknown\"},LogLevel:{DEBUG:0,INFO:1,WARN:2,ERROR:3,FATAL:4},ElementType:{NORMAL:1,TEXT:3,CDATA:4,FRAGMENT:11},TIMEOUT:1.1,SECONDARY_TIMEOUT:.1,addNamespace:function(e,t){r.NS[e]=t},forEachChild:function(e,t,n){var i,o;for(i=0;i<e.childNodes.length;i++)(o=e.childNodes[i]).nodeType!==r.ElementType.NORMAL||t&&!this.isTagEqual(o,t)||n(o)},isTagEqual:function(e,t){return e.tagName===t},_xmlGenerator:null,_makeGenerator:function(){var e;return void 0===document.implementation.createDocument||document.implementation.createDocument&&document.documentMode&&document.documentMode<10?(e=this._getIEXmlDom()).appendChild(e.createElement(\"strophe\")):e=document.implementation.createDocument(\"jabber:client\",\"strophe\",null),e},xmlGenerator:function(){return r._xmlGenerator||(r._xmlGenerator=r._makeGenerator()),r._xmlGenerator},_getIEXmlDom:function(){for(var e=null,t=[\"Msxml2.DOMDocument.6.0\",\"Msxml2.DOMDocument.5.0\",\"Msxml2.DOMDocument.4.0\",\"MSXML2.DOMDocument.3.0\",\"MSXML2.DOMDocument\",\"MSXML.DOMDocument\",\"Microsoft.XMLDOM\"],n=0;n<t.length&&null===e;n++)try{e=new ActiveXObject(t[n])}catch(t){e=null}return e},xmlElement:function(e){if(!e)return null;var t,n,i,o=r.xmlGenerator().createElement(e);for(t=1;t<arguments.length;t++){var s=arguments[t];if(s)if(\"string\"==typeof s||\"number\"==typeof s)o.appendChild(r.xmlTextNode(s));else if(\"object\"===a(s)&&\"function\"==typeof s.sort)for(n=0;n<s.length;n++){var c=s[n];\"object\"===a(c)&&\"function\"==typeof c.sort&&void 0!==c[1]&&null!==c[1]&&o.setAttribute(c[0],c[1])}else if(\"object\"===a(s))for(i in s)s.hasOwnProperty(i)&&void 0!==s[i]&&null!==s[i]&&o.setAttribute(i,s[i])}return o},xmlescape:function(e){return e=(e=(e=(e=(e=e.replace(/\\&/g,\"&amp;\")).replace(/</g,\"&lt;\")).replace(/>/g,\"&gt;\")).replace(/'/g,\"&apos;\")).replace(/\"/g,\"&quot;\")},xmlunescape:function(e){return e=(e=(e=(e=(e=e.replace(/\\&amp;/g,\"&\")).replace(/&lt;/g,\"<\")).replace(/&gt;/g,\">\")).replace(/&apos;/g,\"'\")).replace(/&quot;/g,'\"')},xmlTextNode:function(e){return r.xmlGenerator().createTextNode(e)},xmlHtmlNode:function(e){var t;return DOMParser?t=(new DOMParser).parseFromString(e,\"text/xml\"):((t=new ActiveXObject(\"Microsoft.XMLDOM\")).async=\"false\",t.loadXML(e)),t},getText:function(e){if(!e)return null;var t=\"\";0===e.childNodes.length&&e.nodeType===r.ElementType.TEXT&&(t+=e.nodeValue);for(var n=0;n<e.childNodes.length;n++)e.childNodes[n].nodeType===r.ElementType.TEXT&&(t+=e.childNodes[n].nodeValue);return r.xmlescape(t)},copyElement:function(e){var t,n;if(e.nodeType===r.ElementType.NORMAL){for(n=r.xmlElement(e.tagName),t=0;t<e.attributes.length;t++)n.setAttribute(e.attributes[t].nodeName,e.attributes[t].value);for(t=0;t<e.childNodes.length;t++)n.appendChild(r.copyElement(e.childNodes[t]))}else e.nodeType===r.ElementType.TEXT&&(n=r.xmlGenerator().createTextNode(e.nodeValue));return n},createHtml:function(e){var t,n,i,o,s,c,u,l,d,p,h;if(e.nodeType===r.ElementType.NORMAL)if(o=e.nodeName.toLowerCase(),r.XHTML.validTag(o))try{for(n=r.xmlElement(o),t=0;t<r.XHTML.attributes[o].length;t++)if(s=r.XHTML.attributes[o][t],null!=(c=e.getAttribute(s))&&\"\"!==c&&!1!==c&&0!==c)if(\"style\"===s&&\"object\"===a(c)&&void 0!==c.cssText&&(c=c.cssText),\"style\"===s){for(u=[],l=c.split(\";\"),i=0;i<l.length;i++)p=(d=l[i].split(\":\"))[0].replace(/^\\s*/,\"\").replace(/\\s*$/,\"\").toLowerCase(),r.XHTML.validCSS(p)&&(h=d[1].replace(/^\\s*/,\"\").replace(/\\s*$/,\"\"),u.push(p+\": \"+h));u.length>0&&(c=u.join(\"; \"),n.setAttribute(s,c))}else n.setAttribute(s,c);for(t=0;t<e.childNodes.length;t++)n.appendChild(r.createHtml(e.childNodes[t]))}catch(e){n=r.xmlTextNode(\"\")}else for(n=r.xmlGenerator().createDocumentFragment(),t=0;t<e.childNodes.length;t++)n.appendChild(r.createHtml(e.childNodes[t]));else if(e.nodeType===r.ElementType.FRAGMENT)for(n=r.xmlGenerator().createDocumentFragment(),t=0;t<e.childNodes.length;t++)n.appendChild(r.createHtml(e.childNodes[t]));else e.nodeType===r.ElementType.TEXT&&(n=r.xmlTextNode(e.nodeValue));return n},escapeNode:function(e){return\"string\"!=typeof e?e:e.replace(/^\\s+|\\s+$/g,\"\").replace(/\\\\/g,\"\\\\5c\").replace(/ /g,\"\\\\20\").replace(/\\\"/g,\"\\\\22\").replace(/\\&/g,\"\\\\26\").replace(/\\'/g,\"\\\\27\").replace(/\\//g,\"\\\\2f\").replace(/:/g,\"\\\\3a\").replace(/</g,\"\\\\3c\").replace(/>/g,\"\\\\3e\").replace(/@/g,\"\\\\40\")},unescapeNode:function(e){return\"string\"!=typeof e?e:e.replace(/\\\\20/g,\" \").replace(/\\\\22/g,'\"').replace(/\\\\26/g,\"&\").replace(/\\\\27/g,\"'\").replace(/\\\\2f/g,\"/\").replace(/\\\\3a/g,\":\").replace(/\\\\3c/g,\"<\").replace(/\\\\3e/g,\">\").replace(/\\\\40/g,\"@\").replace(/\\\\5c/g,\"\\\\\")},getNodeFromJid:function(e){return e.indexOf(\"@\")<0?null:e.split(\"@\")[0]},getDomainFromJid:function(e){var t=r.getBareJidFromJid(e);if(t.indexOf(\"@\")<0)return t;var n=t.split(\"@\");return n.splice(0,1),n.join(\"@\")},getResourceFromJid:function(e){var t=e.split(\"/\");return t.length<2?null:(t.splice(0,1),t.join(\"/\"))},getBareJidFromJid:function(e){return e?e.split(\"/\")[0]:null},_handleError:function(e){void 0!==e.stack&&r.fatal(e.stack),e.sourceURL?r.fatal(\"error: \"+this.handler+\" \"+e.sourceURL+\":\"+e.line+\" - \"+e.name+\": \"+e.message):e.fileName?r.fatal(\"error: \"+this.handler+\" \"+e.fileName+\":\"+e.lineNumber+\" - \"+e.name+\": \"+e.message):r.fatal(\"error: \"+e.message)},log:function(e,t){e===this.LogLevel.FATAL&&\"object\"===a(window.console)&&\"function\"==typeof window.console.error&&window.console.error(t)},debug:function(e){this.log(this.LogLevel.DEBUG,e)},info:function(e){this.log(this.LogLevel.INFO,e)},warn:function(e){this.log(this.LogLevel.WARN,e)},error:function(e){this.log(this.LogLevel.ERROR,e)},fatal:function(e){this.log(this.LogLevel.FATAL,e)},serialize:function(e){var t;if(!e)return null;\"function\"==typeof e.tree&&(e=e.tree());var n,i,o=e.nodeName;for(e.getAttribute(\"_realname\")&&(o=e.getAttribute(\"_realname\")),t=\"<\"+o,n=0;n<e.attributes.length;n++)\"_realname\"!==e.attributes[n].nodeName&&(t+=\" \"+e.attributes[n].nodeName+\"='\"+r.xmlescape(e.attributes[n].value)+\"'\");if(e.childNodes.length>0){for(t+=\">\",n=0;n<e.childNodes.length;n++)switch((i=e.childNodes[n]).nodeType){case r.ElementType.NORMAL:t+=r.serialize(i);break;case r.ElementType.TEXT:t+=r.xmlescape(i.nodeValue);break;case r.ElementType.CDATA:t+=\"<![CDATA[\"+i.nodeValue+\"]]>\"}t+=\"</\"+o+\">\"}else t+=\"/>\";return t},_requestId:0,_connectionPlugins:{},addConnectionPlugin:function(e,t){r._connectionPlugins[e]=t}}).Builder=function(e,t){\"presence\"!==e&&\"message\"!==e&&\"iq\"!==e||(t&&!t.xmlns?t.xmlns=r.NS.CLIENT:t||(t={xmlns:r.NS.CLIENT})),this.nodeTree=r.xmlElement(e,t),this.node=this.nodeTree},r.Builder.prototype={tree:function(){return this.nodeTree},toString:function(){return r.serialize(this.nodeTree)},up:function(){return this.node=this.node.parentNode,this},root:function(){return this.node=this.nodeTree,this},attrs:function(e){for(var t in e)e.hasOwnProperty(t)&&(void 0===e[t]?this.node.removeAttribute(t):this.node.setAttribute(t,e[t]));return this},c:function(e,t,n){var i=r.xmlElement(e,t,n);return this.node.appendChild(i),\"string\"!=typeof n&&\"number\"!=typeof n&&(this.node=i),this},cnode:function(e){var t,n=r.xmlGenerator();try{t=void 0!==n.importNode}catch(e){t=!1}var i=t?n.importNode(e,!0):r.copyElement(e);return this.node.appendChild(i),this.node=i,this},t:function(e){var t=r.xmlTextNode(e);return this.node.appendChild(t),this},h:function(e){var t=document.createElement(\"body\");t.innerHTML=e;for(var n=r.createHtml(t);n.childNodes.length>0;)this.node.appendChild(n.childNodes[0]);return this}},r.Handler=function(e,t,n,i,o,a,s){this.handler=e,this.ns=t,this.name=n,this.type=i,this.id=o,this.options=s||{matchBareFromJid:!1,ignoreNamespaceFragment:!1},this.options.matchBare&&(r.warn('The \"matchBare\" option is deprecated, use \"matchBareFromJid\" instead.'),this.options.matchBareFromJid=this.options.matchBare,delete this.options.matchBare),this.options.matchBareFromJid?this.from=a?r.getBareJidFromJid(a):null:this.from=a,this.user=!0},r.Handler.prototype={getNamespace:function(e){var t=e.getAttribute(\"xmlns\");return t&&this.options.ignoreNamespaceFragment&&(t=t.split(\"#\")[0]),t},namespaceMatch:function(e){var t=!1;if(!this.ns)return!0;var n=this;return r.forEachChild(e,null,function(e){n.getNamespace(e)===n.ns&&(t=!0)}),t=t||this.getNamespace(e)===this.ns},isMatch:function(e){var t=e.getAttribute(\"from\");this.options.matchBareFromJid&&(t=r.getBareJidFromJid(t));var n=e.getAttribute(\"type\");return!(!this.namespaceMatch(e)||this.name&&!r.isTagEqual(e,this.name)||this.type&&(Array.isArray(this.type)?-1===this.type.indexOf(n):n!==this.type)||this.id&&e.getAttribute(\"id\")!==this.id||this.from&&t!==this.from)},run:function(e){var t=null;try{t=this.handler(e)}catch(e){throw r._handleError(e),e}return t},toString:function(){return\"{Handler: \"+this.handler+\"(\"+this.name+\",\"+this.id+\",\"+this.ns+\")}\"}},r.TimedHandler=function(e,t){this.period=e,this.handler=t,this.lastCalled=(new Date).getTime(),this.user=!0},r.TimedHandler.prototype={run:function(){return this.lastCalled=(new Date).getTime(),this.handler()},reset:function(){this.lastCalled=(new Date).getTime()},toString:function(){return\"{TimedHandler: \"+this.handler+\"(\"+this.period+\")}\"}},r.Connection=function(e,t){this.service=e,this.options=t||{};var i=this.options.protocol||\"\";for(var o in 0===e.indexOf(\"ws:\")||0===e.indexOf(\"wss:\")||0===i.indexOf(\"ws\")?this._proto=new r.Websocket(this):this._proto=new r.Bosh(this),this.jid=\"\",this.domain=null,this.features=null,this._sasl_data={},this.do_session=!1,this.do_bind=!1,this.timedHandlers=[],this.handlers=[],this.removeTimeds=[],this.removeHandlers=[],this.addTimeds=[],this.addHandlers=[],this.protocolErrorHandlers={HTTP:{},websocket:{}},this._idleTimeout=null,this._disconnectTimeout=null,this.authenticated=!1,this.connected=!1,this.disconnecting=!1,this.do_authentication=!0,this.paused=!1,this.restored=!1,this._data=[],this._uniqueId=0,this._sasl_success_handler=null,this._sasl_failure_handler=null,this._sasl_challenge_handler=null,this.maxRetries=5,this._idleTimeout=setTimeout(function(){this._onIdle()}.bind(this),100),n.addCookies(this.options.cookies),this.registerSASLMechanisms(this.options.mechanisms),r._connectionPlugins)if(r._connectionPlugins.hasOwnProperty(o)){var a=r._connectionPlugins[o],s=function(){};s.prototype=a,this[o]=new s,this[o].init(this)}},r.Connection.prototype={reset:function(){this._proto._reset(),this.do_session=!1,this.do_bind=!1,this.timedHandlers=[],this.handlers=[],this.removeTimeds=[],this.removeHandlers=[],this.addTimeds=[],this.addHandlers=[],this.authenticated=!1,this.connected=!1,this.disconnecting=!1,this.restored=!1,this._data=[],this._requests=[],this._uniqueId=0},pause:function(){this.paused=!0},resume:function(){this.paused=!1},getUniqueId:function(e){var t=\"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g,function(e){var t=16*Math.random()|0;return(\"x\"===e?t:3&t|8).toString(16)});return\"string\"==typeof e||\"number\"==typeof e?t+\":\"+e:t+\"\"},addProtocolErrorHandler:function(e,t,n){this.protocolErrorHandlers[e][t]=n},connect:function(e,t,n,i,o,a,s){this.jid=e,this.authzid=r.getBareJidFromJid(this.jid),this.authcid=s||r.getNodeFromJid(this.jid),this.pass=t,this.servtype=\"xmpp\",this.connect_callback=n,this.disconnecting=!1,this.connected=!1,this.authenticated=!1,this.restored=!1,this.domain=r.getDomainFromJid(this.jid),this._changeConnectStatus(r.Status.CONNECTING,null),this._proto._connect(i,o,a)},attach:function(e,t,n,i,o,a,s){if(!(this._proto instanceof r.Bosh))throw{name:\"StropheSessionError\",message:'The \"attach\" method can only be used with a BOSH connection.'};this._proto._attach(e,t,n,i,o,a,s)},restore:function(e,t,n,r,i){if(!this._sessionCachingSupported())throw{name:\"StropheSessionError\",message:'The \"restore\" method can only be used with a BOSH connection.'};this._proto._restore(e,t,n,r,i)},_sessionCachingSupported:function(){if(this._proto instanceof r.Bosh){if(!JSON)return!1;try{sessionStorage.setItem(\"_strophe_\",\"_strophe_\"),sessionStorage.removeItem(\"_strophe_\")}catch(e){return!1}return!0}return!1},xmlInput:function(e){},xmlOutput:function(e){},rawInput:function(e){},rawOutput:function(e){},nextValidRid:function(e){},send:function(e){if(null!==e){if(\"function\"==typeof e.sort)for(var t=0;t<e.length;t++)this._queueData(e[t]);else\"function\"==typeof e.tree?this._queueData(e.tree()):this._queueData(e);this._proto._send()}},flush:function(){clearTimeout(this._idleTimeout),this._onIdle()},sendPresence:function(e,t,n,r){var i=null,o=this;\"function\"==typeof e.tree&&(e=e.tree());var a=e.getAttribute(\"id\");if(a||(a=this.getUniqueId(\"sendPresence\"),e.setAttribute(\"id\",a)),\"function\"==typeof t||\"function\"==typeof n){var s=this.addHandler(function(e){i&&o.deleteTimedHandler(i),\"error\"===e.getAttribute(\"type\")?n&&n(e):t&&t(e)},null,\"presence\",null,a);r&&(i=this.addTimedHandler(r,function(){return o.deleteHandler(s),n&&n(null),!1}))}return this.send(e),a},sendIQ:function(e,t,n,r){var i=null,o=this;\"function\"==typeof e.tree&&(e=e.tree());var a=e.getAttribute(\"id\");if(a||(a=this.getUniqueId(\"sendIQ\"),e.setAttribute(\"id\",a)),\"function\"==typeof t||\"function\"==typeof n){var s=this.addHandler(function(e){i&&o.deleteTimedHandler(i);var r=e.getAttribute(\"type\");if(\"result\"===r)t&&t(e);else{if(\"error\"!==r)throw{name:\"StropheError\",message:\"Got bad IQ type of \"+r};n&&n(e)}},null,\"iq\",[\"error\",\"result\"],a);r&&(i=this.addTimedHandler(r,function(){return o.deleteHandler(s),n&&n(null),!1}))}return this.send(e),a},_queueData:function(e){if(null===e||!e.tagName||!e.childNodes)throw{name:\"StropheError\",message:\"Cannot queue non-DOMElement.\"};this._data.push(e)},_sendRestart:function(){this._data.push(\"restart\"),this._proto._sendRestart(),this._idleTimeout=setTimeout(function(){this._onIdle()}.bind(this),100)},addTimedHandler:function(e,t){var n=new r.TimedHandler(e,t);return this.addTimeds.push(n),n},deleteTimedHandler:function(e){this.removeTimeds.push(e)},addHandler:function(e,t,n,i,o,a,s){var c=new r.Handler(e,t,n,i,o,a,s);return this.addHandlers.push(c),c},deleteHandler:function(e){this.removeHandlers.push(e);var t=this.addHandlers.indexOf(e);t>=0&&this.addHandlers.splice(t,1)},registerSASLMechanisms:function(e){this.mechanisms={},(e=e||[r.SASLAnonymous,r.SASLExternal,r.SASLMD5,r.SASLOAuthBearer,r.SASLXOAuth2,r.SASLPlain,r.SASLSHA1]).forEach(this.registerSASLMechanism.bind(this))},registerSASLMechanism:function(e){this.mechanisms[e.prototype.name]=e},disconnect:function(e){if(this._changeConnectStatus(r.Status.DISCONNECTING,e),r.info(\"Disconnect was called because: \"+e),this.connected){var t=!1;this.disconnecting=!0,this.authenticated&&(t=s({xmlns:r.NS.CLIENT,type:\"unavailable\"})),this._disconnectTimeout=this._addSysTimedHandler(3e3,this._onDisconnectTimeout.bind(this)),this._proto._disconnect(t)}else r.info(\"Disconnect was called before Strophe connected to the server\"),this._proto._abortAllRequests(),this._doDisconnect()},_changeConnectStatus:function(e,t,n){for(var i in r._connectionPlugins)if(r._connectionPlugins.hasOwnProperty(i)){var o=this[i];if(o.statusChanged)try{o.statusChanged(e,t)}catch(e){r.error(i+\" plugin caused an exception changing status: \"+e)}}if(this.connect_callback)try{this.connect_callback(e,t,n)}catch(e){r._handleError(e),r.error(\"User connection callback caused an exception: \"+e)}},_doDisconnect:function(e){\"number\"==typeof this._idleTimeout&&clearTimeout(this._idleTimeout),null!==this._disconnectTimeout&&(this.deleteTimedHandler(this._disconnectTimeout),this._disconnectTimeout=null),r.info(\"_doDisconnect was called\"),this._proto._doDisconnect(),this.authenticated=!1,this.disconnecting=!1,this.restored=!1,this.handlers=[],this.timedHandlers=[],this.removeTimeds=[],this.removeHandlers=[],this.addTimeds=[],this.addHandlers=[],this._changeConnectStatus(r.Status.DISCONNECTED,e),this.connected=!1},_dataRecv:function(e,t){r.info(\"_dataRecv called\");var n=this._proto._reqToData(e);if(null!==n){var i,o;for(this.xmlInput!==r.Connection.prototype.xmlInput&&(n.nodeName===this._proto.strip&&n.childNodes.length?this.xmlInput(n.childNodes[0]):this.xmlInput(n)),this.rawInput!==r.Connection.prototype.rawInput&&(t?this.rawInput(t):this.rawInput(r.serialize(n)));this.removeHandlers.length>0;)o=this.removeHandlers.pop(),(i=this.handlers.indexOf(o))>=0&&this.handlers.splice(i,1);for(;this.addHandlers.length>0;)this.handlers.push(this.addHandlers.pop());if(this.disconnecting&&this._proto._emptyQueue())this._doDisconnect();else{var a,s,c=n.getAttribute(\"type\");if(null!==c&&\"terminate\"===c){if(this.disconnecting)return;return a=n.getAttribute(\"condition\"),s=n.getElementsByTagName(\"conflict\"),null!==a?(\"remote-stream-error\"===a&&s.length>0&&(a=\"conflict\"),this._changeConnectStatus(r.Status.CONNFAIL,a)):this._changeConnectStatus(r.Status.CONNFAIL,r.ErrorCondition.UNKOWN_REASON),void this._doDisconnect(a)}var u=this;r.forEachChild(n,null,function(e){var t,n;for(n=u.handlers,u.handlers=[],t=0;t<n.length;t++){var i=n[t];try{!i.isMatch(e)||!u.authenticated&&i.user?u.handlers.push(i):i.run(e)&&u.handlers.push(i)}catch(e){r.warn(\"Removing Strophe handlers due to uncaught exception: \"+e.message)}}})}}},mechanisms:{},_connect_cb:function(e,t,n){var i;r.info(\"_connect_cb was called\"),this.connected=!0;try{i=this._proto._reqToData(e)}catch(e){if(\"badformat\"!==e)throw e;this._changeConnectStatus(r.Status.CONNFAIL,r.ErrorCondition.BAD_FORMAT),this._doDisconnect(r.ErrorCondition.BAD_FORMAT)}if(i&&(this.xmlInput!==r.Connection.prototype.xmlInput&&(i.nodeName===this._proto.strip&&i.childNodes.length?this.xmlInput(i.childNodes[0]):this.xmlInput(i)),this.rawInput!==r.Connection.prototype.rawInput&&(n?this.rawInput(n):this.rawInput(r.serialize(i))),this._proto._connect_cb(i)!==r.Status.CONNFAIL))if(i.getElementsByTagNameNS?i.getElementsByTagNameNS(r.NS.STREAM,\"features\").length>0:i.getElementsByTagName(\"stream:features\").length>0||i.getElementsByTagName(\"features\").length>0){var o,a,s=[],c=i.getElementsByTagName(\"mechanism\");if(c.length>0)for(o=0;o<c.length;o++)a=r.getText(c[o]),this.mechanisms[a]&&s.push(this.mechanisms[a]);0!==s.length||0!==i.getElementsByTagName(\"auth\").length?!1!==this.do_authentication&&this.authenticate(s):this._proto._no_auth_received(t)}else this._proto._no_auth_received(t)},sortMechanismsByPriority:function(e){var t,n,r,i;for(t=0;t<e.length-1;++t){for(r=t,n=t+1;n<e.length;++n)e[n].prototype.priority>e[r].prototype.priority&&(r=n);r!==t&&(i=e[t],e[t]=e[r],e[r]=i)}return e},_attemptSASLAuth:function(e){e=this.sortMechanismsByPriority(e||[]);var t=0,n=!1;for(t=0;t<e.length;++t)if(e[t].prototype.test(this)){this._sasl_success_handler=this._addSysHandler(this._sasl_success_cb.bind(this),null,\"success\",null,null),this._sasl_failure_handler=this._addSysHandler(this._sasl_failure_cb.bind(this),null,\"failure\",null,null),this._sasl_challenge_handler=this._addSysHandler(this._sasl_challenge_cb.bind(this),null,\"challenge\",null,null),this._sasl_mechanism=new e[t],this._sasl_mechanism.onStart(this);var o=i(\"auth\",{xmlns:r.NS.SASL,mechanism:this._sasl_mechanism.name});if(this._sasl_mechanism.isClientFirst){var a=this._sasl_mechanism.onChallenge(this,null);o.t(btoa(a))}this.send(o.tree()),n=!0;break}return n},_attemptLegacyAuth:function(){null===r.getNodeFromJid(this.jid)?(this._changeConnectStatus(r.Status.CONNFAIL,r.ErrorCondition.MISSING_JID_NODE),this.disconnect(r.ErrorCondition.MISSING_JID_NODE)):(this._changeConnectStatus(r.Status.AUTHENTICATING,null),this._addSysHandler(this._auth1_cb.bind(this),null,null,null,\"_auth_1\"),this.send(o({type:\"get\",to:this.domain,id:\"_auth_1\"}).c(\"query\",{xmlns:r.NS.AUTH}).c(\"username\",{}).t(r.getNodeFromJid(this.jid)).tree()))},authenticate:function(e){this._attemptSASLAuth(e)||this._attemptLegacyAuth()},_sasl_challenge_cb:function(e){var t=atob(r.getText(e)),n=this._sasl_mechanism.onChallenge(this,t),o=i(\"response\",{xmlns:r.NS.SASL});return\"\"!==n&&o.t(btoa(n)),this.send(o.tree()),!0},_auth1_cb:function(e){var t=o({type:\"set\",id:\"_auth_2\"}).c(\"query\",{xmlns:r.NS.AUTH}).c(\"username\",{}).t(r.getNodeFromJid(this.jid)).up().c(\"password\").t(this.pass);return r.getResourceFromJid(this.jid)||(this.jid=r.getBareJidFromJid(this.jid)+\"/strophe\"),t.up().c(\"resource\",{}).t(r.getResourceFromJid(this.jid)),this._addSysHandler(this._auth2_cb.bind(this),null,null,null,\"_auth_2\"),this.send(t.tree()),!1},_sasl_success_cb:function(e){if(this._sasl_data[\"server-signature\"]){var t,n=atob(r.getText(e)).match(/([a-z]+)=([^,]+)(,|$)/);if(\"v\"===n[1]&&(t=n[2]),t!==this._sasl_data[\"server-signature\"])return this.deleteHandler(this._sasl_failure_handler),this._sasl_failure_handler=null,this._sasl_challenge_handler&&(this.deleteHandler(this._sasl_challenge_handler),this._sasl_challenge_handler=null),this._sasl_data={},this._sasl_failure_cb(null)}r.info(\"SASL authentication succeeded.\"),this._sasl_mechanism&&this._sasl_mechanism.onSuccess(),this.deleteHandler(this._sasl_failure_handler),this._sasl_failure_handler=null,this._sasl_challenge_handler&&(this.deleteHandler(this._sasl_challenge_handler),this._sasl_challenge_handler=null);var i=[],o=function(e,t){for(;e.length;)this.deleteHandler(e.pop());return this._sasl_auth1_cb.bind(this)(t),!1};return i.push(this._addSysHandler(function(e){o.bind(this)(i,e)}.bind(this),null,\"stream:features\",null,null)),i.push(this._addSysHandler(function(e){o.bind(this)(i,e)}.bind(this),r.NS.STREAM,\"features\",null,null)),this._sendRestart(),!1},_sasl_auth1_cb:function(e){var t,n;for(this.features=e,t=0;t<e.childNodes.length;t++)\"bind\"===(n=e.childNodes[t]).nodeName&&(this.do_bind=!0),\"session\"===n.nodeName&&(this.do_session=!0);if(!this.do_bind)return this._changeConnectStatus(r.Status.AUTHFAIL,null),!1;this._addSysHandler(this._sasl_bind_cb.bind(this),null,null,null,\"_bind_auth_2\");var i=r.getResourceFromJid(this.jid);return i?this.send(o({type:\"set\",id:\"_bind_auth_2\"}).c(\"bind\",{xmlns:r.NS.BIND}).c(\"resource\",{}).t(i).tree()):this.send(o({type:\"set\",id:\"_bind_auth_2\"}).c(\"bind\",{xmlns:r.NS.BIND}).tree()),!1},_sasl_bind_cb:function(e){var t;if(\"error\"===e.getAttribute(\"type\"))return r.info(\"SASL binding failed.\"),e.getElementsByTagName(\"conflict\").length>0&&(t=r.ErrorCondition.CONFLICT),this._changeConnectStatus(r.Status.AUTHFAIL,t,e),!1;var n,i=e.getElementsByTagName(\"bind\");if(!(i.length>0))return r.info(\"SASL binding failed.\"),this._changeConnectStatus(r.Status.AUTHFAIL,null,e),!1;(n=i[0].getElementsByTagName(\"jid\")).length>0&&(this.jid=r.getText(n[0]),this.do_session?(this._addSysHandler(this._sasl_session_cb.bind(this),null,null,null,\"_session_auth_2\"),this.send(o({type:\"set\",id:\"_session_auth_2\"}).c(\"session\",{xmlns:r.NS.SESSION}).tree())):(this.authenticated=!0,this._changeConnectStatus(r.Status.CONNECTED,null)))},_sasl_session_cb:function(e){if(\"result\"===e.getAttribute(\"type\"))this.authenticated=!0,this._changeConnectStatus(r.Status.CONNECTED,null);else if(\"error\"===e.getAttribute(\"type\"))return r.info(\"Session creation failed.\"),this._changeConnectStatus(r.Status.AUTHFAIL,null,e),!1;return!1},_sasl_failure_cb:function(e){return this._sasl_success_handler&&(this.deleteHandler(this._sasl_success_handler),this._sasl_success_handler=null),this._sasl_challenge_handler&&(this.deleteHandler(this._sasl_challenge_handler),this._sasl_challenge_handler=null),this._sasl_mechanism&&this._sasl_mechanism.onFailure(),this._changeConnectStatus(r.Status.AUTHFAIL,null,e),!1},_auth2_cb:function(e){return\"result\"===e.getAttribute(\"type\")?(this.authenticated=!0,this._changeConnectStatus(r.Status.CONNECTED,null)):\"error\"===e.getAttribute(\"type\")&&(this._changeConnectStatus(r.Status.AUTHFAIL,null,e),this.disconnect(\"authentication failed\")),!1},_addSysTimedHandler:function(e,t){var n=new r.TimedHandler(e,t);return n.user=!1,this.addTimeds.push(n),n},_addSysHandler:function(e,t,n,i,o){var a=new r.Handler(e,t,n,i,o);return a.user=!1,this.addHandlers.push(a),a},_onDisconnectTimeout:function(){return r.info(\"_onDisconnectTimeout was called\"),this._changeConnectStatus(r.Status.CONNTIMEOUT,null),this._proto._onDisconnectTimeout(),this._doDisconnect(),!1},_onIdle:function(){for(var e,t,n;this.addTimeds.length>0;)this.timedHandlers.push(this.addTimeds.pop());for(;this.removeTimeds.length>0;)t=this.removeTimeds.pop(),(e=this.timedHandlers.indexOf(t))>=0&&this.timedHandlers.splice(e,1);var r=(new Date).getTime();for(n=[],e=0;e<this.timedHandlers.length;e++)t=this.timedHandlers[e],!this.authenticated&&t.user||(t.lastCalled+t.period-r<=0?t.run()&&n.push(t):n.push(t));this.timedHandlers=n,clearTimeout(this._idleTimeout),this._proto._onIdle(),this.connected&&(this._idleTimeout=setTimeout(function(){this._onIdle()}.bind(this),100))}},r.SASLMechanism=function(e,t,n){this.name=e,this.isClientFirst=t,this.priority=n},r.SASLMechanism.prototype={test:function(e){return!0},onStart:function(e){this._connection=e},onChallenge:function(e,t){throw new Error(\"You should implement challenge handling!\")},onFailure:function(){this._connection=null},onSuccess:function(){this._connection=null}},r.SASLAnonymous=function(){},r.SASLAnonymous.prototype=new r.SASLMechanism(\"ANONYMOUS\",!1,20),r.SASLAnonymous.prototype.test=function(e){return null===e.authcid},r.SASLPlain=function(){},r.SASLPlain.prototype=new r.SASLMechanism(\"PLAIN\",!0,50),r.SASLPlain.prototype.test=function(e){return null!==e.authcid},r.SASLPlain.prototype.onChallenge=function(e){var t=e.authzid;return t+=\"\\0\",t+=e.authcid,t+=\"\\0\",t+=e.pass,n.utf16to8(t)},r.SASLSHA1=function(){},r.SASLSHA1.prototype=new r.SASLMechanism(\"SCRAM-SHA-1\",!0,70),r.SASLSHA1.prototype.test=function(e){return null!==e.authcid},r.SASLSHA1.prototype.onChallenge=function(r,i,o){var a=o||t.hexdigest(1234567890*Math.random()),s=\"n=\"+n.utf16to8(r.authcid);return s+=\",r=\",s+=a,r._sasl_data.cnonce=a,r._sasl_data[\"client-first-message-bare\"]=s,s=\"n,,\"+s,this.onChallenge=function(t,r){for(var i,o,a,s,c,u,l,d,p,h,f,m,v=\"c=biws,\",y=t._sasl_data[\"client-first-message-bare\"]+\",\"+r+\",\",g=t._sasl_data.cnonce,_=/([a-z]+)=([^,]+)(,|$)/;r.match(_);){var S=r.match(_);switch(r=r.replace(S[0],\"\"),S[1]){case\"r\":i=S[2];break;case\"s\":o=S[2];break;case\"i\":a=S[2]}}if(i.substr(0,g.length)!==g)return t._sasl_data={},t._sasl_failure_cb();for(y+=v+=\"r=\"+i,o=atob(o),o+=\"\\0\\0\\0\u0001\",p=n.utf16to8(t.pass),s=u=e.core_hmac_sha1(p,o),l=1;l<a;l++){for(c=e.core_hmac_sha1(p,e.binb2str(u)),d=0;d<5;d++)s[d]^=c[d];u=c}for(s=e.binb2str(s),h=e.core_hmac_sha1(s,\"Client Key\"),f=e.str_hmac_sha1(s,\"Server Key\"),m=e.core_hmac_sha1(e.str_sha1(e.binb2str(h)),y),t._sasl_data[\"server-signature\"]=e.b64_hmac_sha1(f,y),d=0;d<5;d++)h[d]^=m[d];return v+=\",p=\"+btoa(e.binb2str(h))}.bind(this),s},r.SASLMD5=function(){},r.SASLMD5.prototype=new r.SASLMechanism(\"DIGEST-MD5\",!1,60),r.SASLMD5.prototype.test=function(e){return null!==e.authcid},r.SASLMD5.prototype._quote=function(e){return'\"'+e.replace(/\\\\/g,\"\\\\\\\\\").replace(/\"/g,'\\\\\"')+'\"'},r.SASLMD5.prototype.onChallenge=function(e,r,i){for(var o,a=/([a-z]+)=(\"[^\"]+\"|[^,\"]+)(?:,|$)/,s=i||t.hexdigest(\"\"+1234567890*Math.random()),c=\"\",u=null,l=\"\";r.match(a);)switch(o=r.match(a),r=r.replace(o[0],\"\"),o[2]=o[2].replace(/^\"(.+)\"$/,\"$1\"),o[1]){case\"realm\":c=o[2];break;case\"nonce\":l=o[2];break;case\"qop\":o[2];break;case\"host\":u=o[2]}var d=e.servtype+\"/\"+e.domain;null!==u&&(d=d+\"/\"+u);var p=n.utf16to8(e.authcid+\":\"+c+\":\"+this._connection.pass),h=t.hash(p)+\":\"+l+\":\"+s,f=\"AUTHENTICATE:\"+d,m=\"\";return m+=\"charset=utf-8,\",m+=\"username=\"+this._quote(n.utf16to8(e.authcid))+\",\",m+=\"realm=\"+this._quote(c)+\",\",m+=\"nonce=\"+this._quote(l)+\",\",m+=\"nc=00000001,\",m+=\"cnonce=\"+this._quote(s)+\",\",m+=\"digest-uri=\"+this._quote(d)+\",\",m+=\"response=\"+t.hexdigest(t.hexdigest(h)+\":\"+l+\":00000001:\"+s+\":auth:\"+t.hexdigest(f))+\",\",m+=\"qop=auth\",this.onChallenge=function(){return\"\"},m},r.SASLOAuthBearer=function(){},r.SASLOAuthBearer.prototype=new r.SASLMechanism(\"OAUTHBEARER\",!0,40),r.SASLOAuthBearer.prototype.test=function(e){return null!==e.pass},r.SASLOAuthBearer.prototype.onChallenge=function(e){var t=\"n,\";return null!==e.authcid&&(t=t+\"a=\"+e.authzid),t+=\",\",t+=\"\u0001\",t+=\"auth=Bearer \",t+=e.pass,t+=\"\u0001\",t+=\"\u0001\",n.utf16to8(t)},r.SASLExternal=function(){},r.SASLExternal.prototype=new r.SASLMechanism(\"EXTERNAL\",!0,10),r.SASLExternal.prototype.onChallenge=function(e){return e.authcid===e.authzid?\"\":e.authzid},r.SASLXOAuth2=function(){},r.SASLXOAuth2.prototype=new r.SASLMechanism(\"X-OAUTH2\",!0,30),r.SASLXOAuth2.prototype.test=function(e){return null!==e.pass},r.SASLXOAuth2.prototype.onChallenge=function(e){var t=\"\\0\";return null!==e.authcid&&(t+=e.authzid),t+=\"\\0\",t+=e.pass,n.utf16to8(t)},{Strophe:r,$build:i,$iq:o,$msg:function(e){return new r.Builder(\"message\",e)},$pres:s,SHA1:e,MD5:t,b64_hmac_sha1:e.b64_hmac_sha1,b64_sha1:e.b64_sha1,str_hmac_sha1:e.str_hmac_sha1,str_sha1:e.str_sha1}}),function(n,o){if(\"function\"==typeof i&&i.amd)i(\"strophe-bosh\",[\"strophe-core\"],function(e){return o(e.Strophe,e.$build)});else if(\"object\"===a(t)){var s=r(\"./core\");e.exports=o(s.Strophe,s.$build)}else o(Strophe,$build)}(0,function(e,t){return e.Request=function(t,n,r,i){this.id=++e._requestId,this.xmlData=t,this.data=e.serialize(t),this.origFunc=n,this.func=n,this.rid=r,this.date=NaN,this.sends=i||0,this.abort=!1,this.dead=null,this.age=function(){return this.date?(new Date-this.date)/1e3:0},this.timeDead=function(){return this.dead?(new Date-this.dead)/1e3:0},this.xhr=this._newXHR()},e.Request.prototype={getResponse:function(){var t=null;if(this.xhr.responseXML&&this.xhr.responseXML.documentElement){if(\"parsererror\"===(t=this.xhr.responseXML.documentElement).tagName)throw e.error(\"invalid response received\"),e.error(\"responseText: \"+this.xhr.responseText),e.error(\"responseXML: \"+e.serialize(this.xhr.responseXML)),\"parsererror\"}else if(this.xhr.responseText){if(e.debug(\"Got responseText but no responseXML; attempting to parse it with DOMParser...\"),!(t=(new DOMParser).parseFromString(this.xhr.responseText,\"application/xml\").documentElement))throw new Error(\"Parsing produced null node\");if(t.querySelector(\"parsererror\"))throw e.error(\"invalid response received: \"+t.querySelector(\"parsererror\").textContent),e.error(\"responseText: \"+this.xhr.responseText),\"badformat\"}return t},_newXHR:function(){var e=null;return window.XMLHttpRequest?(e=new XMLHttpRequest).overrideMimeType&&e.overrideMimeType(\"text/xml; charset=utf-8\"):window.ActiveXObject&&(e=new ActiveXObject(\"Microsoft.XMLHTTP\")),e.onreadystatechange=this.func.bind(null,this),e}},e.Bosh=function(e){this._conn=e,this.rid=Math.floor(4294967295*Math.random()),this.sid=null,this.hold=1,this.wait=60,this.window=5,this.errors=0,this.inactivity=null,this.lastResponseHeaders=null,this._requests=[]},e.Bosh.prototype={strip:null,_buildBody:function(){var n=t(\"body\",{rid:this.rid++,xmlns:e.NS.HTTPBIND});return null!==this.sid&&n.attrs({sid:this.sid}),this._conn.options.keepalive&&this._conn._sessionCachingSupported()&&this._cacheSession(),n},_reset:function(){this.rid=Math.floor(4294967295*Math.random()),this.sid=null,this.errors=0,this._conn._sessionCachingSupported()&&window.sessionStorage.removeItem(\"strophe-bosh-session\"),this._conn.nextValidRid(this.rid)},_connect:function(t,n,r){this.wait=t||this.wait,this.hold=n||this.hold,this.errors=0;var i=this._buildBody().attrs({to:this._conn.domain,\"xml:lang\":\"en\",wait:this.wait,hold:this.hold,content:\"text/xml; charset=utf-8\",ver:\"1.6\",\"xmpp:version\":\"1.0\",\"xmlns:xmpp\":e.NS.BOSH});r&&i.attrs({route:r});var o=this._conn._connect_cb;this._requests.push(new e.Request(i.tree(),this._onRequestStateChange.bind(this,o.bind(this._conn)),i.tree().getAttribute(\"rid\"))),this._throttledRequestHandler()},_attach:function(t,n,r,i,o,a,s){this._conn.jid=t,this.sid=n,this.rid=r,this._conn.connect_callback=i,this._conn.domain=e.getDomainFromJid(this._conn.jid),this._conn.authenticated=!0,this._conn.connected=!0,this.wait=o||this.wait,this.hold=a||this.hold,this.window=s||this.window,this._conn._changeConnectStatus(e.Status.ATTACHED,null)},_restore:function(t,n,r,i,o){var a=JSON.parse(window.sessionStorage.getItem(\"strophe-bosh-session\"));if(!(null!=a&&a.rid&&a.sid&&a.jid&&(null==t||e.getBareJidFromJid(a.jid)===e.getBareJidFromJid(t)||null===e.getNodeFromJid(t)&&e.getDomainFromJid(a.jid)===t)))throw{name:\"StropheSessionError\",message:\"_restore: no restoreable session.\"};this._conn.restored=!0,this._attach(a.jid,a.sid,a.rid,n,r,i,o)},_cacheSession:function(){this._conn.authenticated?this._conn.jid&&this.rid&&this.sid&&window.sessionStorage.setItem(\"strophe-bosh-session\",JSON.stringify({jid:this._conn.jid,rid:this.rid,sid:this.sid})):window.sessionStorage.removeItem(\"strophe-bosh-session\")},_connect_cb:function(t){var n,r,i=t.getAttribute(\"type\");if(null!==i&&\"terminate\"===i)return n=t.getAttribute(\"condition\"),e.error(\"BOSH-Connection failed: \"+n),r=t.getElementsByTagName(\"conflict\"),null!==n?(\"remote-stream-error\"===n&&r.length>0&&(n=\"conflict\"),this._conn._changeConnectStatus(e.Status.CONNFAIL,n)):this._conn._changeConnectStatus(e.Status.CONNFAIL,\"unknown\"),this._conn._doDisconnect(n),e.Status.CONNFAIL;this.sid||(this.sid=t.getAttribute(\"sid\"));var o=t.getAttribute(\"requests\");o&&(this.window=parseInt(o,10));var a=t.getAttribute(\"hold\");a&&(this.hold=parseInt(a,10));var s=t.getAttribute(\"wait\");s&&(this.wait=parseInt(s,10));var c=t.getAttribute(\"inactivity\");c&&(this.inactivity=parseInt(c,10))},_disconnect:function(e){this._sendTerminate(e)},_doDisconnect:function(){this.sid=null,this.rid=Math.floor(4294967295*Math.random()),this._conn._sessionCachingSupported()&&window.sessionStorage.removeItem(\"strophe-bosh-session\"),this._conn.nextValidRid(this.rid)},_emptyQueue:function(){return 0===this._requests.length},_callProtocolErrorHandlers:function(e){var t,n=this._getRequestStatus(e);(t=this._conn.protocolErrorHandlers.HTTP[n])&&t.call(this,n)},_hitError:function(t){this.errors++,e.warn(\"request errored, status: \"+t+\", number of errors: \"+this.errors),this.errors>4&&this._conn._onDisconnectTimeout()},_no_auth_received:function(t){e.warn(\"Server did not yet offer a supported authentication mechanism. Sending a blank poll request.\"),t=t?t.bind(this._conn):this._conn._connect_cb.bind(this._conn);var n=this._buildBody();this._requests.push(new e.Request(n.tree(),this._onRequestStateChange.bind(this,t),n.tree().getAttribute(\"rid\"))),this._throttledRequestHandler()},_onDisconnectTimeout:function(){this._abortAllRequests()},_abortAllRequests:function(){for(var e;this._requests.length>0;)(e=this._requests.pop()).abort=!0,e.xhr.abort(),e.xhr.onreadystatechange=function(){}},_onIdle:function(){var t=this._conn._data;if(this._conn.authenticated&&0===this._requests.length&&0===t.length&&!this._conn.disconnecting&&(e.info(\"no requests during idle cycle, sending blank request\"),t.push(null)),!this._conn.paused){if(this._requests.length<2&&t.length>0){for(var n=this._buildBody(),r=0;r<t.length;r++)null!==t[r]&&(\"restart\"===t[r]?n.attrs({to:this._conn.domain,\"xml:lang\":\"en\",\"xmpp:restart\":\"true\",\"xmlns:xmpp\":e.NS.BOSH}):n.cnode(t[r]).up());delete this._conn._data,this._conn._data=[],this._requests.push(new e.Request(n.tree(),this._onRequestStateChange.bind(this,this._conn._dataRecv.bind(this._conn)),n.tree().getAttribute(\"rid\"))),this._throttledRequestHandler()}if(this._requests.length>0){var i=this._requests[0].age();null!==this._requests[0].dead&&this._requests[0].timeDead()>Math.floor(e.SECONDARY_TIMEOUT*this.wait)&&this._throttledRequestHandler(),i>Math.floor(e.TIMEOUT*this.wait)&&(e.warn(\"Request \"+this._requests[0].id+\" timed out, over \"+Math.floor(e.TIMEOUT*this.wait)+\" seconds since last activity\"),this._throttledRequestHandler())}}},_getRequestStatus:function(t,n){var r;if(4===t.xhr.readyState)try{r=t.xhr.status}catch(t){e.error(\"Caught an error while retrieving a request's status, reqStatus: \"+r)}return void 0===r&&(r=\"number\"==typeof n?n:0),r},_onRequestStateChange:function(t,n){if(e.debug(\"request id \"+n.id+\".\"+n.sends+\" state changed to \"+n.xhr.readyState),n.abort)n.abort=!1;else if(4===n.xhr.readyState){var r=this._getRequestStatus(n);if(this.lastResponseHeaders=n.xhr.getAllResponseHeaders(),this.disconnecting&&r>=400)return this._hitError(r),void this._callProtocolErrorHandlers(n);var i=r>0&&r<500,o=n.sends>this._conn.maxRetries;if((i||o)&&(this._removeRequest(n),e.debug(\"request id \"+n.id+\" should now be removed\")),200===r){var a=this._requests[0]===n;(this._requests[1]===n||a&&this._requests.length>0&&this._requests[0].age()>Math.floor(e.SECONDARY_TIMEOUT*this.wait))&&this._restartRequest(0),this._conn.nextValidRid(Number(n.rid)+1),e.debug(\"request id \"+n.id+\".\"+n.sends+\" got 200\"),t(n),this.errors=0}else 0===r||r>=400&&r<600||r>=12e3?(e.error(\"request id \"+n.id+\".\"+n.sends+\" error \"+r+\" happened\"),this._hitError(r),this._callProtocolErrorHandlers(n),r>=400&&r<500&&(this._conn._changeConnectStatus(e.Status.DISCONNECTING,null),this._conn._doDisconnect())):e.error(\"request id \"+n.id+\".\"+n.sends+\" error \"+r+\" happened\");i||o?o&&!this._conn.connected&&this._conn._changeConnectStatus(e.Status.CONNFAIL,\"giving-up\"):this._throttledRequestHandler()}},_processRequest:function(t){var n=this,r=this._requests[t],i=this._getRequestStatus(r,-1);if(r.sends>this._conn.maxRetries)this._conn._onDisconnectTimeout();else{var o=r.age(),a=!isNaN(o)&&o>Math.floor(e.TIMEOUT*this.wait),s=null!==r.dead&&r.timeDead()>Math.floor(e.SECONDARY_TIMEOUT*this.wait),c=4===r.xhr.readyState&&(i<1||i>=500);if((a||s||c)&&(s&&e.error(\"Request \"+this._requests[t].id+\" timed out (secondary), restarting\"),r.abort=!0,r.xhr.abort(),r.xhr.onreadystatechange=function(){},this._requests[t]=new e.Request(r.xmlData,r.origFunc,r.rid,r.sends),r=this._requests[t]),0===r.xhr.readyState){e.debug(\"request id \"+r.id+\".\"+r.sends+\" posting\");try{var u=this._conn.options.contentType||\"text/xml; charset=utf-8\";r.xhr.open(\"POST\",this._conn.service,!this._conn.options.sync),void 0!==r.xhr.setRequestHeader&&r.xhr.setRequestHeader(\"Content-Type\",u),this._conn.options.withCredentials&&(r.xhr.withCredentials=!0)}catch(t){return e.error(\"XHR open failed: \"+t.toString()),this._conn.connected||this._conn._changeConnectStatus(e.Status.CONNFAIL,\"bad-service\"),void this._conn.disconnect()}var l=function(){if(r.date=new Date,n._conn.options.customHeaders){var e=n._conn.options.customHeaders;for(var t in e)e.hasOwnProperty(t)&&r.xhr.setRequestHeader(t,e[t])}r.xhr.send(r.data)};if(r.sends>1){var d=1e3*Math.min(Math.floor(e.TIMEOUT*this.wait),Math.pow(r.sends,3));setTimeout(function(){l()},d)}else l();r.sends++,this._conn.xmlOutput!==e.Connection.prototype.xmlOutput&&(r.xmlData.nodeName===this.strip&&r.xmlData.childNodes.length?this._conn.xmlOutput(r.xmlData.childNodes[0]):this._conn.xmlOutput(r.xmlData)),this._conn.rawOutput!==e.Connection.prototype.rawOutput&&this._conn.rawOutput(r.data)}else e.debug(\"_processRequest: \"+(0===t?\"first\":\"second\")+\" request has readyState of \"+r.xhr.readyState)}},_removeRequest:function(t){var n;for(e.debug(\"removing request\"),n=this._requests.length-1;n>=0;n--)t===this._requests[n]&&this._requests.splice(n,1);t.xhr.onreadystatechange=function(){},this._throttledRequestHandler()},_restartRequest:function(e){var t=this._requests[e];null===t.dead&&(t.dead=new Date),this._processRequest(e)},_reqToData:function(e){try{return e.getResponse()}catch(e){if(\"parsererror\"!==e)throw e;this._conn.disconnect(\"strophe-parsererror\")}},_sendTerminate:function(t){e.info(\"_sendTerminate was called\");var n=this._buildBody().attrs({type:\"terminate\"});t&&n.cnode(t.tree());var r=new e.Request(n.tree(),this._onRequestStateChange.bind(this,this._conn._dataRecv.bind(this._conn)),n.tree().getAttribute(\"rid\"));this._requests.push(r),this._throttledRequestHandler()},_send:function(){clearTimeout(this._conn._idleTimeout),this._throttledRequestHandler(),this._conn._idleTimeout=setTimeout(function(){this._onIdle()}.bind(this._conn),100)},_sendRestart:function(){this._throttledRequestHandler(),clearTimeout(this._conn._idleTimeout)},_throttledRequestHandler:function(){this._requests?e.debug(\"_throttledRequestHandler called with \"+this._requests.length+\" requests\"):e.debug(\"_throttledRequestHandler called with undefined requests\"),this._requests&&0!==this._requests.length&&(this._requests.length>0&&this._processRequest(0),this._requests.length>1&&Math.abs(this._requests[0].rid-this._requests[1].rid)<this.window&&this._processRequest(1))}},e}),function(n,o){if(\"function\"==typeof i&&i.amd)i(\"strophe-websocket\",[\"strophe-core\"],function(e){return o(e.Strophe,e.$build)});else if(\"object\"===a(t)){var s=r(\"./core\");e.exports=o(s.Strophe,s.$build)}else o(Strophe,$build)}(0,function(e,t){return e.Websocket=function(e){this._conn=e,this.strip=\"wrapper\";var t=e.service;if(0!==t.indexOf(\"ws:\")&&0!==t.indexOf(\"wss:\")){var n=\"\";\"ws\"===e.options.protocol&&\"https:\"!==window.location.protocol?n+=\"ws\":n+=\"wss\",n+=\"://\"+window.location.host,0!==t.indexOf(\"/\")?n+=window.location.pathname+t:n+=t,e.service=n}},e.Websocket.prototype={_buildStream:function(){return t(\"open\",{xmlns:e.NS.FRAMING,to:this._conn.domain,version:\"1.0\"})},_check_streamerror:function(t,n){var r;if(0===(r=t.getElementsByTagNameNS?t.getElementsByTagNameNS(e.NS.STREAM,\"error\"):t.getElementsByTagName(\"stream:error\")).length)return!1;for(var i=r[0],o=\"\",a=\"\",s=0;s<i.childNodes.length;s++){var c=i.childNodes[s];if(\"urn:ietf:params:xml:ns:xmpp-streams\"!==c.getAttribute(\"xmlns\"))break;\"text\"===c.nodeName?a=c.textContent:o=c.nodeName}var u=\"WebSocket stream error: \";return u+=o||\"unknown\",a&&(u+=\" - \"+a),e.error(u),this._conn._changeConnectStatus(n,o),this._conn._doDisconnect(),!0},_reset:function(){},_connect:function(){this._closeSocket(),this.socket=new WebSocket(this._conn.service,\"xmpp\"),this.socket.onopen=this._onOpen.bind(this),this.socket.onerror=this._onError.bind(this),this.socket.onclose=this._onClose.bind(this),this.socket.onmessage=this._connect_cb_wrapper.bind(this)},_connect_cb:function(t){if(this._check_streamerror(t,e.Status.CONNFAIL))return e.Status.CONNFAIL},_handleStreamStart:function(t){var n=!1,r=t.getAttribute(\"xmlns\");\"string\"!=typeof r?n=\"Missing xmlns in <open />\":r!==e.NS.FRAMING&&(n=\"Wrong xmlns in <open />: \"+r);var i=t.getAttribute(\"version\");return\"string\"!=typeof i?n=\"Missing version in <open />\":\"1.0\"!==i&&(n=\"Wrong version in <open />: \"+i),!n||(this._conn._changeConnectStatus(e.Status.CONNFAIL,n),this._conn._doDisconnect(),!1)},_connect_cb_wrapper:function(t){if(0===t.data.indexOf(\"<open \")||0===t.data.indexOf(\"<?xml\")){var n=t.data.replace(/^(<\\?.*?\\?>\\s*)*/,\"\");if(\"\"===n)return;var r=(new DOMParser).parseFromString(n,\"text/xml\").documentElement;this._conn.xmlInput(r),this._conn.rawInput(t.data),this._handleStreamStart(r)&&this._connect_cb(r)}else if(0===t.data.indexOf(\"<close \")){var i=(new DOMParser).parseFromString(t.data,\"text/xml\").documentElement;this._conn.xmlInput(i),this._conn.rawInput(t.data);var o=i.getAttribute(\"see-other-uri\");if(o){var a=this._conn.service;(a.indexOf(\"wss:\")>=0&&o.indexOf(\"wss:\")>=0||a.indexOf(\"ws:\")>=0)&&(this._conn._changeConnectStatus(e.Status.REDIRECT,\"Received see-other-uri, resetting connection\"),this._conn.reset(),this._conn.service=o,this._connect())}else this._conn._changeConnectStatus(e.Status.CONNFAIL,\"Received closing stream\"),this._conn._doDisconnect()}else{var s=this._streamWrap(t.data),c=(new DOMParser).parseFromString(s,\"text/xml\").documentElement;this.socket.onmessage=this._onMessage.bind(this),this._conn._connect_cb(c,null,t.data)}},_disconnect:function(n){if(this.socket&&this.socket.readyState!==WebSocket.CLOSED){n&&this._conn.send(n);var r=t(\"close\",{xmlns:e.NS.FRAMING});this._conn.xmlOutput(r.tree());var i=e.serialize(r);this._conn.rawOutput(i);try{this.socket.send(i)}catch(t){e.info(\"Couldn't send <close /> tag.\")}}this._conn._doDisconnect()},_doDisconnect:function(){e.info(\"WebSockets _doDisconnect was called\"),this._closeSocket()},_streamWrap:function(e){return\"<wrapper>\"+e+\"</wrapper>\"},_closeSocket:function(){if(this.socket)try{this.socket.onerror=null,this.socket.close()}catch(e){}this.socket=null},_emptyQueue:function(){return!0},_onClose:function(t){this._conn.connected&&!this._conn.disconnecting?(e.error(\"Websocket closed unexpectedly\"),this._conn._doDisconnect()):t&&1006===t.code&&!this._conn.connected&&this.socket?(e.error(\"Websocket closed unexcectedly\"),this._conn._changeConnectStatus(e.Status.CONNFAIL,\"The WebSocket connection could not be established or was disconnected.\"),this._conn._doDisconnect()):e.info(\"Websocket closed\")},_no_auth_received:function(t){e.error(\"Server did not offer a supported authentication mechanism\"),this._changeConnectStatus(e.Status.CONNFAIL,e.ErrorCondition.NO_AUTH_MECH),t&&t.call(this._conn),this._conn._doDisconnect()},_onDisconnectTimeout:function(){},_abortAllRequests:function(){},_onError:function(t){e.error(\"Websocket error \"+t),this._conn._changeConnectStatus(e.Status.CONNFAIL,\"The WebSocket connection could not be established or was disconnected.\"),this._disconnect()},_onIdle:function(){var t=this._conn._data;if(t.length>0&&!this._conn.paused){for(var n=0;n<t.length;n++){var r,i;null!==t[n]&&(r=\"restart\"===t[n]?this._buildStream().tree():t[n],i=e.serialize(r),this._conn.xmlOutput(r),this._conn.rawOutput(i),this.socket.send(i))}this._conn._data=[]}},_onMessage:function(t){var n,r,i='<close xmlns=\"urn:ietf:params:xml:ns:xmpp-framing\" />';if(t.data===i)return this._conn.rawInput(i),this._conn.xmlInput(t),void(this._conn.disconnecting||this._conn._doDisconnect());if(0===t.data.search(\"<open \")){if(n=(new DOMParser).parseFromString(t.data,\"text/xml\").documentElement,!this._handleStreamStart(n))return}else r=this._streamWrap(t.data),n=(new DOMParser).parseFromString(r,\"text/xml\").documentElement;return this._check_streamerror(n,e.Status.ERROR)?void 0:this._conn.disconnecting&&\"presence\"===n.firstChild.nodeName&&\"unavailable\"===n.firstChild.getAttribute(\"type\")?(this._conn.xmlInput(n),void this._conn.rawInput(e.serialize(n))):void this._conn._dataRecv(n,t.data)},_onOpen:function(){e.info(\"Websocket open\");var t=this._buildStream();this._conn.xmlOutput(t.tree());var n=e.serialize(t);this._conn.rawOutput(n),this.socket.send(n)},_reqToData:function(e){return e},_send:function(){this._conn.flush()},_sendRestart:function(){clearTimeout(this._conn._idleTimeout),this._conn._onIdle.bind(this._conn)()}},e}),function(n){if(\"function\"==typeof i&&i.amd)i(\"strophe\",[\"strophe-core\",\"strophe-bosh\",\"strophe-websocket\"],function(e){return e});else if(\"object\"===a(t)){var o=r(\"./core\");r(\"./bosh\"),r(\"./websocket\"),e.exports=o}}(),r([\"strophe-polyfill\"]),r(\"strophe\")})?r.apply(t,i):r)||(e.exports=o)},function(e,t,n){\"use strict\";n.r(t),n.d(t,\"AUTH_STATUS_CHANGED\",function(){return r}),n.d(t,\"AVATAR_CHANGED\",function(){return i}),n.d(t,\"BEFORE_STATISTICS_DISPOSED\",function(){return o}),n.d(t,\"CONFERENCE_ERROR\",function(){return a}),n.d(t,\"CONFERENCE_FAILED\",function(){return s}),n.d(t,\"CONFERENCE_JOINED\",function(){return c}),n.d(t,\"CONFERENCE_LEFT\",function(){return u}),n.d(t,\"CONNECTION_ESTABLISHED\",function(){return l}),n.d(t,\"CONNECTION_INTERRUPTED\",function(){return d}),n.d(t,\"CONNECTION_RESTORED\",function(){return p}),n.d(t,\"DATA_CHANNEL_OPENED\",function(){return h}),n.d(t,\"DISPLAY_NAME_CHANGED\",function(){return f}),n.d(t,\"DOMINANT_SPEAKER_CHANGED\",function(){return m}),n.d(t,\"DTMF_SUPPORT_CHANGED\",function(){return v}),n.d(t,\"ENDPOINT_MESSAGE_RECEIVED\",function(){return y}),n.d(t,\"JVB121_STATUS\",function(){return g}),n.d(t,\"KICKED\",function(){return _}),n.d(t,\"LAST_N_ENDPOINTS_CHANGED\",function(){return S}),n.d(t,\"LOCK_STATE_CHANGED\",function(){return b}),n.d(t,\"SERVER_REGION_CHANGED\",function(){return E}),n.d(t,\"MESSAGE_RECEIVED\",function(){return T}),n.d(t,\"PRIVATE_MESSAGE_RECEIVED\",function(){return C}),n.d(t,\"PARTICIPANT_CONN_STATUS_CHANGED\",function(){return R}),n.d(t,\"PARTCIPANT_FEATURES_CHANGED\",function(){return w}),n.d(t,\"PARTICIPANT_PROPERTY_CHANGED\",function(){return A}),n.d(t,\"P2P_STATUS\",function(){return k}),n.d(t,\"PHONE_NUMBER_CHANGED\",function(){return O}),n.d(t,\"PROPERTIES_CHANGED\",function(){return I}),n.d(t,\"RECORDER_STATE_CHANGED\",function(){return P}),n.d(t,\"VIDEO_SIP_GW_AVAILABILITY_CHANGED\",function(){return D}),n.d(t,\"VIDEO_SIP_GW_SESSION_STATE_CHANGED\",function(){return N}),n.d(t,\"START_MUTED_POLICY_CHANGED\",function(){return L}),n.d(t,\"STARTED_MUTED\",function(){return M}),n.d(t,\"SUBJECT_CHANGED\",function(){return x}),n.d(t,\"SUSPEND_DETECTED\",function(){return j}),n.d(t,\"TALK_WHILE_MUTED\",function(){return F}),n.d(t,\"TRACK_ADDED\",function(){return U}),n.d(t,\"TRACK_AUDIO_LEVEL_CHANGED\",function(){return J}),n.d(t,\"TRACK_MUTE_CHANGED\",function(){return H}),n.d(t,\"TRACK_REMOVED\",function(){return G}),n.d(t,\"TRANSCRIPTION_STATUS_CHANGED\",function(){return B}),n.d(t,\"USER_JOINED\",function(){return V}),n.d(t,\"USER_LEFT\",function(){return q}),n.d(t,\"USER_ROLE_CHANGED\",function(){return K}),n.d(t,\"USER_STATUS_CHANGED\",function(){return W}),n.d(t,\"BOT_TYPE_CHANGED\",function(){return z});var r=\"conference.auth_status_changed\",i=\"conference.avatarChanged\",o=\"conference.beforeStatisticsDisposed\",a=\"conference.error\",s=\"conference.failed\",c=\"conference.joined\",u=\"conference.left\",l=\"conference.connectionEstablished\",d=\"conference.connectionInterrupted\",p=\"conference.connectionRestored\",h=\"conference.dataChannelOpened\",f=\"conference.displayNameChanged\",m=\"conference.dominantSpeaker\",v=\"conference.dtmfSupportChanged\",y=\"conference.endpoint_message_received\",g=\"conference.jvb121Status\",_=\"conference.kicked\",S=\"conference.lastNEndpointsChanged\",b=\"conference.lock_state_changed\",E=\"conference.server_region_changed\",T=\"conference.messageReceived\",C=\"conference.privateMessageReceived\",R=\"conference.participant_conn_status_changed\",w=\"conference.partcipant_features_changed\",A=\"conference.participant_property_changed\",k=\"conference.p2pStatus\",O=\"conference.phoneNumberChanged\",I=\"conference.propertiesChanged\",P=\"conference.recorderStateChanged\",D=\"conference.videoSIPGWAvailabilityChanged\",N=\"conference.videoSIPGWSessionStateChanged\",L=\"conference.start_muted_policy_changed\",M=\"conference.started_muted\",x=\"conference.subjectChanged\",j=\"conference.suspendDetected\",F=\"conference.talk_while_muted\",U=\"conference.trackAdded\",J=\"conference.audioLevelsChanged\",H=\"conference.trackMuteChanged\",G=\"conference.trackRemoved\",B=\"conference.transcriptionStatusChanged\",V=\"conference.userJoined\",q=\"conference.userLeft\",K=\"conference.roleChanged\",W=\"conference.statusChanged\",z=\"conference.bot_type_changed\"},function(e,t,n){\"use strict\";var r=n(76);t.a=new r.a},function(e,t,n){var r=n(64),i=n(123),o={},a=[],s=r.levels.TRACE;e.exports={addGlobalTransport:function(e){r.addGlobalTransport(e)},removeGlobalTransport:function(e){r.removeGlobalTransport(e)},getLogger:function(e,t,n){var i=new r(s,e,t,n);return e?(o[e]=o[e]||[],o[e].push(i)):a.push(i),i},setLogLevelById:function(e,t){for(var n=t?o[t]||[]:a,r=0;r<n.length;r++)n[r].setLevel(e)},setLogLevel:function(e){s=e;for(var t=0;t<a.length;t++)a[t].setLevel(e);for(var n in o){var r=o[n]||[];for(t=0;t<r.length;t++)r[t].setLevel(e)}},levels:r.levels,LogCollector:i}},function(e,t,n){\"use strict\";(function(e){var r=n(4),i=n(37),o=n.n(i),a=n(3);function s(e){return function(e){if(Array.isArray(e)){for(var t=0,n=new Array(e.length);t<e.length;t++)n[t]=e[t];return n}}(e)||function(e){if(Symbol.iterator in Object(e)||\"[object Arguments]\"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError(\"Invalid attempt to spread non-iterable instance\")}()}var c=Object(r.getLogger)(e),u={filterSpecialChars:function(e){return e?e.replace(/[\\\\\\/\\{,\\}\\+]/g,\"\"):e},iceparams:function(e,t){var n,r,i=null;return(r=u.findLine(e,\"a=ice-ufrag:\",t))&&(n=u.findLine(e,\"a=ice-pwd:\",t))&&(i={ufrag:u.parseICEUfrag(r),pwd:u.parseICEPwd(n)}),i},parseICEUfrag:function(e){return e.substring(12)},buildICEUfrag:function(e){return\"a=ice-ufrag:\".concat(e)},parseICEPwd:function(e){return e.substring(10)},buildICEPwd:function(e){return\"a=ice-pwd:\".concat(e)},parseMID:function(e){return e.substring(6)},parseMLine:function(e){var t={},n=e.substring(2).split(\" \");return t.media=n.shift(),t.port=n.shift(),t.proto=n.shift(),\"\"===n[n.length-1]&&n.pop(),t.fmt=n,t},buildMLine:function(e){return\"m=\".concat(e.media,\" \").concat(e.port,\" \").concat(e.proto,\" \").concat(e.fmt.join(\" \"))},parseRTPMap:function(e){var t={},n=e.substring(9).split(\" \");return t.id=n.shift(),n=n[0].split(\"/\"),t.name=n.shift(),t.clockrate=n.shift(),t.channels=n.length?n.shift():\"1\",t},parseSCTPMap:function(e){var t=e.substring(10).split(\" \");return[t[0],t[1],t.length>2?t[2]:null]},buildRTPMap:function(e){var t=\"a=rtpmap:\".concat(e.getAttribute(\"id\"),\" \").concat(e.getAttribute(\"name\"),\"/\").concat(e.getAttribute(\"clockrate\"));return e.getAttribute(\"channels\")&&\"1\"!==e.getAttribute(\"channels\")&&(t+=\"/\".concat(e.getAttribute(\"channels\"))),t},parseCrypto:function(e){var t={},n=e.substring(9).split(\" \");return t.tag=n.shift(),t[\"crypto-suite\"]=n.shift(),t[\"key-params\"]=n.shift(),n.length&&(t[\"session-params\"]=n.join(\" \")),t},parseFingerprint:function(e){var t={},n=e.substring(14).split(\" \");return t.hash=n.shift(),t.fingerprint=n.shift(),t},parseFmtp:function(e){var t=[],n=e.split(\" \");n.shift(),n=n.join(\" \").split(\";\");for(var r=0;r<n.length;r++){for(var i=n[r].split(\"=\")[0];i.length&&\" \"===i[0];)i=i.substring(1);var o=n[r].split(\"=\")[1];i&&o?t.push({name:i,value:o}):i&&t.push({name:\"\",value:i})}return t},parseICECandidate:function(e){var t={},n=e.split(\" \");t.foundation=n[0].substring(12),t.component=n[1],t.protocol=n[2].toLowerCase(),t.priority=n[3],t.ip=n[4],t.port=n[5],t.type=n[7],t.generation=0;for(var r=8;r<n.length;r+=2)switch(n[r]){case\"raddr\":t[\"rel-addr\"]=n[r+1];break;case\"rport\":t[\"rel-port\"]=n[r+1];break;case\"generation\":t.generation=n[r+1];break;case\"tcptype\":t.tcptype=n[r+1];break;default:c.log('parseICECandidate not translating \"'.concat(n[r],'\" = \"').concat(n[r+1],'\"'))}return t.network=\"1\",t.id=Math.random().toString(36).substr(2,10),t},buildICECandidate:function(e){var t=[\"a=candidate:\".concat(e.foundation),e.component,e.protocol,e.priority,e.ip,e.port,\"typ\",e.type].join(\" \");switch(t+=\" \",e.type){case\"srflx\":case\"prflx\":case\"relay\":e.hasOwnAttribute(\"rel-addr\")&&e.hasOwnAttribute(\"rel-port\")&&(t+=\"raddr\",t+=\" \",t+=e[\"rel-addr\"],t+=\" \",t+=\"rport\",t+=\" \",t+=e[\"rel-port\"],t+=\" \")}return e.hasOwnAttribute(\"tcptype\")&&(t+=\"tcptype\",t+=\" \",t+=e.tcptype,t+=\" \"),t+=\"generation\",t+=\" \",t+=e.hasOwnAttribute(\"generation\")?e.generation:\"0\"},parseSSRC:function(e){for(var t=new Map,n=e.split(\"\\r\\n\"),r=0;r<n.length;r++)if(\"a=ssrc:\"===n[r].substring(0,7)){var i=n[r].split(\"a=ssrc:\")[1].split(\" \")[0];t.get(i)||t.set(i,[]),t.get(i).push(n[r])}return t},parseRTCPFB:function(e){var t=e.substr(10).split(\" \"),n={};return n.pt=t.shift(),n.type=t.shift(),n.params=t,n},parseExtmap:function(e){var t=e.substr(9).split(\" \"),n={};return n.value=t.shift(),-1===n.value.indexOf(\"/\")?n.direction=\"both\":(n.direction=n.value.substr(n.value.indexOf(\"/\")+1),n.value=n.value.substr(0,n.value.indexOf(\"/\"))),n.uri=t.shift(),n.params=t,n},findLine:function(e,t,n){for(var r=e.split(\"\\r\\n\"),i=0;i<r.length;i++)if(r[i].substring(0,t.length)===t)return r[i];if(!n)return!1;r=n.split(\"\\r\\n\");for(var o=0;o<r.length;o++)if(r[o].substring(0,t.length)===t)return r[o];return!1},findLines:function(e,t,n){for(var r=e.split(\"\\r\\n\"),i=[],o=0;o<r.length;o++)r[o].substring(0,t.length)===t&&i.push(r[o]);if(i.length||!n)return i;r=n.split(\"\\r\\n\");for(var a=0;a<r.length;a++)r[a].substring(0,t.length)===t&&i.push(r[a]);return i},candidateToJingle:function(e){if(0===e.indexOf(\"candidate:\"))e=\"a=\".concat(e);else if(\"a=candidate:\"!==e.substring(0,12))return c.log(\"parseCandidate called with a line that is not a candidate line\"),c.log(e),null;\"\\r\\n\"===e.substring(e.length-2)&&(e=e.substring(0,e.length-2));var t={},n=e.split(\" \");if(\"typ\"!==n[6])return c.log(\"did not find typ in the right place\"),c.log(e),null;t.foundation=n[0].substring(12),t.component=n[1],t.protocol=n[2].toLowerCase(),t.priority=n[3],t.ip=n[4],t.port=n[5],t.type=n[7],t.generation=\"0\";for(var r=8;r<n.length;r+=2)switch(n[r]){case\"raddr\":t[\"rel-addr\"]=n[r+1];break;case\"rport\":t[\"rel-port\"]=n[r+1];break;case\"generation\":t.generation=n[r+1];break;case\"tcptype\":t.tcptype=n[r+1];break;default:c.log('not translating \"'.concat(n[r],'\" = \"').concat(n[r+1],'\"'))}return t.network=\"1\",t.id=Math.random().toString(36).substr(2,10),t},candidateFromJingle:function(e){var t=\"a=candidate:\";t+=e.getAttribute(\"foundation\"),t+=\" \",t+=e.getAttribute(\"component\"),t+=\" \";var n=e.getAttribute(\"protocol\");switch(a.a.isFirefox()&&\"ssltcp\"===n.toLowerCase()&&(n=\"tcp\"),t+=n,t+=\" \",t+=e.getAttribute(\"priority\"),t+=\" \",t+=e.getAttribute(\"ip\"),t+=\" \",t+=e.getAttribute(\"port\"),t+=\" \",t+=\"typ\",t+=\" \".concat(e.getAttribute(\"type\")),t+=\" \",e.getAttribute(\"type\")){case\"srflx\":case\"prflx\":case\"relay\":e.getAttribute(\"rel-addr\")&&e.getAttribute(\"rel-port\")&&(t+=\"raddr\",t+=\" \",t+=e.getAttribute(\"rel-addr\"),t+=\" \",t+=\"rport\",t+=\" \",t+=e.getAttribute(\"rel-port\"),t+=\" \")}return\"tcp\"===n.toLowerCase()&&(t+=\"tcptype\",t+=\" \",t+=e.getAttribute(\"tcptype\"),t+=\" \"),t+=\"generation\",t+=\" \",t+=e.getAttribute(\"generation\")||\"0\",\"\".concat(t,\"\\r\\n\")},parsePrimaryVideoSsrc:function(e){var t=e.ssrcs.map(function(e){return e.id}).filter(function(e,t,n){return n.indexOf(e)===t}).length,n=e.ssrcGroups&&e.ssrcGroups.length||0;if(!(t>1&&0===n)){var r=null;if(1===t)r=e.ssrcs[0].id;else if(2===t){var i=e.ssrcGroups.find(function(e){return\"FID\"===e.semantics});i&&(r=i.ssrcs.split(\" \")[0])}else if(t>=3){var o=e.ssrcGroups.find(function(e){return\"SIM\"===e.semantics});o&&(r=o.ssrcs.split(\" \")[0])}return r}},generateSsrc:function(){return o.a.randomInt(1,4294967295)},getSsrcAttribute:function(e,t,n){for(var r=0;r<e.ssrcs.length;++r){var i=e.ssrcs[r];if(i.id===t&&i.attribute===n)return i.value}},parseGroupSsrcs:function(e){return e.ssrcs.split(\" \").map(function(e){return parseInt(e,10)})},getMedia:function(e,t){return e.media.find(function(e){return e.type===t})},getUfrag:function(e){var t=e.split(\"\\n\").filter(function(e){return e.startsWith(\"a=ice-ufrag:\")});if(t.length>0)return t[0].substr(\"a=ice-ufrag:\".length)},preferVideoCodec:function(e,t){var n=null;if(e&&t){for(var r=0;r<e.rtp.length;++r){var i=e.rtp[r];if(i.codec&&i.codec.toLowerCase()===t.toLowerCase()){n=i.payload;break}}if(n){var o=e.payloads.toString().split(\" \").map(function(e){return parseInt(e,10)}),a=o.indexOf(n);o.splice(a,1),o.unshift(n),e.payloads=o.join(\" \")}}},stripVideoCodec:function(e,t){if(e&&t){var n=[],r=!0,i=!1,o=void 0;try{for(var a,c=e.rtp[Symbol.iterator]();!(r=(a=c.next()).done);r=!0){var u=a.value;u.codec&&u.codec.toLowerCase()===t.toLowerCase()&&n.push(u.payload)}}catch(e){i=!0,o=e}finally{try{r||null==c.return||c.return()}finally{if(i)throw o}}if(n.length>0){var l=n.map(function(e){return\"apt=\".concat(e)}),d=e.fmtp.filter(function(e){return-1!==l.indexOf(e.config)});n.push.apply(n,s(d.map(function(e){return e.payload})));var p=e.payloads.toString().split(\" \").map(Number).filter(function(e){return-1===n.indexOf(e)});0===p.length?(e.port=0,e.direction=\"inactive\",e.payloads=\"*\"):e.payloads=p.join(\" \"),e.rtp=e.rtp.filter(function(e){return-1!==p.indexOf(e.payload)}),e.fmtp=e.fmtp.filter(function(e){return-1!==p.indexOf(e.payload)}),e.rtcpFb&&(e.rtcpFb=e.rtcpFb.filter(function(e){return-1!==p.indexOf(e.payload)}))}}}};t.a=u}).call(this,\"modules/xmpp/SDPUtil.js\")},function(e,t,n){\"use strict\";(function(e){n.d(t,\"a\",function(){return b});var r=n(30),i=n.n(r),o=n(8),a=n(75),s=n(33),c=n(53),u=n(79),l=n(3),d=n(25),p=n(54),h=n.n(p),f=n(15),m=n(23);function v(e){return(v=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}var y,g=n(4).getLogger(e),_=!1;function S(e){if(!s.a.isBackendInitialized()){var t=d.a.callStatsUserName;s.a.initBackend({callStatsID:e.callStatsID,callStatsSecret:e.callStatsSecret,userName:e.swapUserNameAndAlias?e.callStatsAliasName:t,aliasName:e.swapUserNameAndAlias?t:e.callStatsAliasName,applicationName:e.applicationName,getWiFiStatsMethod:e.getWiFiStatsMethod})||g.error(\"CallStats Backend initialization failed bad\")}}function b(e,t){this.rtpStatsMap=new Map,this.eventEmitter=new i.a,this.xmpp=e,this.options=t||{},this.callStatsIntegrationEnabled=this.options.callStatsID&&this.options.callStatsSecret&&!0!==b.disableThirdPartyRequests,this.callStatsIntegrationEnabled&&(l.a.isReactNative()?S(this.options):function(e){_||(h.a.loadScript(e.customScriptUrl||\"https://api.callstats.io/static/callstats-ws.min.js\",!0,!0,void 0,function(){return S(e)}),_=!0)}(this.options),this.options.callStatsConfIDNamespace||g.warn('\"callStatsConfIDNamespace\" is not defined')),this.callsStatsInstances=new Map,b.instances.add(this)}b.init=function(e){b.audioLevelsEnabled=!e.disableAudioLevels,\"number\"==typeof e.audioLevelsInterval&&(b.audioLevelsInterval=e.audioLevelsInterval),b.disableThirdPartyRequests=e.disableThirdPartyRequests},b.audioLevelsEnabled=!1,b.audioLevelsInterval=200,b.disableThirdPartyRequests=!1,b.analytics=a.a,Object.defineProperty(b,\"instances\",{get:function(){return y||(y=new Set),y}}),b.prototype.startRemoteStats=function(e){this.stopRemoteStats(e);try{var t=new u.a(e,b.audioLevelsInterval,2e3,this.eventEmitter);t.start(b.audioLevelsEnabled),this.rtpStatsMap.set(e.id,t)}catch(e){g.error(\"Failed to start collecting remote statistics: \".concat(e))}},b.localStats=[],b.startLocalStats=function(e,t){if(b.audioLevelsEnabled){var n=new c.a(e,b.audioLevelsInterval,t);this.localStats.push(n),n.start()}},b.prototype.addAudioLevelListener=function(e){b.audioLevelsEnabled&&this.eventEmitter.on(m.a,e)},b.prototype.removeAudioLevelListener=function(e){b.audioLevelsEnabled&&this.eventEmitter.removeListener(m.a,e)},b.prototype.addBeforeDisposedListener=function(e){this.eventEmitter.on(m.b,e)},b.prototype.removeBeforeDisposedListener=function(e){this.eventEmitter.removeListener(m.b,e)},b.prototype.addConnectionStatsListener=function(e){this.eventEmitter.on(m.d,e)},b.prototype.removeConnectionStatsListener=function(e){this.eventEmitter.removeListener(m.d,e)},b.prototype.addByteSentStatsListener=function(e){this.eventEmitter.on(m.c,e)},b.prototype.removeByteSentStatsListener=function(e){this.eventEmitter.removeListener(m.c,e)},b.prototype.dispose=function(){try{this.callsStatsInstances.size||this.eventEmitter.emit(m.b);var e=!0,t=!1,n=void 0;try{for(var r,i=this.callsStatsInstances.values()[Symbol.iterator]();!(e=(r=i.next()).done);e=!0){var o=r.value;this.stopCallStats(o.tpc)}}catch(e){t=!0,n=e}finally{try{e||null==i.return||i.return()}finally{if(t)throw n}}var a=!0,s=!1,c=void 0;try{for(var u,l=this.rtpStatsMap.keys()[Symbol.iterator]();!(a=(u=l.next()).done);a=!0){var d=u.value;this._stopRemoteStats(d)}}catch(e){s=!0,c=e}finally{try{a||null==l.return||l.return()}finally{if(s)throw c}}this.eventEmitter&&this.eventEmitter.removeAllListeners()}finally{b.instances.delete(this)}},b.stopLocalStats=function(e){if(b.audioLevelsEnabled)for(var t=0;t<b.localStats.length;t++)if(b.localStats[t].stream===e){b.localStats.splice(t,1)[0].stop();break}},b.prototype._stopRemoteStats=function(e){var t=this.rtpStatsMap.get(e);t&&(t.stop(),this.rtpStatsMap.delete(e))},b.prototype.stopRemoteStats=function(e){this._stopRemoteStats(e.id)},b.prototype.startCallStats=function(e,t){if(this.callStatsIntegrationEnabled)if(this.callsStatsInstances.has(e.id))g.error(\"CallStats instance for ${tpc} exists already\");else{g.info(\"Starting CallStats for \".concat(e,\"...\"));var n=new s.a(e,{confID:this._getCallStatsConfID(),remoteUserID:t});this.callsStatsInstances.set(e.id,n)}},b._getAllCallStatsInstances=function(){var e=new Set,t=!0,n=!1,r=void 0;try{for(var i,o=b.instances[Symbol.iterator]();!(t=(i=o.next()).done);t=!0){var a=i.value,s=!0,c=!1,u=void 0;try{for(var l,d=a.callsStatsInstances.values()[Symbol.iterator]();!(s=(l=d.next()).done);s=!0){var p=l.value;e.add(p)}}catch(e){c=!0,u=e}finally{try{s||null==d.return||d.return()}finally{if(c)throw u}}}}catch(e){n=!0,r=e}finally{try{t||null==o.return||o.return()}finally{if(n)throw r}}return e},b.prototype._getCallStatsConfID=function(){return this.options.callStatsConfIDNamespace?\"\".concat(this.options.callStatsConfIDNamespace,\"/\").concat(this.options.roomName):this.options.roomName},b.prototype.stopCallStats=function(e){var t=this.callsStatsInstances.get(e.id);t&&(1===this.callsStatsInstances.size&&this.eventEmitter.emit(m.b),this.callsStatsInstances.delete(e.id),t.sendTerminateEvent())},b.prototype.isCallstatsEnabled=function(){return this.callStatsIntegrationEnabled},b.prototype.sendConnectionResumeOrHoldEvent=function(e,t){var n=this.callsStatsInstances.get(e.id);n&&n.sendResumeOrHoldEvent(t)},b.prototype.sendIceConnectionFailedEvent=function(e){var t=this.callsStatsInstances.get(e.id);t&&t.sendIceConnectionFailedEvent()},b.prototype.sendMuteEvent=function(e,t,n){var r=e&&this.callsStatsInstances.get(e.id);s.a.sendMuteEvent(t,n,r)},b.prototype.sendScreenSharingEvent=function(e,t){var n=!0,r=!1,i=void 0;try{for(var o,a=this.callsStatsInstances.values()[Symbol.iterator]();!(n=(o=a.next()).done);n=!0){o.value.sendScreenSharingEvent(e,t)}}catch(e){r=!0,i=e}finally{try{n||null==a.return||a.return()}finally{if(r)throw i}}},b.prototype.sendDominantSpeakerEvent=function(e){var t=!0,n=!1,r=void 0;try{for(var i,o=this.callsStatsInstances.values()[Symbol.iterator]();!(t=(i=o.next()).done);t=!0){i.value.sendDominantSpeakerEvent()}}catch(e){n=!0,r=e}finally{try{t||null==o.return||o.return()}finally{if(n)throw r}}this.xmpp.sendDominantSpeakerEvent(e)},b.sendActiveDeviceListEvent=function(e){var t=b._getAllCallStatsInstances();if(t.size){var n=!0,r=!1,i=void 0;try{for(var o,a=t[Symbol.iterator]();!(n=(o=a.next()).done);n=!0){var c=o.value;s.a.sendActiveDeviceListEvent(e,c)}}catch(e){r=!0,i=e}finally{try{n||null==a.return||a.return()}finally{if(r)throw i}}}else s.a.sendActiveDeviceListEvent(e,null)},b.prototype.associateStreamWithVideoTag=function(e,t,n,r,i,o){var a=this.callsStatsInstances.get(e.id);a&&a.associateStreamWithVideoTag(t,n,r,i,o)},b.sendGetUserMediaFailed=function(e){var t=e instanceof f.a?function(e){var t=new Error;return t.stack=e.stack,t.name=(e.name||\"Unknown error\")+(e.gum&&e.gum.error&&e.gum.error.name?\" - \".concat(e.gum.error.name):\"\"),t.constraintName=e.gum&&e.gum.constraints?JSON.stringify(e.gum.constraints):\"\",t.message=e.message,t}(e):e,n=b._getAllCallStatsInstances();if(n.size){var r=!0,i=!1,o=void 0;try{for(var a,c=n[Symbol.iterator]();!(r=(a=c.next()).done);r=!0){var u=a.value;s.a.sendGetUserMediaFailed(t,u)}}catch(e){i=!0,o=e}finally{try{r||null==c.return||c.return()}finally{if(i)throw o}}}else s.a.sendGetUserMediaFailed(t,null)},b.prototype.sendCreateOfferFailed=function(e,t){var n=this.callsStatsInstances.get(t.id);n&&n.sendCreateOfferFailed(e)},b.prototype.sendCreateAnswerFailed=function(e,t){var n=this.callsStatsInstances.get(t.id);n&&n.sendCreateAnswerFailed(e)},b.prototype.sendSetLocalDescFailed=function(e,t){var n=this.callsStatsInstances.get(t.id);n&&n.sendSetLocalDescFailed(e)},b.prototype.sendSetRemoteDescFailed=function(e,t){var n=this.callsStatsInstances.get(t.id);n&&n.sendSetRemoteDescFailed(e)},b.prototype.sendAddIceCandidateFailed=function(e,t){var n=this.callsStatsInstances.get(t.id);n&&n.sendAddIceCandidateFailed(e)},b.sendLog=function(e){var t=new Set,n=!0,r=!1,i=void 0;try{for(var o,a=b.instances[Symbol.iterator]();!(n=(o=a.next()).done);n=!0){var c=o.value;c.callsStatsInstances.size&&t.add(c.callsStatsInstances.values().next().value)}}catch(e){r=!0,i=e}finally{try{n||null==a.return||a.return()}finally{if(r)throw i}}if(t.size){var u=!0,l=!1,d=void 0;try{for(var p,h=t[Symbol.iterator]();!(u=(p=h.next()).done);u=!0){var f=p.value;s.a.sendApplicationLog(e,f)}}catch(e){l=!0,d=e}finally{try{u||null==h.return||h.return()}finally{if(l)throw d}}}else s.a.sendApplicationLog(e,null)},b.prototype.sendFeedback=function(e,t){s.a.sendFeedback(this._getCallStatsConfID(),e,t),b.analytics.sendEvent(o.m,{rating:e,comment:t})},b.LOCAL_JID=n(127).LOCAL_JID,b.reportGlobalError=function(e){e instanceof f.a&&e.gum?b.sendGetUserMediaFailed(e):b.sendLog(e)},b.sendAnalyticsAndLog=function(e){var t,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};e?(t=\"object\"===v(e)?e:{name:e,properties:n},g.log(JSON.stringify(t)),this.analytics.sendEvent(e,n)):g.warn(\"No event or event name given.\")},b.sendAnalytics=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.analytics.sendEvent(e,t)}}).call(this,\"modules/statistics/statistics.js\")},function(e,t){e.exports={CREATE_ANSWER_FAILED:\"rtc.create_answer_failed\",CREATE_OFFER_FAILED:\"rtc.create_offer_failed\",DATA_CHANNEL_OPEN:\"rtc.data_channel_open\",ENDPOINT_CONN_STATUS_CHANGED:\"rtc.endpoint_conn_status_changed\",DOMINANT_SPEAKER_CHANGED:\"rtc.dominant_speaker_changed\",LASTN_ENDPOINT_CHANGED:\"rtc.lastn_endpoint_changed\",GRANTED_PERMISSIONS:\"rtc.granted_permissions\",IS_SELECTED_CHANGED:\"rtc.is_selected_change\",LASTN_VALUE_CHANGED:\"rtc.lastn_value_changed\",LOCAL_TRACK_SSRC_UPDATED:\"rtc.local_track_ssrc_updated\",TRACK_ATTACHED:\"rtc.track_attached\",REMOTE_TRACK_ADDED:\"rtc.remote_track_added\",REMOTE_TRACK_MUTE:\"rtc.remote_track_mute\",REMOTE_TRACK_REMOVED:\"rtc.remote_track_removed\",REMOTE_TRACK_UNMUTE:\"rtc.remote_track_unmute\",SET_LOCAL_DESCRIPTION_FAILED:\"rtc.set_local_description_failed\",SET_REMOTE_DESCRIPTION_FAILED:\"rtc.set_remote_description_failed\",AUDIO_OUTPUT_DEVICE_CHANGED:\"rtc.audio_output_device_changed\",DEVICE_LIST_CHANGED:\"rtc.device_list_changed\",DEVICE_LIST_AVAILABLE:\"rtc.device_list_available\",ENDPOINT_MESSAGE_RECEIVED:\"rtc.endpoint_message_received\",LOCAL_UFRAG_CHANGED:\"rtc.local_ufrag_changed\",REMOTE_UFRAG_CHANGED:\"rtc.remote_ufrag_changed\"}},function(e,t,n){\"use strict\";function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);\"function\"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),r.forEach(function(t){i(e,t,n[t])})}return e}function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}n.d(t,\"r\",function(){return o}),n.d(t,\"s\",function(){return a}),n.d(t,\"t\",function(){return s}),n.d(t,\"u\",function(){return c}),n.d(t,\"a\",function(){return u}),n.d(t,\"b\",function(){return l}),n.d(t,\"c\",function(){return d}),n.d(t,\"d\",function(){return p}),n.d(t,\"e\",function(){return h}),n.d(t,\"f\",function(){return f}),n.d(t,\"g\",function(){return m}),n.d(t,\"h\",function(){return v}),n.d(t,\"i\",function(){return y}),n.d(t,\"j\",function(){return g}),n.d(t,\"k\",function(){return _}),n.d(t,\"l\",function(){return S}),n.d(t,\"m\",function(){return b}),n.d(t,\"n\",function(){return E}),n.d(t,\"o\",function(){return T}),n.d(t,\"p\",function(){return C}),n.d(t,\"q\",function(){return R}),n.d(t,\"v\",function(){return w}),n.d(t,\"w\",function(){return A}),n.d(t,\"x\",function(){return k}),n.d(t,\"y\",function(){return O}),n.d(t,\"z\",function(){return I}),n.d(t,\"A\",function(){return P}),n.d(t,\"B\",function(){return D}),n.d(t,\"C\",function(){return N}),n.d(t,\"D\",function(){return L}),n.d(t,\"E\",function(){return M}),n.d(t,\"F\",function(){return x}),n.d(t,\"G\",function(){return j}),n.d(t,\"H\",function(){return F});var o=\"operational\",a=\"page\",s=\"track\",c=\"ui\",u=\"restart\",l=\"session-accept.timeout\",d=\"session-initiate.received\",p=\"session-initiate.timeout\",h=\"terminate\",f=\"transport-replace.received\",m=\"transport-replace.success\",v=\"established\",y=\"failed\",g=\"switch.to.jvb\",_=\"available.device\",S=\"connection.disconnected\",b=\"feedback\",E=\"ice.duration\",T=\"ice.establishment.duration.diff\",C=\"ice.state.changed\",R=\"track.unmuted\",w=function(){return{action:\"bridge.down\",actionSubject:\"bridge.down\",type:o}},A=function(e,t,n){return{type:o,action:\"connection.failed\",attributes:r({error_type:e,error_message:t},n)}},k=function(e,t){var n=\"connection.stage.reached\";return{action:n,actionSubject:e,attributes:t,source:n,type:o}},O=function(e,t,n){return{attributes:{participant_id:e,region:t,rtt:n},name:\"e2e_rtt\",type:o}},I=function(){return{action:\"focus.left\",actionSubject:\"focus.left\",type:o}},P=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return{type:o,source:\"get.user.media\",action:e,attributes:t}},D=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return{type:o,action:e,source:\"jingle\",attributes:t}},N=function(e){return{attributes:{media_type:e},action:\"track.no.data.from.source\",type:o}},L=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return{type:o,action:e,source:\"p2p\",attributes:t}},M=function(){return{type:o,action:\"remotely.muted\"}},x=function(e){return{type:o,action:\"rtp.stats\",attributes:e}},j=function(e){return{type:o,action:\"rtt.by.region\",attributes:e}},F=function(e){return k(\"ttfm\",e)}},function(e,t,n){\"use strict\";n.d(t,\"a\",function(){return r}),n.d(t,\"b\",function(){return i});var r=\"audio\",i=\"video\"},function(e,t){var n=[],r=window.onerror;var i=window.onunhandledrejection;window.onerror=function(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];n.forEach(function(e){return e.apply(void 0,t)}),r&&r.apply(void 0,t)},window.onunhandledrejection=function(e){n.forEach(function(t){return t(null,null,null,null,e.reason)}),i&&i(e)};var o={addHandler:function(e){n.push(e)},callErrorHandler:function(e){var t=window.onerror;t&&t(null,null,null,null,e)},callUnhandledRejectionHandler:function(e){var t=window.onunhandledrejection;t&&t(e)}};e.exports=o},function(e,t,n){\"use strict\";(function(e){var r=n(8),i=n(43),o=n.n(i),a=n(30),s=n.n(a),c=n(4),u=n(10),l=n.n(u),d=n(15),p=n(24),h=n(9),f=n(31),m=n.n(f),v=n(3),y=n(7),g=n.n(y),_=n(99),S=n(41),b=n(5),E=n(6),T=n(14),C=n.n(T);function R(e){return(R=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function w(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function A(e,t){return!t||\"object\"!==R(t)&&\"function\"!=typeof t?function(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}(e):t}function k(e){return(k=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function O(e,t){return(O=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function I(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);\"function\"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),r.forEach(function(t){P(e,t,n[t])})}return e}function P(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var D=Object(c.getLogger)(e);v.a.usesAdapter()&&n(135);var N,L,M=new s.a,x=[\"audio\",\"video\"],j={video:{aspectRatio:16/9,height:{ideal:720,max:720,min:240}}},F=5,U=\"default\",J=!1,H=!1,G=!1,B=!1,V=!1,q=!1,K=document.createElement(\"audio\"),W=void 0!==K.setSinkId;function z(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n={audio:!1,video:!1},r=v.a.isFirefox()||v.a.isSafariWithVP8()||v.a.isEdge()||v.a.isReactNative();if(e.indexOf(\"video\")>=0){if(n.video={mandatory:{},optional:[]},t.cameraDeviceId)r&&(n.video.deviceId=t.cameraDeviceId),n.video.mandatory.sourceId=t.cameraDeviceId;else{var i=t.facingMode||o.a.USER;r&&(n.video.facingMode=i),n.video.optional.push({facingMode:i})}(t.minFps||t.maxFps||t.fps)&&((t.minFps||t.fps)&&(t.minFps=t.minFps||t.fps,n.video.mandatory.minFrameRate=t.minFps),t.maxFps&&(n.video.mandatory.maxFrameRate=t.maxFps)),function(e,t,n){m.a[n]&&(t&&(e.video.width={ideal:m.a[n].width},e.video.height={ideal:m.a[n].height}),e.video.mandatory.minWidth=m.a[n].width,e.video.mandatory.minHeight=m.a[n].height),e.video.mandatory.minWidth&&(e.video.mandatory.maxWidth=e.video.mandatory.minWidth),e.video.mandatory.minHeight&&(e.video.mandatory.maxHeight=e.video.mandatory.minHeight)}(n,r,t.resolution)}if(e.indexOf(\"audio\")>=0&&(v.a.isReactNative()?n.audio=!0:v.a.isFirefox()?t.micDeviceId?n.audio={mandatory:{},deviceId:t.micDeviceId,optional:[{sourceId:t.micDeviceId}]}:n.audio=!0:(n.audio={mandatory:{},optional:[]},t.micDeviceId&&(r&&(n.audio.deviceId=t.micDeviceId),n.audio.optional.push({sourceId:t.micDeviceId})),n.audio.optional.push({echoCancellation:!G&&!H},{googEchoCancellation:!G&&!H},{googAutoGainControl:!V&&!H},{googNoiseSuppression:!B&&!H},{googHighpassFilter:!q&&!H},{googNoiseSuppression2:!B&&!H},{googEchoCancellation2:!G&&!H},{googAutoGainControl2:!V&&!H}))),e.indexOf(\"screen\")>=0)if(v.a.isChrome())n.video={mandatory:$(I({},t,{source:\"screen\"})),optional:[]};else if(v.a.isFirefox())n.video={mozMediaSource:\"window\",mediaSource:\"window\",frameRate:t.frameRate||{min:F,max:F}};else{var a=\"'screen' WebRTC media source is supported only in Chrome and Firefox\";l.a.callErrorHandler(new Error(a)),D.error(a)}return e.indexOf(\"desktop\")>=0&&(n.video={mandatory:$(I({},t,{source:\"desktop\"})),optional:[]}),t.bandwidth&&(n.video||(n.video={mandatory:{},optional:[]}),n.video.optional.push({bandwidth:t.bandwidth})),v.a.isFirefox()&&t.firefox_fake_device&&(n.fake=!0),n}function $(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.desktopStream,n=e.frameRate,r=void 0===n?{min:F,max:F}:n,i=r.max,o=r.min,a={chromeMediaSource:e.source,maxWidth:window.screen.width,maxHeight:window.screen.height};return\"number\"==typeof o&&(a.minFrameRate=o),\"number\"==typeof i&&(a.maxFrameRate=i),void 0!==t&&(a.chromeMediaSourceId=t),a}function X(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={frameRate:F},n=e.desktopSharingFrameRate;return n&&n.max&&(t.frameRate=n.max),t}function Q(e,t){var n=Boolean(t)&&t.getAudioTracks().length>0,r=Boolean(t)&&t.getVideoTracks().length>0,i={};-1!==e.indexOf(\"video\")&&(i.video=r),-1!==e.indexOf(\"audio\")&&(i.audio=n),M.emit(g.a.GRANTED_PERMISSIONS,i)}function Y(e){var t=e.filter(function(e){return\"audioinput\"===e.kind}).length,n=e.filter(function(e){return\"audiooutput\"===e.kind}).length,i=e.filter(function(e){return\"videoinput\"===e.kind}).length,o=e.filter(function(e){return\"videooutput\"===e.kind}).length;e.forEach(function(e){var a={audio_input_device_count:t,audio_output_device_count:n,video_input_device_count:i,video_output_device_count:o,device_id:e.deviceId,device_group_id:e.groupId,device_kind:e.kind,device_label:e.label};E.a.sendAnalytics(r.k,a)})}function Z(e,t){var n,r=\"srcObject\";(r in e||(r=\"mozSrcObject\")in e||(r=null),r)?e[r]=t:(t&&((n=t.jitsiObjectURL)||(t.jitsiObjectURL=n=URL.createObjectURL(t))),e.src=n||\"\")}var ee=new(function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t),A(this,k(t).call(this,M))}var n,r,i;return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&O(e,t)}(t,p[\"a\"]),n=t,(r=[{key:\"init\",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(\"boolean\"==typeof t.disableAEC&&(G=t.disableAEC,D.info(\"Disable AEC: \".concat(G))),\"boolean\"==typeof t.disableNS&&(B=t.disableNS,D.info(\"Disable NS: \".concat(B))),\"boolean\"==typeof t.disableAP&&(H=t.disableAP,D.info(\"Disable AP: \".concat(H))),\"boolean\"==typeof t.disableAGC&&(V=t.disableAGC,D.info(\"Disable AGC: \".concat(V))),\"boolean\"==typeof t.disableHPF&&(q=t.disableHPF,D.info(\"Disable HPF: \".concat(q))),N=void 0,window.clearInterval(L),L=void 0,this.enumerateDevices=function(){if(navigator.mediaDevices&&navigator.mediaDevices.enumerateDevices)return function(e){navigator.mediaDevices.enumerateDevices().then(e,function(){return e([])})}}(),v.a.usesNewGumFlow())this.RTCPeerConnectionType=RTCPeerConnection,this.attachMediaStream=te(function(e,t){e&&(e.srcObject=t)}),this.getStreamID=function(e){return e.id},this.getTrackID=function(e){return e.id};else if(v.a.isChromiumBased()||v.a.isReactNative())this.RTCPeerConnectionType=RTCPeerConnection,this.attachMediaStream=te(function(e,t){return Z(e,t),e}),this.getStreamID=function(e){var t=e.id;return\"number\"==typeof t?t:b.a.filterSpecialChars(t)},this.getTrackID=function(e){return e.id},MediaStream.prototype.getVideoTracks||(MediaStream.prototype.getVideoTracks=function(){return this.videoTracks}),MediaStream.prototype.getAudioTracks||(MediaStream.prototype.getAudioTracks=function(){return this.audioTracks});else{if(!v.a.isEdge()){var n=\"Endpoint does not appear to be WebRTC-capable\";throw D.error(n),new Error(n)}this.RTCPeerConnectionType=_.a,this.attachMediaStream=te(function(e,t){Z(e,t)}),this.getStreamID=function(e){var t=e.jitsiRemoteId||e.id;return b.a.filterSpecialChars(t)},this.getTrackID=function(e){return e.jitsiRemoteId||e.id}}this._initPCConstraints(t),S.a.init(t,this.getUserMediaWithConstraints.bind(this)),this.isDeviceListAvailable()&&this.enumerateDevices(function(t){N=t.splice(0),D.debug(\"Available devices: \",N),Y(N),M.emit(g.a.DEVICE_LIST_AVAILABLE,N);var n=function(){return e.enumerateDevices(function(e){var t;(function(e){return e.length!==N.length||e.map(t).sort().join(\"\")!==N.map(t).sort().join(\"\");function t(e){return JSON.stringify({kind:e.kind,deviceId:e.deviceId,groupId:e.groupId,label:e.label,facing:e.facing})}})(e)&&(N=(t=e).slice(0),D.info(\"list of media devices has changed:\",N),Y(N),M.emit(g.a.DEVICE_LIST_CHANGED,t))})};v.a.supportsDeviceChangeEvent()?navigator.mediaDevices.addEventListener(\"devicechange\",n):L=window.setInterval(n,3e3)})}},{key:\"_initPCConstraints\",value:function(e){v.a.isFirefox()?this.pcConstraints={}:(v.a.isChromiumBased()||v.a.isReactNative())&&(this.pcConstraints={optional:[{googHighStartBitrate:0},{googPayloadPadding:!0},{googScreencastMinBitrate:400},{googCpuOveruseDetection:!0},{googCpuOveruseEncodeUsage:!0},{googCpuUnderuseThreshold:55},{googCpuOveruseThreshold:85}]},e.useIPv6&&this.pcConstraints.optional.push({googIPv6:!0}),this.p2pPcConstraints=JSON.parse(JSON.stringify(this.pcConstraints)),e.disableSuspendVideo||this.pcConstraints.optional.push({googSuspendBelowMinBitrate:!0}),this.p2pPcConstraints.optional.push({googSuspendBelowMinBitrate:!0})),this.p2pPcConstraints=this.p2pPcConstraints||this.pcConstraints}},{key:\"getUserMediaWithConstraints\",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=z(e,t);return D.info(\"Get media constraints\",n),new Promise(function(t,r){navigator.mediaDevices.getUserMedia(n).then(function(n){D.log(\"onUserMediaSuccess\"),Q(e,n),t(n)}).catch(function(t){D.warn(\"Failed to get access to local media. \"+\" \".concat(t,\" \").concat(n,\" \")),Q(e,void 0),r(new d.a(t,n,e))})})}},{key:\"_newGetUserMediaWithConstraints\",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return new Promise(function(n,r){navigator.mediaDevices.getUserMedia(t).then(function(t){D.log(\"onUserMediaSuccess\"),Q(e,t),n(t)}).catch(function(n){D.warn(\"Failed to get access to local media. \"+\" \".concat(n,\" \").concat(t,\" \")),Q(e,void 0),r(new d.a(n,t,e))})})}},{key:\"_newGetDesktopMedia\",value:function(e){var t=this;return S.a.isSupported()&&v.a.supportsVideo()?new Promise(function(n,r){S.a.obtainStream(t._parseDesktopSharingOptions(e),function(e){n(e)},function(e){r(e)})}):Promise.reject(new Error(\"Desktop sharing is not supported!\"))}},{key:\"obtainAudioAndVideoPermissions\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return e.devices=e.devices||x.concat(),e.resolution=e.resolution||720,e.devices.includes(\"desktop\")&&!S.a.isSupported()?Promise.reject(new Error(\"Desktop sharing is not supported!\")):(v.a.supportsMediaStreamConstructor()?this._getAudioAndVideoStreams(e):this._getAudioAndVideoStreamsSeparately(e)).then(function(t){return function(e,t){var n,r,i,o=[];if(e){var a=e.audioVideo;if(a){var s=a.getAudioTracks();if(s.length){n=new MediaStream;for(var c=0;c<s.length;c++)n.addTrack(s[c])}var u=a.getVideoTracks();if(u.length){i=new MediaStream;for(var l=0;l<u.length;l++)i.addTrack(u[l])}}else n=e.audio,i=e.video;r=e.desktop}if(r){var d=r,p=d.stream,f=d.sourceId,m=d.sourceType;o.push({stream:p,sourceId:f,sourceType:m,track:p.getVideoTracks()[0],mediaType:h.b,videoType:C.a.DESKTOP})}return n&&o.push({stream:n,track:n.getAudioTracks()[0],mediaType:h.a,videoType:null}),i&&o.push({stream:i,track:i.getVideoTracks()[0],mediaType:h.b,videoType:C.a.CAMERA,resolution:t}),o}(t,e.resolution)})}},{key:\"_getAudioAndVideoStreams\",value:function(e){var t=this,n=e.devices.includes(\"desktop\");return e.devices=e.devices.filter(function(e){return\"desktop\"!==e}),(e.devices.length?this.getUserMediaWithConstraints(e.devices,e):Promise.resolve(null)).then(function(n){var r=t._getMissingTracks(e.devices,n);return r.length?(t.stopMediaStream(n),t.getUserMediaWithConstraints(r,e).then(function(){return Promise.reject(new d.a({name:\"UnknownError\"},z(e.devices,e),r))})):n}).then(function(r){if(!n)return{audioVideo:r};if(e.desktopSharingSourceDevice)throw t.stopMediaStream(r),new Error(\"Using a camera as screenshare source isnot supported on this browser.\");return new Promise(function(n,i){S.a.obtainStream(t._parseDesktopSharingOptions(e),function(e){return n({audioVideo:r,desktop:e})},function(e){r&&t.stopMediaStream(r),i(e)})})})}},{key:\"_getMissingTracks\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1?arguments[1]:void 0,n=[],r=e.includes(\"audio\"),i=t&&t.getAudioTracks().length>0;r&&!i&&n.push(\"audio\");var o=e.includes(\"video\"),a=t&&t.getVideoTracks().length>0;return o&&!a&&n.push(\"video\"),n}},{key:\"_getAudioAndVideoStreamsSeparately\",value:function(e){var t=this;return new Promise(function(n,r){!function e(t){if(!t.options.devices||0===t.options.devices.length)return t.successCallback(t.streams||{});var n=t.options.devices.splice(0,1);t.deviceGUM[n](t.options).then(function(r){t.streams=t.streams||{},t.streams[n]=r,e(t)},function(e){Object.keys(t.streams).forEach(function(e){return ee.stopMediaStream(t.streams[e])}),D.error(\"failed to obtain \".concat(n,\" stream - stop\"),e),t.errorCallback(e)})}({options:e,streams:{},successCallback:n,errorCallback:r,deviceGUM:{audio:function(){for(var e=arguments.length,n=new Array(e),r=0;r<e;r++)n[r]=arguments[r];return t.getUserMediaWithConstraints.apply(t,[[\"audio\"]].concat(n))},video:function(){for(var e=arguments.length,n=new Array(e),r=0;r<e;r++)n[r]=arguments[r];return t.getUserMediaWithConstraints.apply(t,[[\"video\"]].concat(n))},desktop:function(){for(var n=arguments.length,r=new Array(n),i=0;i<n;i++)r[i]=arguments[i];return S.a.obtainStream.apply(S.a,[t._parseDesktopSharingOptions(e)].concat(r))}}})})}},{key:\"_parseDesktopSharingOptions\",value:function(e){return I({},e.desktopSharingExtensionExternalInstallation,{desktopSharingSources:e.desktopSharingSources,gumOptions:{frameRate:e.desktopSharingFrameRate},trackOptions:X(e)})}},{key:\"newObtainAudioAndVideoPermissions\",value:function(e){var t=this;D.info(\"Using the new gUM flow\");var n=[],r=function(){if(!(-1!==(e.devices||[]).indexOf(\"desktop\")))return Promise.resolve();var t=e.desktopSharingExtensionExternalInstallation,n=e.desktopSharingSourceDevice,r=e.desktopSharingSources,i=e.desktopSharingFrameRate;if(n){var o=N&&N.find(function(e){return\"videoinput\"===e.kind&&(e.deviceId===n||e.label===n)}),a=this._parseDesktopSharingOptions(e),s=a.gumOptions,c=a.trackOptions,u={video:I({},s,{deviceId:{exact:o&&o.deviceId||n}})};return this._newGetUserMediaWithConstraints([\"video\"],u).then(function(e){var t=e&&e.getTracks()[0];return(t&&t.applyConstraints?t.applyConstraints(c):Promise.resolve()).then(function(){return{sourceType:\"device\",stream:e}})})}return this._newGetDesktopMedia({desktopSharingExtensionExternalInstallation:t,desktopSharingSources:r,desktopSharingFrameRate:i})}.bind(this),i=function(){var t=(e.devices||[\"audio\",\"video\"]).filter(function(e){return\"audio\"===e||\"video\"===e&&v.a.supportsVideo()});if(!t.length)return Promise.resolve();var n=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=JSON.parse(JSON.stringify(t.constraints||j));if(e.indexOf(\"video\")>=0)if(n.video||(n.video={}),t.cameraDeviceId)n.video.deviceId=t.cameraDeviceId;else{var r=t.facingMode||o.a.USER;n.video.facingMode=r}else n.video=!1;return e.indexOf(\"audio\")>=0?(n.audio&&\"boolean\"!=typeof n.audio||(n.audio={}),n.audio.optional||(n.audio.optional=[]),n.audio.optional.push({sourceId:t.micDeviceId},{echoCancellation:!G&&!H},{googEchoCancellation:!G&&!H},{googAutoGainControl:!V&&!H},{googNoiseSuppression:!B&&!H},{googHighpassFilter:!q&&!H},{googNoiseSuppression2:!B&&!H},{googEchoCancellation2:!G&&!H},{googAutoGainControl2:!V&&!H})):n.audio=!1,e.indexOf(\"desktop\")>=0&&(n.video&&\"boolean\"!=typeof n.video||(n.video={}),n.video={mandatory:$(I({},t,{source:\"desktop\"}))}),n}(t,e);return D.info(\"Got media constraints: \",n),this._newGetUserMediaWithConstraints(t,n)}.bind(this);return r().then(function(e){if(e){var t=e.stream,r=e.sourceId,i=e.sourceType;n.push({stream:t,sourceId:r,sourceType:i,track:t.getVideoTracks()[0],videoType:C.a.DESKTOP})}}).then(i).then(function(e){if(e){var t=e.getAudioTracks();if(t.length){var r=new MediaStream(t);n.push({stream:r,track:r.getAudioTracks()[0]})}var i=e.getVideoTracks();if(i.length){var o=new MediaStream(i);n.push({stream:o,track:o.getVideoTracks()[0],videoType:C.a.CAMERA})}}}).then(function(){return n}).catch(function(e){return n.forEach(function(e){var n=e.stream;t.stopMediaStream(n)}),Promise.reject(e)})}},{key:\"isDeviceListAvailable\",value:function(){return Boolean(navigator.mediaDevices&&navigator.mediaDevices.enumerateDevices)}},{key:\"isDeviceChangeAvailable\",value:function(e){return\"output\"===e||\"audiooutput\"===e?W:v.a.isChromiumBased()||v.a.isFirefox()||v.a.isEdge()}},{key:\"stopMediaStream\",value:function(e){e.getTracks().forEach(function(e){e.stop&&e.stop()}),e.stop&&e.stop(),e.release&&e.release();var t=e.jitsiObjectURL;t&&(delete e.jitsiObjectURL,URL.revokeObjectURL(t))}},{key:\"isDesktopSharingEnabled\",value:function(){return S.a.isSupported()}},{key:\"setAudioOutputDevice\",value:function(e){return this.isDeviceChangeAvailable(\"output\")?K.setSinkId(e).then(function(){U=e,J=!0,D.log(\"Audio output device set to \".concat(e)),M.emit(g.a.AUDIO_OUTPUT_DEVICE_CHANGED,e)}):Promise.reject(new Error(\"Audio output device change is not supported\"))}},{key:\"getAudioOutputDevice\",value:function(){return U}},{key:\"getCurrentlyAvailableMediaDevices\",value:function(){return N}},{key:\"getEventDataForActiveDevice\",value:function(e){var t=[],n={deviceId:e.deviceId,kind:e.kind,label:e.label,groupId:e.groupId};return t.push(n),{deviceList:t}}},{key:\"setSuspendVideo\",value:function(e,t){e.optional||(e.optional=[]),e.optional=e.optional.filter(function(e){return!e.hasOwnProperty(\"googSuspendBelowMinBitrate\")}),t&&e.optional.push({googSuspendBelowMinBitrate:\"true\"})}}])&&w(n.prototype,r),i&&w(n,i),t}());function te(e){return function(t,n){var r=e.apply(ee,arguments);return n&&ee.isDeviceChangeAvailable(\"output\")&&n.getAudioTracks&&n.getAudioTracks().length&&J&&t.setSinkId(ee.getAudioOutputDevice()).catch(function(e){var n=new d.a(e,null,[\"audiooutput\"]);l.a.callUnhandledRejectionHandler({promise:this,reason:n}),D.warn(\"Failed to set audio output device for the element. Default audio output device will be used instead\",t,n)}),r}}t.a=ee}).call(this,\"modules/RTC/RTCUtils.js\")},function(e,t,n){\"use strict\";n.r(t),n.d(t,\"CHROME_EXTENSION_GENERIC_ERROR\",function(){return r}),n.d(t,\"CHROME_EXTENSION_INSTALLATION_ERROR\",function(){return i}),n.d(t,\"CHROME_EXTENSION_USER_GESTURE_REQUIRED\",function(){return o}),n.d(t,\"CHROME_EXTENSION_USER_CANCELED\",function(){return a}),n.d(t,\"CONSTRAINT_FAILED\",function(){return s}),n.d(t,\"ELECTRON_DESKTOP_PICKER_ERROR\",function(){return c}),n.d(t,\"ELECTRON_DESKTOP_PICKER_NOT_FOUND\",function(){return u}),n.d(t,\"FIREFOX_EXTENSION_NEEDED\",function(){return l}),n.d(t,\"GENERAL\",function(){return d}),n.d(t,\"NOT_FOUND\",function(){return p}),n.d(t,\"PERMISSION_DENIED\",function(){return h}),n.d(t,\"TRACK_IS_DISPOSED\",function(){return f}),n.d(t,\"TRACK_NO_STREAM_FOUND\",function(){return m}),n.d(t,\"UNSUPPORTED_RESOLUTION\",function(){return v}),n.d(t,\"NO_DATA_FROM_SOURCE\",function(){return y});var r=\"gum.chrome_extension_generic_error\",i=\"gum.chrome_extension_installation_error\",o=\"gum.chrome_extension_user_gesture_required\",a=\"gum.chrome_extension_user_canceled\",s=\"gum.constraint_failed\",c=\"gum.electron_desktop_picker_error\",u=\"gum.electron_desktop_picker_not_found\",l=\"gum.firefox_extension_needed\",d=\"gum.general\",p=\"gum.not_found\",h=\"gum.permission_denied\",f=\"track.track_is_disposed\",m=\"track.no_stream_found\",v=\"gum.unsupported_resolution\",y=\"track.no_data_from_source\"},function(e,t,n){\"use strict\";(function(e){n.d(t,\"a\",function(){return N});var r=n(4),i=n(98),o=n(10),a=n.n(o),s=n(2),c=n(61),u=n(15),l=n(12),d=n(24),p=n(58),h=n(9),f=n(3),m=n(7),v=n.n(m),y=n(11),g=n(6),_=n(100),S=n(14),b=n.n(S);function E(e){return(E=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function T(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function C(e){return(C=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function R(e,t){return(R=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function w(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}function A(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var k=Object(r.getLogger)(e),O=0,I=0;function P(e,t){var n=[],r=null;return e.forEach(function(e){e.mediaType===h.a?r=t.micDeviceId:e.videoType===b.a.CAMERA&&(r=t.cameraDeviceId),I=Object(p.a)(I);var i=new c.a(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);\"function\"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),r.forEach(function(t){A(e,t,n[t])})}return e}({},e,{deviceId:r,facingMode:t.facingMode,rtcId:I}));n.push(i)}),n}function D(){return(arguments.length>0&&void 0!==arguments[0]?arguments[0]:[]).map(function(e){var t=e.sourceId,n=e.sourceType,r=e.stream,i=e.track,o=e.videoType,a=i.getSettings(),s=a.deviceId,u=a.facingMode;return I=Object(p.a)(I),new c.a({deviceId:s,facingMode:u,mediaType:i.kind,rtcId:I,sourceId:t,sourceType:n,stream:r,track:i,videoType:o||null})})}var N=function(e){function t(e){var n,r,i,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t),r=this,(n=!(i=C(t).call(this))||\"object\"!==E(i)&&\"function\"!=typeof i?w(r):i).conference=e,n.peerConnections=new Map,n.localTracks=[],n.options=o,n._channel=null,n._channelOpen=!1,n._lastN=-1,n._lastNEndpoints=null,n._maxFrameHeight=void 0,n._pinnedEndpoint=null,n._selectedEndpoints=[],n._lastNChangeListener=n._onLastNChanged.bind(w(w(n))),n._onDeviceListChanged=n._onDeviceListChanged.bind(w(w(n))),n._updateAudioOutputForAudioTracks=n._updateAudioOutputForAudioTracks.bind(w(w(n))),y.a.isDeviceChangeAvailable(\"output\")&&(y.a.addListener(v.a.AUDIO_OUTPUT_DEVICE_CHANGED,n._updateAudioOutputForAudioTracks),y.a.addListener(v.a.DEVICE_LIST_CHANGED,n._onDeviceListChanged)),n}var n,r,o;return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&R(e,t)}(t,d[\"a\"]),n=t,o=[{key:\"newCreateLocalTracks\",value:function(e){return D(e)}},{key:\"obtainAudioAndVideoPermissions\",value:function(e){var t=f.a.usesNewGumFlow();return(t?y.a.newObtainAudioAndVideoPermissions(e):y.a.obtainAudioAndVideoPermissions(e)).then(function(n){var r=t?D(n):P(n,e);return r.some(function(e){return!e._isReceivingData()})?Promise.reject(new u.a(l.NO_DATA_FROM_SOURCE)):r})}},{key:\"addListener\",value:function(e,t){y.a.addListener(e,t)}},{key:\"removeListener\",value:function(e,t){y.a.removeListener(e,t)}},{key:\"init\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return this.options=e,y.a.init(this.options)}},{key:\"getPCConstraints\",value:function(e){var t=e?y.a.p2pPcConstraints:y.a.pcConstraints;return t?JSON.parse(JSON.stringify(t)):{}}},{key:\"attachMediaStream\",value:function(e,t){return y.a.attachMediaStream(e,t)}},{key:\"getStreamID\",value:function(e){return y.a.getStreamID(e)}},{key:\"getTrackID\",value:function(e){return y.a.getTrackID(e)}},{key:\"isDeviceListAvailable\",value:function(){return y.a.isDeviceListAvailable()}},{key:\"isDeviceChangeAvailable\",value:function(e){return y.a.isDeviceChangeAvailable(e)}},{key:\"isWebRtcSupported\",value:function(){return f.a.isSupported()}},{key:\"getAudioOutputDevice\",value:function(){return y.a.getAudioOutputDevice()}},{key:\"getCurrentlyAvailableMediaDevices\",value:function(){return y.a.getCurrentlyAvailableMediaDevices()}},{key:\"getEventDataForActiveDevice\",value:function(e){return y.a.getEventDataForActiveDevice(e)}},{key:\"setAudioOutputDevice\",value:function(e){return y.a.setAudioOutputDevice(e)}},{key:\"isUserStream\",value:function(e){return t.isUserStreamById(y.a.getStreamID(e))}},{key:\"isUserStreamById\",value:function(e){return e&&\"mixedmslabel\"!==e&&\"default\"!==e}},{key:\"enumerateDevices\",value:function(e){y.a.enumerateDevices(e)}},{key:\"stopMediaStream\",value:function(e){y.a.stopMediaStream(e)}},{key:\"isDesktopSharingEnabled\",value:function(){return y.a.isDesktopSharingEnabled()}}],(r=[{key:\"destroy\",value:function(){y.a.removeListener(v.a.AUDIO_OUTPUT_DEVICE_CHANGED,this._updateAudioOutputForAudioTracks),y.a.removeListener(v.a.DEVICE_LIST_CHANGED,this._onDeviceListChanged),this.removeListener(v.a.LASTN_ENDPOINT_CHANGED,this._lastNChangeListener),this._channelOpenListener&&this.removeListener(v.a.DATA_CHANNEL_OPEN,this._channelOpenListener)}},{key:\"initializeBridgeChannel\",value:function(e,t){var n=this;this._channel=new i.a(e,t,this.eventEmitter),this._channelOpenListener=function(){n._channelOpen=!0;try{n._channel.sendPinnedEndpointMessage(n._pinnedEndpoint),n._channel.sendSelectedEndpointsMessage(n._selectedEndpoints),void 0!==n._maxFrameHeight&&n._channel.sendReceiverVideoConstraintMessage(n._maxFrameHeight)}catch(e){a.a.callErrorHandler(e),k.error(\"Cannot send selected(\".concat(n._selectedEndpoint,\")\")+\"pinned(\".concat(n._pinnedEndpoint,\")\")+\"frameHeight(\".concat(n._maxFrameHeight,\") endpoint message\"),e)}n.removeListener(v.a.DATA_CHANNEL_OPEN,n._channelOpenListener),n._channelOpenListener=null,-1!==n._lastN&&n._channel.sendSetLastNMessage(n._lastN)},this.addListener(v.a.DATA_CHANNEL_OPEN,this._channelOpenListener),this.addListener(v.a.LASTN_ENDPOINT_CHANGED,this._lastNChangeListener)}},{key:\"_onDeviceListChanged\",value:function(){this._updateAudioOutputForAudioTracks(y.a.getAudioOutputDevice())}},{key:\"_onLastNChanged\",value:function(){var e,t,n=this,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],i=this._lastNEndpoints||[];this._lastNEndpoints=r,e=i.filter(function(e){return!n.isInLastN(e)}),t=r.filter(function(e){return-1===i.indexOf(e)}),this.conference.eventEmitter.emit(s.LAST_N_ENDPOINTS_CHANGED,e,t)}},{key:\"onCallEnded\",value:function(){this._channel&&(this._channel&&\"websocket\"===this._channel.mode&&this._channel.close(),this._channel=null,this._channelOpen=!1)}},{key:\"setReceiverVideoConstraint\",value:function(e){this._maxFrameHeight=e,this._channel&&this._channelOpen&&this._channel.sendReceiverVideoConstraintMessage(e)}},{key:\"selectEndpoints\",value:function(e){this._selectedEndpoints=e,this._channel&&this._channelOpen&&this._channel.sendSelectedEndpointsMessage(e)}},{key:\"pinEndpoint\",value:function(e){this._pinnedEndpoint=e,this._channel&&this._channelOpen&&this._channel.sendPinnedEndpointMessage(e)}},{key:\"createPeerConnection\",value:function(e,n,r,i){var o=t.getPCConstraints(r);void 0!==i.abtestSuspendVideo&&(y.a.setSuspendVideo(o,i.abtestSuspendVideo),g.a.analytics.addPermanentProperties({abtestSuspendVideo:i.abtestSuspendVideo})),f.a.supportsSdpSemantics()&&(n.sdpSemantics=\"plan-b\"),O=Object(p.a)(O);var a=new _.a(this,O,e,n,o,r,i);return this.peerConnections.set(a.id,a),a}},{key:\"_removePeerConnection\",value:function(e){var t=e.id;return!!this.peerConnections.has(t)&&(this.peerConnections.delete(t),!0)}},{key:\"addLocalTrack\",value:function(e){if(!e)throw new Error(\"track must not be null nor undefined\");this.localTracks.push(e),e.conference=this.conference}},{key:\"getLastN\",value:function(){return this._lastN}},{key:\"getLocalVideoTrack\",value:function(){var e=this.getLocalTracks(h.b);return e.length?e[0]:void 0}},{key:\"getLocalAudioTrack\",value:function(){var e=this.getLocalTracks(h.a);return e.length?e[0]:void 0}},{key:\"getLocalTracks\",value:function(e){var t=this.localTracks.slice();return void 0!==e&&(t=t.filter(function(t){return t.getType()===e})),t}},{key:\"getRemoteTracks\",value:function(e){var t=[],n=!0,r=!1,i=void 0;try{for(var o,a=this.peerConnections.values()[Symbol.iterator]();!(n=(o=a.next()).done);n=!0){var s=o.value.getRemoteTracks(void 0,e);s&&(t=t.concat(s))}}catch(e){r=!0,i=e}finally{try{n||null==a.return||a.return()}finally{if(r)throw i}}return t}},{key:\"setAudioMute\",value:function(e){var t=[];return this.getLocalTracks(h.a).forEach(function(n){t.push(e?n.mute():n.unmute())}),Promise.all(t)}},{key:\"removeLocalTrack\",value:function(e){var t=this.localTracks.indexOf(e);-1!==t&&this.localTracks.splice(t,1)}},{key:\"removeRemoteTracks\",value:function(e){var t=[],n=!0,r=!1,i=void 0;try{for(var o,a=this.peerConnections.values()[Symbol.iterator]();!(n=(o=a.next()).done);n=!0){var s=o.value.removeRemoteTracks(e);t=t.concat(s)}}catch(e){r=!0,i=e}finally{try{n||null==a.return||a.return()}finally{if(r)throw i}}return k.debug(\"Removed remote tracks for \".concat(e)+\" count: \".concat(t.length)),t}},{key:\"closeBridgeChannel\",value:function(){this._channel&&(this._channel.close(),this._channelOpen=!1,this.removeListener(v.a.LASTN_ENDPOINT_CHANGED,this._lastNChangeListener))}},{key:\"setAudioLevel\",value:function(e,t,n,r){var i=e.getTrackBySSRC(t);i&&(i.isAudioTrack()?(i.isLocal()!==r&&k.error(\"\".concat(i,\" was expected to \").concat(r?\"be\":\"not be\",\" local\")),i.setAudioLevel(n,e)):k.warn(\"Received audio level for non-audio track: \".concat(t)))}},{key:\"sendChannelMessage\",value:function(e,t){if(!this._channel)throw new Error(\"Channel support is disabled!\");this._channel.sendMessage(e,t)}},{key:\"setLastN\",value:function(e){this._lastN!==e&&(this._lastN=e,this._channel&&this._channelOpen&&this._channel.sendSetLastNMessage(e),this.eventEmitter.emit(v.a.LASTN_VALUE_CHANGED,e))}},{key:\"isInLastN\",value:function(e){return!this._lastNEndpoints||this._lastNEndpoints.indexOf(e)>-1}},{key:\"_updateAudioOutputForAudioTracks\",value:function(e){var t=this.getRemoteTracks(h.a),n=!0,r=!1,i=void 0;try{for(var o,a=t[Symbol.iterator]();!(n=(o=a.next()).done);n=!0){o.value.setAudioOutput(e)}}catch(e){r=!0,i=e}finally{try{n||null==a.return||a.return()}finally{if(r)throw i}}}}])&&T(n.prototype,r),o&&T(n,o),t}()}).call(this,\"modules/RTC/RTC.js\")},function(e,t){e.exports={CAMERA:\"camera\",DESKTOP:\"desktop\"}},function(e,t,n){\"use strict\";var r=n(12);function i(e){return(i=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}var o={};function a(e,t,n){if(\"object\"===i(e)&&void 0!==e.name)switch(this.gum={error:e,constraints:t,devices:n&&Array.isArray(n)?n.slice(0):void 0},e.name){case\"NotAllowedError\":case\"PermissionDeniedError\":case\"SecurityError\":this.name=r.PERMISSION_DENIED,this.message=o[this.name]+(this.gum.devices||[]).join(\", \");break;case\"DevicesNotFoundError\":case\"NotFoundError\":this.name=r.NOT_FOUND,this.message=o[this.name]+(this.gum.devices||[]).join(\", \");break;case\"ConstraintNotSatisfiedError\":case\"OverconstrainedError\":var a=e.constraintName||e.constraint;t&&t.video&&(!n||n.indexOf(\"video\")>-1)&&(\"minWidth\"===a||\"maxWidth\"===a||\"minHeight\"===a||\"maxHeight\"===a||\"width\"===a||\"height\"===a||\"deviceId\"===a)?(this.name=r.UNSUPPORTED_RESOLUTION,this.message=o[this.name]+function(e,t){if(t&&t.video&&t.video.mandatory)switch(e){case\"width\":return t.video.mandatory.minWidth;case\"height\":return t.video.mandatory.minHeight;default:return t.video.mandatory[e]||\"\"}return\"\"}(a,t)):(this.name=r.CONSTRAINT_FAILED,this.message=o[this.name]+e.constraintName);break;default:this.name=r.GENERAL,this.message=e.message||o[this.name]}else{if(\"string\"!=typeof e)throw new Error(\"Invalid arguments\");o[e]?(this.name=e,this.message=t||o[e]):this.message=e}this.stack=e.stack||(new Error).stack}o[r.UNSUPPORTED_RESOLUTION]=\"Video resolution is not supported: \",o[r.CHROME_EXTENSION_INSTALLATION_ERROR]=\"Failed to install Chrome extension\",o[r.CHROME_EXTENSION_USER_GESTURE_REQUIRED]=\"Failed to install Chrome extension - installations can only be initiated by a user gesture.\",o[r.CHROME_EXTENSION_USER_CANCELED]=\"User canceled Chrome's screen sharing prompt\",o[r.CHROME_EXTENSION_GENERIC_ERROR]=\"Unknown error from Chrome extension\",o[r.ELECTRON_DESKTOP_PICKER_ERROR]=\"Unkown error from desktop picker\",o[r.ELECTRON_DESKTOP_PICKER_NOT_FOUND]=\"Failed to detect desktop picker\",o[r.GENERAL]=\"Generic getUserMedia error\",o[r.PERMISSION_DENIED]=\"User denied permission to use device(s): \",o[r.NOT_FOUND]=\"Requested device(s) was/were not found: \",o[r.CONSTRAINT_FAILED]=\"Constraint could not be satisfied: \",o[r.TRACK_IS_DISPOSED]=\"Track has been already disposed\",o[r.TRACK_NO_STREAM_FOUND]=\"Track does not have an associated Media Stream\",o[r.NO_DATA_FROM_SOURCE]=\"The track has stopped receiving data from it's source\",a.prototype=Object.create(Error.prototype),a.prototype.constructor=a,t.a=a},function(e,t,n){var r=n(133),i=n(134);t.write=i,t.parse=r.parse,t.parseFmtpConfig=r.parseFmtpConfig,t.parseParams=r.parseParams,t.parsePayloads=r.parsePayloads,t.parseRemoteCandidates=r.parseRemoteCandidates,t.parseImageAttributes=r.parseImageAttributes,t.parseSimulcastStreamList=r.parseSimulcastStreamList},function(e,t,n){\"use strict\";n.r(t),n.d(t,\"LOCAL_TRACK_STOPPED\",function(){return r}),n.d(t,\"TRACK_AUDIO_LEVEL_CHANGED\",function(){return i}),n.d(t,\"TRACK_AUDIO_OUTPUT_CHANGED\",function(){return o}),n.d(t,\"TRACK_MUTE_CHANGED\",function(){return a}),n.d(t,\"TRACK_VIDEOTYPE_CHANGED\",function(){return s}),n.d(t,\"NO_DATA_FROM_SOURCE\",function(){return c});var r=\"track.stopped\",i=\"track.audioLevelsChanged\",o=\"track.audioOutputChanged\",a=\"track.trackMuteChanged\",s=\"track.videoTypeChanged\",c=\"track.no_data_from_source\"},function(e,t,n){\"use strict\";n.d(t,\"a\",function(){return o});var r=n(5);function i(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=[],r=!0,i=!1,o=void 0;try{for(var a,s=e[Symbol.iterator]();!(r=(a=s.next()).done)&&(n.push(a.value),!t||n.length!==t);r=!0);}catch(e){i=!0,o=e}finally{try{r||null==s.return||s.return()}finally{if(i)throw o}}return n}(e,t)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance\")}()}function o(e){for(var t=e.split(\"\\r\\nm=\"),n=1,r=t.length;n<r;n++){var i=\"m=\".concat(t[n]);n!==r-1&&(i+=\"\\r\\n\"),t[n]=i}var o=\"\".concat(t.shift(),\"\\r\\n\");this.media=t,this.raw=o+t.join(\"\"),this.session=o}o.prototype.failICE=!1,o.prototype.removeTcpCandidates=!1,o.prototype.removeUdpCandidates=!1,o.prototype.getMediaSsrcMap=function(){for(var e,t=this,n={},i=function(i){e=r.a.findLines(t.media[i],\"a=ssrc:\");var o={mediaindex:i,mid:r.a.parseMID(r.a.findLine(t.media[i],\"a=mid:\")),ssrcs:{},ssrcGroups:[]};n[i]=o,e.forEach(function(e){var t=e.substring(7).split(\" \")[0];o.ssrcs[t]||(o.ssrcs[t]={ssrc:t,lines:[]}),o.ssrcs[t].lines.push(e)}),(e=r.a.findLines(t.media[i],\"a=ssrc-group:\")).forEach(function(e){var t=e.indexOf(\" \"),n=e.substr(0,t).substr(13),r=e.substr(14+n.length).split(\" \");r.length&&o.ssrcGroups.push({semantics:n,ssrcs:r})})},o=0;o<t.media.length;o++)i(o);return n},o.prototype.containsSSRC=function(e){var t=this.getMediaSsrcMap(),n=!1;return Object.keys(t).forEach(function(r){n||t[r].ssrcs[e]&&(n=!0)}),n},o.prototype.mangle=function(){var e,t,n,i,o,a;for(e=0;e<this.media.length;e++)if((n=this.media[e].split(\"\\r\\n\")).pop(),\"audio\"===(i=r.a.parseMLine(n.shift())).media){for(o=\"\",i.fmt.length=0,t=0;t<n.length;t++){if(\"a=rtpmap:\"===n[t].substr(0,9)){if(\"CN\"===(a=r.a.parseRTPMap(n[t])).name||\"ISAC\"===a.name)continue;i.fmt.push(a.id)}o+=\"\".concat(n[t],\"\\r\\n\")}this.media[e]=\"\".concat(r.a.buildMLine(i),\"\\r\\n\").concat(o)}this.raw=this.session+this.media.join(\"\")},o.prototype.removeSessionLines=function(e){var t=this,n=r.a.findLines(this.session,e);return n.forEach(function(e){t.session=t.session.replace(\"\".concat(e,\"\\r\\n\"),\"\")}),this.raw=this.session+this.media.join(\"\"),n},o.prototype.removeMediaLines=function(e,t){var n=this,i=r.a.findLines(this.media[e],t);return i.forEach(function(t){n.media[e]=n.media[e].replace(\"\".concat(t,\"\\r\\n\"),\"\")}),this.raw=this.session+this.media.join(\"\"),i},o.prototype.toJingle=function(e,t){var n,o,a,s,c,u,l,d;if((s=r.a.findLines(this.session,\"a=group:\")).length)for(n=0;n<s.length;n++){var p=(d=s[n].split(\" \")).shift().substr(8);for(e.c(\"group\",{xmlns:\"urn:xmpp:jingle:apps:grouping:0\",semantics:p}),o=0;o<d.length;o++)e.c(\"content\",{name:d[o]}).up();e.up()}for(n=0;n<this.media.length;n++)if(\"audio\"===(c=r.a.parseMLine(this.media[n].split(\"\\r\\n\")[0])).media||\"video\"===c.media||\"application\"===c.media){var h=r.a.findLine(this.media[n],\"a=ssrc:\");l=!!h&&h.substring(7).split(\" \")[0],e.c(\"content\",{creator:t,name:c.media});var f=r.a.findLine(this.media[n],\"a=mid:\");if(f){var m=r.a.parseMID(f);e.attrs({name:m})}if(r.a.findLine(this.media[n],\"a=rtpmap:\").length){for(e.c(\"description\",{xmlns:\"urn:xmpp:jingle:apps:rtp:1\",media:c.media}),l&&e.attrs({ssrc:l}),o=0;o<c.fmt.length;o++){u=r.a.findLine(this.media[n],\"a=rtpmap:\".concat(c.fmt[o])),e.c(\"payload-type\",r.a.parseRTPMap(u));var v=r.a.findLine(this.media[n],\"a=fmtp:\".concat(c.fmt[o]));if(v)for(d=r.a.parseFmtp(v),a=0;a<d.length;a++)e.c(\"parameter\",d[a]).up();this.rtcpFbToJingle(n,e,c.fmt[o]),e.up()}var y=r.a.findLines(this.media[n],\"a=crypto:\",this.session);if(y.length&&(e.c(\"encryption\",{required:1}),y.forEach(function(t){return e.c(\"crypto\",r.a.parseCrypto(t)).up()}),e.up()),l){var g=r.a.parseSSRC(this.media[n]),_=!0,S=!1,b=void 0;try{for(var E,T=g[Symbol.iterator]();!(_=(E=T.next()).done);_=!0){var C=i(E.value,2),R=C[0],w=C[1];e.c(\"source\",{ssrc:R,xmlns:\"urn:xmpp:jingle:apps:rtp:ssma:0\"}),w.forEach(function(t){var n=t.indexOf(\" \"),i=t.substr(n+1);if(e.c(\"parameter\"),-1===i.indexOf(\":\"))e.attrs({name:i});else{var o=i.split(\":\",2)[0];e.attrs({name:o});var a=i.split(\":\",2)[1];a=r.a.filterSpecialChars(a),e.attrs({value:a})}e.up()}),e.up()}}catch(e){S=!0,b=e}finally{try{_||null==T.return||T.return()}finally{if(S)throw b}}r.a.findLines(this.media[n],\"a=ssrc-group:\").forEach(function(t){var n=t.indexOf(\" \"),r=t.substr(0,n).substr(13),i=t.substr(14+r.length).split(\" \");i.length&&(e.c(\"ssrc-group\",{semantics:r,xmlns:\"urn:xmpp:jingle:apps:rtp:ssma:0\"}),i.forEach(function(t){return e.c(\"source\",{ssrc:t}).up()}),e.up())})}var A=r.a.findLines(this.media[n],\"a=rid\");if(A.length){var k=A.map(function(e){return e.split(\":\")[1]}).map(function(e){return e.split(\" \")[0]});k.forEach(function(t){e.c(\"source\",{rid:t,xmlns:\"urn:xmpp:jingle:apps:rtp:ssma:0\"}),e.up()}),r.a.findLine(this.media[n],\"a=simulcast\")&&(e.c(\"rid-group\",{semantics:\"SIM\",xmlns:\"urn:xmpp:jingle:apps:rtp:ssma:0\"}),k.forEach(function(t){e.c(\"source\",{rid:t}).up()}),e.up())}if(r.a.findLine(this.media[n],\"a=rtcp-mux\")&&e.c(\"rtcp-mux\").up(),this.rtcpFbToJingle(n,e,\"*\"),(s=r.a.findLines(this.media[n],\"a=extmap:\")).length)for(o=0;o<s.length;o++){if(d=r.a.parseExtmap(s[o]),e.c(\"rtp-hdrext\",{xmlns:\"urn:xmpp:jingle:apps:rtp:rtp-hdrext:0\",uri:d.uri,id:d.value}),d.hasOwnProperty(\"direction\"))switch(d.direction){case\"sendonly\":e.attrs({senders:\"responder\"});break;case\"recvonly\":e.attrs({senders:\"initiator\"});break;case\"sendrecv\":e.attrs({senders:\"both\"});break;case\"inactive\":e.attrs({senders:\"none\"})}e.up()}e.up()}this.transportToJingle(n,e);var O=this.media[n];r.a.findLine(O,\"a=sendrecv\",this.session)?e.attrs({senders:\"both\"}):r.a.findLine(O,\"a=sendonly\",this.session)?e.attrs({senders:\"initiator\"}):r.a.findLine(O,\"a=recvonly\",this.session)?e.attrs({senders:\"responder\"}):r.a.findLine(O,\"a=inactive\",this.session)&&e.attrs({senders:\"none\"}),\"0\"===c.port&&e.attrs({senders:\"rejected\"}),e.up()}return e.up(),e},o.prototype.transportToJingle=function(e,t){var n,i=this;t.c(\"transport\");var o=r.a.findLine(this.media[e],\"a=sctpmap:\",i.session);if(o){var a=r.a.parseSCTPMap(o);t.c(\"sctpmap\",{xmlns:\"urn:xmpp:jingle:transports:dtls-sctp:1\",number:a[0],protocol:a[1]}),a.length>2&&t.attrs({streams:a[2]}),t.up()}if(r.a.findLines(this.media[e],\"a=fingerprint:\",this.session).forEach(function(o){(n=r.a.parseFingerprint(o)).xmlns=\"urn:xmpp:jingle:apps:dtls:0\",t.c(\"fingerprint\").t(n.fingerprint),delete n.fingerprint,(o=r.a.findLine(i.media[e],\"a=setup:\",i.session))&&(n.setup=o.substr(8)),t.attrs(n),t.up()}),n=r.a.iceparams(this.media[e],this.session)){n.xmlns=\"urn:xmpp:jingle:transports:ice-udp:1\",t.attrs(n);var s=r.a.findLines(this.media[e],\"a=candidate:\",this.session);s.length&&s.forEach(function(e){var n=r.a.candidateToJingle(e);i.failICE&&(n.ip=\"1.1.1.1\");var o=n&&\"string\"==typeof n.protocol?n.protocol.toLowerCase():\"\";i.removeTcpCandidates&&(\"tcp\"===o||\"ssltcp\"===o)||i.removeUdpCandidates&&\"udp\"===o||t.c(\"candidate\",n).up()})}t.up()},o.prototype.rtcpFbToJingle=function(e,t,n){r.a.findLines(this.media[e],\"a=rtcp-fb:\".concat(n)).forEach(function(e){var n=r.a.parseRTCPFB(e);\"trr-int\"===n.type?(t.c(\"rtcp-fb-trr-int\",{xmlns:\"urn:xmpp:jingle:apps:rtp:rtcp-fb:0\",value:n.params[0]}),t.up()):(t.c(\"rtcp-fb\",{xmlns:\"urn:xmpp:jingle:apps:rtp:rtcp-fb:0\",type:n.type}),n.params.length>0&&t.attrs({subtype:n.params[0]}),t.up())})},o.prototype.rtcpFbFromJingle=function(e,t){var n=\"\",r=e.find('>rtcp-fb-trr-int[xmlns=\"urn:xmpp:jingle:apps:rtp:rtcp-fb:0\"]');return r.length&&(n+=\"a=rtcp-fb:* trr-int \",r.attr(\"value\")?n+=r.attr(\"value\"):n+=\"0\",n+=\"\\r\\n\"),(r=e.find('>rtcp-fb[xmlns=\"urn:xmpp:jingle:apps:rtp:rtcp-fb:0\"]')).each(function(){n+=\"a=rtcp-fb:\".concat(t,\" \").concat($(this).attr(\"type\")),$(this).attr(\"subtype\")&&(n+=\" \".concat($(this).attr(\"subtype\"))),n+=\"\\r\\n\"}),n},o.prototype.fromJingle=function(e){var t=this;this.raw=\"v=0\\r\\no=- 1923518516 2 IN IP4 0.0.0.0\\r\\ns=-\\r\\nt=0 0\\r\\n\";var n=$(e).find('>group[xmlns=\"urn:xmpp:jingle:apps:grouping:0\"]');n.length&&n.each(function(e,n){var r=$(n).find(\">content\").map(function(e,t){return t.getAttribute(\"name\")}).get();r.length>0&&(t.raw+=\"a=group:\".concat(n.getAttribute(\"semantics\")||n.getAttribute(\"type\"),\" \").concat(r.join(\" \"),\"\\r\\n\"))}),this.session=this.raw,e.find(\">content\").each(function(){var e=t.jingle2media($(this));t.media.push(e)}),this.raw=this.session+this.media.join(\"\")},o.prototype.jingle2media=function(e){var t=e.find(\"description\"),n=\"\",i=this,o=e.find('>transport>sctpmap[xmlns=\"urn:xmpp:jingle:transports:dtls-sctp:1\"]'),a={media:t.attr(\"media\"),port:\"1\"};if(\"rejected\"===e.attr(\"senders\")&&(a.port=\"0\"),e.find(\">transport>fingerprint\").length||t.find(\"encryption\").length?a.proto=o.length?\"DTLS/SCTP\":\"RTP/SAVPF\":a.proto=\"RTP/AVPF\",o.length){n+=\"m=application \".concat(a.port,\" DTLS/SCTP \").concat(o.attr(\"number\"),\"\\r\\n\"),n+=\"a=sctpmap:\".concat(o.attr(\"number\"),\" \").concat(o.attr(\"protocol\"));var s=o.attr(\"streams\");n+=s?\" \".concat(s,\"\\r\\n\"):\"\\r\\n\"}else a.fmt=t.find(\"payload-type\").map(function(){return this.getAttribute(\"id\")}).get(),n+=\"\".concat(r.a.buildMLine(a),\"\\r\\n\");switch(n+=\"c=IN IP4 0.0.0.0\\r\\n\",o.length||(n+=\"a=rtcp:1 IN IP4 0.0.0.0\\r\\n\"),(a=e.find('>transport[xmlns=\"urn:xmpp:jingle:transports:ice-udp:1\"]')).length&&(a.attr(\"ufrag\")&&(n+=\"\".concat(r.a.buildICEUfrag(a.attr(\"ufrag\")),\"\\r\\n\")),a.attr(\"pwd\")&&(n+=\"\".concat(r.a.buildICEPwd(a.attr(\"pwd\")),\"\\r\\n\")),a.find(\">fingerprint\").each(function(){n+=\"a=fingerprint:\".concat(this.getAttribute(\"hash\")),n+=\" \".concat($(this).text()),n+=\"\\r\\n\",this.getAttribute(\"setup\")&&(n+=\"a=setup:\".concat(this.getAttribute(\"setup\"),\"\\r\\n\"))})),e.attr(\"senders\")){case\"initiator\":n+=\"a=sendonly\\r\\n\";break;case\"responder\":n+=\"a=recvonly\\r\\n\";break;case\"none\":n+=\"a=inactive\\r\\n\";break;case\"both\":n+=\"a=sendrecv\\r\\n\"}return n+=\"a=mid:\".concat(e.attr(\"name\"),\"\\r\\n\"),t.find(\"rtcp-mux\").length&&(n+=\"a=rtcp-mux\\r\\n\"),t.find(\"encryption\").length&&t.find(\"encryption>crypto\").each(function(){n+=\"a=crypto:\".concat(this.getAttribute(\"tag\")),n+=\" \".concat(this.getAttribute(\"crypto-suite\")),n+=\" \".concat(this.getAttribute(\"key-params\")),this.getAttribute(\"session-params\")&&(n+=\" \".concat(this.getAttribute(\"session-params\"))),n+=\"\\r\\n\"}),t.find(\"payload-type\").each(function(){n+=\"\".concat(r.a.buildRTPMap(this),\"\\r\\n\"),$(this).find(\">parameter\").length&&(n+=\"a=fmtp:\".concat(this.getAttribute(\"id\"),\" \"),n+=$(this).find(\"parameter\").map(function(){var e=this.getAttribute(\"name\");return(e?\"\".concat(e,\"=\"):\"\")+this.getAttribute(\"value\")}).get().join(\"; \"),n+=\"\\r\\n\"),n+=i.rtcpFbFromJingle($(this),this.getAttribute(\"id\"))}),n+=i.rtcpFbFromJingle(t,\"*\"),(a=t.find('>rtp-hdrext[xmlns=\"urn:xmpp:jingle:apps:rtp:rtp-hdrext:0\"]')).each(function(){n+=\"a=extmap:\".concat(this.getAttribute(\"id\"),\" \").concat(this.getAttribute(\"uri\"),\"\\r\\n\")}),e.find('>transport[xmlns=\"urn:xmpp:jingle:transports:ice-udp:1\"]>candidate').each(function(){var e=this.getAttribute(\"protocol\");e=\"string\"==typeof e?e.toLowerCase():\"\",i.removeTcpCandidates&&(\"tcp\"===e||\"ssltcp\"===e)||i.removeUdpCandidates&&\"udp\"===e||(i.failICE&&this.setAttribute(\"ip\",\"1.1.1.1\"),n+=r.a.candidateFromJingle(this))}),e.find('description>ssrc-group[xmlns=\"urn:xmpp:jingle:apps:rtp:ssma:0\"]').each(function(){var e=this.getAttribute(\"semantics\"),t=$(this).find(\">source\").map(function(){return this.getAttribute(\"ssrc\")}).get();t.length&&(n+=\"a=ssrc-group:\".concat(e,\" \").concat(t.join(\" \"),\"\\r\\n\"))}),(a=e.find('description>source[xmlns=\"urn:xmpp:jingle:apps:rtp:ssma:0\"]')).each(function(){var e=this.getAttribute(\"ssrc\");$(this).find(\">parameter\").each(function(){var t=this.getAttribute(\"name\"),i=this.getAttribute(\"value\");i=r.a.filterSpecialChars(i),n+=\"a=ssrc:\".concat(e,\" \").concat(t),i&&i.length&&(n+=\":\".concat(i)),n+=\"\\r\\n\"})}),n}},function(e,t,n){\"use strict\";var r={};n.r(r),n.d(r,\"CHROME\",function(){return a}),n.d(r,\"OPERA\",function(){return s}),n.d(r,\"FIREFOX\",function(){return c}),n.d(r,\"INTERNET_EXPLORER\",function(){return u}),n.d(r,\"EDGE\",function(){return l}),n.d(r,\"SAFARI\",function(){return d}),n.d(r,\"NWJS\",function(){return p}),n.d(r,\"ELECTRON\",function(){return h}),n.d(r,\"REACT_NATIVE\",function(){return f}),n.d(r,\"UNKNOWN\",function(){return m});var i=n(49),o=n.n(i),a=\"chrome\",s=\"opera\",c=\"firefox\",u=\"iexplorer\",l=\"edge\",d=\"safari\",p=\"nwjs\",h=\"electron\",f=\"react-native\",m=\"unknown\";function v(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var y={Chrome:a,Chromium:a,Opera:s,Firefox:c,\"Internet Explorer\":u,\"Microsoft Edge\":l,Safari:d};function g(){var e=navigator.userAgent;if(e.match(/Electron/)){var t=e.match(/Electron\\/([\\d.]+)/)[1];return{name:h,version:t}}}function _(){var e=navigator.userAgent;if(e.match(/JitsiMeetNW/)){var t=e.match(/JitsiMeetNW\\/([\\d.]+)/)[1];return{name:p,version:t}}}function S(){var e,t,n=navigator.userAgent.match(/\\b(react[ \\t_-]*native)(?:\\/(\\S+))?/i);if(n||\"ReactNative\"===navigator.product)return n&&n.length>2&&(t=n[1],e=n[2]),t||(t=\"react-native\"),e||(e=\"unknown\"),{name:f,version:e}}function b(){for(var e,t=[S,g,_],n=0;n<t.length;n++)if(e=t[n]())return e;var r=o.a.name,i=o.a.version;return r in y?{name:y[r],version:i}:(e=function(){var e=navigator.userAgent;if(Boolean(window.chrome)&&!e.match(/Edge/)&&e.match(/Chrome/)){var t=e.match(/Chrome\\/([\\d.]+)/)[1];return{name:a,version:t}}}())||{name:m,version:void 0}}var E,T,C,R=function(){function e(t){var n,r;if(function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),void 0===t){var i=b();n=i.name,r=i.version}else t.name in y?(n=y[t.name],r=t.version):(n=m,r=void 0);this._name=n,this._version=r}var t,n,r;return t=e,(n=[{key:\"getName\",value:function(){return this._name}},{key:\"isChrome\",value:function(){return this._name===a}},{key:\"isOpera\",value:function(){return this._name===s}},{key:\"isFirefox\",value:function(){return this._name===c}},{key:\"isIExplorer\",value:function(){return this._name===u}},{key:\"isEdge\",value:function(){return this._name===l}},{key:\"isSafari\",value:function(){return this._name===d}},{key:\"isNWJS\",value:function(){return this._name===p}},{key:\"isElectron\",value:function(){return this._name===h}},{key:\"isReactNative\",value:function(){return this._name===f}},{key:\"getVersion\",value:function(){return this._version}},{key:\"compareVersion\",value:function(e){if(this._version)return o.a.compareVersions([String(e),this._version])}},{key:\"isVersionGreaterThan\",value:function(e){return-1===this.compareVersion(e)}},{key:\"isVersionLessThan\",value:function(e){return 1===this.compareVersion(e)}},{key:\"isVersionEqualTo\",value:function(e){return 0===this.compareVersion(e)}}])&&v(t.prototype,n),r&&v(t,r),e}();E=R,T=\"compareVersions\",C=o.a.compareVersions,T in E?Object.defineProperty(E,T,{value:C,enumerable:!0,configurable:!0,writable:!0}):E[T]=C;n(77);n.d(t,\"a\",function(){return R}),n.d(t,\"b\",function(){return r})},function(e,t,n){\"use strict\";n.r(t),n.d(t,\"STATUS_AVAILABLE\",function(){return r}),n.d(t,\"STATUS_UNDEFINED\",function(){return i}),n.d(t,\"STATUS_BUSY\",function(){return o}),n.d(t,\"STATE_ON\",function(){return a}),n.d(t,\"STATE_OFF\",function(){return s}),n.d(t,\"STATE_PENDING\",function(){return c}),n.d(t,\"STATE_RETRYING\",function(){return u}),n.d(t,\"STATE_FAILED\",function(){return l}),n.d(t,\"ERROR_NO_CONNECTION\",function(){return d}),n.d(t,\"ERROR_SESSION_EXISTS\",function(){return p});var r=\"available\",i=\"undefined\",o=\"busy\",a=\"on\",s=\"off\",c=\"pending\",u=\"retrying\",l=\"failed\",d=\"error_no_connection\",p=\"error_session_already_exists\"},function(e,t,n){\"use strict\";n.r(t),n.d(t,\"AUTHENTICATION_REQUIRED\",function(){return r}),n.d(t,\"CHAT_ERROR\",function(){return i}),n.d(t,\"CONFERENCE_DESTROYED\",function(){return o}),n.d(t,\"CONFERENCE_MAX_USERS\",function(){return a}),n.d(t,\"CONNECTION_ERROR\",function(){return s}),n.d(t,\"NOT_ALLOWED_ERROR\",function(){return c}),n.d(t,\"FOCUS_DISCONNECTED\",function(){return u}),n.d(t,\"FOCUS_LEFT\",function(){return l}),n.d(t,\"GRACEFUL_SHUTDOWN\",function(){return d}),n.d(t,\"INCOMPATIBLE_SERVER_VERSIONS\",function(){return p}),n.d(t,\"JINGLE_FATAL_ERROR\",function(){return h}),n.d(t,\"PASSWORD_NOT_SUPPORTED\",function(){return f}),n.d(t,\"PASSWORD_REQUIRED\",function(){return m}),n.d(t,\"RESERVATION_ERROR\",function(){return v}),n.d(t,\"SETUP_FAILED\",function(){return y}),n.d(t,\"VIDEOBRIDGE_NOT_AVAILABLE\",function(){return g});var r=\"conference.authenticationRequired\",i=\"conference.chatError\",o=\"conference.destroyed\",a=\"conference.max_users\",s=\"conference.connectionError\",c=\"conference.connectionError.notAllowed\",u=\"conference.focusDisconnected\",l=\"conference.focusLeft\",d=\"conference.gracefulShutdown\",p=\"conference.incompatible_server_versions\",h=\"conference.jingleFatalError\",f=\"conference.passwordNotSupported\",m=\"conference.passwordRequired\",v=\"conference.reservationError\",y=\"conference.setup_failed\",g=\"conference.videobridgeNotAvailable\"},function(e,t,n){\"use strict\";n.r(t),n.d(t,\"CONNECTION_DISCONNECTED\",function(){return r}),n.d(t,\"CONNECTION_ESTABLISHED\",function(){return i}),n.d(t,\"CONNECTION_FAILED\",function(){return o}),n.d(t,\"WRONG_STATE\",function(){return a});var r=\"connection.connectionDisconnected\",i=\"connection.connectionEstablished\",o=\"connection.connectionFailed\",a=\"connection.wrongState\"},function(e,t,n){\"use strict\";n.d(t,\"a\",function(){return r}),n.d(t,\"b\",function(){return i}),n.d(t,\"c\",function(){return o}),n.d(t,\"d\",function(){return a});var r=\"statistics.audioLevel\",i=\"statistics.before_disposed\",o=\"statistics.byte_sent_stats\",a=\"statistics.connectionstats\"},function(e,t,n){\"use strict\";n.d(t,\"a\",function(){return a});var r=n(30),i=n.n(r);function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var a=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new i.a;!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this.eventEmitter=t,this.addEventListener=this.on=this.addListener,this.removeEventListener=this.off=this.removeListener}var t,n,r;return t=e,(n=[{key:\"addListener\",value:function(e,t){this.eventEmitter.addListener(e,t)}},{key:\"removeListener\",value:function(e,t){this.eventEmitter.removeListener(e,t)}}])&&o(t.prototype,n),r&&o(t,r),e}()},function(e,t,n){\"use strict\";(function(e){var r,i,o=n(4),a=n(78),s=n.n(a),c=Object(o.getLogger)(e);function u(){var e;try{e=(window||this).localStorage}catch(e){c.error(e)}return e}function l(){return\"\".concat(Math.random().toString(16),\"000000000\").substr(2,8)}t.a={get callStatsUserName(){if(!r){var e=u();e&&(r=e.getItem(\"callStatsUserName\")),r||(t=s.a.generateUsername(),c.log(\"generated callstats uid\",t),r=t,e&&e.setItem(\"callStatsUserName\",r))}var t;return r},get machineId(){if(!i){var e=u();e&&(i=e.getItem(\"jitsiMeetId\")),i||(t=l()+l()+l()+l(),c.log(\"generated id\",t),i=t,e&&e.setItem(\"jitsiMeetId\",i))}var t;return i},get sessionId(){var e=u();return e?e.getItem(\"sessionId\"):void 0},set sessionId(e){var t=u();t&&(e?t.setItem(\"sessionId\",e):t.removeItem(\"sessionId\"))}}}).call(this,\"modules/settings/Settings.js\")},function(e,t,n){\"use strict\";n.d(t,\"a\",function(){return o}),n.d(t,\"b\",function(){return a}),n.d(t,\"c\",function(){return s}),n.d(t,\"d\",function(){return c}),n.d(t,\"e\",function(){return u}),n.d(t,\"f\",function(){return l}),n.d(t,\"g\",function(){return d});var r=n(16),i=n.n(r);function o(e){var t=new Map,n=[],r=!0,o=!1,a=void 0;try{for(var s,c=e.media[Symbol.iterator]();!(r=(s=c.next()).done);r=!0){var u=s.value,l=u.type;if(\"audio\"===l||\"video\"===l){var d=!0,p=!1,h=void 0;try{for(var f,m=u.rtp[Symbol.iterator]();!(d=(f=m.next()).done);d=!0){var v=f.value,y={clockRate:v.rate,kind:l,mimeType:\"\".concat(l,\"/\").concat(v.codec),name:v.codec,numChannels:v.encoding||1,parameters:{},preferredPayloadType:v.payload,rtcpFeedback:[]};t.set(y.preferredPayloadType,y)}}catch(e){p=!0,h=e}finally{try{d||null==m.return||m.return()}finally{if(p)throw h}}var g=!0,_=!1,S=void 0;try{for(var b,E=(u.fmtp||[])[Symbol.iterator]();!(g=(b=E.next()).done);g=!0){var T=b.value,C=i.a.parseFmtpConfig(T.config),R=t.get(T.payload);R&&(R.parameters=C)}}catch(e){_=!0,S=e}finally{try{g||null==E.return||E.return()}finally{if(_)throw S}}var w=!0,A=!1,k=void 0;try{for(var O,I=(u.rtcpFb||[])[Symbol.iterator]();!(w=(O=I.next()).done);w=!0){var P=O.value,D=t.get(P.payload);D&&D.rtcpFeedback.push({parameter:P.subtype||\"\",type:P.type})}}catch(e){A=!0,k=e}finally{try{w||null==I.return||I.return()}finally{if(A)throw k}}var N=!0,L=!1,M=void 0;try{for(var x,j=function(){var e=x.value,t=e.value,r=e.uri,i={kind:l,uri:r,preferredId:t};n.find(function(e){return i.kind===e.kind&&i.uri===e.uri})||n.push(i)},F=(u.ext||[])[Symbol.iterator]();!(N=(x=F.next()).done);N=!0)j()}catch(e){L=!0,M=e}finally{try{N||null==F.return||F.return()}finally{if(L)throw M}}}}}catch(e){o=!0,a=e}finally{try{r||null==c.return||c.return()}finally{if(o)throw a}}return{codecs:Array.from(t.values()),fecMechanisms:[],headerExtensions:n}}function a(e){var t,n=p(e),r=n.fingerprint||e.fingerprint;switch(n.setup){case\"active\":t=\"client\";break;case\"passive\":t=\"server\";break;case\"actpass\":t=\"auto\"}return{role:t,fingerprints:[{algorithm:r.type,value:r.hash}]}}function s(e){var t=p(e),n=[],r=!0,i=!1,o=void 0;try{for(var a,s=t.candidates[Symbol.iterator]();!(r=(a=s.next()).done);r=!0){var c=a.value;if(1===c.component){var u={foundation:c.foundation,ip:c.ip,port:c.port,priority:c.priority,protocol:c.transport.toLowerCase(),type:c.type};n.push(u)}}}catch(e){i=!0,o=e}finally{try{r||null==s.return||s.return()}finally{if(i)throw o}}return n}function c(e){var t=p(e),n=t.iceUfrag,r=t.icePwd;return{icelite:\"ice-lite\"===e.icelite,password:r,usernameFragment:n}}function u(e){var t=new Map,n=!0,r=!1,i=void 0;try{for(var o,a=e.media[Symbol.iterator]();!(n=(o=a.next()).done);n=!0){var s=o.value;t.set(s.mid,s.type)}}catch(e){r=!0,i=e}finally{try{n||null==a.return||a.return()}finally{if(r)throw i}}return t}function l(e){var t=new Map,n=new Map,r=new Set,i=!0,o=!1,a=void 0;try{for(var s,c=e.media[Symbol.iterator]();!(i=(s=c.next()).done);i=!0){var u=s.value,l=u.type;if(\"audio\"===l||\"video\"===l){var d=!0,p=!1,h=void 0;try{for(var f,m=(u.ssrcGroups||[])[Symbol.iterator]();!(d=(f=m.next()).done);d=!0){var v=f.value;if(\"FID\"===v.semantics){var y=v.ssrcs.split(\" \").map(function(e){return Number(e)}),g=y[0],_=y[1];n.set(g,_),r.add(_)}}}catch(e){p=!0,h=e}finally{try{d||null==m.return||m.return()}finally{if(p)throw h}}var S=!0,b=!1,E=void 0;try{for(var T,C=(u.ssrcs||[])[Symbol.iterator]();!(S=(T=C.next()).done);S=!0){var R=T.value,w=R.id;if(!r.has(w)){var A=t.get(w);switch(A||(A={kind:l,rtxSsrc:n.get(w),ssrc:w},t.set(w,A)),R.attribute){case\"cname\":A.cname=R.value;break;case\"msid\":var k=R.value.split(\" \"),O=k[0],I=k[1];A.streamId=O,A.trackId=I;break;case\"mslabel\":var P=R.value;A.streamId=P;break;case\"label\":var D=R.value;A.trackId=D}}}}catch(e){b=!0,E=e}finally{try{S||null==C.return||C.return()}finally{if(b)throw E}}}}}catch(e){o=!0,a=e}finally{try{i||null==c.return||c.return()}finally{if(o)throw a}}return t}function d(e){var t=RTCRtpReceiver.getCapabilities(),n={codecs:[],fecMechanisms:[],headerExtensions:[]},r=new Map,i=!0,o=!1,a=void 0;try{for(var s,c=function(){var e=s.value,i=e.name.toLowerCase();if(\"rtx\"===i)return r.set(e.parameters.apt,e.preferredPayloadType),\"continue\";var o=t.codecs.find(function(t){return t.name.toLowerCase()===i&&t.kind===e.kind&&t.clockRate===e.clockRate});if(!o)return\"continue\";for(var a={clockRate:o.clockRate,kind:o.kind,mimeType:\"\".concat(o.kind,\"/\").concat(o.name),name:o.name,numChannels:o.numChannels||1,parameters:{},preferredPayloadType:e.preferredPayloadType,rtcpFeedback:[]},c=Object.keys(e.parameters),u=0;u<c.length;u++)for(var l=c[u],d=e.parameters[l],p=Object.keys(o.parameters),h=0;h<p.length;h++){var f=p[h],m=o.parameters[f];if(f===l&&m===d){a.parameters[f]=m;break}}var v=!0,y=!1,g=void 0;try{for(var _,S=function(){var e=_.value,t=o.rtcpFeedback.find(function(t){return t.type===e.type&&t.parameter===e.parameter});t&&a.rtcpFeedback.push(t)},b=e.rtcpFeedback[Symbol.iterator]();!(v=(_=b.next()).done);v=!0)S()}catch(e){y=!0,g=e}finally{try{v||null==b.return||b.return()}finally{if(y)throw g}}n.codecs.push(a)},u=e.codecs[Symbol.iterator]();!(i=(s=u.next()).done);i=!0)c()}catch(e){o=!0,a=e}finally{try{i||null==u.return||u.return()}finally{if(o)throw a}}var l=!0,d=!1,p=void 0;try{for(var h,f=n.codecs[Symbol.iterator]();!(l=(h=f.next()).done);l=!0){var m=h.value,v=m.preferredPayloadType;if(r.has(v)){var y={clockRate:m.clockRate,kind:m.kind,mimeType:\"\".concat(m.kind,\"/rtx\"),name:\"rtx\",parameters:{apt:v},preferredPayloadType:r.get(v),rtcpFeedback:[]};n.codecs.push(y)}}}catch(e){d=!0,p=e}finally{try{l||null==f.return||f.return()}finally{if(d)throw p}}var g=!0,_=!1,S=void 0;try{for(var b,E=function(){var e=b.value,r=t.headerExtensions.find(function(t){return t.kind===e.kind&&t.uri===e.uri});if(r){var i={kind:r.kind,preferredEncrypt:Boolean(e.preferredEncrypt),preferredId:e.preferredId,uri:r.uri};n.headerExtensions.push(i)}},T=e.headerExtensions[Symbol.iterator]();!(g=(b=T.next()).done);g=!0)E()}catch(e){_=!0,S=e}finally{try{g||null==T.return||T.return()}finally{if(_)throw S}}var C=!0,R=!1,w=void 0;try{for(var A,k=function(){var e=A.value,r=t.fecMechanisms.find(function(t){return t===e});r&&n.fecMechanisms.push(r)},O=e.fecMechanisms[Symbol.iterator]();!(C=(A=O.next()).done);C=!0)k()}catch(e){R=!0,w=e}finally{try{C||null==O.return||O.return()}finally{if(R)throw w}}return n}function p(e){return e.media.find(function(e){return e.iceUfrag&&0!==e.port})}},function(e,t,n){\"use strict\";function r(e){return(r=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function i(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}function o(e){var t=\"function\"==typeof Map?new Map:void 0;return(o=function(e){if(null===e||(n=e,-1===Function.toString.call(n).indexOf(\"[native code]\")))return e;var n;if(\"function\"!=typeof e)throw new TypeError(\"Super expression must either be null or a function\");if(void 0!==t){if(t.has(e))return t.get(e);t.set(e,r)}function r(){return a(e,arguments,c(this).constructor)}return r.prototype=Object.create(e.prototype,{constructor:{value:r,enumerable:!1,writable:!0,configurable:!0}}),s(r,e)})(e)}function a(e,t,n){return(a=function(){if(\"undefined\"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if(\"function\"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(e){return!1}}()?Reflect.construct:function(e,t,n){var r=[null];r.push.apply(r,t);var i=new(Function.bind.apply(e,r));return n&&s(i,n.prototype),i}).apply(null,arguments)}function s(e,t){return(s=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function c(e){return(c=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}n.d(t,\"a\",function(){return l});var u,l=(u=\"InvalidStateError\",function(e){function t(e){var n,o,a;return function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t),o=this,n=!(a=c(t).call(this,e))||\"object\"!==r(a)&&\"function\"!=typeof a?i(o):a,Object.defineProperty(i(i(n)),\"name\",{value:u}),n}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&s(e,t)}(t,o(Error)),t}())},function(e,t,n){\"use strict\";n.d(t,\"b\",function(){return s}),n.d(t,\"c\",function(){return c}),n.d(t,\"a\",function(){return d});var r=n(16);function i(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function a(e,t,n){return t&&o(e.prototype,t),n&&o(e,n),e}function s(e){return parseInt(e.ssrcs.split(\" \")[0],10)}function c(e){return parseInt(e.ssrcs.split(\" \")[1],10)}function u(e){return e.ssrcs?e.ssrcs.map(function(e){return e.id}).filter(function(e,t,n){return n.indexOf(e)===t}).length:0}var l=function(){function e(t){if(i(this,e),!t)throw new Error(\"mLine is undefined\");this.mLine=t}return a(e,[{key:\"getSSRCAttrValue\",value:function(e,t){var n=this.ssrcs.find(function(n){return n.id===e&&n.attribute===t});return n&&n.value}},{key:\"removeSSRC\",value:function(e){this.mLine.ssrcs&&this.mLine.ssrcs.length&&(this.mLine.ssrcs=this.mLine.ssrcs.filter(function(t){return t.id!==e}))}},{key:\"addSSRCAttribute\",value:function(e){this.ssrcs.push(e)}},{key:\"findGroup\",value:function(e,t){return this.ssrcGroups.find(function(n){return n.semantics===e&&(!t||t===n.ssrcs)})}},{key:\"findGroups\",value:function(e){return this.ssrcGroups.filter(function(t){return t.semantics===e})}},{key:\"findGroupByPrimarySSRC\",value:function(e,t){return this.ssrcGroups.find(function(n){return n.semantics===e&&s(n)===t})}},{key:\"findSSRCByMSID\",value:function(e){return this.ssrcs.find(function(t){return\"msid\"===t.attribute&&(null===e||t.value===e)})}},{key:\"getSSRCCount\",value:function(){return u(this.mLine)}},{key:\"containsAnySSRCGroups\",value:function(){return void 0!==this.mLine.ssrcGroups}},{key:\"getPrimaryVideoSsrc\",value:function(){var e=this.mLine.type;if(\"video\"!==e)throw new Error(\"getPrimarySsrc doesn't work with '\".concat(e,\"'\"));if(1===u(this.mLine))return this.mLine.ssrcs[0].id;if(this.mLine.ssrcGroups){var t=this.findGroup(\"SIM\");if(t)return s(t);var n=this.findGroup(\"FID\");if(n)return s(n);var r=this.findGroup(\"FEC-FR\");if(r)return s(r)}}},{key:\"getRtxSSRC\",value:function(e){var t=this.findGroupByPrimarySSRC(\"FID\",e);return t&&c(t)}},{key:\"getSSRCs\",value:function(){return this.ssrcs.map(function(e){return e.id}).filter(function(e,t,n){return n.indexOf(e)===t})}},{key:\"getPrimaryVideoSSRCs\",value:function(){var e=this.mLine.type;if(\"video\"!==e)throw new Error(\"getPrimaryVideoSSRCs doesn't work with \".concat(e));var t=this.getSSRCs(),n=!0,r=!1,i=void 0;try{for(var o,a=this.ssrcGroups[Symbol.iterator]();!(n=(o=a.next()).done);n=!0){var s=o.value;if(\"FID\"===s.semantics||\"FEC-FR\"===s.semantics){var u=c(s);t.splice(t.indexOf(u),1)}}}catch(e){r=!0,i=e}finally{try{n||null==a.return||a.return()}finally{if(r)throw i}}return t}},{key:\"dumpSSRCGroups\",value:function(){return JSON.stringify(this.mLine.ssrcGroups)}},{key:\"removeGroupsWithSSRC\",value:function(e){this.mLine.ssrcGroups&&(this.mLine.ssrcGroups=this.mLine.ssrcGroups.filter(function(t){return-1===t.ssrcs.indexOf(\"\".concat(e))}))}},{key:\"removeGroupsBySemantics\",value:function(e){this.mLine.ssrcGroups&&(this.mLine.ssrcGroups=this.mLine.ssrcGroups.filter(function(t){return t.semantics!==e}))}},{key:\"replaceSSRC\",value:function(e,t){this.mLine.ssrcs&&this.mLine.ssrcs.forEach(function(n){n.id===e&&(n.id=t)})}},{key:\"addSSRCGroup\",value:function(e){this.ssrcGroups.push(e)}},{key:\"ssrcs\",get:function(){return this.mLine.ssrcs||(this.mLine.ssrcs=[]),this.mLine.ssrcs},set:function(e){this.mLine.ssrcs=e}},{key:\"direction\",get:function(){return this.mLine.direction},set:function(e){this.mLine.direction=e}},{key:\"ssrcGroups\",get:function(){return this.mLine.ssrcGroups||(this.mLine.ssrcGroups=[]),this.mLine.ssrcGroups},set:function(e){this.mLine.ssrcGroups=e}}]),e}(),d=function(){function e(t){i(this,e),this.parsedSDP=r.parse(t)}return a(e,[{key:\"selectMedia\",value:function(e){var t=this.parsedSDP.media.find(function(t){return t.type===e});return t?new l(t):null}},{key:\"toRawSDP\",value:function(){return r.write(this.parsedSDP)}}]),e}()},function(e,t,n){\"use strict\";n.d(t,\"a\",function(){return r});var r={ACCEPT:\"session-accept\",CONNECTION_ERROR:\"connection-error-encountered\",INITIATE:\"session-initiate\",TERMINATE:\"session-terminate\",TRANSPORT_INFO:\"transport-info\",UNAVAILABLE:\"unavailable\"}},function(e,t){function n(e){return(n=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function r(){this._events=this._events||{},this._maxListeners=this._maxListeners||void 0}function i(e){return\"function\"==typeof e}function o(e){return\"object\"===n(e)&&null!==e}function a(e){return void 0===e}e.exports=r,r.EventEmitter=r,r.prototype._events=void 0,r.prototype._maxListeners=void 0,r.defaultMaxListeners=10,r.prototype.setMaxListeners=function(e){if(\"number\"!=typeof e||e<0||isNaN(e))throw TypeError(\"n must be a positive number\");return this._maxListeners=e,this},r.prototype.emit=function(e){var t,n,r,s,c,u;if(this._events||(this._events={}),\"error\"===e&&(!this._events.error||o(this._events.error)&&!this._events.error.length)){if((t=arguments[1])instanceof Error)throw t;var l=new Error('Uncaught, unspecified \"error\" event. ('+t+\")\");throw l.context=t,l}if(a(n=this._events[e]))return!1;if(i(n))switch(arguments.length){case 1:n.call(this);break;case 2:n.call(this,arguments[1]);break;case 3:n.call(this,arguments[1],arguments[2]);break;default:s=Array.prototype.slice.call(arguments,1),n.apply(this,s)}else if(o(n))for(s=Array.prototype.slice.call(arguments,1),r=(u=n.slice()).length,c=0;c<r;c++)u[c].apply(this,s);return!0},r.prototype.addListener=function(e,t){var n;if(!i(t))throw TypeError(\"listener must be a function\");return this._events||(this._events={}),this._events.newListener&&this.emit(\"newListener\",e,i(t.listener)?t.listener:t),this._events[e]?o(this._events[e])?this._events[e].push(t):this._events[e]=[this._events[e],t]:this._events[e]=t,o(this._events[e])&&!this._events[e].warned&&(n=a(this._maxListeners)?r.defaultMaxListeners:this._maxListeners)&&n>0&&this._events[e].length>n&&(this._events[e].warned=!0,console.error(\"(node) warning: possible EventEmitter memory leak detected. %d listeners added. Use emitter.setMaxListeners() to increase limit.\",this._events[e].length),\"function\"==typeof console.trace&&console.trace()),this},r.prototype.on=r.prototype.addListener,r.prototype.once=function(e,t){if(!i(t))throw TypeError(\"listener must be a function\");var n=!1;function r(){this.removeListener(e,r),n||(n=!0,t.apply(this,arguments))}return r.listener=t,this.on(e,r),this},r.prototype.removeListener=function(e,t){var n,r,a,s;if(!i(t))throw TypeError(\"listener must be a function\");if(!this._events||!this._events[e])return this;if(a=(n=this._events[e]).length,r=-1,n===t||i(n.listener)&&n.listener===t)delete this._events[e],this._events.removeListener&&this.emit(\"removeListener\",e,t);else if(o(n)){for(s=a;s-- >0;)if(n[s]===t||n[s].listener&&n[s].listener===t){r=s;break}if(r<0)return this;1===n.length?(n.length=0,delete this._events[e]):n.splice(r,1),this._events.removeListener&&this.emit(\"removeListener\",e,t)}return this},r.prototype.removeAllListeners=function(e){var t,n;if(!this._events)return this;if(!this._events.removeListener)return 0===arguments.length?this._events={}:this._events[e]&&delete this._events[e],this;if(0===arguments.length){for(t in this._events)\"removeListener\"!==t&&this.removeAllListeners(t);return this.removeAllListeners(\"removeListener\"),this._events={},this}if(i(n=this._events[e]))this.removeListener(e,n);else if(n)for(;n.length;)this.removeListener(e,n[n.length-1]);return delete this._events[e],this},r.prototype.listeners=function(e){return this._events&&this._events[e]?i(this._events[e])?[this._events[e]]:this._events[e].slice():[]},r.prototype.listenerCount=function(e){if(this._events){var t=this._events[e];if(i(t))return 1;if(t)return t.length}return 0},r.listenerCount=function(e,t){return e.listenerCount(t)}},function(e,t){e.exports={1080:{width:1920,height:1080,order:7},fullhd:{width:1920,height:1080,order:7},720:{width:1280,height:720,order:6},hd:{width:1280,height:720,order:6},960:{width:960,height:720,order:5},360:{width:640,height:360,order:4},640:{width:640,height:480,order:3},vga:{width:640,height:480,order:3},180:{width:320,height:180,order:2},320:{width:320,height:240,order:1}}},function(e,t,n){\"use strict\";n.d(t,\"c\",function(){return r}),n.d(t,\"a\",function(){return i}),n.d(t,\"b\",function(){return o});var r=\"pending\",i=\"active\",o=\"ended\"},function(e,t,n){\"use strict\";(function(e){n.d(t,\"a\",function(){return D});var r=n(3),i=n(10),o=n.n(i);function a(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function s(e,t,n){return t&&a(e.prototype,t),n&&a(e,n),e}var c,u=n(4).getLogger(e),l=\"createOffer\",d=\"createAnswer\",p=\"setLocalDescription\",h=\"setRemoteDescription\",f=\"addIceCandidate\",m=\"getUserMedia\",v=\"iceConnectionFailure\",y=\"applicationLog\",g=\"fabricHold\",_=\"fabricResume\",S=\"audioMute\",b=\"audioUnmute\",E=\"videoPause\",T=\"videoResume\",C=\"screenShareStart\",R=\"screenShareStop\",w=\"dominantSpeaker\",A=\"activeDeviceList\",k=\"jitsi\",O=\"error\",I=\"event\",P=\"mstWithUserID\",D=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this.confID=n.confID,this.tpc=t,this.peerconnection=t.peerconnection,this.remoteUserID=n.remoteUserID||k,this.hasFabric=!1,e.fabrics.add(this),e.backendInitialized&&(this._addNewFabric(),1===e.fabrics.size&&e._emptyReportQueue(this))}return s(e,null,[{key:\"_addNewFabricCallback\",value:function(t,n){e.backend&&\"success\"!==t&&u.error(\"Monitoring status: \".concat(t,\" msg: \").concat(n))}},{key:\"_initCallback\",value:function(t,n){if(u.log(\"CallStats Status: err=\".concat(t,\" msg=\").concat(n)),\"success\"===t){e.backendInitialized=!0;var r=!1,i=null,o=!0,a=!1,s=void 0;try{for(var c,l=e.fabrics.values()[Symbol.iterator]();!(o=(c=l.next()).done);o=!0){var d=c.value;d.hasFabric||(u.debug(\"addNewFabric - initCallback\"),d._addNewFabric()&&(r=!0,i||(i=d)))}}catch(e){a=!0,s=e}finally{try{o||null==l.return||l.return()}finally{if(a)throw s}}r&&e._emptyReportQueue(i)}}},{key:\"_emptyReportQueue\",value:function(t){var n=t.confID,r=t.peerconnection,i=!0,o=!1,a=void 0;try{for(var s,c=e.reportsQueue[Symbol.iterator]();!(i=(s=c.next()).done);i=!0){var u=s.value;if(u.type===O){var l=u.data;e._reportError(t,l.type,l.error,l.pc||r)}else if(u.type===I){var d=u.data;e.backend.sendFabricEvent(u.pc||r,d.event,n,d.eventData)}else if(u.type===P){var p=u.data;e.backend.associateMstWithUserID(u.pc||r,p.callStatsId,n,p.ssrc,p.usageLabel,p.containerId)}}}catch(e){o=!0,a=e}finally{try{i||null==c.return||c.return()}finally{if(o)throw a}}e.reportsQueue.length=0}},{key:\"_reportError\",value:function(t,n,r,i){var o=r;o||(u.warn(\"No error is passed!\"),o=new Error(\"Unknown error\")),e.backendInitialized&&t?e.backend.reportError(i,t.confID,n,o):e.reportsQueue.push({type:O,data:{error:o,pc:i,type:n}})}},{key:\"_reportEvent\",value:function(t,n,r){var i=t&&t.peerconnection,o=t&&t.confID;e.backendInitialized&&t?e.backend.sendFabricEvent(i,n,o,r):e.reportsQueue.push({confID:o,pc:i,type:I,data:{event:n,eventData:r}})}},{key:\"_traceAndCatchBackendCalls\",value:function(e){for(var t=[\"associateMstWithUserID\",\"sendFabricEvent\",\"sendUserFeedback\"],n=function(){var n=t[i],r=e[n];e[n]=function(){try{for(var t=arguments.length,n=new Array(t),i=0;i<t;i++)n[i]=arguments[i];return r.apply(e,n)}catch(e){o.a.callErrorHandler(e)}}},i=0;i<t.length;i++)n();for(var a=[\"associateMstWithUserID\",\"sendFabricEvent\",\"sendUserFeedback\"],s=function(){var t=a[c],n=e[t];e[t]=function(){for(var r=arguments.length,i=new Array(r),o=0;o<r;o++)i[o]=arguments[o];u.debug(t,i),n.apply(e,i)}},c=0;c<a.length;c++)s();var l=e.reportError;e.reportError=function(t,n,i){for(var a=arguments.length,s=new Array(a>3?a-3:0),c=3;c<a;c++)s[c-3]=arguments[c];i===y?r.a.isReactNative()||console&&console.debug(\"reportError\",t,n,i):u.debug.apply(u,[\"reportError\",t,n,i].concat(s));try{l.call.apply(l,[e,t,n,i].concat(s))}catch(e){i===y?console&&console.error(\"reportError\",e):o.a.callErrorHandler(e)}}}},{key:\"initBackend\",value:function(t){if(e.backend)throw new Error(\"CallStats backend has been initialized already!\");try{var n,i=callstats;e.backend=new i,e._traceAndCatchBackendCalls(e.backend),e.userID={aliasName:t.aliasName,userName:t.userName},e.callStatsID=t.callStatsID,e.callStatsSecret=t.callStatsSecret,t.applicationName&&(n={applicationVersion:\"\".concat(t.applicationName,\" (\").concat(r.a.getName(),\")\")}),e.backend.initialize(e.callStatsID,e.callStatsSecret,e.userID,e._initCallback,void 0,n);var a=t.getWiFiStatsMethod;return a&&(e.backend.attachWifiStatsHandler(a),a().then(function(e){e&&u.info(\"Reported wifi addresses:\",JSON.parse(e).addresses)}).catch(function(){})),!0}catch(t){return o.a.callErrorHandler(t),e.backend=null,u.error(t),!1}}},{key:\"isBackendInitialized\",value:function(){return Boolean(e.backend)}},{key:\"sendActiveDeviceListEvent\",value:function(t,n){e._reportEvent(n,A,t)}},{key:\"sendApplicationLog\",value:function(t,n){try{e._reportError(n,y,t,n&&n.peerconnection)}catch(e){console&&\"function\"==typeof console.error&&console.error(\"sendApplicationLog failed\",e)}}},{key:\"sendFeedback\",value:function(t,n,r){e.backend?e.backend.sendUserFeedback(t,{userID:e.userID,overall:n,comment:r}):u.error(\"Failed to submit feedback to CallStats - no backend\")}},{key:\"sendGetUserMediaFailed\",value:function(t,n){e._reportError(n,m,t,null)}},{key:\"sendMuteEvent\",value:function(t,n,r){var i;i=\"video\"===n?t?E:T:t?S:b,e._reportEvent(r,i)}},{key:\"fabrics\",get:function(){return c||(c=new Set),c}}]),s(e,[{key:\"_addNewFabric\",value:function(){u.info(\"addNewFabric\",this.remoteUserID);try{var t={remoteEndpointType:this.tpc.isP2P?e.backend.endpointType.peer:e.backend.endpointType.server},n=e.backend.addNewFabric(this.peerconnection,this.remoteUserID,e.backend.fabricUsage.multiplex,this.confID,t,e._addNewFabricCallback);this.hasFabric=!0;var r=\"success\"===n.status;return r||u.error(\"callstats fabric not initilized\",n.message),r}catch(e){return o.a.callErrorHandler(e),!1}}},{key:\"associateStreamWithVideoTag\",value:function(t,n,r,i,o){if(e.backend){var a=n?e.userID:r;e.backendInitialized?e.backend.associateMstWithUserID(this.peerconnection,a,this.confID,t,i,o):e.reportsQueue.push({type:P,pc:this.peerconnection,data:{callStatsId:a,containerId:o,ssrc:t,usageLabel:i}})}}},{key:\"sendDominantSpeakerEvent\",value:function(){e._reportEvent(this,w)}},{key:\"sendTerminateEvent\",value:function(){e.backendInitialized&&e.backend.sendFabricEvent(this.peerconnection,e.backend.fabricEvent.fabricTerminated,this.confID),e.fabrics.delete(this)}},{key:\"sendIceConnectionFailedEvent\",value:function(){e._reportError(this,v,null,this.peerconnection)}},{key:\"sendCreateOfferFailed\",value:function(t){e._reportError(this,l,t,this.peerconnection)}},{key:\"sendCreateAnswerFailed\",value:function(t){e._reportError(this,d,t,this.peerconnection)}},{key:\"sendResumeOrHoldEvent\",value:function(t){e._reportEvent(this,t?_:g)}},{key:\"sendScreenSharingEvent\",value:function(t,n){var r;n&&(r={ssrc:n}),e._reportEvent(this,t?C:R,r)}},{key:\"sendSetLocalDescFailed\",value:function(t){e._reportError(this,p,t,this.peerconnection)}},{key:\"sendSetRemoteDescFailed\",value:function(t){e._reportError(this,h,t,this.peerconnection)}},{key:\"sendAddIceCandidateFailed\",value:function(t){e._reportError(this,f,t,this.peerconnection)}}]),e}();D.backend=null,D.reportsQueue=[],D.backendInitialized=!1,D.callStatsID=null,D.callStatsSecret=null,D.userID=null}).call(this,\"modules/statistics/CallStats.js\")},function(e,t,n){\"use strict\";n.r(t),n.d(t,\"LOCAL_STATS_UPDATED\",function(){return r}),n.d(t,\"REMOTE_STATS_UPDATED\",function(){return i});var r=\"cq.local_stats_updated\",i=\"cq.remote_stats_updated\"},function(e,t,n){e.exports={EventTarget:n(131),Event:n(132)}},function(e,t,n){\"use strict\";n.d(t,\"a\",function(){return d});var r=n(24);function i(e){return(i=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function a(e,t){return!t||\"object\"!==i(t)&&\"function\"!=typeof t?function(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}(e):t}function s(e){return(s=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function c(e,t){return(c=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function u(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function l(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:function(){return function e(){u(this,e)}}();return function(t){function n(){var e,t;u(this,n);for(var r=arguments.length,i=new Array(r),o=0;o<r;o++)i[o]=arguments[o];return(t=a(this,(e=s(n)).call.apply(e,[this].concat(i)))).connection=null,t}var r,i,l;return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&c(e,t)}(n,e),r=n,(i=[{key:\"init\",value:function(e){this.connection=e}}])&&o(r.prototype,i),l&&o(r,l),n}()}t.b=l();var d=l(r.a)},function(e,t){var n=\"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\";function r(e,t){return Math.floor(Math.random()*(t-e+1))+e}function i(e){return e[r(0,e.length-1)]}var o={randomHexDigit:function(){return i(\"0123456789abcdef\")},randomHexString:function(e){for(var t=\"\";e--;)t+=this.randomHexDigit();return t},randomElement:i,randomAlphanumStr:function(e){for(var t=\"\",r=0;r<e;r+=1)t+=i(n);return t},randomInt:r};e.exports=o},function(e,t,n){\"use strict\";(function(e){n.d(t,\"a\",function(){return k}),n.d(t,\"b\",function(){return O}),n.d(t,\"c\",function(){return I});var r=n(4),i=n(1),o=(n(128),n(37)),a=n.n(o),s=n(39),c=n(22),u=n(3),l=n(82),d=n(85),p=n(91),h=n(92),f=n(93),m=n(94),v=n(24),y=n(95),g=n(10),_=n.n(g),S=n(0),b=n.n(S);function E(e){return(E=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function T(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function C(e){return(C=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function R(e,t){return(R=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function w(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}var A=Object(r.getLogger)(e);var k=[{urls:\"stun:stun.l.google.com:19302\"},{urls:\"stun:stun1.l.google.com:19302\"},{urls:\"stun:stun2.l.google.com:19302\"}],O=\"type\",I=function(e){function t(e,n){var r,o,a;return function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t),o=this,(r=!(a=C(t).call(this))||\"object\"!==E(a)&&\"function\"!=typeof a?w(o):a).connection=null,r.disconnectInProgress=!1,r.connectionTimes={},r.options=e,r.token=n,r.authenticatedUser=!1,r._initStrophePlugins(w(w(r))),r.connection=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"/http-bind\";e&&(t+=\"\".concat(-1===t.indexOf(\"?\")?\"?\":\"&\",\"token=\").concat(e));var n=new i.Strophe.Connection(t);return n.maxRetries=3,n}(n,e.bosh),r.caps=new y.a(r.connection,r.options.clientNode),r.initFeaturesList(),$(window).on(\"beforeunload unload\",r.disconnect.bind(w(w(r)))),r}var n,r,o;return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&R(e,t)}(t,v[\"a\"]),n=t,(r=[{key:\"initFeaturesList\",value:function(){this.caps.addFeature(\"urn:xmpp:jingle:1\"),this.caps.addFeature(\"urn:xmpp:jingle:apps:rtp:1\"),this.caps.addFeature(\"urn:xmpp:jingle:transports:ice-udp:1\"),this.caps.addFeature(\"urn:xmpp:jingle:apps:dtls:0\"),this.caps.addFeature(\"urn:xmpp:jingle:transports:dtls-sctp:1\"),this.caps.addFeature(\"urn:xmpp:jingle:apps:rtp:audio\"),this.caps.addFeature(\"urn:xmpp:jingle:apps:rtp:video\"),!this.options.disableRtx&&u.a.supportsRtx()&&this.caps.addFeature(\"urn:ietf:rfc:4588\"),this.caps.addFeature(\"urn:ietf:rfc:5761\"),this.caps.addFeature(\"urn:ietf:rfc:5888\"),u.a.isChrome()&&!1!==this.options.enableLipSync&&(A.info(\"Lip-sync enabled !\"),this.caps.addFeature(\"http://jitsi.org/meet/lipsync\")),this.connection.rayo&&this.caps.addFeature(\"urn:xmpp:rayo:client:1\")}},{key:\"isPingSupported\",value:function(){return!1!==this._pingSupported}},{key:\"getConnection\",value:function(){return this.connection}},{key:\"connectionHandler\",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=arguments.length>1?arguments[1]:void 0,r=arguments.length>2?arguments[2]:void 0,o=window.performance.now(),a=i.Strophe.getStatusString(n).toLowerCase();if(this.connectionTimes[a]=o,A.log(\"(TIME) Strophe \".concat(a).concat(r?\"[\".concat(r,\"]\"):\"\",\":\\t\"),o),n===i.Strophe.Status.CONNECTED||n===i.Strophe.Status.ATTACHED){(this.options.useStunTurn||this.options.p2p&&this.options.p2p.useStunTurn)&&this.connection.jingle.getStunAndTurnCredentials(),A.info(\"My Jabber ID: \".concat(this.connection.jid));var u=this.connection.domain;this.caps.getFeaturesAndIdentities(u).then(function(t){var n=t.features,r=t.identities;n.has(i.Strophe.NS.PING)?(e._pingSupported=!0,e.connection.ping.startInterval(u)):A.warn(\"Ping NOT supported by \".concat(u)),r.forEach(function(t){\"speakerstats\"===t.type&&(e.speakerStatsComponentAddress=t.name,e.connection.addHandler(e._onPrivateMessage.bind(e),null,\"message\",null,null))})}).catch(function(e){var t=\"Feature discovery error\";_.a.callErrorHandler(new Error(\"\".concat(t,\": \").concat(e))),A.error(t,e)}),t.password&&(this.authenticatedUser=!0),this.connection&&this.connection.connected&&i.Strophe.getResourceFromJid(this.connection.jid)&&this.eventEmitter.emit(c.CONNECTION_ESTABLISHED,i.Strophe.getResourceFromJid(this.connection.jid))}else if(n===i.Strophe.Status.CONNFAIL)\"x-strophe-bad-non-anon-jid\"===r?this.anonymousConnectionFailed=!0:this.connectionFailed=!0,this.lastErrorMsg=r,\"giving-up\"===r&&this.eventEmitter.emit(c.CONNECTION_FAILED,s.OTHER_ERROR,r);else if(n===i.Strophe.Status.DISCONNECTED){this.connection.ping.stopInterval();var l=this.disconnectInProgress,d=r||this.lastErrorMsg;if(this.disconnectInProgress=!1,this.anonymousConnectionFailed)this.eventEmitter.emit(c.CONNECTION_FAILED,s.PASSWORD_REQUIRED);else if(this.connectionFailed)this.eventEmitter.emit(c.CONNECTION_FAILED,s.OTHER_ERROR,d,void 0,this._getConnectionFailedReasonDetails());else if(l)this.eventEmitter.emit(c.CONNECTION_DISCONNECTED,d);else{A.error(\"XMPP connection dropped!\");var p=i.Strophe.getLastErrorStatus();p>=500&&p<600?this.eventEmitter.emit(c.CONNECTION_FAILED,s.SERVER_ERROR,d||\"server-error\"):this.eventEmitter.emit(c.CONNECTION_FAILED,s.CONNECTION_DROPPED_ERROR,d||\"connection-dropped-error\")}}else n===i.Strophe.Status.AUTHFAIL&&this.eventEmitter.emit(c.CONNECTION_FAILED,s.PASSWORD_REQUIRED,r,t)}},{key:\"_connect\",value:function(e,t){this.anonymousConnectionFailed=!1,this.connectionFailed=!1,this.lastErrorMsg=void 0,this.connection.connect(e,t,this.connectionHandler.bind(this,{jid:e,password:t}))}},{key:\"attach\",value:function(e){var t=this.connectionTimes.attaching=window.performance.now();A.log(\"(TIME) Strophe Attaching\\t:\".concat(t)),this.connection.attach(e.jid,e.sid,parseInt(e.rid,10)+1,this.connectionHandler.bind(this,{jid:e.jid,password:e.password}))}},{key:\"connect\",value:function(e,t){if(!e){var n=this.options.hosts,r=n.anonymousdomain,i=n.domain,o=r||i,a=window.location;if(r){var s=a&&a.search;(s&&-1!==s.indexOf(\"login=true\")||this.token)&&(o=i)}e=o||a&&a.hostname}return this._connect(e,t)}},{key:\"createRoom\",value:function(e,t){var n=i.Strophe.getNodeFromJid(this.connection.jid),r=\"\".concat(e,\"@\").concat(this.options.hosts.muc,\"/\"),o=t.useNicks&&t.nick?t.nick:null;return o?n=t.nick:this.authenticatedUser||(n=n.substr(0,8)),(this.authenticatedUser||null!==o)&&(n+=\"-\".concat(a.a.randomHexString(6))),r+=n,this.connection.emuc.createRoom(r,null,t)}},{key:\"getJingleLog\",value:function(){var e=this.connection.jingle;return e?e.getLog():{}}},{key:\"getXmppLog\",value:function(){return(this.connection.logger||{}).log||null}},{key:\"dial\",value:function(){var e;(e=this.connection.rayo).dial.apply(e,arguments)}},{key:\"ping\",value:function(e){var t=this;return new Promise(function(n,r){t.isPingSupported()?t.connection.ping.ping(t.connection.domain,n,r,e):r(\"PING operation is not supported by the server\")})}},{key:\"setMute\",value:function(e,t){this.connection.moderate.setMute(e,t)}},{key:\"eject\",value:function(e){this.connection.moderate.eject(e)}},{key:\"getSessions\",value:function(){return this.connection.jingle.sessions}},{key:\"disconnect\",value:function(e){if(!this.disconnectInProgress&&this.connection){if(this.disconnectInProgress=!0,this.connection.flush(),null!=e){var t=e.type;\"beforeunload\"!==t&&\"unload\"!==t||(this.connection.options.sync=!0)}this.connection.disconnect(),!0!==this.connection.options.sync&&this.connection.flush()}else this.eventEmitter.emit(c.WRONG_STATE)}},{key:\"_initStrophePlugins\",value:function(){var e={jvb:{iceServers:[]},p2p:{iceServers:[]}},t=this.options.p2p&&this.options.p2p.stunServers||k;Array.isArray(t)&&(A.info(\"P2P STUN servers: \",t),e.p2p.iceServers=t),this.options.p2p&&this.options.p2p.iceTransportPolicy&&(A.info(\"P2P ICE transport policy: \",this.options.p2p.iceTransportPolicy),e.p2p.iceTransportPolicy=this.options.p2p.iceTransportPolicy),Object(l.a)(this),Object(d.a)(this,this.eventEmitter,e),Object(p.a)(),Object(h.a)(this),Object(f.a)(),Object(m.a)()}},{key:\"_getConnectionFailedReasonDetails\",value:function(){var e={};if(this.options.deploymentInfo&&this.options.deploymentInfo.shard&&this.connection._proto&&this.connection._proto.lastResponseHeaders){var t=this.connection._proto.lastResponseHeaders.trim().split(/[\\r\\n]+/),n={};t.forEach(function(e){var t=e.split(\": \"),r=t.shift(),i=t.join(\": \");n[r]=i}),e.shard_changed=this.options.deploymentInfo.shard!==n[\"x-jitsi-shard\"]}return e.suspend_time=this.connection.ping.getPingSuspendTime(),e}},{key:\"sendDominantSpeakerEvent\",value:function(e){if(this.speakerStatsComponentAddress&&e){var t=Object(i.$msg)({to:this.speakerStatsComponentAddress});t.c(\"speakerstats\",{xmlns:\"http://jitsi.org/jitmeet\",room:e}).up(),this.connection.send(t)}}},{key:\"tryParseJSONAndVerify\",value:function(e){try{var t=JSON.parse(e);if(t&&\"object\"===E(t)){var n=t[O];if(void 0!==n)return t;A.debug(\"parsing valid json but does not have correct structure\",\"topic: \",n)}}catch(e){return!1}return!1}},{key:\"_onPrivateMessage\",value:function(e){var t=e.getAttribute(\"from\");if(this.speakerStatsComponentAddress&&t===this.speakerStatsComponentAddress){var n=$(e).find(\">json-message\").text(),r=this.tryParseJSONAndVerify(n);return r&&\"speakerstats\"===r[O]&&r.users&&this.eventEmitter.emit(b.a.SPEAKER_STATS_RECEIVED,r.users),!0}}}])&&T(n.prototype,r),o&&T(n,o),t}()}).call(this,\"modules/xmpp/xmpp.js\")},function(e,t,n){\"use strict\";n.r(t),n.d(t,\"CONNECTION_DROPPED_ERROR\",function(){return r}),n.d(t,\"OTHER_ERROR\",function(){return i}),n.d(t,\"PASSWORD_REQUIRED\",function(){return o}),n.d(t,\"SERVER_ERROR\",function(){return a});var r=\"connection.droppedError\",i=\"connection.otherError\",o=\"connection.passwordRequired\",a=\"connection.serverError\"},function(e,t,n){\"use strict\";n.d(t,\"a\",function(){return r}),n.d(t,\"b\",function(){return i});var r=\"signaling.peerMuted\",i=\"signaling.peerVideoType\"},function(e,t,n){\"use strict\";(function(e){var r=n(15),i=n(12),o=n(3);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var s=n(4).getLogger(e),c=n(10),u=!1,l=!1,d=null,p={intChromeExtPromise:null,obtainStream:null,init:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{desktopSharingChromeDisabled:!1,desktopSharingChromeExtId:null,desktopSharingFirefoxDisabled:!1},t=arguments.length>1?arguments[1]:void 0;this.options=e,d=t,this.obtainStream=this._createObtainStreamMethod(e),this.obtainStream||s.info(\"Desktop sharing disabled\")},_createObtainStreamMethod:function(e){var t=this;return o.a.isNWJS()?function(e,t,n){window.JitsiMeetNW.obtainDesktopStream(t,function(e,t){var o;o=e&&\"InvalidStateError\"===e.name?new r.a(i.CHROME_EXTENSION_USER_CANCELED):new r.a(e,t,[\"desktop\"]),\"function\"==typeof n&&n(o)})}:o.a.isElectron()?this.obtainScreenOnElectron:o.a.isChrome()||o.a.isOpera()?o.a.supportsGetDisplayMedia()&&!e.desktopSharingChromeDisabled?this.obtainScreenFromGetDisplayMedia:e.desktopSharingChromeDisabled||!e.desktopSharingChromeExtId?null:(s.info(\"Using Chrome extension for desktop sharing\"),this.intChromeExtPromise=function(e){return function(e){0===$(\"link[rel=chrome-webstore-item]\").length&&$(\"head\").append('<link rel=\"chrome-webstore-item\">'),$(\"link[rel=chrome-webstore-item]\").attr(\"href\",h(e))}(e),new Promise(function(t){f(function(e,n){u=e,l=n,s.info(\"Chrome extension installed: \".concat(u,\" updateRequired: \").concat(l)),t()},e)})}(e).then(function(){t.intChromeExtPromise=null}),this.obtainScreenFromExtension):o.a.isFirefox()?e.desktopSharingFirefoxDisabled?null:o.a.supportsGetDisplayMedia()?this.obtainScreenFromGetDisplayMedia:this.obtainScreenOnFirefox:o.a.isEdge()&&o.a.supportsGetDisplayMedia()?this.obtainScreenFromGetDisplayMedia:(s.log(\"Screen sharing not supported by the current browser: \",o.a.getName()),null)},isSupported:function(){return null!==this.obtainStream},obtainScreenOnFirefox:function(e,t,n){!function(e,t,n){d([\"screen\"],e).then(function(e){return t({stream:e})},n)}(e.gumOptions,t,n)},obtainScreenOnElectron:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1?arguments[1]:void 0,n=arguments.length>2?arguments[2]:void 0;if(window.JitsiMeetScreenObtainer&&window.JitsiMeetScreenObtainer.openDesktopPicker){var o=e.desktopSharingSources,a=e.gumOptions;window.JitsiMeetScreenObtainer.openDesktopPicker({desktopSharingSources:o||this.options.desktopSharingChromeSources},function(e,r){return m({response:{streamId:e,streamType:r},gumOptions:a},t,n)},function(e){return n(new r.a(i.ELECTRON_DESKTOP_PICKER_ERROR,e))})}else n(new r.a(i.ELECTRON_DESKTOP_PICKER_NOT_FOUND))},obtainScreenFromExtension:function(e,t,n){var o=this;if(null===this.intChromeExtPromise){var a=this.options,c=a.desktopSharingChromeExtId,d=a.desktopSharingChromeSources,p=e.gumOptions,h={desktopSharingChromeExtId:c,desktopSharingChromeSources:e.desktopSharingSources||d,gumOptions:p};u?function(e,t,n){var o=e.desktopSharingChromeSources,a=e.desktopSharingChromeExtId,c=e.gumOptions;chrome.runtime.sendMessage(a,{getStream:!0,sources:o},function(e){if(e)s.log(\"Response from extension: \",e),m({response:e,gumOptions:c},t,n);else{var o=chrome.runtime.lastError;n(o instanceof Error?o:new r.a(i.CHROME_EXTENSION_GENERIC_ERROR,o))}})}(h,t,n):(l&&alert(\"Jitsi Desktop Streamer requires update. Changes will take effect after next Chrome restart.\"),this.handleExternalInstall(e,t,n))}else this.intChromeExtPromise.then(function(){o.obtainScreenFromExtension(e,t,n)})},handleExternalInstall:function(e,t,n,r){var i=h(this.options);e.listener(\"waitingForExtension\",i),this.checkForChromeExtensionOnInterval(e,t,n,r)},checkForChromeExtensionOnInterval:function(e,t,n){var o=this;!1!==e.checkAgain()?function(e,t,n){if(0===n)return Promise.reject();return new Promise(function(r,i){var o=n,a=window.setInterval(function(){f(function(e){e?(window.clearInterval(a),r()):0===--o&&(i(),window.clearInterval(a))},e)},t)})}(this.options,e.interval,1).then(function(){u=!0,e.listener(\"extensionFound\"),o.obtainScreenFromExtension(e,t,n)}).catch(function(){o.checkForChromeExtensionOnInterval(e,t,n)}):n(new r.a(i.CHROME_EXTENSION_INSTALLATION_ERROR))},obtainScreenFromGetDisplayMedia:function(e,t,n){s.info(\"Using getDisplayMedia for screen sharing\"),(navigator.getDisplayMedia?navigator.getDisplayMedia.bind(navigator):navigator.mediaDevices.getDisplayMedia.bind(navigator.mediaDevices))({video:!0}).then(function(n){(n&&n.getTracks()&&n.getTracks().length>0?n.getTracks()[0].applyConstraints(e.trackOptions):Promise.resolve()).then(function(){return t({stream:n,sourceId:n.id})})}).catch(function(){return n(new r.a(i.CHROME_EXTENSION_USER_CANCELED))})}};function h(e){return\"https://chrome.google.com/webstore/detail/\".concat(e.desktopSharingChromeExtId)}function f(e,t){\"undefined\"!=typeof chrome&&chrome&&chrome.runtime?chrome.runtime.sendMessage(t.desktopSharingChromeExtId,{getVersion:!0},function(n){if(!n||!n.version)return s.warn(\"Extension not installed?: \",chrome.runtime.lastError),void e(!1,!1);var r=n.version;s.log(\"Extension version is: \".concat(r));var i=function(e,t){try{for(var n=e.split(\".\"),r=t.split(\".\"),i=Math.max(n.length,r.length),o=0;o<i;o++){var a=0,u=0;if(o<n.length&&(a=parseInt(n[o],10)),o<r.length&&(u=parseInt(r[o],10)),isNaN(a)||isNaN(u))return!0;if(a!==u)return a>u}return!1}catch(e){return c.callErrorHandler(e),s.error(\"Failed to parse extension version\",e),!0}}(t.desktopSharingChromeMinExtVersion,r);e(!i,i)}):e(!1,!1)}function m(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{response:{},gumOptions:{}},t=arguments.length>1?arguments[1]:void 0,n=arguments.length>2?arguments[2]:void 0,o=e.response||{},s=o.streamId,c=o.streamType,u=o.error;if(s){var l=function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);\"function\"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),r.forEach(function(t){a(e,t,n[t])})}return e}({desktopStream:s},e.gumOptions);d([\"desktop\"],l).then(function(e){return t({stream:e,sourceId:s,sourceType:c})},n)}else{if(\"\"===s)return void n(new r.a(i.CHROME_EXTENSION_USER_CANCELED));n(new r.a(i.CHROME_EXTENSION_GENERIC_ERROR,u))}}t.a=p}).call(this,\"modules/RTC/ScreenObtainer.js\")},function(e,t,n){\"use strict\";function r(e){return(r=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}var i=!0,o=!0,a={disableLog:function(e){return\"boolean\"!=typeof e?new Error(\"Argument type: \"+r(e)+\". Please use a boolean.\"):(i=e,e?\"adapter.js logging disabled\":\"adapter.js logging enabled\")},disableWarnings:function(e){return\"boolean\"!=typeof e?new Error(\"Argument type: \"+r(e)+\". Please use a boolean.\"):(o=!e,\"adapter.js deprecation warnings \"+(e?\"disabled\":\"enabled\"))},log:function(){if(\"object\"===(\"undefined\"==typeof window?\"undefined\":r(window))){if(i)return;\"undefined\"!=typeof console&&\"function\"==typeof console.log&&console.log.apply(console,arguments)}},deprecated:function(e,t){o&&console.warn(e+\" is deprecated, please use \"+t+\" instead.\")},extractVersion:function(e,t,n){var r=e.match(t);return r&&r.length>=n&&parseInt(r[n],10)},detectBrowser:function(e){var t=e&&e.navigator,n={browser:null,version:null};if(void 0===e||!e.navigator)return n.browser=\"Not a browser.\",n;if(t.mozGetUserMedia)n.browser=\"firefox\",n.version=this.extractVersion(t.userAgent,/Firefox\\/(\\d+)\\./,1);else if(t.webkitGetUserMedia)if(e.webkitRTCPeerConnection)n.browser=\"chrome\",n.version=this.extractVersion(t.userAgent,/Chrom(e|ium)\\/(\\d+)\\./,2);else{if(!t.userAgent.match(/Version\\/(\\d+).(\\d+)/))return n.browser=\"Unsupported webkit-based browser with GUM support but no WebRTC support.\",n;n.browser=\"safari\",n.version=this.extractVersion(t.userAgent,/AppleWebKit\\/(\\d+)\\./,1)}else if(t.mediaDevices&&t.userAgent.match(/Edge\\/(\\d+).(\\d+)$/))n.browser=\"edge\",n.version=this.extractVersion(t.userAgent,/Edge\\/(\\d+).(\\d+)$/,2);else{if(!t.mediaDevices||!t.userAgent.match(/AppleWebKit\\/(\\d+)\\./))return n.browser=\"Not a supported browser.\",n;n.browser=\"safari\",n.version=this.extractVersion(t.userAgent,/AppleWebKit\\/(\\d+)\\./,1)}return n}};e.exports={log:a.log,deprecated:a.deprecated,disableLog:a.disableLog,disableWarnings:a.disableWarnings,extractVersion:a.extractVersion,shimCreateObjectURL:a.shimCreateObjectURL,detectBrowser:a.detectBrowser.bind(a)}},function(e,t){e.exports={ENVIRONMENT:\"environment\",USER:\"user\"}},function(e,t){function n(e){return(n=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}var r;r=function(){return this}();try{r=r||new Function(\"return this\")()}catch(e){\"object\"===(\"undefined\"==typeof window?\"undefined\":n(window))&&(r=window)}e.exports=r},function(e,t,n){\"use strict\";(function(e){n.d(t,\"a\",function(){return v}),n.d(t,\"b\",function(){return y});var r=n(4),i=n(2),o=n(17),a=n(9),s=n(3),c=n(7),u=n.n(c),l=n(6);function d(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function p(e,t,n){return t&&d(e.prototype,t),n&&d(e,n),e}var h=Object(r.getLogger)(e),f=500,m=2e3,v={ACTIVE:\"active\",INACTIVE:\"inactive\",INTERRUPTED:\"interrupted\",RESTORING:\"restoring\"},y=function(){function e(t,n,r){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this.rtc=t,this.conference=n,this.trackTimers={},this.connStatusFromJvb={},this.outOfLastNTimeout=\"number\"==typeof r.outOfLastNTimeout?r.outOfLastNTimeout:f,this.rtcMuteTimeout=\"number\"==typeof r.rtcMuteTimeout?r.rtcMuteTimeout:m,this.rtcMutedTimestamp={},h.info(\"RtcMuteTimeout set to: \".concat(this.rtcMuteTimeout)),this.enteredLastNTimestamp=new Map,this.restoringTimers=new Map}return p(e,null,[{key:\"_getNewStateForJvbMode\",value:function(e,t,n,r,i){return e?r?v.ACTIVE:s.a.supportsVideoMuteOnConnInterrupted()?i?t?n?v.INTERRUPTED:v.RESTORING:v.INACTIVE:v.ACTIVE:t?v.ACTIVE:v.INACTIVE:v.INTERRUPTED}},{key:\"_getNewStateForP2PMode\",value:function(e,t){return s.a.supportsVideoMuteOnConnInterrupted()?e||!t?v.ACTIVE:v.INTERRUPTED:v.ACTIVE}}]),p(e,[{key:\"_getVideoFrozenTimeout\",value:function(e){return this.rtc.isInLastN(e)?this.rtcMuteTimeout:this.outOfLastNTimeout}},{key:\"init\",value:function(){this._onEndpointConnStatusChanged=this.onEndpointConnStatusChanged.bind(this),this.rtc.addListener(u.a.ENDPOINT_CONN_STATUS_CHANGED,this._onEndpointConnStatusChanged),this._onP2PStatus=this.refreshConnectionStatusForAll.bind(this),this.conference.on(i.P2P_STATUS,this._onP2PStatus),s.a.supportsVideoMuteOnConnInterrupted()&&(this._onTrackRtcMuted=this.onTrackRtcMuted.bind(this),this.rtc.addListener(u.a.REMOTE_TRACK_MUTE,this._onTrackRtcMuted),this._onTrackRtcUnmuted=this.onTrackRtcUnmuted.bind(this),this.rtc.addListener(u.a.REMOTE_TRACK_UNMUTE,this._onTrackRtcUnmuted),this._onRemoteTrackAdded=this.onRemoteTrackAdded.bind(this),this.conference.on(i.TRACK_ADDED,this._onRemoteTrackAdded),this._onRemoteTrackRemoved=this.onRemoteTrackRemoved.bind(this),this.conference.on(i.TRACK_REMOVED,this._onRemoteTrackRemoved),this._onSignallingMuteChanged=this.onSignallingMuteChanged.bind(this)),this._onLastNChanged=this._onLastNChanged.bind(this),this.conference.on(i.LAST_N_ENDPOINTS_CHANGED,this._onLastNChanged),this._onLastNValueChanged=this.refreshConnectionStatusForAll.bind(this),this.rtc.on(u.a.LASTN_VALUE_CHANGED,this._onLastNValueChanged)}},{key:\"dispose\",value:function(){this.rtc.removeListener(u.a.ENDPOINT_CONN_STATUS_CHANGED,this._onEndpointConnStatusChanged),s.a.supportsVideoMuteOnConnInterrupted()&&(this.rtc.removeListener(u.a.REMOTE_TRACK_MUTE,this._onTrackRtcMuted),this.rtc.removeListener(u.a.REMOTE_TRACK_UNMUTE,this._onTrackRtcUnmuted),this.conference.off(i.TRACK_ADDED,this._onRemoteTrackAdded),this.conference.off(i.TRACK_REMOVED,this._onRemoteTrackRemoved)),this.conference.off(i.LAST_N_ENDPOINTS_CHANGED,this._onLastNChanged),this.rtc.removeListener(u.a.LASTN_VALUE_CHANGED,this._onLastNValueChanged),this.conference.off(i.P2P_STATUS,this._onP2PStatus);for(var e=Object.keys(this.trackTimers),t=0;t<e.length;t++){var n=e[t];this.clearTimeout(n),this.clearRtcMutedTimestamp(n)}this.connStatusFromJvb={}}},{key:\"onEndpointConnStatusChanged\",value:function(e,t){h.debug(\"Detector RTCEvents.ENDPOINT_CONN_STATUS_CHANGED(\".concat(Date.now(),\"): \").concat(e,\": \").concat(t)),e!==this.conference.myUserId()&&(this.connStatusFromJvb[e]=t,this.figureOutConnectionStatus(e))}},{key:\"_changeConnectionStatus\",value:function(e,t){if(e.getConnectionStatus()!==t){var n=e.getId();e._setConnectionStatus(t),h.debug(\"Emit endpoint conn status(\".concat(Date.now(),\") \").concat(n,\": \").concat(t)),l.a.sendLog(JSON.stringify({id:\"peer.conn.status\",participant:n,status:t})),this.conference.eventEmitter.emit(i.PARTICIPANT_CONN_STATUS_CHANGED,n,t)}}},{key:\"clearTimeout\",value:function(e){this.trackTimers[e]&&(window.clearTimeout(this.trackTimers[e]),this.trackTimers[e]=null)}},{key:\"clearRtcMutedTimestamp\",value:function(e){this.rtcMutedTimestamp[e]=null}},{key:\"onRemoteTrackAdded\",value:function(e){e.isLocal()||e.getType()!==a.b||(h.debug(\"Detector on remote track added for: \".concat(e.getParticipantId())),e.on(o.TRACK_MUTE_CHANGED,this._onSignallingMuteChanged))}},{key:\"onRemoteTrackRemoved\",value:function(e){if(!e.isLocal()&&e.getType()===a.b){var t=e.getParticipantId();h.debug(\"Detector on remote track removed: \".concat(t)),e.off(o.TRACK_MUTE_CHANGED,this._onSignallingMuteChanged),this.clearTimeout(t),this.clearRtcMutedTimestamp(t),this.figureOutConnectionStatus(t)}}},{key:\"isVideoTrackFrozen\",value:function(e){if(!s.a.supportsVideoMuteOnConnInterrupted())return!1;var t=e.getId(),n=e.hasAnyVideoTrackWebRTCMuted(),r=this.rtcMutedTimestamp[t],i=this._getVideoFrozenTimeout(t);return n&&\"number\"==typeof r&&Date.now()-r>=i}},{key:\"refreshConnectionStatusForAll\",value:function(){var e=this.conference.getParticipants(),t=!0,n=!1,r=void 0;try{for(var i,o=e[Symbol.iterator]();!(t=(i=o.next()).done);t=!0){var a=i.value;this.figureOutConnectionStatus(a.getId())}}catch(e){n=!0,r=e}finally{try{t||null==o.return||o.return()}finally{if(n)throw r}}}},{key:\"figureOutConnectionStatus\",value:function(t){var n=this.conference.getParticipantById(t);if(n){var r=this.conference.isP2PActive(),i=this._isRestoringTimedout(t),o=0===this.rtc.getLastN(),a=n.isVideoMuted()||o,s=this.isVideoTrackFrozen(n),c=this.rtc.isInLastN(t),u=this.connStatusFromJvb[t];\"boolean\"!=typeof u&&(h.debug(\"Assuming connection active by JVB - no notification\"),u=!0);var l=r?e._getNewStateForP2PMode(a,s):e._getNewStateForJvbMode(u,c,i,a,s);l!==v.RESTORING&&this._clearRestoringTimer(t),h.debug(\"Figure out conn status for \".concat(t,\", is video muted: \").concat(a,\" is active(jvb): \").concat(u,\" video track frozen: \").concat(s,\" p2p mode: \").concat(r,\" is in last N: \").concat(c,\" currentStatus => newStatus: \").concat(n.getConnectionStatus(),\" => \").concat(l)),this._changeConnectionStatus(n,l)}else h.warn(\"figure out conn status - no participant for: \".concat(t))}},{key:\"_onLastNChanged\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],n=Date.now();h.debug(\"leaving/entering lastN\",e,t,n);var r=!0,i=!1,o=void 0;try{for(var a,s=e[Symbol.iterator]();!(r=(a=s.next()).done);r=!0){var c=a.value;this.enteredLastNTimestamp.delete(c),this._clearRestoringTimer(c),this.figureOutConnectionStatus(c)}}catch(e){i=!0,o=e}finally{try{r||null==s.return||s.return()}finally{if(i)throw o}}var u=!0,l=!1,d=void 0;try{for(var p,f=t[Symbol.iterator]();!(u=(p=f.next()).done);u=!0){var m=p.value;this.enteredLastNTimestamp.set(m,n),this.figureOutConnectionStatus(m)}}catch(e){l=!0,d=e}finally{try{u||null==f.return||f.return()}finally{if(l)throw d}}}},{key:\"_clearRestoringTimer\",value:function(e){var t=this.restoringTimers.get(e);t&&(clearTimeout(t),this.restoringTimers.delete(e))}},{key:\"_isRestoringTimedout\",value:function(e){var t=this,n=this.enteredLastNTimestamp.get(e);return!!(n&&Date.now()-n>=5e3)||(this.restoringTimers.get(e)||this.restoringTimers.set(e,setTimeout(function(){return t.figureOutConnectionStatus(e)},5e3)),!1)}},{key:\"onTrackRtcMuted\",value:function(e){var t=this,n=e.getParticipantId(),r=this.conference.getParticipantById(n);if(h.debug(\"Detector track RTC muted: \".concat(n),Date.now()),r){if(this.rtcMutedTimestamp[n]=Date.now(),!r.isVideoMuted()){this.clearTimeout(n);var i=this._getVideoFrozenTimeout(n);this.trackTimers[n]=window.setTimeout(function(){h.debug(\"Set RTC mute timeout for: \".concat(n,\"                     of \").concat(i,\" ms\")),t.clearTimeout(n),t.figureOutConnectionStatus(n)},i)}}else h.error(\"No participant for id: \".concat(n))}},{key:\"onTrackRtcUnmuted\",value:function(e){var t=e.getParticipantId();h.debug(\"Detector track RTC unmuted: \".concat(t),Date.now()),this.clearTimeout(t),this.clearRtcMutedTimestamp(t),this.figureOutConnectionStatus(t)}},{key:\"onSignallingMuteChanged\",value:function(e){var t=e.getParticipantId();h.debug(\"Detector on track signalling mute changed: \".concat(t),e.isMuted()),this.figureOutConnectionStatus(t)}}]),e}()}).call(this,\"modules/connectivity/ParticipantConnectionStatus.js\")},function(e,t,n){\"use strict\";t.a={getFocusRecordingUpdate:function(e){var t=e&&e.getElementsByTagName(\"jibri-recording-status\")[0];if(t)return{error:t.getAttribute(\"failure_reason\"),recordingMode:t.getAttribute(\"recording_mode\"),sessionID:t.getAttribute(\"session_id\"),status:t.getAttribute(\"status\")}},getHiddenDomainUpdate:function(e){var t=e.getElementsByTagName(\"live-stream-view-url\")[0],n=t&&t.textContent,r=e.getElementsByTagName(\"mode\")[0],i=r&&r.textContent&&r.textContent.toLowerCase(),o=e.getElementsByTagName(\"session_id\")[0];return{liveStreamViewURL:n,mode:i,sessionID:o&&o.textContent}},getSessionIdFromIq:function(e){var t=e&&e.getElementsByTagName(\"jibri\")[0];return t&&t.getAttribute(\"session_id\")},getSessionId:function(e){var t=e.getElementsByTagName(\"session_id\")[0];return t&&t.textContent},isFromFocus:function(e){return e.getAttribute(\"from\").includes(\"focus\")}}},function(e,t,n){\"use strict\";(function(e){n.d(t,\"a\",function(){return O});var r=n(8),i=n(86),o=n.n(i),a=n(4),s=n(1),c=n(87),u=n(88),l=n(32),d=n(18),p=n(50),h=n(5),f=n(89),m=n(7),v=n.n(m),y=n(6),g=n(0),_=n.n(g),S=n(10),b=n.n(S);function E(e){return(E=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function T(e){return(T=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function C(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function R(e,t,n){return t&&C(e.prototype,t),n&&C(e,n),e}function w(e,t){return(w=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function A(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}var k=Object(a.getLogger)(e),O=function(e){function t(e,n,r,i,a,s,c,u){var l,d,p;return function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t),d=this,(l=!(p=T(t).call(this,e,n,r,i,a,s,u))||\"object\"!==E(p)&&\"function\"!=typeof p?A(d):p)._bridgeSessionId=null,l._iceCheckingStartedTimestamp=null,l._gatheringStartedTimestamp=null,l._localVideoActive=!0,l._remoteVideoActive=!0,l._gatheringReported=!1,l.lasticecandidate=!1,l.closed=!1,l.isP2P=c,l.signalingLayer=new f.a,l.modificationQueue=o.a.queue(l._processQueueTasks.bind(A(A(l))),1),l.wasConnected=!1,l.establishmentDuration=void 0,l}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&w(e,t)}(t,u[\"a\"]),R(t,null,[{key:\"parseVideoSenders\",value:function(e){var t=e.find('>content[name=\"video\"]');if(t.length){var n=t[0].getAttribute(\"senders\");if(\"both\"===n||\"initiator\"===n||\"responder\"===n||\"none\"===n)return n}return null}}]),R(t,[{key:\"_assertNotEnded\",value:function(e){return this.state!==l.b||(k.log(\"The session has ended - cancelling action: \".concat(e)),!1)}},{key:\"doInitialize\",value:function(e){var t=this;this.failICE=Boolean(e.failICE),this.lasticecandidate=!1,this.options=e,this.isReconnect=!1,this.wasstable=!1,this.webrtcIceUdpDisable=Boolean(e.webrtcIceUdpDisable),this.webrtcIceTcpDisable=Boolean(e.webrtcIceTcpDisable);var n={disableRtx:e.disableRtx};if(e.gatherStats&&(n.maxstats=300),this.isP2P){n.disableSimulcast=!0,n.disableH264=e.p2p&&e.p2p.disableH264,n.preferH264=e.p2p&&e.p2p.preferH264;var i=this._abtestSuspendVideoEnabled(e);void 0!==i&&(n.abtestSuspendVideo=i)}else n.disableSimulcast=e.disableSimulcast||e.preferH264&&!e.disableH264,n.preferH264=e.preferH264,n.enableFirefoxSimulcast=e.testing&&e.testing.enableFirefoxSimulcast,n.enableLayerSuspension=e.enableLayerSuspension;this.peerconnection=this.rtc.createPeerConnection(this.signalingLayer,this.iceConfig,this.isP2P,n),this.peerconnection.onicecandidate=function(e){if(e){var n=e.candidate,i=window.performance.now();if(n){null===t._gatheringStartedTimestamp&&(t._gatheringStartedTimestamp=i);var o=n.protocol;if(\"string\"==typeof o)if(\"tcp\"===(o=o.toLowerCase())||\"ssltcp\"===o){if(t.webrtcIceTcpDisable)return}else if(\"udp\"===o&&t.webrtcIceUdpDisable)return}else t._gatheringReported||(y.a.sendAnalytics(r.n,{phase:\"gathering\",value:i-t._gatheringStartedTimestamp,p2p:t.isP2P,initiator:t.isInitiator}),t._gatheringReported=!0);t.sendIceCandidate(n)}},this.peerconnection.onsignalingstatechange=function(){t.peerconnection&&(\"stable\"===t.peerconnection.signalingState?t.wasstable=!0:\"closed\"!==t.peerconnection.signalingState&&\"closed\"!==t.peerconnection.connectionState||t.closed||t.room.eventEmitter.emit(_.a.SUSPEND_DETECTED,t))},this.peerconnection.oniceconnectionstatechange=function(){if(t.peerconnection&&t._assertNotEnded(\"oniceconnectionstatechange\")){var e=window.performance.now();switch(t.isP2P||(t.room.connectionTimes[\"ice.state.\".concat(t.peerconnection.iceConnectionState)]=e),k.log(\"(TIME) ICE \".concat(t.peerconnection.iceConnectionState)+\" P2P? \".concat(t.isP2P,\":\\t\"),e),y.a.sendAnalytics(r.p,{p2p:t.isP2P,state:t.peerconnection.iceConnectionState,signaling_state:t.peerconnection.signalingState,reconnect:t.isReconnect,value:e}),t.room.eventEmitter.emit(_.a.ICE_CONNECTION_STATE_CHANGED,t,t.peerconnection.iceConnectionState),t.peerconnection.iceConnectionState){case\"checking\":t._iceCheckingStartedTimestamp=e;break;case\"connected\":if(\"stable\"===t.peerconnection.signalingState&&t.isReconnect&&t.room.eventEmitter.emit(_.a.CONNECTION_RESTORED,t),!t.wasConnected&&t.wasstable){y.a.sendAnalytics(r.n,{phase:\"checking\",value:e-t._iceCheckingStartedTimestamp,p2p:t.isP2P,initiator:t.isInitiator});var n=Math.min(t._iceCheckingStartedTimestamp,t._gatheringStartedTimestamp);t.establishmentDuration=e-n,y.a.sendAnalytics(r.n,{phase:\"establishment\",value:t.establishmentDuration,p2p:t.isP2P,initiator:t.isInitiator}),t.wasConnected=!0,t.room.eventEmitter.emit(_.a.CONNECTION_ESTABLISHED,t)}t.isReconnect=!1;break;case\"disconnected\":if(t.closed)break;t.isReconnect=!0,t.wasstable&&t.room.eventEmitter.emit(_.a.CONNECTION_INTERRUPTED,t);break;case\"failed\":t.room.eventEmitter.emit(_.a.CONNECTION_ICE_FAILED,t)}}},this.peerconnection.onnegotiationneeded=function(){t.room.eventEmitter.emit(_.a.PEERCONNECTION_READY,t)},this.signalingLayer.setChatRoom(this.room),!this.isP2P&&e.enableLayerSuspension&&this.rtc.addListener(v.a.IS_SELECTED_CHANGED,function(e){t.peerconnection.setIsSelected(e),k.info(\"Doing local O/A due to IS_SELECTED_CHANGED event\"),t.modificationQueue.push(function(e){t._renegotiate().then(e).catch(e)})})}},{key:\"sendIceCandidate\",value:function(e){var t=this,n=new d.a(this.peerconnection.localDescription.sdp);if(e&&!this.lasticecandidate){var r=h.a.iceparams(n.media[e.sdpMLineIndex],n.session),i=h.a.candidateToJingle(e.candidate);if(!r||!i){return b.a.callErrorHandler(new Error(\"failed to get ice && jcand\")),void k.error(\"failed to get ice && jcand\")}r.xmlns=\"urn:xmpp:jingle:transports:ice-udp:1\",this.usedrip?(0===this.dripContainer.length&&setTimeout(function(){0!==t.dripContainer.length&&(t.sendIceCandidates(t.dripContainer),t.dripContainer=[])},20),this.dripContainer.push(e)):this.sendIceCandidates([e])}else k.log(\"sendIceCandidate: last candidate.\"),this.lasticecandidate=!0}},{key:\"sendIceCandidates\",value:function(e){var t=this;if(this._assertNotEnded(\"sendIceCandidates\")){k.log(\"sendIceCandidates\",e);for(var n=Object(s.$iq)({to:this.remoteJid,type:\"set\"}).c(\"jingle\",{xmlns:\"urn:xmpp:jingle:1\",action:\"transport-info\",initiator:this.initiatorJid,sid:this.sid}),r=new d.a(this.peerconnection.localDescription.sdp),i=function(i){var o=e.filter(function(e){return e.sdpMLineIndex===i}),a=h.a.parseMLine(r.media[i].split(\"\\r\\n\")[0]);if(o.length>0){var s=h.a.iceparams(r.media[i],r.session);s.xmlns=\"urn:xmpp:jingle:transports:ice-udp:1\",n.c(\"content\",{creator:t.initiatorJid===t.localJid?\"initiator\":\"responder\",name:o[0].sdpMid?o[0].sdpMid:a.media}).c(\"transport\",s);for(var c=0;c<o.length;c++){var u=h.a.candidateToJingle(o[c].candidate);t.failICE&&(u.ip=\"1.1.1.1\"),n.c(\"candidate\",u).up()}var l=h.a.findLine(r.media[i],\"a=fingerprint:\",r.session);if(l){var d=h.a.parseFingerprint(l);d.required=!0,n.c(\"fingerprint\",{xmlns:\"urn:xmpp:jingle:apps:dtls:0\"}).t(d.fingerprint),delete d.fingerprint,n.attrs(d),n.up()}n.up(),n.up()}},o=0;o<r.media.length;o++)i(o);this.connection.sendIQ(n,null,this.newJingleErrorHandler(n),1e4)}}},{key:\"sendIceFailedNotification\",value:function(){var e=Object(s.$iq)({to:this.remoteJid,type:\"set\"}).c(\"jingle\",{xmlns:\"urn:xmpp:jingle:1\",action:\"session-info\",initiator:this.initiatorJid,sid:this.sid}).c(\"ice-state\",{xmlns:\"http://jitsi.org/protocol/focus\"}).t(\"failed\").up();this._bridgeSessionId&&e.c(\"bridge-session\",{xmlns:\"http://jitsi.org/protocol/focus\",id:this._bridgeSessionId}),this.connection.sendIQ(e,null,this.newJingleErrorHandler(e),65)}},{key:\"addIceCandidates\",value:function(e){var t=this;if(\"closed\"!==this.peerconnection.signalingState){var n=[];if(e.find(\">content>transport>candidate\").each(function(e,t){var r=h.a.candidateFromJingle(t);r=r.replace(\"\\r\\n\",\"\").replace(\"a=\",\"\");var i=new RTCIceCandidate({sdpMLineIndex:0,sdpMid:\"\",candidate:r});n.push(i)}),n.length){k.debug(\"Queued add (\".concat(n.length,\") ICE candidates task...\")),this.modificationQueue.push(function(e){for(var r=0;r<n.length;r++){var i=n[r];t.peerconnection.addIceCandidate(i).then(function(){return k.debug(\"addIceCandidate ok!\")},function(e){return k.error(\"addIceCandidate failed!\",e)})}e()})}else k.error(\"No ICE candidates to add ?\",e[0]&&e[0].outerHTML)}else k.warn(\"Ignored add ICE candidate when in closed state\")}},{key:\"readSsrcInfo\",value:function(e){var t=this;$(e).find('>description>source[xmlns=\"urn:xmpp:jingle:apps:rtp:ssma:0\"]').each(function(e,n){var r=Number(n.getAttribute(\"ssrc\"));t.isP2P?t.signalingLayer.setSSRCOwner(r,s.Strophe.getResourceFromJid(t.remoteJid)):$(n).find('>ssrc-info[xmlns=\"http://jitsi.org/jitmeet\"]').each(function(e,n){var i=n.getAttribute(\"owner\");i&&i.length&&(isNaN(r)||r<0?k.warn(\"Invalid SSRC \".concat(r,\" value received\")+\" for \".concat(i)):t.signalingLayer.setSSRCOwner(r,s.Strophe.getResourceFromJid(i)))})})}},{key:\"generateRecvonlySsrc\",value:function(){this.peerconnection?this.peerconnection.generateRecvonlySsrc():k.error(\"Unable to generate recvonly SSRC - no peerconnection\")}},{key:\"acceptOffer\",value:function(e,t,n,r){var i=this;this.setOfferAnswerCycle(e,function(){i.sendSessionAccept(t,n)},n,r)}},{key:\"invite\",value:function(e){var t=this;if(!this.isInitiator)throw new Error(\"Trying to invite from the responder session\");this.modificationQueue.push(function(n){var r=!0,i=!1,o=void 0;try{for(var a,s=e[Symbol.iterator]();!(r=(a=s.next()).done);r=!0){var c=a.value;t.peerconnection.addTrack(c)}}catch(e){i=!0,o=e}finally{try{r||null==s.return||s.return()}finally{if(i)throw o}}t.peerconnection.createOffer(t.mediaConstraints).then(function(e){t.peerconnection.setLocalDescription(e).then(function(){t.sendSessionInitiate(t.peerconnection.localDescription.sdp),n()},function(t){k.error(\"Failed to set local SDP\",t,e),n(t)})},function(e){k.error(\"Failed to create an offer\",e,t.mediaConstraints),n(e)})},function(e){e?k.error(\"invite error\",e):k.debug(\"invite executed - OK\")})}},{key:\"sendSessionInitiate\",value:function(e){var t=Object(s.$iq)({to:this.remoteJid,type:\"set\"}).c(\"jingle\",{xmlns:\"urn:xmpp:jingle:1\",action:\"session-initiate\",initiator:this.initiatorJid,sid:this.sid});new d.a(e).toJingle(t,this.isInitiator?\"initiator\":\"responder\"),t=t.tree(),k.info(\"Session-initiate: \",t),this.connection.sendIQ(t,function(){k.info('Got RESULT for \"session-initiate\"')},function(e){k.error('\"session-initiate\" error',e)},1e4)}},{key:\"setAnswer\",value:function(e){if(!this.isInitiator)throw new Error(\"Trying to set an answer on the responder session\");this.setOfferAnswerCycle(e,function(){k.info(\"setAnswer - succeeded\")},function(e){k.error(\"setAnswer failed: \",e)})}},{key:\"setOfferAnswerCycle\",value:function(e,t,n,r){var i=this;this.modificationQueue.push(function(t){if(r){var n=!0,o=!1,a=void 0;try{for(var s,c=r[Symbol.iterator]();!(n=(s=c.next()).done);n=!0){var u=s.value;i.peerconnection.addTrack(u)}}catch(e){o=!0,a=e}finally{try{n||null==c.return||c.return()}finally{if(o)throw a}}}var p=i._processNewJingleOfferIq(e),h=i.peerconnection.localDescription.sdp,f=$(e).find('>bridge-session[xmlns=\"http://jitsi.org/protocol/focus\"]').attr(\"id\");f!==i._bridgeSessionId&&(i._bridgeSessionId=f),i._renegotiate(p.raw).then(function(){if(i.state===l.c&&(i.state=l.a,i.isP2P&&!i._localVideoActive&&i.sendContentModify(i._localVideoActive)),h){var e=new d.a(i.peerconnection.localDescription.sdp);i.notifyMySSRCUpdate(new d.a(h),e)}t()},function(e){k.error(\"Error renegotiating after setting new remote \".concat(i.isInitiator?\"answer: \":\"offer: \").concat(e),p),i._onJingleFatalError(e),t(e)})},function(e){e?n(e):t()})}},{key:\"replaceTransport\",value:function(e,t,n){var r=this;this.room.eventEmitter.emit(_.a.ICE_RESTARTING,this);var i=e.clone();e.find(\">content[name='data']\").attr(\"senders\",\"rejected\"),e.find(\">content>description>source\").remove(),e.find(\">content>description>ssrc-group\").remove(),this.setOfferAnswerCycle(e,function(){r.setOfferAnswerCycle(i,function(){var e=new d.a(r.peerconnection.localDescription.sdp);r.sendTransportAccept(e,t,n),r.room.eventEmitter.emit(_.a.ICE_RESTART_SUCCESS,r,i)},n)},n)}},{key:\"sendSessionAccept\",value:function(e,t){var n=this,r=new d.a(this.peerconnection.localDescription.sdp),i=Object(s.$iq)({to:this.remoteJid,type:\"set\"}).c(\"jingle\",{xmlns:\"urn:xmpp:jingle:1\",action:\"session-accept\",initiator:this.initiatorJid,responder:this.responderJid,sid:this.sid});this.webrtcIceTcpDisable&&(r.removeTcpCandidates=!0),this.webrtcIceUdpDisable&&(r.removeUdpCandidates=!0),this.failICE&&(r.failICE=!0),r.toJingle(i,this.initiatorJid===this.localJid?\"initiator\":\"responder\",null),i=i.tree(),k.info(\"Sending session-accept\",i),this.connection.sendIQ(i,e,this.newJingleErrorHandler(i,function(e){t(e),n.room.eventEmitter.emit(_.a.SESSION_ACCEPT_TIMEOUT,n)}),1e4)}},{key:\"sendContentModify\",value:function(e){var t=e?\"both\":\"none\",n=Object(s.$iq)({to:this.remoteJid,type:\"set\"}).c(\"jingle\",{xmlns:\"urn:xmpp:jingle:1\",action:\"content-modify\",initiator:this.initiatorJid,sid:this.sid}).c(\"content\",{name:\"video\",senders:t});k.info(\"Sending content-modify, video senders: \".concat(t)),this.connection.sendIQ(n,null,this.newJingleErrorHandler(n),1e4)}},{key:\"sendTransportAccept\",value:function(e,t,n){var r=this,i=Object(s.$iq)({to:this.remoteJid,type:\"set\"}).c(\"jingle\",{xmlns:\"urn:xmpp:jingle:1\",action:\"transport-accept\",initiator:this.initiatorJid,sid:this.sid});e.media.forEach(function(t,n){var o=h.a.parseMLine(t.split(\"\\r\\n\")[0]);i.c(\"content\",{creator:r.initiatorJid===r.localJid?\"initiator\":\"responder\",name:o.media}),e.transportToJingle(n,i),i.up()}),i=i.tree(),k.info(\"Sending transport-accept: \",i),this.connection.sendIQ(i,t,this.newJingleErrorHandler(i,n),1e4)}},{key:\"sendTransportReject\",value:function(e,t){var n=Object(s.$iq)({to:this.remoteJid,type:\"set\"}).c(\"jingle\",{xmlns:\"urn:xmpp:jingle:1\",action:\"transport-reject\",initiator:this.initiatorJid,sid:this.sid});n=n.tree(),k.info(\"Sending 'transport-reject\",n),this.connection.sendIQ(n,e,this.newJingleErrorHandler(n,t),1e4)}},{key:\"terminate\",value:function(e,t,n){if(this.state!==l.b){if(!n||Boolean(n.sendSessionTerminate)){var r=Object(s.$iq)({to:this.remoteJid,type:\"set\"}).c(\"jingle\",{xmlns:\"urn:xmpp:jingle:1\",action:\"session-terminate\",initiator:this.initiatorJid,sid:this.sid}).c(\"reason\").c(n&&n.reason||\"success\");n&&n.reasonDescription&&r.up().c(\"text\").t(n.reasonDescription),r=r.tree(),k.info(\"Sending session-terminate\",r),this.connection.sendIQ(r,e,this.newJingleErrorHandler(r,t),1e4)}else k.info(\"Skipped sending session-terminate for \".concat(this));this.connection.jingle.terminate(this.sid)}}},{key:\"onTerminated\",value:function(e,t){this.state=l.b,this.establishmentDuration=void 0,k.info(\"Session terminated \".concat(this),e,t),this.close()}},{key:\"_parseSsrcInfoFromSourceAdd\",value:function(e,t){var n=[];return $(e).each(function(e,r){var i=$(r).attr(\"name\"),o=\"\";$(r).find('ssrc-group[xmlns=\"urn:xmpp:jingle:apps:rtp:ssma:0\"]').each(function(){var e=this.getAttribute(\"semantics\"),t=$(this).find(\">source\").map(function(){return this.getAttribute(\"ssrc\")}).get();t.length&&(o+=\"a=ssrc-group:\".concat(e,\" \").concat(t.join(\" \"),\"\\r\\n\"))}),$(r).find('source[xmlns=\"urn:xmpp:jingle:apps:rtp:ssma:0\"]').each(function(){var e=$(this).attr(\"ssrc\");t.containsSSRC(e)?k.warn(\"Source-add request for existing SSRC: \".concat(e)):$(this).find(\">parameter\").each(function(){o+=\"a=ssrc:\".concat(e,\" \").concat($(this).attr(\"name\")),$(this).attr(\"value\")&&$(this).attr(\"value\").length&&(o+=\":\".concat($(this).attr(\"value\"))),o+=\"\\r\\n\"})}),t.media.forEach(function(e,t){h.a.findLine(e,\"a=mid:\".concat(i))&&(n[t]||(n[t]=\"\"),n[t]+=o)})}),n}},{key:\"addRemoteStream\",value:function(e){this._addOrRemoveRemoteStream(!0,e)}},{key:\"removeRemoteStream\",value:function(e){this._addOrRemoveRemoteStream(!1,e)}},{key:\"_addOrRemoveRemoteStream\",value:function(e,t){var n=this,r=e?\"addRemoteStream\":\"removeRemoteStream\";e&&this.readSsrcInfo(t);this.modificationQueue.push(function(i){if(!n.peerconnection.localDescription||!n.peerconnection.localDescription.sdp){var o=\"\".concat(r,\" - localDescription not ready yet\");return k.error(o),void i(o)}k.log(\"Processing \".concat(r)),k.log(\"ICE connection state: \",n.peerconnection.iceConnectionState);var a=new d.a(n.peerconnection.localDescription.sdp),s=new d.a(n.peerconnection.remoteDescription.sdp),c=e?n._parseSsrcInfoFromSourceAdd(t,s):n._parseSsrcInfoFromSourceRemove(t,s),u=e?n._processRemoteAddSource(c):n._processRemoteRemoveSource(c);n._renegotiate(u.raw).then(function(){var e=new d.a(n.peerconnection.localDescription.sdp);k.log(\"\".concat(r,\" - OK, SDPs: \"),a,e),n.notifyMySSRCUpdate(a,e),i()},function(e){k.error(\"\".concat(r,\" failed:\"),e),i(e)})})}},{key:\"_processQueueTasks\",value:function(e,t){e(t)}},{key:\"_processNewJingleOfferIq\",value:function(e){var t=new d.a(\"\");return this.webrtcIceTcpDisable&&(t.removeTcpCandidates=!0),this.webrtcIceUdpDisable&&(t.removeUdpCandidates=!0),this.failICE&&(t.failICE=!0),t.fromJingle(e),this.readSsrcInfo($(e).find(\">content\")),t}},{key:\"_processRemoteRemoveSource\",value:function(e){var t=new d.a(this.peerconnection.remoteDescription.sdp);return e.forEach(function(e,n){(e=e.split(\"\\r\\n\")).pop(),e.forEach(function(e){t.media[n]=t.media[n].replace(\"\".concat(e,\"\\r\\n\"),\"\")})}),t.raw=t.session+t.media.join(\"\"),t}},{key:\"_processRemoteAddSource\",value:function(e){var t=new d.a(this.peerconnection.remoteDescription.sdp);return e.forEach(function(e,n){t.media[n]+=e}),t.raw=t.session+t.media.join(\"\"),t}},{key:\"_renegotiate\",value:function(e){if(\"closed\"===this.peerconnection.signalingState)return Promise.reject(\"Attempted to renegotiate in state closed\");var t=e||this.peerconnection.remoteDescription.sdp;if(!t)return Promise.reject(\"Can not renegotiate without remote description,\"+\"- current state: \".concat(this.state));var n=new RTCSessionDescription({type:this.isInitiator?\"answer\":\"offer\",sdp:t});return this.isInitiator?this._initiatorRenegotiate(n):this._responderRenegotiate(n)}},{key:\"_responderRenegotiate\",value:function(e){var t=this;return k.debug(\"Renegotiate: setting remote description\"),this.peerconnection.setRemoteDescription(e).then(function(){return k.debug(\"Renegotiate: creating answer\"),t.peerconnection.createAnswer(t.mediaConstraints).then(function(e){return k.debug(\"Renegotiate: setting local description\"),t.peerconnection.setLocalDescription(e)})})}},{key:\"_initiatorRenegotiate\",value:function(e){var t=this;return\"have-local-offer\"===this.peerconnection.signalingState?(k.debug(\"Renegotiate: setting remote description\"),this.peerconnection.setRemoteDescription(e).then(function(){return t._initiatorRenegotiate(e)})):(k.debug(\"Renegotiate: creating offer\"),this.peerconnection.createOffer(this.mediaConstraints).then(function(n){return k.debug(\"Renegotiate: setting local description\"),t.peerconnection.setLocalDescription(n).then(function(){return k.debug(\"Renegotiate: setting remote description\"),t.peerconnection.setRemoteDescription(e)})}))}},{key:\"replaceTrack\",value:function(e,t){var n=this,r=function(r){if(\"closed\"===n.peerconnection.signalingState||\"closed\"===n.peerconnection.connectionState||n.closed)r();else{var i=n.peerconnection.localDescription.sdp;!e&&t&&t.isVideoTrack()?n.peerconnection.clearRecvonlySsrc():e&&e.isVideoTrack()&&!t&&(n.peerconnection.clearRecvonlySsrc(),n.peerconnection.generateRecvonlySsrc()),n.peerconnection.replaceTrack(e,t).then(function(o){o&&(e||t)&&n.state===l.a?n._renegotiate().then(function(){var e=new d.a(n.peerconnection.localDescription.sdp);n.notifyMySSRCUpdate(new d.a(i),e),r()},r):r()})}};return new Promise(function(e,t){n.modificationQueue.push(r,function(n){n?(k.error(\"Replace track error:\",n),t(n)):(k.info(\"Replace track done!\"),e())})})}},{key:\"_parseSsrcInfoFromSourceRemove\",value:function(e,t){var n=[];return $(e).each(function(e,r){var i=$(r).attr(\"name\"),o=\"\";$(r).find('ssrc-group[xmlns=\"urn:xmpp:jingle:apps:rtp:ssma:0\"]').each(function(){var e=this.getAttribute(\"semantics\"),t=$(this).find(\">source\").map(function(){return this.getAttribute(\"ssrc\")}).get();t.length&&(o+=\"a=ssrc-group:\".concat(e,\" \").concat(t.join(\" \"),\"\\r\\n\"))});var a=[];$(r).find('source[xmlns=\"urn:xmpp:jingle:apps:rtp:ssma:0\"]').each(function(){var e=$(this).attr(\"ssrc\");a.push(e)}),t.media.forEach(function(e,t){h.a.findLine(e,\"a=mid:\".concat(i))&&(n[t]||(n[t]=\"\"),a.forEach(function(r){var i=h.a.findLines(e,\"a=ssrc:\".concat(r));i.length&&(n[t]+=\"\".concat(i.join(\"\\r\\n\"),\"\\r\\n\"))}),n[t]+=o)})}),n}},{key:\"_verifyNoSSRCChanged\",value:function(e,t){var n=new d.a(this.peerconnection.localDescription.sdp),r=new p.a(t,n),i=r.getNewMedia();if(Object.keys(i).length)return k.error(\"\".concat(this,\" - some SSRC were added on \").concat(e),i),!1;var o=(r=new p.a(n,t)).getNewMedia();return!Object.keys(o).length||(k.error(\"\".concat(this,\" - some SSRCs were removed on \").concat(e),o),!1)}},{key:\"addTrackAsUnmute\",value:function(e){return this._addRemoveTrackAsMuteUnmute(!1,e)}},{key:\"removeTrackAsMute\",value:function(e){return this._addRemoveTrackAsMuteUnmute(!0,e)}},{key:\"_addRemoveTrackAsMuteUnmute\",value:function(e,t){var n=this;if(!t)return Promise.reject('invalid \"track\" argument value');var r=e?\"removeTrackMute\":\"addTrackUnmute\",i=function(i){var o=n.peerconnection;if(o){var a=o.localDescription.sdp;(e?o.removeTrackMute.bind(o,t):o.addTrackUnmute.bind(o,t))()?a&&o.remoteDescription.sdp?n._renegotiate().then(function(){n._verifyNoSSRCChanged(r,new d.a(a)),i()},i):i():i(\"\".concat(r,\" failed!\"))}else i(\"Error:  tried \".concat(r,\" track with no active peer\")+\"connection\")};return new Promise(function(e,t){n.modificationQueue.push(i,function(n){n?t(n):e()})})}},{key:\"setMediaTransferActive\",value:function(e,t){var n=this;if(!this.peerconnection)return Promise.reject('Can not modify transfer active state, before \"initialize\" is called');var r=e?\"audio active\":\"audio inactive\",i=t?\"video active\":\"video inactive\";k.info(\"Queued make \".concat(i,\", \").concat(r,\" task...\"));var o=function(r){var i=n.state===l.a,o=n.peerconnection.setAudioTransferActive(e);n._localVideoActive!==t&&(n._localVideoActive=t,n.isP2P&&i&&n.sendContentModify(t));var a=n.peerconnection.setVideoTransferActive(n._localVideoActive&&n._remoteVideoActive);i&&(o||a)?n._renegotiate().then(r,r):r()};return new Promise(function(e,t){n.modificationQueue.push(o,function(n){n?t(n):e()})})}},{key:\"modifyContents\",value:function(e){var n=this,r=t.parseVideoSenders(e);if(null!==r){k.debug(\"\".concat(this,' queued \"content-modify\" task')+'(video senders=\"'.concat(r,'\")')),this.modificationQueue.push(function(e){n._assertNotEnded(\"content-modify\")&&n._modifyRemoteVideoActive(r)?n._renegotiate().then(e,e):e()},function(e){e&&k.error('\"content-modify\" failed',e)})}else k.error(\"\".concat(this,' - failed to parse video \"senders\" attribute in')+'\"content-modify\" action')}},{key:\"_modifyRemoteVideoActive\",value:function(e){var t=\"both\"===e||\"initiator\"===e&&this.isInitiator||\"responder\"===e&&!this.isInitiator;return t!==this._remoteVideoActive&&(k.debug(\"\".concat(this,\" new remote video active: \").concat(t)),this._remoteVideoActive=t),this.peerconnection.setVideoTransferActive(this._localVideoActive&&this._remoteVideoActive)}},{key:\"notifyMySSRCUpdate\",value:function(e,t){if(this.state===l.a){var n=new p.a(t,e),r=Object(s.$iq)({to:this.remoteJid,type:\"set\"}).c(\"jingle\",{xmlns:\"urn:xmpp:jingle:1\",action:\"source-remove\",initiator:this.initiatorJid,sid:this.sid});n.toJingle(r)?(k.info(\"Sending source-remove\",r.tree()),this.connection.sendIQ(r,null,this.newJingleErrorHandler(r),1e4)):k.log(\"removal not necessary\"),n=new p.a(e,t);var i=Object(s.$iq)({to:this.remoteJid,type:\"set\"}).c(\"jingle\",{xmlns:\"urn:xmpp:jingle:1\",action:\"source-add\",initiator:this.initiatorJid,sid:this.sid});n.toJingle(i)?(k.info(\"Sending source-add\",i.tree()),this.connection.sendIQ(i,null,this.newJingleErrorHandler(i),1e4)):k.log(\"addition not necessary\")}else k.warn(\"Skipping SSRC update in '\".concat(this.state,\" ' state.\"))}},{key:\"newJingleErrorHandler\",value:function(e,t){var n=this;return function(e){var r={},i=$(e).find(\"error\");if(i.length){r.code=i.attr(\"code\");var o=$(e).find(\"error :first\");o.length&&(r.reason=o[0].tagName);var a=i.find(\">text\");a.length&&(r.msg=a.text())}e||(r.reason=\"timeout\"),r.session=n.toString(),t?t(r):n.state===l.b&&\"item-not-found\"===r.reason?k.debug(\"Jingle error: \".concat(JSON.stringify(r))):b.a.callErrorHandler(new Error(\"Jingle error: \".concat(JSON.stringify(r))))}}},{key:\"_onJingleFatalError\",value:function(e){this.room&&(this.room.eventEmitter.emit(_.a.CONFERENCE_SETUP_FAILED,this,e),this.room.eventEmitter.emit(_.a.JINGLE_FATAL_ERROR,this,e))}},{key:\"getIceConnectionState\",value:function(){return this.peerconnection.iceConnectionState}},{key:\"close\",value:function(){this.closed=!0,this.signalingLayer.setChatRoom(null),this.peerconnection&&(this.peerconnection.signalingState&&\"closed\"!==this.peerconnection.signalingState||this.peerconnection.connectionState&&\"closed\"!==this.peerconnection.connectionState)&&this.peerconnection.close()}},{key:\"toString\",value:function(){return\"JingleSessionPC[p2p=\".concat(this.isP2P,\",\")+\"initiator=\".concat(this.isInitiator,\",sid=\").concat(this.sid,\"]\")}},{key:\"_abtestSuspendVideoEnabled\",value:function(e){var t=e.abTesting;if(t&&t.enableSuspendVideoTest){var n=this._getInitiatorJid();return Object(c.integerHash)(n)%2==0}}}]),t}()}).call(this,\"modules/xmpp/JingleSessionPC.js\")},function(e,t,n){\"use strict\";n.r(t),n.d(t,\"DEVICE_LIST_CHANGED\",function(){return r}),n.d(t,\"PERMISSION_PROMPT_IS_SHOWN\",function(){return i});var r=\"mediaDevices.devicechange\",i=\"mediaDevices.permissionPromptIsShown\"},function(e,t,n){var r;r=function(){var e=!0;function t(t){function n(e){var n=t.match(e);return n&&n.length>1&&n[1]||\"\"}function r(e){var n=t.match(e);return n&&n.length>1&&n[2]||\"\"}var i,o=n(/(ipod|iphone|ipad)/i).toLowerCase(),a=!/like android/i.test(t)&&/android/i.test(t),s=/nexus\\s*[0-6]\\s*/i.test(t),c=!s&&/nexus\\s*[0-9]+/i.test(t),u=/CrOS/.test(t),l=/silk/i.test(t),d=/sailfish/i.test(t),p=/tizen/i.test(t),h=/(web|hpw)os/i.test(t),f=/windows phone/i.test(t),m=(/SamsungBrowser/i.test(t),!f&&/windows/i.test(t)),v=!o&&!l&&/macintosh/i.test(t),y=!a&&!d&&!p&&!h&&/linux/i.test(t),g=r(/edg([ea]|ios)\\/(\\d+(\\.\\d+)?)/i),_=n(/version\\/(\\d+(\\.\\d+)?)/i),S=/tablet/i.test(t)&&!/tablet pc/i.test(t),b=!S&&/[^-]mobi/i.test(t),E=/xbox/i.test(t);/opera/i.test(t)?i={name:\"Opera\",opera:e,version:_||n(/(?:opera|opr|opios)[\\s\\/](\\d+(\\.\\d+)?)/i)}:/opr\\/|opios/i.test(t)?i={name:\"Opera\",opera:e,version:n(/(?:opr|opios)[\\s\\/](\\d+(\\.\\d+)?)/i)||_}:/SamsungBrowser/i.test(t)?i={name:\"Samsung Internet for Android\",samsungBrowser:e,version:_||n(/(?:SamsungBrowser)[\\s\\/](\\d+(\\.\\d+)?)/i)}:/coast/i.test(t)?i={name:\"Opera Coast\",coast:e,version:_||n(/(?:coast)[\\s\\/](\\d+(\\.\\d+)?)/i)}:/yabrowser/i.test(t)?i={name:\"Yandex Browser\",yandexbrowser:e,version:_||n(/(?:yabrowser)[\\s\\/](\\d+(\\.\\d+)?)/i)}:/ucbrowser/i.test(t)?i={name:\"UC Browser\",ucbrowser:e,version:n(/(?:ucbrowser)[\\s\\/](\\d+(?:\\.\\d+)+)/i)}:/mxios/i.test(t)?i={name:\"Maxthon\",maxthon:e,version:n(/(?:mxios)[\\s\\/](\\d+(?:\\.\\d+)+)/i)}:/epiphany/i.test(t)?i={name:\"Epiphany\",epiphany:e,version:n(/(?:epiphany)[\\s\\/](\\d+(?:\\.\\d+)+)/i)}:/puffin/i.test(t)?i={name:\"Puffin\",puffin:e,version:n(/(?:puffin)[\\s\\/](\\d+(?:\\.\\d+)?)/i)}:/sleipnir/i.test(t)?i={name:\"Sleipnir\",sleipnir:e,version:n(/(?:sleipnir)[\\s\\/](\\d+(?:\\.\\d+)+)/i)}:/k-meleon/i.test(t)?i={name:\"K-Meleon\",kMeleon:e,version:n(/(?:k-meleon)[\\s\\/](\\d+(?:\\.\\d+)+)/i)}:f?(i={name:\"Windows Phone\",osname:\"Windows Phone\",windowsphone:e},g?(i.msedge=e,i.version=g):(i.msie=e,i.version=n(/iemobile\\/(\\d+(\\.\\d+)?)/i))):/msie|trident/i.test(t)?i={name:\"Internet Explorer\",msie:e,version:n(/(?:msie |rv:)(\\d+(\\.\\d+)?)/i)}:u?i={name:\"Chrome\",osname:\"Chrome OS\",chromeos:e,chromeBook:e,chrome:e,version:n(/(?:chrome|crios|crmo)\\/(\\d+(\\.\\d+)?)/i)}:/edg([ea]|ios)/i.test(t)?i={name:\"Microsoft Edge\",msedge:e,version:g}:/vivaldi/i.test(t)?i={name:\"Vivaldi\",vivaldi:e,version:n(/vivaldi\\/(\\d+(\\.\\d+)?)/i)||_}:d?i={name:\"Sailfish\",osname:\"Sailfish OS\",sailfish:e,version:n(/sailfish\\s?browser\\/(\\d+(\\.\\d+)?)/i)}:/seamonkey\\//i.test(t)?i={name:\"SeaMonkey\",seamonkey:e,version:n(/seamonkey\\/(\\d+(\\.\\d+)?)/i)}:/firefox|iceweasel|fxios/i.test(t)?(i={name:\"Firefox\",firefox:e,version:n(/(?:firefox|iceweasel|fxios)[ \\/](\\d+(\\.\\d+)?)/i)},/\\((mobile|tablet);[^\\)]*rv:[\\d\\.]+\\)/i.test(t)&&(i.firefoxos=e,i.osname=\"Firefox OS\")):l?i={name:\"Amazon Silk\",silk:e,version:n(/silk\\/(\\d+(\\.\\d+)?)/i)}:/phantom/i.test(t)?i={name:\"PhantomJS\",phantom:e,version:n(/phantomjs\\/(\\d+(\\.\\d+)?)/i)}:/slimerjs/i.test(t)?i={name:\"SlimerJS\",slimer:e,version:n(/slimerjs\\/(\\d+(\\.\\d+)?)/i)}:/blackberry|\\bbb\\d+/i.test(t)||/rim\\stablet/i.test(t)?i={name:\"BlackBerry\",osname:\"BlackBerry OS\",blackberry:e,version:_||n(/blackberry[\\d]+\\/(\\d+(\\.\\d+)?)/i)}:h?(i={name:\"WebOS\",osname:\"WebOS\",webos:e,version:_||n(/w(?:eb)?osbrowser\\/(\\d+(\\.\\d+)?)/i)},/touchpad\\//i.test(t)&&(i.touchpad=e)):/bada/i.test(t)?i={name:\"Bada\",osname:\"Bada\",bada:e,version:n(/dolfin\\/(\\d+(\\.\\d+)?)/i)}:p?i={name:\"Tizen\",osname:\"Tizen\",tizen:e,version:n(/(?:tizen\\s?)?browser\\/(\\d+(\\.\\d+)?)/i)||_}:/qupzilla/i.test(t)?i={name:\"QupZilla\",qupzilla:e,version:n(/(?:qupzilla)[\\s\\/](\\d+(?:\\.\\d+)+)/i)||_}:/chromium/i.test(t)?i={name:\"Chromium\",chromium:e,version:n(/(?:chromium)[\\s\\/](\\d+(?:\\.\\d+)?)/i)||_}:/chrome|crios|crmo/i.test(t)?i={name:\"Chrome\",chrome:e,version:n(/(?:chrome|crios|crmo)\\/(\\d+(\\.\\d+)?)/i)}:a?i={name:\"Android\",version:_}:/safari|applewebkit/i.test(t)?(i={name:\"Safari\",safari:e},_&&(i.version=_)):o?(i={name:\"iphone\"==o?\"iPhone\":\"ipad\"==o?\"iPad\":\"iPod\"},_&&(i.version=_)):i=/googlebot/i.test(t)?{name:\"Googlebot\",googlebot:e,version:n(/googlebot\\/(\\d+(\\.\\d+))/i)||_}:{name:n(/^(.*)\\/(.*) /),version:r(/^(.*)\\/(.*) /)},!i.msedge&&/(apple)?webkit/i.test(t)?(/(apple)?webkit\\/537\\.36/i.test(t)?(i.name=i.name||\"Blink\",i.blink=e):(i.name=i.name||\"Webkit\",i.webkit=e),!i.version&&_&&(i.version=_)):!i.opera&&/gecko\\//i.test(t)&&(i.name=i.name||\"Gecko\",i.gecko=e,i.version=i.version||n(/gecko\\/(\\d+(\\.\\d+)?)/i)),i.windowsphone||!a&&!i.silk?!i.windowsphone&&o?(i[o]=e,i.ios=e,i.osname=\"iOS\"):v?(i.mac=e,i.osname=\"macOS\"):E?(i.xbox=e,i.osname=\"Xbox\"):m?(i.windows=e,i.osname=\"Windows\"):y&&(i.linux=e,i.osname=\"Linux\"):(i.android=e,i.osname=\"Android\");var T=\"\";i.windows?T=function(e){switch(e){case\"NT\":return\"NT\";case\"XP\":return\"XP\";case\"NT 5.0\":return\"2000\";case\"NT 5.1\":return\"XP\";case\"NT 5.2\":return\"2003\";case\"NT 6.0\":return\"Vista\";case\"NT 6.1\":return\"7\";case\"NT 6.2\":return\"8\";case\"NT 6.3\":return\"8.1\";case\"NT 10.0\":return\"10\";default:return}}(n(/Windows ((NT|XP)( \\d\\d?.\\d)?)/i)):i.windowsphone?T=n(/windows phone (?:os)?\\s?(\\d+(\\.\\d+)*)/i):i.mac?T=(T=n(/Mac OS X (\\d+([_\\.\\s]\\d+)*)/i)).replace(/[_\\s]/g,\".\"):o?T=(T=n(/os (\\d+([_\\s]\\d+)*) like mac os x/i)).replace(/[_\\s]/g,\".\"):a?T=n(/android[ \\/-](\\d+(\\.\\d+)*)/i):i.webos?T=n(/(?:web|hpw)os\\/(\\d+(\\.\\d+)*)/i):i.blackberry?T=n(/rim\\stablet\\sos\\s(\\d+(\\.\\d+)*)/i):i.bada?T=n(/bada\\/(\\d+(\\.\\d+)*)/i):i.tizen&&(T=n(/tizen[\\/\\s](\\d+(\\.\\d+)*)/i)),T&&(i.osversion=T);var C=!i.windows&&T.split(\".\")[0];return S||c||\"ipad\"==o||a&&(3==C||C>=4&&!b)||i.silk?i.tablet=e:(b||\"iphone\"==o||\"ipod\"==o||a||s||i.blackberry||i.webos||i.bada)&&(i.mobile=e),i.msedge||i.msie&&i.version>=10||i.yandexbrowser&&i.version>=15||i.vivaldi&&i.version>=1||i.chrome&&i.version>=20||i.samsungBrowser&&i.version>=4||i.firefox&&i.version>=20||i.safari&&i.version>=6||i.opera&&i.version>=10||i.ios&&i.osversion&&i.osversion.split(\".\")[0]>=6||i.blackberry&&i.version>=10.1||i.chromium&&i.version>=20?i.a=e:i.msie&&i.version<10||i.chrome&&i.version<20||i.firefox&&i.version<20||i.safari&&i.version<6||i.opera&&i.version<10||i.ios&&i.osversion&&i.osversion.split(\".\")[0]<6||i.chromium&&i.version<20?i.c=e:i.x=e,i}var n=t(\"undefined\"!=typeof navigator&&navigator.userAgent||\"\");function r(e){return e.split(\".\").length}function i(e,t){var n,r=[];if(Array.prototype.map)return Array.prototype.map.call(e,t);for(n=0;n<e.length;n++)r.push(t(e[n]));return r}function o(e){for(var t=Math.max(r(e[0]),r(e[1])),n=i(e,function(e){var n=t-r(e);return i((e+=new Array(n+1).join(\".0\")).split(\".\"),function(e){return new Array(20-e.length).join(\"0\")+e}).reverse()});--t>=0;){if(n[0][t]>n[1][t])return 1;if(n[0][t]!==n[1][t])return-1;if(0===t)return 0}}function a(e,r,i){var a=n;\"string\"==typeof r&&(i=r,r=void 0),void 0===r&&(r=!1),i&&(a=t(i));var s=\"\"+a.version;for(var c in e)if(e.hasOwnProperty(c)&&a[c]){if(\"string\"!=typeof e[c])throw new Error(\"Browser version in the minVersion map should be a string: \"+c+\": \"+String(e));return o([s,e[c]])<0}return r}return n.test=function(e){for(var t=0;t<e.length;++t){var r=e[t];if(\"string\"==typeof r&&r in n)return!0}return!1},n.isUnsupportedBrowser=a,n.compareVersions=o,n.check=function(e,t,n){return!a(e,t,n)},n._detect=t,n.detect=t,n},e.exports?e.exports=r():n(124)(\"bowser\",r)},function(e,t,n){\"use strict\";n.d(t,\"a\",function(){return o});var r=n(5);function i(e,t){if(!t)return!1;if(e.length!==t.length)return!1;for(var n=0,r=e.length;n<r;n++)if(e[n]instanceof Array&&t[n]instanceof Array){if(!e[n].equals(t[n]))return!1}else if(e[n]!==t[n])return!1;return!0}function o(e,t){if(this.mySDP=e,this.otherSDP=t,!e)throw new Error('\"mySDP\" is undefined!');if(!t)throw new Error('\"otherSDP\" is undefined!')}o.prototype.getNewMedia=function(){var e=this.mySDP.getMediaSsrcMap(),t=this.otherSDP.getMediaSsrcMap(),n={};return Object.keys(t).forEach(function(r){var o=e[r],a=t[r];o||!a?(Object.keys(a.ssrcs).forEach(function(e){if(-1===Object.keys(o.ssrcs).indexOf(e))n[r]||(n[r]={mediaindex:a.mediaindex,mid:a.mid,ssrcs:{},ssrcGroups:[]}),n[r].ssrcs[e]=a.ssrcs[e];else if(a.ssrcs[e].lines&&o.ssrcs[e].lines){void 0!==o.ssrcs[e].lines.find(function(e){return-1!==e.indexOf(\"msid\")})!==(void 0!==a.ssrcs[e].lines.find(function(e){return-1!==e.indexOf(\"msid\")}))&&(n[r]||(n[r]={mediaindex:a.mediaindex,mid:a.mid,ssrcs:{},ssrcGroups:[]}),n[r].ssrcs[e]=a.ssrcs[e])}}),a.ssrcGroups.forEach(function(e){for(var t=!1,s=0;s<o.ssrcGroups.length;s++){var c=o.ssrcGroups[s];if(e.semantics===c.semantics&&i(e.ssrcs,c.ssrcs)){t=!0;break}}t||(n[r]||(n[r]={mediaindex:a.mediaindex,mid:a.mid,ssrcs:{},ssrcGroups:[]}),n[r].ssrcGroups.push(e))})):n[r]=a}),n},o.prototype.toJingle=function(e){var t=this.getNewMedia(),n=!1;return Object.keys(t).forEach(function(i){n=!0;var o=t[i];e.c(\"content\",{name:o.mid}),e.c(\"description\",{xmlns:\"urn:xmpp:jingle:apps:rtp:1\",media:o.mid}),Object.keys(o.ssrcs).forEach(function(t){var n=o.ssrcs[t];e.c(\"source\",{xmlns:\"urn:xmpp:jingle:apps:rtp:ssma:0\"}),e.attrs({ssrc:n.ssrc}),n.lines.forEach(function(t){var n=t.indexOf(\" \"),i=t.substr(n+1);if(e.c(\"parameter\"),-1===i.indexOf(\":\"))e.attrs({name:i});else{var o=i.split(\":\",2),a=o[0],s=r.a.filterSpecialChars(o[1]);e.attrs({name:a}),e.attrs({value:s})}e.up()}),e.up()}),o.ssrcGroups.forEach(function(t){t.ssrcs.length&&(e.c(\"ssrc-group\",{semantics:t.semantics,xmlns:\"urn:xmpp:jingle:apps:rtp:ssma:0\"}),t.ssrcs.forEach(function(t){e.c(\"source\",{ssrc:t}).up()}),e.up())}),e.up(),e.up()}),n}},function(e,t){var n,r,i=e.exports={};function o(){throw new Error(\"setTimeout has not been defined\")}function a(){throw new Error(\"clearTimeout has not been defined\")}function s(e){if(n===setTimeout)return setTimeout(e,0);if((n===o||!n)&&setTimeout)return n=setTimeout,setTimeout(e,0);try{return n(e,0)}catch(t){try{return n.call(null,e,0)}catch(t){return n.call(this,e,0)}}}!function(){try{n=\"function\"==typeof setTimeout?setTimeout:o}catch(e){n=o}try{r=\"function\"==typeof clearTimeout?clearTimeout:a}catch(e){r=a}}();var c,u=[],l=!1,d=-1;function p(){l&&c&&(l=!1,c.length?u=c.concat(u):d=-1,u.length&&h())}function h(){if(!l){var e=s(p);l=!0;for(var t=u.length;t;){for(c=u,u=[];++d<t;)c&&c[d].run();d=-1,t=u.length}c=null,l=!1,function(e){if(r===clearTimeout)return clearTimeout(e);if((r===a||!r)&&clearTimeout)return r=clearTimeout,clearTimeout(e);try{r(e)}catch(t){try{return r.call(null,e)}catch(t){return r.call(this,e)}}}(e)}}function f(e,t){this.fun=e,this.array=t}function m(){}i.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];u.push(new f(e,t)),1!==u.length||l||s(h)},f.prototype.run=function(){this.fun.apply(null,this.array)},i.title=\"browser\",i.browser=!0,i.env={},i.argv=[],i.version=\"\",i.versions={},i.on=m,i.addListener=m,i.once=m,i.off=m,i.removeListener=m,i.removeAllListeners=m,i.emit=m,i.prependListener=m,i.prependOnceListener=m,i.listeners=function(e){return[]},i.binding=function(e){throw new Error(\"process.binding is not supported\")},i.cwd=function(){return\"/\"},i.chdir=function(e){throw new Error(\"process.chdir is not supported\")},i.umask=function(){return 0}},function(e,t,n){\"use strict\";n.r(t),n.d(t,\"E2E_RTT_CHANGED\",function(){return r});var r=\"e2eping.e2e_rtt_changed\"},function(e,t,n){\"use strict\";n.d(t,\"a\",function(){return i});window.AudioContext=window.AudioContext||window.webkitAudioContext;var r=null;function i(e,t,n){this.stream=e,this.intervalId=null,this.intervalMilis=t,this.audioLevel=0,this.callback=n}window.AudioContext&&(r=new AudioContext).suspend&&r.suspend(),i.prototype.start=function(){if(i.isLocalStatsSupported()){r.resume();var e=r.createAnalyser();e.smoothingTimeConstant=.8,e.fftSize=2048,r.createMediaStreamSource(this.stream).connect(e);var t=this;this.intervalId=setInterval(function(){var n=new Uint8Array(e.frequencyBinCount);e.getByteTimeDomainData(n);var r,i,o,a,s=function(e){for(var t=0,n=e.length,r=0;r<n;r++)t<e[r]&&(t=e[r]);return parseFloat(((t-127)/128).toFixed(3))}(n);s!==t.audioLevel&&(t.audioLevel=(r=s,i=t.audioLevel,o=0,o=(a=i-r)>.2?i-.2:a<-.4?i+.4:r,parseFloat(o.toFixed(3))),t.callback(t.audioLevel))},this.intervalMilis)}},i.prototype.stop=function(){this.intervalId&&(clearInterval(this.intervalId),this.intervalId=null)},i.isLocalStatsSupported=function(){return Boolean(r)}},function(e,t,n){var r=n(126),i={loadScript:function(e,t,n,i,o,a){var s=document,c=s.createElement(\"script\"),u=s.getElementsByTagName(\"script\")[0];if(c.async=t,i){var l=r();if(l){var d=l.src,p=d.substring(0,d.lastIndexOf(\"/\")+1);d&&p&&(e=p+e)}}o&&(c.onload=o),a&&(c.onerror=a),c.src=e,n?u.parentNode.insertBefore(c,u):u.parentNode.appendChild(c)}};e.exports=i},function(e,t,n){\"use strict\";n.r(t),n.d(t,\"ON\",function(){return r}),n.d(t,\"OFF\",function(){return i});var r=\"on\",i=\"off\"},function(e,t,n){\"use strict\";(function(e){n.d(t,\"a\",function(){return y});var r=n(30),i=n.n(r),o=n(4),a=n(17),s=n(9),c=n(11);function u(e){return(u=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function l(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function d(e,t){return!t||\"object\"!==u(t)&&\"function\"!=typeof t?function(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}(e):t}function p(e){return(p=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function h(e,t){return(h=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var f=Object(o.getLogger)(e),m={track_mute:\"onmute\",track_unmute:\"onunmute\",track_ended:\"onended\"};function v(e,t){e.oninactive=t}var y=function(e){function t(e,n,r,i,o,a){var s;return function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t),(s=d(this,p(t).call(this))).addEventListener=s.addListener,s.removeEventListener=s.off=s.removeListener,s.containers=[],s.conference=e,s.audioLevel=-1,s.type=o,s.track=r,s.videoType=a,s.handlers=new Map,s.disposed=!1,s._streamInactiveHandler=i,s._setStream(n),s}var n,r,o;return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&h(e,t)}(t,i.a),n=t,(r=[{key:\"_setHandler\",value:function(e,t){if(m.hasOwnProperty(e)){if(t?this.handlers.set(e,t):this.handlers.delete(e),this.stream){var n=!0,r=!1,i=void 0;try{for(var o,a=this.stream.getVideoTracks()[Symbol.iterator]();!(n=(o=a.next()).done);n=!0){o.value[m[e]]=t}}catch(e){r=!0,i=e}finally{try{n||null==a.return||a.return()}finally{if(r)throw i}}}}else f.error(\"Invalid handler type \".concat(e))}},{key:\"_unregisterHandlers\",value:function(){if(this.stream){var e=!0,t=!1,n=void 0;try{for(var r,i=this.handlers.keys()[Symbol.iterator]();!(e=(r=i.next()).done);e=!0){var o=r.value,a=!0,s=!1,c=void 0;try{for(var u,l=this.stream.getVideoTracks()[Symbol.iterator]();!(a=(u=l.next()).done);a=!0){u.value[m[o]]=void 0}}catch(e){s=!0,c=e}finally{try{a||null==l.return||l.return()}finally{if(s)throw c}}}}catch(e){t=!0,n=e}finally{try{e||null==i.return||i.return()}finally{if(t)throw n}}this._streamInactiveHandler&&v(this.stream,void 0)}else f.warn(\"\".concat(this,\": unable to unregister handlers - no stream object\"))}},{key:\"_setStream\",value:function(e){if(this.stream!==e&&(this.stream=e,this.stream)){var t=!0,n=!1,r=void 0;try{for(var i,o=this.handlers.keys()[Symbol.iterator]();!(t=(i=o.next()).done);t=!0){var a=i.value;this._setHandler(a,this.handlers.get(a))}}catch(e){n=!0,r=e}finally{try{t||null==o.return||o.return()}finally{if(n)throw r}}this._streamInactiveHandler&&v(this.stream,this._streamInactiveHandler)}}},{key:\"getType\",value:function(){return this.type}},{key:\"isAudioTrack\",value:function(){return this.getType()===s.a}},{key:\"isWebRTCTrackMuted\",value:function(){return this.track&&this.track.muted}},{key:\"isVideoTrack\",value:function(){return this.getType()===s.b}},{key:\"isLocal\",value:function(){throw new Error(\"Not implemented by subclass\")}},{key:\"getOriginalStream\",value:function(){return this.stream}},{key:\"getStreamId\",value:function(){return this.stream?this.stream.id:null}},{key:\"getTrack\",value:function(){return this.track}},{key:\"getTrackId\",value:function(){return this.track?this.track.id:null}},{key:\"getUsageLabel\",value:function(){return this.isAudioTrack()?\"mic\":this.videoType?this.videoType:\"default\"}},{key:\"_maybeFireTrackAttached\",value:function(e){this.conference&&e&&this.conference._onTrackAttach(this,e)}},{key:\"attach\",value:function(e){this.stream&&c.a.attachMediaStream(e,this.stream),this.containers.push(e),this._maybeFireTrackAttached(e),this._attachTTFMTracker(e)}},{key:\"detach\",value:function(e){for(var t=this.containers,n=t.length-1;n>=0;--n){var r=t[n];e||c.a.attachMediaStream(r,null),e&&r!==e||t.splice(n,1)}e&&c.a.attachMediaStream(e,null)}},{key:\"_attachTTFMTracker\",value:function(e){}},{key:\"dispose\",value:function(){return this.removeAllListeners(),this.disposed=!0,Promise.resolve()}},{key:\"isScreenSharing\",value:function(){}},{key:\"getId\",value:function(){return this.stream?c.a.getStreamID(this.stream):null}},{key:\"isActive\",value:function(){return void 0===this.stream.active||this.stream.active}},{key:\"setAudioLevel\",value:function(e,t){this.audioLevel!==e&&(this.audioLevel=e,this.emit(a.TRACK_AUDIO_LEVEL_CHANGED,e,t))}},{key:\"getMSID\",value:function(){var e=this.getStreamId(),t=this.getTrackId();return e&&t?\"\".concat(e,\" \").concat(t):null}},{key:\"setAudioOutput\",value:function(e){var t=this;return c.a.isDeviceChangeAvailable(\"output\")?this.isVideoTrack()?Promise.resolve():Promise.all(this.containers.map(function(t){return t.setSinkId(e).catch(function(e){throw f.warn(\"Failed to change audio output device on element. Default or previously set audio output device will be used.\",t,e),e})})).then(function(){t.emit(a.TRACK_AUDIO_OUTPUT_CHANGED,e)}):Promise.reject(new Error(\"Audio output device change is not supported\"))}}])&&l(n.prototype,r),o&&l(n,o),t}()}).call(this,\"modules/RTC/JitsiTrack.js\")},function(e,t,n){\"use strict\";n.d(t,\"a\",function(){return s});var r=n(16),i=n.n(r);function o(e){return(o=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function a(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var s=function(){function e(t){switch(function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this._sdp=null,this._sdpObject=null,this._type=null,t.type){case\"offer\":case\"answer\":break;default:throw new TypeError('invalid type \"'.concat(t.type,'\"'))}if(this._type=t.type,\"string\"==typeof t.sdp){this._sdp=t.sdp;try{this._sdpObject=i.a.parse(t.sdp)}catch(e){throw new Error(\"invalid sdp: \".concat(e))}}else{if(\"object\"!==o(t._sdpObject))throw new TypeError(\"invalid sdp or _sdpObject\");this._sdpObject=t._sdpObject;try{this._sdp=i.a.write(t._sdpObject)}catch(e){throw new Error(\"invalid sdp object: \".concat(e))}}}var t,n,r;return t=e,(n=[{key:\"toJSON\",value:function(){return{sdp:this._sdp,type:this._type}}},{key:\"sdp\",get:function(){return this._sdp},set:function(e){try{this._sdpObject=i.a.parse(e)}catch(e){throw new Error(\"invalid sdp: \".concat(e))}this._sdp=e}},{key:\"sdpObject\",get:function(){return this._sdpObject}},{key:\"type\",get:function(){return this._type}}])&&a(t.prototype,n),r&&a(t,r),e}()},function(e,t,n){\"use strict\";function r(e){var t=e;return e>=Number.MAX_SAFE_INTEGER&&(t=0),t+1}n.d(t,\"a\",function(){return r})},function(e,t){function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var r=function(){function e(t,n,r){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this._userId=t,this.setDisplayName(n),this._isLocalStats=r||!1,this.setDominantSpeaker(!1),this.totalDominantSpeakerTime=0,this._dominantSpeakerStart=0,this._hasLeft=!1}var t,r,i;return t=e,(r=[{key:\"getUserId\",value:function(){return this._userId}},{key:\"getDisplayName\",value:function(){return this.displayName}},{key:\"setDisplayName\",value:function(e){this.displayName=e}},{key:\"isLocalStats\",value:function(){return this._isLocalStats}},{key:\"isDominantSpeaker\",value:function(){return this._dominantSpeakerStart>0}},{key:\"setDominantSpeaker\",value:function(e){if(!this.isDominantSpeaker()&&e)this._dominantSpeakerStart=Date.now();else if(this.isDominantSpeaker()&&!e){var t=Date.now()-this._dominantSpeakerStart;this.totalDominantSpeakerTime+=t,this._dominantSpeakerStart=0}}},{key:\"getTotalDominantSpeakerTime\",value:function(){var e=this.totalDominantSpeakerTime;return this.isDominantSpeaker()&&(e+=Date.now()-this._dominantSpeakerStart),e}},{key:\"hasLeft\",value:function(){return this._hasLeft}},{key:\"markAsHasLeft\",value:function(){this._hasLeft=!0,this.setDominantSpeaker(!1)}}])&&n(t.prototype,r),i&&n(t,i),e}();e.exports=r},function(e,t){e.exports={IDENTITY_UPDATED:\"authentication.identity_updated\"}},function(e,t,n){\"use strict\";(function(e){n.d(t,\"a\",function(){return w});var r=n(4),i=n(56),o=n(15),a=n(12),s=n(17),c=n(3),u=n(11),l=n(43),d=n.n(l),p=n(9),h=n(7),f=n.n(h),m=n(14),v=n.n(m),y=n(8),g=n(6);function _(e){return(_=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function S(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function b(e,t,n){return(b=\"undefined\"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=E(e)););return e}(e,t);if(r){var i=Object.getOwnPropertyDescriptor(r,t);return i.get?i.get.call(n):i.value}})(e,t,n||e)}function E(e){return(E=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function T(e,t){return(T=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function C(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}var R=Object(r.getLogger)(e),w=function(e){function t(e){var n,r,i,o=e.deviceId,a=e.facingMode,l=e.mediaType,d=e.resolution,p=e.rtcId,h=e.sourceId,m=e.sourceType,v=e.stream,y=e.track,g=e.videoType;return function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t),r=this,i=E(t).call(this,null,v,y,function(){return n.emit(s.LOCAL_TRACK_STOPPED)},l,g),(n=!i||\"object\"!==_(i)&&\"function\"!=typeof i?C(r):i).rtcId=p,n.sourceId=h,n.sourceType=m,c.a.usesNewGumFlow()?(n.resolution=y.getSettings().height,n._constraints=y.getConstraints()):n.resolution=c.a.isFirefox()?null:d,n.deviceId=o,n._prevSetMuted=Promise.resolve(),n._facingMode=a,n._trackEnded=!1,n._hasSentData=!1,n._testDataSent=!0,n._realDeviceId=\"\"===n.deviceId?void 0:n.deviceId,n._noDataFromSourceTimeout=null,n._onDeviceListChanged=function(e){n._setRealDeviceIdFromDeviceList(e),void 0!==n.getTrack().readyState||void 0===n._realDeviceId||e.find(function(e){return e.deviceId===n._realDeviceId})||(n._trackEnded=!0)},n.isAudioTrack()&&u.a.isDeviceChangeAvailable(\"output\")&&(n._onAudioOutputDeviceChanged=n.setAudioOutput.bind(C(C(n))),u.a.addListener(f.a.AUDIO_OUTPUT_DEVICE_CHANGED,n._onAudioOutputDeviceChanged)),u.a.addListener(f.a.DEVICE_LIST_CHANGED,n._onDeviceListChanged),n._initNoDataFromSourceHandlers(),n}var n,r,l;return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&T(e,t)}(t,i[\"a\"]),n=t,(r=[{key:\"isEnded\",value:function(){return\"ended\"===this.getTrack().readyState||this._trackEnded}},{key:\"_initNoDataFromSourceHandlers\",value:function(){var e=this;if(this.isVideoTrack()&&this.videoType===v.a.CAMERA){var t=this._onNoDataFromSourceError.bind(this);this._setHandler(\"track_mute\",function(){if(e._checkForCameraIssues()){var n=window.performance.now();e._noDataFromSourceTimeout=setTimeout(t,3e3),e._setHandler(\"track_unmute\",function(){e._clearNoDataFromSourceMuteResources(),g.a.sendAnalyticsAndLog(y.q,{media_type:e.getType(),track_type:\"local\",value:window.performance.now()-n})})}}),this._setHandler(\"track_ended\",t)}}},{key:\"_clearNoDataFromSourceMuteResources\",value:function(){this._noDataFromSourceTimeout&&(clearTimeout(this._noDataFromSourceTimeout),this._noDataFromSourceTimeout=null),this._setHandler(\"track_unmute\",void 0)}},{key:\"_onNoDataFromSourceError\",value:function(){this._clearNoDataFromSourceMuteResources(),this._checkForCameraIssues()&&this._fireNoDataFromSourceEvent()}},{key:\"_fireNoDataFromSourceEvent\",value:function(){this.emit(s.NO_DATA_FROM_SOURCE),g.a.sendAnalytics(Object(y.C)(this.getType()));var e={name:s.NO_DATA_FROM_SOURCE};this.isAudioTrack()&&(e.isReceivingData=this._isReceivingData()),g.a.sendLog(JSON.stringify(e))}},{key:\"_setRealDeviceIdFromDeviceList\",value:function(e){var t=this.getTrack(),n=e.find(function(e){return e.kind===\"\".concat(t.kind,\"input\")&&e.label===t.label});n&&(this._realDeviceId=n.deviceId)}},{key:\"_setStream\",value:function(e){b(E(t.prototype),\"_setStream\",this).call(this,e),e?(this.storedMSID=this.getMSID(),R.debug(\"Setting new MSID: \".concat(this.storedMSID,\" on \").concat(this))):R.debug(\"Setting 'null' stream on \".concat(this))}},{key:\"mute\",value:function(){return this._queueSetMuted(!0)}},{key:\"unmute\",value:function(){return this._queueSetMuted(!1)}},{key:\"_queueSetMuted\",value:function(e){var t=this._setMuted.bind(this,e);return this._prevSetMuted=this._prevSetMuted.then(t,t),this._prevSetMuted}},{key:\"_setMuted\",value:function(e){var t=this;if(this.isMuted()===e)return Promise.resolve();if(this.disposed)return Promise.reject(new o.a(a.TRACK_IS_DISPOSED));var n=Promise.resolve(),r=function(){return R.info(\"Mute \".concat(t,\": \").concat(e))};if(this.isAudioTrack()||this.videoType===v.a.DESKTOP||!c.a.doesVideoMuteByStreamRemove())r(),this.track&&(this.track.enabled=!e);else if(e)n=new Promise(function(e,n){r(),t._removeStreamFromConferenceAsMute(function(){t._unregisterHandlers(),t._stopStream(),t._setStream(null),e()},n)});else{r();var i={cameraDeviceId:this.getDeviceId(),devices:[p.b],facingMode:this.getCameraFacingMode()};c.a.usesNewGumFlow()?n=u.a.newObtainAudioAndVideoPermissions(Object.assign({},i,{constraints:{video:this._constraints}})):(this.resolution&&(i.resolution=this.resolution),n=u.a.obtainAudioAndVideoPermissions(i)),n.then(function(e){var n=t.getType(),r=c.a.usesNewGumFlow()?e.find(function(e){return e.track.kind===n}):e.find(function(e){return e.mediaType===n});if(!r)throw new o.a(a.TRACK_NO_STREAM_FOUND);return t._setStream(r.stream),t.track=r.track,t.videoType!==r.videoType&&(R.warn(\"\".concat(t,\": video type has changed after unmute!\"),t.videoType,r.videoType),t.videoType=r.videoType),t.containers.map(function(e){return u.a.attachMediaStream(e,t.stream)}),t._addStreamToConferenceAsUnmute()})}return n.then(function(){return t._sendMuteStatus(e)}).then(function(){return t.emit(s.TRACK_MUTE_CHANGED,t)})}},{key:\"_addStreamToConferenceAsUnmute\",value:function(){var e=this;return this.conference?new Promise(function(t,n){e.conference._addLocalTrackAsUnmute(e).then(t,function(e){return n(new Error(e))})}):Promise.resolve()}},{key:\"_removeStreamFromConferenceAsMute\",value:function(e,t){this.conference?this.conference._removeLocalTrackAsMute(this).then(e,function(e){return t(new Error(e))}):e()}},{key:\"_sendMuteStatus\",value:function(e){var t=this;return this.conference&&this.conference.room?new Promise(function(n){t.conference.room[t.isAudioTrack()?\"setAudioMute\":\"setVideoMute\"](e,n)}):Promise.resolve()}},{key:\"dispose\",value:function(){var e=this,n=Promise.resolve();return this.conference&&(n=this.conference.removeTrack(this)),this.stream&&(this._stopStream(),this.detach()),u.a.removeListener(f.a.DEVICE_LIST_CHANGED,this._onDeviceListChanged),this._onAudioOutputDeviceChanged&&u.a.removeListener(f.a.AUDIO_OUTPUT_DEVICE_CHANGED,this._onAudioOutputDeviceChanged),n.then(function(){return b(E(t.prototype),\"dispose\",e).call(e)})}},{key:\"isMuted\",value:function(){return!this.stream||(!(!this.isVideoTrack()||this.isActive())||(!this.track||!this.track.enabled))}},{key:\"_setConference\",value:function(e){this.conference=e;for(var t=0;t<this.containers.length;t++)this._maybeFireTrackAttached(this.containers[t])}},{key:\"isLocal\",value:function(){return!0}},{key:\"getDeviceId\",value:function(){return this._realDeviceId||this.deviceId}},{key:\"getParticipantId\",value:function(){return this.conference&&this.conference.myUserId()}},{key:\"_onByteSentStatsReceived\",value:function(e,t){var n=this;t>0&&(this._hasSentData=!0);var r=e.getConnectionState();this._testDataSent&&\"connected\"===r&&(setTimeout(function(){n._hasSentData||(R.warn(\"\".concat(n,\" 'bytes sent' <= 0:                         \").concat(n._bytesSent)),n._fireNoDataFromSourceEvent())},3e3),this._testDataSent=!1)}},{key:\"getCameraFacingMode\",value:function(){if(this.isVideoTrack()&&this.videoType===v.a.CAMERA){var e;try{e=this.track.getSettings()}catch(e){}return e&&\"facingMode\"in e?e.facingMode:void 0!==this._facingMode?this._facingMode:d.a.USER}}},{key:\"_stopStream\",value:function(){this._stopStreamInProgress=!0;try{u.a.stopMediaStream(this.stream)}finally{this._stopStreamInProgress=!1}}},{key:\"_switchCamera\",value:function(){this.isVideoTrack()&&this.videoType===v.a.CAMERA&&\"function\"==typeof this.track._switchCamera&&(this.track._switchCamera(),this._facingMode=this._facingMode===d.a.ENVIRONMENT?d.a.USER:d.a.ENVIRONMENT)}},{key:\"_checkForCameraIssues\",value:function(){return!(!this.isVideoTrack()||this._stopStreamInProgress||this.videoType===v.a.DESKTOP)&&!this._isReceivingData()}},{key:\"_isReceivingData\",value:function(){return!!this.stream&&this.stream.getTracks().some(function(e){return!(\"readyState\"in e&&\"live\"!==e.readyState||\"muted\"in e&&!0===e.muted)})}},{key:\"toString\",value:function(){return\"LocalTrack[\".concat(this.rtcId,\",\").concat(this.getType(),\"]\")}}])&&S(n.prototype,r),l&&S(n,l),t}()}).call(this,\"modules/RTC/JitsiLocalTrack.js\")},function(e,t,n){\"use strict\";n.d(t,\"a\",function(){return a});var r=n(1),i=n(46);function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var a=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this._connection=t.connection,this._mode=t.mode,this._setSessionID(t.sessionID),this.setStatus(t.status)}var t,n,a;return t=e,(n=[{key:\"getError\",value:function(){return this._error}},{key:\"getID\",value:function(){return this._sessionID}},{key:\"getLiveStreamViewURL\",value:function(){return this._liveStreamViewURL}},{key:\"getStatus\",value:function(){return this._status}},{key:\"getMode\",value:function(){return this._mode}},{key:\"setError\",value:function(e){this._error=e}},{key:\"setLiveStreamViewURL\",value:function(e){this._liveStreamViewURL=e}},{key:\"setStatus\",value:function(e){this._status=e}},{key:\"start\",value:function(e){var t=this,n=e.appData,r=e.broadcastId,o=e.focusMucJid,a=e.streamId;return new Promise(function(e,s){t._connection.sendIQ(t._createIQ({action:\"start\",appData:n,focusMucJid:o,broadcastId:r,streamId:a}),function(n){t.setStatus(\"pending\"),t._setSessionID(i.a.getSessionIdFromIq(n)),e()},function(e){t._setErrorFromIq(e),s(e)})})}},{key:\"stop\",value:function(e){var t=this,n=e.focusMucJid;return new Promise(function(e,r){t._connection.sendIQ(t._createIQ({action:\"stop\",focusMucJid:n}),e,r)})}},{key:\"_createIQ\",value:function(e){var t=e.action,n=e.appData,i=e.broadcastId,o=e.focusMucJid,a=e.streamId;return Object(r.$iq)({to:o,type:\"set\"}).c(\"jibri\",{xmlns:\"http://jitsi.org/protocol/jibri\",action:t,app_data:n,recording_mode:this._mode,streamid:a,you_tube_broadcast_id:i}).up()}},{key:\"_setErrorFromIq\",value:function(e){var t=e.getElementsByTagName(\"error\")[0];this.setError(t.children[0].tagName)}},{key:\"_setSessionID\",value:function(e){this._sessionID=e}}])&&o(t.prototype,n),a&&o(t,a),e}()},function(e,t,n){\"use strict\";var r=n(30),i=n.n(r),o=n(9),a=n(3),s=n(13),c=n(7),u=n.n(c),l=n(6),d=n(48);function p(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function h(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var f=\"camera\",m=function(){function e(){var t=this;!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this._eventEmitter=new i.a,this._grantedPermissions={},s.a.addListener(u.a.DEVICE_LIST_CHANGED,function(e){return t._eventEmitter.emit(d.DEVICE_LIST_CHANGED,e)}),s.a.addListener(u.a.DEVICE_LIST_AVAILABLE,function(e){return t._logOutputDevice(t.getAudioOutputDevice(),e)}),s.a.addListener(u.a.GRANTED_PERMISSIONS,function(e){return t._handleGrantedPermissions(e)}),this._permissionsApiSupported=new Promise(function(e){navigator.permissions?navigator.permissions.query({name:f}).then(function(){return e(!0)},function(){return e(!1)}):e(!1)})}var t,n,r;return t=e,(n=[{key:\"_handleGrantedPermissions\",value:function(e){this._grantedPermissions=function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);\"function\"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),r.forEach(function(t){p(e,t,n[t])})}return e}({},this._grantedPermissions,e)}},{key:\"_logOutputDevice\",value:function(e,t){var n=t.find(function(t){return\"audiooutput\"===t.kind&&t.deviceId===e});n&&l.a.sendActiveDeviceListEvent(s.a.getEventDataForActiveDevice(n))}},{key:\"enumerateDevices\",value:function(e){s.a.enumerateDevices(e)}},{key:\"isDeviceListAvailable\",value:function(){return s.a.isDeviceListAvailable()}},{key:\"isDeviceChangeAvailable\",value:function(e){return s.a.isDeviceChangeAvailable(e)}},{key:\"isDevicePermissionGranted\",value:function(e){var t=this;return new Promise(function(n){e in t._grantedPermissions?n(t._grantedPermissions[e]):t._permissionsApiSupported.then(function(t){if(t){var r=[];switch(e){case o.b:r.push(navigator.permissions.query({name:f}));break;case o.a:r.push(navigator.permissions.query({name:\"microphone\"}));break;default:r.push(navigator.permissions.query({name:f})),r.push(navigator.permissions.query({name:\"microphone\"}))}Promise.all(r).then(function(e){return n(e.every(function(e){return\"granted\"===(e.state||e.status)}))},function(){return n(!1)})}else n(!1)})})}},{key:\"isMultipleAudioInputSupported\",value:function(){return!a.a.isFirefox()}},{key:\"getAudioOutputDevice\",value:function(){return s.a.getAudioOutputDevice()}},{key:\"setAudioOutputDevice\",value:function(e){var t=s.a.getCurrentlyAvailableMediaDevices();return t&&t.length>0&&this._logOutputDevice(e,s.a.getCurrentlyAvailableMediaDevices()),s.a.setAudioOutputDevice(e)}},{key:\"addEventListener\",value:function(e,t){this._eventEmitter.addListener(e,t)}},{key:\"removeEventListener\",value:function(e,t){this._eventEmitter.removeListener(e,t)}},{key:\"emitEvent\",value:function(e){for(var t,n=arguments.length,r=new Array(n>1?n-1:0),i=1;i<n;i++)r[i-1]=arguments[i];(t=this._eventEmitter).emit.apply(t,[e].concat(r))}},{key:\"supportsVideo\",value:function(){return a.a.supportsVideo()}}])&&h(t.prototype,n),r&&h(t,r),e}();t.a=new m},function(e,t){var n={trace:0,debug:1,info:2,log:3,warn:4,error:5};o.consoleTransport=console;var r=[o.consoleTransport];function i(){var e=arguments[0],t=arguments[1],i=Array.prototype.slice.call(arguments,2);if(!(n[t]<e.level))for(var o=function(){var e={methodName:\"\",fileLocation:\"\",line:null,column:null},t=new Error,n=t.stack?t.stack.split(\"\\n\"):[];if(!n||n.length<1)return e;var r=null;return n[3]&&(r=n[3].match(/\\s*at\\s*(.+?)\\s*\\((\\S*)\\s*:(\\d*)\\s*:(\\d*)\\)/)),!r||r.length<=4?(0===n[2].indexOf(\"log@\")?e.methodName=n[3].substr(0,n[3].indexOf(\"@\")):e.methodName=n[2].substr(0,n[2].indexOf(\"@\")),e):(e.methodName=r[1],e.fileLocation=r[2],e.line=r[3],e.column=r[4],e)}(),a=r.concat(e.transports),s=0;s<a.length;s++){var c=a[s],u=c[t];u&&\"function\"==typeof u&&u.bind(c,e.id?\"[\"+e.id+\"]\":\"\",\"<\"+o.methodName+\">: \").apply(c,i)}}function o(e,t,r,o){this.id=t,this.format=o,this.transports=r,this.transports||(this.transports=[]),this.level=n[e];for(var a=Object.keys(n),s=0;s<a.length;s++)this[a[s]]=i.bind(null,this,a[s])}o.addGlobalTransport=function(e){-1===r.indexOf(e)&&r.push(e)},o.removeGlobalTransport=function(e){var t=r.indexOf(e);-1!==t&&r.splice(t,1)},o.prototype.setLevel=function(e){this.level=n[e]},e.exports=o,o.levels={TRACE:\"trace\",DEBUG:\"debug\",INFO:\"info\",LOG:\"log\",WARN:\"warn\",ERROR:\"error\"}},function(e,t){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children||(e.children=[]),Object.defineProperty(e,\"loaded\",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,\"id\",{enumerable:!0,get:function(){return e.i}}),e.webpackPolyfill=1),e}},function(e,t){var n=e.exports={v:[{name:\"version\",reg:/^(\\d*)$/}],o:[{name:\"origin\",reg:/^(\\S*) (\\d*) (\\d*) (\\S*) IP(\\d) (\\S*)/,names:[\"username\",\"sessionId\",\"sessionVersion\",\"netType\",\"ipVer\",\"address\"],format:\"%s %s %d %s IP%d %s\"}],s:[{name:\"name\"}],i:[{name:\"description\"}],u:[{name:\"uri\"}],e:[{name:\"email\"}],p:[{name:\"phone\"}],z:[{name:\"timezones\"}],r:[{name:\"repeats\"}],t:[{name:\"timing\",reg:/^(\\d*) (\\d*)/,names:[\"start\",\"stop\"],format:\"%d %d\"}],c:[{name:\"connection\",reg:/^IN IP(\\d) (\\S*)/,names:[\"version\",\"ip\"],format:\"IN IP%d %s\"}],b:[{push:\"bandwidth\",reg:/^(TIAS|AS|CT|RR|RS):(\\d*)/,names:[\"type\",\"limit\"],format:\"%s:%s\"}],m:[{reg:/^(\\w*) (\\d*) ([\\w\\/]*)(?: (.*))?/,names:[\"type\",\"port\",\"protocol\",\"payloads\"],format:\"%s %d %s %s\"}],a:[{push:\"rtp\",reg:/^rtpmap:(\\d*) ([\\w\\-\\.]*)(?:\\s*\\/(\\d*)(?:\\s*\\/(\\S*))?)?/,names:[\"payload\",\"codec\",\"rate\",\"encoding\"],format:function(e){return e.encoding?\"rtpmap:%d %s/%s/%s\":e.rate?\"rtpmap:%d %s/%s\":\"rtpmap:%d %s\"}},{push:\"fmtp\",reg:/^fmtp:(\\d*) ([\\S| ]*)/,names:[\"payload\",\"config\"],format:\"fmtp:%d %s\"},{name:\"control\",reg:/^control:(.*)/,format:\"control:%s\"},{name:\"rtcp\",reg:/^rtcp:(\\d*)(?: (\\S*) IP(\\d) (\\S*))?/,names:[\"port\",\"netType\",\"ipVer\",\"address\"],format:function(e){return null!=e.address?\"rtcp:%d %s IP%d %s\":\"rtcp:%d\"}},{push:\"rtcpFbTrrInt\",reg:/^rtcp-fb:(\\*|\\d*) trr-int (\\d*)/,names:[\"payload\",\"value\"],format:\"rtcp-fb:%d trr-int %d\"},{push:\"rtcpFb\",reg:/^rtcp-fb:(\\*|\\d*) ([\\w-_]*)(?: ([\\w-_]*))?/,names:[\"payload\",\"type\",\"subtype\"],format:function(e){return null!=e.subtype?\"rtcp-fb:%s %s %s\":\"rtcp-fb:%s %s\"}},{push:\"ext\",reg:/^extmap:(\\d+)(?:\\/(\\w+))? (\\S*)(?: (\\S*))?/,names:[\"value\",\"direction\",\"uri\",\"config\"],format:function(e){return\"extmap:%d\"+(e.direction?\"/%s\":\"%v\")+\" %s\"+(e.config?\" %s\":\"\")}},{push:\"crypto\",reg:/^crypto:(\\d*) ([\\w_]*) (\\S*)(?: (\\S*))?/,names:[\"id\",\"suite\",\"config\",\"sessionConfig\"],format:function(e){return null!=e.sessionConfig?\"crypto:%d %s %s %s\":\"crypto:%d %s %s\"}},{name:\"setup\",reg:/^setup:(\\w*)/,format:\"setup:%s\"},{name:\"mid\",reg:/^mid:([^\\s]*)/,format:\"mid:%s\"},{name:\"msid\",reg:/^msid:(.*)/,format:\"msid:%s\"},{name:\"ptime\",reg:/^ptime:(\\d*)/,format:\"ptime:%d\"},{name:\"maxptime\",reg:/^maxptime:(\\d*)/,format:\"maxptime:%d\"},{name:\"direction\",reg:/^(sendrecv|recvonly|sendonly|inactive)/},{name:\"icelite\",reg:/^(ice-lite)/},{name:\"iceUfrag\",reg:/^ice-ufrag:(\\S*)/,format:\"ice-ufrag:%s\"},{name:\"icePwd\",reg:/^ice-pwd:(\\S*)/,format:\"ice-pwd:%s\"},{name:\"fingerprint\",reg:/^fingerprint:(\\S*) (\\S*)/,names:[\"type\",\"hash\"],format:\"fingerprint:%s %s\"},{push:\"candidates\",reg:/^candidate:(\\S*) (\\d*) (\\S*) (\\d*) (\\S*) (\\d*) typ (\\S*)(?: raddr (\\S*) rport (\\d*))?(?: tcptype (\\S*))?(?: generation (\\d*))?(?: network-id (\\d*))?(?: network-cost (\\d*))?/,names:[\"foundation\",\"component\",\"transport\",\"priority\",\"ip\",\"port\",\"type\",\"raddr\",\"rport\",\"tcptype\",\"generation\",\"network-id\",\"network-cost\"],format:function(e){var t=\"candidate:%s %d %s %d %s %d typ %s\";return t+=null!=e.raddr?\" raddr %s rport %d\":\"%v%v\",t+=null!=e.tcptype?\" tcptype %s\":\"%v\",null!=e.generation&&(t+=\" generation %d\"),t+=null!=e[\"network-id\"]?\" network-id %d\":\"%v\",t+=null!=e[\"network-cost\"]?\" network-cost %d\":\"%v\"}},{name:\"endOfCandidates\",reg:/^(end-of-candidates)/},{name:\"remoteCandidates\",reg:/^remote-candidates:(.*)/,format:\"remote-candidates:%s\"},{name:\"iceOptions\",reg:/^ice-options:(\\S*)/,format:\"ice-options:%s\"},{push:\"ssrcs\",reg:/^ssrc:(\\d*) ([\\w_]*)(?::(.*))?/,names:[\"id\",\"attribute\",\"value\"],format:function(e){var t=\"ssrc:%d\";return null!=e.attribute&&(t+=\" %s\",null!=e.value&&(t+=\":%s\")),t}},{push:\"ssrcGroups\",reg:/^ssrc-group:([\\x21\\x23\\x24\\x25\\x26\\x27\\x2A\\x2B\\x2D\\x2E\\w]*) (.*)/,names:[\"semantics\",\"ssrcs\"],format:\"ssrc-group:%s %s\"},{name:\"msidSemantic\",reg:/^msid-semantic:\\s?(\\w*) (\\S*)/,names:[\"semantic\",\"token\"],format:\"msid-semantic: %s %s\"},{push:\"groups\",reg:/^group:(\\w*) (.*)/,names:[\"type\",\"mids\"],format:\"group:%s %s\"},{name:\"rtcpMux\",reg:/^(rtcp-mux)/},{name:\"rtcpRsize\",reg:/^(rtcp-rsize)/},{name:\"sctpmap\",reg:/^sctpmap:([\\w_\\/]*) (\\S*)(?: (\\S*))?/,names:[\"sctpmapNumber\",\"app\",\"maxMessageSize\"],format:function(e){return null!=e.maxMessageSize?\"sctpmap:%s %s %s\":\"sctpmap:%s %s\"}},{name:\"xGoogleFlag\",reg:/^x-google-flag:([^\\s]*)/,format:\"x-google-flag:%s\"},{push:\"rids\",reg:/^rid:([\\d\\w]+) (\\w+)(?: ([\\S| ]*))?/,names:[\"id\",\"direction\",\"params\"],format:function(e){return e.params?\"rid:%s %s %s\":\"rid:%s %s\"}},{push:\"imageattrs\",reg:new RegExp(\"^imageattr:(\\\\d+|\\\\*)[\\\\s\\\\t]+(send|recv)[\\\\s\\\\t]+(\\\\*|\\\\[\\\\S+\\\\](?:[\\\\s\\\\t]+\\\\[\\\\S+\\\\])*)(?:[\\\\s\\\\t]+(recv|send)[\\\\s\\\\t]+(\\\\*|\\\\[\\\\S+\\\\](?:[\\\\s\\\\t]+\\\\[\\\\S+\\\\])*))?\"),names:[\"pt\",\"dir1\",\"attrs1\",\"dir2\",\"attrs2\"],format:function(e){return\"imageattr:%s %s %s\"+(e.dir2?\" %s %s\":\"\")}},{name:\"simulcast\",reg:new RegExp(\"^simulcast:(send|recv) ([a-zA-Z0-9\\\\-_~;,]+)(?:\\\\s?(send|recv) ([a-zA-Z0-9\\\\-_~;,]+))?$\"),names:[\"dir1\",\"list1\",\"dir2\",\"list2\"],format:function(e){return\"simulcast:%s %s\"+(e.dir2?\" %s %s\":\"\")}},{name:\"simulcast_03\",reg:/^simulcast:[\\s\\t]+([\\S+\\s\\t]+)$/,names:[\"value\"],format:\"simulcast: %s\"},{name:\"framerate\",reg:/^framerate:(\\d+(?:$|\\.\\d+))/,format:\"framerate:%s\"},{push:\"invalid\",names:[\"value\"]}]};Object.keys(n).forEach(function(e){n[e].forEach(function(e){e.reg||(e.reg=/(.*)/),e.format||(e.format=\"%s\")})})},function(e,t,n){\"use strict\";(function(e){function t(e){return(t=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}var n={generateIdentifier:function(){return Math.random().toString(36).substr(2,10)}};n.localCName=n.generateIdentifier(),n.splitLines=function(e){return e.trim().split(\"\\n\").map(function(e){return e.trim()})},n.splitSections=function(e){return e.split(\"\\nm=\").map(function(e,t){return(t>0?\"m=\"+e:e).trim()+\"\\r\\n\"})},n.getDescription=function(e){var t=n.splitSections(e);return t&&t[0]},n.getMediaSections=function(e){var t=n.splitSections(e);return t.shift(),t},n.matchPrefix=function(e,t){return n.splitLines(e).filter(function(e){return 0===e.indexOf(t)})},n.parseCandidate=function(e){for(var t,n={foundation:(t=0===e.indexOf(\"a=candidate:\")?e.substring(12).split(\" \"):e.substring(10).split(\" \"))[0],component:parseInt(t[1],10),protocol:t[2].toLowerCase(),priority:parseInt(t[3],10),ip:t[4],address:t[4],port:parseInt(t[5],10),type:t[7]},r=8;r<t.length;r+=2)switch(t[r]){case\"raddr\":n.relatedAddress=t[r+1];break;case\"rport\":n.relatedPort=parseInt(t[r+1],10);break;case\"tcptype\":n.tcpType=t[r+1];break;case\"ufrag\":n.ufrag=t[r+1],n.usernameFragment=t[r+1];break;default:n[t[r]]=t[r+1]}return n},n.writeCandidate=function(e){var t=[];t.push(e.foundation),t.push(e.component),t.push(e.protocol.toUpperCase()),t.push(e.priority),t.push(e.address||e.ip),t.push(e.port);var n=e.type;return t.push(\"typ\"),t.push(n),\"host\"!==n&&e.relatedAddress&&e.relatedPort&&(t.push(\"raddr\"),t.push(e.relatedAddress),t.push(\"rport\"),t.push(e.relatedPort)),e.tcpType&&\"tcp\"===e.protocol.toLowerCase()&&(t.push(\"tcptype\"),t.push(e.tcpType)),(e.usernameFragment||e.ufrag)&&(t.push(\"ufrag\"),t.push(e.usernameFragment||e.ufrag)),\"candidate:\"+t.join(\" \")},n.parseIceOptions=function(e){return e.substr(14).split(\" \")},n.parseRtpMap=function(e){var t=e.substr(9).split(\" \"),n={payloadType:parseInt(t.shift(),10)};return t=t[0].split(\"/\"),n.name=t[0],n.clockRate=parseInt(t[1],10),n.channels=3===t.length?parseInt(t[2],10):1,n.numChannels=n.channels,n},n.writeRtpMap=function(e){var t=e.payloadType;void 0!==e.preferredPayloadType&&(t=e.preferredPayloadType);var n=e.channels||e.numChannels||1;return\"a=rtpmap:\"+t+\" \"+e.name+\"/\"+e.clockRate+(1!==n?\"/\"+n:\"\")+\"\\r\\n\"},n.parseExtmap=function(e){var t=e.substr(9).split(\" \");return{id:parseInt(t[0],10),direction:t[0].indexOf(\"/\")>0?t[0].split(\"/\")[1]:\"sendrecv\",uri:t[1]}},n.writeExtmap=function(e){return\"a=extmap:\"+(e.id||e.preferredId)+(e.direction&&\"sendrecv\"!==e.direction?\"/\"+e.direction:\"\")+\" \"+e.uri+\"\\r\\n\"},n.parseFmtp=function(e){for(var t,n={},r=e.substr(e.indexOf(\" \")+1).split(\";\"),i=0;i<r.length;i++)n[(t=r[i].trim().split(\"=\"))[0].trim()]=t[1];return n},n.writeFmtp=function(e){var t=\"\",n=e.payloadType;if(void 0!==e.preferredPayloadType&&(n=e.preferredPayloadType),e.parameters&&Object.keys(e.parameters).length){var r=[];Object.keys(e.parameters).forEach(function(t){e.parameters[t]?r.push(t+\"=\"+e.parameters[t]):r.push(t)}),t+=\"a=fmtp:\"+n+\" \"+r.join(\";\")+\"\\r\\n\"}return t},n.parseRtcpFb=function(e){var t=e.substr(e.indexOf(\" \")+1).split(\" \");return{type:t.shift(),parameter:t.join(\" \")}},n.writeRtcpFb=function(e){var t=\"\",n=e.payloadType;return void 0!==e.preferredPayloadType&&(n=e.preferredPayloadType),e.rtcpFeedback&&e.rtcpFeedback.length&&e.rtcpFeedback.forEach(function(e){t+=\"a=rtcp-fb:\"+n+\" \"+e.type+(e.parameter&&e.parameter.length?\" \"+e.parameter:\"\")+\"\\r\\n\"}),t},n.parseSsrcMedia=function(e){var t=e.indexOf(\" \"),n={ssrc:parseInt(e.substr(7,t-7),10)},r=e.indexOf(\":\",t);return r>-1?(n.attribute=e.substr(t+1,r-t-1),n.value=e.substr(r+1)):n.attribute=e.substr(t+1),n},n.parseSsrcGroup=function(e){var t=e.substr(13).split(\" \");return{semantics:t.shift(),ssrcs:t.map(function(e){return parseInt(e,10)})}},n.getMid=function(e){var t=n.matchPrefix(e,\"a=mid:\")[0];if(t)return t.substr(6)},n.parseFingerprint=function(e){var t=e.substr(14).split(\" \");return{algorithm:t[0].toLowerCase(),value:t[1]}},n.getDtlsParameters=function(e,t){return{role:\"auto\",fingerprints:n.matchPrefix(e+t,\"a=fingerprint:\").map(n.parseFingerprint)}},n.writeDtlsParameters=function(e,t){var n=\"a=setup:\"+t+\"\\r\\n\";return e.fingerprints.forEach(function(e){n+=\"a=fingerprint:\"+e.algorithm+\" \"+e.value+\"\\r\\n\"}),n},n.getIceParameters=function(e,t){var r=n.splitLines(e);return{usernameFragment:(r=r.concat(n.splitLines(t))).filter(function(e){return 0===e.indexOf(\"a=ice-ufrag:\")})[0].substr(12),password:r.filter(function(e){return 0===e.indexOf(\"a=ice-pwd:\")})[0].substr(10)}},n.writeIceParameters=function(e){return\"a=ice-ufrag:\"+e.usernameFragment+\"\\r\\na=ice-pwd:\"+e.password+\"\\r\\n\"},n.parseRtpParameters=function(e){for(var t={codecs:[],headerExtensions:[],fecMechanisms:[],rtcp:[]},r=n.splitLines(e)[0].split(\" \"),i=3;i<r.length;i++){var o=r[i],a=n.matchPrefix(e,\"a=rtpmap:\"+o+\" \")[0];if(a){var s=n.parseRtpMap(a),c=n.matchPrefix(e,\"a=fmtp:\"+o+\" \");switch(s.parameters=c.length?n.parseFmtp(c[0]):{},s.rtcpFeedback=n.matchPrefix(e,\"a=rtcp-fb:\"+o+\" \").map(n.parseRtcpFb),t.codecs.push(s),s.name.toUpperCase()){case\"RED\":case\"ULPFEC\":t.fecMechanisms.push(s.name.toUpperCase())}}}return n.matchPrefix(e,\"a=extmap:\").forEach(function(e){t.headerExtensions.push(n.parseExtmap(e))}),t},n.writeRtpDescription=function(e,t){var r=\"\";r+=\"m=\"+e+\" \",r+=t.codecs.length>0?\"9\":\"0\",r+=\" UDP/TLS/RTP/SAVPF \",r+=t.codecs.map(function(e){return void 0!==e.preferredPayloadType?e.preferredPayloadType:e.payloadType}).join(\" \")+\"\\r\\n\",r+=\"c=IN IP4 0.0.0.0\\r\\n\",r+=\"a=rtcp:9 IN IP4 0.0.0.0\\r\\n\",t.codecs.forEach(function(e){r+=n.writeRtpMap(e),r+=n.writeFmtp(e),r+=n.writeRtcpFb(e)});var i=0;return t.codecs.forEach(function(e){e.maxptime>i&&(i=e.maxptime)}),i>0&&(r+=\"a=maxptime:\"+i+\"\\r\\n\"),r+=\"a=rtcp-mux\\r\\n\",t.headerExtensions&&t.headerExtensions.forEach(function(e){r+=n.writeExtmap(e)}),r},n.parseRtpEncodingParameters=function(e){var t,r=[],i=n.parseRtpParameters(e),o=-1!==i.fecMechanisms.indexOf(\"RED\"),a=-1!==i.fecMechanisms.indexOf(\"ULPFEC\"),s=n.matchPrefix(e,\"a=ssrc:\").map(function(e){return n.parseSsrcMedia(e)}).filter(function(e){return\"cname\"===e.attribute}),c=s.length>0&&s[0].ssrc,u=n.matchPrefix(e,\"a=ssrc-group:FID\").map(function(e){return e.substr(17).split(\" \").map(function(e){return parseInt(e,10)})});u.length>0&&u[0].length>1&&u[0][0]===c&&(t=u[0][1]),i.codecs.forEach(function(e){if(\"RTX\"===e.name.toUpperCase()&&e.parameters.apt){var n={ssrc:c,codecPayloadType:parseInt(e.parameters.apt,10)};c&&t&&(n.rtx={ssrc:t}),r.push(n),o&&((n=JSON.parse(JSON.stringify(n))).fec={ssrc:c,mechanism:a?\"red+ulpfec\":\"red\"},r.push(n))}}),0===r.length&&c&&r.push({ssrc:c});var l=n.matchPrefix(e,\"b=\");return l.length&&(l=0===l[0].indexOf(\"b=TIAS:\")?parseInt(l[0].substr(7),10):0===l[0].indexOf(\"b=AS:\")?1e3*parseInt(l[0].substr(5),10)*.95-16e3:void 0,r.forEach(function(e){e.maxBitrate=l})),r},n.parseRtcpParameters=function(e){var t={},r=n.matchPrefix(e,\"a=ssrc:\").map(function(e){return n.parseSsrcMedia(e)}).filter(function(e){return\"cname\"===e.attribute})[0];r&&(t.cname=r.value,t.ssrc=r.ssrc);var i=n.matchPrefix(e,\"a=rtcp-rsize\");t.reducedSize=i.length>0,t.compound=0===i.length;var o=n.matchPrefix(e,\"a=rtcp-mux\");return t.mux=o.length>0,t},n.parseMsid=function(e){var t,r=n.matchPrefix(e,\"a=msid:\");if(1===r.length)return{stream:(t=r[0].substr(7).split(\" \"))[0],track:t[1]};var i=n.matchPrefix(e,\"a=ssrc:\").map(function(e){return n.parseSsrcMedia(e)}).filter(function(e){return\"msid\"===e.attribute});return i.length>0?{stream:(t=i[0].value.split(\" \"))[0],track:t[1]}:void 0},n.generateSessionId=function(){return Math.random().toString().substr(2,21)},n.writeSessionBoilerplate=function(e,t,r){var i=void 0!==t?t:2;return\"v=0\\r\\no=\"+(r||\"thisisadapterortc\")+\" \"+(e||n.generateSessionId())+\" \"+i+\" IN IP4 127.0.0.1\\r\\ns=-\\r\\nt=0 0\\r\\n\"},n.writeMediaSection=function(e,t,r,i){var o=n.writeRtpDescription(e.kind,t);if(o+=n.writeIceParameters(e.iceGatherer.getLocalParameters()),o+=n.writeDtlsParameters(e.dtlsTransport.getLocalParameters(),\"offer\"===r?\"actpass\":\"active\"),o+=\"a=mid:\"+e.mid+\"\\r\\n\",e.direction?o+=\"a=\"+e.direction+\"\\r\\n\":e.rtpSender&&e.rtpReceiver?o+=\"a=sendrecv\\r\\n\":e.rtpSender?o+=\"a=sendonly\\r\\n\":e.rtpReceiver?o+=\"a=recvonly\\r\\n\":o+=\"a=inactive\\r\\n\",e.rtpSender){var a=\"msid:\"+i.id+\" \"+e.rtpSender.track.id+\"\\r\\n\";o+=\"a=\"+a,o+=\"a=ssrc:\"+e.sendEncodingParameters[0].ssrc+\" \"+a,e.sendEncodingParameters[0].rtx&&(o+=\"a=ssrc:\"+e.sendEncodingParameters[0].rtx.ssrc+\" \"+a,o+=\"a=ssrc-group:FID \"+e.sendEncodingParameters[0].ssrc+\" \"+e.sendEncodingParameters[0].rtx.ssrc+\"\\r\\n\")}return o+=\"a=ssrc:\"+e.sendEncodingParameters[0].ssrc+\" cname:\"+n.localCName+\"\\r\\n\",e.rtpSender&&e.sendEncodingParameters[0].rtx&&(o+=\"a=ssrc:\"+e.sendEncodingParameters[0].rtx.ssrc+\" cname:\"+n.localCName+\"\\r\\n\"),o},n.getDirection=function(e,t){for(var r=n.splitLines(e),i=0;i<r.length;i++)switch(r[i]){case\"a=sendrecv\":case\"a=sendonly\":case\"a=recvonly\":case\"a=inactive\":return r[i].substr(2)}return t?n.getDirection(t):\"sendrecv\"},n.getKind=function(e){return n.splitLines(e)[0].split(\" \")[0].substr(2)},n.isRejected=function(e){return\"0\"===e.split(\" \",2)[1]},n.parseMLine=function(e){var t=n.splitLines(e)[0].substr(2).split(\" \");return{kind:t[0],port:parseInt(t[1],10),protocol:t[2],fmt:t.slice(3).join(\" \")}},n.parseOLine=function(e){var t=n.matchPrefix(e,\"o=\")[0].substr(2).split(\" \");return{username:t[0],sessionId:t[1],sessionVersion:parseInt(t[2],10),netType:t[3],addressType:t[4],address:t[5]}},n.isValidSDP=function(e){if(\"string\"!=typeof e||0===e.length)return!1;for(var t=n.splitLines(e),r=0;r<t.length;r++)if(t[r].length<2||\"=\"!==t[r].charAt(1))return!1;return!0},\"object\"===t(e)&&(e.exports=n)}).call(this,n(65)(e))},function(e,t,n){var r=n(152),i=\"audio/webm\",o=\"audio/ogg\",a=function(e){this.track=e,this.recorder=null,this.data=null,this.name=null,this.startTime=null};function s(e){if(void 0===e.recorder)throw new Error(\"Passed an object to startRecorder which is not a TrackRecorder object\");e.recorder.start(),e.startTime=new Date}function c(e){if(void 0===e.recorder)throw new Error(\"Passed an object to stopRecorder which is not a TrackRecorder object\");e.recorder.stop()}function u(){if(MediaRecorder.isTypeSupported(i))return i;if(MediaRecorder.isTypeSupported(o))return o;throw new Error(\"unable to create a MediaRecorder with the right mimetype!\")}function l(e){this.recorders=[],this.fileType=u(),this.isRecording=!1,this.jitsiConference=e}l.determineCorrectFileType=u,l.prototype.addTrack=function(e){if(e.isAudioTrack()){var t=this.instantiateTrackRecorder(e);this.recorders.push(t),this.updateNames(),this.isRecording&&s(t)}},l.prototype.instantiateTrackRecorder=function(e){var t=new a(e),n=t.track.getOriginalStream(),r=function(){if(\"undefined\"!=typeof MediaStream)return new MediaStream;throw new Error(\"cannot create a clean mediaStream\")}();return n.getAudioTracks().forEach(function(e){return r.addTrack(e)}),t.recorder=new MediaRecorder(r,{mimeType:this.fileType}),t.data=[],t.recorder.ondataavailable=function(e){e.data.size>0&&t.data.push(e.data)},t},l.prototype.removeTrack=function(e){if(!e.isVideoTrack()){var t,n=this.recorders;for(t=0;t<n.length;t++)if(n[t].track.getParticipantId()===e.getParticipantId()){var r=n[t];this.isRecording?c(r):n.splice(t,1)}this.updateNames()}},l.prototype.updateNames=function(){var e=this.jitsiConference;this.recorders.forEach(function(t){if(t.track.isLocal())t.name=\"the transcriber\";else{var n=t.track.getParticipantId(),r=e.getParticipantById(n).getDisplayName();\"undefined\"!==r&&(t.name=r)}})},l.prototype.start=function(){if(this.isRecording)throw new Error(\"audiorecorder is already recording\");this.isRecording=!0,this.recorders.forEach(function(e){return s(e)}),console.log(\"Started the recording of the audio. There are currently \".concat(this.recorders.length,\" recorders active.\"))},l.prototype.stop=function(){this.isRecording=!1,this.recorders.forEach(function(e){return c(e)}),console.log(\"stopped recording\")},l.prototype.download=function(){var e=this;this.recorders.forEach(function(t){var n=new Blob(t.data,{type:e.fileType}),r=URL.createObjectURL(n),i=document.createElement(\"a\");document.body.appendChild(i),i.style=\"display: none\",i.href=r,i.download=\"test.\".concat(e.fileType.split(\"/\")[1]),i.click(),window.URL.revokeObjectURL(r)})},l.prototype.getRecordingResults=function(){var e=this;if(this.isRecording)throw new Error(\"cannot get blobs because the AudioRecorder is still recording!\");this.updateNames();var t=[];return this.recorders.forEach(function(n){return t.push(new r(new Blob(n.data,{type:e.fileType}),n.name,n.startTime))}),t},l.prototype.getFileType=function(){return this.fileType},e.exports=l},function(e,t){e.exports={getTokenAuthUrl:function(e,t,n){return\"string\"!=typeof e?null:e.replace(\"{room}\",t).replace(\"{roleUpgrade}\",!0===n)}}},function(e,t,n){\"use strict\";n.d(t,\"a\",function(){return c});var r=n(8),i=n(71),o=n(22),a=n(6),s=n(38);function c(e,t,n){this.appID=e,this.token=t,this.options=n,this.xmpp=new s.c(n,t),this.addEventListener(o.CONNECTION_FAILED,function(e,t,n,i){a.a.sendAnalyticsAndLog(Object(r.w)(e,t,i))}),this.addEventListener(o.CONNECTION_DISCONNECTED,function(e){e&&a.a.sendAnalytics(r.l,{message:e}),a.a.sendLog(JSON.stringify({id:r.l,msg:e}))})}c.prototype.connect=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.xmpp.connect(e.id,e.password)},c.prototype.attach=function(e){this.xmpp.attach(e)},c.prototype.disconnect=function(){var e;(e=this.xmpp).disconnect.apply(e,arguments)},c.prototype.setToken=function(e){this.token=e},c.prototype.initJitsiConference=function(e,t){return new i.a({name:e,config:t,connection:this})},c.prototype.addEventListener=function(e,t){this.xmpp.addListener(e,t)},c.prototype.removeEventListener=function(e,t){this.xmpp.removeListener(e,t)},c.prototype.getConnectionTimes=function(){return this.xmpp.connectionTimes},c.prototype.addFeature=function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return this.xmpp.caps.addFeature(e,t)},c.prototype.removeFeature=function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return this.xmpp.caps.removeFeature(e,t)}},function(e,t,n){\"use strict\";(function(e){n.d(t,\"a\",function(){return X});var r=n(1),i=n(30),o=n.n(i),a=n(4),s=n(72),c=n.n(s),u=n(21),l=n(73),d=n(2),p=n(80),h=n(15),f=n(12),m=n(17),v=n(81),y=n(96),g=n.n(y),_=n(97),S=n(13),b=n(105),E=n(3),T=n(106),C=n(107),R=n(45),w=n(108),A=n(109),k=n(110),O=n(111),I=n(112),P=n(113),D=n(6),N=n(114),L=n.n(N),M=n(10),x=n.n(M),j=n(115),F=n(116),U=n(20),J=n(38),H=n(9),G=n(7),B=n(14),V=n.n(B),q=n(8),K=n(0);function W(e){return(W=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}var z=Object(a.getLogger)(e);function X(e){if(!e.name||e.name.toLowerCase()!==e.name){var t=\"Invalid conference name (no conference name passed or it contains invalid characters like capital letters)!\";throw z.error(t),new Error(t)}this.eventEmitter=new o.a,this.options=e,this.eventManager=new l.a(this),this.participants={},this._init(e),this.componentsVersions=new j.a(this),this.jvbJingleSession=null,this.lastDominantSpeaker=null,this.dtmfManager=null,this.somebodySupportsDTMF=!1,this.authEnabled=!1,this.startAudioMuted=!1,this.startVideoMuted=!1,this.startMutedPolicy={audio:!1,video:!1},this.isMutedByFocus=!1,this.wasStopped=!1,this.properties={},this.connectionQuality=new T.a(this,this.eventEmitter,e),this.avgRtpStatsReporter=new I.a(this,e.config.avgRtpStatsN||15),this.isJvbConnectionInterrupted=!1,this.speakerStatsCollector=new P.a(this),this.deferredStartP2PTask=null;var n=parseInt(e.config.p2p&&e.config.p2p.backToP2PDelay,10);this.backToP2PDelay=isNaN(n)?5:n,z.info(\"backToP2PDelay: \".concat(this.backToP2PDelay)),this.isP2PConnectionInterrupted=!1,this.p2p=!1,this.p2pJingleSession=null,this.videoSIPGWHandler=new F.a(this.room),this.recordingManager=new k.a(this.room)}X.prototype.constructor=X,X.prototype._init=function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};t.connection&&(this.connection=t.connection,this.xmpp=this.connection.xmpp,this.eventManager.setupXMPPListeners());var n=this.options.config;if(this.room=this.xmpp.createRoom(this.options.name,n),this._onIceConnectionInterrupted=this._onIceConnectionInterrupted.bind(this),this.room.addListener(K.CONNECTION_INTERRUPTED,this._onIceConnectionInterrupted),this._onIceConnectionRestored=this._onIceConnectionRestored.bind(this),this.room.addListener(K.CONNECTION_RESTORED,this._onIceConnectionRestored),this._onIceConnectionEstablished=this._onIceConnectionEstablished.bind(this),this.room.addListener(K.CONNECTION_ESTABLISHED,this._onIceConnectionEstablished),this._updateProperties=this._updateProperties.bind(this),this.room.addListener(K.CONFERENCE_PROPERTIES_CHANGED,this._updateProperties),this.rttMonitor=new O.a(n.rttMonitor||{}),this.e2eping=new w.a(this,n,function(t,n){try{e.sendMessage(t,n,!0)}catch(e){z.warn(\"Failed to send a ping request or response.\")}}),this.rtc||(this.rtc=new S.a(this,t),this.eventManager.setupRTCListeners()),this.participantConnectionStatus=new R.b(this.rtc,this,{rtcMuteTimeout:n._peerConnStatusRtcMuteTimeout,outOfLastNTimeout:n._peerConnStatusOutOfLastNTimeout}),this.participantConnectionStatus.init(),!this.statistics){var r=window.location,i=this.myUserId();n.enableDisplayNameInStats&&n.displayName&&(i=n.displayName),this.statistics=new D.a(this.xmpp,{callStatsAliasName:i,callStatsConfIDNamespace:n.callStatsConfIDNamespace||r&&r.hostname||n.hosts&&n.hosts.domain,customScriptUrl:n.callStatsCustomScriptUrl,callStatsID:n.callStatsID,callStatsSecret:n.callStatsSecret,roomName:this.options.name,swapUserNameAndAlias:n.enableStatsID,applicationName:n.applicationName,getWiFiStatsMethod:n.getWiFiStatsMethod})}this.eventManager.setupChatRoomListeners(),this.eventManager.setupStatisticsListeners(),n.enableTalkWhileMuted&&new b.a(this,function(){return e.eventEmitter.emit(d.TALK_WHILE_MUTED)}),\"channelLastN\"in n&&this.setLastN(n.channelLastN),this.jvb121Status=new A.a(this),this.p2pDominantSpeakerDetection=new _.a(this),n&&n.deploymentInfo&&n.deploymentInfo.userRegion&&this.setLocalParticipantProperty(\"region\",n.deploymentInfo.userRegion)},X.prototype.join=function(e){var t=this;this.room&&this.room.join(e).then(function(){return t._maybeSetSITimeout()})},X.prototype.authenticateAndUpgradeRole=function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return v.a.apply(this,t)},X.prototype.isJoined=function(){return this.room&&this.room.joined},X.prototype.isP2PEnabled=function(){return Boolean(this.options.config.p2p&&this.options.config.p2p.enabled)||void 0===this.options.config.p2p},X.prototype.isP2PTestModeEnabled=function(){return Boolean(this.options.config.testing&&this.options.config.testing.p2pTestMode)},X.prototype.leave=function(){var e=this;if(this.participantConnectionStatus&&(this.participantConnectionStatus.dispose(),this.participantConnectionStatus=null),this.avgRtpStatsReporter&&(this.avgRtpStatsReporter.dispose(),this.avgRtpStatsReporter=null),this.rttMonitor&&(this.rttMonitor.stop(),this.rttMonitor=null),this.e2eping&&(this.e2eping.stop(),this.e2eping=null),this.getLocalTracks().forEach(function(t){return e.onLocalTrackRemoved(t)}),this.rtc.closeBridgeChannel(),this.statistics&&this.statistics.dispose(),this._delayedIceFailed&&this._delayedIceFailed.cancel(),this.jvbJingleSession&&(this.jvbJingleSession.close(),this.jvbJingleSession=null),this.p2pJingleSession&&(this.p2pJingleSession.close(),this.p2pJingleSession=null),this.room){var t=this.room;return t.removeListener(K.CONNECTION_INTERRUPTED,this._onIceConnectionInterrupted),t.removeListener(K.CONNECTION_RESTORED,this._onIceConnectionRestored),t.removeListener(K.CONNECTION_ESTABLISHED,this._onIceConnectionEstablished),t.removeListener(K.CONFERENCE_PROPERTIES_CHANGED,this._updateProperties),this.eventManager.removeXMPPListeners(),this.room=null,t.leave().then(function(){e.rtc&&e.rtc.dispose()}).catch(function(t){throw e.getParticipants().forEach(function(t){return e.onMemberLeft(t.getJid())}),t})}return Promise.reject(new Error(\"The conference is has been already left\"))},X.prototype.getName=function(){return this.options.name},X.prototype.getConnection=function(){return this.connection},X.prototype.isAuthEnabled=function(){return this.authEnabled},X.prototype.isLoggedIn=function(){return Boolean(this.authIdentity)},X.prototype.getAuthLogin=function(){return this.authIdentity},X.prototype.isExternalAuthEnabled=function(){return this.room&&this.room.moderator.isExternalAuthEnabled()},X.prototype.getExternalAuthUrl=function(e){var t=this;return new Promise(function(n,r){t.isExternalAuthEnabled()?e?t.room.moderator.getPopupLoginUrl(n,r):t.room.moderator.getLoginUrl(n,r):r()})},X.prototype.getLocalTracks=function(e){var t=[];return this.rtc&&(t=this.rtc.getLocalTracks(e)),t},X.prototype.getLocalAudioTrack=function(){return this.rtc?this.rtc.getLocalAudioTrack():null},X.prototype.getLocalVideoTrack=function(){return this.rtc?this.rtc.getLocalVideoTrack():null},X.prototype.on=function(e,t){this.eventEmitter&&this.eventEmitter.on(e,t)},X.prototype.off=function(e,t){this.eventEmitter&&this.eventEmitter.removeListener(e,t)},X.prototype.addEventListener=X.prototype.on,X.prototype.removeEventListener=X.prototype.off,X.prototype.addCommandListener=function(e,t){this.room&&this.room.addPresenceListener(e,t)},X.prototype.removeCommandListener=function(e){this.room&&this.room.removePresenceListener(e)},X.prototype.sendTextMessage=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"body\";this.room&&this.room.sendMessage(e,t)},X.prototype.sendPrivateTextMessage=function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:\"body\";this.room&&this.room.sendPrivateMessage(e,t,n)},X.prototype.sendCommand=function(e,t){this.room?(this.room.addToPresence(e,t),this.room.sendPresence()):z.warn(\"Not sending a command, room not initialized.\")},X.prototype.sendCommandOnce=function(e,t){this.sendCommand(e,t),this.removeCommand(e)},X.prototype.removeCommand=function(e){this.room&&this.room.removeFromPresence(e)},X.prototype.setDisplayName=function(e){this.room&&(this.room.removeFromPresence(\"nick\"),this.room.addToPresence(\"nick\",{attributes:{xmlns:\"http://jabber.org/protocol/nick\"},value:e}),this.room.sendPresence())},X.prototype.setSubject=function(e){this.room&&this.isModerator()&&this.room.setSubject(e)},X.prototype.getTranscriber=function(){if(void 0===this.transcriber){this.transcriber=new L.a;var e=this.getLocalTracks(H.a),t=!0,n=!1,r=void 0;try{for(var i,o=e[Symbol.iterator]();!(t=(i=o.next()).done);t=!0){var a=i.value;this.transcriber.addTrack(a)}}catch(e){n=!0,r=e}finally{try{t||null==o.return||o.return()}finally{if(n)throw r}}var s=this.rtc.getRemoteTracks(H.a),c=!0,u=!1,l=void 0;try{for(var d,p=s[Symbol.iterator]();!(c=(d=p.next()).done);c=!0){var h=d.value;this.transcriber.addTrack(h)}}catch(e){u=!0,l=e}finally{try{c||null==p.return||p.return()}finally{if(u)throw l}}}return this.transcriber},X.prototype.getTranscriptionStatus=function(){return this.room.transcriptionStatus},X.prototype.addTrack=function(e){if(e.isVideoTrack()){var t=this.rtc.getLocalVideoTrack();if(t)return e===t?Promise.resolve(e):Promise.reject(new Error(\"cannot add second video track to the conference\"))}return this.replaceTrack(null,e)},X.prototype._fireAudioLevelChangeEvent=function(e,t){var n=this.getActivePeerConnection();t&&n!==t||this.eventEmitter.emit(d.TRACK_AUDIO_LEVEL_CHANGED,this.myUserId(),e)},X.prototype._fireMuteChangeEvent=function(e){this.isMutedByFocus&&e.isAudioTrack()&&!e.isMuted()&&(this.isMutedByFocus=!1,this.room.muteParticipant(this.room.myroomjid,!1)),this.eventEmitter.emit(d.TRACK_MUTE_CHANGED,e)},X.prototype.onLocalTrackRemoved=function(e){e._setConference(null),this.rtc.removeLocalTrack(e),e.removeEventListener(m.TRACK_MUTE_CHANGED,e.muteHandler),e.removeEventListener(m.TRACK_AUDIO_LEVEL_CHANGED,e.audioLevelHandler),e.isVideoTrack()&&e.videoType===V.a.DESKTOP&&this.statistics.sendScreenSharingEvent(!1),this.eventEmitter.emit(d.TRACK_REMOVED,e)},X.prototype.removeTrack=function(e){return this.replaceTrack(e,null)},X.prototype.replaceTrack=function(e,t){var n=this;return e&&e.disposed?Promise.reject(new h.a(f.TRACK_IS_DISPOSED)):t&&t.disposed?Promise.reject(new h.a(f.TRACK_IS_DISPOSED)):this._doReplaceTrack(e,t).then(function(){return e&&n.onLocalTrackRemoved(e),t&&n._setupNewTrack(t),Promise.resolve()},function(e){return Promise.reject(new Error(e))})},X.prototype._doReplaceTrack=function(e,t){var n=[];return this.jvbJingleSession?n.push(this.jvbJingleSession.replaceTrack(e,t)):z.info(\"_doReplaceTrack - no JVB JingleSession\"),this.p2pJingleSession?n.push(this.p2pJingleSession.replaceTrack(e,t)):z.info(\"_doReplaceTrack - no P2P JingleSession\"),Promise.all(n)},X.prototype._setupNewTrack=function(e){if(e.isAudioTrack()||e.isVideoTrack()&&e.videoType!==V.a.DESKTOP){var t=S.a.getCurrentlyAvailableMediaDevices().find(function(t){return t.kind===\"\".concat(e.getTrack().kind,\"input\")&&t.label===e.getTrack().label});t&&D.a.sendActiveDeviceListEvent(S.a.getEventDataForActiveDevice(t))}e.isVideoTrack()&&(this.removeCommand(\"videoType\"),this.sendCommand(\"videoType\",{value:e.videoType,attributes:{xmlns:\"http://jitsi.org/jitmeet/video\"}})),this.rtc.addLocalTrack(e),e.isAudioTrack()?this.room.setAudioMute(e.isMuted()):this.room.setVideoMute(e.isMuted()),e.muteHandler=this._fireMuteChangeEvent.bind(this,e),e.audioLevelHandler=this._fireAudioLevelChangeEvent.bind(this),e.addEventListener(m.TRACK_MUTE_CHANGED,e.muteHandler),e.addEventListener(m.TRACK_AUDIO_LEVEL_CHANGED,e.audioLevelHandler),e._setConference(this),this.eventEmitter.emit(d.TRACK_ADDED,e)},X.prototype._addLocalTrackAsUnmute=function(e){var t=[];return this.jvbJingleSession?t.push(this.jvbJingleSession.addTrackAsUnmute(e)):z.info(\"Add local MediaStream as unmute - no JVB Jingle session started yet\"),this.p2pJingleSession?t.push(this.p2pJingleSession.addTrackAsUnmute(e)):z.info(\"Add local MediaStream as unmute - no P2P Jingle session started yet\"),Promise.all(t)},X.prototype._removeLocalTrackAsMute=function(e){var t=[];return this.jvbJingleSession?t.push(this.jvbJingleSession.removeTrackAsMute(e)):z.info(\"Remove local MediaStream - no JVB JingleSession started yet\"),this.p2pJingleSession?t.push(this.p2pJingleSession.removeTrackAsMute(e)):z.info(\"Remove local MediaStream - no P2P JingleSession started yet\"),Promise.all(t)},X.prototype.getRole=function(){return this.room.role},X.prototype.isModerator=function(){return this.room?this.room.isModerator():null},X.prototype.lock=function(e){var t=this;return this.isModerator()?new Promise(function(n,r){t.room.lockRoom(e||\"\",function(){return n()},function(e){return r(e)},function(){return r(u.PASSWORD_NOT_SUPPORTED)})}):Promise.reject()},X.prototype.unlock=function(){return this.lock()},X.prototype.selectParticipant=function(e){this.selectParticipants([e])},X.prototype.selectParticipants=function(e){if(!Array.isArray(e))throw new Error(\"Invalid argument; participantIds must be an array.\");this.rtc.selectEndpoints(e)},X.prototype.pinParticipant=function(e){this.rtc.pinEndpoint(e)},X.prototype.getLastN=function(){return this.rtc.getLastN()},X.prototype.setLastN=function(e){if(!Number.isInteger(e)&&!Number.parseInt(e,10))throw new Error(\"Invalid value for lastN: \".concat(e));var t=Number(e);if(t<-1)throw new RangeError(\"lastN cannot be smaller than -1\");if(this.rtc.setLastN(t),this.p2pJingleSession){var n=0!==t;this.p2pJingleSession.setMediaTransferActive(!0,n).catch(function(e){z.error(\"Failed to adjust video transfer status (\".concat(n,\")\"),e)})}},X.prototype.isInLastN=function(e){return this.rtc.isInLastN(e)},X.prototype.getParticipants=function(){return Object.keys(this.participants).map(function(e){return this.participants[e]},this)},X.prototype.getParticipantCount=function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0],t=this.getParticipants();return e||(t=t.filter(function(e){return!e.isHidden()})),t.length+1},X.prototype.getParticipantById=function(e){return this.participants[e]},X.prototype.kickParticipant=function(e){var t=this.getParticipantById(e);t&&this.room.kick(t.getJid())},X.prototype._maybeClearSITimeout=function(){this._sessionInitiateTimeout&&(this.jvbJingleSession||this.getParticipantCount()<2)&&(window.clearTimeout(this._sessionInitiateTimeout),this._sessionInitiateTimeout=null)},X.prototype._maybeSetSITimeout=function(){var e=this;!this.jvbJingleSession&&this.getParticipantCount()>=2&&!this._sessionInitiateTimeout&&(this._sessionInitiateTimeout=window.setTimeout(function(){e._sessionInitiateTimeout=null,D.a.sendAnalytics(Object(q.B)(q.d,{p2p:!1,value:5e3}))},5e3))},X.prototype.muteParticipant=function(e){var t=this.getParticipantById(e);t&&this.room.muteParticipant(t.getJid(),!0)},X.prototype.onMemberJoined=function(e,t,n,i,o,a,s,c){var u=this,l=r.Strophe.getResourceFromJid(e);if(\"focus\"!==l&&this.myUserId()!==l){var h=new p.a(e,this,t,i,o,a);h._role=n,h._botType=c,this.participants[l]=h,this.eventEmitter.emit(d.USER_JOINED,l,h),this.xmpp.caps.getFeatures(e).then(function(e){h._supportsDTMF=e.has(\"urn:xmpp:jingle:dtmf:0\"),u.updateDTMFSupport()},function(t){return z.warn(\"Failed to discover features of \".concat(e),t)}),this._maybeStartOrStopP2P(),this._maybeSetSITimeout()}},X.prototype._onMemberBotTypeChanged=function(e,t){var n=this.getParticipants().find(function(t){return t.getJid()===e});if(n){n._botType=t;var i=r.Strophe.getResourceFromJid(e);this.eventEmitter.emit(d.BOT_TYPE_CHANGED,i,t)}n._botType||this._maybeStartOrStopP2P()},X.prototype.onMemberLeft=function(e){var t=this,n=r.Strophe.getResourceFromJid(e);if(\"focus\"!==n&&this.myUserId()!==n){var i=this.participants[n];delete this.participants[n],this.rtc.removeRemoteTracks(n).forEach(function(e){return t.eventEmitter.emit(d.TRACK_REMOVED,e)}),i&&this.eventEmitter.emit(d.USER_LEFT,n,i),this._maybeStartOrStopP2P(!0),this._maybeClearSITimeout()}},X.prototype.onLocalRoleChanged=function(e){this.eventEmitter.emit(d.USER_ROLE_CHANGED,this.myUserId(),e),this._maybeStartOrStopP2P()},X.prototype.onUserRoleChanged=function(e,t){var n=r.Strophe.getResourceFromJid(e),i=this.getParticipantById(n);i&&(i._role=t,this.eventEmitter.emit(d.USER_ROLE_CHANGED,n,t))},X.prototype.onDisplayNameChanged=function(e,t){var n=r.Strophe.getResourceFromJid(e),i=this.getParticipantById(n);i&&i._displayName!==t&&(i._displayName=t,this.eventEmitter.emit(d.DISPLAY_NAME_CHANGED,n,t))},X.prototype.onRemoteTrackAdded=function(e){var t=this;if(!e.isP2P||this.isP2PActive())if(e.isP2P||!this.isP2PActive()){var n=e.getParticipantId(),r=this.getParticipantById(n);if(r){r._tracks.push(e),this.transcriber&&this.transcriber.addTrack(e);var i=this.eventEmitter;e.addEventListener(m.TRACK_MUTE_CHANGED,function(){return i.emit(d.TRACK_MUTE_CHANGED,e)}),e.addEventListener(m.TRACK_AUDIO_LEVEL_CHANGED,function(e,r){t.getActivePeerConnection()===r&&i.emit(d.TRACK_AUDIO_LEVEL_CHANGED,n,e)}),i.emit(d.TRACK_ADDED,e)}else z.error(\"No participant found for id: \".concat(n))}else z.info(\"Trying to add remote JVB track, when in P2P - IGNORED\");else z.info(\"Trying to add remote P2P track, when not in P2P - IGNORED\")},X.prototype.onCallAccepted=function(e,t){this.p2pJingleSession===e&&(z.info(\"P2P setAnswer\"),this.p2pJingleSession.setAnswer(t))},X.prototype.onTransportInfo=function(e,t){this.p2pJingleSession===e&&(z.info(\"P2P addIceCandidates\"),this.p2pJingleSession.addIceCandidates(t))},X.prototype.onRemoteTrackRemoved=function(e){var t=this;this.getParticipants().forEach(function(n){for(var r=n.getTracks(),i=0;i<r.length;i++)if(r[i]===e){n._tracks.splice(i,1),t.eventEmitter.emit(d.TRACK_REMOVED,e),t.transcriber&&t.transcriber.removeTrack(e);break}},this)},X.prototype._onIncomingCallP2P=function(e,t){var n;\"moderator\"!==this.room.getMemberRole(e.remoteJid)?n={reason:\"security-error\",reasonDescription:\"Only focus can start new sessions\",errorMsg:\"Rejecting session-initiate from non-focus and\"+\"non-moderator user: \".concat(e.remoteJid)}:E.a.supportsP2P()?this.isP2PEnabled()||this.isP2PTestModeEnabled()?this.p2pJingleSession&&(n={reason:\"busy\",reasonDescription:\"P2P already in progress\",errorMsg:'Duplicated P2P \"session-initiate\"'}):n={reason:\"decline\",reasonDescription:\"P2P disabled\",errorMsg:\"P2P mode disabled in the configuration\"}:n={reason:\"unsupported-applications\",reasonDescription:\"P2P not supported\",errorMsg:\"This client does not support P2P connections\"},n?this._rejectIncomingCall(e,n):this._acceptP2PIncomingCall(e,t)},X.prototype.onIncomingCall=function(e,t,n){if(e.isP2P)this._onIncomingCallP2P(e,t);else{if(!this.room.isFocus(e.remoteJid)){var r=\"Rejecting session-initiate from non-focus.\";return void this._rejectIncomingCall(e,{reason:\"security-error\",reasonDescription:r,errorMsg:r})}this._acceptJvbIncomingCall(e,t,n)}},X.prototype._acceptJvbIncomingCall=function(e,t,n){var r=this;this.jvbJingleSession=e,this.room.connectionTimes[\"session.initiate\"]=n,this.wasStopped&&D.a.sendAnalyticsAndLog(Object(q.B)(q.a,{p2p:!1}));var i=$(t).find('>bridge-session[xmlns=\"http://jitsi.org/protocol/focus\"]').attr(\"region\");this.eventEmitter.emit(d.SERVER_REGION_CHANGED,i),this._maybeClearSITimeout(),D.a.sendAnalytics(Object(q.B)(q.c,{p2p:!1,value:n}));try{e.initialize(this.room,this.rtc,this.options.config)}catch(e){x.a.callErrorHandler(e)}this._setBridgeChannel(t,e.peerconnection);try{e.acceptOffer(t,function(){r.isP2PActive()&&r.jvbJingleSession&&r._suspendMediaTransferForJvbConnection()},function(e){x.a.callErrorHandler(e),z.error(\"Failed to accept incoming Jingle session\",e)},this.getLocalTracks()),z.info(\"Starting CallStats for JVB connection...\"),this.statistics.startCallStats(this.jvbJingleSession.peerconnection,\"jitsi\"),this.statistics.startRemoteStats(this.jvbJingleSession.peerconnection)}catch(e){x.a.callErrorHandler(e),z.error(e)}},X.prototype._setBridgeChannel=function(e,t){var n,r=null,i=$(e).find(\">content>transport>web-socket\").first();switch(1===i.length&&(r=i[0].getAttribute(\"url\")),this.options.config.openBridgeChannel){case\"datachannel\":case!0:case void 0:n=\"datachannel\";break;case\"websocket\":n=\"websocket\"}\"datachannel\"!==n||E.a.supportsDataChannels()||(n=\"websocket\"),\"datachannel\"===n?this.rtc.initializeBridgeChannel(t,null):\"websocket\"===n&&r&&this.rtc.initializeBridgeChannel(null,r)},X.prototype._rejectIncomingCall=function(e,t){t&&t.errorMsg&&x.a.callErrorHandler(new Error(t.errorMsg)),e.terminate(null,function(e){z.warn(\"An error occurred while trying to terminate invalid Jingle session\",e)},{reason:t&&t.reason,reasonDescription:t&&t.reasonDescription,sendSessionTerminate:!0})},X.prototype.onCallEnded=function(e,t,n){z.info(\"Call ended: \".concat(t,\" - \").concat(n,\" P2P ?\").concat(e.isP2P)),e===this.jvbJingleSession?(this.wasStopped=!0,D.a.sendAnalytics(Object(q.B)(q.e,{p2p:!1})),this.statistics&&(this.statistics.stopRemoteStats(this.jvbJingleSession.peerconnection),z.info(\"Stopping JVB CallStats\"),this.statistics.stopCallStats(this.jvbJingleSession.peerconnection)),this.jvbJingleSession=null,this.rtc.onCallEnded()):e===this.p2pJingleSession?(\"decline\"===t&&\"force JVB121\"===n?(z.info(\"In forced JVB 121 mode...\"),D.a.analytics.addPermanentProperties({forceJvb121:!0})):\"connectivity-error\"===t&&\"ICE FAILED\"===n&&D.a.analytics.addPermanentProperties({p2pFailed:!0}),this._stopP2PSession()):z.error(\"Received onCallEnded for invalid session\",e.sid,e.remoteJid,t,n)},X.prototype.onSuspendDetected=function(e){e.isP2P||(this.leave(),this.eventEmitter.emit(d.SUSPEND_DETECTED))},X.prototype.updateDTMFSupport=function(){for(var e=!1,t=this.getParticipants(),n=0;n<t.length;n+=1)if(t[n].supportsDTMF()){e=!0;break}e!==this.somebodySupportsDTMF&&(this.somebodySupportsDTMF=e,this.eventEmitter.emit(d.DTMF_SUPPORT_CHANGED,e))},X.prototype.isDTMFSupported=function(){return this.somebodySupportsDTMF},X.prototype.myUserId=function(){return this.room&&this.room.myroomjid?r.Strophe.getResourceFromJid(this.room.myroomjid):null},X.prototype.sendTones=function(e,t,n){if(!this.dtmfManager){var r=this.getActivePeerConnection();if(!r)return void z.warn(\"cannot sendTones: no peer connection\");var i=this.getLocalAudioTrack();if(!i)return void z.warn(\"cannot sendTones: no local audio stream\");this.dtmfManager=new g.a(i,r)}this.dtmfManager.sendTones(e,t,n)},X.prototype.startRecording=function(e){return this.room?this.recordingManager.startRecording(e):Promise.reject(new Error(\"The conference is not created yet!\"))},X.prototype.stopRecording=function(e){return this.room?this.recordingManager.stopRecording(e):Promise.reject(new Error(\"The conference is not created yet!\"))},X.prototype.isSIPCallingSupported=function(){return!!this.room&&this.room.isSIPCallingSupported()},X.prototype.dial=function(e){return this.room?this.room.dial(e):new Promise(function(e,t){t(new Error(\"The conference is not created yet!\"))})},X.prototype.hangup=function(){return this.room?this.room.hangup():new Promise(function(e,t){t(new Error(\"The conference is not created yet!\"))})},X.prototype.startTranscriber=function(){return this.dial(\"jitsi_meet_transcribe\")},X.prototype.stopTranscriber=X.prototype.hangup,X.prototype.getPhoneNumber=function(){return this.room?this.room.getPhoneNumber():null},X.prototype.getPhonePin=function(){return this.room?this.room.getPhonePin():null},X.prototype.getActivePeerConnection=function(){return this.isP2PActive()?this.p2pJingleSession.peerconnection:this.jvbJingleSession?this.jvbJingleSession.peerconnection:null},X.prototype.getConnectionState=function(){var e=this.getActivePeerConnection();return e?e.getConnectionState():null},X.prototype.setStartMutedPolicy=function(e){this.isModerator()&&(this.startMutedPolicy=e,this.room.removeFromPresence(\"startmuted\"),this.room.addToPresence(\"startmuted\",{attributes:{audio:e.audio,video:e.video,xmlns:\"http://jitsi.org/jitmeet/start-muted\"}}),this.room.sendPresence())},X.prototype.getStartMutedPolicy=function(){return this.startMutedPolicy},X.prototype.isStartAudioMuted=function(){return this.startAudioMuted},X.prototype.isStartVideoMuted=function(){return this.startVideoMuted},X.prototype.getLogs=function(){var e=this.xmpp.getJingleLog(),t={};t.time=new Date,t.url=window.location.href,t.ua=navigator.userAgent;var n=this.xmpp.getXmppLog();return n&&(t.xmpp=n),e.metadata=t,e},X.prototype.getConnectionTimes=function(){return this.room.connectionTimes},X.prototype.setLocalParticipantProperty=function(e,t){this.sendCommand(\"jitsi_participant_\".concat(e),{value:t})},X.prototype.removeLocalParticipantProperty=function(e){this.removeCommand(\"jitsi_participant_\".concat(e)),this.room.sendPresence()},X.prototype.getLocalParticipantProperty=function(e){var t=this.room.presMap.nodes.find(function(t){return t.tagName===\"jitsi_participant_\".concat(e)});return t?t.value:void 0},X.prototype.sendFeedback=function(e,t){this.statistics.sendFeedback(e,t)},X.prototype.isCallstatsEnabled=function(){return this.statistics.isCallstatsEnabled()},X.prototype._onTrackAttach=function(e,t){var n=e.isLocal(),r=null,i=e.isP2P,o=i?e.getParticipantId():\"jitsi\",a=i?this.p2pJingleSession&&this.p2pJingleSession.peerconnection:this.jvbJingleSession&&this.jvbJingleSession.peerconnection;n?a&&(r=a.getLocalSSRC(e)):r=e.getSSRC(),t.id&&r&&a&&this.statistics.associateStreamWithVideoTag(a,r,n,o,e.getUsageLabel(),t.id)},X.prototype.sendApplicationLog=function(e){D.a.sendLog(e)},X.prototype._isFocus=function(e){return this.room?this.room.isFocus(e):null},X.prototype._fireIncompatibleVersionsEvent=function(){this.eventEmitter.emit(d.CONFERENCE_FAILED,u.INCOMPATIBLE_SERVER_VERSIONS)},X.prototype.sendEndpointMessage=function(e,t){this.rtc.sendChannelMessage(e,t)},X.prototype.broadcastEndpointMessage=function(e){this.sendEndpointMessage(\"\",e)},X.prototype.sendMessage=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"\",n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=W(e);if(\"object\"===r||!n&&\"string\"===r)if(n)this.sendEndpointMessage(t,e);else{var i=e,o=\"body\";if(\"object\"===r){o=\"json-message\",i.hasOwnProperty(J.b)||(i[J.b]=\"\");try{i=JSON.stringify(i)}catch(e){return void z.error(\"Can not send a message, stringify failed: \",e)}}t?this.sendPrivateTextMessage(t,i,o):this.sendTextMessage(i,o)}else z.error(\"Can not send a message of type \".concat(r))},X.prototype.isConnectionInterrupted=function(){return this.isP2PActive()?this.isP2PConnectionInterrupted:this.isJvbConnectionInterrupted},X.prototype._onIceConnectionInterrupted=function(e){e.isP2P?this.isP2PConnectionInterrupted=!0:this.isJvbConnectionInterrupted=!0,e.isP2P===this.isP2PActive()&&this.eventEmitter.emit(d.CONNECTION_INTERRUPTED)},X.prototype._onIceConnectionFailed=function(e){e.isP2P?(D.a.analytics.addPermanentProperties({p2pFailed:!0}),this.p2pJingleSession&&D.a.sendAnalyticsAndLog(Object(q.D)(q.i,{initiator:this.p2pJingleSession.isInitiator})),this._stopP2PSession(\"connectivity-error\",\"ICE FAILED\")):e&&this.jvbJingleSession===e&&(this.xmpp.isPingSupported()?(this._delayedIceFailed=new C.a(this),this._delayedIceFailed.start(e)):(z.info(\"PING not supported - sending ICE failed immediately\"),e.sendIceFailedNotification()))},X.prototype._onIceConnectionRestored=function(e){e.isP2P?this.isP2PConnectionInterrupted=!1:(this.isJvbConnectionInterrupted=!1,this._delayedIceFailed&&this._delayedIceFailed.cancel()),e.isP2P===this.isP2PActive()&&this.eventEmitter.emit(d.CONNECTION_RESTORED)},X.prototype._acceptP2PIncomingCall=function(e,t){this.isP2PConnectionInterrupted=!1,this.p2pJingleSession=e,this.p2pJingleSession.initialize(this.room,this.rtc,this.options.config),z.info(\"Starting CallStats for P2P connection...\");var n=r.Strophe.getResourceFromJid(this.p2pJingleSession.remoteJid);if(this.options.config.enableStatsID){var i=this.participants[n];i&&(n=i.getStatsID()||n)}this.statistics.startCallStats(this.p2pJingleSession.peerconnection,n);var o=this.getLocalTracks();this.p2pJingleSession.acceptOffer(t,function(){z.debug('Got RESULT for P2P \"session-accept\"')},function(e){z.error(\"Failed to accept incoming P2P Jingle session\",e)},o)},X.prototype._addRemoteJVBTracks=function(){this._addRemoteTracks(\"JVB\",this.jvbJingleSession.peerconnection.getRemoteTracks())},X.prototype._addRemoteP2PTracks=function(){this._addRemoteTracks(\"P2P\",this.p2pJingleSession.peerconnection.getRemoteTracks())},X.prototype._addRemoteTracks=function(e,t){var n=!0,r=!1,i=void 0;try{for(var o,a=t[Symbol.iterator]();!(n=(o=a.next()).done);n=!0){var s=o.value;z.info(\"Adding remote \".concat(e,\" track: \").concat(s)),this.rtc.eventEmitter.emit(G.REMOTE_TRACK_ADDED,s)}}catch(e){r=!0,i=e}finally{try{n||null==a.return||a.return()}finally{if(r)throw i}}},X.prototype._onIceConnectionEstablished=function(e){null!==this.p2pJingleSession&&(this.p2pEstablishmentDuration=this.p2pJingleSession.establishmentDuration),null!==this.jvbJingleSession&&(this.jvbEstablishmentDuration=this.jvbJingleSession.establishmentDuration);var t=!1,n=this.options.config.forceJVB121Ratio;if(e.isP2P?this.p2pJingleSession!==e?(z.error(\"CONNECTION_ESTABLISHED - wrong P2P session instance ?!\"),t=!0):!e.isInitiator&&\"number\"==typeof n&&Math.random()<n&&(z.info(\"Forcing JVB 121 mode (ratio=\".concat(n,\")...\")),D.a.analytics.addPermanentProperties({forceJvb121:!0}),this._stopP2PSession(\"decline\",\"force JVB121\"),t=!0):t=!0,!isNaN(this.p2pEstablishmentDuration)&&!isNaN(this.jvbEstablishmentDuration)){var r=this.p2pEstablishmentDuration-this.jvbEstablishmentDuration;D.a.sendAnalytics(q.o,{value:r})}e.isP2P===this.isP2PActive()&&this.eventEmitter.emit(d.CONNECTION_ESTABLISHED),t||(this._setP2PStatus(!0),this.jvbJingleSession?this._removeRemoteJVBTracks():z.info(\"Not removing remote JVB tracks - no session yet\"),this._addRemoteP2PTracks(),this.jvbJingleSession&&this._suspendMediaTransferForJvbConnection(),z.info(\"Starting remote stats with p2p connection\"),this.statistics.startRemoteStats(this.p2pJingleSession.peerconnection),D.a.sendAnalyticsAndLog(Object(q.D)(q.h,{initiator:this.p2pJingleSession.isInitiator})))},X.prototype._updateProperties=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=!c()(e,this.properties);if(this.properties=e,t){this.eventEmitter.emit(d.PROPERTIES_CHANGED,this.properties);[\"bridge-count\",\"created-ms\",\"octo-enabled\"].forEach(function(t){void 0!==e[t]&&D.a.analytics.addPermanentProperties(function(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}({},t.replace(\"-\",\"_\"),e[t]))})}},X.prototype.getProperty=function(e){return this.properties[e]},X.prototype._maybeClearDeferredStartP2P=function(){this.deferredStartP2PTask&&(z.info(\"Cleared deferred start P2P task\"),clearTimeout(this.deferredStartP2PTask),this.deferredStartP2PTask=null)},X.prototype._removeRemoteJVBTracks=function(){this._removeRemoteTracks(\"JVB\",this.jvbJingleSession.peerconnection.getRemoteTracks())},X.prototype._removeRemoteP2PTracks=function(){this._removeRemoteTracks(\"P2P\",this.p2pJingleSession.peerconnection.getRemoteTracks())},X.prototype._removeRemoteTracks=function(e,t){var n=!0,r=!1,i=void 0;try{for(var o,a=t[Symbol.iterator]();!(n=(o=a.next()).done);n=!0){var s=o.value;z.info(\"Removing remote \".concat(e,\" track: \").concat(s)),this.rtc.eventEmitter.emit(G.REMOTE_TRACK_REMOVED,s)}}catch(e){r=!0,i=e}finally{try{n||null==a.return||a.return()}finally{if(r)throw i}}},X.prototype._resumeMediaTransferForJvbConnection=function(){z.info(\"Resuming media transfer over the JVB connection...\"),this.jvbJingleSession.setMediaTransferActive(!0,!0).then(function(){z.info(\"Resumed media transfer over the JVB connection!\")},function(e){z.error(\"Failed to resume media transfer over the JVB connection:\",e)})},X.prototype._setP2PStatus=function(e){if(this.p2p!==e){if(this.p2p=e,e){z.info(\"Peer to peer connection established!\"),D.a.analytics.addPermanentProperties({p2pFailed:!1,forceJvb121:!1});var t=0!==this.rtc.getLastN();this.p2pJingleSession.setMediaTransferActive(!0,t).catch(function(e){z.error(\"Failed to sync up P2P video transfer status\"+\"(\".concat(t,\")\"),e)})}else z.info(\"Peer to peer connection closed!\");this.jvbJingleSession&&this.statistics.sendConnectionResumeOrHoldEvent(this.jvbJingleSession.peerconnection,!e),this.dtmfManager=null,this.eventEmitter.emit(d.P2P_STATUS,this,this.p2p),this.eventEmitter.emit(this.isConnectionInterrupted()?d.CONNECTION_INTERRUPTED:d.CONNECTION_RESTORED)}else z.debug(\"Called _setP2PStatus with the same status: \".concat(e))},X.prototype._startP2PSession=function(e){if(this._maybeClearDeferredStartP2P(),this.p2pJingleSession)z.error(\"P2P session already started!\");else{this.isP2PConnectionInterrupted=!1,this.p2pJingleSession=this.xmpp.connection.jingle.newP2PJingleSession(this.room.myroomjid,e),z.info(\"Created new P2P JingleSession\",this.room.myroomjid,e),this.p2pJingleSession.initialize(this.room,this.rtc,this.options.config),z.info(\"Starting CallStats for P2P connection...\");var t=r.Strophe.getResourceFromJid(this.p2pJingleSession.remoteJid);if(this.options.config.enableStatsID){var n=this.participants[t];n&&(t=n.getStatsID()||t)}this.statistics.startCallStats(this.p2pJingleSession.peerconnection,t);var i=this.getLocalTracks();this.p2pJingleSession.invite(i)}},X.prototype._suspendMediaTransferForJvbConnection=function(){z.info(\"Suspending media transfer over the JVB connection...\"),this.jvbJingleSession.setMediaTransferActive(!1,!1).then(function(){z.info(\"Suspended media transfer over the JVB connection !\")},function(e){z.error(\"Failed to suspend media transfer over the JVB connection:\",e)})},X.prototype._maybeStartOrStopP2P=function(e){if(E.a.supportsP2P()&&this.isP2PEnabled()&&!this.isP2PTestModeEnabled()){var t=this.getParticipants(),n=t.length,r=this.isModerator(),i=void 0!==t.find(function(e){return\"poltergeist\"===e._botType}),o=1===n&&!i;if(z.debug(\"P2P? isModerator: \".concat(r,\", peerCount: \").concat(n,\", hasBotPeer: \").concat(i,\" => \").concat(o)),!o&&this.deferredStartP2PTask&&this._maybeClearDeferredStartP2P(),r&&!this.p2pJingleSession&&o){var a=n&&t[0];if(r&&\"moderator\"===a.getRole()){var s=this.myUserId(),c=a.getId();if(s>c)return void z.debug(\"Everyone's a moderator - the other peer should start P2P\",s,c);if(s===c)return void z.error(\"The same IDs ? \",s,c)}var u=a.getJid();if(e){if(this.deferredStartP2PTask)return void z.error(\"Deferred start P2P task's been set already!\");z.info(\"Will start P2P with: \".concat(u,\" after \").concat(this.backToP2PDelay,\" seconds...\")),this.deferredStartP2PTask=setTimeout(this._startP2PSession.bind(this,u),1e3*this.backToP2PDelay)}else z.info(\"Will start P2P with: \".concat(u)),this._startP2PSession(u)}else this.p2pJingleSession&&!o&&(z.info(\"Will stop P2P with: \".concat(this.p2pJingleSession.remoteJid)),this.p2pJingleSession.isInitiator&&n>1&&D.a.sendAnalyticsAndLog(Object(q.D)(q.j)),this._stopP2PSession())}else z.info(\"Auto P2P disabled\")},X.prototype._stopP2PSession=function(e,t){if(this.p2pJingleSession){var n=this.isP2PActive();n&&(this.jvbJingleSession&&this._resumeMediaTransferForJvbConnection(),this._removeRemoteP2PTracks()),z.info(\"Stopping remote stats for P2P connection\"),this.statistics.stopRemoteStats(this.p2pJingleSession.peerconnection),z.info(\"Stopping CallStats for P2P connection\"),this.statistics.stopCallStats(this.p2pJingleSession.peerconnection),this.p2pJingleSession.terminate(function(){z.info(\"P2P session terminate RESULT\")},function(t){e&&z.error(\"An error occurred while trying to terminate P2P Jingle session\",t)},{reason:e||\"success\",reasonDescription:t||\"Turing off P2P session\",sendSessionTerminate:this.room&&this.getParticipantById(r.Strophe.getResourceFromJid(this.p2pJingleSession.remoteJid))}),this.p2pJingleSession=null,this._setP2PStatus(!1),n&&(this.jvbJingleSession?this._addRemoteJVBTracks():z.info(\"Not adding remote JVB tracks - no session yet\"))}else z.error(\"No P2P session to be stopped!\")},X.prototype.isP2PActive=function(){return this.p2p},X.prototype.getP2PConnectionState=function(){return this.isP2PActive()?this.p2pJingleSession.peerconnection.getConnectionState():null},X.prototype.startP2PSession=function(){var e=this.getParticipants();if(1!==e.length)throw new Error(\"There must be exactly 1 participant to start the P2P session !\");var t=e[0].getJid();this._startP2PSession(t)},X.prototype.stopP2PSession=function(){this._stopP2PSession()},X.prototype.getSpeakerStats=function(){return this.speakerStatsCollector.getStats()},X.prototype.setReceiverVideoConstraint=function(e){this.rtc.setReceiverVideoConstraint(e)},X.prototype.createVideoSIPGWSession=function(e,t){return this.room?this.videoSIPGWHandler.createVideoSIPGWSession(e,t):new Error(U.ERROR_NO_CONNECTION)}}).call(this,\"JitsiConference.js\")},function(e,t,n){(function(e,n){function r(e){return(r=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}var i=200,o=\"__lodash_hash_undefined__\",a=1,s=2,c=9007199254740991,u=\"[object Arguments]\",l=\"[object Array]\",d=\"[object AsyncFunction]\",p=\"[object Boolean]\",h=\"[object Date]\",f=\"[object Error]\",m=\"[object Function]\",v=\"[object GeneratorFunction]\",y=\"[object Map]\",g=\"[object Number]\",_=\"[object Null]\",S=\"[object Object]\",b=\"[object Proxy]\",E=\"[object RegExp]\",T=\"[object Set]\",C=\"[object String]\",R=\"[object Symbol]\",w=\"[object Undefined]\",A=\"[object ArrayBuffer]\",k=\"[object DataView]\",O=/^\\[object .+?Constructor\\]$/,I=/^(?:0|[1-9]\\d*)$/,P={};P[\"[object Float32Array]\"]=P[\"[object Float64Array]\"]=P[\"[object Int8Array]\"]=P[\"[object Int16Array]\"]=P[\"[object Int32Array]\"]=P[\"[object Uint8Array]\"]=P[\"[object Uint8ClampedArray]\"]=P[\"[object Uint16Array]\"]=P[\"[object Uint32Array]\"]=!0,P[u]=P[l]=P[A]=P[p]=P[k]=P[h]=P[f]=P[m]=P[y]=P[g]=P[S]=P[E]=P[T]=P[C]=P[\"[object WeakMap]\"]=!1;var D=\"object\"==(void 0===e?\"undefined\":r(e))&&e&&e.Object===Object&&e,N=\"object\"==(\"undefined\"==typeof self?\"undefined\":r(self))&&self&&self.Object===Object&&self,L=D||N||Function(\"return this\")(),M=\"object\"==r(t)&&t&&!t.nodeType&&t,x=M&&\"object\"==r(n)&&n&&!n.nodeType&&n,j=x&&x.exports===M,F=j&&D.process,U=function(){try{return F&&F.binding&&F.binding(\"util\")}catch(e){}}(),J=U&&U.isTypedArray;function H(e,t){for(var n=-1,r=null==e?0:e.length;++n<r;)if(t(e[n],n,e))return!0;return!1}function G(e){var t=-1,n=Array(e.size);return e.forEach(function(e,r){n[++t]=[r,e]}),n}function B(e){var t=-1,n=Array(e.size);return e.forEach(function(e){n[++t]=e}),n}var V,q,K,W=Array.prototype,z=Function.prototype,$=Object.prototype,X=L[\"__core-js_shared__\"],Q=z.toString,Y=$.hasOwnProperty,Z=(V=/[^.]+$/.exec(X&&X.keys&&X.keys.IE_PROTO||\"\"))?\"Symbol(src)_1.\"+V:\"\",ee=$.toString,te=RegExp(\"^\"+Q.call(Y).replace(/[\\\\^$.*+?()[\\]{}|]/g,\"\\\\$&\").replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g,\"$1.*?\")+\"$\"),ne=j?L.Buffer:void 0,re=L.Symbol,ie=L.Uint8Array,oe=$.propertyIsEnumerable,ae=W.splice,se=re?re.toStringTag:void 0,ce=Object.getOwnPropertySymbols,ue=ne?ne.isBuffer:void 0,le=(q=Object.keys,K=Object,function(e){return q(K(e))}),de=Ue(L,\"DataView\"),pe=Ue(L,\"Map\"),he=Ue(L,\"Promise\"),fe=Ue(L,\"Set\"),me=Ue(L,\"WeakMap\"),ve=Ue(Object,\"create\"),ye=Be(de),ge=Be(pe),_e=Be(he),Se=Be(fe),be=Be(me),Ee=re?re.prototype:void 0,Te=Ee?Ee.valueOf:void 0;function Ce(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var r=e[t];this.set(r[0],r[1])}}function Re(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var r=e[t];this.set(r[0],r[1])}}function we(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var r=e[t];this.set(r[0],r[1])}}function Ae(e){var t=-1,n=null==e?0:e.length;for(this.__data__=new we;++t<n;)this.add(e[t])}function ke(e){var t=this.__data__=new Re(e);this.size=t.size}function Oe(e,t){var n=Ke(e),r=!n&&qe(e),i=!n&&!r&&We(e),o=!n&&!r&&!i&&Ye(e),a=n||r||i||o,s=a?function(e,t){for(var n=-1,r=Array(e);++n<e;)r[n]=t(n);return r}(e.length,String):[],c=s.length;for(var u in e)!t&&!Y.call(e,u)||a&&(\"length\"==u||i&&(\"offset\"==u||\"parent\"==u)||o&&(\"buffer\"==u||\"byteLength\"==u||\"byteOffset\"==u)||Ge(u,c))||s.push(u);return s}function Ie(e,t){for(var n=e.length;n--;)if(Ve(e[n][0],t))return n;return-1}function Pe(e){return null==e?void 0===e?w:_:se&&se in Object(e)?function(e){var t=Y.call(e,se),n=e[se];try{e[se]=void 0;var r=!0}catch(e){}var i=ee.call(e);r&&(t?e[se]=n:delete e[se]);return i}(e):function(e){return ee.call(e)}(e)}function De(e){return Qe(e)&&Pe(e)==u}function Ne(e,t,n,r,i){return e===t||(null==e||null==t||!Qe(e)&&!Qe(t)?e!=e&&t!=t:function(e,t,n,r,i,o){var c=Ke(e),d=Ke(t),m=c?l:He(e),v=d?l:He(t),_=(m=m==u?S:m)==S,b=(v=v==u?S:v)==S,w=m==v;if(w&&We(e)){if(!We(t))return!1;c=!0,_=!1}if(w&&!_)return o||(o=new ke),c||Ye(e)?xe(e,t,n,r,i,o):function(e,t,n,r,i,o,c){switch(n){case k:if(e.byteLength!=t.byteLength||e.byteOffset!=t.byteOffset)return!1;e=e.buffer,t=t.buffer;case A:return!(e.byteLength!=t.byteLength||!o(new ie(e),new ie(t)));case p:case h:case g:return Ve(+e,+t);case f:return e.name==t.name&&e.message==t.message;case E:case C:return e==t+\"\";case y:var u=G;case T:var l=r&a;if(u||(u=B),e.size!=t.size&&!l)return!1;var d=c.get(e);if(d)return d==t;r|=s,c.set(e,t);var m=xe(u(e),u(t),r,i,o,c);return c.delete(e),m;case R:if(Te)return Te.call(e)==Te.call(t)}return!1}(e,t,m,n,r,i,o);if(!(n&a)){var O=_&&Y.call(e,\"__wrapped__\"),I=b&&Y.call(t,\"__wrapped__\");if(O||I){var P=O?e.value():e,D=I?t.value():t;return o||(o=new ke),i(P,D,n,r,o)}}if(!w)return!1;return o||(o=new ke),function(e,t,n,r,i,o){var s=n&a,c=je(e),u=c.length,l=je(t).length;if(u!=l&&!s)return!1;for(var d=u;d--;){var p=c[d];if(!(s?p in t:Y.call(t,p)))return!1}var h=o.get(e);if(h&&o.get(t))return h==t;var f=!0;o.set(e,t),o.set(t,e);for(var m=s;++d<u;){p=c[d];var v=e[p],y=t[p];if(r)var g=s?r(y,v,p,t,e,o):r(v,y,p,e,t,o);if(!(void 0===g?v===y||i(v,y,n,r,o):g)){f=!1;break}m||(m=\"constructor\"==p)}if(f&&!m){var _=e.constructor,S=t.constructor;_!=S&&\"constructor\"in e&&\"constructor\"in t&&!(\"function\"==typeof _&&_ instanceof _&&\"function\"==typeof S&&S instanceof S)&&(f=!1)}return o.delete(e),o.delete(t),f}(e,t,n,r,i,o)}(e,t,n,r,Ne,i))}function Le(e){return!(!Xe(e)||(t=e,Z&&Z in t))&&(ze(e)?te:O).test(Be(e));var t}function Me(e){if(n=(t=e)&&t.constructor,r=\"function\"==typeof n&&n.prototype||$,t!==r)return le(e);var t,n,r,i=[];for(var o in Object(e))Y.call(e,o)&&\"constructor\"!=o&&i.push(o);return i}function xe(e,t,n,r,i,o){var c=n&a,u=e.length,l=t.length;if(u!=l&&!(c&&l>u))return!1;var d=o.get(e);if(d&&o.get(t))return d==t;var p=-1,h=!0,f=n&s?new Ae:void 0;for(o.set(e,t),o.set(t,e);++p<u;){var m=e[p],v=t[p];if(r)var y=c?r(v,m,p,t,e,o):r(m,v,p,e,t,o);if(void 0!==y){if(y)continue;h=!1;break}if(f){if(!H(t,function(e,t){if(a=t,!f.has(a)&&(m===e||i(m,e,n,r,o)))return f.push(t);var a})){h=!1;break}}else if(m!==v&&!i(m,v,n,r,o)){h=!1;break}}return o.delete(e),o.delete(t),h}function je(e){return function(e,t,n){var r=t(e);return Ke(e)?r:function(e,t){for(var n=-1,r=t.length,i=e.length;++n<r;)e[i+n]=t[n];return e}(r,n(e))}(e,Ze,Je)}function Fe(e,t){var n,i,o=e.__data__;return(\"string\"==(i=r(n=t))||\"number\"==i||\"symbol\"==i||\"boolean\"==i?\"__proto__\"!==n:null===n)?o[\"string\"==typeof t?\"string\":\"hash\"]:o.map}function Ue(e,t){var n=function(e,t){return null==e?void 0:e[t]}(e,t);return Le(n)?n:void 0}Ce.prototype.clear=function(){this.__data__=ve?ve(null):{},this.size=0},Ce.prototype.delete=function(e){var t=this.has(e)&&delete this.__data__[e];return this.size-=t?1:0,t},Ce.prototype.get=function(e){var t=this.__data__;if(ve){var n=t[e];return n===o?void 0:n}return Y.call(t,e)?t[e]:void 0},Ce.prototype.has=function(e){var t=this.__data__;return ve?void 0!==t[e]:Y.call(t,e)},Ce.prototype.set=function(e,t){var n=this.__data__;return this.size+=this.has(e)?0:1,n[e]=ve&&void 0===t?o:t,this},Re.prototype.clear=function(){this.__data__=[],this.size=0},Re.prototype.delete=function(e){var t=this.__data__,n=Ie(t,e);return!(n<0||(n==t.length-1?t.pop():ae.call(t,n,1),--this.size,0))},Re.prototype.get=function(e){var t=this.__data__,n=Ie(t,e);return n<0?void 0:t[n][1]},Re.prototype.has=function(e){return Ie(this.__data__,e)>-1},Re.prototype.set=function(e,t){var n=this.__data__,r=Ie(n,e);return r<0?(++this.size,n.push([e,t])):n[r][1]=t,this},we.prototype.clear=function(){this.size=0,this.__data__={hash:new Ce,map:new(pe||Re),string:new Ce}},we.prototype.delete=function(e){var t=Fe(this,e).delete(e);return this.size-=t?1:0,t},we.prototype.get=function(e){return Fe(this,e).get(e)},we.prototype.has=function(e){return Fe(this,e).has(e)},we.prototype.set=function(e,t){var n=Fe(this,e),r=n.size;return n.set(e,t),this.size+=n.size==r?0:1,this},Ae.prototype.add=Ae.prototype.push=function(e){return this.__data__.set(e,o),this},Ae.prototype.has=function(e){return this.__data__.has(e)},ke.prototype.clear=function(){this.__data__=new Re,this.size=0},ke.prototype.delete=function(e){var t=this.__data__,n=t.delete(e);return this.size=t.size,n},ke.prototype.get=function(e){return this.__data__.get(e)},ke.prototype.has=function(e){return this.__data__.has(e)},ke.prototype.set=function(e,t){var n=this.__data__;if(n instanceof Re){var r=n.__data__;if(!pe||r.length<i-1)return r.push([e,t]),this.size=++n.size,this;n=this.__data__=new we(r)}return n.set(e,t),this.size=n.size,this};var Je=ce?function(e){return null==e?[]:(e=Object(e),function(e,t){for(var n=-1,r=null==e?0:e.length,i=0,o=[];++n<r;){var a=e[n];t(a,n,e)&&(o[i++]=a)}return o}(ce(e),function(t){return oe.call(e,t)}))}:function(){return[]},He=Pe;function Ge(e,t){return!!(t=null==t?c:t)&&(\"number\"==typeof e||I.test(e))&&e>-1&&e%1==0&&e<t}function Be(e){if(null!=e){try{return Q.call(e)}catch(e){}try{return e+\"\"}catch(e){}}return\"\"}function Ve(e,t){return e===t||e!=e&&t!=t}(de&&He(new de(new ArrayBuffer(1)))!=k||pe&&He(new pe)!=y||he&&\"[object Promise]\"!=He(he.resolve())||fe&&He(new fe)!=T||me&&\"[object WeakMap]\"!=He(new me))&&(He=function(e){var t=Pe(e),n=t==S?e.constructor:void 0,r=n?Be(n):\"\";if(r)switch(r){case ye:return k;case ge:return y;case _e:return\"[object Promise]\";case Se:return T;case be:return\"[object WeakMap]\"}return t});var qe=De(function(){return arguments}())?De:function(e){return Qe(e)&&Y.call(e,\"callee\")&&!oe.call(e,\"callee\")},Ke=Array.isArray;var We=ue||function(){return!1};function ze(e){if(!Xe(e))return!1;var t=Pe(e);return t==m||t==v||t==d||t==b}function $e(e){return\"number\"==typeof e&&e>-1&&e%1==0&&e<=c}function Xe(e){var t=r(e);return null!=e&&(\"object\"==t||\"function\"==t)}function Qe(e){return null!=e&&\"object\"==r(e)}var Ye=J?function(e){return function(t){return e(t)}}(J):function(e){return Qe(e)&&$e(e.length)&&!!P[Pe(e)]};function Ze(e){return null!=(t=e)&&$e(t.length)&&!ze(t)?Oe(e):Me(e);var t}n.exports=function(e,t){return Ne(e,t)}}).call(this,n(44),n(65)(e))},function(e,t,n){\"use strict\";(function(e){n.d(t,\"a\",function(){return b});var r=n(1),i=n(8),o=n(60),a=n.n(o),s=n(74),c=n.n(s),u=n(4),l=n(21),d=n(2),p=n(9),h=n(7),f=n.n(h),m=n(14),v=n.n(m),y=n(6),g=n(0),_=n.n(g),S=Object(u.getLogger)(e);function b(e){this.conference=e,this.xmppListeners={},e.on(d.TRACK_MUTE_CHANGED,function(t){if(t.isLocal()&&e.statistics){var n=t.isP2P?e.p2pJingleSession:e.jvbJingleSession,r=n&&n.peerconnection||null;e.statistics.sendMuteEvent(r,t.isMuted(),t.getType())}})}b.prototype.setupChatRoomListeners=function(){var e=this,t=this.conference,n=t.room;this.chatRoomForwarder=new c.a(n,this.conference.eventEmitter),n.addListener(_.a.ICE_RESTARTING,function(e){e.isP2P||t.rtc.closeBridgeChannel()}),n.addListener(_.a.ICE_RESTART_SUCCESS,function(e,n){!e.isP2P&&t._setBridgeChannel(n,e.peerconnection)}),n.addListener(_.a.AUDIO_MUTED_BY_FOCUS,function(){y.a.sendAnalytics(Object(i.E)()),t.rtc.setAudioMute(!0).then(function(){t.isMutedByFocus=!0},function(){return S.warn(\"Error while audio muting due to focus request\")})}),this.chatRoomForwarder.forward(_.a.SUBJECT_CHANGED,d.SUBJECT_CHANGED),this.chatRoomForwarder.forward(_.a.MUC_JOINED,d.CONFERENCE_JOINED),n.addListener(_.a.MUC_JOINED,function(){e.conference.isJvbConnectionInterrupted=!1,Object.keys(n.connectionTimes).forEach(function(e){var t=Object(i.x)(\"conference_\".concat(e),{value:n.connectionTimes[e]});y.a.sendAnalytics(t)}),Object.keys(n.xmpp.connectionTimes).forEach(function(e){var t=Object(i.x)(\"xmpp_\".concat(e),{value:n.xmpp.connectionTimes[e]});y.a.sendAnalytics(t)})}),this.chatRoomForwarder.forward(_.a.ROOM_JOIN_ERROR,d.CONFERENCE_FAILED,l.CONNECTION_ERROR),this.chatRoomForwarder.forward(_.a.ROOM_CONNECT_ERROR,d.CONFERENCE_FAILED,l.CONNECTION_ERROR),this.chatRoomForwarder.forward(_.a.ROOM_CONNECT_NOT_ALLOWED_ERROR,d.CONFERENCE_FAILED,l.NOT_ALLOWED_ERROR),this.chatRoomForwarder.forward(_.a.ROOM_MAX_USERS_ERROR,d.CONFERENCE_FAILED,l.CONFERENCE_MAX_USERS),this.chatRoomForwarder.forward(_.a.PASSWORD_REQUIRED,d.CONFERENCE_FAILED,l.PASSWORD_REQUIRED),this.chatRoomForwarder.forward(_.a.AUTHENTICATION_REQUIRED,d.CONFERENCE_FAILED,l.AUTHENTICATION_REQUIRED),this.chatRoomForwarder.forward(_.a.BRIDGE_DOWN,d.CONFERENCE_FAILED,l.VIDEOBRIDGE_NOT_AVAILABLE),n.addListener(_.a.BRIDGE_DOWN,function(){return y.a.sendAnalytics(Object(i.v)())}),this.chatRoomForwarder.forward(_.a.RESERVATION_ERROR,d.CONFERENCE_FAILED,l.RESERVATION_ERROR),this.chatRoomForwarder.forward(_.a.GRACEFUL_SHUTDOWN,d.CONFERENCE_FAILED,l.GRACEFUL_SHUTDOWN),n.addListener(_.a.JINGLE_FATAL_ERROR,function(e,n){e.isP2P||t.eventEmitter.emit(d.CONFERENCE_FAILED,l.JINGLE_FATAL_ERROR,n)}),n.addListener(_.a.CONNECTION_ICE_FAILED,function(e){t._onIceConnectionFailed(e)}),this.chatRoomForwarder.forward(_.a.MUC_DESTROYED,d.CONFERENCE_FAILED,l.CONFERENCE_DESTROYED),this.chatRoomForwarder.forward(_.a.CHAT_ERROR_RECEIVED,d.CONFERENCE_ERROR,l.CHAT_ERROR),this.chatRoomForwarder.forward(_.a.FOCUS_DISCONNECTED,d.CONFERENCE_FAILED,l.FOCUS_DISCONNECTED),n.addListener(_.a.FOCUS_LEFT,function(){y.a.sendAnalytics(Object(i.z)()),t.eventEmitter.emit(d.CONFERENCE_FAILED,l.FOCUS_LEFT)}),n.addListener(_.a.SESSION_ACCEPT_TIMEOUT,function(e){y.a.sendAnalyticsAndLog(Object(i.B)(i.b,{p2p:e.isP2P}))}),this.chatRoomForwarder.forward(_.a.RECORDER_STATE_CHANGED,d.RECORDER_STATE_CHANGED),this.chatRoomForwarder.forward(_.a.TRANSCRIPTION_STATUS_CHANGED,d.TRANSCRIPTION_STATUS_CHANGED),this.chatRoomForwarder.forward(_.a.VIDEO_SIP_GW_AVAILABILITY_CHANGED,d.VIDEO_SIP_GW_AVAILABILITY_CHANGED),this.chatRoomForwarder.forward(_.a.VIDEO_SIP_GW_SESSION_STATE_CHANGED,d.VIDEO_SIP_GW_SESSION_STATE_CHANGED),this.chatRoomForwarder.forward(_.a.PHONE_NUMBER_CHANGED,d.PHONE_NUMBER_CHANGED),n.addListener(_.a.CONFERENCE_SETUP_FAILED,function(e,n){e.isP2P||t.eventEmitter.emit(d.CONFERENCE_FAILED,l.SETUP_FAILED,n)}),n.setParticipantPropertyListener(function(e,n){var r=t.getParticipantById(n);r&&r.setProperty(e.tagName.substring(\"jitsi_participant_\".length),e.value)}),this.chatRoomForwarder.forward(_.a.KICKED,d.KICKED),n.addListener(_.a.KICKED,function(){t.leave()}),n.addListener(_.a.SUSPEND_DETECTED,t.onSuspendDetected.bind(t)),this.chatRoomForwarder.forward(_.a.MUC_LOCK_CHANGED,d.LOCK_STATE_CHANGED),n.addListener(_.a.MUC_MEMBER_JOINED,t.onMemberJoined.bind(t)),n.addListener(_.a.MUC_MEMBER_BOT_TYPE_CHANGED,t._onMemberBotTypeChanged.bind(t)),n.addListener(_.a.MUC_MEMBER_LEFT,t.onMemberLeft.bind(t)),this.chatRoomForwarder.forward(_.a.MUC_LEFT,d.CONFERENCE_LEFT),n.addListener(_.a.DISPLAY_NAME_CHANGED,t.onDisplayNameChanged.bind(t)),n.addListener(_.a.LOCAL_ROLE_CHANGED,function(e){t.onLocalRoleChanged(e),t.statistics&&t.isModerator()&&t.on(d.RECORDER_STATE_CHANGED,function(e){var t={error:e.getError(),id:\"recorder_status\",status:e.getStatus()};y.a.sendLog(JSON.stringify(t))})}),n.addListener(_.a.MUC_ROLE_CHANGED,t.onUserRoleChanged.bind(t)),n.addListener(a.a.IDENTITY_UPDATED,function(e,n){t.authEnabled=e,t.authIdentity=n,t.eventEmitter.emit(d.AUTH_STATUS_CHANGED,e,n)}),n.addListener(_.a.MESSAGE_RECEIVED,function(e,n,i,o,a){var s=r.Strophe.getResourceFromJid(e);t.eventEmitter.emit(d.MESSAGE_RECEIVED,s,i,a)}),n.addListener(_.a.PRIVATE_MESSAGE_RECEIVED,function(e,n,i,o,a){var s=r.Strophe.getResourceFromJid(e);t.eventEmitter.emit(d.PRIVATE_MESSAGE_RECEIVED,s,i,a)}),n.addListener(_.a.PRESENCE_STATUS,function(e,n){var i=r.Strophe.getResourceFromJid(e),o=t.getParticipantById(i);o&&o._status!==n&&(o._status=n,t.eventEmitter.emit(d.USER_STATUS_CHANGED,i,n))}),n.addListener(_.a.JSON_MESSAGE_RECEIVED,function(e,n){var i=r.Strophe.getResourceFromJid(e),o=t.getParticipantById(i);o?t.eventEmitter.emit(d.ENDPOINT_MESSAGE_RECEIVED,o,n):S.warn(\"Ignored XMPPEvents.JSON_MESSAGE_RECEIVED for not existing \"+\"participant: \".concat(e),n)}),n.addPresenceListener(\"startmuted\",function(e,n){var r=!1;if(t.myUserId()===n&&t.isModerator())r=!0;else{var i=t.getParticipantById(n);i&&i.isModerator()&&(r=!0)}if(r){var o=\"true\"===e.attributes.audio,a=\"true\"===e.attributes.video,s=!1;o!==t.startMutedPolicy.audio&&(t.startMutedPolicy.audio=o,s=!0),a!==t.startMutedPolicy.video&&(t.startMutedPolicy.video=a,s=!0),s&&t.eventEmitter.emit(d.START_MUTED_POLICY_CHANGED,t.startMutedPolicy)}}),t.statistics&&(n.addListener(_.a.CONNECTION_ICE_FAILED,function(e){t.statistics.sendIceConnectionFailedEvent(e.peerconnection)}),n.addListener(_.a.ADD_ICE_CANDIDATE_FAILED,function(e,n){t.statistics.sendAddIceCandidateFailed(e,n)}))},b.prototype.setupRTCListeners=function(){var e=this.conference,t=e.rtc;t.addListener(f.a.REMOTE_TRACK_ADDED,e.onRemoteTrackAdded.bind(e)),t.addListener(f.a.REMOTE_TRACK_REMOVED,e.onRemoteTrackRemoved.bind(e)),t.addListener(f.a.DOMINANT_SPEAKER_CHANGED,function(t){e.lastDominantSpeaker!==t&&e.room&&(e.lastDominantSpeaker=t,e.eventEmitter.emit(d.DOMINANT_SPEAKER_CHANGED,t)),e.statistics&&e.myUserId()===t&&e.statistics.sendDominantSpeakerEvent(e.room.roomjid)}),t.addListener(f.a.DATA_CHANNEL_OPEN,function(){var t=window.performance.now(),n=\"data.channel.opened\";S.log(\"(TIME) \".concat(n),t),e.room.connectionTimes[n]=t,y.a.sendAnalytics(Object(i.x)(n,{value:t})),e.eventEmitter.emit(d.DATA_CHANNEL_OPENED)}),t.addListener(f.a.ENDPOINT_MESSAGE_RECEIVED,function(t,n){var r=e.getParticipantById(t);r?e.eventEmitter.emit(d.ENDPOINT_MESSAGE_RECEIVED,r,n):S.warn(\"Ignored ENDPOINT_MESSAGE_RECEIVED for not existing \"+\"participant: \".concat(t),n)}),t.addListener(f.a.LOCAL_UFRAG_CHANGED,function(e,t){e.isP2P||y.a.sendLog(JSON.stringify({id:\"local_ufrag\",value:t}))}),t.addListener(f.a.REMOTE_UFRAG_CHANGED,function(e,t){e.isP2P||y.a.sendLog(JSON.stringify({id:\"remote_ufrag\",value:t}))}),t.addListener(f.a.CREATE_ANSWER_FAILED,function(t,n){e.statistics.sendCreateAnswerFailed(t,n)}),t.addListener(f.a.CREATE_OFFER_FAILED,function(t,n){e.statistics.sendCreateOfferFailed(t,n)}),t.addListener(f.a.SET_LOCAL_DESCRIPTION_FAILED,function(t,n){e.statistics.sendSetLocalDescFailed(t,n)}),t.addListener(f.a.SET_REMOTE_DESCRIPTION_FAILED,function(t,n){e.statistics.sendSetRemoteDescFailed(t,n)}),t.addListener(f.a.LOCAL_TRACK_SSRC_UPDATED,function(t,n){t.isVideoTrack()&&t.videoType===v.a.DESKTOP&&e.statistics.sendScreenSharingEvent(!0,n)})},b.prototype.removeXMPPListeners=function(){var e=this,t=this.conference;t.xmpp.caps.removeListener(_.a.PARTCIPANT_FEATURES_CHANGED,this.xmppListeners[_.a.PARTCIPANT_FEATURES_CHANGED]),delete this.xmppListeners[_.a.PARTCIPANT_FEATURES_CHANGED],Object.keys(this.xmppListeners).forEach(function(n){t.xmpp.removeListener(n,e.xmppListeners[n])}),this.xmppListeners={}},b.prototype.setupXMPPListeners=function(){var e=this.conference,t=function(t){var n=e.getParticipantById(r.Strophe.getResourceFromJid(t));n&&e.eventEmitter.emit(d.PARTCIPANT_FEATURES_CHANGED,n)};e.xmpp.caps.addListener(_.a.PARTCIPANT_FEATURES_CHANGED,t),this.xmppListeners[_.a.PARTCIPANT_FEATURES_CHANGED]=t,this._addConferenceXMPPListener(_.a.CALL_INCOMING,e.onIncomingCall.bind(e)),this._addConferenceXMPPListener(_.a.CALL_ACCEPTED,e.onCallAccepted.bind(e)),this._addConferenceXMPPListener(_.a.TRANSPORT_INFO,e.onTransportInfo.bind(e)),this._addConferenceXMPPListener(_.a.CALL_ENDED,e.onCallEnded.bind(e)),this._addConferenceXMPPListener(_.a.START_MUTED_FROM_FOCUS,function(t,n){e.options.config.ignoreStartMuted||(e.startAudioMuted=t,e.startVideoMuted=n,e.getLocalTracks().forEach(function(t){switch(t.getType()){case p.a:e.startAudioMuted&&t.mute();break;case p.b:e.startVideoMuted&&t.mute()}}),e.eventEmitter.emit(d.STARTED_MUTED))})},b.prototype._addConferenceXMPPListener=function(e,t){this.xmppListeners[e]=t,this.conference.xmpp.addListener(e,t)},b.prototype.setupStatisticsListeners=function(){var e=this.conference;e.statistics&&(e.statistics.addAudioLevelListener(function(t,n,r,i){e.rtc.setAudioLevel(t,n,r,i)}),e.statistics.addBeforeDisposedListener(function(){e.eventEmitter.emit(d.BEFORE_STATISTICS_DISPOSED)}),e.statistics.addByteSentStatsListener(function(t,n){e.getLocalTracks(p.a).forEach(function(e){var r=t.getLocalSSRC(e);r&&n.hasOwnProperty(r)&&e._onByteSentStatsReceived(t,n[r])})}))}}).call(this,\"JitsiConferenceEventManager.js\")},function(e,t){function n(e,t){if(!e||!t||\"function\"!=typeof e.addListener||\"function\"!=typeof t.emit)throw new Error(\"Invalid arguments passed to EventEmitterForwarder\");this.src=e,this.dest=t}n.prototype.forward=function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];var r=t[0];t[0]=this.dest,this.src.addListener(r,Function.prototype.bind.apply(this.dest.emit,t))},e.exports=n},function(e,t,n){\"use strict\";(function(e){var r=n(8),i=n(4),o=n(3),a=n(25);function s(e){return(s=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function u(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var l=Object(i.getLogger)(e),d=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this.reset()}var t,n,i;return t=e,(n=[{key:\"reset\",value:function(){this.disposed=!1,this.analyticsHandlers=new Set,this.cache=[],this.permanentProperties={},this.conferenceName=\"\",this.addPermanentProperties({callstats_name:a.a.callStatsUserName,user_agent:navigator.userAgent,browser_name:o.a.getName()})}},{key:\"dispose\",value:function(){l.warn(\"Disposing of analytics adapter.\"),this.setAnalyticsHandlers([]),this.disposed=!0}},{key:\"setAnalyticsHandlers\",value:function(e){var t=this;if(!this.disposed){this.analyticsHandlers=new Set(e),this._setUserProperties();var n=this.cache;this.cache=null,n&&n.forEach(function(e){return t._sendEvent(e)})}}},{key:\"_setUserProperties\",value:function(){var e=this;this.analyticsHandlers.forEach(function(t){try{t.setUserProperties(e.permanentProperties)}catch(e){l.warn(\"Error in setUserProperties method of one of the \"+\"analytics handlers: \".concat(e))}})}},{key:\"addPermanentProperties\",value:function(e){this.permanentProperties=function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);\"function\"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),r.forEach(function(t){c(e,t,n[t])})}return e}({},this.permanentProperties,e),this._setUserProperties()}},{key:\"setConferenceName\",value:function(e){this.conferenceName=e,this.addPermanentProperties({conference_name:e})}},{key:\"sendEvent\",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!this.disposed){var n=null;\"string\"==typeof e?n={type:r.r,action:e,actionSubject:e,source:e,attributes:t}:\"object\"===s(e)&&(n=e),this._verifyRequiredFields(n)?this._sendEvent(n):l.error(\"Dropping a mis-formatted event: \".concat(JSON.stringify(n)))}}},{key:\"_verifyRequiredFields\",value:function(e){if(!e)return!1;e.type||(e.type=r.r);var t=e.type;return t!==r.r&&t!==r.s&&t!==r.u&&t!==r.t?(l.error(\"Unknown event type: \".concat(t)),!1):t===r.s?Boolean(e.name):(e.action=e.action||e.name||e.actionSubject,e.actionSubject=e.actionSubject||e.name||e.action,e.source=e.source||e.name||e.action||e.actionSubject,e.action&&e.actionSubject&&e.source?!!(t!==r.t||(e.objectType=e.objectType||\"generic-object-type\",e.containerType=e.containerType||\"conference\",\"conference\"!==e.containerType||e.containerId||(e.containerId=this.conferenceName),e.objectType&&e.objectId&&e.containerType&&e.containerId))||(l.error(\"Required field missing (containerId, containerType, objectId or objectType)\"),!1):(l.error(\"Required field missing (action, actionSubject or source)\"),!1))}},{key:\"_maybeCacheEvent\",value:function(e){return!!this.cache&&(this.cache.push(e),this.cache.length>100&&this.cache.splice(0,1),!0)}},{key:\"_sendEvent\",value:function(e){this._maybeCacheEvent(e)||this.analyticsHandlers.forEach(function(t){try{t.sendEvent(e)}catch(e){l.warn(\"Error sending analytics event: \".concat(e))}})}}])&&u(t.prototype,n),i&&u(t,i),e}();t.a=new d}).call(this,\"modules/statistics/AnalyticsAdapter.js\")},function(e,t,n){\"use strict\";(function(e,r){n.d(t,\"a\",function(){return p});var i=n(4),o=n(19);function a(e){return(a=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function s(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function c(e,t){return!t||\"object\"!==a(t)&&\"function\"!=typeof t?function(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}(e):t}function u(e){return(u=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function l(e,t){return(l=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var d=Object(i.getLogger)(e),p=function(e){function t(){var e;return function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t),e=c(this,u(t).call(this)),d.info(\"This appears to be \".concat(e.getName(),\", ver: \").concat(e.getVersion())),e}var n,i,a;return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&l(e,t)}(t,o[\"a\"]),n=t,(i=[{key:\"doesVideoMuteByStreamRemove\",value:function(){return!(this.isFirefox()||this.isEdge()||this.isReactNative()||this.isSafariWithWebrtc())}},{key:\"supportsP2P\",value:function(){return!this.isEdge()&&!this.isFirefox()}},{key:\"isChromiumBased\",value:function(){return this.isChrome()||this.isElectron()||this.isNWJS()||this.isOpera()}},{key:\"isSafariWithWebrtc\",value:function(){return this.isSafari()&&!this.isVersionLessThan(\"11\")}},{key:\"isSafariWithVP8\",value:function(){return this.isSafari()&&!this.isVersionLessThan(\"12.1\")}},{key:\"isSupported\",value:function(){return this.isChromiumBased()||this.isEdge()||this.isFirefox()||this.isReactNative()||this.isSafariWithWebrtc()}},{key:\"supportsVideoMuteOnConnInterrupted\",value:function(){return this.isChromiumBased()||this.isReactNative()||this.isSafariWithVP8()}},{key:\"supportsBandwidthStatistics\",value:function(){return!this.isFirefox()&&!this.isEdge()&&!this.isSafariWithWebrtc()}},{key:\"supportsDataChannels\",value:function(){return!this.isEdge()}},{key:\"supportsDeviceChangeEvent\",value:function(){return navigator.mediaDevices&&void 0!==navigator.mediaDevices.ondevicechange&&void 0!==navigator.mediaDevices.addEventListener}},{key:\"supportsMediaStreamConstructor\",value:function(){return!this.isReactNative()}},{key:\"supportsRtpStatistics\",value:function(){return this.isChromiumBased()||this.isEdge()||this.isFirefox()||this.isReactNative()||this.isSafariWithWebrtc()}},{key:\"supportsLocalCandidateRttStatistics\",value:function(){return this.isChromiumBased()||this.isReactNative()||this.isSafariWithVP8()}},{key:\"supportsRTTStatistics\",value:function(){return!this.isFirefox()&&!this.isEdge()}},{key:\"supportsRtpSender\",value:function(){return this.isFirefox()||this.isSafariWithVP8()}},{key:\"supportsRtx\",value:function(){return!this.isFirefox()&&!this.usesUnifiedPlan()}},{key:\"supportsSimulcast\",value:function(){return this.isChromiumBased()||this.isFirefox()||this.isSafariWithVP8()||this.isReactNative()}},{key:\"supportsVideo\",value:function(){return!this.isSafariWithWebrtc()||this.isSafariWithVP8()&&this.usesPlanB()}},{key:\"usesPlanB\",value:function(){return!this.usesUnifiedPlan()}},{key:\"usesUnifiedPlan\",value:function(){return!!this.isFirefox()||!!this.isSafariWithVP8()&&Object.keys(RTCRtpTransceiver.prototype).indexOf(\"currentDirection\")>-1}},{key:\"usesNewGumFlow\",value:function(){return this.isChrome()?!this.isVersionLessThan(61):!(!this.isFirefox()&&!this.isSafariWithWebrtc())||!!this.isChromiumBased()&&this._getChromiumBasedVersion()>=61}},{key:\"usesAdapter\",value:function(){return this.usesNewGumFlow()||this.isEdge()}},{key:\"supportsGetDisplayMedia\",value:function(){return void 0!==navigator.getDisplayMedia||void 0!==navigator.mediaDevices&&void 0!==navigator.mediaDevices.getDisplayMedia}},{key:\"supportsSdpSemantics\",value:function(){return this.isChromiumBased()&&this._getChromiumBasedVersion()>=65}},{key:\"_getChromiumBasedVersion\",value:function(){if(this.isChromiumBased()){if(this.isNWJS())return Number.parseInt(r.versions.chromium,10);var e=navigator.userAgent;if(e.match(/Chrome/))return Number.parseInt(e.match(/Chrome\\/([\\d.]+)/)[1],10)}return-1}}])&&s(n.prototype,i),a&&s(n,a),t}()}).call(this,\"modules/browser/BrowserCapabilities.js\",n(51))},function(module,exports,__webpack_require__){(function(process,global){var __WEBPACK_AMD_DEFINE_RESULT__;\n/**\n * [js-md5]{@link https://github.com/emn178/js-md5}\n *\n * @namespace md5\n * @version 0.7.3\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2014-2017\n * @license MIT\n */\n/**\n * [js-md5]{@link https://github.com/emn178/js-md5}\n *\n * @namespace md5\n * @version 0.7.3\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2014-2017\n * @license MIT\n */\n!function(){\"use strict\";var ERROR=\"input is invalid type\",WINDOW=\"object\"==typeof window,root=WINDOW?window:{};root.JS_MD5_NO_WINDOW&&(WINDOW=!1);var WEB_WORKER=!WINDOW&&\"object\"==typeof self,NODE_JS=!root.JS_MD5_NO_NODE_JS&&\"object\"==typeof process&&process.versions&&process.versions.node;NODE_JS?root=global:WEB_WORKER&&(root=self);var COMMON_JS=!root.JS_MD5_NO_COMMON_JS&&\"object\"==typeof module&&module.exports,AMD=__webpack_require__(125),ARRAY_BUFFER=!root.JS_MD5_NO_ARRAY_BUFFER&&\"undefined\"!=typeof ArrayBuffer,HEX_CHARS=\"0123456789abcdef\".split(\"\"),EXTRA=[128,32768,8388608,-2147483648],SHIFT=[0,8,16,24],OUTPUT_TYPES=[\"hex\",\"array\",\"digest\",\"buffer\",\"arrayBuffer\",\"base64\"],BASE64_ENCODE_CHAR=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\".split(\"\"),blocks=[],buffer8;if(ARRAY_BUFFER){var buffer=new ArrayBuffer(68);buffer8=new Uint8Array(buffer),blocks=new Uint32Array(buffer)}!root.JS_MD5_NO_NODE_JS&&Array.isArray||(Array.isArray=function(e){return\"[object Array]\"===Object.prototype.toString.call(e)}),!ARRAY_BUFFER||!root.JS_MD5_NO_ARRAY_BUFFER_IS_VIEW&&ArrayBuffer.isView||(ArrayBuffer.isView=function(e){return\"object\"==typeof e&&e.buffer&&e.buffer.constructor===ArrayBuffer});var createOutputMethod=function(e){return function(t){return new Md5(!0).update(t)[e]()}},createMethod=function(){var e=createOutputMethod(\"hex\");NODE_JS&&(e=nodeWrap(e)),e.create=function(){return new Md5},e.update=function(t){return e.create().update(t)};for(var t=0;t<OUTPUT_TYPES.length;++t){var n=OUTPUT_TYPES[t];e[n]=createOutputMethod(n)}return e},nodeWrap=function(method){var crypto=eval(\"require('crypto')\"),Buffer=eval(\"require('buffer').Buffer\"),nodeMethod=function(e){if(\"string\"==typeof e)return crypto.createHash(\"md5\").update(e,\"utf8\").digest(\"hex\");if(null==e)throw ERROR;return e.constructor===ArrayBuffer&&(e=new Uint8Array(e)),Array.isArray(e)||ArrayBuffer.isView(e)||e.constructor===Buffer?crypto.createHash(\"md5\").update(new Buffer(e)).digest(\"hex\"):method(e)};return nodeMethod};function Md5(e){if(e)blocks[0]=blocks[16]=blocks[1]=blocks[2]=blocks[3]=blocks[4]=blocks[5]=blocks[6]=blocks[7]=blocks[8]=blocks[9]=blocks[10]=blocks[11]=blocks[12]=blocks[13]=blocks[14]=blocks[15]=0,this.blocks=blocks,this.buffer8=buffer8;else if(ARRAY_BUFFER){var t=new ArrayBuffer(68);this.buffer8=new Uint8Array(t),this.blocks=new Uint32Array(t)}else this.blocks=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];this.h0=this.h1=this.h2=this.h3=this.start=this.bytes=this.hBytes=0,this.finalized=this.hashed=!1,this.first=!0}Md5.prototype.update=function(e){if(!this.finalized){var t,n=typeof e;if(\"string\"!==n){if(\"object\"!==n)throw ERROR;if(null===e)throw ERROR;if(ARRAY_BUFFER&&e.constructor===ArrayBuffer)e=new Uint8Array(e);else if(!(Array.isArray(e)||ARRAY_BUFFER&&ArrayBuffer.isView(e)))throw ERROR;t=!0}for(var r,i,o=0,a=e.length,s=this.blocks,c=this.buffer8;o<a;){if(this.hashed&&(this.hashed=!1,s[0]=s[16],s[16]=s[1]=s[2]=s[3]=s[4]=s[5]=s[6]=s[7]=s[8]=s[9]=s[10]=s[11]=s[12]=s[13]=s[14]=s[15]=0),t)if(ARRAY_BUFFER)for(i=this.start;o<a&&i<64;++o)c[i++]=e[o];else for(i=this.start;o<a&&i<64;++o)s[i>>2]|=e[o]<<SHIFT[3&i++];else if(ARRAY_BUFFER)for(i=this.start;o<a&&i<64;++o)(r=e.charCodeAt(o))<128?c[i++]=r:r<2048?(c[i++]=192|r>>6,c[i++]=128|63&r):r<55296||r>=57344?(c[i++]=224|r>>12,c[i++]=128|r>>6&63,c[i++]=128|63&r):(r=65536+((1023&r)<<10|1023&e.charCodeAt(++o)),c[i++]=240|r>>18,c[i++]=128|r>>12&63,c[i++]=128|r>>6&63,c[i++]=128|63&r);else for(i=this.start;o<a&&i<64;++o)(r=e.charCodeAt(o))<128?s[i>>2]|=r<<SHIFT[3&i++]:r<2048?(s[i>>2]|=(192|r>>6)<<SHIFT[3&i++],s[i>>2]|=(128|63&r)<<SHIFT[3&i++]):r<55296||r>=57344?(s[i>>2]|=(224|r>>12)<<SHIFT[3&i++],s[i>>2]|=(128|r>>6&63)<<SHIFT[3&i++],s[i>>2]|=(128|63&r)<<SHIFT[3&i++]):(r=65536+((1023&r)<<10|1023&e.charCodeAt(++o)),s[i>>2]|=(240|r>>18)<<SHIFT[3&i++],s[i>>2]|=(128|r>>12&63)<<SHIFT[3&i++],s[i>>2]|=(128|r>>6&63)<<SHIFT[3&i++],s[i>>2]|=(128|63&r)<<SHIFT[3&i++]);this.lastByteIndex=i,this.bytes+=i-this.start,i>=64?(this.start=i-64,this.hash(),this.hashed=!0):this.start=i}return this.bytes>4294967295&&(this.hBytes+=this.bytes/4294967296<<0,this.bytes=this.bytes%4294967296),this}},Md5.prototype.finalize=function(){if(!this.finalized){this.finalized=!0;var e=this.blocks,t=this.lastByteIndex;e[t>>2]|=EXTRA[3&t],t>=56&&(this.hashed||this.hash(),e[0]=e[16],e[16]=e[1]=e[2]=e[3]=e[4]=e[5]=e[6]=e[7]=e[8]=e[9]=e[10]=e[11]=e[12]=e[13]=e[14]=e[15]=0),e[14]=this.bytes<<3,e[15]=this.hBytes<<3|this.bytes>>>29,this.hash()}},Md5.prototype.hash=function(){var e,t,n,r,i,o,a=this.blocks;this.first?t=((t=((e=((e=a[0]-680876937)<<7|e>>>25)-271733879<<0)^(n=((n=(-271733879^(r=((r=(-1732584194^2004318071&e)+a[1]-117830708)<<12|r>>>20)+e<<0)&(-271733879^e))+a[2]-1126478375)<<17|n>>>15)+r<<0)&(r^e))+a[3]-1316259209)<<22|t>>>10)+n<<0:(e=this.h0,t=this.h1,n=this.h2,t=((t+=((e=((e+=((r=this.h3)^t&(n^r))+a[0]-680876936)<<7|e>>>25)+t<<0)^(n=((n+=(t^(r=((r+=(n^e&(t^n))+a[1]-389564586)<<12|r>>>20)+e<<0)&(e^t))+a[2]+606105819)<<17|n>>>15)+r<<0)&(r^e))+a[3]-1044525330)<<22|t>>>10)+n<<0),t=((t+=((e=((e+=(r^t&(n^r))+a[4]-176418897)<<7|e>>>25)+t<<0)^(n=((n+=(t^(r=((r+=(n^e&(t^n))+a[5]+1200080426)<<12|r>>>20)+e<<0)&(e^t))+a[6]-1473231341)<<17|n>>>15)+r<<0)&(r^e))+a[7]-45705983)<<22|t>>>10)+n<<0,t=((t+=((e=((e+=(r^t&(n^r))+a[8]+1770035416)<<7|e>>>25)+t<<0)^(n=((n+=(t^(r=((r+=(n^e&(t^n))+a[9]-1958414417)<<12|r>>>20)+e<<0)&(e^t))+a[10]-42063)<<17|n>>>15)+r<<0)&(r^e))+a[11]-1990404162)<<22|t>>>10)+n<<0,t=((t+=((e=((e+=(r^t&(n^r))+a[12]+1804603682)<<7|e>>>25)+t<<0)^(n=((n+=(t^(r=((r+=(n^e&(t^n))+a[13]-40341101)<<12|r>>>20)+e<<0)&(e^t))+a[14]-1502002290)<<17|n>>>15)+r<<0)&(r^e))+a[15]+1236535329)<<22|t>>>10)+n<<0,t=((t+=((r=((r+=(t^n&((e=((e+=(n^r&(t^n))+a[1]-165796510)<<5|e>>>27)+t<<0)^t))+a[6]-1069501632)<<9|r>>>23)+e<<0)^e&((n=((n+=(e^t&(r^e))+a[11]+643717713)<<14|n>>>18)+r<<0)^r))+a[0]-373897302)<<20|t>>>12)+n<<0,t=((t+=((r=((r+=(t^n&((e=((e+=(n^r&(t^n))+a[5]-701558691)<<5|e>>>27)+t<<0)^t))+a[10]+38016083)<<9|r>>>23)+e<<0)^e&((n=((n+=(e^t&(r^e))+a[15]-660478335)<<14|n>>>18)+r<<0)^r))+a[4]-405537848)<<20|t>>>12)+n<<0,t=((t+=((r=((r+=(t^n&((e=((e+=(n^r&(t^n))+a[9]+568446438)<<5|e>>>27)+t<<0)^t))+a[14]-1019803690)<<9|r>>>23)+e<<0)^e&((n=((n+=(e^t&(r^e))+a[3]-187363961)<<14|n>>>18)+r<<0)^r))+a[8]+1163531501)<<20|t>>>12)+n<<0,t=((t+=((r=((r+=(t^n&((e=((e+=(n^r&(t^n))+a[13]-1444681467)<<5|e>>>27)+t<<0)^t))+a[2]-51403784)<<9|r>>>23)+e<<0)^e&((n=((n+=(e^t&(r^e))+a[7]+1735328473)<<14|n>>>18)+r<<0)^r))+a[12]-1926607734)<<20|t>>>12)+n<<0,t=((t+=((o=(r=((r+=((i=t^n)^(e=((e+=(i^r)+a[5]-378558)<<4|e>>>28)+t<<0))+a[8]-2022574463)<<11|r>>>21)+e<<0)^e)^(n=((n+=(o^t)+a[11]+1839030562)<<16|n>>>16)+r<<0))+a[14]-35309556)<<23|t>>>9)+n<<0,t=((t+=((o=(r=((r+=((i=t^n)^(e=((e+=(i^r)+a[1]-1530992060)<<4|e>>>28)+t<<0))+a[4]+1272893353)<<11|r>>>21)+e<<0)^e)^(n=((n+=(o^t)+a[7]-155497632)<<16|n>>>16)+r<<0))+a[10]-1094730640)<<23|t>>>9)+n<<0,t=((t+=((o=(r=((r+=((i=t^n)^(e=((e+=(i^r)+a[13]+681279174)<<4|e>>>28)+t<<0))+a[0]-358537222)<<11|r>>>21)+e<<0)^e)^(n=((n+=(o^t)+a[3]-722521979)<<16|n>>>16)+r<<0))+a[6]+76029189)<<23|t>>>9)+n<<0,t=((t+=((o=(r=((r+=((i=t^n)^(e=((e+=(i^r)+a[9]-640364487)<<4|e>>>28)+t<<0))+a[12]-421815835)<<11|r>>>21)+e<<0)^e)^(n=((n+=(o^t)+a[15]+530742520)<<16|n>>>16)+r<<0))+a[2]-995338651)<<23|t>>>9)+n<<0,t=((t+=((r=((r+=(t^((e=((e+=(n^(t|~r))+a[0]-198630844)<<6|e>>>26)+t<<0)|~n))+a[7]+1126891415)<<10|r>>>22)+e<<0)^((n=((n+=(e^(r|~t))+a[14]-1416354905)<<15|n>>>17)+r<<0)|~e))+a[5]-57434055)<<21|t>>>11)+n<<0,t=((t+=((r=((r+=(t^((e=((e+=(n^(t|~r))+a[12]+1700485571)<<6|e>>>26)+t<<0)|~n))+a[3]-1894986606)<<10|r>>>22)+e<<0)^((n=((n+=(e^(r|~t))+a[10]-1051523)<<15|n>>>17)+r<<0)|~e))+a[1]-2054922799)<<21|t>>>11)+n<<0,t=((t+=((r=((r+=(t^((e=((e+=(n^(t|~r))+a[8]+1873313359)<<6|e>>>26)+t<<0)|~n))+a[15]-30611744)<<10|r>>>22)+e<<0)^((n=((n+=(e^(r|~t))+a[6]-1560198380)<<15|n>>>17)+r<<0)|~e))+a[13]+1309151649)<<21|t>>>11)+n<<0,t=((t+=((r=((r+=(t^((e=((e+=(n^(t|~r))+a[4]-145523070)<<6|e>>>26)+t<<0)|~n))+a[11]-1120210379)<<10|r>>>22)+e<<0)^((n=((n+=(e^(r|~t))+a[2]+718787259)<<15|n>>>17)+r<<0)|~e))+a[9]-343485551)<<21|t>>>11)+n<<0,this.first?(this.h0=e+1732584193<<0,this.h1=t-271733879<<0,this.h2=n-1732584194<<0,this.h3=r+271733878<<0,this.first=!1):(this.h0=this.h0+e<<0,this.h1=this.h1+t<<0,this.h2=this.h2+n<<0,this.h3=this.h3+r<<0)},Md5.prototype.hex=function(){this.finalize();var e=this.h0,t=this.h1,n=this.h2,r=this.h3;return HEX_CHARS[e>>4&15]+HEX_CHARS[15&e]+HEX_CHARS[e>>12&15]+HEX_CHARS[e>>8&15]+HEX_CHARS[e>>20&15]+HEX_CHARS[e>>16&15]+HEX_CHARS[e>>28&15]+HEX_CHARS[e>>24&15]+HEX_CHARS[t>>4&15]+HEX_CHARS[15&t]+HEX_CHARS[t>>12&15]+HEX_CHARS[t>>8&15]+HEX_CHARS[t>>20&15]+HEX_CHARS[t>>16&15]+HEX_CHARS[t>>28&15]+HEX_CHARS[t>>24&15]+HEX_CHARS[n>>4&15]+HEX_CHARS[15&n]+HEX_CHARS[n>>12&15]+HEX_CHARS[n>>8&15]+HEX_CHARS[n>>20&15]+HEX_CHARS[n>>16&15]+HEX_CHARS[n>>28&15]+HEX_CHARS[n>>24&15]+HEX_CHARS[r>>4&15]+HEX_CHARS[15&r]+HEX_CHARS[r>>12&15]+HEX_CHARS[r>>8&15]+HEX_CHARS[r>>20&15]+HEX_CHARS[r>>16&15]+HEX_CHARS[r>>28&15]+HEX_CHARS[r>>24&15]},Md5.prototype.toString=Md5.prototype.hex,Md5.prototype.digest=function(){this.finalize();var e=this.h0,t=this.h1,n=this.h2,r=this.h3;return[255&e,e>>8&255,e>>16&255,e>>24&255,255&t,t>>8&255,t>>16&255,t>>24&255,255&n,n>>8&255,n>>16&255,n>>24&255,255&r,r>>8&255,r>>16&255,r>>24&255]},Md5.prototype.array=Md5.prototype.digest,Md5.prototype.arrayBuffer=function(){this.finalize();var e=new ArrayBuffer(16),t=new Uint32Array(e);return t[0]=this.h0,t[1]=this.h1,t[2]=this.h2,t[3]=this.h3,e},Md5.prototype.buffer=Md5.prototype.arrayBuffer,Md5.prototype.base64=function(){for(var e,t,n,r=\"\",i=this.array(),o=0;o<15;)e=i[o++],t=i[o++],n=i[o++],r+=BASE64_ENCODE_CHAR[e>>>2]+BASE64_ENCODE_CHAR[63&(e<<4|t>>>4)]+BASE64_ENCODE_CHAR[63&(t<<2|n>>>6)]+BASE64_ENCODE_CHAR[63&n];return e=i[o],r+=BASE64_ENCODE_CHAR[e>>>2]+BASE64_ENCODE_CHAR[e<<4&63]+\"==\"};var exports=createMethod();COMMON_JS?module.exports=exports:(root.md5=exports,AMD&&(__WEBPACK_AMD_DEFINE_RESULT__=function(){return exports}.call(exports,__webpack_require__,exports,module),void 0===__WEBPACK_AMD_DEFINE_RESULT__||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)))}()}).call(this,__webpack_require__(51),__webpack_require__(44))},function(e,t,n){var r=n(37),i=[\"Aaliyah\",\"Aaron\",\"Abagail\",\"Abbey\",\"Abbie\",\"Abbigail\",\"Abby\",\"Abdiel\",\"Abdul\",\"Abdullah\",\"Abe\",\"Abel\",\"Abelardo\",\"Abigail\",\"Abigale\",\"Abigayle\",\"Abner\",\"Abraham\",\"Ada\",\"Adah\",\"Adalberto\",\"Adaline\",\"Adam\",\"Adan\",\"Addie\",\"Addison\",\"Adela\",\"Adelbert\",\"Adele\",\"Adelia\",\"Adeline\",\"Adell\",\"Adella\",\"Adelle\",\"Aditya\",\"Adolf\",\"Adolfo\",\"Adolph\",\"Adolphus\",\"Adonis\",\"Adrain\",\"Adrian\",\"Adriana\",\"Adrianna\",\"Adriel\",\"Adrien\",\"Adrienne\",\"Afton\",\"Aglae\",\"Agnes\",\"Agustin\",\"Agustina\",\"Ahmad\",\"Ahmed\",\"Aida\",\"Aidan\",\"Aiden\",\"Aileen\",\"Aisha\",\"Aiyana\",\"Akeem\",\"Al\",\"Alaina\",\"Alan\",\"Alana\",\"Alanis\",\"Alanna\",\"Alayna\",\"Alba\",\"Albert\",\"Alberta\",\"Albertha\",\"Alberto\",\"Albin\",\"Albina\",\"Alda\",\"Alden\",\"Alec\",\"Aleen\",\"Alejandra\",\"Alejandrin\",\"Alek\",\"Alena\",\"Alene\",\"Alessandra\",\"Alessandro\",\"Alessia\",\"Aletha\",\"Alex\",\"Alexa\",\"Alexander\",\"Alexandra\",\"Alexandre\",\"Alexandrea\",\"Alexandria\",\"Alexandrine\",\"Alexandro\",\"Alexane\",\"Alexanne\",\"Alexie\",\"Alexis\",\"Alexys\",\"Alexzander\",\"Alf\",\"Alfonso\",\"Alfonzo\",\"Alford\",\"Alfred\",\"Alfreda\",\"Alfredo\",\"Ali\",\"Alia\",\"Alice\",\"Alicia\",\"Alisa\",\"Alisha\",\"Alison\",\"Alivia\",\"Aliya\",\"Aliyah\",\"Aliza\",\"Alize\",\"Allan\",\"Allen\",\"Allene\",\"Allie\",\"Allison\",\"Ally\",\"Alphonso\",\"Alta\",\"Althea\",\"Alva\",\"Alvah\",\"Alvena\",\"Alvera\",\"Alverta\",\"Alvina\",\"Alvis\",\"Alyce\",\"Alycia\",\"Alysa\",\"Alysha\",\"Alyson\",\"Alysson\",\"Amalia\",\"Amanda\",\"Amani\",\"Amara\",\"Amari\",\"Amaya\",\"Amber\",\"Ambrose\",\"Amelia\",\"Amelie\",\"Amely\",\"America\",\"Americo\",\"Amie\",\"Amina\",\"Amir\",\"Amira\",\"Amiya\",\"Amos\",\"Amparo\",\"Amy\",\"Amya\",\"Ana\",\"Anabel\",\"Anabelle\",\"Anahi\",\"Anais\",\"Anastacio\",\"Anastasia\",\"Anderson\",\"Andre\",\"Andreane\",\"Andreanne\",\"Andres\",\"Andrew\",\"Andy\",\"Angel\",\"Angela\",\"Angelica\",\"Angelina\",\"Angeline\",\"Angelita\",\"Angelo\",\"Angie\",\"Angus\",\"Anibal\",\"Anika\",\"Anissa\",\"Anita\",\"Aniya\",\"Aniyah\",\"Anjali\",\"Anna\",\"Annabel\",\"Annabell\",\"Annabelle\",\"Annalise\",\"Annamae\",\"Annamarie\",\"Anne\",\"Annetta\",\"Annette\",\"Annie\",\"Ansel\",\"Ansley\",\"Anthony\",\"Antoinette\",\"Antone\",\"Antonetta\",\"Antonette\",\"Antonia\",\"Antonietta\",\"Antonina\",\"Antonio\",\"Antwan\",\"Antwon\",\"Anya\",\"April\",\"Ara\",\"Araceli\",\"Aracely\",\"Arch\",\"Archibald\",\"Ardella\",\"Arden\",\"Ardith\",\"Arely\",\"Ari\",\"Ariane\",\"Arianna\",\"Aric\",\"Ariel\",\"Arielle\",\"Arjun\",\"Arlene\",\"Arlie\",\"Arlo\",\"Armand\",\"Armando\",\"Armani\",\"Arnaldo\",\"Arne\",\"Arno\",\"Arnold\",\"Arnoldo\",\"Arnulfo\",\"Aron\",\"Art\",\"Arthur\",\"Arturo\",\"Arvel\",\"Arvid\",\"Arvilla\",\"Aryanna\",\"Asa\",\"Asha\",\"Ashlee\",\"Ashleigh\",\"Ashley\",\"Ashly\",\"Ashlynn\",\"Ashton\",\"Ashtyn\",\"Asia\",\"Assunta\",\"Astrid\",\"Athena\",\"Aubree\",\"Aubrey\",\"Audie\",\"Audra\",\"Audreanne\",\"Audrey\",\"August\",\"Augusta\",\"Augustine\",\"Augustus\",\"Aurelia\",\"Aurelie\",\"Aurelio\",\"Aurore\",\"Austen\",\"Austin\",\"Austyn\",\"Autumn\",\"Ava\",\"Avery\",\"Avis\",\"Axel\",\"Ayana\",\"Ayden\",\"Ayla\",\"Aylin\",\"Baby\",\"Bailee\",\"Bailey\",\"Barbara\",\"Barney\",\"Baron\",\"Barrett\",\"Barry\",\"Bart\",\"Bartholome\",\"Barton\",\"Baylee\",\"Beatrice\",\"Beau\",\"Beaulah\",\"Bell\",\"Bella\",\"Belle\",\"Ben\",\"Benedict\",\"Benjamin\",\"Bennett\",\"Bennie\",\"Benny\",\"Benton\",\"Berenice\",\"Bernadette\",\"Bernadine\",\"Bernard\",\"Bernardo\",\"Berneice\",\"Bernhard\",\"Bernice\",\"Bernie\",\"Berniece\",\"Bernita\",\"Berry\",\"Bert\",\"Berta\",\"Bertha\",\"Bertram\",\"Bertrand\",\"Beryl\",\"Bessie\",\"Beth\",\"Bethany\",\"Bethel\",\"Betsy\",\"Bette\",\"Bettie\",\"Betty\",\"Bettye\",\"Beulah\",\"Beverly\",\"Bianka\",\"Bill\",\"Billie\",\"Billy\",\"Birdie\",\"Blair\",\"Blaise\",\"Blake\",\"Blanca\",\"Blanche\",\"Blaze\",\"Bo\",\"Bobbie\",\"Bobby\",\"Bonita\",\"Bonnie\",\"Boris\",\"Boyd\",\"Brad\",\"Braden\",\"Bradford\",\"Bradley\",\"Bradly\",\"Brady\",\"Braeden\",\"Brain\",\"Brandi\",\"Brando\",\"Brandon\",\"Brandt\",\"Brandy\",\"Brandyn\",\"Brannon\",\"Branson\",\"Brant\",\"Braulio\",\"Braxton\",\"Brayan\",\"Breana\",\"Breanna\",\"Breanne\",\"Brenda\",\"Brendan\",\"Brenden\",\"Brendon\",\"Brenna\",\"Brennan\",\"Brennon\",\"Brent\",\"Bret\",\"Brett\",\"Bria\",\"Brian\",\"Briana\",\"Brianne\",\"Brice\",\"Bridget\",\"Bridgette\",\"Bridie\",\"Brielle\",\"Brigitte\",\"Brionna\",\"Brisa\",\"Britney\",\"Brittany\",\"Brock\",\"Broderick\",\"Brody\",\"Brook\",\"Brooke\",\"Brooklyn\",\"Brooks\",\"Brown\",\"Bruce\",\"Bryana\",\"Bryce\",\"Brycen\",\"Bryon\",\"Buck\",\"Bud\",\"Buddy\",\"Buford\",\"Bulah\",\"Burdette\",\"Burley\",\"Burnice\",\"Buster\",\"Cade\",\"Caden\",\"Caesar\",\"Caitlyn\",\"Cale\",\"Caleb\",\"Caleigh\",\"Cali\",\"Calista\",\"Callie\",\"Camden\",\"Cameron\",\"Camila\",\"Camilla\",\"Camille\",\"Camren\",\"Camron\",\"Camryn\",\"Camylle\",\"Candace\",\"Candelario\",\"Candice\",\"Candida\",\"Candido\",\"Cara\",\"Carey\",\"Carissa\",\"Carlee\",\"Carleton\",\"Carley\",\"Carli\",\"Carlie\",\"Carlo\",\"Carlos\",\"Carlotta\",\"Carmel\",\"Carmela\",\"Carmella\",\"Carmelo\",\"Carmen\",\"Carmine\",\"Carol\",\"Carolanne\",\"Carole\",\"Carolina\",\"Caroline\",\"Carolyn\",\"Carolyne\",\"Carrie\",\"Carroll\",\"Carson\",\"Carter\",\"Cary\",\"Casandra\",\"Casey\",\"Casimer\",\"Casimir\",\"Casper\",\"Cassandra\",\"Cassandre\",\"Cassidy\",\"Cassie\",\"Catalina\",\"Caterina\",\"Catharine\",\"Catherine\",\"Cathrine\",\"Cathryn\",\"Cathy\",\"Cayla\",\"Ceasar\",\"Cecelia\",\"Cecil\",\"Cecile\",\"Cecilia\",\"Cedrick\",\"Celestine\",\"Celestino\",\"Celia\",\"Celine\",\"Cesar\",\"Chad\",\"Chadd\",\"Chadrick\",\"Chaim\",\"Chance\",\"Chandler\",\"Chanel\",\"Chanelle\",\"Charity\",\"Charlene\",\"Charles\",\"Charley\",\"Charlie\",\"Charlotte\",\"Chase\",\"Chasity\",\"Chauncey\",\"Chaya\",\"Chaz\",\"Chelsea\",\"Chelsey\",\"Chelsie\",\"Chesley\",\"Chester\",\"Chet\",\"Cheyanne\",\"Cheyenne\",\"Chloe\",\"Chris\",\"Christ\",\"Christa\",\"Christelle\",\"Christian\",\"Christiana\",\"Christina\",\"Christine\",\"Christop\",\"Christophe\",\"Christopher\",\"Christy\",\"Chyna\",\"Ciara\",\"Cicero\",\"Cielo\",\"Cierra\",\"Cindy\",\"Citlalli\",\"Clair\",\"Claire\",\"Clara\",\"Clarabelle\",\"Clare\",\"Clarissa\",\"Clark\",\"Claud\",\"Claude\",\"Claudia\",\"Claudie\",\"Claudine\",\"Clay\",\"Clemens\",\"Clement\",\"Clementina\",\"Clementine\",\"Clemmie\",\"Cleo\",\"Cleora\",\"Cleta\",\"Cletus\",\"Cleve\",\"Cleveland\",\"Clifford\",\"Clifton\",\"Clint\",\"Clinton\",\"Clotilde\",\"Clovis\",\"Cloyd\",\"Clyde\",\"Coby\",\"Cody\",\"Colby\",\"Cole\",\"Coleman\",\"Colin\",\"Colleen\",\"Collin\",\"Colt\",\"Colten\",\"Colton\",\"Columbus\",\"Concepcion\",\"Conner\",\"Connie\",\"Connor\",\"Conor\",\"Conrad\",\"Constance\",\"Constantin\",\"Consuelo\",\"Cooper\",\"Cora\",\"Coralie\",\"Corbin\",\"Cordelia\",\"Cordell\",\"Cordia\",\"Cordie\",\"Corene\",\"Corine\",\"Cornelius\",\"Cornell\",\"Corrine\",\"Cortez\",\"Cortney\",\"Cory\",\"Coty\",\"Courtney\",\"Coy\",\"Craig\",\"Crawford\",\"Creola\",\"Cristal\",\"Cristian\",\"Cristina\",\"Cristobal\",\"Cristopher\",\"Cruz\",\"Crystal\",\"Crystel\",\"Cullen\",\"Curt\",\"Curtis\",\"Cydney\",\"Cynthia\",\"Cyril\",\"Cyrus\",\"Dagmar\",\"Dahlia\",\"Daija\",\"Daisha\",\"Daisy\",\"Dakota\",\"Dale\",\"Dallas\",\"Dallin\",\"Dalton\",\"Damaris\",\"Dameon\",\"Damian\",\"Damien\",\"Damion\",\"Damon\",\"Dan\",\"Dana\",\"Dandre\",\"Dane\",\"D'angelo\",\"Dangelo\",\"Danial\",\"Daniela\",\"Daniella\",\"Danielle\",\"Danika\",\"Dannie\",\"Danny\",\"Dante\",\"Danyka\",\"Daphne\",\"Daphnee\",\"Daphney\",\"Darby\",\"Daren\",\"Darian\",\"Dariana\",\"Darien\",\"Dario\",\"Darion\",\"Darius\",\"Darlene\",\"Daron\",\"Darrel\",\"Darrell\",\"Darren\",\"Darrick\",\"Darrin\",\"Darrion\",\"Darron\",\"Darryl\",\"Darwin\",\"Daryl\",\"Dashawn\",\"Dasia\",\"Dave\",\"David\",\"Davin\",\"Davion\",\"Davon\",\"Davonte\",\"Dawn\",\"Dawson\",\"Dax\",\"Dayana\",\"Dayna\",\"Dayne\",\"Dayton\",\"Dean\",\"Deangelo\",\"Deanna\",\"Deborah\",\"Declan\",\"Dedric\",\"Dedrick\",\"Dee\",\"Deion\",\"Deja\",\"Dejah\",\"Dejon\",\"Dejuan\",\"Delaney\",\"Delbert\",\"Delfina\",\"Delia\",\"Delilah\",\"Dell\",\"Della\",\"Delmer\",\"Delores\",\"Delpha\",\"Delphia\",\"Delphine\",\"Delta\",\"Demarco\",\"Demarcus\",\"Demario\",\"Demetris\",\"Demetrius\",\"Demond\",\"Dena\",\"Denis\",\"Dennis\",\"Deon\",\"Deondre\",\"Deontae\",\"Deonte\",\"Dereck\",\"Derek\",\"Derick\",\"Deron\",\"Derrick\",\"Deshaun\",\"Deshawn\",\"Desiree\",\"Desmond\",\"Dessie\",\"Destany\",\"Destin\",\"Destinee\",\"Destiney\",\"Destini\",\"Destiny\",\"Devan\",\"Devante\",\"Deven\",\"Devin\",\"Devon\",\"Devonte\",\"Devyn\",\"Dewayne\",\"Dewitt\",\"Dexter\",\"Diamond\",\"Diana\",\"Dianna\",\"Diego\",\"Dillan\",\"Dillon\",\"Dimitri\",\"Dina\",\"Dino\",\"Dion\",\"Dixie\",\"Dock\",\"Dolly\",\"Dolores\",\"Domenic\",\"Domenica\",\"Domenick\",\"Domenico\",\"Domingo\",\"Dominic\",\"Dominique\",\"Don\",\"Donald\",\"Donato\",\"Donavon\",\"Donna\",\"Donnell\",\"Donnie\",\"Donny\",\"Dora\",\"Dorcas\",\"Dorian\",\"Doris\",\"Dorothea\",\"Dorothy\",\"Dorris\",\"Dortha\",\"Dorthy\",\"Doug\",\"Douglas\",\"Dovie\",\"Doyle\",\"Drake\",\"Drew\",\"Duane\",\"Dudley\",\"Dulce\",\"Duncan\",\"Durward\",\"Dustin\",\"Dusty\",\"Dwight\",\"Dylan\",\"Earl\",\"Earlene\",\"Earline\",\"Earnest\",\"Earnestine\",\"Easter\",\"Easton\",\"Ebba\",\"Ebony\",\"Ed\",\"Eda\",\"Edd\",\"Eddie\",\"Eden\",\"Edgar\",\"Edgardo\",\"Edison\",\"Edmond\",\"Edmund\",\"Edna\",\"Eduardo\",\"Edward\",\"Edwardo\",\"Edwin\",\"Edwina\",\"Edyth\",\"Edythe\",\"Effie\",\"Efrain\",\"Efren\",\"Eileen\",\"Einar\",\"Eino\",\"Eladio\",\"Elaina\",\"Elbert\",\"Elda\",\"Eldon\",\"Eldora\",\"Eldred\",\"Eldridge\",\"Eleanora\",\"Eleanore\",\"Eleazar\",\"Electa\",\"Elena\",\"Elenor\",\"Elenora\",\"Eleonore\",\"Elfrieda\",\"Eli\",\"Elian\",\"Eliane\",\"Elias\",\"Eliezer\",\"Elijah\",\"Elinor\",\"Elinore\",\"Elisa\",\"Elisabeth\",\"Elise\",\"Eliseo\",\"Elisha\",\"Elissa\",\"Eliza\",\"Elizabeth\",\"Ella\",\"Ellen\",\"Ellie\",\"Elliot\",\"Elliott\",\"Ellis\",\"Ellsworth\",\"Elmer\",\"Elmira\",\"Elmo\",\"Elmore\",\"Elna\",\"Elnora\",\"Elody\",\"Eloisa\",\"Eloise\",\"Elouise\",\"Eloy\",\"Elroy\",\"Elsa\",\"Else\",\"Elsie\",\"Elta\",\"Elton\",\"Elva\",\"Elvera\",\"Elvie\",\"Elvis\",\"Elwin\",\"Elwyn\",\"Elyse\",\"Elyssa\",\"Elza\",\"Emanuel\",\"Emelia\",\"Emelie\",\"Emely\",\"Emerald\",\"Emerson\",\"Emery\",\"Emie\",\"Emil\",\"Emile\",\"Emilia\",\"Emiliano\",\"Emilie\",\"Emilio\",\"Emily\",\"Emma\",\"Emmalee\",\"Emmanuel\",\"Emmanuelle\",\"Emmet\",\"Emmett\",\"Emmie\",\"Emmitt\",\"Emmy\",\"Emory\",\"Ena\",\"Enid\",\"Enoch\",\"Enola\",\"Enos\",\"Enrico\",\"Enrique\",\"Ephraim\",\"Era\",\"Eriberto\",\"Eric\",\"Erica\",\"Erich\",\"Erick\",\"Ericka\",\"Erik\",\"Erika\",\"Erin\",\"Erling\",\"Erna\",\"Ernest\",\"Ernestina\",\"Ernestine\",\"Ernesto\",\"Ernie\",\"Ervin\",\"Erwin\",\"Eryn\",\"Esmeralda\",\"Esperanza\",\"Esta\",\"Esteban\",\"Estefania\",\"Estel\",\"Estell\",\"Estella\",\"Estelle\",\"Estevan\",\"Esther\",\"Estrella\",\"Etha\",\"Ethan\",\"Ethel\",\"Ethelyn\",\"Ethyl\",\"Ettie\",\"Eudora\",\"Eugene\",\"Eugenia\",\"Eula\",\"Eulah\",\"Eulalia\",\"Euna\",\"Eunice\",\"Eusebio\",\"Eva\",\"Evalyn\",\"Evan\",\"Evangeline\",\"Evans\",\"Eve\",\"Eveline\",\"Evelyn\",\"Everardo\",\"Everett\",\"Everette\",\"Evert\",\"Evie\",\"Ewald\",\"Ewell\",\"Ezekiel\",\"Ezequiel\",\"Ezra\",\"Fabian\",\"Fabiola\",\"Fae\",\"Fannie\",\"Fanny\",\"Fatima\",\"Faustino\",\"Fausto\",\"Favian\",\"Fay\",\"Faye\",\"Federico\",\"Felicia\",\"Felicita\",\"Felicity\",\"Felipa\",\"Felipe\",\"Felix\",\"Felton\",\"Fermin\",\"Fern\",\"Fernando\",\"Ferne\",\"Fidel\",\"Filiberto\",\"Filomena\",\"Finn\",\"Fiona\",\"Flavie\",\"Flavio\",\"Fleta\",\"Fletcher\",\"Flo\",\"Florence\",\"Florencio\",\"Florian\",\"Florida\",\"Florine\",\"Flossie\",\"Floy\",\"Floyd\",\"Ford\",\"Forest\",\"Forrest\",\"Foster\",\"Frances\",\"Francesca\",\"Francesco\",\"Francis\",\"Francisca\",\"Francisco\",\"Franco\",\"Frank\",\"Frankie\",\"Franz\",\"Fred\",\"Freda\",\"Freddie\",\"Freddy\",\"Frederic\",\"Frederick\",\"Frederik\",\"Frederique\",\"Fredrick\",\"Fredy\",\"Freeda\",\"Freeman\",\"Freida\",\"Frida\",\"Frieda\",\"Friedrich\",\"Fritz\",\"Furman\",\"Gabe\",\"Gabriel\",\"Gabriella\",\"Gabrielle\",\"Gaetano\",\"Gage\",\"Gail\",\"Gardner\",\"Garett\",\"Garfield\",\"Garland\",\"Garnet\",\"Garnett\",\"Garret\",\"Garrett\",\"Garrick\",\"Garrison\",\"Garry\",\"Garth\",\"Gaston\",\"Gavin\",\"Gay\",\"Gayle\",\"Gaylord\",\"Gene\",\"General\",\"Genesis\",\"Genevieve\",\"Gennaro\",\"Genoveva\",\"Geo\",\"Geoffrey\",\"George\",\"Georgette\",\"Georgiana\",\"Georgianna\",\"Geovanni\",\"Geovanny\",\"Geovany\",\"Gerald\",\"Geraldine\",\"Gerard\",\"Gerardo\",\"Gerda\",\"Gerhard\",\"Germaine\",\"German\",\"Gerry\",\"Gerson\",\"Gertrude\",\"Gia\",\"Gianni\",\"Gideon\",\"Gilbert\",\"Gilberto\",\"Gilda\",\"Giles\",\"Gillian\",\"Gina\",\"Gino\",\"Giovani\",\"Giovanna\",\"Giovanni\",\"Giovanny\",\"Gisselle\",\"Giuseppe\",\"Gladyce\",\"Gladys\",\"Glen\",\"Glenda\",\"Glenna\",\"Glennie\",\"Gloria\",\"Godfrey\",\"Golda\",\"Golden\",\"Gonzalo\",\"Gordon\",\"Grace\",\"Gracie\",\"Graciela\",\"Grady\",\"Graham\",\"Grant\",\"Granville\",\"Grayce\",\"Grayson\",\"Green\",\"Greg\",\"Gregg\",\"Gregoria\",\"Gregorio\",\"Gregory\",\"Greta\",\"Gretchen\",\"Greyson\",\"Griffin\",\"Grover\",\"Guadalupe\",\"Gudrun\",\"Guido\",\"Guillermo\",\"Guiseppe\",\"Gunnar\",\"Gunner\",\"Gus\",\"Gussie\",\"Gust\",\"Gustave\",\"Guy\",\"Gwen\",\"Gwendolyn\",\"Hadley\",\"Hailee\",\"Hailey\",\"Hailie\",\"Hal\",\"Haleigh\",\"Haley\",\"Halie\",\"Halle\",\"Hallie\",\"Hank\",\"Hanna\",\"Hannah\",\"Hans\",\"Hardy\",\"Harley\",\"Harmon\",\"Harmony\",\"Harold\",\"Harrison\",\"Harry\",\"Harvey\",\"Haskell\",\"Hassan\",\"Hassie\",\"Hattie\",\"Haven\",\"Hayden\",\"Haylee\",\"Hayley\",\"Haylie\",\"Hazel\",\"Hazle\",\"Heath\",\"Heather\",\"Heaven\",\"Heber\",\"Hector\",\"Heidi\",\"Helen\",\"Helena\",\"Helene\",\"Helga\",\"Hellen\",\"Helmer\",\"Heloise\",\"Henderson\",\"Henri\",\"Henriette\",\"Henry\",\"Herbert\",\"Herman\",\"Hermann\",\"Hermina\",\"Herminia\",\"Herminio\",\"Hershel\",\"Herta\",\"Hertha\",\"Hester\",\"Hettie\",\"Hilario\",\"Hilbert\",\"Hilda\",\"Hildegard\",\"Hillard\",\"Hillary\",\"Hilma\",\"Hilton\",\"Hipolito\",\"Hiram\",\"Hobart\",\"Holden\",\"Hollie\",\"Hollis\",\"Holly\",\"Hope\",\"Horace\",\"Horacio\",\"Hortense\",\"Hosea\",\"Houston\",\"Howard\",\"Howell\",\"Hoyt\",\"Hubert\",\"Hudson\",\"Hugh\",\"Hulda\",\"Humberto\",\"Hunter\",\"Hyman\",\"Ian\",\"Ibrahim\",\"Icie\",\"Ida\",\"Idell\",\"Idella\",\"Ignacio\",\"Ignatius\",\"Ike\",\"Ila\",\"Ilene\",\"Iliana\",\"Ima\",\"Imani\",\"Imelda\",\"Immanuel\",\"Imogene\",\"Ines\",\"Irma\",\"Irving\",\"Irwin\",\"Isaac\",\"Isabel\",\"Isabell\",\"Isabella\",\"Isabelle\",\"Isac\",\"Isadore\",\"Isai\",\"Isaiah\",\"Isaias\",\"Isidro\",\"Ismael\",\"Isobel\",\"Isom\",\"Israel\",\"Issac\",\"Itzel\",\"Iva\",\"Ivah\",\"Ivory\",\"Ivy\",\"Izabella\",\"Izaiah\",\"Jabari\",\"Jace\",\"Jacey\",\"Jacinthe\",\"Jacinto\",\"Jack\",\"Jackeline\",\"Jackie\",\"Jacklyn\",\"Jackson\",\"Jacky\",\"Jaclyn\",\"Jacquelyn\",\"Jacques\",\"Jacynthe\",\"Jada\",\"Jade\",\"Jaden\",\"Jadon\",\"Jadyn\",\"Jaeden\",\"Jaida\",\"Jaiden\",\"Jailyn\",\"Jaime\",\"Jairo\",\"Jakayla\",\"Jake\",\"Jakob\",\"Jaleel\",\"Jalen\",\"Jalon\",\"Jalyn\",\"Jamaal\",\"Jamal\",\"Jamar\",\"Jamarcus\",\"Jamel\",\"Jameson\",\"Jamey\",\"Jamie\",\"Jamil\",\"Jamir\",\"Jamison\",\"Jammie\",\"Jan\",\"Jana\",\"Janae\",\"Jane\",\"Janelle\",\"Janessa\",\"Janet\",\"Janice\",\"Janick\",\"Janie\",\"Janis\",\"Janiya\",\"Jannie\",\"Jany\",\"Jaquan\",\"Jaquelin\",\"Jaqueline\",\"Jared\",\"Jaren\",\"Jarod\",\"Jaron\",\"Jarred\",\"Jarrell\",\"Jarret\",\"Jarrett\",\"Jarrod\",\"Jarvis\",\"Jasen\",\"Jasmin\",\"Jason\",\"Jasper\",\"Jaunita\",\"Javier\",\"Javon\",\"Javonte\",\"Jay\",\"Jayce\",\"Jaycee\",\"Jayda\",\"Jayde\",\"Jayden\",\"Jaydon\",\"Jaylan\",\"Jaylen\",\"Jaylin\",\"Jaylon\",\"Jayme\",\"Jayne\",\"Jayson\",\"Jazlyn\",\"Jazmin\",\"Jazmyn\",\"Jazmyne\",\"Jean\",\"Jeanette\",\"Jeanie\",\"Jeanne\",\"Jed\",\"Jedediah\",\"Jedidiah\",\"Jeff\",\"Jefferey\",\"Jeffery\",\"Jeffrey\",\"Jeffry\",\"Jena\",\"Jenifer\",\"Jennie\",\"Jennifer\",\"Jennings\",\"Jennyfer\",\"Jensen\",\"Jerad\",\"Jerald\",\"Jeramie\",\"Jeramy\",\"Jerel\",\"Jeremie\",\"Jeremy\",\"Jermain\",\"Jermaine\",\"Jermey\",\"Jerod\",\"Jerome\",\"Jeromy\",\"Jerrell\",\"Jerrod\",\"Jerrold\",\"Jerry\",\"Jess\",\"Jesse\",\"Jessica\",\"Jessie\",\"Jessika\",\"Jessy\",\"Jessyca\",\"Jesus\",\"Jett\",\"Jettie\",\"Jevon\",\"Jewel\",\"Jewell\",\"Jillian\",\"Jimmie\",\"Jimmy\",\"Jo\",\"Joan\",\"Joana\",\"Joanie\",\"Joanne\",\"Joannie\",\"Joanny\",\"Joany\",\"Joaquin\",\"Jocelyn\",\"Jodie\",\"Jody\",\"Joe\",\"Joel\",\"Joelle\",\"Joesph\",\"Joey\",\"Johan\",\"Johann\",\"Johanna\",\"Johathan\",\"John\",\"Johnathan\",\"Johnathon\",\"Johnnie\",\"Johnny\",\"Johnpaul\",\"Johnson\",\"Jolie\",\"Jon\",\"Jonas\",\"Jonatan\",\"Jonathan\",\"Jonathon\",\"Jordan\",\"Jordane\",\"Jordi\",\"Jordon\",\"Jordy\",\"Jordyn\",\"Jorge\",\"Jose\",\"Josefa\",\"Josefina\",\"Joseph\",\"Josephine\",\"Josh\",\"Joshua\",\"Joshuah\",\"Josiah\",\"Josiane\",\"Josianne\",\"Josie\",\"Josue\",\"Jovan\",\"Jovani\",\"Jovanny\",\"Jovany\",\"Joy\",\"Joyce\",\"Juana\",\"Juanita\",\"Judah\",\"Judd\",\"Jude\",\"Judge\",\"Judson\",\"Judy\",\"Jules\",\"Julia\",\"Julian\",\"Juliana\",\"Julianne\",\"Julie\",\"Julien\",\"Juliet\",\"Julio\",\"Julius\",\"June\",\"Junior\",\"Junius\",\"Justen\",\"Justice\",\"Justina\",\"Justine\",\"Juston\",\"Justus\",\"Justyn\",\"Juvenal\",\"Juwan\",\"Kacey\",\"Kaci\",\"Kacie\",\"Kade\",\"Kaden\",\"Kadin\",\"Kaela\",\"Kaelyn\",\"Kaia\",\"Kailee\",\"Kailey\",\"Kailyn\",\"Kaitlin\",\"Kaitlyn\",\"Kale\",\"Kaleb\",\"Kaleigh\",\"Kaley\",\"Kali\",\"Kallie\",\"Kameron\",\"Kamille\",\"Kamren\",\"Kamron\",\"Kamryn\",\"Kane\",\"Kara\",\"Kareem\",\"Karelle\",\"Karen\",\"Kari\",\"Kariane\",\"Karianne\",\"Karina\",\"Karine\",\"Karl\",\"Karlee\",\"Karley\",\"Karli\",\"Karlie\",\"Karolann\",\"Karson\",\"Kasandra\",\"Kasey\",\"Kassandra\",\"Katarina\",\"Katelin\",\"Katelyn\",\"Katelynn\",\"Katharina\",\"Katherine\",\"Katheryn\",\"Kathleen\",\"Kathlyn\",\"Kathryn\",\"Kathryne\",\"Katlyn\",\"Katlynn\",\"Katrina\",\"Katrine\",\"Kattie\",\"Kavon\",\"Kay\",\"Kaya\",\"Kaycee\",\"Kayden\",\"Kayla\",\"Kaylah\",\"Kaylee\",\"Kayleigh\",\"Kayley\",\"Kayli\",\"Kaylie\",\"Kaylin\",\"Keagan\",\"Keanu\",\"Keara\",\"Keaton\",\"Keegan\",\"Keeley\",\"Keely\",\"Keenan\",\"Keira\",\"Keith\",\"Kellen\",\"Kelley\",\"Kelli\",\"Kellie\",\"Kelly\",\"Kelsi\",\"Kelsie\",\"Kelton\",\"Kelvin\",\"Ken\",\"Kendall\",\"Kendra\",\"Kendrick\",\"Kenna\",\"Kennedi\",\"Kennedy\",\"Kenneth\",\"Kennith\",\"Kenny\",\"Kenton\",\"Kenya\",\"Kenyatta\",\"Kenyon\",\"Keon\",\"Keshaun\",\"Keshawn\",\"Keven\",\"Kevin\",\"Kevon\",\"Keyon\",\"Keyshawn\",\"Khalid\",\"Khalil\",\"Kian\",\"Kiana\",\"Kianna\",\"Kiara\",\"Kiarra\",\"Kiel\",\"Kiera\",\"Kieran\",\"Kiley\",\"Kim\",\"Kimberly\",\"King\",\"Kip\",\"Kira\",\"Kirk\",\"Kirsten\",\"Kirstin\",\"Kitty\",\"Kobe\",\"Koby\",\"Kody\",\"Kolby\",\"Kole\",\"Korbin\",\"Korey\",\"Kory\",\"Kraig\",\"Kris\",\"Krista\",\"Kristian\",\"Kristin\",\"Kristina\",\"Kristofer\",\"Kristoffer\",\"Kristopher\",\"Kristy\",\"Krystal\",\"Krystel\",\"Krystina\",\"Kurt\",\"Kurtis\",\"Kyla\",\"Kyle\",\"Kylee\",\"Kyleigh\",\"Kyler\",\"Kylie\",\"Kyra\",\"Lacey\",\"Lacy\",\"Ladarius\",\"Lafayette\",\"Laila\",\"Laisha\",\"Lamar\",\"Lambert\",\"Lamont\",\"Lance\",\"Landen\",\"Lane\",\"Laney\",\"Larissa\",\"Laron\",\"Larry\",\"Larue\",\"Laura\",\"Laurel\",\"Lauren\",\"Laurence\",\"Lauretta\",\"Lauriane\",\"Laurianne\",\"Laurie\",\"Laurine\",\"Laury\",\"Lauryn\",\"Lavada\",\"Lavern\",\"Laverna\",\"Laverne\",\"Lavina\",\"Lavinia\",\"Lavon\",\"Lavonne\",\"Lawrence\",\"Lawson\",\"Layla\",\"Layne\",\"Lazaro\",\"Lea\",\"Leann\",\"Leanna\",\"Leanne\",\"Leatha\",\"Leda\",\"Lee\",\"Leif\",\"Leila\",\"Leilani\",\"Lela\",\"Lelah\",\"Leland\",\"Lelia\",\"Lempi\",\"Lemuel\",\"Lenna\",\"Lennie\",\"Lenny\",\"Lenora\",\"Lenore\",\"Leo\",\"Leola\",\"Leon\",\"Leonard\",\"Leonardo\",\"Leone\",\"Leonel\",\"Leonie\",\"Leonor\",\"Leonora\",\"Leopold\",\"Leopoldo\",\"Leora\",\"Lera\",\"Lesley\",\"Leslie\",\"Lesly\",\"Lessie\",\"Lester\",\"Leta\",\"Letha\",\"Letitia\",\"Levi\",\"Lew\",\"Lewis\",\"Lexi\",\"Lexie\",\"Lexus\",\"Lia\",\"Liam\",\"Liana\",\"Libbie\",\"Libby\",\"Lila\",\"Lilian\",\"Liliana\",\"Liliane\",\"Lilla\",\"Lillian\",\"Lilliana\",\"Lillie\",\"Lilly\",\"Lily\",\"Lilyan\",\"Lina\",\"Lincoln\",\"Linda\",\"Lindsay\",\"Lindsey\",\"Linnea\",\"Linnie\",\"Linwood\",\"Lionel\",\"Lisa\",\"Lisandro\",\"Lisette\",\"Litzy\",\"Liza\",\"Lizeth\",\"Lizzie\",\"Llewellyn\",\"Lloyd\",\"Logan\",\"Lois\",\"Lola\",\"Lolita\",\"Loma\",\"Lon\",\"London\",\"Lonie\",\"Lonnie\",\"Lonny\",\"Lonzo\",\"Lora\",\"Loraine\",\"Loren\",\"Lorena\",\"Lorenz\",\"Lorenza\",\"Lorenzo\",\"Lori\",\"Lorine\",\"Lorna\",\"Lottie\",\"Lou\",\"Louie\",\"Louisa\",\"Lourdes\",\"Louvenia\",\"Lowell\",\"Loy\",\"Loyal\",\"Loyce\",\"Lucas\",\"Luciano\",\"Lucie\",\"Lucienne\",\"Lucile\",\"Lucinda\",\"Lucio\",\"Lucious\",\"Lucius\",\"Lucy\",\"Ludie\",\"Ludwig\",\"Lue\",\"Luella\",\"Luigi\",\"Luis\",\"Luisa\",\"Lukas\",\"Lula\",\"Lulu\",\"Luna\",\"Lupe\",\"Lura\",\"Lurline\",\"Luther\",\"Luz\",\"Lyda\",\"Lydia\",\"Lyla\",\"Lynn\",\"Lyric\",\"Lysanne\",\"Mabel\",\"Mabelle\",\"Mable\",\"Mac\",\"Macey\",\"Maci\",\"Macie\",\"Mack\",\"Mackenzie\",\"Macy\",\"Madaline\",\"Madalyn\",\"Maddison\",\"Madeline\",\"Madelyn\",\"Madelynn\",\"Madge\",\"Madie\",\"Madilyn\",\"Madisen\",\"Madison\",\"Madisyn\",\"Madonna\",\"Madyson\",\"Mae\",\"Maegan\",\"Maeve\",\"Mafalda\",\"Magali\",\"Magdalen\",\"Magdalena\",\"Maggie\",\"Magnolia\",\"Magnus\",\"Maia\",\"Maida\",\"Maiya\",\"Major\",\"Makayla\",\"Makenna\",\"Makenzie\",\"Malachi\",\"Malcolm\",\"Malika\",\"Malinda\",\"Mallie\",\"Mallory\",\"Malvina\",\"Mandy\",\"Manley\",\"Manuel\",\"Manuela\",\"Mara\",\"Marc\",\"Marcel\",\"Marcelina\",\"Marcelino\",\"Marcella\",\"Marcelle\",\"Marcellus\",\"Marcelo\",\"Marcia\",\"Marco\",\"Marcos\",\"Marcus\",\"Margaret\",\"Margarete\",\"Margarett\",\"Margaretta\",\"Margarette\",\"Margarita\",\"Marge\",\"Margie\",\"Margot\",\"Margret\",\"Marguerite\",\"Maria\",\"Mariah\",\"Mariam\",\"Marian\",\"Mariana\",\"Mariane\",\"Marianna\",\"Marianne\",\"Mariano\",\"Maribel\",\"Marie\",\"Mariela\",\"Marielle\",\"Marietta\",\"Marilie\",\"Marilou\",\"Marilyne\",\"Marina\",\"Mario\",\"Marion\",\"Marisa\",\"Marisol\",\"Maritza\",\"Marjolaine\",\"Marjorie\",\"Marjory\",\"Mark\",\"Markus\",\"Marlee\",\"Marlen\",\"Marlene\",\"Marley\",\"Marlin\",\"Marlon\",\"Marques\",\"Marquis\",\"Marquise\",\"Marshall\",\"Marta\",\"Martin\",\"Martina\",\"Martine\",\"Marty\",\"Marvin\",\"Mary\",\"Maryam\",\"Maryjane\",\"Maryse\",\"Mason\",\"Mateo\",\"Mathew\",\"Mathias\",\"Mathilde\",\"Matilda\",\"Matilde\",\"Matt\",\"Matteo\",\"Mattie\",\"Maud\",\"Maude\",\"Maudie\",\"Maureen\",\"Maurice\",\"Mauricio\",\"Maurine\",\"Maverick\",\"Mavis\",\"Max\",\"Maxie\",\"Maxime\",\"Maximilian\",\"Maximillia\",\"Maximillian\",\"Maximo\",\"Maximus\",\"Maxine\",\"Maxwell\",\"May\",\"Maya\",\"Maybell\",\"Maybelle\",\"Maye\",\"Maymie\",\"Maynard\",\"Mayra\",\"Mazie\",\"Mckayla\",\"Mckenna\",\"Mckenzie\",\"Meagan\",\"Meaghan\",\"Meda\",\"Megane\",\"Meggie\",\"Meghan\",\"Mekhi\",\"Melany\",\"Melba\",\"Melisa\",\"Melissa\",\"Mellie\",\"Melody\",\"Melvin\",\"Melvina\",\"Melyna\",\"Melyssa\",\"Mercedes\",\"Meredith\",\"Merl\",\"Merle\",\"Merlin\",\"Merritt\",\"Mertie\",\"Mervin\",\"Meta\",\"Mia\",\"Micaela\",\"Micah\",\"Michael\",\"Michaela\",\"Michale\",\"Micheal\",\"Michel\",\"Michele\",\"Michelle\",\"Miguel\",\"Mikayla\",\"Mike\",\"Mikel\",\"Milan\",\"Miles\",\"Milford\",\"Miller\",\"Millie\",\"Milo\",\"Milton\",\"Mina\",\"Minerva\",\"Minnie\",\"Miracle\",\"Mireille\",\"Mireya\",\"Misael\",\"Missouri\",\"Misty\",\"Mitchel\",\"Mitchell\",\"Mittie\",\"Modesta\",\"Modesto\",\"Mohamed\",\"Mohammad\",\"Mohammed\",\"Moises\",\"Mollie\",\"Molly\",\"Mona\",\"Monica\",\"Monique\",\"Monroe\",\"Monserrat\",\"Monserrate\",\"Montana\",\"Monte\",\"Monty\",\"Morgan\",\"Moriah\",\"Morris\",\"Mortimer\",\"Morton\",\"Mose\",\"Moses\",\"Moshe\",\"Mossie\",\"Mozell\",\"Mozelle\",\"Muhammad\",\"Muriel\",\"Murl\",\"Murphy\",\"Murray\",\"Mustafa\",\"Mya\",\"Myah\",\"Mylene\",\"Myles\",\"Myra\",\"Myriam\",\"Myrl\",\"Myrna\",\"Myron\",\"Myrtice\",\"Myrtie\",\"Myrtis\",\"Myrtle\",\"Nadia\",\"Nakia\",\"Name\",\"Nannie\",\"Naomi\",\"Naomie\",\"Napoleon\",\"Narciso\",\"Nash\",\"Nasir\",\"Nat\",\"Natalia\",\"Natalie\",\"Natasha\",\"Nathan\",\"Nathanael\",\"Nathanial\",\"Nathaniel\",\"Nathen\",\"Nayeli\",\"Neal\",\"Ned\",\"Nedra\",\"Neha\",\"Neil\",\"Nelda\",\"Nella\",\"Nelle\",\"Nellie\",\"Nels\",\"Nelson\",\"Neoma\",\"Nestor\",\"Nettie\",\"Neva\",\"Newell\",\"Newton\",\"Nia\",\"Nicholas\",\"Nicholaus\",\"Nichole\",\"Nick\",\"Nicklaus\",\"Nickolas\",\"Nico\",\"Nicola\",\"Nicolas\",\"Nicole\",\"Nicolette\",\"Nigel\",\"Nikita\",\"Nikki\",\"Nikko\",\"Niko\",\"Nikolas\",\"Nils\",\"Nina\",\"Noah\",\"Noble\",\"Noe\",\"Noel\",\"Noelia\",\"Noemi\",\"Noemie\",\"Noemy\",\"Nola\",\"Nolan\",\"Nona\",\"Nora\",\"Norbert\",\"Norberto\",\"Norene\",\"Norma\",\"Norris\",\"Norval\",\"Norwood\",\"Nova\",\"Novella\",\"Nya\",\"Nyah\",\"Nyasia\",\"Obie\",\"Oceane\",\"Ocie\",\"Octavia\",\"Oda\",\"Odell\",\"Odessa\",\"Odie\",\"Ofelia\",\"Okey\",\"Ola\",\"Olaf\",\"Ole\",\"Olen\",\"Oleta\",\"Olga\",\"Olin\",\"Oliver\",\"Ollie\",\"Oma\",\"Omari\",\"Omer\",\"Ona\",\"Onie\",\"Opal\",\"Ophelia\",\"Ora\",\"Oral\",\"Oran\",\"Oren\",\"Orie\",\"Orin\",\"Orion\",\"Orland\",\"Orlando\",\"Orlo\",\"Orpha\",\"Orrin\",\"Orval\",\"Orville\",\"Osbaldo\",\"Osborne\",\"Oscar\",\"Osvaldo\",\"Oswald\",\"Oswaldo\",\"Otha\",\"Otho\",\"Otilia\",\"Otis\",\"Ottilie\",\"Ottis\",\"Otto\",\"Ova\",\"Owen\",\"Ozella\",\"Pablo\",\"Paige\",\"Palma\",\"Pamela\",\"Pansy\",\"Paolo\",\"Paris\",\"Parker\",\"Pascale\",\"Pasquale\",\"Pat\",\"Patience\",\"Patricia\",\"Patrick\",\"Patsy\",\"Pattie\",\"Paul\",\"Paula\",\"Pauline\",\"Paxton\",\"Payton\",\"Pearl\",\"Pearlie\",\"Pearline\",\"Pedro\",\"Peggie\",\"Penelope\",\"Percival\",\"Percy\",\"Perry\",\"Pete\",\"Peter\",\"Petra\",\"Peyton\",\"Philip\",\"Phoebe\",\"Phyllis\",\"Pierce\",\"Pierre\",\"Pietro\",\"Pink\",\"Pinkie\",\"Piper\",\"Polly\",\"Porter\",\"Precious\",\"Presley\",\"Preston\",\"Price\",\"Prince\",\"Princess\",\"Priscilla\",\"Providenci\",\"Prudence\",\"Queen\",\"Queenie\",\"Quentin\",\"Quincy\",\"Quinn\",\"Quinten\",\"Quinton\",\"Rachael\",\"Rachel\",\"Rachelle\",\"Rae\",\"Raegan\",\"Rafael\",\"Rafaela\",\"Raheem\",\"Rahsaan\",\"Rahul\",\"Raina\",\"Raleigh\",\"Ralph\",\"Ramiro\",\"Ramon\",\"Ramona\",\"Randal\",\"Randall\",\"Randi\",\"Randy\",\"Ransom\",\"Raoul\",\"Raphael\",\"Raphaelle\",\"Raquel\",\"Rashad\",\"Rashawn\",\"Rasheed\",\"Raul\",\"Raven\",\"Ray\",\"Raymond\",\"Raymundo\",\"Reagan\",\"Reanna\",\"Reba\",\"Rebeca\",\"Rebecca\",\"Rebeka\",\"Rebekah\",\"Reece\",\"Reed\",\"Reese\",\"Regan\",\"Reggie\",\"Reginald\",\"Reid\",\"Reilly\",\"Reina\",\"Reinhold\",\"Remington\",\"Rene\",\"Renee\",\"Ressie\",\"Reta\",\"Retha\",\"Retta\",\"Reuben\",\"Reva\",\"Rex\",\"Rey\",\"Reyes\",\"Reymundo\",\"Reyna\",\"Reynold\",\"Rhea\",\"Rhett\",\"Rhianna\",\"Rhiannon\",\"Rhoda\",\"Ricardo\",\"Richard\",\"Richie\",\"Richmond\",\"Rick\",\"Rickey\",\"Rickie\",\"Ricky\",\"Rico\",\"Rigoberto\",\"Riley\",\"Rita\",\"River\",\"Robb\",\"Robbie\",\"Robert\",\"Roberta\",\"Roberto\",\"Robin\",\"Robyn\",\"Rocio\",\"Rocky\",\"Rod\",\"Roderick\",\"Rodger\",\"Rodolfo\",\"Rodrick\",\"Rodrigo\",\"Roel\",\"Rogelio\",\"Roger\",\"Rogers\",\"Rolando\",\"Rollin\",\"Roma\",\"Romaine\",\"Roman\",\"Ron\",\"Ronaldo\",\"Ronny\",\"Roosevelt\",\"Rory\",\"Rosa\",\"Rosalee\",\"Rosalia\",\"Rosalind\",\"Rosalinda\",\"Rosalyn\",\"Rosamond\",\"Rosanna\",\"Rosario\",\"Roscoe\",\"Rose\",\"Rosella\",\"Roselyn\",\"Rosemarie\",\"Rosemary\",\"Rosendo\",\"Rosetta\",\"Rosie\",\"Rosina\",\"Roslyn\",\"Ross\",\"Rossie\",\"Rowan\",\"Rowena\",\"Rowland\",\"Roxane\",\"Roxanne\",\"Roy\",\"Royal\",\"Royce\",\"Rozella\",\"Ruben\",\"Rubie\",\"Ruby\",\"Rubye\",\"Rudolph\",\"Rudy\",\"Rupert\",\"Russ\",\"Russel\",\"Russell\",\"Rusty\",\"Ruth\",\"Ruthe\",\"Ruthie\",\"Ryan\",\"Ryann\",\"Ryder\",\"Rylan\",\"Rylee\",\"Ryleigh\",\"Ryley\",\"Sabina\",\"Sabrina\",\"Sabryna\",\"Sadie\",\"Sadye\",\"Sage\",\"Saige\",\"Sallie\",\"Sally\",\"Salma\",\"Salvador\",\"Salvatore\",\"Sam\",\"Samanta\",\"Samantha\",\"Samara\",\"Samir\",\"Sammie\",\"Sammy\",\"Samson\",\"Sandra\",\"Sandrine\",\"Sandy\",\"Sanford\",\"Santa\",\"Santiago\",\"Santina\",\"Santino\",\"Santos\",\"Sarah\",\"Sarai\",\"Sarina\",\"Sasha\",\"Saul\",\"Savanah\",\"Savanna\",\"Savannah\",\"Savion\",\"Scarlett\",\"Schuyler\",\"Scot\",\"Scottie\",\"Scotty\",\"Seamus\",\"Sean\",\"Sebastian\",\"Sedrick\",\"Selena\",\"Selina\",\"Selmer\",\"Serena\",\"Serenity\",\"Seth\",\"Shad\",\"Shaina\",\"Shakira\",\"Shana\",\"Shane\",\"Shanel\",\"Shanelle\",\"Shania\",\"Shanie\",\"Shaniya\",\"Shanna\",\"Shannon\",\"Shanny\",\"Shanon\",\"Shany\",\"Sharon\",\"Shaun\",\"Shawn\",\"Shawna\",\"Shaylee\",\"Shayna\",\"Shayne\",\"Shea\",\"Sheila\",\"Sheldon\",\"Shemar\",\"Sheridan\",\"Sherman\",\"Sherwood\",\"Shirley\",\"Shyann\",\"Shyanne\",\"Sibyl\",\"Sid\",\"Sidney\",\"Sienna\",\"Sierra\",\"Sigmund\",\"Sigrid\",\"Sigurd\",\"Silas\",\"Sim\",\"Simeon\",\"Simone\",\"Sincere\",\"Sister\",\"Skye\",\"Skyla\",\"Skylar\",\"Sofia\",\"Soledad\",\"Solon\",\"Sonia\",\"Sonny\",\"Sonya\",\"Sophia\",\"Sophie\",\"Spencer\",\"Stacey\",\"Stacy\",\"Stan\",\"Stanford\",\"Stanley\",\"Stanton\",\"Stefan\",\"Stefanie\",\"Stella\",\"Stephan\",\"Stephania\",\"Stephanie\",\"Stephany\",\"Stephen\",\"Stephon\",\"Sterling\",\"Steve\",\"Stevie\",\"Stewart\",\"Stone\",\"Stuart\",\"Summer\",\"Sunny\",\"Susan\",\"Susana\",\"Susanna\",\"Susie\",\"Suzanne\",\"Sven\",\"Syble\",\"Sydnee\",\"Sydney\",\"Sydni\",\"Sydnie\",\"Sylvan\",\"Sylvester\",\"Sylvia\",\"Tabitha\",\"Tad\",\"Talia\",\"Talon\",\"Tamara\",\"Tamia\",\"Tania\",\"Tanner\",\"Tanya\",\"Tara\",\"Taryn\",\"Tate\",\"Tatum\",\"Tatyana\",\"Taurean\",\"Tavares\",\"Taya\",\"Taylor\",\"Teagan\",\"Ted\",\"Telly\",\"Terence\",\"Teresa\",\"Terrance\",\"Terrell\",\"Terrence\",\"Terrill\",\"Terry\",\"Tess\",\"Tessie\",\"Tevin\",\"Thad\",\"Thaddeus\",\"Thalia\",\"Thea\",\"Thelma\",\"Theo\",\"Theodora\",\"Theodore\",\"Theresa\",\"Therese\",\"Theresia\",\"Theron\",\"Thomas\",\"Thora\",\"Thurman\",\"Tia\",\"Tiana\",\"Tianna\",\"Tiara\",\"Tierra\",\"Tiffany\",\"Tillman\",\"Timmothy\",\"Timmy\",\"Timothy\",\"Tina\",\"Tito\",\"Titus\",\"Tobin\",\"Toby\",\"Tod\",\"Tom\",\"Tomas\",\"Tomasa\",\"Tommie\",\"Toney\",\"Toni\",\"Tony\",\"Torey\",\"Torrance\",\"Torrey\",\"Toy\",\"Trace\",\"Tracey\",\"Tracy\",\"Travis\",\"Travon\",\"Tre\",\"Tremaine\",\"Tremayne\",\"Trent\",\"Trenton\",\"Tressa\",\"Tressie\",\"Treva\",\"Trever\",\"Trevion\",\"Trevor\",\"Trey\",\"Trinity\",\"Trisha\",\"Tristian\",\"Tristin\",\"Triston\",\"Troy\",\"Trudie\",\"Trycia\",\"Trystan\",\"Turner\",\"Twila\",\"Tyler\",\"Tyra\",\"Tyree\",\"Tyreek\",\"Tyrel\",\"Tyrell\",\"Tyrese\",\"Tyrique\",\"Tyshawn\",\"Tyson\",\"Ubaldo\",\"Ulices\",\"Ulises\",\"Una\",\"Unique\",\"Urban\",\"Uriah\",\"Uriel\",\"Ursula\",\"Vada\",\"Valentin\",\"Valentina\",\"Valentine\",\"Valerie\",\"Vallie\",\"Van\",\"Vance\",\"Vanessa\",\"Vaughn\",\"Veda\",\"Velda\",\"Vella\",\"Velma\",\"Velva\",\"Vena\",\"Verda\",\"Verdie\",\"Vergie\",\"Verla\",\"Verlie\",\"Vern\",\"Verna\",\"Verner\",\"Vernice\",\"Vernie\",\"Vernon\",\"Verona\",\"Veronica\",\"Vesta\",\"Vicenta\",\"Vicente\",\"Vickie\",\"Vicky\",\"Victor\",\"Victoria\",\"Vida\",\"Vidal\",\"Vilma\",\"Vince\",\"Vincent\",\"Vincenza\",\"Vincenzo\",\"Vinnie\",\"Viola\",\"Violet\",\"Violette\",\"Virgie\",\"Virgil\",\"Virginia\",\"Virginie\",\"Vita\",\"Vito\",\"Viva\",\"Vivian\",\"Viviane\",\"Vivianne\",\"Vivien\",\"Vivienne\",\"Vladimir\",\"Wade\",\"Waino\",\"Waldo\",\"Walker\",\"Wallace\",\"Walter\",\"Walton\",\"Wanda\",\"Ward\",\"Warren\",\"Watson\",\"Wava\",\"Waylon\",\"Wayne\",\"Webster\",\"Weldon\",\"Wellington\",\"Wendell\",\"Wendy\",\"Werner\",\"Westley\",\"Weston\",\"Whitney\",\"Wilber\",\"Wilbert\",\"Wilburn\",\"Wiley\",\"Wilford\",\"Wilfred\",\"Wilfredo\",\"Wilfrid\",\"Wilhelm\",\"Wilhelmine\",\"Will\",\"Willa\",\"Willard\",\"William\",\"Willie\",\"Willis\",\"Willow\",\"Willy\",\"Wilma\",\"Wilmer\",\"Wilson\",\"Wilton\",\"Winfield\",\"Winifred\",\"Winnifred\",\"Winona\",\"Winston\",\"Woodrow\",\"Wyatt\",\"Wyman\",\"Xander\",\"Xavier\",\"Xzavier\",\"Yadira\",\"Yasmeen\",\"Yasmin\",\"Yasmine\",\"Yazmin\",\"Yesenia\",\"Yessenia\",\"Yolanda\",\"Yoshiko\",\"Yvette\",\"Yvonne\",\"Zachariah\",\"Zachary\",\"Zachery\",\"Zack\",\"Zackary\",\"Zackery\",\"Zakary\",\"Zander\",\"Zane\",\"Zaria\",\"Zechariah\",\"Zelda\",\"Zella\",\"Zelma\",\"Zena\",\"Zetta\",\"Zion\",\"Zita\",\"Zoe\",\"Zoey\",\"Zoie\",\"Zoila\",\"Zola\",\"Zora\",\"Zula\"];e.exports={generateUsername:function(){var e=r.randomElement(i),t=r.randomAlphanumStr(3);return\"\".concat(e,\"-\").concat(t)}}},function(e,t,n){\"use strict\";(function(e){n.d(t,\"a\",function(){return f});var r=n(3),i=n(19),o=n(23),a=n(9);function s(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=[],r=!0,i=!1,o=void 0;try{for(var a,s=e[Symbol.iterator]();!(r=(a=s.next()).done)&&(n.push(a.value),!t||n.length!==t);r=!0);}catch(e){i=!0,o=e}finally{try{r||null==s.return||s.return()}finally{if(i)throw o}}return n}(e,t)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance\")}()}var c=n(10),u=n(4).getLogger(e),l={};function d(e,t){return!t||t<=0||!e||e<=0?0:Math.round(e/t*100)}function p(){this.loss={},this.bitrate={download:0,upload:0},this.resolution={},this.framerate=0}function h(){this.bandwidth={},this.bitrate={},this.packetLoss=null,this.transport=[]}function f(e,t,n,i){this._browserType=r.a.getName();var o=l[this._browserType];if(!o)throw\"The browser type '\".concat(this._browserType,\"' isn't supported!\");this._usesPromiseGetStats=r.a.isSafariWithWebrtc()||r.a.isFirefox(),this._getStatValue=this._usesPromiseGetStats?this._defineNewGetStatValueMethod(o):this._defineGetStatValueMethod(o),this.peerconnection=e,this.baselineAudioLevelsReport=null,this.currentAudioLevelsReport=null,this.currentStatsReport=null,this.previousStatsReport=null,this.audioLevelsIntervalId=null,this.eventEmitter=i,this.conferenceStats=new h,this.audioLevelsIntervalMilis=t,this.statsIntervalId=null,this.statsIntervalMilis=n,this.ssrc2stats=new Map}l[i.b.FIREFOX]={ssrc:\"ssrc\",packetsReceived:\"packetsReceived\",packetsLost:\"packetsLost\",packetsSent:\"packetsSent\",bytesReceived:\"bytesReceived\",bytesSent:\"bytesSent\",framerateMean:\"framerateMean\",ip:\"ipAddress\",port:\"portNumber\",protocol:\"transport\"},l[i.b.CHROME]={receiveBandwidth:\"googAvailableReceiveBandwidth\",sendBandwidth:\"googAvailableSendBandwidth\",remoteAddress:\"googRemoteAddress\",transportType:\"googTransportType\",localAddress:\"googLocalAddress\",activeConnection:\"googActiveConnection\",ssrc:\"ssrc\",packetsReceived:\"packetsReceived\",packetsSent:\"packetsSent\",packetsLost:\"packetsLost\",bytesReceived:\"bytesReceived\",bytesSent:\"bytesSent\",googFrameHeightReceived:\"googFrameHeightReceived\",googFrameWidthReceived:\"googFrameWidthReceived\",googFrameHeightSent:\"googFrameHeightSent\",googFrameWidthSent:\"googFrameWidthSent\",googFrameRateReceived:\"googFrameRateReceived\",googFrameRateSent:\"googFrameRateSent\",audioInputLevel:\"audioInputLevel\",audioOutputLevel:\"audioOutputLevel\",currentRoundTripTime:\"googRtt\",remoteCandidateType:\"googRemoteCandidateType\",localCandidateType:\"googLocalCandidateType\",ip:\"ip\",port:\"port\",protocol:\"protocol\"},l[i.b.EDGE]={sendBandwidth:\"googAvailableSendBandwidth\",remoteAddress:\"remoteAddress\",transportType:\"protocol\",localAddress:\"localAddress\",activeConnection:\"activeConnection\",ssrc:\"ssrc\",packetsReceived:\"packetsReceived\",packetsSent:\"packetsSent\",packetsLost:\"packetsLost\",bytesReceived:\"bytesReceived\",bytesSent:\"bytesSent\",googFrameHeightReceived:\"frameHeight\",googFrameWidthReceived:\"frameWidth\",googFrameHeightSent:\"frameHeight\",googFrameWidthSent:\"frameWidth\",googFrameRateReceived:\"framesPerSecond\",googFrameRateSent:\"framesPerSecond\",audioInputLevel:\"audioLevel\",audioOutputLevel:\"audioLevel\",currentRoundTripTime:\"roundTripTime\"},l[i.b.OPERA]=l[i.b.CHROME],l[i.b.NWJS]=l[i.b.CHROME],l[i.b.ELECTRON]=l[i.b.CHROME],l[i.b.SAFARI]=l[i.b.CHROME],l[i.b.REACT_NATIVE]=l[i.b.CHROME],p.prototype.setLoss=function(e){this.loss=e||{}},p.prototype.setResolution=function(e){this.resolution=e||{}},p.prototype.addBitrate=function(e){this.bitrate.download+=e.download,this.bitrate.upload+=e.upload},p.prototype.resetBitrate=function(){this.bitrate.download=0,this.bitrate.upload=0},p.prototype.setFramerate=function(e){this.framerate=e||0},f.prototype.stop=function(){this.audioLevelsIntervalId&&(clearInterval(this.audioLevelsIntervalId),this.audioLevelsIntervalId=null),this.statsIntervalId&&(clearInterval(this.statsIntervalId),this.statsIntervalId=null)},f.prototype.errorCallback=function(e){c.callErrorHandler(e),u.error(\"Get stats error\",e),this.stop()},f.prototype.start=function(e){var t=this,n=this;e&&(this.audioLevelsIntervalId=setInterval(function(){n.peerconnection.getStats(function(e){var r=null;r=e&&e.result&&\"function\"==typeof e.result?e.result():e,n.currentAudioLevelsReport=r,t._usesPromiseGetStats?n.processNewAudioLevelReport():n.processAudioLevelReport(),n.baselineAudioLevelsReport=n.currentAudioLevelsReport},function(e){return n.errorCallback(e)})},n.audioLevelsIntervalMilis)),r.a.supportsRtpStatistics()&&(this.statsIntervalId=setInterval(function(){n.peerconnection.getStats(function(e){var r=null;r=e&&e.result&&\"function\"==typeof e.result?e.result():e,n.currentStatsReport=r;try{t._usesPromiseGetStats?n.processNewStatsReport():n.processStatsReport()}catch(e){c.callErrorHandler(e),u.error(\"Unsupported key:\".concat(e),e)}n.previousStatsReport=n.currentStatsReport},function(e){return n.errorCallback(e)})},n.statsIntervalMilis))},f.prototype._defineGetStatValueMethod=function(e){var t;switch(this._browserType){case i.b.CHROME:case i.b.OPERA:case i.b.NWJS:case i.b.ELECTRON:t=function(e,t){return e.stat(t)};break;case i.b.REACT_NATIVE:t=function(e,t){var n;return e.values.some(function(e){return!!e.hasOwnProperty(t)&&(n=e[t],!0)}),n};break;case i.b.EDGE:t=function(e,t){return e[t]};break;default:t=function(e,t){return e[t]}}return function(n,r){return t(n,function(t){var n=e[t];if(n)return n;throw\"The property '\".concat(t,\"' isn't supported!\")}(r))}},f.prototype.getNonNegativeStat=function(e,t){var n=this._getStatValue(e,t);return\"number\"!=typeof n&&(n=Number(n)),isNaN(n)?0:Math.max(0,n)},f.prototype.processStatsReport=function(){var e=this;if(this.previousStatsReport){var t=this._getStatValue,n={};for(var i in this.currentStatsReport)if(this.currentStatsReport.hasOwnProperty(i)){var a=this.currentStatsReport[i];if(a){try{var s=t(a,\"receiveBandwidth\"),c=t(a,\"sendBandwidth\");(s||c)&&(this.conferenceStats.bandwidth={download:Math.round(s/1e3),upload:Math.round(c/1e3)})}catch(e){}if(\"googCandidatePair\"===a.type)if(\"continue\"===function(){var n=void 0,r=void 0,i=void 0,o=void 0,s=void 0,c=void 0,u=void 0;try{if(!(n=t(a,\"activeConnection\")))return\"continue\";r=t(a,\"remoteAddress\"),u=t(a,\"transportType\"),o=t(a,\"localAddress\"),i=t(a,\"localCandidateType\"),s=t(a,\"remoteCandidateType\"),c=e.getNonNegativeStat(a,\"currentRoundTripTime\")}catch(e){}if(!r||!u||!o||\"true\"!==n)return\"continue\";var l=e.conferenceStats.transport;return l.some(function(e){return e.ip===r&&e.type===u&&e.localip===o})||l.push({ip:r,type:u,localip:o,p2p:e.peerconnection.isP2P,localCandidateType:i,remoteCandidateType:s,rtt:c}),\"continue\"}())continue;if(\"candidatepair\"===a.type){if(\"succeeded\"!==a.state||!a.selected)continue;var l=this.currentStatsReport[a.localCandidateId],d=this.currentStatsReport[a.remoteCandidateId];this.conferenceStats.transport.push({ip:\"\".concat(d.ipAddress,\":\").concat(d.portNumber),type:l.transport,localip:\"\".concat(l.ipAddress,\":\").concat(l.portNumber),p2p:this.peerconnection.isP2P,localCandidateType:l.candidateType,remoteCandidateType:d.candidateType})}if(\"transportdiagnostics\"===a.msType&&this.conferenceStats.transport.push({ip:a.remoteAddress,type:a.protocol,localip:a.localAddress,p2p:this.peerconnection.isP2P}),(\"ssrc\"===a.type||\"outboundrtp\"===a.type||\"inboundrtp\"===a.type||\"track\"===a.type)&&(!r.a.isEdge()||\"inboundrtp\"!==a.type&&\"outboundrtp\"!==a.type)){var h=this.previousStatsReport[i],f=this.getNonNegativeStat(a,\"ssrc\");if(\"track\"===a.type&&Array.isArray(a.ssrcIds)&&(f=Number(a.ssrcIds[0])),h&&f&&(r.a.isEdge()||!0!==a.isRemote&&!0!==a.remoteSource)){var m=this.ssrc2stats.get(f);m||(m=new p,this.ssrc2stats.set(f,m));var v=!0,y=\"packetsReceived\",g=t(a,y);null!=g&&\"\"!==g||(v=!1,null==(g=t(a,y=\"packetsSent\"))&&u.warn(\"No packetsReceived nor packetsSent stat found\")),(!g||g<0)&&(g=0);var _=this.getNonNegativeStat(h,y),S=Math.max(0,g-_),b=this.getNonNegativeStat(a,\"packetsLost\"),E=this.getNonNegativeStat(h,\"packetsLost\"),T=Math.max(0,b-E);m.setLoss({packetsTotal:S+T,packetsLost:T,isDownloadStream:v});var C=this.getNonNegativeStat(a,\"bytesReceived\"),R=this.getNonNegativeStat(h,\"bytesReceived\"),w=Math.max(0,C-R),A=0,k=t(a,\"bytesSent\");\"number\"!=typeof k&&\"string\"!=typeof k||(k=Number(k),isNaN(k)||(n[f]=k,k>0&&(A=k-t(h,\"bytesSent\")))),A=Math.max(0,A);var O=a.timestamp-h.timestamp,I=0,P=0;O>0&&(I=Math.round(8*w/O),P=Math.round(8*A/O)),m.addBitrate({download:I,upload:P});var D={height:null,width:null};try{var N=void 0,L=void 0;(N=t(a,\"googFrameHeightReceived\"))&&(L=t(a,\"googFrameWidthReceived\"))?(D.height=N,D.width=L):(N=t(a,\"googFrameHeightSent\"))&&(L=t(a,\"googFrameWidthSent\"))&&(D.height=N,D.width=L)}catch(e){}var M=void 0;try{M=t(a,\"googFrameRateReceived\")||t(a,\"googFrameRateSent\")||0}catch(e){try{M=this.getNonNegativeStat(a,\"framerateMean\")}catch(e){}}m.setFramerate(Math.round(M||0)),D.height&&D.width?m.setResolution(D):m.setResolution(null)}}}}this.eventEmitter.emit(o.c,this.peerconnection,n),this._processAndEmitReport()}},f.prototype._processAndEmitReport=function(){var e={download:0,upload:0},t={download:0,upload:0},n=0,r=0,i={},a={},c=0,l=0,p=0,h=0,f=!0,m=!1,v=void 0;try{for(var y,g=this.ssrc2stats[Symbol.iterator]();!(f=(y=g.next()).done);f=!0){var _=s(y.value,2),S=_[0],b=_[1],E=b.loss,T=E.isDownloadStream?\"download\":\"upload\";e[T]+=E.packetsTotal,t[T]+=E.packetsLost,n+=b.bitrate.download,r+=b.bitrate.upload;var C=this.peerconnection.getTrackBySSRC(S);if(C){C.isAudioTrack()?(c+=b.bitrate.download,l+=b.bitrate.upload):(p+=b.bitrate.download,h+=b.bitrate.upload);var R=C.getParticipantId();if(R){var w=b.resolution;if(w.width&&w.height&&-1!==w.width&&-1!==w.height){var A=i[R]||{};A[S]=w,i[R]=A}if(0!==b.framerate){var k=a[R]||{};k[S]=b.framerate,a[R]=k}}else u.error(\"No participant ID returned by \".concat(C))}else this.peerconnection.isP2P&&u.error(\"JitsiTrack not found for SSRC \".concat(S)+\" in \".concat(this.peerconnection));b.resetBitrate()}}catch(e){m=!0,v=e}finally{try{f||null==g.return||g.return()}finally{if(m)throw v}}this.conferenceStats.bitrate={upload:r,download:n},this.conferenceStats.bitrate.audio={upload:l,download:c},this.conferenceStats.bitrate.video={upload:h,download:p},this.conferenceStats.packetLoss={total:d(t.download+t.upload,e.download+e.upload),download:d(t.download,e.download),upload:d(t.upload,e.upload)},this.eventEmitter.emit(o.d,this.peerconnection,{bandwidth:this.conferenceStats.bandwidth,bitrate:this.conferenceStats.bitrate,packetLoss:this.conferenceStats.packetLoss,resolution:i,framerate:a,transport:this.conferenceStats.transport}),this.conferenceStats.transport=[]},f.prototype.processAudioLevelReport=function(){if(this.baselineAudioLevelsReport){var e=this._getStatValue;for(var t in this.currentAudioLevelsReport)if(this.currentAudioLevelsReport.hasOwnProperty(t)){var n=this.currentAudioLevelsReport[t];if(\"ssrc\"===n.type||\"track\"===n.type){var i=this.baselineAudioLevelsReport[t],a=this.getNonNegativeStat(n,\"ssrc\");if(!a&&Array.isArray(n.ssrcIds)&&(a=Number(n.ssrcIds[0])),i)if(a){var s=void 0;try{s=e(n,\"audioInputLevel\")||e(n,\"audioOutputLevel\")}catch(e){return u.warn(\"Audio Levels are not available in the statistics.\"),void clearInterval(this.audioLevelsIntervalId)}if(s){var c=void 0;c=\"ssrc\"===n.type?!e(n,\"packetsReceived\"):!n.remoteSource,r.a.isEdge()?s=s<0?Math.pow(10,s/20):0:s/=32767,this.eventEmitter.emit(o.a,this.peerconnection,a,s,c)}}else Date.now()-n.timestamp<3e3&&u.warn(\"No ssrc: \");else u.warn(\"\".concat(a,\" not enough data\"))}}}},f.prototype._defineNewGetStatValueMethod=function(e){return function(t,n){return t[function(t){var n=e[t];if(n)return n;throw\"The property '\".concat(t,\"' isn't supported!\")}(n)]}},f.prototype.getNonNegativeValue=function(e){var t=e;return\"number\"!=typeof t&&(t=Number(t)),isNaN(t)?0:Math.max(0,t)},f.prototype._calculateBitrate=function(e,t,n){var r=this.getNonNegativeValue(e[n]),i=this.getNonNegativeValue(t[n]),o=Math.max(0,r-i),a=e.timestamp-t.timestamp,s=0;return a>0&&(s=Math.round(8*o/a)),s},f.prototype.processNewStatsReport=function(){var e=this;if(this.previousStatsReport){var t=this._getStatValue,n={};this.currentStatsReport.forEach(function(r){if(\"candidate-pair\"===r.type&&r.nominated&&\"succeeded\"===r.state){var i=r.availableIncomingBitrate,o=r.availableOutgoingBitrate;(i||o)&&(e.conferenceStats.bandwidth={download:Math.round(i/1e3),upload:Math.round(o/1e3)});var a=e.currentStatsReport.get(r.remoteCandidateId),s=e.currentStatsReport.get(r.localCandidateId);if(a&&s){var c=t(a,\"ip\"),u=t(a,\"port\"),l=\"\".concat(c,\":\").concat(u),d=t(s,\"ip\"),h=t(s,\"port\"),f=\"\".concat(d,\":\").concat(h),m=t(a,\"protocol\"),v=e.conferenceStats.transport;v.some(function(e){return e.ip===l&&e.type===m&&e.localip===f})||v.push({ip:l,type:m,localIp:f,p2p:e.peerconnection.isP2P,localCandidateType:s.candidateType,remoteCandidateType:a.candidateType,networkType:s.networkType,rtt:1e3*r.currentRoundTripTime})}}else if(\"inbound-rtp\"===r.type||\"outbound-rtp\"===r.type){var y=e.previousStatsReport.get(r.id),g=e.getNonNegativeValue(r.ssrc);if(!y||!g)return;var _=e.ssrc2stats.get(g);_||(_=new p,e.ssrc2stats.set(g,_));var S=!0,b=\"packetsReceived\";\"outbound-rtp\"===r.type&&(S=!1,b=\"packetsSent\");var E=r[b];(!E||E<0)&&(E=0);var T=e.getNonNegativeValue(y[b]),C=Math.max(0,E-T),R=e.getNonNegativeValue(r.packetsLost),w=e.getNonNegativeValue(y.packetsLost),A=Math.max(0,R-w);_.setLoss({packetsTotal:C+A,packetsLost:A,isDownloadStream:S}),\"inbound-rtp\"===r.type?_.addBitrate({download:e._calculateBitrate(r,y,\"bytesReceived\"),upload:0}):(n[g]=e.getNonNegativeValue(r.bytesSent),_.addBitrate({download:0,upload:e._calculateBitrate(r,y,\"bytesSent\")}));var k=r.framerateMean;k&&_.setFramerate(Math.round(k||0))}else if(\"track\"===r.type){var O={height:r.frameHeight,width:r.frameWidth},I=r.framesPerSecond;if(!I){var P=e.previousStatsReport.get(r.id);if(P){var D=r.timestamp-P.timestamp;if(D>0&&r.framesSent)I=(r.framesSent-P.framesSent)/D*1e3}if(!I)return}var N=r.trackIdentifier,L=e.peerconnection.getSsrcByTrackId(N),M=e.ssrc2stats.get(L);M||(M=new p,e.ssrc2stats.set(L,M)),M.setFramerate(Math.round(I||0)),O.height&&O.width?M.setResolution(O):M.setResolution(null)}}),this.eventEmitter.emit(o.c,this.peerconnection,n),this._processAndEmitReport()}},f.prototype.processNewAudioLevelReport=function(){var e=this;this.baselineAudioLevelsReport&&this.currentAudioLevelsReport.forEach(function(t){if(\"track\"===t.type){var n=t.audioLevel;if(n){var r=t.trackIdentifier,i=e.peerconnection.getSsrcByTrackId(r);if(i){var s=i===e.peerconnection.getLocalSSRC(e.peerconnection.getLocalTracks(a.a));e.eventEmitter.emit(o.a,e.peerconnection,i,n,s)}}}})}}).call(this,\"modules/statistics/RTPStatsCollector.js\")},function(e,t,n){\"use strict\";n.d(t,\"a\",function(){return c});var r=n(1),i=n(2),o=n(45),a=n(9);function s(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var c=function(){function e(t,n,i,a,s,c){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this._jid=t,this._id=r.Strophe.getResourceFromJid(t),this._conference=n,this._displayName=i,this._supportsDTMF=!1,this._tracks=[],this._role=\"none\",this._status=c,this._hidden=a,this._statsID=s,this._connectionStatus=o.a.ACTIVE,this._properties={}}var t,n,c;return t=e,(n=[{key:\"getConference\",value:function(){return this._conference}},{key:\"getProperty\",value:function(e){return this._properties[e]}},{key:\"hasAnyVideoTrackWebRTCMuted\",value:function(){return this.getTracks().some(function(e){return e.getType()===a.b&&e.isWebRTCTrackMuted()})}},{key:\"_setConnectionStatus\",value:function(e){this._connectionStatus=e}},{key:\"getConnectionStatus\",value:function(){return this._connectionStatus}},{key:\"setProperty\",value:function(e,t){var n=this._properties[e];t!==n&&(this._properties[e]=t,this._conference.eventEmitter.emit(i.PARTICIPANT_PROPERTY_CHANGED,this,e,n,t))}},{key:\"getTracks\",value:function(){return this._tracks.slice()}},{key:\"getTracksByMediaType\",value:function(e){return this.getTracks().filter(function(t){return t.getType()===e})}},{key:\"getId\",value:function(){return this._id}},{key:\"getJid\",value:function(){return this._jid}},{key:\"getDisplayName\",value:function(){return this._displayName}},{key:\"getStatsID\",value:function(){return this._statsID}},{key:\"getStatus\",value:function(){return this._status}},{key:\"isModerator\",value:function(){return\"moderator\"===this._role}},{key:\"isHidden\",value:function(){return this._hidden}},{key:\"isAudioMuted\",value:function(){return this._isMediaTypeMuted(a.a)}},{key:\"_isMediaTypeMuted\",value:function(e){return this.getTracks().reduce(function(t,n){return t&&(n.getType()!==e||n.isMuted())},!0)}},{key:\"isVideoMuted\",value:function(){return this._isMediaTypeMuted(a.b)}},{key:\"getRole\",value:function(){return this._role}},{key:\"supportsDTMF\",value:function(){return this._supportsDTMF}},{key:\"getFeatures\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:5e3;return this._conference.xmpp.caps.getFeatures(this._jid,e)}},{key:\"getBotType\",value:function(){return this._botType}}])&&s(t.prototype,n),c&&s(t,c),e}()},function(e,t,n){\"use strict\";n.d(t,\"a\",function(){return o});var r=n(22),i=n(38);function o(e){var t,n=this,o=e.id,a=e.password,s=e.onLoginSuccessful,c=e.roomPassword,u=!1,l=new i.c(this.connection.options),d=new Promise(function(e,i){t=i,l.addListener(r.CONNECTION_DISCONNECTED,function(){l=void 0}),l.addListener(r.CONNECTION_ESTABLISHED,function(){u||(s&&s(),l.createRoom(n.options.name,n.options.config).moderator.authenticate().then(function(){l&&l.disconnect(),u||(n.join(c),e())}).catch(function(e){var t=e.error,n=e.message;l.disconnect(),i({authenticationError:t,message:n})}))}),l.addListener(r.CONNECTION_FAILED,function(e,t,n){i({connectionError:e,credentials:n,message:t}),l=void 0}),u||l.connect(o,a)});return d.cancel=function(){u=!0,t({}),l&&l.disconnect()},d}},function(e,t,n){\"use strict\";(function(e){var r=n(4),i=n(1),o=n(83),a=n(36),s=n(0),c=n.n(s);function u(e){return(u=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function l(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function d(e,t){return!t||\"object\"!==u(t)&&\"function\"!=typeof t?function(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}(e):t}function p(e,t,n){return(p=\"undefined\"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=h(e)););return e}(e,t);if(r){var i=Object.getOwnPropertyDescriptor(r,t);return i.get?i.get.call(n):i.value}})(e,t,n||e)}function h(e){return(h=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function f(e,t){return(f=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var m=Object(r.getLogger)(e),v=function(e){function t(e){var n;return function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t),(n=d(this,h(t).call(this))).xmpp=e,n.rooms={},n}var n,r,s;return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&f(e,t)}(t,a[\"a\"]),n=t,(r=[{key:\"init\",value:function(e){p(h(t.prototype),\"init\",this).call(this,e),this.connection.addHandler(this.onPresence.bind(this),null,\"presence\",null,null,null,null),this.connection.addHandler(this.onPresenceUnavailable.bind(this),null,\"presence\",\"unavailable\",null),this.connection.addHandler(this.onPresenceError.bind(this),null,\"presence\",\"error\",null),this.connection.addHandler(this.onMessage.bind(this),null,\"message\",null,null),this.connection.addHandler(this.onMute.bind(this),\"http://jitsi.org/jitmeet/audio\",\"iq\",\"set\",null,null)}},{key:\"createRoom\",value:function(e,t,n){var r=i.Strophe.getBareJidFromJid(e);if(this.rooms[r]){var a=\"You are already in the room!\";throw m.error(a),new Error(a)}return this.rooms[r]=new o.a(this.connection,e,t,this.xmpp,n),this.eventEmitter.emit(c.a.EMUC_ROOM_ADDED,this.rooms[r]),this.rooms[r]}},{key:\"doLeave\",value:function(e){this.eventEmitter.emit(c.a.EMUC_ROOM_REMOVED,this.rooms[e]),delete this.rooms[e]}},{key:\"onPresence\",value:function(e){var t=e.getAttribute(\"from\");if(e.getAttribute(\"type\"))return!0;var n=this.rooms[i.Strophe.getBareJidFromJid(t)];return n?($(e).find('>x[xmlns=\"http://jabber.org/protocol/muc#user\"]>status[code=\"201\"]').length&&n.createNonAnonymousRoom(),n.onPresence(e),!0):void 0}},{key:\"onPresenceUnavailable\",value:function(e){var t=e.getAttribute(\"from\"),n=this.rooms[i.Strophe.getBareJidFromJid(t)];if(n)return n.onPresenceUnavailable(e,t),!0}},{key:\"onPresenceError\",value:function(e){var t=e.getAttribute(\"from\"),n=this.rooms[i.Strophe.getBareJidFromJid(t)];if(n)return n.onPresenceError(e,t),!0}},{key:\"onMessage\",value:function(e){var t=e.getAttribute(\"from\"),n=this.rooms[i.Strophe.getBareJidFromJid(t)];if(n)return n.onMessage(e,t),!0}},{key:\"onMute\",value:function(e){var t=e.getAttribute(\"from\"),n=this.rooms[i.Strophe.getBareJidFromJid(t)];if(n)return n.onMute(e),!0}}])&&l(n.prototype,r),s&&l(n,s),t}();t.a=function(e){i.Strophe.addConnectionPlugin(\"emuc\",new v(e))}}).call(this,\"modules/xmpp/strophe.emuc.js\")},function(e,t,n){\"use strict\";(function(e){n.d(t,\"a\",function(){return E});var r=n(4),i=n(1),o=n(10),a=n.n(o),s=n(55),c=n(24),u=n(25),l=n(9),d=n(0),p=n.n(d),h=n(84);function f(e){return(f=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function m(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function v(e,t){return!t||\"object\"!==f(t)&&\"function\"!=typeof t?function(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}(e):t}function y(e){return(y=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function g(e,t){return(g=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var _=Object(r.getLogger)(e),S={packet2JSON:function(e,t){for(var n=Array.from(e.children),r=0;r<n.length;r++){for(var o=n[r],a={attributes:{},children:[],tagName:o.tagName},s=Array.from(o.attributes),c=0;c<s.length;c++){var u=s[c];a.attributes[u.name]=u.value}var l=i.Strophe.getText(o);l&&(a.value=i.Strophe.xmlunescape(l)),t.push(a),this.packet2JSON(o,a.children)}},json2packet:function(e,t){for(var n=0;n<e.length;n++){var r=e[n];r&&(t.c(r.tagName,r.attributes),r.value&&t.t(r.value),r.children&&this.json2packet(r.children,t),t.up())}}};function b(e,t){for(var n=[],r=0;r<e.length;r++)e[r].tagName===t&&n.push(e[r]);return n}var E=function(e){function t(e,n,r,o,a){var c;return function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t),(c=v(this,y(t).call(this))).xmpp=o,c.connection=e,c.roomjid=i.Strophe.getBareJidFromJid(n),c.myroomjid=n,c.password=r,_.info(\"Joined MUC as \".concat(c.myroomjid)),c.members={},c.presMap={},c.presHandlers={},c.joined=!1,c.role=null,c.focusMucJid=null,c.noBridgeAvailable=!1,c.options=a||{},c.moderator=new h.a(c.roomjid,c.xmpp,c.eventEmitter,{connection:c.xmpp.options,conference:c.options}),c.initPresenceMap(a),c.lastPresences={},c.phoneNumber=null,c.phonePin=null,c.connectionTimes={},c.participantPropertyListener=null,c.locked=!1,c.transcriptionStatus=s.OFF,c}var n,r,o;return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&g(e,t)}(t,c[\"a\"]),n=t,(r=[{key:\"initPresenceMap\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.presMap.to=this.myroomjid,this.presMap.xns=\"http://jabber.org/protocol/muc\",this.presMap.nodes=[],e.enableStatsID&&this.presMap.nodes.push({tagName:\"stats-id\",value:u.a.callStatsUserName}),this.addVideoInfoToPresence(!1),e.deploymentInfo&&e.deploymentInfo.userRegion&&this.presMap.nodes.push({tagName:\"region\",attributes:{id:e.deploymentInfo.userRegion,xmlns:\"http://jitsi.org/jitsi-meet\"}})}},{key:\"join\",value:function(e){var t=this;return this.password=e,new Promise(function(e){t.options.disableFocus&&_.info(\"Conference focus disabled\"),(t.options.disableFocus?Promise.resolve():t.moderator.allocateConferenceFocus()).then(function(){t.sendPresence(!0),e()})})}},{key:\"sendPresence\",value:function(e){var t=this.presMap.to;if(t&&(this.joined||e)){var n=Object(i.$pres)({to:t});e&&(n.c(\"x\",{xmlns:this.presMap.xns}),this.password&&n.c(\"password\").t(this.password).up(),n.up()),S.json2packet(this.presMap.nodes,n),this.connection.send(n),e&&this.connection.flush()}}},{key:\"doLeave\",value:function(){_.log(\"do leave\",this.myroomjid);var e=Object(i.$pres)({to:this.myroomjid,type:\"unavailable\"});this.presMap.length=0,this.connection.flush(),this.connection.send(e),this.connection.flush()}},{key:\"discoRoomInfo\",value:function(){var e=this,t=Object(i.$iq)({type:\"get\",to:this.roomjid}).c(\"query\",{xmlns:i.Strophe.NS.DISCO_INFO});this.connection.sendIQ(t,function(t){var n=1===$(t).find('>query>feature[var=\"muc_passwordprotected\"]').length;n!==e.locked&&(e.eventEmitter.emit(p.a.MUC_LOCK_CHANGED,n),e.locked=n)},function(e){a.a.callErrorHandler(e),_.error(\"Error getting room info: \",e)})}},{key:\"createNonAnonymousRoom\",value:function(){var e=Object(i.$iq)({type:\"get\",to:this.roomjid}).c(\"query\",{xmlns:\"http://jabber.org/protocol/muc#owner\"}).c(\"x\",{xmlns:\"jabber:x:data\",type:\"submit\"}),t=this;this.connection.sendIQ(e,function(e){if(!$(e).find('>query>x[xmlns=\"jabber:x:data\"]>field[var=\"muc#roomconfig_whois\"]').length){var n=\"non-anonymous rooms not supported\";return a.a.callErrorHandler(new Error(n)),void _.error(n)}var r=Object(i.$iq)({to:t.roomjid,type:\"set\"}).c(\"query\",{xmlns:\"http://jabber.org/protocol/muc#owner\"});r.c(\"x\",{xmlns:\"jabber:x:data\",type:\"submit\"}),r.c(\"field\",{var:\"FORM_TYPE\"}).c(\"value\").t(\"http://jabber.org/protocol/muc#roomconfig\").up().up(),r.c(\"field\",{var:\"muc#roomconfig_whois\"}).c(\"value\").t(\"anyone\").up().up(),t.connection.sendIQ(r)},function(e){a.a.callErrorHandler(e),_.error(\"Error getting room configuration form: \",e)})}},{key:\"onPresence\",value:function(e){var t=e.getAttribute(\"from\"),n={},r=e.getElementsByTagName(\"status\")[0];r&&(n.status=r.textContent||\"\");var o=!1,a=e.getElementsByTagNameNS(\"http://jabber.org/protocol/muc#user\",\"x\")[0],s=a&&a.getElementsByTagName(\"item\")[0];n.affiliation=s&&s.getAttribute(\"affiliation\"),n.role=s&&s.getAttribute(\"role\");var c=s&&s.getAttribute(\"jid\");n.jid=c,n.isFocus=c&&0===c.indexOf(\"\".concat(this.moderator.getFocusUserJid(),\"/\")),n.isHiddenDomain=c&&c.indexOf(\"@\")>0&&this.options.hiddenDomain===c.substring(c.indexOf(\"@\")+1,c.indexOf(\"/\")),this.eventEmitter.emit(p.a.PRESENCE_RECEIVED,{fromHiddenDomain:n.isHiddenDomain,presence:e});var u=e.querySelector(\"x\");u&&u.remove();var l=[];S.packet2JSON(e,l),this.lastPresences[t]=l;for(var d=function(e){var t={},n=e.children.find(function(e){return\"user\"===e.tagName});if(n){t.user={};for(var r=[\"id\",\"name\",\"avatar\"],i=function(){var e=r[o],i=n.children.find(function(t){return t.tagName===e});i&&(t.user[e]=i.value)},o=0;o<r.length;o++)i()}var a=e.children.find(function(e){return\"group\"===e.tagName});return a&&(t.group=a.value),t},h=0;h<l.length;h++){var f=l[h];switch(f.tagName){case\"bot\":var m=f.attributes;if(!m)break;var v=m.type;n.botType=v;break;case\"nick\":n.nick=f.value;break;case\"userId\":n.id=f.value;break;case\"stats-id\":n.statsID=f.value;break;case\"identity\":n.identity=d(f)}}if(t===this.myroomjid){var y=\"owner\"===n.affiliation?n.role:\"none\";if(this.role!==y&&(this.role=y,this.eventEmitter.emit(p.a.LOCAL_ROLE_CHANGED,this.role)),!this.joined){this.joined=!0;var g=this.connectionTimes[\"muc.joined\"]=window.performance.now();_.log(\"(TIME) MUC joined:\\t\",g),this.password&&(this.locked=!0),this.eventEmitter.emit(p.a.MUC_JOINED)}}else if(void 0===this.members[t])this.members[t]=n,_.log(\"entered\",t,n),o=void 0!==n.status,n.isFocus?this._initFocus(t,c):(this.eventEmitter.emit(p.a.MUC_MEMBER_JOINED,t,n.nick,n.role,n.isHiddenDomain,n.statsID,n.status,n.identity,n.botType),o=!1);else{var b=this.members[t];b.role!==n.role&&(b.role=n.role,this.eventEmitter.emit(p.a.MUC_ROLE_CHANGED,t,n.role)),b.botType!==n.botType&&(b.botType=n.botType,this.eventEmitter.emit(p.a.MUC_MEMBER_BOT_TYPE_CHANGED,t,n.botType)),n.isFocus&&(b.isFocus=!0,this._initFocus(t,c)),n.displayName&&(b.displayName=n.displayName),b.status!==n.status&&(o=!0,b.status=n.status)}for(var E=0;E<l.length;E++){var T=l[E];switch(T.tagName){case\"nick\":if(!n.isFocus){var C=this.xmpp.options.displayJids?i.Strophe.getResourceFromJid(t):n.nick;this.eventEmitter.emit(p.a.DISPLAY_NAME_CHANGED,t,C)}break;case\"bridgeNotAvailable\":n.isFocus&&!this.noBridgeAvailable&&(this.noBridgeAvailable=!0,this.eventEmitter.emit(p.a.BRIDGE_DOWN));break;case\"conference-properties\":if(n.isFocus){for(var R={},w=0;w<T.children.length;w++){var A=T.children[w].attributes;A&&A.key&&(R[A.key]=A.value)}this.eventEmitter.emit(p.a.CONFERENCE_PROPERTIES_CHANGED,R)}break;case\"transcription-status\":var k=T.attributes;if(!k)break;var O=k.status;O&&O!==this.transcriptionStatus&&(this.transcriptionStatus=O,this.eventEmitter.emit(p.a.TRANSCRIPTION_STATUS_CHANGED,O));break;case\"call-control\":var I=T.attributes;if(!I)break;this.phoneNumber=I.phone||null,this.phonePin=I.pin||null,this.eventEmitter.emit(p.a.PHONE_NUMBER_CHANGED);break;default:this.processNode(T,t)}}o&&this.eventEmitter.emit(p.a.PRESENCE_STATUS,t,n.status)}},{key:\"_initFocus\",value:function(e,t){this.focusMucJid=e,_.info(\"Ignore focus: \".concat(e,\", real JID: \").concat(t))}},{key:\"setParticipantPropertyListener\",value:function(e){this.participantPropertyListener=e}},{key:\"processNode\",value:function(e,t){try{var n=this.presHandlers[e.tagName];e.tagName.startsWith(\"jitsi_participant_\")&&(n=[this.participantPropertyListener]),n&&n.forEach(function(n){n(e,i.Strophe.getResourceFromJid(t),t)})}catch(t){a.a.callErrorHandler(t),_.error(\"Error processing:\".concat(e.tagName,\" node.\"),t)}}},{key:\"sendMessage\",value:function(e,t,n){var r=Object(i.$msg)({to:this.roomjid,type:\"groupchat\"});\"body\"===t?r.c(t,e).up():r.c(t,{xmlns:\"http://jitsi.org/jitmeet\"},e).up(),n&&r.c(\"nick\",{xmlns:\"http://jabber.org/protocol/nick\"}).t(n).up().up(),this.connection.send(r),this.eventEmitter.emit(p.a.SENDING_CHAT_MESSAGE,e)}},{key:\"sendPrivateMessage\",value:function(e,t,n,r){var o=Object(i.$msg)({to:\"\".concat(this.roomjid,\"/\").concat(e),type:\"chat\"});\"body\"===n?o.c(n,t).up():o.c(n,{xmlns:\"http://jitsi.org/jitmeet\"},t).up(),r&&o.c(\"nick\",{xmlns:\"http://jabber.org/protocol/nick\"}).t(r).up().up(),this.connection.send(o),this.eventEmitter.emit(p.a.SENDING_PRIVATE_CHAT_MESSAGE,t)}},{key:\"setSubject\",value:function(e){var t=Object(i.$msg)({to:this.roomjid,type:\"groupchat\"});t.c(\"subject\",e),this.connection.send(t)}},{key:\"onParticipantLeft\",value:function(e,t){delete this.lastPresences[e],t||(this.eventEmitter.emit(p.a.MUC_MEMBER_LEFT,e),this.moderator.onMucMemberLeft(e))}},{key:\"onPresenceUnavailable\",value:function(e,t){var n=this;if($(e).find('>ignore[xmlns=\"http://jitsi.org/jitmeet/\"]').length)return!0;if($(e).find('>x[xmlns=\"http://jabber.org/protocol/muc#user\"]>destroy').length){var r,i=$(e).find('>x[xmlns=\"http://jabber.org/protocol/muc#user\"]>destroy>reason');return i.length&&(r=i.text()),this.eventEmitter.emit(p.a.MUC_DESTROYED,r),this.connection.emuc.doLeave(this.roomjid),!0}var o=$(e).find('>x[xmlns=\"http://jabber.org/protocol/muc#user\"]>status[code=\"110\"]').length,a=$(e).find('>x[xmlns=\"http://jabber.org/protocol/muc#user\"]>status[code=\"307\"]').length,s=Object.keys(this.members);o?s.length>0&&(s.forEach(function(e){var t=n.members[e];delete n.members[e],n.onParticipantLeft(e,t.isFocus)}),this.connection.emuc.doLeave(this.roomjid),a||this.eventEmitter.emit(p.a.MUC_LEFT)):(delete this.members[t],this.onParticipantLeft(t,!1)),a&&this.myroomjid===t&&this.eventEmitter.emit(p.a.KICKED)}},{key:\"onMessage\",value:function(e,t){var n=$(e).find('>nick[xmlns=\"http://jabber.org/protocol/nick\"]').text()||i.Strophe.getResourceFromJid(t),r=$(e).find(\">body\").text(),o=e.getAttribute(\"type\");if(\"error\"===o)return this.eventEmitter.emit(p.a.CHAT_ERROR_RECEIVED,$(e).find(\">text\").text(),r),!0;var a=$(e).find(\">subject\");if(a.length){var s=a.text();(s||\"\"===s)&&(this.eventEmitter.emit(p.a.SUBJECT_CHANGED,s),_.log(\"Subject is changed to \".concat(s)))}var c=$(e).find(\">delay\").attr(\"stamp\");if(!c&&(c=$(e).find('>[xmlns=\"jabber:x:delay\"]').attr(\"stamp\"))){var u=c.match(/(\\d{4})(\\d{2})(\\d{2}T\\d{2}:\\d{2}:\\d{2})/);c=\"\".concat(u[1],\"-\").concat(u[2],\"-\").concat(u[3],\"Z\")}t===this.roomjid&&$(e).find('>x[xmlns=\"http://jabber.org/protocol/muc#user\"]>status[code=\"104\"]').length&&this.discoRoomInfo();var l=$(e).find(\">json-message\").text(),d=this.xmpp.tryParseJSONAndVerify(l);d&&void 0===c?this.eventEmitter.emit(p.a.JSON_MESSAGE_RECEIVED,t,d):r&&(\"chat\"===o?this.eventEmitter.emit(p.a.PRIVATE_MESSAGE_RECEIVED,t,n,r,this.myroomjid,c):\"groupchat\"===o&&this.eventEmitter.emit(p.a.MESSAGE_RECEIVED,t,n,r,this.myroomjid,c))}},{key:\"onPresenceError\",value:function(e,t){if($(e).find('>error[type=\"auth\"]>not-authorized[xmlns=\"urn:ietf:params:xml:ns:xmpp-stanzas\"]').length)_.log(\"on password required\",t),this.eventEmitter.emit(p.a.PASSWORD_REQUIRED);else if($(e).find('>error[type=\"cancel\"]>not-allowed[xmlns=\"urn:ietf:params:xml:ns:xmpp-stanzas\"]').length){i.Strophe.getDomainFromJid(e.getAttribute(\"to\"))===this.xmpp.options.hosts.anonymousdomain?this.eventEmitter.emit(p.a.ROOM_JOIN_ERROR):(_.warn(\"onPresError \",e),this.eventEmitter.emit(p.a.ROOM_CONNECT_NOT_ALLOWED_ERROR))}else $(e).find(\">error>service-unavailable\").length?(_.warn(\"Maximum users limit for the room has been reached\",e),this.eventEmitter.emit(p.a.ROOM_MAX_USERS_ERROR)):(_.warn(\"onPresError \",e),this.eventEmitter.emit(p.a.ROOM_CONNECT_ERROR))}},{key:\"kick\",value:function(e){var t=Object(i.$iq)({to:this.roomjid,type:\"set\"}).c(\"query\",{xmlns:\"http://jabber.org/protocol/muc#admin\"}).c(\"item\",{nick:i.Strophe.getResourceFromJid(e),role:\"none\"}).c(\"reason\").t(\"You have been kicked.\").up().up().up();this.connection.sendIQ(t,function(t){return _.log(\"Kick participant with jid: \",e,t)},function(e){return _.log(\"Kick participant error: \",e)})}},{key:\"lockRoom\",value:function(e,t,n,r){var o=this;this.connection.sendIQ(Object(i.$iq)({to:this.roomjid,type:\"get\"}).c(\"query\",{xmlns:\"http://jabber.org/protocol/muc#owner\"}),function(a){if($(a).find('>query>x[xmlns=\"jabber:x:data\"]>field[var=\"muc#roomconfig_roomsecret\"]').length){var s=Object(i.$iq)({to:o.roomjid,type:\"set\"}).c(\"query\",{xmlns:\"http://jabber.org/protocol/muc#owner\"});s.c(\"x\",{xmlns:\"jabber:x:data\",type:\"submit\"}),s.c(\"field\",{var:\"FORM_TYPE\"}).c(\"value\").t(\"http://jabber.org/protocol/muc#roomconfig\").up().up(),s.c(\"field\",{var:\"muc#roomconfig_roomsecret\"}).c(\"value\").t(e).up().up(),s.c(\"field\",{var:\"muc#roomconfig_whois\"}).c(\"value\").t(\"anyone\").up().up(),o.connection.sendIQ(s,t,n)}else r()},n)}},{key:\"addToPresence\",value:function(e,t){t.tagName=e,this.removeFromPresence(e),this.presMap.nodes.push(t)}},{key:\"removeFromPresence\",value:function(e){var t=this.presMap.nodes.filter(function(t){return e!==t.tagName});this.presMap.nodes=t}},{key:\"addPresenceListener\",value:function(e,t){if(\"function\"!=typeof t)throw new Error('\"handler\" is not a function');var n=this.presHandlers[e];n||(this.presHandlers[e]=n=[]),-1===n.indexOf(t)?n.push(t):_.warn(\"Trying to add the same handler more than once for: \".concat(e))}},{key:\"removePresenceListener\",value:function(e,t){var n=this.presHandlers[e],r=n?n.indexOf(t):-1;-1!==r?n.splice(r,1):_.warn(\"Handler for: \".concat(e,\" was not registered\"))}},{key:\"isFocus\",value:function(e){var t=this.members[e];return t?t.isFocus:null}},{key:\"isModerator\",value:function(){return\"moderator\"===this.role}},{key:\"getMemberRole\",value:function(e){return this.members[e]?this.members[e].role:null}},{key:\"setVideoMute\",value:function(e,t){this.sendVideoInfoPresence(e),t&&t(e)}},{key:\"setAudioMute\",value:function(e,t){return this.sendAudioInfoPresence(e,t)}},{key:\"addAudioInfoToPresence\",value:function(e){this.removeFromPresence(\"audiomuted\"),this.addToPresence(\"audiomuted\",{attributes:{xmlns:\"http://jitsi.org/jitmeet/audio\"},value:e.toString()})}},{key:\"sendAudioInfoPresence\",value:function(e,t){this.addAudioInfoToPresence(e),this.connection&&this.sendPresence(),t&&t()}},{key:\"addVideoInfoToPresence\",value:function(e){this.removeFromPresence(\"videomuted\"),this.addToPresence(\"videomuted\",{attributes:{xmlns:\"http://jitsi.org/jitmeet/video\"},value:e.toString()})}},{key:\"sendVideoInfoPresence\",value:function(e){this.addVideoInfoToPresence(e),this.connection&&this.sendPresence()}},{key:\"getMediaPresenceInfo\",value:function(e,t){var n=this.lastPresences[\"\".concat(this.roomjid,\"/\").concat(e)];if(!n)return null;var r={muted:!1,videoType:void 0},i=null;if(t===l.a)i=b(n,\"audiomuted\");else{if(t!==l.b)return _.error(\"Unsupported media type: \".concat(t)),null;i=b(n,\"videomuted\");var o=b(n,\"videoType\");o.length>0&&(r.videoType=o[0].value)}return r.muted=i.length>0&&\"true\"===i[0].value,r}},{key:\"isSIPCallingSupported\",value:function(){return!!this.moderator&&this.moderator.isSipGatewayEnabled()}},{key:\"dial\",value:function(e){return this.connection.rayo.dial(e,\"fromnumber\",i.Strophe.getBareJidFromJid(this.myroomjid),this.password,this.focusMucJid)}},{key:\"hangup\",value:function(){return this.connection.rayo.hangup()}},{key:\"getPhoneNumber\",value:function(){return this.phoneNumber}},{key:\"getPhonePin\",value:function(){return this.phonePin}},{key:\"muteParticipant\",value:function(e,t){_.info(\"set mute\",t);var n=Object(i.$iq)({to:this.focusMucJid,type:\"set\"}).c(\"mute\",{xmlns:\"http://jitsi.org/jitmeet/audio\",jid:e}).t(t.toString()).up();this.connection.sendIQ(n,function(e){return _.log(\"set mute\",e)},function(e){return _.log(\"set mute error\",e)})}},{key:\"onMute\",value:function(e){if(e.getAttribute(\"from\")===this.focusMucJid){var t=$(e).find(\"mute\");t.length&&\"true\"===t.text()?this.eventEmitter.emit(p.a.AUDIO_MUTED_BY_FOCUS):_.warn(\"Ignoring a mute request which does not explicitly specify a positive mute command.\")}else _.warn(\"Ignored mute from non focus peer\")}},{key:\"leave\",value:function(){var e=this;return new Promise(function(t,n){var r=setTimeout(function(){return o(!0)},5e3),i=e.eventEmitter;function o(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];i.removeListener(p.a.MUC_LEFT,o),clearTimeout(r),e?n(new Error(\"The timeout for the confirmation about leaving the room expired.\")):t()}i.on(p.a.MUC_LEFT,o),e.doLeave()})}}])&&m(n.prototype,r),o&&m(n,o),t}()}).call(this,\"modules/xmpp/ChatRoom.js\")},function(e,t,n){\"use strict\";(function(e){n.d(t,\"a\",function(){return d});var r=n(1),i=n(3),o=n(25),a=n(4).getLogger(e),s=n(0),c=n(60),u=n(10);function l(e){var t=1;return function(n){if(!n){var r=Math.pow(2,t-1);return t+=1,r*e}t=1}}function d(e,t,n,r){function i(e){if(e.data&&e.data.sessionId){if(e.origin!==window.location.origin)return void a.warn(\"Ignoring sessionId from different origin: \".concat(e.origin));o.a.sessionId=e.data.sessionId}}this.roomName=e,this.xmppService=t,this.getNextTimeout=l(1e3),this.getNextErrorTimeout=l(1e3),this.externalAuthEnabled=!1,this.options=r,this.sipGatewayEnabled=this.options.connection.hosts&&void 0!==this.options.connection.hosts.call_control,this.eventEmitter=n,this.connection=this.xmppService.connection,window.addEventListener?window.addEventListener(\"message\",i,!1):window.attachEvent(\"onmessage\",i)}d.prototype.isExternalAuthEnabled=function(){return this.externalAuthEnabled},d.prototype.isSipGatewayEnabled=function(){return this.sipGatewayEnabled},d.prototype.onMucMemberLeft=function(e){a.info(\"Someone left is it focus ? \".concat(e)),\"focus\"===r.Strophe.getResourceFromJid(e)&&(a.info(\"Focus has left the room - leaving conference\"),this.eventEmitter.emit(s.FOCUS_LEFT))},d.prototype.setFocusUserJid=function(e){this.focusUserJid||(this.focusUserJid=e,a.info(\"Focus jid set to:  \".concat(this.focusUserJid)))},d.prototype.getFocusUserJid=function(){return this.focusUserJid},d.prototype.getFocusComponent=function(){var e=this.options.connection.hosts.focus;return e||(e=\"focus.\".concat(this.options.connection.hosts.domain)),e},d.prototype.createConferenceIq=function(){var e,t=Object(r.$iq)({to:this.getFocusComponent(),type:\"set\"}),n=o.a.sessionId,s=o.a.machineId,c=this.options.conference;switch(a.info(\"Session ID: \".concat(n,\" machine UID: \").concat(s)),t.c(\"conference\",{xmlns:\"http://jitsi.org/protocol/focus\",room:this.roomName,\"machine-uid\":s}),n&&t.attrs({\"session-id\":n}),void 0!==this.options.connection.enforcedBridge&&t.c(\"property\",{name:\"enforcedBridge\",value:this.options.connection.enforcedBridge}).up(),void 0!==this.options.connection.hosts&&void 0!==this.options.connection.hosts.call_control&&t.c(\"property\",{name:\"call_control\",value:this.options.connection.hosts.call_control}).up(),void 0!==c.channelLastN&&t.c(\"property\",{name:\"channelLastN\",value:c.channelLastN}).up(),t.c(\"property\",{name:\"disableRtx\",value:Boolean(c.disableRtx)}).up(),void 0!==c.enableTcc&&t.c(\"property\",{name:\"enableTcc\",value:Boolean(c.enableTcc)}).up(),void 0!==c.enableRemb&&t.c(\"property\",{name:\"enableRemb\",value:Boolean(c.enableRemb)}).up(),void 0!==c.minParticipants&&t.c(\"property\",{name:\"minParticipants\",value:c.minParticipants}).up(),t.c(\"property\",{name:\"enableLipSync\",value:!1!==this.options.connection.enableLipSync}).up(),void 0!==c.audioPacketDelay&&t.c(\"property\",{name:\"audioPacketDelay\",value:c.audioPacketDelay}).up(),c.startBitrate&&t.c(\"property\",{name:\"startBitrate\",value:c.startBitrate}).up(),c.minBitrate&&t.c(\"property\",{name:\"minBitrate\",value:c.minBitrate}).up(),c.testing&&c.testing.octo&&\"number\"==typeof c.testing.octo.probability&&Math.random()<c.testing.octo.probability&&t.c(\"property\",{name:\"octo\",value:!0}).up(),this.options.conference.openBridgeChannel){case\"datachannel\":case!0:case void 0:e=!0;break;case\"websocket\":e=!1}return e&&!i.a.supportsDataChannels()&&(e=!1),t.c(\"property\",{name:\"openSctp\",value:e}).up(),void 0!==this.options.conference.startAudioMuted&&t.c(\"property\",{name:\"startAudioMuted\",value:this.options.conference.startAudioMuted}).up(),void 0!==this.options.conference.startVideoMuted&&t.c(\"property\",{name:\"startVideoMuted\",value:this.options.conference.startVideoMuted}).up(),void 0!==this.options.conference.stereo&&t.c(\"property\",{name:\"stereo\",value:this.options.conference.stereo}).up(),void 0!==this.options.conference.useRoomAsSharedDocumentName&&t.c(\"property\",{name:\"useRoomAsSharedDocumentName\",value:this.options.conference.useRoomAsSharedDocumentName}).up(),t.up(),t},d.prototype.parseSessionId=function(e){var t=$(e).find(\"conference\").attr(\"session-id\");t&&(a.info(\"Received sessionId:  \".concat(t)),o.a.sessionId=t)},d.prototype.parseConfigOptions=function(e){this.setFocusUserJid($(e).find(\"conference\").attr(\"focusjid\"));var t=$(e).find(\">conference>property[name='authentication'][value='true']\").length>0;a.info(\"Authentication enabled: \".concat(t)),this.externalAuthEnabled=$(e).find(\">conference>property[name='externalAuth'][value='true']\").length>0,a.info(\"External authentication enabled: \".concat(this.externalAuthEnabled)),this.externalAuthEnabled||this.parseSessionId(e);var n=$(e).find(\">conference\").attr(\"identity\");this.eventEmitter.emit(c.IDENTITY_UPDATED,t,n),$(e).find(\">conference>property[name='sipGatewayEnabled'][value='true']\").length&&(this.sipGatewayEnabled=!0),a.info(\"Sip gateway enabled:  \".concat(this.sipGatewayEnabled))},d.prototype.allocateConferenceFocus=function(){var e=this;return new Promise(function(t){e.setFocusUserJid(e.options.connection.focusUserJid),e.connection.sendIQ(e.createConferenceIq(),function(n){return e._allocateConferenceFocusSuccess(n,t)},function(n){return e._allocateConferenceFocusError(n,t)}),e.connection.flush()})},d.prototype._allocateConferenceFocusError=function(e,t){var n=this,i=$(e).find(\">error>session-invalid\").length||$(e).find(\">error>not-acceptable\").length;if(i&&(a.info(\"Session expired! - removing\"),o.a.sessionId=void 0),$(e).find(\">error>graceful-shutdown\").length)this.eventEmitter.emit(s.GRACEFUL_SHUTDOWN);else{var c=$(e).find(\">error>reservation-error\");if(c.length){var l,d=c.attr(\"error-code\"),p=$(e).find(\">error>text\");return p&&(l=p.text()),void this.eventEmitter.emit(s.RESERVATION_ERROR,d,l)}if($(e).find(\">error>not-authorized\").length)return a.warn(\"Unauthorized to start the conference\",e),r.Strophe.getDomainFromJid(e.getAttribute(\"to\"))!==this.options.connection.hosts.anonymousdomain&&(this.externalAuthEnabled=!0),void this.eventEmitter.emit(s.AUTHENTICATION_REQUIRED);var h=this.getNextErrorTimeout(),f=\"Focus error, retry after \".concat(h);u.callErrorHandler(new Error(f)),a.error(f,e);var m=this.getFocusComponent(),v=h/1e3;i||this.eventEmitter.emit(s.FOCUS_DISCONNECTED,m,v),this.getNextTimeout(!0),window.setTimeout(function(){return n.allocateConferenceFocus().then(t)},h)}},d.prototype._allocateConferenceFocusSuccess=function(e,t){var n=this;if(this.parseConfigOptions(e),this.getNextErrorTimeout(!0),\"true\"===$(e).find(\"conference\").attr(\"ready\"))this.getNextTimeout(!0),t();else{var r=this.getNextTimeout();a.info(\"Waiting for the focus... \".concat(r)),window.setTimeout(function(){return n.allocateConferenceFocus().then(t)},r)}},d.prototype.authenticate=function(){var e=this;return new Promise(function(t,n){e.connection.sendIQ(e.createConferenceIq(),function(n){e.parseSessionId(n),t()},function(e){return n({error:$(e).find(\"iq>error :first\").prop(\"tagName\"),message:$(e).find(\"iq>error>text\").text()})})})},d.prototype.getLoginUrl=function(e,t){this._getLoginUrl(!1,e,t)},d.prototype._getLoginUrl=function(e,t,n){var i=Object(r.$iq)({to:this.getFocusComponent(),type:\"get\"}),s={xmlns:\"http://jitsi.org/protocol/focus\",room:this.roomName,\"machine-uid\":o.a.machineId},c=\"auth url\";function l(e,t){u.callErrorHandler(new Error(e)),a.error(e,t),n(t)}e&&(s.popup=!0,c=\"POPUP \".concat(c)),i.c(\"login-url\",s),this.connection.sendIQ(i,function(e){var n=$(e).find(\"login-url\").attr(\"url\");(n=decodeURIComponent(n))?(a.info(\"Got \".concat(c,\": \").concat(n)),t(n)):l(\"Failed to get \".concat(c,\" from the focus\"),e)},l.bind(void 0,\"Get \".concat(c,\" error\")))},d.prototype.getPopupLoginUrl=function(e,t){this._getLoginUrl(!0,e,t)},d.prototype.logout=function(e){var t=Object(r.$iq)({to:this.getFocusComponent(),type:\"set\"}),n=o.a.sessionId;n?(t.c(\"logout\",{xmlns:\"http://jitsi.org/protocol/focus\",\"session-id\":n}),this.connection.sendIQ(t,function(t){var n=$(t).find(\"logout\").attr(\"logout-url\");n&&(n=decodeURIComponent(n)),a.info(\"Log out OK, url: \".concat(n),t),o.a.sessionId=void 0,e(n)},function(e){u.callErrorHandler(new Error(\"Logout error\")),a.error(\"Logout error\",e)})):e()}}).call(this,\"modules/xmpp/moderator.js\")},function(e,t,n){\"use strict\";(function(e){n.d(t,\"a\",function(){return T});var r=n(8),i=n(4),o=n(1),a=n(0),s=n.n(a),c=n(10),u=n.n(c),l=n(37),d=n.n(l),p=n(6),h=n(47),f=n(36);function m(e){return(m=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function v(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function y(e,t){return!t||\"object\"!==m(t)&&\"function\"!=typeof t?function(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}(e):t}function g(e,t,n){return(g=\"undefined\"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=_(e)););return e}(e,t);if(r){var i=Object.getOwnPropertyDescriptor(r,t);return i.get?i.get.call(n):i.value}})(e,t,n||e)}function _(e){return(_=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function S(e,t){return(S=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var b=Object(i.getLogger)(e),E=function(e){function t(e,n,r){var i;return function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t),(i=y(this,_(t).call(this))).xmpp=e,i.eventEmitter=n,i.sessions={},i.jvbIceConfig=r.jvb,i.p2pIceConfig=r.p2p,i.mediaConstraints={offerToReceiveAudio:!0,offerToReceiveVideo:!0},i}var n,i,a;return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&S(e,t)}(t,f[\"b\"]),n=t,(i=[{key:\"init\",value:function(e){g(_(t.prototype),\"init\",this).call(this,e),this.connection.addHandler(this.onJingle.bind(this),\"urn:xmpp:jingle:1\",\"iq\",\"set\",null,null)}},{key:\"onJingle\",value:function(e){var t=$(e).find(\"jingle\").attr(\"sid\"),n=$(e).find(\"jingle\").attr(\"action\"),i=e.getAttribute(\"from\"),a=Object(o.$iq)({type:\"result\",to:i,id:e.getAttribute(\"id\")});b.log(\"on jingle \".concat(n,\" from \").concat(i),e);var c=this.sessions[t];if(\"session-initiate\"!==n){if(!c)return a.attrs({type:\"error\"}),a.c(\"error\",{type:\"cancel\"}).c(\"item-not-found\",{xmlns:\"urn:ietf:params:xml:ns:xmpp-stanzas\"}).up().c(\"unknown-session\",{xmlns:\"urn:xmpp:jingle:errors:1\"}),b.warn(\"invalid session id\",e),this.connection.send(a),!0;if(i!==c.remoteJid)return b.warn(\"jid mismatch for session id\",t,c.remoteJid,e),a.attrs({type:\"error\"}),a.c(\"error\",{type:\"cancel\"}).c(\"item-not-found\",{xmlns:\"urn:ietf:params:xml:ns:xmpp-stanzas\"}).up().c(\"unknown-session\",{xmlns:\"urn:xmpp:jingle:errors:1\"}),this.connection.send(a),!0}else if(void 0!==c)return a.attrs({type:\"error\"}),a.c(\"error\",{type:\"cancel\"}).c(\"service-unavailable\",{xmlns:\"urn:ietf:params:xml:ns:xmpp-stanzas\"}).up(),b.warn(\"duplicate session id\",t,e),this.connection.send(a),!0;var l=window.performance.now(),d=\"focus\"!==o.Strophe.getResourceFromJid(i);switch(n){case\"session-initiate\":b.log(\"(TIME) received session-initiate:\\t\",l);var f=$(e).find(\"jingle>startmuted\");if(f&&f.length>0){var m=f.attr(\"audio\"),v=f.attr(\"video\");this.eventEmitter.emit(s.a.START_MUTED_FROM_FOCUS,\"true\"===m,\"true\"===v)}b.info(\"Marking session from \".concat(i,\" as \").concat(d?\"\":\"*not*\",\" P2P\")),c=new h.a($(e).find(\"jingle\").attr(\"sid\"),$(e).attr(\"to\"),i,this.connection,this.mediaConstraints,d?this.p2pIceConfig:this.jvbIceConfig,d,!1),this.sessions[c.sid]=c,this.eventEmitter.emit(s.a.CALL_INCOMING,c,$(e).find(\">jingle\"),l);break;case\"session-accept\":this.eventEmitter.emit(s.a.CALL_ACCEPTED,c,$(e).find(\">jingle\"));break;case\"content-modify\":c.modifyContents($(e).find(\">jingle\"));break;case\"transport-info\":this.eventEmitter.emit(s.a.TRANSPORT_INFO,c,$(e).find(\">jingle\"));break;case\"session-terminate\":b.log(\"terminating...\",c.sid);var y=null,g=null;$(e).find(\">jingle>reason\").length&&(y=$(e).find(\">jingle>reason>:first\")[0].tagName,g=$(e).find(\">jingle>reason>text\").text()),this.terminate(c.sid,y,g),this.eventEmitter.emit(s.a.CALL_ENDED,c,y,g);break;case\"transport-replace\":b.info(\"(TIME) Start transport replace\",l),p.a.sendAnalytics(Object(r.B)(r.f,{p2p:d,value:l})),c.replaceTransport($(e).find(\">jingle\"),function(){var e=window.performance.now();b.info(\"(TIME) Transport replace success!\",e),p.a.sendAnalytics(Object(r.B)(r.g,{p2p:d,value:e}))},function(e){u.a.callErrorHandler(e),b.error(\"Transport replace failed\",e),c.sendTransportReject()});break;case\"addsource\":case\"source-add\":c.addRemoteStream($(e).find(\">jingle>content\"));break;case\"removesource\":case\"source-remove\":c.removeRemoteStream($(e).find(\">jingle>content\"));break;default:b.warn(\"jingle action not implemented\",n),a.attrs({type:\"error\"}),a.c(\"error\",{type:\"cancel\"}).c(\"bad-request\",{xmlns:\"urn:ietf:params:xml:ns:xmpp-stanzas\"}).up()}return this.connection.send(a),!0}},{key:\"newP2PJingleSession\",value:function(e,t){var n=new h.a(d.a.randomHexString(12),e,t,this.connection,this.mediaConstraints,this.p2pIceConfig,!0,!0);return this.sessions[n.sid]=n,n}},{key:\"terminate\",value:function(e,t,n){this.sessions.hasOwnProperty(e)&&(\"ended\"!==this.sessions[e].state&&this.sessions[e].onTerminated(t,n),delete this.sessions[e])}},{key:\"getStunAndTurnCredentials\",value:function(){var e=this;this.connection.sendIQ(Object(o.$iq)({type:\"get\",to:this.connection.domain}).c(\"services\",{xmlns:\"urn:xmpp:extdisco:1\"}),function(t){var n=[];$(t).find(\">services>service\").each(function(e,t){var r={},i=(t=$(t)).attr(\"type\");switch(i){case\"stun\":r.url=\"stun:\".concat(t.attr(\"host\")),t.attr(\"port\")&&(r.url+=\":\".concat(t.attr(\"port\"))),n.push(r);break;case\"turn\":case\"turns\":r.url=\"\".concat(i,\":\");var o=t.attr(\"username\");if(o){var a=navigator.userAgent.match(/Chrom(e|ium)\\/([0-9]+)\\./);a&&parseInt(a[2],10)<28?r.url+=\"\".concat(o,\"@\"):r.username=o}r.url+=t.attr(\"host\"),t.attr(\"port\")&&(r.url+=\":\".concat(t.attr(\"port\")));var s=t.attr(\"transport\");s&&\"udp\"!==s&&(r.url+=\"?transport=\".concat(s)),r.credential=t.attr(\"password\")||r.credential,n.push(r)}});var r=e.xmpp.options;r.useStunTurn&&(e.jvbIceConfig.iceServers=n.filter(function(e){return e.url.startsWith(\"turns\")})),r.p2p&&r.p2p.useStunTurn&&(e.p2pIceConfig.iceServers=n)},function(e){b.warn(\"getting turn credentials failed\",e),b.warn(\"is mod_turncredentials or similar installed?\")})}},{key:\"getLog\",value:function(){var e=this,t={};return Object.keys(this.sessions).forEach(function(n){var r=e.sessions[n].peerconnection;r&&r.updateLog&&(t[\"jingle_\".concat(n)]={updateLog:r.updateLog,stats:r.stats,url:window.location.href})}),t}}])&&v(n.prototype,i),a&&v(n,a),t}();function T(e,t,n){o.Strophe.addConnectionPlugin(\"jingle\",new E(e,t,n))}}).call(this,\"modules/xmpp/strophe.jingle.js\")},function(e,t,n){(function(n,r){var i;\n/*!\n * async\n * https://github.com/caolan/async\n *\n * Copyright 2010-2014 Caolan McMahon\n * Released under the MIT license\n */\n/*!\n * async\n * https://github.com/caolan/async\n *\n * Copyright 2010-2014 Caolan McMahon\n * Released under the MIT license\n */\n!function(){var o,a,s={};function c(e){var t=!1;return function(){if(t)throw new Error(\"Callback was already called.\");t=!0,e.apply(o,arguments)}}null!=(o=this)&&(a=o.async),s.noConflict=function(){return o.async=a,s};var u=Object.prototype.toString,l=Array.isArray||function(e){return\"[object Array]\"===u.call(e)},d=function(e,t){if(e.forEach)return e.forEach(t);for(var n=0;n<e.length;n+=1)t(e[n],n,e)},p=function(e,t){if(e.map)return e.map(t);var n=[];return d(e,function(e,r,i){n.push(t(e,r,i))}),n},h=function(e){if(Object.keys)return Object.keys(e);var t=[];for(var n in e)e.hasOwnProperty(n)&&t.push(n);return t};void 0!==n&&n.nextTick?(s.nextTick=n.nextTick,s.setImmediate=void 0!==r?function(e){r(e)}:s.nextTick):\"function\"==typeof r?(s.nextTick=function(e){r(e)},s.setImmediate=s.nextTick):(s.nextTick=function(e){setTimeout(e,0)},s.setImmediate=s.nextTick),s.each=function(e,t,n){if(n=n||function(){},!e.length)return n();var r=0;function i(t){t?(n(t),n=function(){}):(r+=1)>=e.length&&n()}d(e,function(e){t(e,c(i))})},s.forEach=s.each,s.eachSeries=function(e,t,n){if(n=n||function(){},!e.length)return n();var r=0;!function i(){t(e[r],function(t){t?(n(t),n=function(){}):(r+=1)>=e.length?n():i()})}()},s.forEachSeries=s.eachSeries,s.eachLimit=function(e,t,n,r){f(t).apply(null,[e,n,r])},s.forEachLimit=s.eachLimit;var f=function(e){return function(t,n,r){if(r=r||function(){},!t.length||e<=0)return r();var i=0,o=0,a=0;!function s(){if(i>=t.length)return r();for(;a<e&&o<t.length;)a+=1,n(t[(o+=1)-1],function(e){e?(r(e),r=function(){}):(a-=1,(i+=1)>=t.length?r():s())})}()}},m=function(e){return function(){var t=Array.prototype.slice.call(arguments);return e.apply(null,[s.each].concat(t))}},v=function(e){return function(){var t=Array.prototype.slice.call(arguments);return e.apply(null,[s.eachSeries].concat(t))}},y=function(e,t,n,r){if(t=p(t,function(e,t){return{index:t,value:e}}),r){var i=[];e(t,function(e,t){n(e.value,function(n,r){i[e.index]=r,t(n)})},function(e){r(e,i)})}else e(t,function(e,t){n(e.value,function(e){t(e)})})};s.map=m(y),s.mapSeries=v(y),s.mapLimit=function(e,t,n,r){return g(t)(e,n,r)};var g=function(e){return function(e,t){return function(){var n=Array.prototype.slice.call(arguments);return t.apply(null,[f(e)].concat(n))}}(e,y)};s.reduce=function(e,t,n,r){s.eachSeries(e,function(e,r){n(t,e,function(e,n){t=n,r(e)})},function(e){r(e,t)})},s.inject=s.reduce,s.foldl=s.reduce,s.reduceRight=function(e,t,n,r){var i=p(e,function(e){return e}).reverse();s.reduce(i,t,n,r)},s.foldr=s.reduceRight;var _=function(e,t,n,r){var i=[];e(t=p(t,function(e,t){return{index:t,value:e}}),function(e,t){n(e.value,function(n){n&&i.push(e),t()})},function(e){r(p(i.sort(function(e,t){return e.index-t.index}),function(e){return e.value}))})};s.filter=m(_),s.filterSeries=v(_),s.select=s.filter,s.selectSeries=s.filterSeries;var S=function(e,t,n,r){var i=[];e(t=p(t,function(e,t){return{index:t,value:e}}),function(e,t){n(e.value,function(n){n||i.push(e),t()})},function(e){r(p(i.sort(function(e,t){return e.index-t.index}),function(e){return e.value}))})};s.reject=m(S),s.rejectSeries=v(S);var b=function(e,t,n,r){e(t,function(e,t){n(e,function(n){n?(r(e),r=function(){}):t()})},function(e){r()})};s.detect=m(b),s.detectSeries=v(b),s.some=function(e,t,n){s.each(e,function(e,r){t(e,function(e){e&&(n(!0),n=function(){}),r()})},function(e){n(!1)})},s.any=s.some,s.every=function(e,t,n){s.each(e,function(e,r){t(e,function(e){e||(n(!1),n=function(){}),r()})},function(e){n(!0)})},s.all=s.every,s.sortBy=function(e,t,n){s.map(e,function(e,n){t(e,function(t,r){t?n(t):n(null,{value:e,criteria:r})})},function(e,t){if(e)return n(e);n(null,p(t.sort(function(e,t){var n=e.criteria,r=t.criteria;return n<r?-1:n>r?1:0}),function(e){return e.value}))})},s.auto=function(e,t){t=t||function(){};var n=h(e),r=n.length;if(!r)return t();var i={},o=[],a=function(e){o.unshift(e)},c=function(){r--,d(o.slice(0),function(e){e()})};a(function(){if(!r){var e=t;t=function(){},e(null,i)}}),d(n,function(n){var r=l(e[n])?e[n]:[e[n]],u=function(e){var r=Array.prototype.slice.call(arguments,1);if(r.length<=1&&(r=r[0]),e){var o={};d(h(i),function(e){o[e]=i[e]}),o[n]=r,t(e,o),t=function(){}}else i[n]=r,s.setImmediate(c)},p=r.slice(0,Math.abs(r.length-1))||[],f=function(){return t=function(e,t){return e&&i.hasOwnProperty(t)},r=!0,((e=p).reduce?e.reduce(t,r):(d(e,function(e,n,i){r=t(r,e,n,i)}),r))&&!i.hasOwnProperty(n);var e,t,r};if(f())r[r.length-1](u,i);else{a(function e(){f()&&(function(e){for(var t=0;t<o.length;t+=1)if(o[t]===e)return void o.splice(t,1)}(e),r[r.length-1](u,i))})}})},s.retry=function(e,t,n){var r=[];\"function\"==typeof e&&(n=t,t=e,e=5),e=parseInt(e,10)||5;var i=function(i,o){for(var a=function(e,t){return function(n){e(function(e,r){n(!e||t,{err:e,result:r})},o)}};e;)r.push(a(t,!(e-=1)));s.series(r,function(e,t){t=t[t.length-1],(i||n)(t.err,t.result)})};return n?i():i},s.waterfall=function(e,t){if(t=t||function(){},!l(e)){var n=new Error(\"First argument to waterfall must be an array of functions\");return t(n)}if(!e.length)return t();!function e(n){return function(r){if(r)t.apply(null,arguments),t=function(){};else{var i=Array.prototype.slice.call(arguments,1),o=n.next();o?i.push(e(o)):i.push(t),s.setImmediate(function(){n.apply(null,i)})}}}(s.iterator(e))()};var E=function(e,t,n){if(n=n||function(){},l(t))e.map(t,function(e,t){e&&e(function(e){var n=Array.prototype.slice.call(arguments,1);n.length<=1&&(n=n[0]),t.call(null,e,n)})},n);else{var r={};e.each(h(t),function(e,n){t[e](function(t){var i=Array.prototype.slice.call(arguments,1);i.length<=1&&(i=i[0]),r[e]=i,n(t)})},function(e){n(e,r)})}};s.parallel=function(e,t){E({map:s.map,each:s.each},e,t)},s.parallelLimit=function(e,t,n){E({map:g(t),each:f(t)},e,n)},s.series=function(e,t){if(t=t||function(){},l(e))s.mapSeries(e,function(e,t){e&&e(function(e){var n=Array.prototype.slice.call(arguments,1);n.length<=1&&(n=n[0]),t.call(null,e,n)})},t);else{var n={};s.eachSeries(h(e),function(t,r){e[t](function(e){var i=Array.prototype.slice.call(arguments,1);i.length<=1&&(i=i[0]),n[t]=i,r(e)})},function(e){t(e,n)})}},s.iterator=function(e){return function t(n){var r=function t(){return e.length&&e[n].apply(null,arguments),t.next()};return r.next=function(){return n<e.length-1?t(n+1):null},r}(0)},s.apply=function(e){var t=Array.prototype.slice.call(arguments,1);return function(){return e.apply(null,t.concat(Array.prototype.slice.call(arguments)))}};var T=function(e,t,n,r){var i=[];e(t,function(e,t){n(e,function(e,n){i=i.concat(n||[]),t(e)})},function(e){r(e,i)})};s.concat=m(T),s.concatSeries=v(T),s.whilst=function(e,t,n){e()?t(function(r){if(r)return n(r);s.whilst(e,t,n)}):n()},s.doWhilst=function(e,t,n){e(function(r){if(r)return n(r);var i=Array.prototype.slice.call(arguments,1);t.apply(null,i)?s.doWhilst(e,t,n):n()})},s.until=function(e,t,n){e()?n():t(function(r){if(r)return n(r);s.until(e,t,n)})},s.doUntil=function(e,t,n){e(function(r){if(r)return n(r);var i=Array.prototype.slice.call(arguments,1);t.apply(null,i)?n():s.doUntil(e,t,n)})},s.queue=function(e,t){function n(e,t,n,r){if(e.started||(e.started=!0),l(t)||(t=[t]),0==t.length)return s.setImmediate(function(){e.drain&&e.drain()});d(t,function(t){var i={data:t,callback:\"function\"==typeof r?r:null};n?e.tasks.unshift(i):e.tasks.push(i),e.saturated&&e.tasks.length===e.concurrency&&e.saturated(),s.setImmediate(e.process)})}void 0===t&&(t=1);var r=0,i={tasks:[],concurrency:t,saturated:null,empty:null,drain:null,started:!1,paused:!1,push:function(e,t){n(i,e,!1,t)},kill:function(){i.drain=null,i.tasks=[]},unshift:function(e,t){n(i,e,!0,t)},process:function(){if(!i.paused&&r<i.concurrency&&i.tasks.length){var t=i.tasks.shift();i.empty&&0===i.tasks.length&&i.empty(),r+=1;var n=c(function(){r-=1,t.callback&&t.callback.apply(t,arguments),i.drain&&i.tasks.length+r===0&&i.drain(),i.process()});e(t.data,n)}},length:function(){return i.tasks.length},running:function(){return r},idle:function(){return i.tasks.length+r===0},pause:function(){!0!==i.paused&&(i.paused=!0,i.process())},resume:function(){!1!==i.paused&&(i.paused=!1,i.process())}};return i},s.priorityQueue=function(e,t){function n(e,t){return e.priority-t.priority}var r=s.queue(e,t);return r.push=function(e,t,i){!function(e,t,r,i){if(e.started||(e.started=!0),l(t)||(t=[t]),0==t.length)return s.setImmediate(function(){e.drain&&e.drain()});d(t,function(t){var o={data:t,priority:r,callback:\"function\"==typeof i?i:null};e.tasks.splice(function(e,t,n){for(var r=-1,i=e.length-1;r<i;){var o=r+(i-r+1>>>1);n(t,e[o])>=0?r=o:i=o-1}return r}(e.tasks,o,n)+1,0,o),e.saturated&&e.tasks.length===e.concurrency&&e.saturated(),s.setImmediate(e.process)})}(r,e,t,i)},delete r.unshift,r},s.cargo=function(e,t){var n=!1,r=[],i={tasks:r,payload:t,saturated:null,empty:null,drain:null,drained:!0,push:function(e,n){l(e)||(e=[e]),d(e,function(e){r.push({data:e,callback:\"function\"==typeof n?n:null}),i.drained=!1,i.saturated&&r.length===t&&i.saturated()}),s.setImmediate(i.process)},process:function o(){if(!n){if(0===r.length)return i.drain&&!i.drained&&i.drain(),void(i.drained=!0);var a=\"number\"==typeof t?r.splice(0,t):r.splice(0,r.length),s=p(a,function(e){return e.data});i.empty&&i.empty(),n=!0,e(s,function(){n=!1;var e=arguments;d(a,function(t){t.callback&&t.callback.apply(null,e)}),o()})}},length:function(){return r.length},running:function(){return n}};return i};var C=function(e){return function(t){var n=Array.prototype.slice.call(arguments,1);t.apply(null,n.concat([function(t){var n=Array.prototype.slice.call(arguments,1);\"undefined\"!=typeof console&&(t?console.error&&console.error(t):console[e]&&d(n,function(t){console[e](t)}))}]))}};s.log=C(\"log\"),s.dir=C(\"dir\"),s.memoize=function(e,t){var n={},r={};t=t||function(e){return e};var i=function(){var i=Array.prototype.slice.call(arguments),o=i.pop(),a=t.apply(null,i);a in n?s.nextTick(function(){o.apply(null,n[a])}):a in r?r[a].push(o):(r[a]=[o],e.apply(null,i.concat([function(){n[a]=arguments;var e=r[a];delete r[a];for(var t=0,i=e.length;t<i;t++)e[t].apply(null,arguments)}])))};return i.memo=n,i.unmemoized=e,i},s.unmemoize=function(e){return function(){return(e.unmemoized||e).apply(null,arguments)}},s.times=function(e,t,n){for(var r=[],i=0;i<e;i++)r.push(i);return s.map(r,t,n)},s.timesSeries=function(e,t,n){for(var r=[],i=0;i<e;i++)r.push(i);return s.mapSeries(r,t,n)},s.seq=function(){var e=arguments;return function(){var t=this,n=Array.prototype.slice.call(arguments),r=n.pop();s.reduce(e,n,function(e,n,r){n.apply(t,e.concat([function(){var e=arguments[0],t=Array.prototype.slice.call(arguments,1);r(e,t)}]))},function(e,n){r.apply(t,[e].concat(n))})}},s.compose=function(){return s.seq.apply(null,Array.prototype.reverse.call(arguments))};var R=function(e,t){var n=function(){var n=this,r=Array.prototype.slice.call(arguments),i=r.pop();return e(t,function(e,t){e.apply(n,r.concat([t]))},i)};if(arguments.length>2){var r=Array.prototype.slice.call(arguments,2);return n.apply(this,r)}return n};s.applyEach=m(R),s.applyEachSeries=v(R),s.forever=function(e,t){!function n(r){if(r){if(t)return t(r);throw r}e(n)}()},e.exports?e.exports=s:void 0===(i=function(){return s}.apply(t,[]))||(e.exports=i)}()}).call(this,n(51),n(129).setImmediate)},function(e,t){e.exports={integerHash:function(e){if(!e)return 0;var t,n=0;for(t=0;t<e.length;t++)n+=e.charCodeAt(t)*Math.pow(31,e.length-1-t),n=Math.abs(0|n);return n}}},function(e,t,n){\"use strict\";(function(e){n.d(t,\"a\",function(){return s});var r=n(4),i=n(32);function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var a=Object(r.getLogger)(e),s=function(){function e(t,n,r,i,o,a,s){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this.sid=t,this.localJid=n,this.remoteJid=r,this.connection=i,this.mediaConstraints=o,this.iceConfig=a,this.isInitiator=s,this.usedrip=!0,this.dripContainer=[],this.room=null,this.state=null,this.rtc=null}var t,n,r;return t=e,(n=[{key:\"initialize\",value:function(e,t,n){if(null!==this.state){var r=\"attempt to initiate on session \".concat(this.sid,\"\\n                   in state \").concat(this.state);throw a.error(r),new Error(r)}this.room=e,this.rtc=t,this.state=i.c,this.doInitialize(n)}},{key:\"doInitialize\",value:function(e){}},{key:\"addIceCandidates\",value:function(e){}},{key:\"getState\",value:function(){return this.state}},{key:\"addSources\",value:function(e){}},{key:\"removeSources\",value:function(e){}},{key:\"terminate\",value:function(e,t,n){}},{key:\"acceptOffer\",value:function(e,t,n){}},{key:\"_getInitiatorJid\",value:function(){return this.isInitiator?this.localJid:this.remoteJid}},{key:\"initiatorJid\",get:function(){return this.isInitiator?this.localJid:this.remoteJid}},{key:\"responderJid\",get:function(){return this.isInitiator?this.remoteJid:this.localJid}}])&&o(t.prototype,n),r&&o(t,r),e}()}).call(this,\"modules/xmpp/JingleSession.js\")},function(e,t,n){\"use strict\";(function(e){n.d(t,\"a\",function(){return h});var r=n(4),i=n(9),o=n(40),a=n(90);function s(e){return(s=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function c(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function u(e,t){return!t||\"object\"!==s(t)&&\"function\"!=typeof t?function(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}(e):t}function l(e){return(l=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function d(e,t){return(d=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var p=Object(r.getLogger)(e),h=function(e){function t(){var e;return function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t),(e=u(this,l(t).call(this))).ssrcOwners=new Map,e.chatRoom=null,e}var n,r,s;return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&d(e,t)}(t,a[\"a\"]),n=t,(r=[{key:\"setChatRoom\",value:function(e){var t=this,n=this.chatRoom;this.chatRoom=e,n&&(n.removePresenceListener(\"audiomuted\",this._audioMuteHandler),n.removePresenceListener(\"videomuted\",this._videoMuteHandler),n.removePresenceListener(\"videoType\",this._videoTypeHandler)),e&&(this._audioMuteHandler=function(e,n){t.eventEmitter.emit(o.a,n,i.a,\"true\"===e.value)},e.addPresenceListener(\"audiomuted\",this._audioMuteHandler),this._videoMuteHandler=function(e,n){t.eventEmitter.emit(o.a,n,i.b,\"true\"===e.value)},e.addPresenceListener(\"videomuted\",this._videoMuteHandler),this._videoTypeHandler=function(e,n){t.eventEmitter.emit(o.b,n,e.value)},e.addPresenceListener(\"videoType\",this._videoTypeHandler))}},{key:\"getPeerMediaInfo\",value:function(e,t){if(this.chatRoom)return this.chatRoom.getMediaPresenceInfo(e,t);p.error(\"Requested peer media info, before room was set\")}},{key:\"getSSRCOwner\",value:function(e){return this.ssrcOwners.get(e)}},{key:\"setSSRCOwner\",value:function(e,t){if(\"number\"!=typeof e)throw new TypeError(\"SSRC(\".concat(e,\") must be a number\"));this.ssrcOwners.set(e,t)}}])&&c(n.prototype,r),s&&c(n,s),t}()}).call(this,\"modules/xmpp/SignalingLayerImpl.js\")},function(e,t,n){\"use strict\";n.d(t,\"a\",function(){return u});var r=n(24);function i(e){return(i=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function a(e,t){return!t||\"object\"!==i(t)&&\"function\"!=typeof t?function(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}(e):t}function s(e){return(s=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function c(e,t){return(c=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var u=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t),a(this,s(t).apply(this,arguments))}var n,i,u;return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&c(e,t)}(t,r[\"a\"]),n=t,(i=[{key:\"getSSRCOwner\",value:function(e){throw new Error(\"not implemented\")}},{key:\"getPeerMediaInfo\",value:function(e,t){throw new Error(\"not implemented\")}}])&&o(n.prototype,i),u&&o(n,u),t}()},function(e,t,n){\"use strict\";(function(e){var r=n(4),i=n(1),o=n(10),a=n.n(o),s=Object(r.getLogger)(e),c=-1,u=/request id \\d+.\\d+ got 200/,l=/request errored, status: (\\d+), number of errors: \\d+/;t.a=function(){i.Strophe.log=function(e,t){switch(s.trace(\"Strophe\",e,t),\"string\"==typeof t&&-1!==t.indexOf(\"Request \")&&-1!==t.indexOf(\"timed out (secondary), restarting\")&&(e=i.Strophe.LogLevel.WARN),e){case i.Strophe.LogLevel.DEBUG:-1!==c&&u.test(t)&&(s.debug(\"Reset lastErrorStatus\"),c=-1);break;case i.Strophe.LogLevel.WARN:s.warn(\"Strophe: \".concat(t));var n=l.exec(t);n&&2===n.length&&(c=parseInt(n[1],10),s.debug(\"lastErrorStatus set to: \".concat(c)));break;case i.Strophe.LogLevel.ERROR:case i.Strophe.LogLevel.FATAL:t=\"Strophe: \".concat(t),a.a.callErrorHandler(new Error(t)),s.error(t)}},i.Strophe.getLastErrorStatus=function(){return c},i.Strophe.getStatusString=function(e){switch(e){case i.Strophe.Status.ERROR:return\"ERROR\";case i.Strophe.Status.CONNECTING:return\"CONNECTING\";case i.Strophe.Status.CONNFAIL:return\"CONNFAIL\";case i.Strophe.Status.AUTHENTICATING:return\"AUTHENTICATING\";case i.Strophe.Status.AUTHFAIL:return\"AUTHFAIL\";case i.Strophe.Status.CONNECTED:return\"CONNECTED\";case i.Strophe.Status.DISCONNECTED:return\"DISCONNECTED\";case i.Strophe.Status.DISCONNECTING:return\"DISCONNECTING\";case i.Strophe.Status.ATTACHED:return\"ATTACHED\";default:return\"unknown\"}}}}).call(this,\"modules/xmpp/strophe.util.js\")},function(e,t,n){\"use strict\";(function(e){var r=n(4),i=n(1),o=n(10),a=n.n(o),s=n(36);function c(e){return(c=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function u(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function l(e,t){return!t||\"object\"!==c(t)&&\"function\"!=typeof t?function(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}(e):t}function d(e,t,n){return(d=\"undefined\"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=p(e)););return e}(e,t);if(r){var i=Object.getOwnPropertyDescriptor(r,t);return i.get?i.get.call(n):i.value}})(e,t,n||e)}function p(e){return(p=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function h(e,t){return(h=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var f=Object(r.getLogger)(e),m=12,v=function(e){function t(e){var n;return function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t),(n=l(this,p(t).call(this))).failedPings=0,n.xmpp=e,n.pingExecIntervals=new Array(m),n}var n,r,o;return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&h(e,t)}(t,s[\"b\"]),n=t,(r=[{key:\"init\",value:function(e){d(p(t.prototype),\"init\",this).call(this,e),i.Strophe.addNamespace(\"PING\",\"urn:xmpp:ping\")}},{key:\"ping\",value:function(e,t,n,r){this._addPingExecutionTimestamp();var o=Object(i.$iq)({type:\"get\",to:e});o.c(\"ping\",{xmlns:i.Strophe.NS.PING}),this.connection.sendIQ(o,t,n,r)}},{key:\"startInterval\",value:function(e){var t=this,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1e4;if(this.intervalId){var r=\"Ping task scheduled already\";return a.a.callErrorHandler(new Error(r)),void f.error(r)}this.intervalId=window.setInterval(function(){t.ping(e,function(){t.failedPings=0},function(e){t.failedPings+=1;var n=\"Ping \".concat(e?\"error\":\"timeout\");t.failedPings>=3?(a.a.callErrorHandler(new Error(n)),f.error(n,e)):f.warn(n,e)},15e3)},n),f.info(\"XMPP pings will be sent every \".concat(n,\" ms\"))}},{key:\"stopInterval\",value:function(){this.intervalId&&(window.clearInterval(this.intervalId),this.intervalId=null,this.failedPings=0,f.info(\"Ping interval cleared\"))}},{key:\"_addPingExecutionTimestamp\",value:function(){this.pingExecIntervals.push((new Date).getTime()),this.pingExecIntervals.length>m&&this.pingExecIntervals.shift()}},{key:\"getPingSuspendTime\",value:function(){var e=this.pingExecIntervals.slice();e.push((new Date).getTime());var t=0,n=e[0];return e.forEach(function(e){var r=e-n;r>t&&(t=r),n=e}),t-=1e4,Math.max(t,0)}}])&&u(n.prototype,r),o&&u(n,o),t}();t.a=function(e){i.Strophe.addConnectionPlugin(\"ping\",new v(e))}}).call(this,\"modules/xmpp/strophe.ping.js\")},function(e,t,n){\"use strict\";(function(e){var r=n(4),i=n(1),o=n(36);function a(e){return(a=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function s(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function c(e,t){return!t||\"object\"!==a(t)&&\"function\"!=typeof t?function(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}(e):t}function u(e,t,n){return(u=\"undefined\"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=l(e)););return e}(e,t);if(r){var i=Object.getOwnPropertyDescriptor(r,t);return i.get?i.get.call(n):i.value}})(e,t,n||e)}function l(e){return(l=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function d(e,t){return(d=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var p=Object(r.getLogger)(e),h=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t),c(this,l(t).apply(this,arguments))}var n,r,a;return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&d(e,t)}(t,o[\"b\"]),n=t,(r=[{key:\"init\",value:function(e){u(l(t.prototype),\"init\",this).call(this,e),this.connection.addHandler(this.onRayo.bind(this),\"urn:xmpp:rayo:1\",\"iq\",\"set\",null,null)}},{key:\"onRayo\",value:function(e){p.info(\"Rayo IQ\",e)}},{key:\"dial\",value:function(e,t,n,r,o){var a=this;return new Promise(function(s,c){if(o){var u=Object(i.$iq)({type:\"set\",to:o});u.c(\"dial\",{xmlns:\"urn:xmpp:rayo:1\",to:e,from:t}),u.c(\"header\",{name:\"JvbRoomName\",value:n}).up(),r&&r.length&&u.c(\"header\",{name:\"JvbRoomPassword\",value:r}).up(),a.connection.sendIQ(u,function(e){p.info(\"Dial result \",e);var t=$(e).find(\"ref\").attr(\"uri\");a.callResource=t.substr(\"xmpp:\".length),p.info(\"Received call resource: \".concat(a.callResource)),s()},function(e){p.info(\"Dial error \",e),c(e)})}else c(new Error(\"Internal error!\"))})}},{key:\"hangup\",value:function(){var e=this;return new Promise(function(t,n){if(!e.callResource)return n(new Error(\"No call in progress\")),void p.warn(\"No call in progress\");var r=Object(i.$iq)({type:\"set\",to:e.callResource});r.c(\"hangup\",{xmlns:\"urn:xmpp:rayo:1\"}),e.connection.sendIQ(r,function(n){p.info(\"Hangup result \",n),e.callResource=null,t()},function(t){p.info(\"Hangup error \",t),e.callResource=null,n(new Error(\"Hangup error \"))})})}}])&&s(n.prototype,r),a&&s(n,a),t}();t.a=function(){i.Strophe.addConnectionPlugin(\"rayo\",new h)}}).call(this,\"modules/xmpp/strophe.rayo.js\")},function(e,t,n){\"use strict\";var r=n(1),i=n(36);function o(e){return(o=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function a(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function s(e,t){return!t||\"object\"!==o(t)&&\"function\"!=typeof t?function(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}(e):t}function c(e,t,n){return(c=\"undefined\"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=u(e)););return e}(e,t);if(r){var i=Object.getOwnPropertyDescriptor(r,t);return i.get?i.get.call(n):i.value}})(e,t,n||e)}function u(e){return(u=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function l(e,t){return(l=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var d=function(e){function t(){var e;return function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t),(e=s(this,u(t).call(this))).log=[],e}var n,r,o;return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&l(e,t)}(t,i[\"b\"]),n=t,(r=[{key:\"init\",value:function(e){c(u(t.prototype),\"init\",this).call(this,e),this.connection.rawInput=this.logIncoming.bind(this),this.connection.rawOutput=this.logOutgoing.bind(this)}},{key:\"logIncoming\",value:function(e){this.log.push([(new Date).getTime(),\"incoming\",e])}},{key:\"logOutgoing\",value:function(e){this.log.push([(new Date).getTime(),\"outgoing\",e])}}])&&a(n.prototype,r),o&&a(n,o),t}();t.a=function(){r.Strophe.addConnectionPlugin(\"logger\",new d)}},function(e,t,n){\"use strict\";n.d(t,\"a\",function(){return m});var r=n(1),i=n(0),o=n.n(i),a=n(24);function s(e){return(s=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function c(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function u(e){return(u=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function l(e,t){return(l=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function d(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}var p=[\"category\",\"type\",\"lang\",\"name\"],h=[\"category\",\"type\",\"lang\"];function f(e,t){var n=0;return h.some(function(r){return 0!==(n=e[r]>t[r]?1:e[r]<t[r]&&-1)}),n}var m=function(e){function t(){var e,n,i,a=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},c=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"http://jitsi.org/jitsimeet\";if(function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t),n=this,i=u(t).call(this),(e=!i||\"object\"!==s(i)&&\"function\"!=typeof i?d(n):i).node=c,e.disco=a.disco,!e.disco)throw new Error(\"Missing strophe-plugins (disco plugin is required)!\");e.versionToCapabilities=Object.create(null),e.jidToVersion=Object.create(null),e.version=\"\",e.rooms=new Set;var l=a.emuc;return l.addListener(o.a.EMUC_ROOM_ADDED,function(t){return e._addChatRoom(t)}),l.addListener(o.a.EMUC_ROOM_REMOVED,function(t){return e._removeChatRoom(t)}),Object.keys(l.rooms).forEach(function(t){e._addChatRoom(l.rooms[t])}),r.Strophe.addNamespace(\"CAPS\",\"http://jabber.org/protocol/caps\"),e.disco.addFeature(r.Strophe.NS.CAPS),a.addHandler(e._handleCaps.bind(d(d(e))),r.Strophe.NS.CAPS),e._onMucMemberLeft=e._removeJidToVersionEntry.bind(d(d(e))),e}var n,i,h;return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&l(e,t)}(t,a[\"a\"]),n=t,(i=[{key:\"addFeature\",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this.disco.addFeature(e),this._generateVersion(),t&&this.submit()}},{key:\"removeFeature\",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this.disco.removeFeature(e),this._generateVersion(),t&&this.submit()}},{key:\"submit\",value:function(){this.rooms.forEach(function(e){return e.sendPresence()})}},{key:\"getFeatures\",value:function(e){var t=this,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:5e3,r=e in this.jidToVersion?this.jidToVersion[e]:null;if(!(r&&r.version in this.versionToCapabilities)){var i=r?\"\".concat(r.node,\"#\").concat(r.version):null;return this._getDiscoInfo(e,i,n).then(function(e){var n=e.features;return r&&(t.versionToCapabilities[r.version]=n),n})}return Promise.resolve(this.versionToCapabilities[r.version])}},{key:\"getFeaturesAndIdentities\",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:5e3;return this._getDiscoInfo(e,null,t)}},{key:\"_getDiscoInfo\",value:function(e,t,n){var r=this;return new Promise(function(i,o){return r.disco.info(e,t,function(e){var t=new Set,n=new Set;$(e).find(\">query>feature\").each(function(e,n){return t.add(n.getAttribute(\"var\"))}),$(e).find(\">query>identity\").each(function(e,t){return n.add({type:t.getAttribute(\"type\"),name:t.getAttribute(\"name\"),category:t.getAttribute(\"category\")})}),i({features:t,identities:n})},o,n)})}},{key:\"_addChatRoom\",value:function(e){this.rooms.add(e),e.addListener(o.a.MUC_MEMBER_LEFT,this._onMucMemberLeft),this._fixChatRoomPresenceMap(e)}},{key:\"_removeChatRoom\",value:function(e){this.rooms.delete(e),e.removeListener(o.a.MUC_MEMBER_LEFT,this._onMucMemberLeft)}},{key:\"_fixChatRoomPresenceMap\",value:function(e){e.addToPresence(\"c\",{attributes:{xmlns:r.Strophe.NS.CAPS,hash:\"sha-1\",node:this.node,ver:this.version}})}},{key:\"_notifyVersionChanged\",value:function(){var e=this;this.rooms.forEach(function(t){return e._fixChatRoomPresenceMap(t)}),this.submit()}},{key:\"_generateVersion\",value:function(){var e=this.disco._identities.sort(f).reduce(function(e,t){return\"\".concat(p.reduce(function(e,n,r){return e+(0===r?\"\":\"/\")+t[n]},\"\"),\"<\")},\"\"),t=this.disco._features.sort().reduce(function(e,t){return\"\".concat(e+t,\"<\")},\"\");this.version=Object(r.b64_sha1)(e+t),this._notifyVersionChanged()}},{key:\"_handleCaps\",value:function(e){var t=e.getAttribute(\"from\"),n=e.querySelector(\"c\"),r=n.getAttribute(\"ver\"),i=n.getAttribute(\"node\"),a=this.jidToVersion[t];return this.jidToVersion[t]={version:r,node:i},a&&a.version!==r&&this.eventEmitter.emit(o.a.PARTCIPANT_FEATURES_CHANGED,t),!0}},{key:\"_removeJidToVersionEntry\",value:function(e){e in this.jidToVersion&&delete this.jidToVersion[e]}}])&&c(n.prototype,i),h&&c(n,h),t}()},function(e,t,n){(function(t){var r=n(4).getLogger(t);function i(e,t){var n=e.getTrack();if(!n)throw new Error(\"Failed to initialize DTMFSender: no audio track.\");this.dtmfSender=t.peerconnection.createDTMFSender(n),r.debug(\"Initialized DTMFSender\")}i.prototype.sendTones=function(e,t,n){this.dtmfSender.insertDTMF(e,t||200,n||200)},e.exports=i}).call(this,\"modules/DTMF/JitsiDTMFManager.js\")},function(e,t,n){\"use strict\";n.d(t,\"a\",function(){return o});var r=n(2);function i(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var o=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this.conference=t,t.addEventListener(r.TRACK_AUDIO_LEVEL_CHANGED,this._audioLevel.bind(this)),this.myUserID=this.conference.myUserId()}var t,n,o;return t=e,(n=[{key:\"_audioLevel\",value:function(e,t){!this.conference.isP2PActive()||t<=.6||e===this.myUserID&&this.conference.getLocalAudioTrack().isMuted()||this.conference.eventEmitter.emit(r.DOMINANT_SPEAKER_CHANGED,e)}}])&&i(t.prototype,n),o&&i(t,o),e}()},function(e,t,n){\"use strict\";(function(e){n.d(t,\"a\",function(){return l});var r=n(4),i=n(7),o=n.n(i),a=n(10),s=n.n(a);function c(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var u=Object(r.getLogger)(e),l=function(){function e(t,n,r){if(function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),!t&&!n)throw new TypeError(\"At least peerconnection or wsUrl must be given\");if(t&&n)throw new TypeError(\"Just one of peerconnection or wsUrl must be given\");if(t?u.debug(\"constructor() with peerconnection\"):u.debug('constructor() with wsUrl:\"'.concat(n,'\"')),this._channel=null,this._eventEmitter=r,this._mode=null,t){var i=t.createDataChannel(\"JVB data channel\",{protocol:\"http://jitsi.org/protocols/colibri\"});this._handleChannel(i),this._mode=\"datachannel\"}else if(n){var o=new WebSocket(n);this._handleChannel(o),this._mode=\"websocket\"}}var t,n,r;return t=e,(n=[{key:\"close\",value:function(){if(this._channel){try{this._channel.close()}catch(e){}this._channel=null}}},{key:\"isOpen\",value:function(){return this._channel&&(\"open\"===this._channel.readyState||this._channel.readyState===WebSocket.OPEN)}},{key:\"sendMessage\",value:function(e,t){this._send({colibriClass:\"EndpointMessage\",msgPayload:t,to:e})}},{key:\"sendSetLastNMessage\",value:function(e){var t={colibriClass:\"LastNChangedEvent\",lastN:e};this._send(t),u.log(\"Channel lastN set to: \".concat(e))}},{key:\"sendPinnedEndpointMessage\",value:function(e){u.log(\"sending pinned changed notification to the bridge for endpoint \",e),this._send({colibriClass:\"PinnedEndpointChangedEvent\",pinnedEndpoint:e||null})}},{key:\"sendSelectedEndpointsMessage\",value:function(e){u.log(\"sending selected changed notification to the bridge for endpoints\",e),this._send({colibriClass:\"SelectedEndpointsChangedEvent\",selectedEndpoints:e})}},{key:\"sendReceiverVideoConstraintMessage\",value:function(e){u.log(\"sending a ReceiverVideoConstraint message with \"+\"a maxFrameHeight of \".concat(e,\" pixels\")),this._send({colibriClass:\"ReceiverVideoConstraint\",maxFrameHeight:e})}},{key:\"_handleChannel\",value:function(e){var t=this,n=this._eventEmitter;e.onopen=function(){u.info(\"\".concat(t._mode,\" channel opened\")),n.emit(o.a.DATA_CHANNEL_OPEN)},e.onerror=function(e){u.error(\"Channel error:\",e)},e.onmessage=function(e){var t,r=e.data;try{t=JSON.parse(r)}catch(e){return s.a.callErrorHandler(e),void u.error(\"Failed to parse channel message as JSON: \",r,e)}var i=t.colibriClass;switch(i){case\"DominantSpeakerEndpointChangeEvent\":var a=t.dominantSpeakerEndpoint;u.info(\"Channel new dominant speaker event: \",a),n.emit(o.a.DOMINANT_SPEAKER_CHANGED,a);break;case\"EndpointConnectivityStatusChangeEvent\":var c=t.endpoint,l=\"true\"===t.active;u.info(\"Endpoint connection status changed: \".concat(c,\" active ? \").concat(l)),n.emit(o.a.ENDPOINT_CONN_STATUS_CHANGED,c,l);break;case\"EndpointMessage\":n.emit(o.a.ENDPOINT_MESSAGE_RECEIVED,t.from,t.msgPayload);break;case\"LastNEndpointsChangeEvent\":var d=t.lastNEndpoints;u.info(\"Channel new last-n event: \",d,t),n.emit(o.a.LASTN_ENDPOINT_CHANGED,d,t);break;case\"SelectedUpdateEvent\":var p=t.isSelected;u.info(\"SelectedUpdateEvent isSelected? \".concat(p)),n.emit(o.a.IS_SELECTED_CHANGED,p);break;default:u.debug(\"Channel JSON-formatted message: \",t),n.emit(\"rtc.datachannel.\".concat(i),t)}},e.onclose=function(){u.info(\"Channel closed\"),t._channel=null},this._channel=e}},{key:\"_send\",value:function(e){var t=this._channel;if(!this.isOpen())throw new Error(\"No opened channel\");t.send(JSON.stringify(e))}},{key:\"mode\",get:function(){return this._mode}}])&&c(t.prototype,n),r&&c(t,r),e}()}).call(this,\"modules/RTC/BridgeChannel.js\")},function(e,t,n){\"use strict\";(function(e){n.d(t,\"a\",function(){return E});var r=n(4),i=n(35),o=n.n(i),a=n(57),s=n(26),c=n(27),u=n(37),l=n.n(u),d=n(5);function p(e){return(p=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function h(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=[],r=!0,i=!1,o=void 0;try{for(var a,s=e[Symbol.iterator]();!(r=(a=s.next()).done)&&(n.push(a.value),!t||n.length!==t);r=!0);}catch(e){i=!0,o=e}finally{try{r||null==s.return||s.return()}finally{if(i)throw o}}return n}(e,t)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance\")}()}function f(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function m(e,t){return!t||\"object\"!==p(t)&&\"function\"!=typeof t?function(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}(e):t}function v(e){return(v=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function y(e,t){return(y=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var g=Object(r.getLogger)(e),_={stable:\"stable\",haveLocalOffer:\"have-local-offer\",haveRemoteOffer:\"have-remote-offer\",closed:\"closed\"},S={new:\"new\",gathering:\"gathering\",complete:\"complete\"},b=\"jitsi-ortc-cname-\".concat(l.a.randomInt(1e4,99999)),E=function(e){function t(e){var n;return function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t),n=m(this,v(t).call(this)),g.debug(\"constructor() pcConfig:\",e),n._bufferedIceCandidates=[],n._closed=!1,n._dtlsTransport=null,n._iceGatherer=null,n._iceGatheringState=S.new,n._resolveLocalIceGatheringPromise=null,n._iceGatheringCompletePromise=new Promise(function(e){n._resolveLocalIceGatheringPromise=e}),n._iceTransport=null,n._localCapabilities=null,n._localDescription=null,n._localTrackInfos=new Map,n._mids=new Map,n._remoteDescription=null,n._remoteStreams=new Map,n._remoteTrackInfos=new Map,n._sdpGlobalFields={id:d.a.generateSsrc(),version:0},n._signalingState=_.stable,n._setIceGatherer(e),n._setIceTransport(n._iceGatherer),n._setDtlsTransport(n._iceTransport),n}var n,r,i;return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&y(e,t)}(t,o.a.EventTarget),n=t,(r=[{key:\"addIceCandidate\",value:function(e){if(!e)throw new TypeError(\"candidate missing\");return g.debug(\"addIceCandidate() candidate:\",e),this._closed?Promise.reject(new c.a(\"RTCPeerConnection closed\")):Promise.reject(new Error(\"addIceCandidate() not supported\"))}},{key:\"addStream\",value:function(e){if(g.debug(\"addStream()\"),this._closed)throw new c.a(\"RTCPeerConnection closed\");var t=!0,n=!1,r=void 0;try{for(var i,o=e.getTracks()[Symbol.iterator]();!(t=(i=o.next()).done);t=!0){var a=i.value;if(\"ended\"!==a.readyState)if(this._localTrackInfos.has(a.id))g.warn(\"ignoring already handled MediaStreamTrack\");else{var s=new RTCRtpSender(a,this._dtlsTransport);this._localTrackInfos.set(a.id,{rtpSender:s,stream:e})}else g.warn(\"ignoring ended MediaStreamTrack\")}}catch(e){n=!0,r=e}finally{try{t||null==o.return||o.return()}finally{if(n)throw r}}var u=!0,l=!1,d=void 0;try{for(var p,f=this._localTrackInfos[Symbol.iterator]();!(u=(p=f.next()).done);u=!0){var m=h(p.value,2),v=m[0],y=m[1],_=y.rtpSender.track;if(\"ended\"===_.readyState){g.warn(\"addStream() an already handled track was stopped, \"+\"track.id:\".concat(_.id));try{y.rtpSender.stop()}catch(e){g.warn(\"rtpSender.stop() failed:\".concat(e))}this._localTrackInfos.delete(_.id)}else if(y.stream===e&&!e.getTrackById(v)){g.warn(\"addStream() a track in this stream was removed, \"+\"track.id:\".concat(v));try{y.rtpSender.stop()}catch(e){g.warn(\"rtpSender.stop() failed:\".concat(e))}this._localTrackInfos.delete(_.id)}}}catch(e){l=!0,d=e}finally{try{u||null==f.return||f.return()}finally{if(l)throw d}}this._emitNegotiationNeeded()}},{key:\"close\",value:function(){if(!this._closed){this._closed=!0,g.debug(\"close()\"),this._updateAndEmitSignalingStateChange(_.closed);try{this._iceGatherer.close()}catch(e){g.warn(\"iceGatherer.close() failed:\".concat(e))}try{this._iceTransport.stop()}catch(e){g.warn(\"iceTransport.stop() failed:\".concat(e))}try{this._dtlsTransport.stop()}catch(e){g.warn(\"dtlsTransport.stop() failed:\".concat(e))}var e=!0,t=!1,n=void 0;try{for(var r,i=this._localTrackInfos.values()[Symbol.iterator]();!(e=(r=i.next()).done);e=!0){var o=r.value.rtpSender;try{o.stop()}catch(e){g.warn(\"rtpSender.stop() failed:\".concat(e))}}}catch(e){t=!0,n=e}finally{try{e||null==i.return||i.return()}finally{if(t)throw n}}this._localTrackInfos.clear();var a=!0,s=!1,c=void 0;try{for(var u,l=this._remoteTrackInfos.values()[Symbol.iterator]();!(a=(u=l.next()).done);a=!0){var d=u.value.rtpReceiver;try{d.stop()}catch(e){g.warn(\"rtpReceiver.stop() failed:\".concat(e))}}}catch(e){s=!0,c=e}finally{try{a||null==l.return||l.return()}finally{if(s)throw c}}this._remoteTrackInfos.clear(),this._remoteStreams.clear()}}},{key:\"createAnswer\",value:function(e){if(g.debug(\"createAnswer() options:\",e),this._closed)return Promise.reject(new c.a(\"RTCPeerConnection closed\"));if(this.signalingState!==_.haveRemoteOffer)return Promise.reject(new c.a('invalid signalingState \"'.concat(this.signalingState,'\"')));var t=this._createLocalDescription(\"answer\");return Promise.resolve(t)}},{key:\"createDataChannel\",value:function(){throw g.debug(\"createDataChannel()\"),new Error(\"createDataChannel() not supported in Edge\")}},{key:\"createOffer\",value:function(e){var t=this;return g.debug(\"createOffer() options:\",e),this._closed?Promise.reject(new c.a(\"RTCPeerConnection closed\")):this.signalingState!==_.stable?Promise.reject(new c.a('invalid signalingState \"'.concat(this.signalingState,'\"'))):this._iceGatheringCompletePromise.then(function(){return t.hasAttemptedOffer||(t._mids.size||(t._mids=new Map([[\"audio\",\"audio\"],[\"video\",\"video\"]])),t._localCapabilities||(t._localCapabilities=s.g(RTCRtpSender.getCapabilities())),t.hasAttemptedOffer=!0),t._createLocalDescription(\"offer\")})}},{key:\"getLocalStreams\",value:function(){return Array.from(this._localTrackInfos.values()).map(function(e){return e.stream}).filter(function(e,t,n){return n.indexOf(e)===t})}},{key:\"getRemoteStreams\",value:function(){return Array.from(this._remoteStreams.values())}},{key:\"getStats\",value:function(){var e,t,n,r;if(\"function\"==typeof(arguments.length<=0?void 0:arguments[0])?(e=!1,n=arguments.length<=0?void 0:arguments[0],r=arguments.length<=1?void 0:arguments[1]):\"function\"==typeof(arguments.length<=1?void 0:arguments[1])?(e=!1,t=arguments.length<=0?void 0:arguments[0],n=arguments.length<=1?void 0:arguments[1],r=arguments.length<=2?void 0:arguments[2]):(e=!0,t=arguments.length<=0?void 0:arguments[0]),e||r||(r=function(e){g.error(\"getStats() failed: \".concat(e)),g.error(e.stack)}),e)return this._getStats(t);this._getStats(t).then(function(e){return n(e)}).catch(function(e){return r(e)})}},{key:\"removeStream\",value:function(e){if(g.debug(\"removeStream()\"),this._closed)throw new c.a(\"RTCPeerConnection closed\");var t=!0,n=!1,r=void 0;try{for(var i,o=e.getTracks()[Symbol.iterator]();!(t=(i=o.next()).done);t=!0){var a=i.value;if(this._localTrackInfos.has(a.id)){var s=this._localTrackInfos.get(a.id).rtpSender;try{s.stop()}catch(e){g.warn(\"rtpSender.stop() failed:\".concat(e))}this._localTrackInfos.delete(a.id)}}}catch(e){n=!0,r=e}finally{try{t||null==o.return||o.return()}finally{if(n)throw r}}this._emitNegotiationNeeded()}},{key:\"setLocalDescription\",value:function(e){if(!e)throw new TypeError(\"description missing\");return g.debug(\"setLocalDescription() desc:\",e),this._setLocalDescription(e)}},{key:\"setRemoteDescription\",value:function(e){if(!e)throw new TypeError(\"description missing\");return g.debug(\"setRemoteDescription() desc:\",e),this._setRemoteDescription(e)}},{key:\"_createLocalDescription\",value:function(e){var t={},n=this._iceGatherer.getLocalParameters(),r=this._iceGatherer.getLocalCandidates(),i=this._dtlsTransport.getLocalParameters(),o=\"answer\"===e?this._dtlsTransport.getRemoteParameters():null,s=this._localCapabilities,c=this._localTrackInfos;\"offer\"===e&&this._sdpGlobalFields.version++,t.version=0,t.origin={address:\"127.0.0.1\",ipVer:4,netType:\"IN\",sessionId:this._sdpGlobalFields.id,sessionVersion:this._sdpGlobalFields.version,username:\"jitsi-ortc-webrtc-shim\"},t.name=\"-\",t.timing={start:0,stop:0},t.msidSemantic={semantic:\"WMS\",token:\"*\"},t.groups=[{mids:Array.from(this._mids.keys()).join(\" \"),type:\"BUNDLE\"}],t.media=[],t.fingerprint={hash:i.fingerprints[0].value,type:i.fingerprints[0].algorithm};var u=!1,l=!0,p=!1,f=void 0;try{for(var m,v=s.codecs[Symbol.iterator]();!(l=(m=v.next()).done);l=!0){var y=m.value;if(\"video\"===y.kind&&\"rtx\"===y.name){u=!0;break}}}catch(e){p=!0,f=e}finally{try{l||null==v.return||v.return()}finally{if(p)throw f}}var _=!0,S=!1,E=void 0;try{for(var T,C=this._mids[Symbol.iterator]();!(_=(T=C.next()).done);_=!0){var R=h(T.value,2),w=R[0],A=R[1];O.call(this,w,A)}}catch(e){S=!0,E=e}finally{try{_||null==C.return||C.return()}finally{if(S)throw E}}var k=new a.a({type:e,_sdpObject:t});return g.debug(\"_createLocalDescription():\",k),k;function O(i,a){var l={};switch(l.type=a,a){case\"audio\":case\"video\":l.protocol=\"RTP/SAVPF\",l.port=9,l.direction=\"sendrecv\";break;case\"application\":l.protocol=\"DTLS/SCTP\",l.port=0,l.payloads=\"0\",l.direction=\"inactive\"}l.connection={ip:\"127.0.0.1\",version:4},l.mid=i,l.iceUfrag=n.usernameFragment,l.icePwd=n.password,l.candidates=[];var p=!0,h=!1,f=void 0;try{for(var m,v=r[Symbol.iterator]();!(p=(m=v.next()).done);p=!0){var y=m.value,g={component:1};g.foundation=y.foundation,g.ip=y.ip,g.port=y.port,g.priority=y.priority,g.transport=y.protocol.toLowerCase(),g.type=y.type,\"tcp\"===g.transport&&(g.tcptype=y.tcpType),l.candidates.push(g)}}catch(e){h=!0,f=e}finally{try{p||null==v.return||v.return()}finally{if(h)throw f}}if(l.endOfCandidates=\"end-of-candidates\",l.setup=\"offer\"===e?\"actpass\":\"server\"===o.role?\"active\":\"passive\",\"audio\"===a||\"video\"===a){l.rtp=[],l.rtcpFb=[],l.fmtp=[];var _=[],S=!0,E=!1,T=void 0;try{for(var C,R=s.codecs[Symbol.iterator]();!(S=(C=R.next()).done);S=!0){var w=C.value;if(!w.kind||w.kind===a){_.push(w.preferredPayloadType);var A={codec:w.name,payload:w.preferredPayloadType,rate:w.clockRate};if(w.numChannels>1&&(A.encoding=w.numChannels),l.rtp.push(A),w.parameters){for(var k={config:\"\",payload:w.preferredPayloadType},O=Object.keys(w.parameters),I=0;I<O.length;I++){var P=O[I];k.config&&(k.config+=\";\"),k.config+=\"\".concat(P,\"=\").concat(w.parameters[P])}k.config&&l.fmtp.push(k)}var D=!0,N=!1,L=void 0;try{for(var M,x=(w.rtcpFeedback||[])[Symbol.iterator]();!(D=(M=x.next()).done);D=!0){var j=M.value;l.rtcpFb.push({payload:w.preferredPayloadType,subtype:j.parameter||void 0,type:j.type})}}catch(e){N=!0,L=e}finally{try{D||null==x.return||x.return()}finally{if(N)throw L}}}}}catch(e){E=!0,T=e}finally{try{S||null==R.return||R.return()}finally{if(E)throw T}}0===_.length?(l.payloads=\"9\",l.port=0,l.direction=\"inactive\"):l.payloads=_.join(\" \"),l.ssrcs=[],l.ssrcGroups=[];var F=!0,U=!1,J=void 0;try{for(var H,G=c.values()[Symbol.iterator]();!(F=(H=G.next()).done);F=!0){var B=H.value,V=B.rtpSender,q=B.stream.id,K=V.track;if(\"ended\"!==K.readyState&&K.kind===a){B.ssrc||(B.ssrc=d.a.generateSsrc());var W=u&&\"video\"===K.kind;W&&!B.rtxSsrc&&(B.rtxSsrc=B.ssrc+1),l.ssrcs.push({attribute:\"cname\",id:B.ssrc,value:b}),l.ssrcs.push({attribute:\"msid\",id:B.ssrc,value:\"\".concat(q,\" \").concat(K.id)}),l.ssrcs.push({attribute:\"mslabel\",id:B.ssrc,value:q}),l.ssrcs.push({attribute:\"label\",id:B.ssrc,value:K.id}),W&&(l.ssrcs.push({attribute:\"cname\",id:B.rtxSsrc,value:b}),l.ssrcs.push({attribute:\"msid\",id:B.rtxSsrc,value:\"\".concat(q,\" \").concat(K.id)}),l.ssrcs.push({attribute:\"mslabel\",id:B.rtxSsrc,value:q}),l.ssrcs.push({attribute:\"label\",id:B.rtxSsrc,value:K.id}),l.ssrcGroups.push({semantics:\"FID\",ssrcs:\"\".concat(B.ssrc,\" \").concat(B.rtxSsrc)}))}}}catch(e){U=!0,J=e}finally{try{F||null==G.return||G.return()}finally{if(U)throw J}}l.ext=[];var z=!0,$=!1,X=void 0;try{for(var Q,Y=s.headerExtensions[Symbol.iterator]();!(z=(Q=Y.next()).done);z=!0){var Z=Q.value;Z.kind&&Z.kind!==a||l.ext.push({value:Z.preferredId,uri:Z.uri})}}catch(e){$=!0,X=e}finally{try{z||null==Y.return||Y.return()}finally{if($)throw X}}l.rtcpMux=\"rtcp-mux\",l.rtcpRsize=\"rtcp-rsize\"}t.media.push(l)}}},{key:\"_emitAddStream\",value:function(e){if(!this._closed){g.debug('emitting \"addstream\"');var t=new o.a.Event(\"addstream\");t.stream=e,this.dispatchEvent(t)}}},{key:\"_emitBufferedIceCandidates\",value:function(){if(!this._closed){var e=!0,t=!1,n=void 0;try{for(var r,i=this._bufferedIceCandidates[Symbol.iterator]();!(e=(r=i.next()).done);e=!0){var a=r.value;if(a){a.sdpMIndex=this._mids.keys().next().value,g.debug('emitting buffered \"icecandidate\", candidate:',a);var s=new o.a.Event(\"icecandidate\");s.candidate=a,this.dispatchEvent(s)}}}catch(e){t=!0,n=e}finally{try{e||null==i.return||i.return()}finally{if(t)throw n}}this._bufferedIceCandidates=[]}}},{key:\"_emitConnectionStateChange\",value:function(){if(!this._closed||\"closed\"===this.connectionState){g.debug('emitting \"connectionstatechange\", connectionState:',this.connectionState);var e=new o.a.Event(\"connectionstatechange\");this.dispatchEvent(e)}}},{key:\"_emitIceCandidate\",value:function(e){if(!this._closed){var t=null;if(e){var n=this._mids.keys().next().value,r=\"candidate:\".concat(e.foundation,\" 1 \").concat(e.protocol)+\" \".concat(e.priority,\" \").concat(e.ip,\" \").concat(e.port)+\" typ \".concat(e.type);e.relatedAddress&&(r+=\" raddr \".concat(e.relatedAddress)),e.relatedPort&&(r+=\" rport \".concat(e.relatedPort)),\"tcp\"===e.protocol&&(r+=\" tcptype \".concat(e.tcpType)),t={candidate:r,component:1,foundation:e.foundation,ip:e.ip,port:e.port,priority:e.priority,protocol:e.protocol,type:e.type,sdpMIndex:n,sdpMLineIndex:0},\"tcp\"===e.protocol&&(t.tcptype=e.tcpType),e.relatedAddress&&(t.relatedAddress=e.relatedAddress),e.relatedPort&&(t.relatedPort=e.relatedPort)}if(this._localDescription){g.debug('emitting \"icecandidate\", candidate:',t);var i=new o.a.Event(\"icecandidate\");i.candidate=t,this.dispatchEvent(i)}else g.debug(\"buffering gathered ICE candidate:\",t),this._bufferedIceCandidates.push(t)}}},{key:\"_emitIceConnectionStateChange\",value:function(){if(!this._closed||\"closed\"===this.iceConnectionState){g.debug('emitting \"iceconnectionstatechange\", iceConnectionState:',this.iceConnectionState);var e=new o.a.Event(\"iceconnectionstatechange\");this.dispatchEvent(e)}}},{key:\"_emitNegotiationNeeded\",value:function(){if(this.signalingState===_.stable){g.debug('emitting \"negotiationneeded\"');var e=new o.a.Event(\"negotiationneeded\");this.dispatchEvent(e)}}},{key:\"_emitRemoveStream\",value:function(e){if(!this._closed){g.debug('emitting \"removestream\"');var t=new o.a.Event(\"removestream\");t.stream=e,this.dispatchEvent(t)}}},{key:\"_getParametersForRtpReceiver\",value:function(e,t){var n,r=t.ssrc,i=t.rtxSsrc,o=t.cname,a=this._localCapabilities,s={codecs:[],degradationPreference:\"balanced\",encodings:[],headerExtensions:[],muxId:\"\",rtcp:{cname:o,compound:!0,mux:!0,reducedSize:!0}},c=[],u=!0,l=!1,d=void 0;try{for(var p,h=a.codecs[Symbol.iterator]();!(u=(p=h.next()).done);u=!0){var f=p.value;if(f.kind===e&&\"rtx\"!==f.name){n=f.preferredPayloadType,c.push({clockRate:f.clockRate,maxptime:f.maxptime,mimeType:f.mimeType,name:f.name,numChannels:f.numChannels,parameters:f.parameters,payloadType:f.preferredPayloadType,ptime:f.ptime,rtcpFeedback:f.rtcpFeedback});break}}}catch(e){l=!0,d=e}finally{try{u||null==h.return||h.return()}finally{if(l)throw d}}if(i){var m=!0,v=!1,y=void 0;try{for(var g,_=a.codecs[Symbol.iterator]();!(m=(g=_.next()).done);m=!0){var S=g.value;if(S.kind===e&&\"rtx\"===S.name){c.push({clockRate:S.clockRate,mimeType:S.mimeType,name:\"rtx\",parameters:S.parameters,payloadType:S.preferredPayloadType,rtcpFeedback:S.rtcpFeedback});break}}}catch(e){v=!0,y=e}finally{try{m||null==_.return||_.return()}finally{if(v)throw y}}}s.codecs=c;var b={active:!0,codecPayloadType:n,ssrc:r};i&&(b.rtx={ssrc:i}),s.encodings.push(b);var E=!0,T=!1,C=void 0;try{for(var R,w=a.headerExtensions[Symbol.iterator]();!(E=(R=w.next()).done);E=!0){var A=R.value;A.kind===e&&s.headerExtensions.push({encrypt:A.preferredEncrypt,id:A.preferredId,uri:A.uri})}}catch(e){T=!0,C=e}finally{try{E||null==w.return||w.return()}finally{if(T)throw C}}return s}},{key:\"_getParametersForRtpSender\",value:function(e,t){var n,r=t.ssrc,i=t.rtxSsrc,o=b,a=this._localCapabilities,s={codecs:[],degradationPreference:\"balanced\",encodings:[],headerExtensions:[],muxId:\"\",rtcp:{cname:o,compound:!0,mux:!0,reducedSize:!0}},c=[],u=!0,l=!1,d=void 0;try{for(var p,h=a.codecs[Symbol.iterator]();!(u=(p=h.next()).done);u=!0){var f=p.value;if(f.kind===e&&\"rtx\"!==f.name){n=f.preferredPayloadType,c.push({clockRate:f.clockRate,maxptime:f.maxptime,mimeType:f.mimeType,name:f.name,numChannels:f.numChannels,parameters:f.parameters,payloadType:f.preferredPayloadType,ptime:f.ptime,rtcpFeedback:f.rtcpFeedback});break}}}catch(e){l=!0,d=e}finally{try{u||null==h.return||h.return()}finally{if(l)throw d}}if(i){var m=!0,v=!1,y=void 0;try{for(var g,_=a.codecs[Symbol.iterator]();!(m=(g=_.next()).done);m=!0){var S=g.value;if(S.kind===e&&\"rtx\"===S.name){c.push({clockRate:S.clockRate,mimeType:S.mimeType,name:\"rtx\",parameters:S.parameters,payloadType:S.preferredPayloadType,rtcpFeedback:S.rtcpFeedback});break}}}catch(e){v=!0,y=e}finally{try{m||null==_.return||_.return()}finally{if(v)throw y}}}s.codecs=c;var E={active:!0,codecPayloadType:n,ssrc:r};i&&(E.rtx={ssrc:i}),s.encodings.push(E);var T=!0,C=!1,R=void 0;try{for(var w,A=a.headerExtensions[Symbol.iterator]();!(T=(w=A.next()).done);T=!0){var k=w.value;k.kind===e&&s.headerExtensions.push({encrypt:k.preferredEncrypt,id:k.preferredId,uri:k.uri})}}catch(e){C=!0,R=e}finally{try{T||null==A.return||A.return()}finally{if(C)throw R}}return s}},{key:\"_getStats\",value:function(e){if(this._closed)return Promise.reject(new c.a(\"RTCPeerConnection closed\"));var t=this._iceGatherer,n=this._iceTransport,r=[],i=[],o=[],a=!0,s=!1,u=void 0;try{for(var l,d=this._localTrackInfos.values()[Symbol.iterator]();!(a=(l=d.next()).done);a=!0){var p=l.value,h=p.rtpSender;p.sending&&r.push(h)}}catch(e){s=!0,u=e}finally{try{a||null==d.return||d.return()}finally{if(s)throw u}}var f=!0,m=!1,v=void 0;try{for(var y,g=this._remoteTrackInfos.values()[Symbol.iterator]();!(f=(y=g.next()).done);f=!0){var _=y.value.rtpReceiver;i.push(_)}}catch(e){m=!0,v=e}finally{try{f||null==g.return||g.return()}finally{if(m)throw v}}t&&o.push(t.getStats().catch(function(){return null})),n&&(o.push(n.getStats().catch(function(){return null})),\"function\"==typeof n.msGetStats&&o.push(n.msGetStats().catch(function(){return null})));for(var S=function(){var e=r[b],t=\"audio\"===e.track.kind;o.push(e.getStats().then(function(e){if(!t)for(var n=Object.keys(e),r=0;r<n.length;r++){var i=e[n[r]];\"track\"===i.type&&delete i.audioLevel}return e}).catch(function(){return null}))},b=0;b<r.length;b++)S();for(var E=function(){var e=i[T],t=\"audio\"===e.track.kind;o.push(e.getStats().then(function(e){if(!t)for(var n=Object.keys(e),r=0;r<n.length;r++){var i=e[n[r]];\"track\"===i.type&&delete i.audioLevel}return e}).catch(function(){return null}))},T=0;T<i.length;T++)E();return Promise.all(o).then(function(e){var t={},n=!0,r=!1,i=void 0;try{for(var o,a=e[Symbol.iterator]();!(n=(o=a.next()).done);n=!0){var s=o.value;if(s)for(var c=Object.keys(s),u=0;u<c.length;u++){var l=c[u];t[l]=s[l]}}}catch(e){r=!0,i=e}finally{try{n||null==a.return||a.return()}finally{if(r)throw i}}return t})}},{key:\"_handleLocalInitialAnswer\",value:function(e){g.debug(\"_handleLocalInitialAnswer(), desc:\",e);var t=e.sdpObject;this._localCapabilities=s.a(t),g.debug(\"local capabilities:\",this._localCapabilities)}},{key:\"_handleLocalReAnswer\",value:function(e){g.debug(\"_handleLocalReAnswer(), desc:\",e);var t=e.sdpObject;this._localCapabilities=s.a(t),g.debug(\"local capabilities:\",this._localCapabilities)}},{key:\"_handleRemoteInitialOffer\",value:function(e){g.debug(\"_handleRemoteInitialOffer(), desc:\",e);var t=e.sdpObject;this._mids=s.e(t);var n=s.a(t);g.debug(\"remote capabilities:\",n),this._localCapabilities=s.g(n),this._startIceAndDtls(e)}},{key:\"_handleRemoteReOffer\",value:function(e){g.debug(\"_handleRemoteReOffer(), desc:\",e);var t=e.sdpObject;this._mids=s.e(t);var n=s.a(t);g.debug(\"remote capabilities:\",n),this._localCapabilities=s.g(n)}},{key:\"_receiveMedia\",value:function(){g.debug(\"_receiveMedia()\");var e=new Set(this._remoteTrackInfos.keys()),t=s.f(this._remoteDescription.sdpObject),n=new Map,r=new Map,i=new Map;g.debug(\"_receiveMedia() remote track infos:\",t);var o=!0,a=!1,c=void 0;try{for(var u,l=t[Symbol.iterator]();!(o=(u=l.next()).done);o=!0){var d=h(u.value,2),p=d[0],f=d[1];if(!e.has(p)){g.debug(\"_receiveMedia() new remote track, ssrc:\".concat(p)),this._remoteTrackInfos.set(p,f);var m=f.kind,v=f.rtxSsrc,y=f.streamId,_=f.trackId,S=f.cname,b=!this._remoteStreams.has(y),E=void 0;b?(g.debug(\"_receiveMedia() new remote stream, id:\".concat(y)),(E=new MediaStream).jitsiRemoteId=y,n.set(y,E),this._remoteStreams.set(y,E)):E=this._remoteStreams.get(y);var T=new RTCRtpReceiver(this._dtlsTransport,m),C=this._getParametersForRtpReceiver(m,{ssrc:p,rtxSsrc:v,cname:S});f.track=T.track,T.onerror=function(e){g.error('rtpReceiver \"error\" event, event:'),g.error(e)},f.stream=E,f.rtpReceiver=T,g.debug(\"calling rtpReceiver.receive(), parameters:\",C);try{T.receive(C);var R=f.track;R.jitsiRemoteId=_,E.addTrack(R),n.has(y)||r.set(R,E)}catch(e){g.error(\"rtpReceiver.receive() failed:\".concat(e.message)),g.error(e)}}}}catch(e){a=!0,c=e}finally{try{o||null==l.return||l.return()}finally{if(a)throw c}}var w=!0,A=!1,k=void 0;try{for(var O,I=e[Symbol.iterator]();!(w=(O=I.next()).done);w=!0){p=O.value;if(!t.has(p)){g.debug(\"_receiveMedia() remote track removed, ssrc:\".concat(p));var P=(f=this._remoteTrackInfos.get(p)).stream,D=f.track,N=f.rtpReceiver;try{N.stop()}catch(e){g.warn(\"rtpReceiver.stop() failed:\".concat(e))}i.set(D,P),P.removeTrack(D),this._remoteTrackInfos.delete(p)}}}catch(e){A=!0,k=e}finally{try{w||null==I.return||I.return()}finally{if(A)throw k}}var L=!0,M=!1,x=void 0;try{for(var j,F=r[Symbol.iterator]();!(L=(j=F.next()).done);L=!0){var U=h(j.value,2),J=U[0],H=U[1],G=new Event(\"addtrack\");G.track=J,H.dispatchEvent(G)}}catch(e){M=!0,x=e}finally{try{L||null==F.return||F.return()}finally{if(M)throw x}}var B=!0,V=!1,q=void 0;try{for(var K,W=i[Symbol.iterator]();!(B=(K=W.next()).done);B=!0){var z=h(K.value,2),$=z[0],X=z[1],Q=new Event(\"removetrack\");Q.track=$,X.dispatchEvent(Q)}}catch(e){V=!0,q=e}finally{try{B||null==W.return||W.return()}finally{if(V)throw q}}var Y=!0,Z=!1,ee=void 0;try{for(var te,ne=n.values()[Symbol.iterator]();!(Y=(te=ne.next()).done);Y=!0){var re=te.value;0===re.getTracks().length?(g.warn(\"ignoring new stream for which no track could be added\"),n.delete(re.jitsiRemoteId),this._remoteStreams.delete(re.jitsiRemoteId)):this._emitAddStream(re)}}catch(e){Z=!0,ee=e}finally{try{Y||null==ne.return||ne.return()}finally{if(Z)throw ee}}var ie=!0,oe=!1,ae=void 0;try{for(var se,ce=this._remoteStreams[Symbol.iterator]();!(ie=(se=ce.next()).done);ie=!0){var ue=h(se.value,2),le=ue[0],de=ue[1];de.getTracks().length>0||(this._remoteStreams.delete(le),this._emitRemoveStream(de))}}catch(e){oe=!0,ae=e}finally{try{ie||null==ce.return||ce.return()}finally{if(oe)throw ae}}}},{key:\"_sendMedia\",value:function(){g.debug(\"_sendMedia()\");var e=!0,t=!1,n=void 0;try{for(var r,i=this._localTrackInfos.values()[Symbol.iterator]();!(e=(r=i.next()).done);e=!0){var o=r.value;if(!o.sending){var a=o.rtpSender,s=o.ssrc,c=o.rtxSsrc,u=a.track.kind,l=this._getParametersForRtpSender(u,{ssrc:s,rtxSsrc:c});g.debug(\"calling rtpSender.send(), parameters:\",l);try{a.send(l),o.sending=!0}catch(e){g.error(\"rtpSender.send() failed:\".concat(e.message)),g.error(e)}}}}catch(e){t=!0,n=e}finally{try{e||null==i.return||i.return()}finally{if(t)throw n}}}},{key:\"_setDtlsTransport\",value:function(e){var t=this,n=new RTCDtlsTransport(e);n.onstatechange=function(){g.debug('dtlsTransport \"statechange\" event, '+\"state:\".concat(n.state)),t._emitConnectionStateChange()},n.ondtlsstatechange=function(){g.debug('dtlsTransport \"dtlsstatechange\" event, '+\"state:\".concat(n.state)),t._emitConnectionStateChange()},n.onerror=function(e){var n;e.message?n=e.message:e.error&&(n=e.error.message),g.error('dtlsTransport \"error\" event, message:'.concat(n)),t._emitConnectionStateChange()},this._dtlsTransport=n}},{key:\"_setIceGatherer\",value:function(e){var t=this,n={gatherPolicy:e.iceTransportPolicy||\"all\",iceServers:e.iceServers},r=new RTCIceGatherer(n);r.onstatechange=function(){g.debug('iceGatherer \"statechange\" event, state:'.concat(r.state)),t._updateAndEmitIceGatheringStateChange(r.state)},r.onlocalcandidate=function(e){var n=e.candidate,r=e.complete;g.debug('iceGatherer \"localcandidate\" event, candidate:',n),r||!n||0===Object.keys(n).length?(n=null,t._updateAndEmitIceGatheringStateChange(S.complete),t._resolveLocalIceGatheringPromise(),t._emitIceCandidate(null)):t._emitIceCandidate(n)},r.onerror=function(e){var t=e.errorCode,n=e.errorText;g.error('iceGatherer \"error\" event, errorCode:'.concat(t,\", \")+\"errorText:\".concat(n))};try{r.gather()}catch(e){g.warn(\"iceGatherer.gather() failed:\".concat(e))}this._iceGatherer=r}},{key:\"_setIceTransport\",value:function(e){var t=this,n=new RTCIceTransport(e);n.onstatechange=function(){g.debug('iceTransport \"statechange\" event, '+\"state:\".concat(n.state)),t._emitIceConnectionStateChange()},n.onicestatechange=function(){g.debug('iceTransport \"icestatechange\" event, '+\"state:\".concat(n.state)),\"completed\"===n.state&&g.debug(\"nominated candidate pair:\",n.getNominatedCandidatePair()),t._emitIceConnectionStateChange()},n.oncandidatepairchange=function(e){g.debug('iceTransport \"candidatepairchange\" event, '+\"pair:\".concat(e.pair))},this._iceTransport=n}},{key:\"_setLocalDescription\",value:function(e){var t,n=this;if(this._closed)return Promise.reject(new c.a(\"RTCPeerConnection closed\"));try{t=new a.a(e)}catch(e){return Promise.reject(new TypeError(\"invalid RTCSessionDescriptionInit: \".concat(e)))}switch(e.type){case\"offer\":return this.signalingState!==_.stable?Promise.reject(new c.a('invalid signalingState \"'.concat(this.signalingState,'\"'))):Promise.resolve().then(function(){var e=t.sdpObject;n._localCapabilities=s.a(e),n._localDescription=t,n._updateAndEmitSignalingStateChange(_.haveLocalOffer)}).catch(function(e){throw g.error(\"setLocalDescription() failed: \".concat(e.message)),g.error(e),e});case\"answer\":if(this.signalingState!==_.haveRemoteOffer)return Promise.reject(new c.a('invalid signalingState \"'.concat(this.signalingState,'\"')));var r=Boolean(!this._localDescription);return Promise.resolve().then(function(){return r?n._handleLocalInitialAnswer(t):n._handleLocalReAnswer(t)}).then(function(){g.debug(\"setLocalDescription() succeed\"),n._localDescription=t,n._updateAndEmitSignalingStateChange(_.stable),r&&n._emitBufferedIceCandidates(),n._sendMedia(),n._receiveMedia()}).catch(function(e){throw g.error(\"setLocalDescription() failed: \".concat(e.message)),g.error(e),e});default:return Promise.reject(new TypeError('unsupported description.type \"'.concat(e.type,'\"')))}}},{key:\"_setRemoteDescription\",value:function(e){var t,n=this;if(this._closed)return Promise.reject(new c.a(\"RTCPeerConnection closed\"));try{t=new a.a(e)}catch(e){return Promise.reject(new TypeError(\"invalid RTCSessionDescriptionInit: \".concat(e)))}switch(e.type){case\"offer\":if(this.signalingState!==_.stable)return Promise.reject(new c.a('invalid signalingState \"'.concat(this.signalingState,'\"')));var r=Boolean(!this._remoteDescription);return Promise.resolve().then(function(){return r?n._handleRemoteInitialOffer(t):n._handleRemoteReOffer(t)}).then(function(){g.debug(\"setRemoteDescription() succeed\"),n._remoteDescription=t,n._updateAndEmitSignalingStateChange(_.haveRemoteOffer)}).catch(function(e){throw g.error(\"setRemoteDescription() failed: \".concat(e)),e});case\"answer\":return this.signalingState!==_.haveLocalOffer?Promise.reject(new c.a('invalid signalingState \"'.concat(this.signalingState,'\"'))):Promise.resolve().then(function(){n._remoteDescription=t,n._updateAndEmitSignalingStateChange(_.stable)}).catch(function(e){throw g.error(\"setRemoteDescription() failed: \".concat(e)),e});default:return Promise.reject(new TypeError('unsupported description.type \"'.concat(e.type,'\"')))}}},{key:\"_startIceAndDtls\",value:function(e){var t=e.sdpObject,n=s.d(t),r=s.c(t),i=s.b(t);switch(e.type){case\"offer\":this._iceTransport.start(this._iceGatherer,n,\"controlled\");break;case\"answer\":this._iceTransport.start(this._iceGatherer,n,\"controlling\")}var o=!0,a=!1,c=void 0;try{for(var u,l=r[Symbol.iterator]();!(o=(u=l.next()).done);o=!0){var d=u.value;0!==d.port&&9!==d.port&&this._iceTransport.addRemoteCandidate(d)}}catch(e){a=!0,c=e}finally{try{o||null==l.return||l.return()}finally{if(a)throw c}}switch(this._iceTransport.addRemoteCandidate({}),e.type){case\"offer\":i.role=\"server\";break;case\"answer\":i.role=\"client\"}this._dtlsTransport.start(i)}},{key:\"_updateAndEmitIceGatheringStateChange\",value:function(e){if(!this._closed&&e!==this.iceGatheringState){this._iceGatheringState=e,g.debug('emitting \"icegatheringstatechange\", iceGatheringState:',this.iceGatheringState);var t=new o.a.Event(\"icegatheringstatechange\");this.dispatchEvent(t)}}},{key:\"_updateAndEmitSignalingStateChange\",value:function(e){if(e!==this.signalingState){this._signalingState=e,g.debug('emitting \"signalingstatechange\", signalingState:',this.signalingState);var t=new o.a.Event(\"signalingstatechange\");this.dispatchEvent(t)}}},{key:\"connectionState\",get:function(){return this._dtlsTransport.state}},{key:\"iceConnectionState\",get:function(){return this._iceTransport.state}},{key:\"iceGatheringState\",get:function(){return this._iceGatheringState}},{key:\"localDescription\",get:function(){return this._localDescription}},{key:\"remoteDescription\",get:function(){return this._remoteDescription}},{key:\"signalingState\",get:function(){return this._signalingState}}])&&f(n.prototype,r),i&&f(n,i),t}()}).call(this,\"modules/RTC/ortc/RTCPeerConnection.js\")},function(e,t,n){\"use strict\";(function(e){n.d(t,\"a\",function(){return w});var r=n(4),i=n(16),o=n.n(i),a=n(10),s=n(101),c=n(9),u=n(102),l=n(13),d=n(11),p=n(3),h=n(7),f=n.n(h),m=n(103),v=n(18),y=n(104),g=n(28),_=n(5),S=n(40);function b(e){return function(e){if(Array.isArray(e)){for(var t=0,n=new Array(e.length);t<e.length;t++)n[t]=e[t];return n}}(e)||function(e){if(Symbol.iterator in Object(e)||\"[object Arguments]\"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError(\"Invalid attempt to spread non-iterable instance\")}()}function E(e){return(E=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}var T=Object(r.getLogger)(e),C=3,R=[\"1\",\"2\",\"3\"];function w(e,t,r,i,o,a,s){var c=this;this.audioTransferActive=!0,this.videoTransferActive=!0,this.rtc=e,this.id=t,this.isP2P=a,this.remoteTracks=new Map,this.localTracks=new Map,this._addedStreams=[],this.localSSRCs=new Map,this.localUfrag=null,this.remoteUfrag=null,this.signalingLayer=r,this._peerVideoTypeChanged=this._peerVideoTypeChanged.bind(this),this.signalingLayer.on(S.b,this._peerVideoTypeChanged),this._peerMutedChanged=this._peerMutedChanged.bind(this),this.signalingLayer.on(S.a,this._peerMutedChanged),this.options=s,this.peerconnection=new d.a.RTCPeerConnectionType(i,o),this.updateLog=[],this.stats={},this.statsinterval=null,this.maxstats=s.maxstats;var l=n(146).Interop;this.interop=new l;var p=n(150);this.simulcast=new p({numOfLayers:C,explodeRemoteSimulcast:!1}),this.sdpConsistency=new y.a(this.toString()),this.localSdpMunger=new u.a(this),this.eventEmitter=e.eventEmitter,this.rtxModifier=new m.a,this.trace=function(e,t){T.debug(e,t),c.updateLog.push({time:new Date,type:e,value:t||\"\"})},this.onicecandidate=null,this.peerconnection.onicecandidate=function(e){c.trace(\"onicecandidate\",JSON.stringify(e.candidate,null,\" \")),null!==c.onicecandidate&&c.onicecandidate(e)},this.peerconnection.onaddstream=function(e){return c._remoteStreamAdded(e.stream)},this.peerconnection.onremovestream=function(e){return c._remoteStreamRemoved(e.stream)},this.onsignalingstatechange=null,this.peerconnection.onsignalingstatechange=function(e){c.trace(\"onsignalingstatechange\",c.signalingState),null!==c.onsignalingstatechange&&c.onsignalingstatechange(e)},this.oniceconnectionstatechange=null,this.peerconnection.oniceconnectionstatechange=function(e){c.trace(\"oniceconnectionstatechange\",c.iceConnectionState),null!==c.oniceconnectionstatechange&&c.oniceconnectionstatechange(e)},this.onnegotiationneeded=null,this.peerconnection.onnegotiationneeded=function(e){c.trace(\"onnegotiationneeded\"),null!==c.onnegotiationneeded&&c.onnegotiationneeded(e)},this.ondatachannel=null,this.peerconnection.ondatachannel=function(e){c.trace(\"ondatachannel\"),null!==c.ondatachannel&&c.ondatachannel(e)},this.maxstats&&(this.statsinterval=window.setInterval(function(){c.getStats(function(e){if(e.result&&\"function\"==typeof e.result)for(var t=e.result(),n=function(e){var n=t[e];n.names().forEach(function(e){c._processStat(n,e,n.stat(e))})},r=0;r<t.length;++r)n(r);else e.forEach(function(e){return c._processStat(e,\"\",e)})},function(){})},1e3)),T.info(\"Create new \".concat(this))}w.prototype._processStat=function(e,t,n){var r=\"\".concat(e.id,\"-\").concat(t),i=this.stats[r],o=new Date;i||(this.stats[r]=i={startTime:o,endTime:o,values:[],times:[]}),i.values.push(n),i.times.push(o.getTime()),i.values.length>this.maxstats&&(i.values.shift(),i.times.shift()),i.endTime=o};var A=function(e){return null==e?\"\":\"type: \".concat(e.type,\"\\r\\n\").concat(e.sdp)};w.prototype.getConnectionState=function(){var e=this.peerconnection.iceConnectionState;return\"completed\"===e?\"connected\":e},w.prototype._getDesiredMediaDirection=function(e){var t=!0;return e===c.a?t=this.audioTransferActive:e===c.b&&(t=this.videoTransferActive),t?this.hasAnyTracksOfType(e)?\"sendrecv\":\"recvonly\":\"inactive\"},w.prototype.isSimulcastOn=function(){return!this.options.disableSimulcast&&p.a.supportsSimulcast()&&(!p.a.isFirefox()||this.options.enableFirefoxSimulcast)},w.prototype._peerVideoTypeChanged=function(e,t){if(e){var n=this.getRemoteTracks(e,c.b);n.length&&n[0]._setVideoType(t)}else T.error(\"No endpointID on peerVideoTypeChanged \".concat(this))},w.prototype._peerMutedChanged=function(e,t,n){if(e){var r=this.getRemoteTracks(e,t);r.length&&r[0].setMute(n)}else T.error(\"On peerMuteChanged - no endpoint ID\")},w.prototype.getLocalTracks=function(e){var t=Array.from(this.localTracks.values());return void 0!==e&&(t=t.filter(function(t){return t.getType()===e})),t},w.prototype.hasAnyTracksOfType=function(e){if(!e)throw new Error('\"mediaType\" is required');return this.getLocalTracks(e).length>0},w.prototype.getRemoteTracks=function(e,t){var n=[],r=e?[e]:this.remoteTracks.keys(),i=!0,o=!1,a=void 0;try{for(var s,c=r[Symbol.iterator]();!(i=(s=c.next()).done);i=!0){var u=s.value,l=this.remoteTracks.get(u);if(l){var d=!0,p=!1,h=void 0;try{for(var f,m=l.keys()[Symbol.iterator]();!(d=(f=m.next()).done);d=!0){var v=f.value;if(!t||t===v){var y=l.get(v);y&&n.push(y)}}}catch(e){p=!0,h=e}finally{try{d||null==m.return||m.return()}finally{if(p)throw h}}}}}catch(e){o=!0,a=e}finally{try{i||null==c.return||c.return()}finally{if(o)throw a}}return n},w.prototype.getTrackBySSRC=function(e){if(\"number\"!=typeof e)throw new Error(\"SSRC \".concat(e,\" is not a number\"));var t=!0,n=!1,r=void 0;try{for(var i,o=this.localTracks.values()[Symbol.iterator]();!(t=(i=o.next()).done);t=!0){var a=i.value;if(this.getLocalSSRC(a)===e)return a}}catch(e){n=!0,r=e}finally{try{t||null==o.return||o.return()}finally{if(n)throw r}}var s=!0,c=!1,u=void 0;try{for(var l,d=this.getRemoteTracks()[Symbol.iterator]();!(s=(l=d.next()).done);s=!0){var p=l.value;if(p.getSSRC()===e)return p}}catch(e){c=!0,u=e}finally{try{s||null==d.return||d.return()}finally{if(c)throw u}}return null},w.prototype.getSsrcByTrackId=function(e){var t=function(t){return t.getTrack().id===e},n=this.getLocalTracks().find(t);if(n)return this.getLocalSSRC(n);var r=this.getRemoteTracks().find(t);return r?r.getSSRC():null},w.prototype._remoteStreamAdded=function(e){var t=this,n=l.a.getStreamID(e);if(l.a.isUserStreamById(n)){(p.a.isChromiumBased()||p.a.isEdge())&&(e.onaddtrack=function(n){t._remoteTrackAdded(e,n.track)},e.onremovetrack=function(n){t._remoteTrackRemoved(e,n.track)});var r=e.getAudioTracks(),i=!0,o=!1,a=void 0;try{for(var s,c=r[Symbol.iterator]();!(i=(s=c.next()).done);i=!0){var u=s.value;this._remoteTrackAdded(e,u)}}catch(e){o=!0,a=e}finally{try{i||null==c.return||c.return()}finally{if(o)throw a}}var d=e.getVideoTracks(),h=!0,f=!1,m=void 0;try{for(var v,y=d[Symbol.iterator]();!(h=(v=y.next()).done);h=!0){var g=v.value;this._remoteTrackAdded(e,g)}}catch(e){f=!0,m=e}finally{try{h||null==y.return||y.return()}finally{if(f)throw m}}}else T.info(\"\".concat(this,\" ignored remote 'stream added' event for non-user stream\")+\"id: \".concat(n))},w.prototype._remoteTrackAdded=function(e,t){var n=l.a.getStreamID(e),r=t.kind;if(T.info(\"\".concat(this,\" remote track added:\"),n,r),r){var i=new v.a(this.remoteDescription.sdp).media.filter(function(e){return e.startsWith(\"m=\".concat(r))});if(i.length){var o=_.a.findLines(i[0],\"a=ssrc:\");if((o=o.filter(function(e){return-1!==e.indexOf(\"msid:\".concat(n))})).length){var s=o[0].substring(7).split(\" \")[0],c=Number(s),u=this.signalingLayer.getSSRCOwner(c);if(isNaN(c)||c<0)a.callErrorHandler(new Error(\"Invalid SSRC: \".concat(s,\" for remote track, msid: \").concat(n,\" media type: \").concat(r)));else if(u){T.log(\"\".concat(this,\" associated ssrc\"),u,c);var d=this.signalingLayer.getPeerMediaInfo(u,r);if(d){var p=d.muted,h=d.videoType;this._createRemoteTrack(u,e,t,r,h,c,p)}else a.callErrorHandler(new Error(\"\".concat(this,\": no peer media info available for \").concat(u)))}else a.callErrorHandler(new Error(\"No SSRC owner known for: \".concat(c,\" for remote track, msid: \").concat(n,\" media type: \").concat(r)))}else a.callErrorHandler(new Error(\"No SSRC lines for streamId \".concat(n,\" for remote track, media type: \").concat(r)))}else a.callErrorHandler(new Error(\"No media lines for type \".concat(r,\" found in remote SDP for remote track: \").concat(n)))}else a.callErrorHandler(new Error(\"MediaType undefined for remote track, stream id: \".concat(n)))},w.prototype._createRemoteTrack=function(e,t,n,r,i,o,a){var c=this.remoteTracks.get(e);c||(c=new Map,this.remoteTracks.set(e,c));var u=c.get(r);if(u&&u.getTrack()===n)T.info(\"\".concat(this,\" ignored duplicated remote track added event for: \")+\"\".concat(e,\", \").concat(r));else{u&&T.error(\"\".concat(this,\" overwriting remote track for\")+\"\".concat(e,\" \").concat(r));var l=new s.a(this.rtc,this.rtc.conference,e,t,n,r,i,o,a,this.isP2P);c.set(r,l),this.eventEmitter.emit(f.a.REMOTE_TRACK_ADDED,l)}},w.prototype._remoteStreamRemoved=function(e){if(l.a.isUserStream(e)){var t=e.getVideoTracks(),n=!0,r=!1,i=void 0;try{for(var o,a=t[Symbol.iterator]();!(n=(o=a.next()).done);n=!0){var s=o.value;this._remoteTrackRemoved(e,s)}}catch(e){r=!0,i=e}finally{try{n||null==a.return||a.return()}finally{if(r)throw i}}var c=e.getAudioTracks(),u=!0,d=!1,p=void 0;try{for(var h,f=c[Symbol.iterator]();!(u=(h=f.next()).done);u=!0){var m=h.value;this._remoteTrackRemoved(e,m)}}catch(e){d=!0,p=e}finally{try{u||null==f.return||f.return()}finally{if(d)throw p}}}else{var v=l.a.getStreamID(e);T.info(\"Ignored remote 'stream removed' event for non-user stream \".concat(v))}},w.prototype._remoteTrackRemoved=function(e,t){var n=l.a.getStreamID(e),r=t&&l.a.getTrackID(t);T.info(\"\".concat(this,\" - remote track removed: \").concat(n,\", \").concat(r)),n?r?this._removeRemoteTrackById(n,r)||T.warn(\"\".concat(this,\" Removed track not found for msid: \").concat(n,\",\\n             track id: \").concat(r)):a.callErrorHandler(new Error(\"\".concat(this,\" remote track removal failed - no track ID\"))):a.callErrorHandler(new Error(\"\".concat(this,\" remote track removal failed - no stream ID\")))},w.prototype._getRemoteTrackById=function(e,t){var n=!0,r=!1,i=void 0;try{for(var o,a=this.remoteTracks.values()[Symbol.iterator]();!(n=(o=a.next()).done);n=!0){var s=o.value,c=!0,u=!1,l=void 0;try{for(var d,p=s.values()[Symbol.iterator]();!(c=(d=p.next()).done);c=!0){var h=d.value;if(h.getStreamId()==e&&h.getTrackId()==t)return h}}catch(e){u=!0,l=e}finally{try{c||null==p.return||p.return()}finally{if(u)throw l}}}}catch(e){r=!0,i=e}finally{try{n||null==a.return||a.return()}finally{if(r)throw i}}},w.prototype.removeRemoteTracks=function(e){var t=[],n=this.remoteTracks.get(e);if(n){var r=n.get(c.a),i=n.get(c.b);r&&t.push(r),i&&t.push(i),this.remoteTracks.delete(e)}return T.debug(\"\".concat(this,\" removed remote tracks for \").concat(e,\" count: \").concat(t.length)),t},w.prototype._removeRemoteTrack=function(e){e.dispose();var t=e.getParticipantId(),n=this.remoteTracks.get(t);n?n.delete(e.getType())||T.error(\"Failed to remove \".concat(e,\" - type mapping messed up ?\")):T.error(\"removeRemoteTrack: no remote tracks map for \".concat(t)),this.eventEmitter.emit(f.a.REMOTE_TRACK_REMOVED,e)},w.prototype._removeRemoteTrackById=function(e,t){var n=this._getRemoteTrackById(e,t);return n&&this._removeRemoteTrack(n),n};var k=function(e){if(\"object\"!==E(e)||null===e||\"string\"!=typeof e.sdp)return T.warn(\"An empty description was passed as an argument.\"),e;var t=n(16),r=t.parse(e.sdp);void 0!==r&&void 0!==r.media&&Array.isArray(r.media)&&r.media.forEach(function(e){var t=[],n=[];if(void 0!==e.ssrcGroups&&Array.isArray(e.ssrcGroups)&&e.ssrcGroups.forEach(function(e){void 0!==e.semantics&&\"FID\"===e.semantics&&void 0!==e.ssrcs&&t.push(Number(e.ssrcs.split(\" \")[0]))}),Array.isArray(e.ssrcs)){var r;for(r=0;r<e.ssrcs.length;r++)\"object\"===E(e.ssrcs[r])&&void 0!==e.ssrcs[r].id&&t.indexOf(e.ssrcs[r].id)>=0&&(n.push(e.ssrcs[r]),delete e.ssrcs[r]);for(r=0;r<e.ssrcs.length;r++)void 0!==e.ssrcs[r]&&n.push(e.ssrcs[r]);e.ssrcs=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];if(!p.a.isChrome()||!p.a.isVersionGreaterThan(70))return e;var t=b(e);return e.filter(function(e){return\"mslabel\"===e.attribute&&\"-\"===e.value}).map(function(e){return e.id}).forEach(function(e){var n=t.find(function(t){return t.id===e&&\"cname\"===t.attribute});n.value=\"recvonly-\".concat(e),(t=t.filter(function(t){return t.id!==e})).push(n)}),t}(n)}});var i=t.write(r);return new RTCSessionDescription({type:e.type,sdp:i})};w.prototype.getLocalSSRC=function(e){var t=this._getSSRC(e.rtcId);return t&&t.ssrcs[0]},w.prototype._injectSsrcGroupForUnifiedSimulcast=function(e){var t=o.a.parse(e.sdp),n=t.media.find(function(e){return\"video\"===e.type});if(n.simulcast_03){var r=[];if(n.ssrcs.forEach(function(e){\"msid\"===e.attribute&&r.push(e.id)}),n.ssrcGroups=n.ssrcGroups||[],n.ssrcGroups.find(function(e){return\"SIM\"===e.semantics}))return e;n.ssrcGroups.push({semantics:\"SIM\",ssrcs:r.join(\" \")})}return new RTCSessionDescription({type:e.type,sdp:o.a.write(t)})};var O={signalingState:function(){return this.peerconnection.signalingState},iceConnectionState:function(){return this.peerconnection.iceConnectionState},localDescription:function(){var e=this.peerconnection.localDescription;return e?(this.trace(\"getLocalDescription::preTransform\",A(e)),p.a.usesUnifiedPlan()&&(e=this.interop.toPlanB(e),this.trace(\"getLocalDescription::postTransform (Plan B)\",A(e)),e=this._injectSsrcGroupForUnifiedSimulcast(e),this.trace(\"getLocalDescription::postTransform (inject ssrc group)\",A(e))),p.a.doesVideoMuteByStreamRemove()&&(e=this.localSdpMunger.maybeAddMutedLocalVideoTracksToSDP(e),T.debug(\"getLocalDescription::postTransform (munge local SDP)\",e)),e=function(e){if(!e)throw new Error(\"No local description passed in.\");var t=new g.a(e.sdp),n=t.selectMedia(\"audio\"),r=!1;n&&\"sendrecv\"!==n.direction&&(n.direction=\"sendrecv\",r=!0);var i=t.selectMedia(\"video\");return i&&\"sendrecv\"!==i.direction&&(i.direction=\"sendrecv\",r=!0),r?new RTCSessionDescription({type:e.type,sdp:t.toRawSDP()}):e}(e),e=this.localSdpMunger.transformStreamIdentifiers(e)):(T.debug(\"getLocalDescription no localDescription found\"),{})},remoteDescription:function(){var e=this.peerconnection.remoteDescription;return this.trace(\"getRemoteDescription::preTransform\",A(e)),p.a.usesUnifiedPlan()&&(e=this.interop.toPlanB(e),this.trace(\"getRemoteDescription::postTransform (Plan B)\",A(e))),e||{}}};Object.keys(O).forEach(function(e){Object.defineProperty(w.prototype,e,{get:O[e]})}),w.prototype._getSSRC=function(e){return this.localSSRCs.get(e)},w.prototype.addTrack=function(e){var t=e.rtcId;if(T.info(\"add \".concat(e,\" to: \").concat(this)),this.localTracks.has(t))T.error(\"\".concat(e,\" is already in \").concat(this));else{this.localTracks.set(t,e);var n=e.getOriginalStream();if(n?this._addStream(n):(!p.a.doesVideoMuteByStreamRemove()||e.isAudioTrack()||e.isVideoTrack()&&!e.isMuted())&&T.error(\"\".concat(this,\" no WebRTC stream for: \").concat(e)),p.a.doesVideoMuteByStreamRemove()&&e.isVideoTrack()&&e.isMuted()){var r=this.generateNewStreamSSRCInfo(e);this.sdpConsistency.setPrimarySsrc(r.ssrcs[0]);var i=r.groups.find(function(e){return\"SIM\"===e.semantics});i&&this.simulcast.setSsrcCache(i.ssrcs);var o=r.groups.filter(function(e){return\"FID\"===e.semantics});if(o){var a=new Map;o.forEach(function(e){var t=e.ssrcs[0],n=e.ssrcs[1];a.set(t,n)}),this.rtxModifier.setSsrcCache(a)}}}},w.prototype.addTrackUnmute=function(e){if(!this._assertTrackBelongs(\"addTrackUnmute\",e))return!1;T.info(\"Adding \".concat(e,\" as unmute to \").concat(this));var t=e.getOriginalStream();return t?(this._addStream(t),!0):(T.error(\"Unable to add \".concat(e,\" as unmute to \").concat(this,\" - no WebRTC stream\")),!1)},w.prototype._addStream=function(e){this.peerconnection.addStream(e),this._addedStreams.push(e)},w.prototype._removeStream=function(e){p.a.supportsRtpSender()?this._handleSenderRemoveStream(e):this.peerconnection.removeStream(e),this._addedStreams=this._addedStreams.filter(function(t){return t!==e})},w.prototype._assertTrackBelongs=function(e,t){var n=this.localTracks.has(t.rtcId);return n||T.error(\"\".concat(e,\": \").concat(t,\" does not belong to \").concat(this)),n},w.prototype.isMediaStreamInPc=function(e){return this._addedStreams.indexOf(e)>-1},w.prototype.removeTrack=function(e){var t=e.getOriginalStream();this.trace(\"removeStream\",e.rtcId,t?t.id:void 0),this._assertTrackBelongs(\"removeStream\",e)&&(this.localTracks.delete(e.rtcId),this.localSSRCs.delete(e.rtcId),t&&(p.a.supportsRtpSender()?this._handleSenderRemoveStream(t):this.peerconnection.removeStream(t)))},w.prototype.findSenderByStream=function(e){var t=e.getTracks()[0];if(t)return this.peerconnection.getSenders().find(function(e){return e.track===t});T.error(\"Cannot find sender: no tracks.\")},w.prototype.replaceTrack=function(e,t){var n=this;if(p.a.supportsRtpSender()&&e&&t){var r=this.findSenderByStream(e.getOriginalStream()),i=t.getOriginalStream();if(r&&i){var o=i.getTracks()[0];if(o)return r.replaceTrack(o,i).then(function(){var r=n.localSSRCs.get(e.rtcId);return n.localTracks.delete(e.rtcId),n.localSSRCs.delete(e.rtcId),n._addedStreams=n._addedStreams.filter(function(e){return e!==i}),n.localTracks.set(t.rtcId,t),t.storedMSID=e.storedMSID,n._addedStreams.push(i),n.localSSRCs.set(t.rtcId,r),n.eventEmitter.emit(f.a.LOCAL_TRACK_SSRC_UPDATED,t,I(r)),!1})}}return e&&this.removeTrack(e),t&&this.addTrack(t),Promise.resolve(!0)},w.prototype.removeTrackMute=function(e){var t=e.getOriginalStream();return this.trace(\"removeStreamMute\",e.rtcId,t?t.id:null),!!this._assertTrackBelongs(\"removeStreamMute\",e)&&(t?(T.info(\"Removing \".concat(e,\" as mute from \").concat(this)),this._removeStream(t),!0):(T.error(\"removeStreamMute - no WebRTC stream for \".concat(e)),!1))},w.prototype._handleSenderRemoveStream=function(e){if(e){var t=this.findSenderByStream(e);t?this.peerconnection.removeTrack(t):T.log(\"Cannot remove tracks: no RTPSender.\")}},w.prototype.createDataChannel=function(e,t){return this.trace(\"createDataChannel\",e,t),this.peerconnection.createDataChannel(e,t)},w.prototype._ensureSimulcastGroupIsLast=function(e){var t=e.sdp,n=t.indexOf(\"m=video\"),r=t.indexOf(\"a=ssrc-group:SIM\",n),i=t.lastIndexOf(\"a=ssrc-group\");if(-1===r||-1===i||i===r)return e;var o=t.indexOf(\"\\r\\n\",r),a=t.substring(r,o+2);i=(t=t.replace(a,\"\")).lastIndexOf(\"a=ssrc-group\");var s=t.indexOf(\"\\r\\n\",i),c=t.slice(0,s),u=a.trim(),l=t.slice(s);return t=\"\".concat(c,\"\\r\\n\").concat(u).concat(l),new RTCSessionDescription({type:e.type,sdp:t})},w.prototype._adjustLocalMediaDirection=function(e){var t=new g.a(e.sdp),n=!1,r=t.selectMedia(\"audio\");if(r){var i=this._getDesiredMediaDirection(c.a);r.direction!==i&&(r.direction=i,T.info(\"Adjusted local audio direction to \".concat(i)),n=!0)}else T.warn('No \"audio\" media found int the local description');var o=t.selectMedia(\"video\");if(o){var a=this._getDesiredMediaDirection(c.b);o.direction!==a&&(o.direction=a,T.info(\"Adjusted local video direction to \".concat(a)),n=!0)}else T.warn('No \"video\" media found in the local description');return n?new RTCSessionDescription({type:e.type,sdp:t.toRawSDP()}):e},w.prototype.setLocalDescription=function(e){var t=this,n=e;if(this.trace(\"setLocalDescription::preTransform\",A(n)),this.options.disableH264||this.options.preferH264){var r=o.a.parse(n.sdp),i=r.media.find(function(e){return\"video\"===e.type});this.options.disableH264?_.a.stripVideoCodec(i,\"h264\"):_.a.preferVideoCodec(i,\"h264\"),n=new RTCSessionDescription({type:n.type,sdp:o.a.write(r)}),this.trace(\"setLocalDescription::postTransform (H264)\",A(n))}return n=this._adjustLocalMediaDirection(n),n=this._ensureSimulcastGroupIsLast(n),p.a.usesUnifiedPlan()&&(n=this.interop.toUnifiedPlan(n),this.trace(\"setLocalDescription::postTransform (Unified Plan)\",A(n))),new Promise(function(e,r){t.peerconnection.setLocalDescription(n).then(function(){t.trace(\"setLocalDescriptionOnSuccess\");var r=_.a.getUfrag(n.sdp);r!==t.localUfrag&&(t.localUfrag=r,t.eventEmitter.emit(f.a.LOCAL_UFRAG_CHANGED,t,r)),e()},function(e){t.trace(\"setLocalDescriptionOnFailure\",e),t.eventEmitter.emit(f.a.SET_LOCAL_DESCRIPTION_FAILED,e,t),r(e)})})},w.prototype.setAudioTransferActive=function(e){T.debug(\"\".concat(this,\" audio transfer active: \").concat(e));var t=this.audioTransferActive!==e;return this.audioTransferActive=e,t},w.prototype._insertUnifiedPlanSimulcastReceive=function(e){var t=o.a.parse(e.sdp),n=t.media.find(function(e){return\"video\"===e.type});return n.rids=[{id:\"1\",direction:\"recv\"},{id:\"2\",direction:\"recv\"},{id:\"3\",direction:\"recv\"}],n.simulcast_03={value:\"recv rid=\".concat(R.join(\";\"))},new RTCSessionDescription({type:e.type,sdp:o.a.write(t)})},w.prototype.setRemoteDescription=function(e){var t=this;if(this.trace(\"setRemoteDescription::preTransform\",A(e)),e=this.simulcast.mungeRemoteDescription(e),this.trace(\"setRemoteDescription::postTransform (simulcast)\",A(e)),this.options.preferH264){var n=o.a.parse(e.sdp),r=n.media.find(function(e){return\"video\"===e.type});_.a.preferVideoCodec(r,\"h264\"),e=new RTCSessionDescription({type:e.type,sdp:o.a.write(n)})}return p.a.usesUnifiedPlan()?(e=new RTCSessionDescription({type:e.type,sdp:this.rtxModifier.stripRtx(e.sdp)}),this.trace(\"setRemoteDescription::postTransform (stripRtx)\",A(e)),e=this.interop.toUnifiedPlan(e),this.trace(\"setRemoteDescription::postTransform (Plan A)\",A(e)),this.isSimulcastOn()&&(e=this._insertUnifiedPlanSimulcastReceive(e),this.trace(\"setRemoteDescription::postTransform (sim receive)\",A(e)))):e=k(e),p.a.isSafariWithWebrtc()&&!p.a.isSafariWithVP8()&&(T.debug(\"Maybe injecting H264 into the remote description\"),e=this._injectH264IfNotPresent(e)),new Promise(function(n,r){t.peerconnection.setRemoteDescription(e).then(function(){t.trace(\"setRemoteDescriptionOnSuccess\");var r=_.a.getUfrag(e.sdp);r!==t.remoteUfrag&&(t.remoteUfrag=r,t.eventEmitter.emit(f.a.REMOTE_UFRAG_CHANGED,t,r)),n()},function(e){t.trace(\"setRemoteDescriptionOnFailure\",e),t.eventEmitter.emit(f.a.SET_REMOTE_DESCRIPTION_FAILED,e,t),r(e)})})},w.prototype._injectH264IfNotPresent=function(e){var t=o.a.parse(e.sdp),n=t.media.find(function(e){return\"video\"===e.type});if(!n)return T.debug(\"No videoMLine found, no need to inject H264.\"),e;if(n.rtp.some(function(e){return\"h264\"===e.codec.toLowerCase()}))return T.debug(\"H264 codec found in video mLine, no need to inject.\"),e;for(var r,i=n.fmtp,a=n.payloads,s=n.rtp,c=a.toString().split(\" \"),u=127;u>=96;u--)if(!c.includes(u)){r=u,c.push(u),n.payloads=c.join(\" \");break}return void 0===r?(T.error(\"Could not find valid payload type to inject.\"),e):(s.push({codec:\"H264\",payload:r,rate:9e4}),i.push({config:\"level-asymmetry-allowed=1;packetization-mode=1;profile-level-id=42e01f\",payload:r}),T.debug(\"Injecting H264 payload type \".concat(r,\" into video mLine.\")),new RTCSessionDescription({type:e.type,sdp:o.a.write(t)}))},w.prototype.setVideoTransferActive=function(e){T.debug(\"\".concat(this,\" video transfer active: \").concat(e));var t=this.videoTransferActive!==e;return this.videoTransferActive=e,t},w.prototype.generateRecvonlySsrc=function(){var e=_.a.generateSsrc();T.info(\"\".concat(this,\" generated new recvonly SSRC: \").concat(e)),this.sdpConsistency.setPrimarySsrc(e)},w.prototype.clearRecvonlySsrc=function(){T.info(\"Clearing primary video SSRC!\"),this.sdpConsistency.clearVideoSsrcCache()},w.prototype.close=function(){this.trace(\"stop\"),this.signalingLayer.off(S.a,this._peerMutedChanged),this.signalingLayer.off(S.b,this._peerVideoTypeChanged);var e=!0,t=!1,n=void 0;try{for(var r,i=this.remoteTracks.values()[Symbol.iterator]();!(e=(r=i.next()).done);e=!0){var o=r.value,a=!0,s=!1,c=void 0;try{for(var u,l=o.values()[Symbol.iterator]();!(a=(u=l.next()).done);a=!0){var d=u.value;this._removeRemoteTrack(d)}}catch(e){s=!0,c=e}finally{try{a||null==l.return||l.return()}finally{if(s)throw c}}}}catch(e){t=!0,n=e}finally{try{e||null==i.return||i.return()}finally{if(t)throw n}}this.remoteTracks.clear(),this._addedStreams=[],this.rtc._removePeerConnection(this)||T.error(\"RTC._removePeerConnection returned false\"),null!==this.statsinterval&&(window.clearInterval(this.statsinterval),this.statsinterval=null),T.info(\"Closing \".concat(this,\"...\")),this.peerconnection.close()};function I(e){return e&&e.groups&&e.groups.length?e.groups[0].ssrcs[0]:e&&e.ssrcs&&e.ssrcs.length?e.ssrcs[0]:null}w.prototype.createAnswer=function(e){if(p.a.isFirefox()&&this.isSimulcastOn()){var t={encodings:[{rid:\"1\",scaleResolutionDownBy:4},{rid:\"2\",scaleResolutionDownBy:2},{rid:\"3\"}]};this.peerconnection.getSenders().find(function(e){return null!==e.track&&\"video\"===e.track.kind}).setParameters(t)}return this._createOfferOrAnswer(!1,e)},w.prototype.createOffer=function(e){return this._createOfferOrAnswer(!0,e)},w.prototype._createOfferOrAnswer=function(e,t){var n=this,r=e?\"Offer\":\"Answer\";this.trace(\"create\".concat(r),JSON.stringify(t,null,\" \"));var i=function(t,i,a){try{if(n.trace(\"create\".concat(r,\"OnSuccess::preTransform\"),A(t)),p.a.usesUnifiedPlan()&&(t=n.interop.toPlanB(t),n.trace(\"create\".concat(r,\"OnSuccess::postTransform (Plan B)\"),A(t)),n.isSimulcastOn()&&(t=n._injectSsrcGroupForUnifiedSimulcast(t),n.trace(\"create\".concat(r,\"OnSuccess::postTransform\")+\"(inject ssrc group)\",A(t)))),p.a.usesUnifiedPlan()||(n.hasAnyTracksOfType(c.b)||n.sdpConsistency.hasPrimarySsrcCached()||n.generateRecvonlySsrc(),t=new RTCSessionDescription({type:t.type,sdp:n.sdpConsistency.makeVideoPrimarySsrcsConsistent(t.sdp)}),n.trace(\"create\".concat(r,\"OnSuccess::postTransform \")+\"(make primary audio/video ssrcs consistent)\",A(t))),n.isSimulcastOn()&&(t=n.simulcast.mungeLocalDescription(t),n.trace(\"create\".concat(r)+\"OnSuccess::postTransform (simulcast)\",A(t))),!n.options.disableRtx&&p.a.supportsRtx()&&(t=new RTCSessionDescription({type:t.type,sdp:n.rtxModifier.modifyRtxSsrcs(t.sdp)}),n.trace(\"create\".concat(r)+\"OnSuccess::postTransform (rtx modifier)\",A(t))),!e){var s=new v.a(n.remoteDescription.sdp),u=new v.a(t.sdp);d=s,h=u,(p.a.isChromiumBased()||p.a.isReactNative())&&d&&h&&d.media&&h.media&&d.media.length===h.media.length&&(h.media.forEach(function(e,t){_.a.findLine(d.media[t],\"a=setup:actpass\",d.session)&&(h.media[t]=e.replace(/a=setup:active/g,\"a=setup:passive\"))}),h.raw=h.session+h.media.join(\"\")),t=new RTCSessionDescription({type:t.type,sdp:u.raw})}var l=function(e){var t=new Map,n=new Map;if(\"object\"!==E(e)||null===e||\"string\"!=typeof e.sdp)return T.warn(\"An empty description was passed as an argument.\"),t;var r=o.a.parse(e.sdp);if(!Array.isArray(r.media))return t;var i=!0,a=!1,s=void 0;try{for(var c,u=r.media[Symbol.iterator]();!(i=(c=u.next()).done);i=!0){var l=c.value;if(Array.isArray(l.ssrcs)){if(Array.isArray(l.ssrcGroups)){var d=!0,p=!1,h=void 0;try{for(var f,m=l.ssrcGroups[Symbol.iterator]();!(d=(f=m.next()).done);d=!0){var v=f.value;if(void 0!==v.semantics&&void 0!==v.ssrcs){var y=v.ssrcs.split(\" \").map(function(e){return parseInt(e,10)}),g=y[0];v.ssrcs=y,n.has(g)||n.set(g,[]),n.get(g).push(v)}}}catch(e){p=!0,h=e}finally{try{d||null==m.return||m.return()}finally{if(p)throw h}}}var _=!0,S=!1,b=void 0;try{for(var C,R=l.ssrcs[Symbol.iterator]();!(_=(C=R.next()).done);_=!0){var w=C.value;if(\"msid\"===w.attribute){var A=w.value,k=t.get(A);k||(k={ssrcs:[],groups:[],msid:A},t.set(A,k));var O=w.id;if(k.ssrcs.push(O),n.has(O)){var I=n.get(O),P=!0,D=!1,N=void 0;try{for(var L,M=I[Symbol.iterator]();!(P=(L=M.next()).done);P=!0){var x=L.value;k.groups.push(x)}}catch(e){D=!0,N=e}finally{try{P||null==M.return||M.return()}finally{if(D)throw N}}}}}}catch(e){S=!0,b=e}finally{try{_||null==R.return||R.return()}finally{if(S)throw b}}}}}catch(e){a=!0,s=e}finally{try{i||null==u.return||u.return()}finally{if(a)throw s}}return t}(t);T.debug(\"Got local SSRCs MAP: \",l),n._processLocalSSRCsMap(l),i(t)}catch(e){n.trace(\"create\".concat(r,\"OnError\"),e),n.trace(\"create\".concat(r,\"OnError\"),A(t)),T.error(\"create\".concat(r,\"OnError\"),e,A(t)),a(e)}var d,h};return new Promise(function(o,a){(e?n.peerconnection.createOffer(t):n.peerconnection.createAnswer(t)).then(function(e){return i(e,o,a)},function(t){return function(t,i){n.trace(\"create\".concat(r,\"OnFailure\"),t);var o=e?f.a.CREATE_OFFER_FAILED:f.a.CREATE_ANSWER_FAILED;n.eventEmitter.emit(o,t,n),i(t)}(t,a)})})},w.prototype._processLocalSSRCsMap=function(e){var t=!0,n=!1,r=void 0;try{for(var i,o=this.localTracks.values()[Symbol.iterator]();!(t=(i=o.next()).done);t=!0){var a=i.value,s=a.storedMSID;if(e.has(s)){var c=e.get(s);if(!c)return void T.error(\"No SSRC found for: \".concat(s,\" in \").concat(this));var u=this.localSSRCs.get(a.rtcId),l=I(c),d=I(u);l!==d?(null===d?T.info(\"Storing new local SSRC for \".concat(a,\" in \").concat(this),c):T.error(\"Overwriting SSRC for \".concat(a,\" \").concat(s,\" in \").concat(this,\" with: \"),c),this.localSSRCs.set(a.rtcId,c),this.eventEmitter.emit(f.a.LOCAL_TRACK_SSRC_UPDATED,a,l)):T.debug(\"The local SSRC(\".concat(l,\") for \").concat(a,\" \").concat(s)+\"is still up to date in \".concat(this))}else T.warn(\"No local track matched with: \".concat(s,\" in \").concat(this))}}catch(e){n=!0,r=e}finally{try{t||null==o.return||o.return()}finally{if(n)throw r}}},w.prototype.addIceCandidate=function(e){return this.trace(\"addIceCandidate\",JSON.stringify({candidate:e.candidate,sdpMid:e.sdpMid,sdpMLineIndex:e.sdpMLineIndex,usernameFragment:e.usernameFragment},null,\" \")),this.peerconnection.addIceCandidate(e)},w.prototype.getStats=function(e,t){p.a.isSafariWithWebrtc()||p.a.isFirefox()||p.a.isReactNative()?this.peerconnection.getStats().then(e).catch(t||function(){}):this.peerconnection.getStats(e)},w.prototype.generateNewStreamSSRCInfo=function(e){var t=e.rtcId,n=this._getSSRC(t);if(n&&T.error(\"Will overwrite local SSRCs for track ID: \".concat(t)),this.isSimulcastOn()){n={ssrcs:[],groups:[]};for(var r=0;r<C;r++)n.ssrcs.push(_.a.generateSsrc());n.groups.push({ssrcs:n.ssrcs.slice(),semantics:\"SIM\"})}else n={ssrcs:[_.a.generateSsrc()],groups:[]};if(!this.options.disableRtx&&p.a.supportsRtx())for(var i=n.ssrcs.length,o=0;o<i;++o){var a=n.ssrcs[o],s=_.a.generateSsrc();n.ssrcs.push(s),n.groups.push({ssrcs:[a,s],semantics:\"FID\"})}return n.msid=e.storedMSID,this.localSSRCs.set(t,n),n};w.prototype.setIsSelected=function(e){this.options.enableLayerSuspension&&(T.debug(\"Layer suspension enabled,\"+\"currently selected? \".concat(e)),function(e,t){if(e.getSenders){var n=e.getSenders().find(function(e){return\"video\"===e.track.kind});if(n)if(n.getParameters){var r=n.getParameters();t?(T.debug(\"Currently selected, enabling all sim layers\"),r.encodings.forEach(function(e){e.active=!0})):(T.debug(\"Not currently selected, disabling upper layers\"),[1,2].forEach(function(e){r.encodings[e]&&(r.encodings[e].active=!1)})),n.setParameters(r)}else T.debug(\"Browser doesn't support RTPSender parameters\");else T.warn(\"handleLayerSuspension unable to find video sender\")}else T.debug(\"Browser doesn't support RTPSender\")}(this.peerconnection,e))},w.prototype.toString=function(){return\"TPC[\".concat(this.id,\",p2p:\").concat(this.isP2P,\"]\")}}).call(this,\"modules/RTC/TraceablePeerConnection.js\")},function(e,t,n){\"use strict\";(function(e){n.d(t,\"a\",function(){return v});var r=n(8),i=n(56),o=n(17),a=n(6);function s(e){return(s=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function c(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function u(e,t){return!t||\"object\"!==s(t)&&\"function\"!=typeof t?function(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}(e):t}function l(e){return(l=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function d(e,t){return(d=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var p=n(4).getLogger(e),h=n(7),f=!1,m=!1,v=function(e){function t(e,n,r,i,o,a,s,c,d,p){var h;if(function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t),(h=u(this,l(t).call(this,n,i,o,function(){},a,s))).rtc=e,\"number\"!=typeof c)throw new TypeError(\"SSRC \".concat(c,\" is not a number\"));return h.ssrc=c,h.ownerEndpointId=r,h.muted=d,h.isP2P=p,h.hasBeenMuted=d,h.rtc&&h.track&&h._bindMuteHandlers(),h}var n,s,v;return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&d(e,t)}(t,i[\"a\"]),n=t,(s=[{key:\"_bindMuteHandlers\",value:function(){var e=this;this.track.addEventListener(\"mute\",function(){return e._onTrackMute()}),this.track.addEventListener(\"unmute\",function(){return e._onTrackUnmute()})}},{key:\"_onTrackMute\",value:function(){p.debug('\"onmute\" event('.concat(Date.now(),\"): \"),this.getParticipantId(),this.getType(),this.getSSRC()),this.rtc.eventEmitter.emit(h.REMOTE_TRACK_MUTE,this)}},{key:\"_onTrackUnmute\",value:function(){p.debug('\"onunmute\" event('.concat(Date.now(),\"): \"),this.getParticipantId(),this.getType(),this.getSSRC()),this.rtc.eventEmitter.emit(h.REMOTE_TRACK_UNMUTE,this)}},{key:\"setMute\",value:function(e){this.muted!==e&&(e&&(this.hasBeenMuted=!0),this.stream&&(this.stream.muted=e),this.muted=e,this.emit(o.TRACK_MUTE_CHANGED,this))}},{key:\"isMuted\",value:function(){return this.muted}},{key:\"getParticipantId\",value:function(){return this.ownerEndpointId}},{key:\"isLocal\",value:function(){return!1}},{key:\"getSSRC\",value:function(){return this.ssrc}},{key:\"_setVideoType\",value:function(e){this.videoType!==e&&(this.videoType=e,this.emit(o.TRACK_VIDEOTYPE_CHANGED,e))}},{key:\"_playCallback\",value:function(){var e=this.isVideoTrack()?\"video\":\"audio\",t=window.performance.now();console.log(\"(TIME) Render \".concat(e,\":\\t\"),t),this.conference.getConnectionTimes()[\"\".concat(e,\".render\")]=t;var n=window.connectionTimes[\"obtainPermissions.start\"],i=window.connectionTimes[\"obtainPermissions.end\"],o=isNaN(i)||isNaN(n)?0:i-n,s=t-(this.conference.getConnectionTimes()[\"session.initiate\"]-this.conference.getConnectionTimes()[\"muc.joined\"])-o;this.conference.getConnectionTimes()[\"\".concat(e,\".ttfm\")]=s,console.log(\"(TIME) TTFM \".concat(e,\":\\t\"),s),a.a.sendAnalytics(Object(r.H)({media_type:e,muted:this.hasBeenMuted,value:s}))}},{key:\"_attachTTFMTracker\",value:function(e){f&&this.isAudioTrack()||m&&this.isVideoTrack()||(this.isAudioTrack()&&(f=!0),this.isVideoTrack()&&(m=!0),e.addEventListener(\"canplay\",this._playCallback.bind(this)))}},{key:\"toString\",value:function(){return\"RemoteTrack[\".concat(this.ownerEndpointId,\", \").concat(this.getType(),\", p2p: \").concat(this.isP2P,\"]\")}}])&&c(n.prototype,s),v&&c(n,v),t}()}).call(this,\"modules/RTC/JitsiRemoteTrack.js\")},function(e,t,n){\"use strict\";(function(e){n.d(t,\"a\",function(){return c});var r=n(4),i=n(9),o=n(28);function a(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var s=Object(r.getLogger)(e),c=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this.tpc=t}var t,n,r;return t=e,(n=[{key:\"_addMutedLocalVideoTracksToSDP\",value:function(e){var t=this.tpc.getLocalTracks(i.b);if(!t.length)return!1;1!==t.length&&s.error(\"\".concat(this.tpc,\" there is more than 1 video track ! \")+\"Strange things may happen !\",t);var n=e.selectMedia(\"video\");if(!n)return s.debug(\"\".concat(this.tpc,\" unable to hack local video track SDP\")+'- no \"video\" media'),!1;var r=!1,o=!0,a=!1,c=void 0;try{for(var u,l=t[Symbol.iterator]();!(o=(u=l.next()).done);o=!0){var d=u.value,p=d.isMuted(),h=d.getOriginalStream(),f=h&&this.tpc.isMediaStreamInPc(h),m=p||!f;if(s.debug(\"\".concat(this.tpc,\" \").concat(d,\" muted: \").concat(p,\", is in PeerConnection: \").concat(f,\" => should fake sdp ? : \").concat(m)),m){var v=this.tpc.isSimulcastOn()?this.tpc.simulcast.ssrcCache:[this.tpc.sdpConsistency.cachedPrimarySsrc];if(v.length){r=!0,n.direction=\"sendrecv\";var y=v[0],g=\"injected-\".concat(y),_=!0,S=!1,b=void 0;try{for(var E,T=v[Symbol.iterator]();!(_=(E=T.next()).done);_=!0){var C=E.value;n.removeSSRC(C),s.debug(\"\".concat(this.tpc,\" injecting video SSRC: \").concat(C,\" for \").concat(d)),n.addSSRCAttribute({id:C,attribute:\"cname\",value:g}),n.addSSRCAttribute({id:C,attribute:\"msid\",value:d.storedMSID})}}catch(e){S=!0,b=e}finally{try{_||null==T.return||T.return()}finally{if(S)throw b}}if(v.length>1){var R={ssrcs:v.join(\" \"),semantics:\"SIM\"};n.findGroup(R.semantics,R.ssrcs)||(s.debug(\"\".concat(this.tpc,\" injecting SIM group for \").concat(d),R),n.addSSRCGroup(R))}this.tpc.options.disableRtx||this.tpc.rtxModifier.modifyRtxSsrcs2(n)}else s.error(\"No SSRCs stored for: \".concat(d,\" in \").concat(this.tpc))}}}catch(e){a=!0,c=e}finally{try{o||null==l.return||l.return()}finally{if(a)throw c}}return r}},{key:\"_transformMediaIdentifiers\",value:function(e){var t=this.tpc.id,n=!0,r=!1,i=void 0;try{for(var o,a=e.ssrcs[Symbol.iterator]();!(n=(o=a.next()).done);n=!0){var c=o.value;switch(c.attribute){case\"cname\":case\"label\":case\"mslabel\":c.value=c.value&&\"\".concat(c.value,\"-\").concat(t);break;case\"msid\":if(c.value){var u=c.value.split(\" \");if(2===u.length){var l=u[0],d=u[1];c.value=\"\".concat(l,\"-\").concat(t,\" \").concat(d,\"-\").concat(t)}else s.warn(\"Unable to munge local MSID\"+\"- weird format detected: \".concat(c.value))}}}}catch(e){r=!0,i=e}finally{try{n||null==a.return||a.return()}finally{if(r)throw i}}}},{key:\"maybeAddMutedLocalVideoTracksToSDP\",value:function(e){if(!e)throw new Error(\"No local description passed in.\");var t=new o.a(e.sdp);return this._addMutedLocalVideoTracksToSDP(t)?new RTCSessionDescription({type:e.type,sdp:t.toRawSDP()}):e}},{key:\"transformStreamIdentifiers\",value:function(e){if(!e||!e.sdp||!e.type)return e;var t=new o.a(e.sdp),n=t.selectMedia(\"audio\");n&&this._transformMediaIdentifiers(n);var r=t.selectMedia(\"video\");return r&&this._transformMediaIdentifiers(r),new RTCSessionDescription({type:e.type,sdp:t.toRawSDP()})}}])&&a(t.prototype,n),r&&a(t,r),e}()}).call(this,\"modules/RTC/LocalSdpMunger.js\")},function(e,t,n){\"use strict\";(function(e){n.d(t,\"a\",function(){return u});var r=n(4),i=n(28),o=n(5);function a(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var s=Object(r.getLogger)(e);function c(e,t,n){s.debug(\"Updating mline to associate \".concat(n)+\"rtx ssrc with primary stream, \".concat(t.id));var r=t.id,i=t.msid,o=t.cname,a=e.getRtxSSRC(r);a!==n?(a&&(s.debug(\"\".concat(r,\" was previously associated with rtx\")+\"\".concat(a,\", removing all references to it\")),e.removeSSRC(a),s.debug(\"groups before filtering for \".concat(a)),s.debug(e.dumpSSRCGroups()),e.removeGroupsWithSSRC(a)),e.addSSRCAttribute({id:n,attribute:\"cname\",value:o}),e.addSSRCAttribute({id:n,attribute:\"msid\",value:i}),e.addSSRCGroup({semantics:\"FID\",ssrcs:\"\".concat(r,\" \").concat(n)})):s.debug(\"\".concat(n,\" was already associated with \").concat(r))}var u=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this.correspondingRtxSsrcs=new Map}var t,n,r;return t=e,(n=[{key:\"clearSsrcCache\",value:function(){this.correspondingRtxSsrcs.clear()}},{key:\"setSsrcCache\",value:function(e){s.debug(\"Setting ssrc cache to \",e),this.correspondingRtxSsrcs=e}},{key:\"modifyRtxSsrcs\",value:function(e){var t=new i.a(e),n=t.selectMedia(\"video\");return n?this.modifyRtxSsrcs2(n)?t.toRawSDP():e:(s.debug(\"No 'video' media found in the sdp: \".concat(e)),e)}},{key:\"modifyRtxSsrcs2\",value:function(e){if(\"recvonly\"===e.direction)return s.debug(\"RtxModifier doing nothing, video m line is recvonly\"),!1;if(e.getSSRCCount()<1)return s.debug(\"RtxModifier doing nothing, no video ssrcs present\"),!1;s.debug(\"Current ssrc mapping: \",this.correspondingRtxSsrcs);var t=e.getPrimaryVideoSSRCs();s.debug(\"Parsed primary video ssrcs \",t,\" making sure all have rtx streams\");var n=!0,r=!1,i=void 0;try{for(var a,u=t[Symbol.iterator]();!(n=(a=u.next()).done);n=!0){var l=a.value,d=e.getSSRCAttrValue(l,\"msid\"),p=e.getSSRCAttrValue(l,\"cname\"),h=this.correspondingRtxSsrcs.get(l);if(h)s.debug(\"Already have an associated rtx ssrc for\"+\"video ssrc \".concat(l,\": \").concat(h));else{s.debug(\"No previously associated rtx ssrc for video ssrc \".concat(l));var f=e.getRtxSSRC(l);f?(s.debug(\"Rtx stream \".concat(f,\" \")+\"already existed in the sdp as an rtx stream for \"+\"\".concat(l)),h=f):(h=o.a.generateSsrc(),s.debug(\"Generated rtx ssrc \".concat(h,\" \")+\"for ssrc \".concat(l))),s.debug(\"Caching rtx ssrc \".concat(h,\" \")+\"for video ssrc \".concat(l)),this.correspondingRtxSsrcs.set(l,h)}c(e,{id:l,cname:p,msid:d},h)}}catch(e){r=!0,i=e}finally{try{n||null==u.return||u.return()}finally{if(r)throw i}}return!0}},{key:\"stripRtx\",value:function(e){var t=new i.a(e),n=t.selectMedia(\"video\");if(!n)return s.debug(\"No 'video' media found in the sdp: \".concat(e)),e;if(\"recvonly\"===n.direction)return s.debug(\"RtxModifier doing nothing, video m line is recvonly\"),e;if(n.getSSRCCount()<1)return s.debug(\"RtxModifier doing nothing, no video ssrcs present\"),e;if(!n.containsAnySSRCGroups())return s.debug(\"RtxModifier doing nothing, no video ssrcGroups present\"),e;var r=n.findGroups(\"FID\");n.removeGroupsBySemantics(\"FID\");var o=!0,a=!1,c=void 0;try{for(var u,l=r[Symbol.iterator]();!(o=(u=l.next()).done);o=!0){var d=u.value,p=Object(i.c)(d);n.removeSSRC(p)}}catch(e){a=!0,c=e}finally{try{o||null==l.return||l.return()}finally{if(a)throw c}}return t.toRawSDP()}}])&&a(t.prototype,n),r&&a(t,r),e}()}).call(this,\"modules/xmpp/RtxModifier.js\")},function(e,t,n){\"use strict\";(function(e){n.d(t,\"a\",function(){return s});var r=n(4),i=n(28);function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var a=Object(r.getLogger)(e),s=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this.clearVideoSsrcCache(),this.logPrefix=t}var t,n,r;return t=e,(n=[{key:\"clearVideoSsrcCache\",value:function(){this.cachedPrimarySsrc=null,this.injectRecvOnly=!1}},{key:\"setPrimarySsrc\",value:function(e){if(\"number\"!=typeof e)throw new Error(\"Primary SSRC must be a number!\");this.cachedPrimarySsrc=e}},{key:\"hasPrimarySsrcCached\",value:function(){return Boolean(this.cachedPrimarySsrc)}},{key:\"makeVideoPrimarySsrcsConsistent\",value:function(e){var t=new i.a(e),n=t.selectMedia(\"video\");if(!n)return a.debug(\"\".concat(this.logPrefix,\" no 'video' media found in the sdp: \")+\"\".concat(e)),e;if(\"recvonly\"===n.direction)this.cachedPrimarySsrc&&this.injectRecvOnly?n.addSSRCAttribute({id:this.cachedPrimarySsrc,attribute:\"cname\",value:\"recvonly-\".concat(this.cachedPrimarySsrc)}):a.info(\"\".concat(this.logPrefix,\" no SSRC found for the recvonly video\")+\"stream!\");else{var r=n.getPrimaryVideoSsrc();if(!r)return a.info(\"\".concat(this.logPrefix,\" sdp-consistency couldn't\")+\" parse new primary ssrc\"),e;if(this.cachedPrimarySsrc){a.info(\"\".concat(this.logPrefix,\" sdp-consistency replacing new ssrc\")+\"\".concat(r,\" with cached \")+\"\".concat(this.cachedPrimarySsrc)),n.replaceSSRC(r,this.cachedPrimarySsrc);var o=!0,s=!1,c=void 0;try{for(var u,l=n.ssrcGroups[Symbol.iterator]();!(o=(u=l.next()).done);o=!0){var d=u.value;if(\"FID\"===d.semantics){var p=Object(i.b)(d),h=Object(i.c)(d);p===r&&(d.ssrcs=\"\".concat(this.cachedPrimarySsrc,\" \").concat(h))}}}catch(e){s=!0,c=e}finally{try{o||null==l.return||l.return()}finally{if(s)throw c}}}else this.cachedPrimarySsrc=r,a.info(\"\".concat(this.logPrefix,\" sdp-consistency caching primary ssrc\")+\"\".concat(this.cachedPrimarySsrc));this.injectRecvOnly=!0}return t.toRawSDP()}}])&&o(t.prototype,n),r&&o(t,r),e}()}).call(this,\"modules/xmpp/SdpConsistency.js\")},function(e,t,n){\"use strict\";n.d(t,\"a\",function(){return o});var r=n(2);function i(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var o=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this._callback=n,this._eventFired=!1,t.statistics.addAudioLevelListener(this._audioLevel.bind(this)),t.on(r.TRACK_MUTE_CHANGED,this._trackMuteChanged.bind(this)),t.on(r.TRACK_ADDED,this._trackAdded.bind(this))}var t,n,o;return t=e,(n=[{key:\"_audioLevel\",value:function(e,t,n,r){r&&this.audioTrack&&!this._eventFired&&this.audioTrack.isMuted()&&n>.6&&(this._eventFired=!0,this._callback())}},{key:\"_isLocalAudioTrack\",value:function(e){return e.isAudioTrack()&&e.isLocal()}},{key:\"_trackAdded\",value:function(e){this._isLocalAudioTrack(e)&&(this.audioTrack=e)}},{key:\"_trackMuteChanged\",value:function(e){this._isLocalAudioTrack(e)&&e.isMuted()&&(this._eventFired=!1)}}])&&i(t.prototype,n),o&&i(t,o),e}()},function(e,t,n){\"use strict\";(function(e){n.d(t,\"a\",function(){return v});var r=n(34),i=n(2),o=n(4);function a(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var s=n(0),c=n(14),u=n(31),l=Object(o.getLogger)(e),d=\"stats\",p=[{width:1920,height:1080,layers:3,max:5e3,target:4e3,min:800},{width:1280,height:720,layers:3,max:2500,target:2500,min:600},{width:960,height:540,layers:3,max:900,target:900,min:450},{width:640,height:360,layers:2,max:700,target:500,min:150},{width:480,height:270,layers:2,max:450,target:350,min:150},{width:320,height:180,layers:1,max:200,target:150,min:30}],h=800,f=null;function m(e,t,n){if(n<15e3)return 1;var r=0,i=Math.min(t.height,t.width);if(e){var o=p.find(function(e){return e.height<=i});if(o){var a=function(){var e=i;if(!(o=p.find(function(t){return t.height===e})))return\"break\";r+=o.target};for(i=o.height;i>=180;i/=2){if(\"break\"===a())break}}}else{var s=t.width*t.height;r=s<=76800?600:s<=307200?1700:s<=518400?2e3:2500}return Math.min(r,function(e){if(e>6e4)return Number.MAX_SAFE_INTEGER;return h*Math.pow(1.08,e/1e3)}(Math.max(0,n-1e3)))}var v=function(){function e(t,n,o){var a=this;!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this.eventEmitter=n,this._conference=t,this._localStats={connectionQuality:100,jvbRTT:void 0},this._lastConnectionQualityUpdate=-1,this._remoteStats={},this._timeIceConnected=-1,this._timeVideoUnmuted=-1,this._timeLastBwCapRemoved=-1,o.startBitrate&&o.startBitrate>0&&(h=o.startBitrate),t.on(i.CONNECTION_INTERRUPTED,function(){a._updateLocalConnectionQuality(0),a.eventEmitter.emit(r.LOCAL_STATS_UPDATED,a._localStats),a._broadcastLocalStats()}),t.room.addListener(s.ICE_CONNECTION_STATE_CHANGED,function(e,t){e.isP2P||\"connected\"!==t||(a._timeIceConnected=window.performance.now())}),t.on(i.ENDPOINT_MESSAGE_RECEIVED,function(e,t){t.type===d&&a._updateRemoteStats(e.getId(),t.values)}),t.statistics.addConnectionStatsListener(this._updateLocalStats.bind(this)),t.on(i.TRACK_MUTE_CHANGED,function(e){e.isVideoTrack()&&(e.isMuted()?a._timeVideoUnmuted=-1:a._maybeUpdateUnmuteTime())}),t.on(i.TRACK_ADDED,function(e){e.isVideoTrack()&&!e.isMuted()&&a._maybeUpdateUnmuteTime()}),t.on(i.SERVER_REGION_CHANGED,function(e){a._localStats.serverRegion=e}),t.on(i.PROPERTIES_CHANGED,function(e){a._localStats.bridgeCount=Number((e||{})[\"bridge-count\"])})}var t,n,o;return t=e,(n=[{key:\"_maybeUpdateUnmuteTime\",value:function(){this._timeVideoUnmuted<0&&(this._timeVideoUnmuted=window.performance.now())}},{key:\"_calculateConnectionQuality\",value:function(e,t,n){var r,i=u[n],o=100;if(this._localStats.packetLoss&&(r=this._localStats.packetLoss.upload,t&&(r*=.5)),t||!i||e===c.DESKTOP||this._timeIceConnected<0||this._timeVideoUnmuted<0)void 0===r?(l.error(\"Cannot calculate connection quality, unknown packet loss.\"),o=100):o=r<=2?100:r<=4?70:r<=6?50:r<=8?30:r<=12?10:0;else{var a=this._conference.getActivePeerConnection(),s=Boolean(a&&a.isSimulcastOn()),d=a&&a.bandwidthLimiter&&a.bandwidthLimiter.getBandwidthLimit(\"video\");!d&&f&&(this._timeLastBwCapRemoved=window.performance.now(),h=f),f=d;var p=m(s,i,window.performance.now()-Math.max(this._timeVideoUnmuted,this._timeIceConnected,this._timeLastBwCapRemoved));p=Math.min(.9*p,2500),f&&(p=Math.min(p,f)),o=100*this._localStats.bitrate.upload/p,r&&r>=10&&(o=Math.min(o,30))}if(this._lastConnectionQualityUpdate>0){var v=this._localStats.connectionQuality,y=(window.performance.now()-this._lastConnectionQualityUpdate)/1e3;o=Math.min(o,v+2*y)}return Math.min(100,o)}},{key:\"_updateLocalConnectionQuality\",value:function(e){this._localStats.connectionQuality=e,this._lastConnectionQualityUpdate=window.performance.now()}},{key:\"_broadcastLocalStats\",value:function(){var e={bitrate:this._localStats.bitrate,packetLoss:this._localStats.packetLoss,connectionQuality:this._localStats.connectionQuality,jvbRTT:this._localStats.jvbRTT,serverRegion:this._localStats.serverRegion};try{this._conference.broadcastEndpointMessage({type:d,values:e})}catch(e){}}},{key:\"_updateLocalStats\",value:function(e,t){if(!e.isP2P){var n=t.transport&&t.transport.length&&t.transport[0].rtt;this._localStats.jvbRTT=n||void 0}if(e===this._conference.getActivePeerConnection()){var i,o=!this._conference.isConnectionInterrupted(),a=this._conference.getLocalVideoTrack(),s=a?a.videoType:void 0,c=!a||a.isMuted(),u=a?a.resolution:null;for(i in c||this._maybeUpdateUnmuteTime(),t)t.hasOwnProperty(i)&&(this._localStats[i]=t[i]);o&&this._updateLocalConnectionQuality(this._calculateConnectionQuality(s,c,u)),this.eventEmitter.emit(r.LOCAL_STATS_UPDATED,this._localStats),this._broadcastLocalStats()}}},{key:\"_updateRemoteStats\",value:function(e,t){this._remoteStats[e]={bitrate:t.bitrate,packetLoss:t.packetLoss,connectionQuality:t.connectionQuality,jvbRTT:t.jvbRTT,serverRegion:t.serverRegion},this.eventEmitter.emit(r.REMOTE_STATS_UPDATED,e,this._remoteStats[e])}},{key:\"getStats\",value:function(){return this._localStats}}])&&a(t.prototype,n),o&&a(t,o),e}()}).call(this,\"modules/connectivity/ConnectionQuality.js\")},function(e,t,n){\"use strict\";(function(e){n.d(t,\"a\",function(){return a});var r=n(4);function i(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var o=Object(r.getLogger)(e),a=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this._conference=t}var t,n,r;return t=e,(n=[{key:\"start\",value:function(e){var t=this;this._conference.xmpp.ping(65e3).then(function(){t._canceled||(t._conference.isJvbConnectionInterrupted?t._iceFailedTimeout=window.setTimeout(function(){o.info(\"Sending ICE failed - the connection has not recovered\"),t._iceFailedTimeout=void 0,e.sendIceFailedNotification()},2e3):o.info(\"ICE connection restored - not sending ICE failed\"))},function(e){o.error(\"PING error/timeout - not sending ICE failed\",e)})}},{key:\"cancel\",value:function(){this._canceled=!0,this._iceFailedTimeout&&window.clearTimeout(this._iceFailedTimeout)}}])&&i(t.prototype,n),r&&i(t,r),e}()}).call(this,\"modules/connectivity/IceFailedNotification.js\")},function(e,t,n){\"use strict\";(function(e){n.d(t,\"a\",function(){return h});var r=n(4),i=n(8),o=n(52),a=n(2),s=n(6);function c(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function u(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function l(e,t,n){return t&&u(e.prototype,t),n&&u(e,n),e}var d=Object(r.getLogger)(e),p=function(){function e(t,n){c(this,e),this.participant=t,this.e2eping=n,this.id=t.getId(),this.requests={},this.lastRequestId=1,this.clearIntervals=this.clearIntervals.bind(this),this.sendRequest=this.sendRequest.bind(this),this.handleResponse=this.handleResponse.bind(this),this.maybeSendAnalytics=this.maybeSendAnalytics.bind(this),this.sendAnalytics=this.sendAnalytics.bind(this),n.isDataChannelOpen&&this.sendRequest(),this.pingInterval=window.setInterval(this.sendRequest,n.pingIntervalMs),this.analyticsInterval=window.setTimeout(this.maybeSendAnalytics,this.e2eping.analyticsIntervalMs)}return l(e,[{key:\"clearIntervals\",value:function(){this.pingInterval&&window.clearInterval(this.pingInterval),this.analyticsInterval&&window.clearInterval(this.analyticsInterval)}},{key:\"sendRequest\",value:function(){var e=this.lastRequestId++,t={type:\"e2e-ping-request\",id:e};this.e2eping.sendMessage(t,this.id),this.requests[e]={id:e,timeSent:window.performance.now()}}},{key:\"handleResponse\",value:function(e){var t=this.requests[e.id];t&&(t.rtt=window.performance.now()-t.timeSent,this.e2eping.eventEmitter.emit(o.E2E_RTT_CHANGED,this.participant,t.rtt)),this.maybeSendAnalytics()}},{key:\"maybeSendAnalytics\",value:function(){var e,t,n=window.performance.now(),r=1/0;for(t in this.requests)this.requests.hasOwnProperty(t)&&((e=this.requests[t]).timeSent<n-this.e2eping.analyticsIntervalMs?delete this.requests[t]:e.rtt&&(r=Math.min(r,e.rtt)));r<1/0&&this.sendAnalytics(r)}},{key:\"sendAnalytics\",value:function(e){s.a.sendAnalytics(Object(i.y)(this.id,this.participant.getProperty(\"region\"),e))}}]),e}(),h=function(){function e(t,n,r){c(this,e),this.conference=t,this.eventEmitter=t.eventEmitter,this.sendMessage=r,this.pingIntervalMs=1e4,this.analyticsIntervalMs=6e4,this.participants={},this.isDataChannelOpen=!1,n&&n.e2eping&&(\"number\"==typeof n.e2eping.pingInterval&&(this.pingIntervalMs=n.e2eping.pingInterval),\"number\"==typeof n.e2eping.analyticsInterval&&(this.analyticsIntervalMs=n.e2eping.analyticsInterval),this.analyticsIntervalMs>0&&this.analyticsIntervalMs<this.pingIntervalMs&&(this.analyticsIntervalMs=this.pingIntervalMs)),d.info(\"Initializing e2e ping; pingInterval=\".concat(this.pingIntervalMs,\", analyticsInterval=\").concat(this.analyticsIntervalMs,\".\")),this.participantJoined=this.participantJoined.bind(this),t.on(a.USER_JOINED,this.participantJoined),this.participantLeft=this.participantLeft.bind(this),t.on(a.USER_LEFT,this.participantLeft),this.messageReceived=this.messageReceived.bind(this),t.on(a.ENDPOINT_MESSAGE_RECEIVED,this.messageReceived),this.dataChannelOpened=this.dataChannelOpened.bind(this),t.on(a.DATA_CHANNEL_OPENED,this.dataChannelOpened)}return l(e,[{key:\"dataChannelOpened\",value:function(){for(var e in this.isDataChannelOpen=!0,this.participants)if(this.participants.hasOwnProperty(e)){var t=this.participants[e];window.setTimeout(t.sendRequest,200)}}},{key:\"messageReceived\",value:function(e,t){\"e2e-ping-request\"===t.type?this.handleRequest(e.getId(),t):\"e2e-ping-response\"===t.type&&this.handleResponse(e.getId(),t)}},{key:\"participantJoined\",value:function(e,t){this.pingIntervalMs<=0||(this.participants[e]&&(d.info(\"Participant wrapper already exists for \".concat(e,\". Clearing.\")),this.participants[e].clearIntervals(),delete this.participants[e]),this.participants[e]=new p(t,this))}},{key:\"participantLeft\",value:function(e){this.pingIntervalMs<=0||this.participants[e]&&(this.participants[e].clearIntervals(),delete this.participants[e])}},{key:\"handleRequest\",value:function(e,t){if(t&&t.id){var n={type:\"e2e-ping-response\",id:t.id};this.sendMessage(n,e)}else d.info(\"Received an invalid e2e ping request from \".concat(e,\".\"))}},{key:\"handleResponse\",value:function(e,t){var n=this.participants[e];n&&n.handleResponse(t)}},{key:\"stop\",value:function(){for(var e in d.info(\"Stopping e2eping\"),this.conference.off(a.USER_JOINED,this.participantJoined),this.conference.off(a.USER_LEFT,this.participantLeft),this.conference.off(a.ENDPOINT_MESSAGE_RECEIVED,this.messageReceived),this.conference.off(a.DATA_CHANNEL_OPENED,this.dataChannelOpened),this.participants)this.participants.hasOwnProperty(e)&&this.participants[e].clearIntervals();this.participants={}}}]),e}()}).call(this,\"modules/e2eping/e2eping.js\")},function(e,t,n){\"use strict\";(function(e){n.d(t,\"a\",function(){return s});var r=n(4),i=n(2);function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var a=Object(r.getLogger)(e),s=function(){function e(t){var n=this;!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this._conference=t,this._jvb121=!0,this._conference.addEventListener(i.USER_JOINED,function(){return n.evaluateStatus()}),this._conference.addEventListener(i.USER_LEFT,function(){return n.evaluateStatus()}),this._conference.addEventListener(i.P2P_STATUS,function(){return n.evaluateStatus()})}var t,n,r;return t=e,(n=[{key:\"evaluateStatus\",value:function(){var e=this._jvb121,t=!this._conference.isP2PActive()&&this._conference.getParticipantCount()<=2;e!==t&&(this._jvb121=t,a.debug(\"JVB121 status \".concat(e,\" => \").concat(t)),this._conference.eventEmitter.emit(i.JVB121_STATUS,e,t))}}])&&o(t.prototype,n),r&&o(t,r),e}()}).call(this,\"modules/event/Jvb121EventGenerator.js\")},function(e,t,n){\"use strict\";(function(e){var r=n(4),i=n(0),o=n.n(i),a=n(62),s=n(46);function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function u(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var l=Object(r.getLogger)(e),d=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this._sessions={},this._chatRoom=t,this.onPresence=this.onPresence.bind(this),this._chatRoom.eventEmitter.addListener(o.a.PRESENCE_RECEIVED,this.onPresence)}var t,n,r;return t=e,(n=[{key:\"getSession\",value:function(e){return this._sessions[e]}},{key:\"onPresence\",value:function(e){var t=e.fromHiddenDomain,n=e.presence;s.a.isFromFocus(n)?this._handleFocusPresence(n):t&&this._handleJibriPresence(n)}},{key:\"startRecording\",value:function(e){var t=this,n=new a.a(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);\"function\"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),r.forEach(function(t){c(e,t,n[t])})}return e}({},e,{connection:this._chatRoom.connection}));return n.start({appData:e.appData,broadcastId:e.broadcastId,focusMucJid:this._chatRoom.focusMucJid,streamId:e.streamId}).then(function(){return t.getSession(n.getID())||(t._addSession(n),t._emitSessionUpdate(n)),n}).catch(function(e){return t._emitSessionUpdate(n),Promise.reject(e)})}},{key:\"stopRecording\",value:function(e){var t=this.getSession(e);return t?t.stop({focusMucJid:this._chatRoom.focusMucJid}):Promise.reject(new Error(\"Could not find session\"))}},{key:\"_addSession\",value:function(e){this._sessions[e.getID()]=e}},{key:\"_createSession\",value:function(e,t,n){var r=new a.a({connection:this._chatRoom.connection,focusMucJid:this._chatRoom.focusMucJid,mode:n,sessionID:e,status:t});return this._addSession(r),r}},{key:\"_emitSessionUpdate\",value:function(e){this._chatRoom.eventEmitter.emit(o.a.RECORDER_STATE_CHANGED,e)}},{key:\"_handleFocusPresence\",value:function(e){var t=s.a.getFocusRecordingUpdate(e);if(t){var n=t.sessionID,r=t.status,i=t.error,o=t.recordingMode,a=this.getSession(n);a||\"off\"!==r?a&&a.getStatus()===r&&a.getError()===i?l.warn(\"Ignoring duplicate presence update: \",JSON.stringify(t)):(a||(a=this._createSession(n,r,o)),a.setStatus(r),i&&a.setError(i),this._emitSessionUpdate(a)):l.warn(\"Ignoring recording presence update\",\"Received a new session with status off.\")}}},{key:\"_handleJibriPresence\",value:function(e){var t=s.a.getHiddenDomainUpdate(e),n=t.liveStreamViewURL,r=t.mode,i=t.sessionID;if(i){var o=this.getSession(i);o||(o=this._createSession(i,\"\",r)),o.setLiveStreamViewURL(n),this._emitSessionUpdate(o)}else l.warn(\"Ignoring potential jibri presence due to no session id.\")}}])&&u(t.prototype,n),r&&u(t,r),e}();t.a=d}).call(this,\"modules/recording/RecordingManager.js\")},function(e,t,n){\"use strict\";(function(e){n.d(t,\"a\",function(){return m});var r=n(3),i=n(8),o=n(4),a=n(11),s=n(6);function c(e){return function(e){if(Array.isArray(e)){for(var t=0,n=new Array(e.length);t<e.length;t++)n[t]=e[t];return n}}(e)||function(e){if(Symbol.iterator in Object(e)||\"[object Arguments]\"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError(\"Invalid attempt to spread non-iterable instance\")}()}function u(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function l(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function d(e,t,n){return t&&l(e.prototype,t),n&&l(e,n),e}var p=Object(o.getLogger)(e),h={offerToReceiveAudio:1,offerToReceiveVideo:0},f=function(){function e(t,n,r,i){u(this,e),this.region=t,this.getStatsIntervalMs=r,this.getStatsInterval=null,this.rtt=1/0,this.rtts=[];var o=[{url:\"stun:\".concat(n)}];this.pc=new a.a.RTCPeerConnectionType({iceServers:o}),this.candidates={},this.stopped=!1,this.start=this.start.bind(this),this.stop=this.stop.bind(this),this.startStatsInterval=this.startStatsInterval.bind(this),this.handleCandidateRtt=this.handleCandidateRtt.bind(this),window.setTimeout(this.start,i)}return d(e,[{key:\"start\",value:function(){var e=this;this.stopped||this.pc.createOffer(h).then(function(t){e.pc.setLocalDescription(t,function(){p.info(\"setLocalDescription success for \".concat(e.region)),e.startStatsInterval()},function(t){p.warn(\"setLocalDescription failed for \".concat(e.region,\": \").concat(t))})})}},{key:\"startStatsInterval\",value:function(){var e=this;this.getStatsInterval=window.setInterval(function(){e.pc.getStats(function(t){for(var n=t.result(),r=0;r<n.length;++r){var i=n[r],o=Number(i.stat(\"stunKeepaliveRttTotal\"));if(o>0){var a=\"\".concat(i.stat(\"ipAddress\"),\"_\").concat(i.stat(\"portNumber\"),\"_\").concat(i.stat(\"priority\"));e.handleCandidateRtt(a,o,Number(i.stat(\"stunKeepaliveResponsesReceived\")),Number(i.stat(\"stunKeepaliveRequestsSent\")))}}var s=1/0;for(var u in e.candidates)e.candidates.hasOwnProperty(u)&&e.candidates[u].rtt>0&&(s=Math.min(s,e.candidates[u].rtt));e.rtts.push(s),e.rtts.length>6&&(e.rtts=e.rtts.splice(1,7)),e.rtt=Math.min.apply(Math,c(e.rtts))})},this.getStatsIntervalMs)}},{key:\"handleCandidateRtt\",value:function(e,t,n,r){this.candidates[e]||(this.candidates[e]={rttTotal:0,responsesReceived:0,requestsSent:0,rtt:NaN});var i=t-this.candidates[e].rttTotal,o=n-this.candidates[e].responsesReceived,a=r-n-(this.candidates[e].requestsSent-this.candidates[e].responsesReceived),s=NaN;o>0&&0===a&&(s=i/o),this.candidates[e].rttTotal=t,this.candidates[e].responsesReceived=n,this.candidates[e].requestsSent=r,this.candidates[e].rtt=s}},{key:\"stop\",value:function(){this.getStatsInterval&&window.clearInterval(this.getStatsInterval),this.pc.close(),this.stopped=!0}}]),e}(),m=function(){function e(t){var n=this;if(u(this,e),t&&t.enabled&&r.a.supportsLocalCandidateRttStatistics()){this.pcMonitors={},this.startPCMonitors=this.startPCMonitors.bind(this),this.sendAnalytics=this.sendAnalytics.bind(this),this.stop=this.stop.bind(this),this.analyticsInterval=null,this.stopped=!1;var i=t.initialDelay||6e4;p.info(\"Starting RTT monitor with an initial delay of \".concat(i)),window.setTimeout(function(){return n.startPCMonitors(t)},i)}}return d(e,[{key:\"startPCMonitors\",value:function(e){var t=this;if(e.stunServers){if(!this.stopped){var n=e.getStatsInterval||1e4,r=e.analyticsInterval||n,i=n/Object.keys(e.stunServers).length,o=0;for(var a in e.stunServers)if(e.stunServers.hasOwnProperty(a)){var s=e.stunServers[a];this.pcMonitors[a]=new f(a,s,n,i*o),o++}window.setTimeout(function(){t.stopped||(t.analyticsInterval=window.setInterval(t.sendAnalytics,r))},1e3)}}else p.warn(\"No stun servers configured.\")}},{key:\"sendAnalytics\",value:function(){var e={};for(var t in this.pcMonitors)if(this.pcMonitors.hasOwnProperty(t)){var n=this.pcMonitors[t].rtt;isNaN(n)||n===1/0||(e[t.replace(\"-\",\"_\")]=n)}e&&s.a.sendAnalytics(Object(i.G)(e))}},{key:\"stop\",value:function(){for(var e in p.info(\"Stopping RttMonitor.\"),this.stopped=!0,this.pcMonitors)this.pcMonitors.hasOwnProperty(e)&&this.pcMonitors[e].stop();this.pcMonitors={},this.analyticsInterval&&window.clearInterval(this.analyticsInterval)}}]),e}()}).call(this,\"modules/rttmonitor/rttmonitor.js\")},function(e,t,n){\"use strict\";(function(e){n.d(t,\"a\",function(){return y});var r=n(8),i=n(4),o=n(34),a=n(2),s=n(9),c=n(3),u=n(6),l=n(14);function d(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function p(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function h(e,t,n){return t&&p(e.prototype,t),n&&p(e,n),e}var f=Object(i.getLogger)(e),m=function(){function e(t){d(this,e),this.name=t,this.count=0,this.sum=0,this.samples=[]}return h(e,[{key:\"addNext\",value:function(e){\"number\"!=typeof e?f.error(\"\".concat(this.name,\" - invalid value for idx: \").concat(this.count),e):isNaN(e)||(this.sum+=e,this.samples.push(e),this.count+=1)}},{key:\"calculate\",value:function(){return this.sum/this.count}},{key:\"appendReport\",value:function(e){e[\"\".concat(this.name,\"_avg\")]=this.calculate(),e[\"\".concat(this.name,\"_samples\")]=JSON.stringify(this.samples)}},{key:\"reset\",value:function(){this.samples=[],this.sum=0,this.count=0}}]),e}(),v=function(){function e(t,n,r){var i=this;d(this,e),this.isP2P=n,this._n=r,this._sampleIdx=0,this._avgRTT=new m(\"rtt\"),this._avgRemoteRTTMap=new Map,this._avgRtpStatsReporter=t,this._avgEnd2EndRTT=void 0,this._onConnectionStats=function(e,t){i.isP2P===e.isP2P&&i._calculateAvgStats(t)};var s=t._conference;s.statistics.addConnectionStatsListener(this._onConnectionStats),this.isP2P||(this._onUserLeft=function(e){return i._avgRemoteRTTMap.delete(e)},s.on(a.USER_LEFT,this._onUserLeft),this._onRemoteStatsUpdated=function(e,t){return i._processRemoteStats(e,t)},s.on(o.REMOTE_STATS_UPDATED,this._onRemoteStatsUpdated))}return h(e,[{key:\"_calculateAvgStats\",value:function(e){if(e){if(c.a.supportsRTTStatistics()&&e.transport&&e.transport.length&&this._avgRTT.addNext(e.transport[0].rtt),this._sampleIdx+=1,this._sampleIdx>=this._n){if(c.a.supportsRTTStatistics()){var t=this._avgRtpStatsReporter._conference,n={p2p:this.isP2P,conference_size:t.getParticipantCount()};if(e.transport&&e.transport.length&&Object.assign(n,{local_candidate_type:e.transport[0].localCandidateType,remote_candidate_type:e.transport[0].remoteCandidateType,transport_type:e.transport[0].type}),this._avgRTT.appendReport(n),this.isP2P){var i=this._avgRtpStatsReporter.jvbStatsMonitor._avgEnd2EndRTT;isNaN(i)||(n.rtt_diff=this._avgRTT.calculate()-i)}else{var o=this._calculateAvgRemoteRTT(),a=this._avgRTT.calculate();this._avgEnd2EndRTT=a+o,isNaN(a)||isNaN(o)||(n.end2end_rtt_avg=this._avgEnd2EndRTT)}u.a.sendAnalytics(Object(r.F)(n))}this._resetAvgStats()}}else f.error(\"No stats\")}},{key:\"_calculateAvgRemoteRTT\",value:function(){var e=0,t=0,n=!0,r=!1,i=void 0;try{for(var o,a=this._avgRemoteRTTMap.values()[Symbol.iterator]();!(n=(o=a.next()).done);n=!0){var s=o.value,c=s.calculate();isNaN(c)||(t+=c,e+=1,s.reset())}}catch(e){r=!0,i=e}finally{try{n||null==a.return||a.return()}finally{if(r)throw i}}return t/e}},{key:\"_processRemoteStats\",value:function(e,t){var n=\"number\"==typeof t.jvbRTT,r=this._avgRemoteRTTMap.get(e);!r&&n&&(r=new m(\"\".concat(e,\"_stat_rtt\")),this._avgRemoteRTTMap.set(e,r)),n?r.addNext(t.jvbRTT):r&&this._avgRemoteRTTMap.delete(e)}},{key:\"_resetAvgStats\",value:function(){this._avgRTT.reset(),this._avgRemoteRTTMap&&this._avgRemoteRTTMap.clear(),this._sampleIdx=0}},{key:\"dispose\",value:function(){var e=this._avgRtpStatsReporter._conference;e.statistics.removeConnectionStatsListener(this._onConnectionStats),this.isP2P||(e.off(o.REMOTE_STATS_UPDATED,this._onRemoteStatsUpdated),e.off(a.USER_LEFT,this._onUserLeft))}}]),e}(),y=function(){function e(t,n){var r=this;d(this,e),this._n=n,n>0?(f.info(\"Avg RTP stats will be calculated every \".concat(n,\" samples\")),this._sampleIdx=0,this._conference=t,this._avgAudioBitrateUp=new m(\"bitrate_audio_upload\"),this._avgAudioBitrateDown=new m(\"bitrate_audio_download\"),this._avgVideoBitrateUp=new m(\"bitrate_video_upload\"),this._avgVideoBitrateDown=new m(\"bitrate_video_download\"),this._avgBandwidthUp=new m(\"bandwidth_upload\"),this._avgBandwidthDown=new m(\"bandwidth_download\"),this._avgPacketLossTotal=new m(\"packet_loss_total\"),this._avgPacketLossUp=new m(\"packet_loss_upload\"),this._avgPacketLossDown=new m(\"packet_loss_download\"),this._avgRemoteFPS=new m(\"framerate_remote\"),this._avgRemoteScreenFPS=new m(\"framerate_screen_remote\"),this._avgLocalFPS=new m(\"framerate_local\"),this._avgLocalScreenFPS=new m(\"framerate_screen_local\"),this._avgRemoteCameraPixels=new m(\"pixels_remote\"),this._avgRemoteScreenPixels=new m(\"pixels_screen_remote\"),this._avgLocalCameraPixels=new m(\"pixels_local\"),this._avgLocalScreenPixels=new m(\"pixels_screen_local\"),this._avgCQ=new m(\"connection_quality\"),this._onLocalStatsUpdated=function(e){return r._calculateAvgStats(e)},t.on(o.LOCAL_STATS_UPDATED,this._onLocalStatsUpdated),this._onP2PStatusChanged=function(){f.debug(\"Resetting average stats calculation\"),r._resetAvgStats(),r.jvbStatsMonitor._resetAvgStats(),r.p2pStatsMonitor._resetAvgStats()},t.on(a.P2P_STATUS,this._onP2PStatusChanged),this._onJvb121StatusChanged=function(e,t){!0===t&&(f.info(\"Resetting JVB avg RTP stats\"),r._resetAvgJvbStats())},t.on(a.JVB121_STATUS,this._onJvb121StatusChanged),this.jvbStatsMonitor=new v(this,!1,n),this.p2pStatsMonitor=new v(this,!0,n)):f.info(\"Avg RTP stats reports are disabled.\")}return h(e,[{key:\"_calculateAvgStats\",value:function(e){if(e){var t=this._conference.isP2PActive(),n=this._conference.getParticipantCount();if(t||!(n<2)){var i=e.bitrate,o=e.bandwidth,a=e.packetLoss,s=e.framerate,d=e.resolution;if(i)if(o)if(a)if(s)if(d){if(this._avgAudioBitrateUp.addNext(i.audio.upload),this._avgAudioBitrateDown.addNext(i.audio.download),this._avgVideoBitrateUp.addNext(i.video.upload),this._avgVideoBitrateDown.addNext(i.video.download),c.a.supportsBandwidthStatistics()&&(this._avgBandwidthUp.addNext(o.upload),this._avgBandwidthDown.addNext(o.download)),this._avgPacketLossUp.addNext(a.upload),this._avgPacketLossDown.addNext(a.download),this._avgPacketLossTotal.addNext(a.total),this._avgCQ.addNext(e.connectionQuality),s&&(this._avgRemoteFPS.addNext(this._calculateAvgVideoFps(s,!1,l.CAMERA)),this._avgRemoteScreenFPS.addNext(this._calculateAvgVideoFps(s,!1,l.DESKTOP)),this._avgLocalFPS.addNext(this._calculateAvgVideoFps(s,!0,l.CAMERA)),this._avgLocalScreenFPS.addNext(this._calculateAvgVideoFps(s,!0,l.DESKTOP))),d&&(this._avgRemoteCameraPixels.addNext(this._calculateAvgVideoPixels(d,!1,l.CAMERA)),this._avgRemoteScreenPixels.addNext(this._calculateAvgVideoPixels(d,!1,l.DESKTOP)),this._avgLocalCameraPixels.addNext(this._calculateAvgVideoPixels(d,!0,l.CAMERA)),this._avgLocalScreenPixels.addNext(this._calculateAvgVideoPixels(d,!0,l.DESKTOP))),this._sampleIdx+=1,this._sampleIdx>=this._n){var p={p2p:t,conference_size:n};e.transport&&e.transport.length&&Object.assign(p,{local_candidate_type:e.transport[0].localCandidateType,remote_candidate_type:e.transport[0].remoteCandidateType,transport_type:e.transport[0].type}),this._avgAudioBitrateUp.appendReport(p),this._avgAudioBitrateDown.appendReport(p),this._avgVideoBitrateUp.appendReport(p),this._avgVideoBitrateDown.appendReport(p),c.a.supportsBandwidthStatistics()&&(this._avgBandwidthUp.appendReport(p),this._avgBandwidthDown.appendReport(p)),this._avgPacketLossUp.appendReport(p),this._avgPacketLossDown.appendReport(p),this._avgPacketLossTotal.appendReport(p),this._avgRemoteFPS.appendReport(p),isNaN(this._avgRemoteScreenFPS.calculate())||this._avgRemoteScreenFPS.appendReport(p),this._avgLocalFPS.appendReport(p),isNaN(this._avgLocalScreenFPS.calculate())||this._avgLocalScreenFPS.appendReport(p),this._avgRemoteCameraPixels.appendReport(p),isNaN(this._avgRemoteScreenPixels.calculate())||this._avgRemoteScreenPixels.appendReport(p),this._avgLocalCameraPixels.appendReport(p),isNaN(this._avgLocalScreenPixels.calculate())||this._avgLocalScreenPixels.appendReport(p),this._avgCQ.appendReport(p),u.a.sendAnalytics(Object(r.F)(p)),this._resetAvgStats()}}else f.error(\"No resolution\");else f.error('No \"framerate\"');else f.error('No \"packetloss\"');else f.error('No \"bandwidth\"');else f.error('No \"bitrate\"')}}else f.error(\"No stats\")}},{key:\"_calculateAvgVideoPixels\",value:function(e,t,n){for(var r=0,i=0,o=this._conference.myUserId(),a=Object.keys(e),s=0;s<a.length;s++){var c=a[s];if(t?c===o:c!==o){var u=t?null:this._conference.getParticipantById(c),l=e[c];if((t||u)&&l){var d=this._calculatePeerAvgVideoPixels(l,u,n);isNaN(d)||(r+=d,i+=1)}}}return r/i}},{key:\"_calculatePeerAvgVideoPixels\",value:function(e,t,n){var r=Object.keys(e).map(function(e){return Number(e)}),i=null,o=this._conference.getActivePeerConnection();t?(i=t.getTracksByMediaType(s.b))&&(r=r.filter(function(e){return i.find(function(t){return!t.isMuted()&&t.getSSRC()===e&&t.videoType===n})})):(i=this._conference.getLocalTracks(s.b),r=r.filter(function(e){return i.find(function(t){return!t.isMuted()&&o.getLocalSSRC(t)===e&&t.videoType===n})}));var a=0,c=0,u=!0,l=!1,d=void 0;try{for(var p,h=r[Symbol.iterator]();!(u=(p=h.next()).done);u=!0){var f=p.value,m=Number(e[f].height)*Number(e[f].width);!isNaN(m)&&m>0&&(a+=m,c+=1)}}catch(e){l=!0,d=e}finally{try{u||null==h.return||h.return()}finally{if(l)throw d}}return a/c}},{key:\"_calculateAvgVideoFps\",value:function(e,t,n){for(var r=0,i=0,o=this._conference.myUserId(),a=Object.keys(e),s=0;s<a.length;s++){var c=a[s];if(t?c===o:c!==o){var u=t?null:this._conference.getParticipantById(c),l=e[c];if((t||u)&&l){var d=this._calculatePeerAvgVideoFps(l,u,n);isNaN(d)||(r+=d,i+=1)}}}return r/i}},{key:\"_calculatePeerAvgVideoFps\",value:function(e,t,n){var r=Object.keys(e).map(function(e){return Number(e)}),i=null,o=this._conference.getActivePeerConnection();t?(i=t.getTracksByMediaType(s.b))&&(r=r.filter(function(e){return i.find(function(t){return!t.isMuted()&&t.getSSRC()===e&&t.videoType===n})})):(i=this._conference.getLocalTracks(s.b),r=r.filter(function(e){return i.find(function(t){return!t.isMuted()&&o.getLocalSSRC(t)===e&&t.videoType===n})}));var a=0,c=0,u=!0,l=!1,d=void 0;try{for(var p,h=r[Symbol.iterator]();!(u=(p=h.next()).done);u=!0){var f=p.value,m=Number(e[f]);!isNaN(m)&&m>0&&(a+=m,c+=1)}}catch(e){l=!0,d=e}finally{try{u||null==h.return||h.return()}finally{if(l)throw d}}return a/c}},{key:\"_resetAvgJvbStats\",value:function(){this._resetAvgStats(),this.jvbStatsMonitor._resetAvgStats()}},{key:\"_resetAvgStats\",value:function(){this._avgAudioBitrateUp.reset(),this._avgAudioBitrateDown.reset(),this._avgVideoBitrateUp.reset(),this._avgVideoBitrateDown.reset(),this._avgBandwidthUp.reset(),this._avgBandwidthDown.reset(),this._avgPacketLossUp.reset(),this._avgPacketLossDown.reset(),this._avgPacketLossTotal.reset(),this._avgRemoteFPS.reset(),this._avgRemoteScreenFPS.reset(),this._avgLocalFPS.reset(),this._avgLocalScreenFPS.reset(),this._avgRemoteCameraPixels.reset(),this._avgRemoteScreenPixels.reset(),this._avgLocalCameraPixels.reset(),this._avgLocalScreenPixels.reset(),this._avgCQ.reset(),this._sampleIdx=0}},{key:\"dispose\",value:function(){this._conference.off(a.P2P_STATUS,this._onP2PStatusChanged),this._conference.off(o.LOCAL_STATS_UPDATED,this._onLocalStatsUpdated),this._conference.off(a.JVB121_STATUS,this._onJvb121StatusChanged),this.jvbStatsMonitor.dispose(),this.p2pStatsMonitor.dispose()}}]),e}()}).call(this,\"modules/statistics/AvgRTPStatsReporter.js\")},function(e,t,n){\"use strict\";n.d(t,\"a\",function(){return u});var r=n(2),i=n(59),o=n.n(i),a=n(0),s=n.n(a);function c(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var u=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this.stats={users:{},dominantSpeakerId:null};var n=t.myUserId();this.stats.users[n]=new o.a(n,null,!0),t.addEventListener(r.DOMINANT_SPEAKER_CHANGED,this._onDominantSpeaker.bind(this)),t.addEventListener(r.USER_JOINED,this._onUserJoin.bind(this)),t.addEventListener(r.USER_LEFT,this._onUserLeave.bind(this)),t.addEventListener(r.DISPLAY_NAME_CHANGED,this._onDisplayNameChange.bind(this)),t.xmpp&&t.xmpp.addListener(s.a.SPEAKER_STATS_RECEIVED,this._updateStats.bind(this))}var t,n,i;return t=e,(n=[{key:\"_onDominantSpeaker\",value:function(e){var t=this.stats.users[this.stats.dominantSpeakerId],n=this.stats.users[e];t&&t.setDominantSpeaker(!1),n&&n.setDominantSpeaker(!0),this.stats.dominantSpeakerId=e}},{key:\"_onUserJoin\",value:function(e,t){var n=this.stats.users[e];n||(n=this.stats.users[e]=new o.a(e,t.getDisplayName()))}},{key:\"_onUserLeave\",value:function(e){var t=this.stats.users[e];t&&t.markAsHasLeft()}},{key:\"_onDisplayNameChange\",value:function(e,t){var n=this.stats.users[e];n&&n.setDisplayName(t)}},{key:\"getStats\",value:function(){return this.stats.users}},{key:\"_updateStats\",value:function(e){for(var t in e){var n=void 0;this.stats.users[t]?(n=this.stats.users[t]).getDisplayName()||n.setDisplayName(e[t].displayName):(n=new o.a(t,e[t].displayName),this.stats.users[t]=n,n.markAsHasLeft()),n.totalDominantSpeakerTime=e[t].totalDominantSpeakerTime}}}])&&c(t.prototype,n),i&&c(t,i),e}()},function(e,t,n){var r=n(68),i=n(153),o=\"before\";function a(){this.audioRecorder=new r,this.transcriptionService=new i,this.counter=null,this.startTime=null,this.transcription=null,this.callback=null,this.results=[],this.state=o,this.lineLength=0}function s(e){for(var t=0;t<e.length;t++)0===e[t].length&&e.splice(t,1);return e.length>0}a.prototype.start=function(){if(this.state!==o)throw new Error(\"The transcription can only start when it's in the \\\"\".concat(o,'\" state. It\\'s currently in the \"').concat(this.state,'\" state'));this.state=\"recording\",this.audioRecorder.start(),this.startTime=new Date},a.prototype.stop=function(e){var t=this;if(\"recording\"!==this.state)throw new Error(\"The transcription can only stop when it's in the \\\"\".concat(\"recording\",'\" state. It\\'s currently in the \"').concat(this.state,'\" state'));console.log(\"stopping recording and sending audio files\"),this.audioRecorder.stop();var n=function(e,t){if(console.log(\"retrieved an answer from the transcription service. The answer has an\"+\" array of length: \".concat(t.wordArray.length)),t.wordArray.length>0){var n=t.startTime.getUTCMilliseconds()-e.startTime.getUTCMilliseconds();n<0&&(n=0);var r=\"[\";t.wordArray.forEach(function(e){e.begin+=n,e.end+=n,r+=\"\".concat(e.word,\",\")}),r+=\"]\",console.log(r),t.wordArray.name=t.name}e.results.push(t.wordArray),e.counter--,console.log(\"current counter: \".concat(e.counter)),e.maybeMerge()}.bind(null,this);this.audioRecorder.getRecordingResults().forEach(function(e){t.transcriptionService.send(e,n),t.counter++}),this.state=\"transcribing\",this.callback=e},a.prototype.maybeMerge=function(){\"transcribing\"===this.state&&0===this.counter&&this.merge()},a.prototype.merge=function(){var e=this;console.log(\"starting merge process!\\n The length of the array: \".concat(this.results.length)),this.transcription=\"\";var t=this.results,n=[];s(t),t.forEach(function(e){return function(e,t){if(0===e.length)e.push(t);else{if(e[e.length-1].begin<=t.begin)return void e.push(t);for(var n=0;n<e.length;n++)if(t.begin<e[n].begin)return void e.splice(n,0,t);e.push(t)}}(n,e)});for(var r=function(){var n=t[0];t.forEach(function(e){e[0].begin<n[0].begin&&(n=e)});var r=n.shift();e.updateTranscription(r,n.name);for(var i=function(){var i=!1,o=n[0].begin;if(t.forEach(function(e){e[0].begin<o&&(i=!0)}),i)return\"break\";r=n.shift(),e.updateTranscription(r,null)};n.length>0;){if(\"break\"===i())break}};s(t);)r();this.state=\"finished\",this.callback&&this.callback(this.transcription)},a.prototype.updateTranscription=function(e,t){null!=t&&(this.transcription+=\"\\n\".concat(t,\":\"),this.lineLength=t.length+1),this.lineLength+e.word.length>80&&(this.transcription+=\"\\n    \",this.lineLength=4),this.transcription+=\" \".concat(e.word),this.lineLength+=e.word.length+1},a.prototype.addTrack=function(e){this.audioRecorder.addTrack(e)},a.prototype.removeTrack=function(e){this.audioRecorder.removeTrack(e)},a.prototype.getTranscription=function(){if(\"finished\"!==this.state)throw new Error(\"The transcription can only be retrieved when it's in the \\\"\".concat(\"finished\",'\" state. It\\'s currently in the \"').concat(this.state,'\" state'));return this.transcription},a.prototype.getState=function(){return this.state},a.prototype.reset=function(){this.state=o,this.counter=null,this.transcription=null,this.startTime=null,this.callback=null,this.results=[],this.lineLength=0},e.exports=a},function(e,t,n){\"use strict\";(function(e){n.d(t,\"a\",function(){return o});var r=n(6),i=n(4).getLogger(e);function o(e){this.versions={},this.conference=e,this.conference.addCommandListener(\"versions\",this.processPresence.bind(this))}o.FOCUS_COMPONENT=\"focus\",o.VIDEOBRIDGE_COMPONENT=\"videobridge\",o.XMPP_SERVER_COMPONENT=\"xmpp\",o.prototype.processPresence=function(e,t,n){var a=this;if(\"http://jitsi.org/jitmeet\"===e.attributes.xmlns)if(this.conference._isFocus(n)){var s=[];e.children.forEach(function(e){var t=e.attributes.name;if(t===o.FOCUS_COMPONENT||t===o.XMPP_SERVER_COMPONENT||t===o.VIDEOBRIDGE_COMPONENT){var n=e.value;a.versions[t]!==n&&(a.versions[t]=n,i.info(\"Got \".concat(t,\" version: \").concat(n)),s.push({id:\"component_version\",component:t,version:n}))}else i.warn(\"Received version for not supported component name: \".concat(t))}),s.length>0&&r.a.sendLog(JSON.stringify(s))}else i.warn(\"Received versions not from the focus user: \".concat(e),n);else i.warn(\"Ignored presence versions node - invalid xmlns\",e)},o.prototype.getComponentVersion=function(e){return this.versions[e]}}).call(this,\"modules/version/ComponentsVersions.js\")},function(e,t,n){\"use strict\";(function(e){n.d(t,\"a\",function(){return l});var r=n(4),i=n(117),o=n(20),a=n(0),s=n.n(a);function c(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var u=Object(r.getLogger)(e),l=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this.chatRoom=t,this.eventEmitter=t.eventEmitter,u.debug(\"creating VideoSIPGW\"),this.sessions={},this.sessionStateChangeListener=this.sessionStateChanged.bind(this),t.addPresenceListener(\"jibri-sip-call-state\",this.handleJibriSIPState.bind(this))}var t,n,r;return t=e,(n=[{key:\"handleJibriSIPState\",value:function(e){var t=e.attributes;if(t){u.debug(\"Handle video sip gw state : \",t);var n=t.state;if(n!==this.state)switch(n){case o.STATE_ON:case o.STATE_OFF:case o.STATE_PENDING:case o.STATE_RETRYING:case o.STATE_FAILED:var r=t.sipaddress;if(!r)return;var i=this.sessions[r];i?i.setState(n,t.failure_reason):u.warn(\"Video SIP GW session not found:\",r)}}}},{key:\"createVideoSIPGWSession\",value:function(e,t){if(this.sessions[e])return u.warn(\"There was already a Video SIP GW session for address\",e),new Error(o.ERROR_SESSION_EXISTS);var n=new i.a(e,t,this.chatRoom);return n.addStateListener(this.sessionStateChangeListener),this.sessions[e]=n,n}},{key:\"sessionStateChanged\",value:function(e){var t=e.address;if(e.newState===o.STATE_OFF||e.newState===o.STATE_FAILED){var n=this.sessions[t];if(!n)return void u.error(\"Missing Video SIP GW session with address:\",t);n.removeStateListener(this.sessionStateChangeListener),delete this.sessions[t]}this.eventEmitter.emit(s.a.VIDEO_SIP_GW_SESSION_STATE_CHANGED,e)}}])&&c(t.prototype,n),r&&c(t,r),e}()}).call(this,\"modules/videosipgw/VideoSIPGW.js\")},function(e,t,n){\"use strict\";(function(e){n.d(t,\"a\",function(){return h});var r=n(4),i=n(1),o=n(24),a=n(20);function s(e){return(s=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function c(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function u(e,t){return!t||\"object\"!==s(t)&&\"function\"!=typeof t?function(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}(e):t}function l(e){return(l=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function d(e,t){return(d=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var p=Object(r.getLogger)(e),h=function(e){function t(e,n,r){var i;return function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t),(i=u(this,l(t).call(this))).sipAddress=e,i.displayName=n,i.chatRoom=r,i.state=void 0,i}var n,r,s;return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&d(e,t)}(t,o[\"a\"]),n=t,(r=[{key:\"stop\",value:function(){this.state!==a.STATE_OFF&&this.state!==a.STATE_FAILED?this._sendJibriIQ(\"stop\"):p.warn(\"Video SIP GW session already stopped or failed!\")}},{key:\"start\",value:function(){this.state!==a.STATE_ON&&this.state!==a.STATE_OFF&&this.state!==a.STATE_PENDING&&this.state!==a.STATE_RETRYING?this._sendJibriIQ(\"start\"):p.warn(\"Video SIP GW session already started!\")}},{key:\"setState\",value:function(e,t){if(e!==this.state){var n=this.state;this.state=e,this.eventEmitter.emit(\"STATE_CHANGED\",{address:this.sipAddress,failureReason:t,oldState:n,newState:this.state,displayName:this.displayName})}}},{key:\"addStateListener\",value:function(e){this.addListener(\"STATE_CHANGED\",e)}},{key:\"removeStateListener\",value:function(e){this.removeListener(\"STATE_CHANGED\",e)}},{key:\"_sendJibriIQ\",value:function(e){var t=this,n={xmlns:\"http://jitsi.org/protocol/jibri\",action:e,sipaddress:this.sipAddress};n.displayname=this.displayName;var r=Object(i.$iq)({to:this.chatRoom.focusMucJid,type:\"set\"}).c(\"jibri\",n).up();p.debug(\"\".concat(e,\" video SIP GW session\"),r.nodeTree),this.chatRoom.connection.sendIQ(r,function(){},function(n){p.error(\"Failed to \".concat(e,\" video SIP GW session, error: \"),n),t.setState(a.STATE_FAILED)})}}])&&c(n.prototype,r),s&&c(n,s),t}()}).call(this,\"modules/videosipgw/JitsiVideoSIPGWSession.js\")},function(e,t,n){\"use strict\";t.a={error:{BUSY:\"busy\",ERROR:\"error\",RESOURCE_CONSTRAINT:\"resource-constraint\",SERVICE_UNAVAILABLE:\"service-unavailable\"},mode:{FILE:\"file\",STREAM:\"stream\"},status:{OFF:\"off\",ON:\"on\",PENDING:\"pending\"}}},function(e,t,n){\"use strict\";(function(e){n.d(t,\"a\",function(){return v});var r=n(4),i=n(1),o=n(9),a=n(14),s=n.n(a),c=n(13),u=n(120),l=n(29);function d(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);\"function\"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),r.forEach(function(t){p(e,t,n[t])})}return e}function p(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function h(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}function f(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var m=Object(r.getLogger)(e),v=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e);var n=t.jitsiConnection,r=h(t,[\"jitsiConnection\"]);this._options=d({iceConfig:n&&n.xmpp.connection.jingle.p2pIceConfig},r),this._peerConnection=null,this._onFatalError=this._onFatalError.bind(this),this._onSendMessage=this._onSendMessage.bind(this),this._onRemoteStream=this._onRemoteStream.bind(this)}var t,n,r;return t=e,(n=[{key:\"processMessage\",value:function(e){var t=e.from;if(t)if(this._peerConnection&&this._peerConnection.getPeerJid()!==t)this._onFatalError(t,l.a.CONNECTION_ERROR,\"rejected\");else{var n=this._convertStringToXML(e.data.iq),r=n&&n.find(\"jingle\"),i=r&&r.attr(\"action\");i===l.a.INITIATE&&(this._peerConnection=this._createPeerConnection(t,{isInitiator:!1,receiveVideo:!0})),this._peerConnection&&this._peerConnection.processMessage(r),i!==l.a.CONNECTION_ERROR&&i!==l.a.UNAVAILABLE&&i!==l.a.TERMINATE||this._selfCloseConnection()}}},{key:\"start\",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];this._peerConnection=this._createPeerConnection(e,{isInitiator:!0,receiveVideo:!1}),this._peerConnection.start(t)}},{key:\"stop\",value:function(){this._peerConnection&&this._peerConnection.stop(),this._peerConnection=null}},{key:\"_convertStringToXML\",value:function(e){try{var t=(new DOMParser).parseFromString(e,\"text/xml\");return $(t)}catch(e){return m.error(\"Attempted to convert incorrectly formatted xml\"),null}}},{key:\"_createPeerConnection\",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!e)throw new Error(\"Cannot create ProxyConnectionPC without a peer.\");var n=d({iceConfig:this._options.iceConfig,onError:this._onFatalError,onRemoteStream:this._onRemoteStream,onSendMessage:this._onSendMessage,peerJid:e},t);return new u.a(n)}},{key:\"_onFatalError\",value:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:\"\";m.error(\"Received a proxy connection error\",e,t,n);var r=Object(i.$iq)({to:e,type:\"set\"}).c(\"jingle\",{xmlns:\"urn:xmpp:jingle:1\",action:t}).c(\"details\").t(n).up();this._onSendMessage(e,r),this._peerConnection&&this._peerConnection.getPeerJid()===e&&this._selfCloseConnection()}},{key:\"_onRemoteStream\",value:function(e){if(!this._options.onRemoteStream)return m.error(\"Remote track received without callback.\"),void e.dispose();var t,n=e.isVideoTrack();n&&(t=this._options.convertVideoToDesktop?s.a.DESKTOP:s.a.CAMERA);var r=e.getOriginalStream(),i=c.a.newCreateLocalTracks([{deviceId:\"proxy:\".concat(this._peerConnection.getPeerJid()),mediaType:n?o.b:o.a,sourceType:\"proxy\",stream:r,track:r.getVideoTracks()[0],videoType:t}]);this._options.onRemoteStream(i[0])}},{key:\"_onSendMessage\",value:function(e,t){if(this._options.onSendMessage)try{var n=(new XMLSerializer).serializeToString(t.nodeTree||t);this._options.onSendMessage(e,{iq:n})}catch(e){m.error(\"Attempted to send an incorrectly formatted iq.\")}}},{key:\"_selfCloseConnection\",value:function(){this.stop(),this._options.onConnectionClosed&&this._options.onConnectionClosed()}}])&&f(t.prototype,n),r&&f(t,r),e}()}).call(this,\"modules/proxyconnection/ProxyConnectionService.js\")},function(e,t,n){\"use strict\";(function(e){n.d(t,\"a\",function(){return v});var r=n(4),i=n(13),o=n(7),a=n.n(o),s=n(0),c=n.n(s),u=n(47),l=n(38),d=n(29);function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);\"function\"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),r.forEach(function(t){h(e,t,n[t])})}return e}function h(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function f(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var m=Object(r.getLogger)(e),v=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this._options=p({iceConfig:{},isInitiator:!1,receiveAudio:!1,receiveVideo:!1},t),this._tracks=[],this._peerConnection=null,this._onError=this._onError.bind(this),this._onRemoteStream=this._onRemoteStream.bind(this),this._onSendMessage=this._onSendMessage.bind(this)}var t,n,r;return t=e,(n=[{key:\"getPeerJid\",value:function(){return this._options.peerJid}},{key:\"processMessage\",value:function(e){switch(e.attr(\"action\")){case d.a.ACCEPT:this._onSessionAccept(e);break;case d.a.INITIATE:this._onSessionInitiate(e);break;case d.a.TERMINATE:this._onSessionTerminate(e);break;case d.a.TRANSPORT_INFO:this._onTransportInfo(e)}}},{key:\"start\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];this._peerConnection||(this._tracks=this._tracks.concat(e),this._peerConnection=this._createPeerConnection(),this._peerConnection.invite(e))}},{key:\"stop\",value:function(){this._peerConnection&&this._peerConnection.terminate(),this._onSessionTerminate()}},{key:\"_createPeerConnection\",value:function(){var e=this,t={jingle:{terminate:function(){}},sendIQ:this._onSendMessage},n=p({iceServers:l.a},this._options.iceConfig),r={addPresenceListener:function(){},connectionTimes:[],eventEmitter:{emit:function(t){switch(t){case c.a.CONNECTION_ICE_FAILED:case c.a.CONNECTION_FAILED:e._onError(d.a.CONNECTION_ERROR,t)}}},getMediaPresenceInfo:function(){return{}},removePresenceListener:function(){}};this._rtc=new i.a(this,{}),this._rtc.addListener(a.a.REMOTE_TRACK_ADDED,this._onRemoteStream);var o=new u.a(void 0,void 0,this._options.peerJid,t,{offerToReceiveAudio:this._options.receiveAudio,offerToReceiveVideo:this._options.receiveVideo},n,!0,this._options.isInitiator);return o.initialize(r,this._rtc,{}),o}},{key:\"_onError\",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"\";this._options.onError(this._options.peerJid,e,t)}},{key:\"_onRemoteStream\",value:function(e){this._tracks.push(e),this._options.onRemoteStream(e)}},{key:\"_onSendMessage\",value:function(e){this._options.onSendMessage(this._options.peerJid,e)}},{key:\"_onSessionAccept\",value:function(e){this._peerConnection?this._peerConnection.setAnswer(e):m.error(\"Received an answer when no peer connection exists.\")}},{key:\"_onSessionInitiate\",value:function(e){var t=this;this._peerConnection?m.error(\"Received an offer when an offer was already sent.\"):(this._peerConnection=this._createPeerConnection(),this._peerConnection.acceptOffer(e,function(){},function(){return t._onError(t._options.peerJid,d.a.CONNECTION_ERROR,\"session initiate error\")}))}},{key:\"_onSessionTerminate\",value:function(){this._tracks.forEach(function(e){return e.dispose()}),this._tracks=[],this._peerConnection&&this._peerConnection.onTerminated(),this._rtc&&(this._rtc.removeListener(a.a.REMOTE_TRACK_ADDED,this._onRemoteStream),this._rtc.destroy())}},{key:\"_onTransportInfo\",value:function(e){this._peerConnection.addIceCandidates(e)}}])&&f(t.prototype,n),r&&f(t,r),e}()}).call(this,\"modules/proxyconnection/ProxyConnectionPC.js\")},function(e,t,n){e.exports=n(122).default},function(e,t,n){\"use strict\";n.r(t),function(e){var r=n(8),i=n(69),o=n.n(i),a=n(34),s=n(52),c=n(10),u=n.n(c),l=n(21),d=n(2),p=n(70),h=n(39),f=n(22),m=n(63),v=n(48),y=n(15),g=n(12),_=n(17),S=n(55),b=n(53),E=n(4),T=n.n(E),C=n(9),R=n(31),w=n.n(R),A=n(45),k=n(13),O=n(3),I=n(54),P=n.n(I),D=n(118),N=n(119),L=n(6),M=n(20);function x(e){return(x=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}var j,F=T.a.getLogger(e);function U(e){var t={audio_requested:e.devices.includes(\"audio\"),video_requested:e.devices.includes(\"video\"),screen_sharing_requested:e.devices.includes(\"desktop\")};return t.video_requested&&(t.resolution=e.resolution),t}t.default=(j={version:\"development\",JitsiConnection:p.a,ProxyConnectionService:N.a,constants:{participantConnectionStatus:A.a,recording:D.a,sipVideoGW:M,transcriptionStatus:S},events:{conference:d,connection:f,track:_,mediaDevices:v,connectionQuality:a,e2eping:s},errors:{conference:l,connection:h,track:g},errorTypes:{JitsiTrackError:y.a},logLevels:T.a.levels,mediaDevices:m.a,analytics:L.a.analytics,init:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};L.a.init(e),window.connectionTimes||(window.connectionTimes={}),!0!==e.enableAnalyticsLogging&&(F.warn(\"Analytics disabled, disposing.\"),this.analytics.dispose()),e.enableWindowOnErrorHandler&&u.a.addHandler(this.getGlobalOnErrorHandler.bind(this));var t=e.deploymentInfo;if(t&&Object.keys(t).length>0){var n={};for(var r in t)t.hasOwnProperty(r)&&(n[r]=t[r]);n.id=\"deployment_info\",L.a.sendLog(JSON.stringify(n))}if(this.version){var i={id:\"component_version\",component:\"lib-jitsi-meet\",version:this.version};L.a.sendLog(JSON.stringify(i))}return k.a.init(e)},isDesktopSharingEnabled:function(){return k.a.isDesktopSharingEnabled()},isWebRtcSupported:function(){return k.a.isWebRtcSupported()},setLogLevel:function(e){T.a.setLogLevel(e)},setLogLevelById:function(e,t){T.a.setLogLevelById(e,t)},addGlobalLogTransport:function(e){T.a.addGlobalTransport(e)},removeGlobalLogTransport:function(e){T.a.removeGlobalTransport(e)},createLocalTracks:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=arguments.length>1?arguments[1]:void 0,i=arguments.length>2?arguments[2]:void 0,o=!1;return!0===n&&window.setTimeout(function(){o||m.a.emitEvent(v.PERMISSION_PROMPT_IS_SHOWN,O.a.getName())},1e3),window.connectionTimes||(window.connectionTimes={}),window.connectionTimes[\"obtainPermissions.start\"]=window.performance.now(),k.a.obtainAudioAndVideoPermissions(t).then(function(e){if(o=!0,window.connectionTimes[\"obtainPermissions.end\"]=window.performance.now(),L.a.sendAnalytics(Object(r.A)(\"success\",U(t))),!k.a.options.disableAudioLevels)for(var n=function(t){var n=e[t],r=n.getOriginalStream();n.getType()===C.a&&(L.a.startLocalStats(r,n.setAudioLevel.bind(n)),n.addEventListener(_.LOCAL_TRACK_STOPPED,function(){L.a.stopLocalStats(r)}))},i=0;i<e.length;i++)n(i);var a=k.a.getCurrentlyAvailableMediaDevices();if(a)for(i=0;i<e.length;i++){e[i]._setRealDeviceIdFromDeviceList(a)}return e}).catch(function(n){if(o=!0,n.name===g.UNSUPPORTED_RESOLUTION&&!O.a.usesNewGumFlow()){var a=t.resolution||\"720\",s=function(e){if(!w.a[e])return null;var t=w.a[e].order,n=null,r=null;return Object.keys(w.a).forEach(function(e){var i=w.a[e];(!n||n.order<i.order&&i.order<t)&&(r=e,n=i)}),r===e&&(r=null),r}(a);if(null!==s)return t.resolution=s,F.debug(\"Retry createLocalTracks with resolution\",s),L.a.sendAnalytics(Object(r.A)(\"warning\",{old_resolution:a,new_resolution:s,reason:\"unsupported resolution\"})),e.createLocalTracks(t,void 0,i||Object.assign({},t));if(i&&n.gum.constraints&&n.gum.constraints.video&&n.gum.constraints.video.mandatory&&n.gum.constraints.video.mandatory.sourceId)return i.cameraDeviceId=void 0,e.createLocalTracks(i)}if(n.name===g.CHROME_EXTENSION_USER_CANCELED){var c={id:\"chrome_extension_user_canceled\",message:n.message};L.a.sendLog(JSON.stringify(c)),L.a.sendAnalytics(Object(r.A)(\"warning\",{reason:\"extension install user canceled\"}))}else if(n.name===g.NOT_FOUND){var u={id:\"usermedia_missing_device\",status:n.gum.devices};L.a.sendLog(JSON.stringify(u));var l=U(t);l.reason=\"device not found\",l.devices=n.gum.devices.join(\".\"),L.a.sendAnalytics(Object(r.A)(\"error\",l))}else{L.a.sendGetUserMediaFailed(n);var d=U(t);d.reason=n.name,L.a.sendAnalytics(Object(r.A)(\"error\",d))}return window.connectionTimes[\"obtainPermissions.end\"]=window.performance.now(),Promise.reject(n)})},isDeviceListAvailable:function(){return F.warn(\"This method is deprecated, use JitsiMeetJS.mediaDevices.isDeviceListAvailable instead\"),this.mediaDevices.isDeviceListAvailable()},isDeviceChangeAvailable:function(e){return F.warn(\"This method is deprecated, use JitsiMeetJS.mediaDevices.isDeviceChangeAvailable instead\"),this.mediaDevices.isDeviceChangeAvailable(e)},isMultipleAudioInputSupported:function(){return this.mediaDevices.isMultipleAudioInputSupported()},isCollectingLocalStats:function(){return L.a.audioLevelsEnabled&&b.a.isLocalStatsSupported()},enumerateDevices:function(e){F.warn(\"This method is deprecated, use JitsiMeetJS.mediaDevices.enumerateDevices instead\"),this.mediaDevices.enumerateDevices(e)},getGlobalOnErrorHandler:function(e,t,n,r,i){F.error(\"UnhandledError: \".concat(e),\"Script: \".concat(t),\"Line: \".concat(n),\"Column: \".concat(r),\"StackTrace: \",i),L.a.reportGlobalError(i)},util:{AuthUtil:o.a,ScriptUtil:P.a,browser:O.a}},\"object\"===x(window.JitsiMeetJS)?Object.assign({},window.JitsiMeetJS,j):j)}.call(this,\"JitsiMeetJS.js\")},function(e,t,n){function r(e){return(r=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}var i=n(64);function o(e,t){this.logStorage=e,this.stringifyObjects=!(!t||!t.stringifyObjects)&&t.stringifyObjects,this.storeInterval=t&&t.storeInterval?t.storeInterval:3e4,this.maxEntryLength=t&&t.maxEntryLength?t.maxEntryLength:1e4,Object.keys(i.levels).forEach(function(e){this[i.levels[e]]=function(e){this._log.apply(this,arguments)}.bind(this,e)}.bind(this)),this.storeLogsIntervalID=null,this.queue=[],this.totalLen=0,this.outputCache=[]}o.prototype.stringify=function(e){try{return JSON.stringify(e)}catch(e){return\"[object with circular refs?]\"}},o.prototype.formatLogMessage=function(e){for(var t=\"\",n=1,o=arguments.length;n<o;n++){var a=arguments[n];!this.stringifyObjects&&e!==i.levels.ERROR||\"object\"!==r(a)||(a=this.stringify(a)),t+=a,n!=o-1&&(t+=\" \")}return t.length?t:null},o.prototype._log=function(){var e=this.formatLogMessage.apply(this,arguments);if(e){var t=this.queue.length?this.queue[this.queue.length-1]:void 0;(\"object\"===r(t)?t.text:t)==e?\"object\"===r(t)?t.count+=1:this.queue[this.queue.length-1]={text:e,count:2}:(this.queue.push(e),this.totalLen+=e.length)}this.totalLen>=this.maxEntryLength&&this._flush(!0,!0)},o.prototype.start=function(){this._reschedulePublishInterval()},o.prototype._reschedulePublishInterval=function(){this.storeLogsIntervalID&&(window.clearTimeout(this.storeLogsIntervalID),this.storeLogsIntervalID=null),this.storeLogsIntervalID=window.setTimeout(this._flush.bind(this,!1,!0),this.storeInterval)},o.prototype.flush=function(){this._flush(!1,!0)},o.prototype._flush=function(e,t){this.totalLen>0&&(this.logStorage.isReady()||e)&&(this.logStorage.isReady()?(this.outputCache.length&&(this.outputCache.forEach(function(e){this.logStorage.storeLogs(e)}.bind(this)),this.outputCache=[]),this.logStorage.storeLogs(this.queue)):this.outputCache.push(this.queue),this.queue=[],this.totalLen=0),t&&this._reschedulePublishInterval()},o.prototype.stop=function(){this._flush(!1,!1)},e.exports=o},function(e,t){e.exports=function(){throw new Error(\"define cannot be used indirect\")}},function(e,t){(function(t){e.exports=t}).call(this,{})},function(e,t,n){var r,i,o;this||window,i=[],void 0===(o=\"function\"==typeof(r=function(){var e=/^(interactive|loaded|complete)$/,t=window.location?window.location.href:null,n=t&&t.replace(/#.*$/,\"\").replace(/\\?.*$/,\"\")||null,r=document.getElementsByTagName(\"script\"),i=\"readyState\"in(r[0]||document.createElement(\"script\")),o=!window.opera||\"[object Opera]\"!==window.opera.toString(),a=\"currentScript\"in document;\"stackTraceLimit\"in Error&&Error.stackTraceLimit!==1/0&&(Error.stackTraceLimit,Error.stackTraceLimit=1/0);var s=!1,c=!1;function u(){if(0===r.length)return null;var t,l,d,p,h,f=[],m=u.skipStackDepth||1;for(t=0;t<r.length;t++)o&&i?e.test(r[t].readyState)&&f.push(r[t]):f.push(r[t]);if(l=new Error,s&&(d=l.stack),!d&&c)try{throw l}catch(e){d=e.stack}if(d&&(p=function e(t,n){var r,i,o=null,a=\"number\"==typeof n;return n=a?Math.round(n):0,\"string\"==typeof t&&t&&(a?r=t.match(/(data:text\\/javascript(?:;[^,]+)?,.+?|(?:|blob:)(?:http[s]?|file):\\/\\/[\\/]?.+?\\/[^:\\)]*?)(?::\\d+)(?::\\d+)?/):(r=t.match(/^(?:|[^:@]*@|.+\\)@(?=data:text\\/javascript|blob|http[s]?|file)|.+?\\s+(?: at |@)(?:[^:\\(]+ )*[\\(]?)(data:text\\/javascript(?:;[^,]+)?,.+?|(?:|blob:)(?:http[s]?|file):\\/\\/[\\/]?.+?\\/[^:\\)]*?)(?::\\d+)(?::\\d+)?/))&&r[1]||(r=t.match(/\\)@(data:text\\/javascript(?:;[^,]+)?,.+?|(?:|blob:)(?:http[s]?|file):\\/\\/[\\/]?.+?\\/[^:\\)]*?)(?::\\d+)(?::\\d+)?/)),r&&r[1]&&(n>0?(i=t.slice(t.indexOf(r[0])+r[0].length),o=e(i,n-1)):o=r[1])),o}(d,m),!(h=function(e,t){var n,i=null;if(t=t||r,\"string\"==typeof e&&e)for(n=t.length;n--;)if(t[n].src===e){i=t[n];break}return i}(p,f))&&n&&p===n&&(h=function(e){var t,n,i=null;for(t=0,n=(e=e||r).length;t<n;t++)if(!e[t].hasAttribute(\"src\")){if(i){i=null;break}i=e[t]}return i}(f))),h||1===f.length&&(h=f[0]),h||a&&(h=document.currentScript),!h&&o&&i)for(t=f.length;t--;)if(\"interactive\"===f[t].readyState){h=f[t];break}return h||(h=f[f.length-1]||null),h}(function(){try{var e=new Error;throw s=\"string\"==typeof e.stack&&!!e.stack,e}catch(e){c=\"string\"==typeof e.stack&&!!e.stack}})(),u.skipStackDepth=1;var l=u;return l.near=u,l.far=function(){return null},l.origin=function(){return null},l})?r.apply(t,i):r)||(e.exports=o)},function(e,t){e.exports={LOCAL_JID:\"local\"}},function(e,t,n){var r,i,o,a;function s(e){return(s=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}a=function(e){\"use strict\";e.Strophe.addConnectionPlugin(\"disco\",{_connection:null,_identities:[],_features:[],_items:[],init:function(t){this._connection=t,this._identities=[],this._features=[],this._items=[],t.addHandler(this._onDiscoInfo.bind(this),e.Strophe.NS.DISCO_INFO,\"iq\",\"get\",null,null),t.addHandler(this._onDiscoItems.bind(this),e.Strophe.NS.DISCO_ITEMS,\"iq\",\"get\",null,null)},addIdentity:function(e,t,n,r){for(var i=0;i<this._identities.length;i++)if(this._identities[i].category==e&&this._identities[i].type==t&&this._identities[i].name==n&&this._identities[i].lang==r)return!1;return this._identities.push({category:e,type:t,name:n,lang:r}),!0},addFeature:function(e){for(var t=0;t<this._features.length;t++)if(this._features[t]==e)return!1;return this._features.push(e),!0},removeFeature:function(e){for(var t=0;t<this._features.length;t++)if(this._features[t]===e)return this._features.splice(t,1),!0;return!1},addItem:function(e,t,n,r){return!(n&&!r)&&(this._items.push({jid:e,name:t,node:n,call_back:r}),!0)},info:function(t,n,r,i,o){var a={xmlns:e.Strophe.NS.DISCO_INFO};n&&(a.node=n);var s=e.$iq({from:this._connection.jid,to:t,type:\"get\"}).c(\"query\",a);this._connection.sendIQ(s,r,i,o)},items:function(t,n,r,i,o){var a={xmlns:e.Strophe.NS.DISCO_ITEMS};n&&(a.node=n);var s=e.$iq({from:this._connection.jid,to:t,type:\"get\"}).c(\"query\",a);this._connection.sendIQ(s,r,i,o)},_buildIQResult:function(t,n){var r=t.getAttribute(\"id\"),i=t.getAttribute(\"from\"),o=e.$iq({type:\"result\",id:r});return null!==i&&o.attrs({to:i}),o.c(\"query\",n)},_onDiscoInfo:function(t){var n,r=t.getElementsByTagName(\"query\")[0].getAttribute(\"node\"),i={xmlns:e.Strophe.NS.DISCO_INFO};r&&(i.node=r);var o=this._buildIQResult(t,i);for(n=0;n<this._identities.length;n++)i={category:this._identities[n].category,type:this._identities[n].type},this._identities[n].name&&(i.name=this._identities[n].name),this._identities[n].lang&&(i[\"xml:lang\"]=this._identities[n].lang),o.c(\"identity\",i).up();for(n=0;n<this._features.length;n++)o.c(\"feature\",{var:this._features[n]}).up();return this._connection.send(o.tree()),!0},_onDiscoItems:function(t){var n,r,i={xmlns:e.Strophe.NS.DISCO_ITEMS},o=t.getElementsByTagName(\"query\")[0].getAttribute(\"node\");if(o){for(i.node=o,n=[],r=0;r<this._items.length;r++)if(this._items[r].node==o){n=this._items[r].call_back(t);break}}else n=this._items;var a=this._buildIQResult(t,i);for(r=0;r<n.length;r++){var s={jid:n[r].jid};n[r].name&&(s.name=n[r].name),n[r].node&&(s.node=n[r].node),a.c(\"item\",s).up()}return this._connection.send(a.tree()),!0}})},\"object\"===s(t)&&void 0!==e?a(n(1)):(i=[n(1)],void 0===(o=\"function\"==typeof(r=a)?r.apply(t,i):r)||(e.exports=o))},function(e,t,n){(function(e){var r=void 0!==e&&e||\"undefined\"!=typeof self&&self||window,i=Function.prototype.apply;function o(e,t){this._id=e,this._clearFn=t}t.setTimeout=function(){return new o(i.call(setTimeout,r,arguments),clearTimeout)},t.setInterval=function(){return new o(i.call(setInterval,r,arguments),clearInterval)},t.clearTimeout=t.clearInterval=function(e){e&&e.close()},o.prototype.unref=o.prototype.ref=function(){},o.prototype.close=function(){this._clearFn.call(r,this._id)},t.enroll=function(e,t){clearTimeout(e._idleTimeoutId),e._idleTimeout=t},t.unenroll=function(e){clearTimeout(e._idleTimeoutId),e._idleTimeout=-1},t._unrefActive=t.active=function(e){clearTimeout(e._idleTimeoutId);var t=e._idleTimeout;t>=0&&(e._idleTimeoutId=setTimeout(function(){e._onTimeout&&e._onTimeout()},t))},n(130),t.setImmediate=\"undefined\"!=typeof self&&self.setImmediate||void 0!==e&&e.setImmediate||this&&this.setImmediate,t.clearImmediate=\"undefined\"!=typeof self&&self.clearImmediate||void 0!==e&&e.clearImmediate||this&&this.clearImmediate}).call(this,n(44))},function(e,t,n){(function(e,t){!function(e,n){\"use strict\";if(!e.setImmediate){var r,i,o,a,s,c=1,u={},l=!1,d=e.document,p=Object.getPrototypeOf&&Object.getPrototypeOf(e);p=p&&p.setTimeout?p:e,\"[object process]\"==={}.toString.call(e.process)?r=function(e){t.nextTick(function(){f(e)})}:!function(){if(e.postMessage&&!e.importScripts){var t=!0,n=e.onmessage;return e.onmessage=function(){t=!1},e.postMessage(\"\",\"*\"),e.onmessage=n,t}}()?e.MessageChannel?((o=new MessageChannel).port1.onmessage=function(e){f(e.data)},r=function(e){o.port2.postMessage(e)}):d&&\"onreadystatechange\"in d.createElement(\"script\")?(i=d.documentElement,r=function(e){var t=d.createElement(\"script\");t.onreadystatechange=function(){f(e),t.onreadystatechange=null,i.removeChild(t),t=null},i.appendChild(t)}):r=function(e){setTimeout(f,0,e)}:(a=\"setImmediate$\"+Math.random()+\"$\",s=function(t){t.source===e&&\"string\"==typeof t.data&&0===t.data.indexOf(a)&&f(+t.data.slice(a.length))},e.addEventListener?e.addEventListener(\"message\",s,!1):e.attachEvent(\"onmessage\",s),r=function(t){e.postMessage(a+t,\"*\")}),p.setImmediate=function(e){\"function\"!=typeof e&&(e=new Function(\"\"+e));for(var t=new Array(arguments.length-1),n=0;n<t.length;n++)t[n]=arguments[n+1];var i={callback:e,args:t};return u[c]=i,r(c),c++},p.clearImmediate=h}function h(e){delete u[e]}function f(e){if(l)setTimeout(f,0,e);else{var t=u[e];if(t){l=!0;try{!function(e){var t=e.callback,r=e.args;switch(r.length){case 0:t();break;case 1:t(r[0]);break;case 2:t(r[0],r[1]);break;case 3:t(r[0],r[1],r[2]);break;default:t.apply(n,r)}}(t)}finally{h(e),l=!1}}}}}(\"undefined\"==typeof self?void 0===e?this:e:self)}).call(this,n(44),n(51))},function(e,t){function n(){this._listeners={}}Object.defineProperties(n.prototype,{listeners:{get:function(){return this._listeners}}}),n.prototype.addEventListener=function(e,t){var n,r,i;if(e&&t){for(void 0===(n=this._listeners[e])&&(this._listeners[e]=n=[]),r=0;i=n[r];r++)if(i===t)return;n.push(t)}},n.prototype.removeEventListener=function(e,t){var n,r,i;if(e&&t&&void 0!==(n=this._listeners[e])){for(r=0;i=n[r];r++)if(i===t){n.splice(r,1);break}0===n.length&&delete this._listeners[e]}},n.prototype.dispatchEvent=function(e){var t,n,r,i,o,a=!1;if(!e||\"string\"!=typeof e.type)throw new Error(\"`event` must have a valid `type` property\");e._yaeti&&(e.target=this,e.cancelable=!0);try{e.stopImmediatePropagation=function(){a=!0}}catch(e){}if(t=e.type,n=this._listeners[t]||[],\"function\"==typeof(r=this[\"on\"+t]))try{r.call(this,e)}catch(e){console.error(e)}for(i=0;(o=n[i])&&!a;i++)try{o.call(this,e)}catch(e){console.error(e)}return!e.defaultPrevented},e.exports=n},function(e,t,n){(function(t){e.exports=t.Event}).call(this,n(44))},function(e,t,n){var r=function(e){return String(Number(e))===e?Number(e):e},i=function(e,t,n){var i=e.name&&e.names;e.push&&!t[e.push]?t[e.push]=[]:i&&!t[e.name]&&(t[e.name]={});var o=e.push?{}:i?t[e.name]:t;!function(e,t,n,i){if(i&&!n)t[i]=r(e[1]);else for(var o=0;o<n.length;o+=1)null!=e[o+1]&&(t[n[o]]=r(e[o+1]))}(n.match(e.reg),o,e.names,e.name),e.push&&t[e.push].push(o)},o=n(66),a=RegExp.prototype.test.bind(/^([a-z])=(.*)/);t.parse=function(e){var t={},n=[],r=t;return e.split(/(\\r\\n|\\r|\\n)/).filter(a).forEach(function(e){var t=e[0],a=e.slice(2);\"m\"===t&&(n.push({rtp:[],fmtp:[]}),r=n[n.length-1]);for(var s=0;s<(o[t]||[]).length;s+=1){var c=o[t][s];if(c.reg.test(a))return i(c,r,a)}}),t.media=n,t};var s=function(e,t){var n=t.split(/=(.+)/,2);return 2===n.length&&(e[n[0]]=r(n[1])),e};t.parseParams=function(e){return e.split(/\\;\\s?/).reduce(s,{})},t.parseFmtpConfig=t.parseParams,t.parsePayloads=function(e){return e.split(\" \").map(Number)},t.parseRemoteCandidates=function(e){for(var t=[],n=e.split(\" \").map(r),i=0;i<n.length;i+=3)t.push({component:n[i],ip:n[i+1],port:n[i+2]});return t},t.parseImageAttributes=function(e){return e.split(\" \").map(function(e){return e.substring(1,e.length-1).split(\",\").reduce(s,{})})},t.parseSimulcastStreamList=function(e){return e.split(\";\").map(function(e){return e.split(\",\").map(function(e){var t,n=!1;return\"~\"!==e[0]?t=r(e):(t=r(e.substring(1,e.length)),n=!0),{scid:t,paused:n}})})}},function(e,t,n){var r=n(66),i=/%[sdv%]/g,o=function(e,t,n){var r=[e+\"=\"+(t.format instanceof Function?t.format(t.push?n:n[t.name]):t.format)];if(t.names)for(var o=0;o<t.names.length;o+=1){var a=t.names[o];t.name?r.push(n[t.name][a]):r.push(n[t.names[o]])}else r.push(n[t.name]);return function(e){var t=1,n=arguments,r=n.length;return e.replace(i,function(e){if(t>=r)return e;var i=n[t];switch(t+=1,e){case\"%%\":return\"%\";case\"%s\":return String(i);case\"%d\":return Number(i);case\"%v\":return\"\"}})}.apply(null,r)},a=[\"v\",\"o\",\"s\",\"i\",\"u\",\"e\",\"p\",\"c\",\"b\",\"t\",\"r\",\"z\",\"a\"],s=[\"i\",\"c\",\"b\",\"a\"];e.exports=function(e,t){t=t||{},null==e.version&&(e.version=0),null==e.name&&(e.name=\" \"),e.media.forEach(function(e){null==e.payloads&&(e.payloads=\"\")});var n=t.outerOrder||a,i=t.innerOrder||s,c=[];return n.forEach(function(t){r[t].forEach(function(n){n.name in e&&null!=e[n.name]?c.push(o(t,n,e)):n.push in e&&null!=e[n.push]&&e[n.push].forEach(function(e){c.push(o(t,n,e))})})}),e.media.forEach(function(e){c.push(o(\"m\",r.m[0],e)),i.forEach(function(t){r[t].forEach(function(n){n.name in e&&null!=e[n.name]?c.push(o(t,n,e)):n.push in e&&null!=e[n.push]&&e[n.push].forEach(function(e){c.push(o(t,n,e))})})})}),c.join(\"\\r\\n\")+\"\\r\\n\"}},function(e,t,n){\"use strict\";(function(t){var r=n(136);e.exports=r({window:t.window})}).call(this,n(44))},function(e,t,n){\"use strict\";var r=n(42);e.exports=function(e,t){var i=e&&e.window,o={shimChrome:!0,shimFirefox:!0,shimEdge:!0,shimSafari:!0};for(var a in t)hasOwnProperty.call(t,a)&&(o[a]=t[a]);var s=r.log,c=r.detectBrowser(i),u={browserDetails:c,extractVersion:r.extractVersion,disableLog:r.disableLog,disableWarnings:r.disableWarnings},l=n(137)||null,d=n(139)||null,p=n(142)||null,h=n(144)||null,f=n(145)||null;switch(c.browser){case\"chrome\":if(!l||!l.shimPeerConnection||!o.shimChrome)return s(\"Chrome shim is not included in this adapter release.\"),u;s(\"adapter.js shimming chrome.\"),u.browserShim=l,f.shimCreateObjectURL(i),l.shimGetUserMedia(i),l.shimMediaStream(i),l.shimSourceObject(i),l.shimPeerConnection(i),l.shimOnTrack(i),l.shimAddTrackRemoveTrack(i),l.shimGetSendersWithDtmf(i),f.shimRTCIceCandidate(i);break;case\"firefox\":if(!p||!p.shimPeerConnection||!o.shimFirefox)return s(\"Firefox shim is not included in this adapter release.\"),u;s(\"adapter.js shimming firefox.\"),u.browserShim=p,f.shimCreateObjectURL(i),p.shimGetUserMedia(i),p.shimSourceObject(i),p.shimPeerConnection(i),p.shimOnTrack(i),f.shimRTCIceCandidate(i);break;case\"edge\":if(!d||!d.shimPeerConnection||!o.shimEdge)return s(\"MS edge shim is not included in this adapter release.\"),u;s(\"adapter.js shimming edge.\"),u.browserShim=d,f.shimCreateObjectURL(i),d.shimGetUserMedia(i),d.shimPeerConnection(i),d.shimReplaceTrack(i);break;case\"safari\":if(!h||!o.shimSafari)return s(\"Safari shim is not included in this adapter release.\"),u;s(\"adapter.js shimming safari.\"),u.browserShim=h,f.shimCreateObjectURL(i),h.shimRTCIceServerUrls(i),h.shimCallbacksAPI(i),h.shimLocalStreamsAPI(i),h.shimRemoteStreamsAPI(i),h.shimTrackEventTransceiver(i),h.shimGetUserMedia(i),h.shimCreateOfferLegacy(i),f.shimRTCIceCandidate(i);break;default:s(\"Unsupported browser!\")}return u}},function(e,t,n){\"use strict\";function r(e){return(r=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}var i=n(42),o=i.log,a={shimMediaStream:function(e){e.MediaStream=e.MediaStream||e.webkitMediaStream},shimOnTrack:function(e){if(\"object\"===r(e)&&e.RTCPeerConnection&&!(\"ontrack\"in e.RTCPeerConnection.prototype)){Object.defineProperty(e.RTCPeerConnection.prototype,\"ontrack\",{get:function(){return this._ontrack},set:function(e){this._ontrack&&this.removeEventListener(\"track\",this._ontrack),this.addEventListener(\"track\",this._ontrack=e)}});var t=e.RTCPeerConnection.prototype.setRemoteDescription;e.RTCPeerConnection.prototype.setRemoteDescription=function(){var n=this;return n._ontrackpoly||(n._ontrackpoly=function(t){t.stream.addEventListener(\"addtrack\",function(r){var i;i=e.RTCPeerConnection.prototype.getReceivers?n.getReceivers().find(function(e){return e.track&&e.track.id===r.track.id}):{track:r.track};var o=new Event(\"track\");o.track=r.track,o.receiver=i,o.transceiver={receiver:i},o.streams=[t.stream],n.dispatchEvent(o)}),t.stream.getTracks().forEach(function(r){var i;i=e.RTCPeerConnection.prototype.getReceivers?n.getReceivers().find(function(e){return e.track&&e.track.id===r.id}):{track:r};var o=new Event(\"track\");o.track=r,o.receiver=i,o.transceiver={receiver:i},o.streams=[t.stream],n.dispatchEvent(o)})},n.addEventListener(\"addstream\",n._ontrackpoly)),t.apply(n,arguments)}}},shimGetSendersWithDtmf:function(e){if(\"object\"===r(e)&&e.RTCPeerConnection&&!(\"getSenders\"in e.RTCPeerConnection.prototype)&&\"createDTMFSender\"in e.RTCPeerConnection.prototype){var t=function(e,t){return{track:t,get dtmf(){return void 0===this._dtmf&&(\"audio\"===t.kind?this._dtmf=e.createDTMFSender(t):this._dtmf=null),this._dtmf},_pc:e}};if(!e.RTCPeerConnection.prototype.getSenders){e.RTCPeerConnection.prototype.getSenders=function(){return this._senders=this._senders||[],this._senders.slice()};var n=e.RTCPeerConnection.prototype.addTrack;e.RTCPeerConnection.prototype.addTrack=function(e,r){var i=n.apply(this,arguments);return i||(i=t(this,e),this._senders.push(i)),i};var i=e.RTCPeerConnection.prototype.removeTrack;e.RTCPeerConnection.prototype.removeTrack=function(e){i.apply(this,arguments);var t=this._senders.indexOf(e);-1!==t&&this._senders.splice(t,1)}}var o=e.RTCPeerConnection.prototype.addStream;e.RTCPeerConnection.prototype.addStream=function(e){var n=this;n._senders=n._senders||[],o.apply(n,[e]),e.getTracks().forEach(function(e){n._senders.push(t(n,e))})};var a=e.RTCPeerConnection.prototype.removeStream;e.RTCPeerConnection.prototype.removeStream=function(e){var t=this;t._senders=t._senders||[],a.apply(t,[e]),e.getTracks().forEach(function(e){var n=t._senders.find(function(t){return t.track===e});n&&t._senders.splice(t._senders.indexOf(n),1)})}}else if(\"object\"===r(e)&&e.RTCPeerConnection&&\"getSenders\"in e.RTCPeerConnection.prototype&&\"createDTMFSender\"in e.RTCPeerConnection.prototype&&e.RTCRtpSender&&!(\"dtmf\"in e.RTCRtpSender.prototype)){var s=e.RTCPeerConnection.prototype.getSenders;e.RTCPeerConnection.prototype.getSenders=function(){var e=this,t=s.apply(e,[]);return t.forEach(function(t){t._pc=e}),t},Object.defineProperty(e.RTCRtpSender.prototype,\"dtmf\",{get:function(){return void 0===this._dtmf&&(\"audio\"===this.track.kind?this._dtmf=this._pc.createDTMFSender(this.track):this._dtmf=null),this._dtmf}})}},shimSourceObject:function(e){var t=e&&e.URL;\"object\"===r(e)&&(!e.HTMLMediaElement||\"srcObject\"in e.HTMLMediaElement.prototype||Object.defineProperty(e.HTMLMediaElement.prototype,\"srcObject\",{get:function(){return this._srcObject},set:function(e){var n=this;this._srcObject=e,this.src&&t.revokeObjectURL(this.src),e?(this.src=t.createObjectURL(e),e.addEventListener(\"addtrack\",function(){n.src&&t.revokeObjectURL(n.src),n.src=t.createObjectURL(e)}),e.addEventListener(\"removetrack\",function(){n.src&&t.revokeObjectURL(n.src),n.src=t.createObjectURL(e)})):this.src=\"\"}}))},shimAddTrackRemoveTrack:function(e){var t=i.detectBrowser(e);if(!(e.RTCPeerConnection.prototype.addTrack&&t.version>=63)){var n=e.RTCPeerConnection.prototype.getLocalStreams;e.RTCPeerConnection.prototype.getLocalStreams=function(){var e=this,t=n.apply(this);return e._reverseStreams=e._reverseStreams||{},t.map(function(t){return e._reverseStreams[t.id]})};var r=e.RTCPeerConnection.prototype.addStream;e.RTCPeerConnection.prototype.addStream=function(t){var n=this;if(n._streams=n._streams||{},n._reverseStreams=n._reverseStreams||{},t.getTracks().forEach(function(e){if(n.getSenders().find(function(t){return t.track===e}))throw new DOMException(\"Track already exists.\",\"InvalidAccessError\")}),!n._reverseStreams[t.id]){var i=new e.MediaStream(t.getTracks());n._streams[t.id]=i,n._reverseStreams[i.id]=t,t=i}r.apply(n,[t])};var o=e.RTCPeerConnection.prototype.removeStream;e.RTCPeerConnection.prototype.removeStream=function(e){var t=this;t._streams=t._streams||{},t._reverseStreams=t._reverseStreams||{},o.apply(t,[t._streams[e.id]||e]),delete t._reverseStreams[t._streams[e.id]?t._streams[e.id].id:e.id],delete t._streams[e.id]},e.RTCPeerConnection.prototype.addTrack=function(t,n){var r=this;if(\"closed\"===r.signalingState)throw new DOMException(\"The RTCPeerConnection's signalingState is 'closed'.\",\"InvalidStateError\");var i=[].slice.call(arguments,1);if(1!==i.length||!i[0].getTracks().find(function(e){return e===t}))throw new DOMException(\"The adapter.js addTrack polyfill only supports a single  stream which is associated with the specified track.\",\"NotSupportedError\");if(r.getSenders().find(function(e){return e.track===t}))throw new DOMException(\"Track already exists.\",\"InvalidAccessError\");r._streams=r._streams||{},r._reverseStreams=r._reverseStreams||{};var o=r._streams[n.id];if(o)o.addTrack(t),Promise.resolve().then(function(){r.dispatchEvent(new Event(\"negotiationneeded\"))});else{var a=new e.MediaStream([t]);r._streams[n.id]=a,r._reverseStreams[a.id]=n,r.addStream(a)}return r.getSenders().find(function(e){return e.track===t})},[\"createOffer\",\"createAnswer\"].forEach(function(t){var n=e.RTCPeerConnection.prototype[t];e.RTCPeerConnection.prototype[t]=function(){var e=this,t=arguments;return arguments.length&&\"function\"==typeof arguments[0]?n.apply(e,[function(n){var r=c(e,n);t[0].apply(null,[r])},function(e){t[1]&&t[1].apply(null,e)},arguments[2]]):n.apply(e,arguments).then(function(t){return c(e,t)})}});var a=e.RTCPeerConnection.prototype.setLocalDescription;e.RTCPeerConnection.prototype.setLocalDescription=function(){return arguments.length&&arguments[0].type?(arguments[0]=function(e,t){var n=t.sdp;return Object.keys(e._reverseStreams||[]).forEach(function(t){var r=e._reverseStreams[t],i=e._streams[r.id];n=n.replace(new RegExp(r.id,\"g\"),i.id)}),new RTCSessionDescription({type:t.type,sdp:n})}(this,arguments[0]),a.apply(this,arguments)):a.apply(this,arguments)};var s=Object.getOwnPropertyDescriptor(e.RTCPeerConnection.prototype,\"localDescription\");Object.defineProperty(e.RTCPeerConnection.prototype,\"localDescription\",{get:function(){var e=s.get.apply(this);return\"\"===e.type?e:c(this,e)}}),e.RTCPeerConnection.prototype.removeTrack=function(e){var t,n=this;if(\"closed\"===n.signalingState)throw new DOMException(\"The RTCPeerConnection's signalingState is 'closed'.\",\"InvalidStateError\");if(!e._pc)throw new DOMException(\"Argument 1 of RTCPeerConnection.removeTrack does not implement interface RTCRtpSender.\",\"TypeError\");if(!(e._pc===n))throw new DOMException(\"Sender was not created by this connection.\",\"InvalidAccessError\");n._streams=n._streams||{},Object.keys(n._streams).forEach(function(r){n._streams[r].getTracks().find(function(t){return e.track===t})&&(t=n._streams[r])}),t&&(1===t.getTracks().length?n.removeStream(n._reverseStreams[t.id]):t.removeTrack(e.track),n.dispatchEvent(new Event(\"negotiationneeded\")))}}function c(e,t){var n=t.sdp;return Object.keys(e._reverseStreams||[]).forEach(function(t){var r=e._reverseStreams[t],i=e._streams[r.id];n=n.replace(new RegExp(i.id,\"g\"),r.id)}),new RTCSessionDescription({type:t.type,sdp:n})}},shimPeerConnection:function(e){var t=i.detectBrowser(e);if(e.RTCPeerConnection){var n=e.RTCPeerConnection;e.RTCPeerConnection=function(e,t){if(e&&e.iceServers){for(var r=[],o=0;o<e.iceServers.length;o++){var a=e.iceServers[o];!a.hasOwnProperty(\"urls\")&&a.hasOwnProperty(\"url\")?(i.deprecated(\"RTCIceServer.url\",\"RTCIceServer.urls\"),(a=JSON.parse(JSON.stringify(a))).urls=a.url,r.push(a)):r.push(e.iceServers[o])}e.iceServers=r}return new n(e,t)},e.RTCPeerConnection.prototype=n.prototype,Object.defineProperty(e.RTCPeerConnection,\"generateCertificate\",{get:function(){return n.generateCertificate}})}else e.RTCPeerConnection=function(t,n){return o(\"PeerConnection\"),t&&t.iceTransportPolicy&&(t.iceTransports=t.iceTransportPolicy),new e.webkitRTCPeerConnection(t,n)},e.RTCPeerConnection.prototype=e.webkitRTCPeerConnection.prototype,e.webkitRTCPeerConnection.generateCertificate&&Object.defineProperty(e.RTCPeerConnection,\"generateCertificate\",{get:function(){return e.webkitRTCPeerConnection.generateCertificate}});var a=e.RTCPeerConnection.prototype.getStats;e.RTCPeerConnection.prototype.getStats=function(e,t,n){var r=this,i=arguments;if(arguments.length>0&&\"function\"==typeof e)return a.apply(this,arguments);if(0===a.length&&(0===arguments.length||\"function\"!=typeof arguments[0]))return a.apply(this,[]);var o=function(e){var t={};return e.result().forEach(function(e){var n={id:e.id,timestamp:e.timestamp,type:{localcandidate:\"local-candidate\",remotecandidate:\"remote-candidate\"}[e.type]||e.type};e.names().forEach(function(t){n[t]=e.stat(t)}),t[n.id]=n}),t},s=function(e){return new Map(Object.keys(e).map(function(t){return[t,e[t]]}))};if(arguments.length>=2){return a.apply(this,[function(e){i[1](s(o(e)))},arguments[0]])}return new Promise(function(e,t){a.apply(r,[function(t){e(s(o(t)))},t])}).then(t,n)},t.version<51&&[\"setLocalDescription\",\"setRemoteDescription\",\"addIceCandidate\"].forEach(function(t){var n=e.RTCPeerConnection.prototype[t];e.RTCPeerConnection.prototype[t]=function(){var e=arguments,t=this,r=new Promise(function(r,i){n.apply(t,[e[0],r,i])});return e.length<2?r:r.then(function(){e[1].apply(null,[])},function(t){e.length>=3&&e[2].apply(null,[t])})}}),t.version<52&&[\"createOffer\",\"createAnswer\"].forEach(function(t){var n=e.RTCPeerConnection.prototype[t];e.RTCPeerConnection.prototype[t]=function(){var e=this;if(arguments.length<1||1===arguments.length&&\"object\"===r(arguments[0])){var t=1===arguments.length?arguments[0]:void 0;return new Promise(function(r,i){n.apply(e,[r,i,t])})}return n.apply(this,arguments)}}),[\"setLocalDescription\",\"setRemoteDescription\",\"addIceCandidate\"].forEach(function(t){var n=e.RTCPeerConnection.prototype[t];e.RTCPeerConnection.prototype[t]=function(){return arguments[0]=new(\"addIceCandidate\"===t?e.RTCIceCandidate:e.RTCSessionDescription)(arguments[0]),n.apply(this,arguments)}});var s=e.RTCPeerConnection.prototype.addIceCandidate;e.RTCPeerConnection.prototype.addIceCandidate=function(){return arguments[0]?s.apply(this,arguments):(arguments[1]&&arguments[1].apply(null),Promise.resolve())}}};e.exports={shimMediaStream:a.shimMediaStream,shimOnTrack:a.shimOnTrack,shimAddTrackRemoveTrack:a.shimAddTrackRemoveTrack,shimGetSendersWithDtmf:a.shimGetSendersWithDtmf,shimSourceObject:a.shimSourceObject,shimPeerConnection:a.shimPeerConnection,shimGetUserMedia:n(138)}},function(e,t,n){\"use strict\";function r(e){return(r=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}var i=n(42),o=i.log;e.exports=function(e){var t=i.detectBrowser(e),n=e&&e.navigator,a=function(e){if(\"object\"!==r(e)||e.mandatory||e.optional)return e;var t={};return Object.keys(e).forEach(function(n){if(\"require\"!==n&&\"advanced\"!==n&&\"mediaSource\"!==n){var i=\"object\"===r(e[n])?e[n]:{ideal:e[n]};void 0!==i.exact&&\"number\"==typeof i.exact&&(i.min=i.max=i.exact);var o=function(e,t){return e?e+t.charAt(0).toUpperCase()+t.slice(1):\"deviceId\"===t?\"sourceId\":t};if(void 0!==i.ideal){t.optional=t.optional||[];var a={};\"number\"==typeof i.ideal?(a[o(\"min\",n)]=i.ideal,t.optional.push(a),(a={})[o(\"max\",n)]=i.ideal,t.optional.push(a)):(a[o(\"\",n)]=i.ideal,t.optional.push(a))}void 0!==i.exact&&\"number\"!=typeof i.exact?(t.mandatory=t.mandatory||{},t.mandatory[o(\"\",n)]=i.exact):[\"min\",\"max\"].forEach(function(e){void 0!==i[e]&&(t.mandatory=t.mandatory||{},t.mandatory[o(e,n)]=i[e])})}}),e.advanced&&(t.optional=(t.optional||[]).concat(e.advanced)),t},s=function(e,i){if(t.version>=61)return i(e);if((e=JSON.parse(JSON.stringify(e)))&&\"object\"===r(e.audio)){var s=function(e,t,n){t in e&&!(n in e)&&(e[n]=e[t],delete e[t])};s((e=JSON.parse(JSON.stringify(e))).audio,\"autoGainControl\",\"googAutoGainControl\"),s(e.audio,\"noiseSuppression\",\"googNoiseSuppression\"),e.audio=a(e.audio)}if(e&&\"object\"===r(e.video)){var c=e.video.facingMode;c=c&&(\"object\"===r(c)?c:{ideal:c});var u,l=t.version<66;if(c&&(\"user\"===c.exact||\"environment\"===c.exact||\"user\"===c.ideal||\"environment\"===c.ideal)&&(!n.mediaDevices.getSupportedConstraints||!n.mediaDevices.getSupportedConstraints().facingMode||l))if(delete e.video.facingMode,\"environment\"===c.exact||\"environment\"===c.ideal?u=[\"back\",\"rear\"]:\"user\"!==c.exact&&\"user\"!==c.ideal||(u=[\"front\"]),u)return n.mediaDevices.enumerateDevices().then(function(t){var n=(t=t.filter(function(e){return\"videoinput\"===e.kind})).find(function(e){return u.some(function(t){return-1!==e.label.toLowerCase().indexOf(t)})});return!n&&t.length&&-1!==u.indexOf(\"back\")&&(n=t[t.length-1]),n&&(e.video.deviceId=c.exact?{exact:n.deviceId}:{ideal:n.deviceId}),e.video=a(e.video),o(\"chrome: \"+JSON.stringify(e)),i(e)});e.video=a(e.video)}return o(\"chrome: \"+JSON.stringify(e)),i(e)},c=function(e){return{name:{PermissionDeniedError:\"NotAllowedError\",InvalidStateError:\"NotReadableError\",DevicesNotFoundError:\"NotFoundError\",ConstraintNotSatisfiedError:\"OverconstrainedError\",TrackStartError:\"NotReadableError\",MediaDeviceFailedDueToShutdown:\"NotReadableError\",MediaDeviceKillSwitchOn:\"NotReadableError\"}[e.name]||e.name,message:e.message,constraint:e.constraintName,toString:function(){return this.name+(this.message&&\": \")+this.message}}};n.getUserMedia=function(e,t,r){s(e,function(e){n.webkitGetUserMedia(e,t,function(e){r&&r(c(e))})})};var u=function(e){return new Promise(function(t,r){n.getUserMedia(e,t,r)})};if(n.mediaDevices||(n.mediaDevices={getUserMedia:u,enumerateDevices:function(){return new Promise(function(t){var n={audio:\"audioinput\",video:\"videoinput\"};return e.MediaStreamTrack.getSources(function(e){t(e.map(function(e){return{label:e.label,kind:n[e.kind],deviceId:e.id,groupId:\"\"}}))})})},getSupportedConstraints:function(){return{deviceId:!0,echoCancellation:!0,facingMode:!0,frameRate:!0,height:!0,width:!0}}}),n.mediaDevices.getUserMedia){var l=n.mediaDevices.getUserMedia.bind(n.mediaDevices);n.mediaDevices.getUserMedia=function(e){return s(e,function(e){return l(e).then(function(t){if(e.audio&&!t.getAudioTracks().length||e.video&&!t.getVideoTracks().length)throw t.getTracks().forEach(function(e){e.stop()}),new DOMException(\"\",\"NotFoundError\");return t},function(e){return Promise.reject(c(e))})})}}else n.mediaDevices.getUserMedia=function(e){return u(e)};void 0===n.mediaDevices.addEventListener&&(n.mediaDevices.addEventListener=function(){o(\"Dummy mediaDevices.addEventListener called.\")}),void 0===n.mediaDevices.removeEventListener&&(n.mediaDevices.removeEventListener=function(){o(\"Dummy mediaDevices.removeEventListener called.\")})}},function(e,t,n){\"use strict\";var r=n(42),i=n(140);e.exports={shimGetUserMedia:n(141),shimPeerConnection:function(e){var t=r.detectBrowser(e);if(e.RTCIceGatherer&&(e.RTCIceCandidate||(e.RTCIceCandidate=function(e){return e}),e.RTCSessionDescription||(e.RTCSessionDescription=function(e){return e}),t.version<15025)){var n=Object.getOwnPropertyDescriptor(e.MediaStreamTrack.prototype,\"enabled\");Object.defineProperty(e.MediaStreamTrack.prototype,\"enabled\",{set:function(e){n.set.call(this,e);var t=new Event(\"enabled\");t.enabled=e,this.dispatchEvent(t)}})}!e.RTCRtpSender||\"dtmf\"in e.RTCRtpSender.prototype||Object.defineProperty(e.RTCRtpSender.prototype,\"dtmf\",{get:function(){return void 0===this._dtmf&&(\"audio\"===this.track.kind?this._dtmf=new e.RTCDtmfSender(this):\"video\"===this.track.kind&&(this._dtmf=null)),this._dtmf}}),e.RTCPeerConnection=i(e,t.version)},shimReplaceTrack:function(e){!e.RTCRtpSender||\"replaceTrack\"in e.RTCRtpSender.prototype||(e.RTCRtpSender.prototype.replaceTrack=e.RTCRtpSender.prototype.setTrack)}}},function(e,t,n){\"use strict\";var r=n(67);function i(e,t,n,i,o){var a=r.writeRtpDescription(e.kind,t);if(a+=r.writeIceParameters(e.iceGatherer.getLocalParameters()),a+=r.writeDtlsParameters(e.dtlsTransport.getLocalParameters(),\"offer\"===n?\"actpass\":o||\"active\"),a+=\"a=mid:\"+e.mid+\"\\r\\n\",e.rtpSender&&e.rtpReceiver?a+=\"a=sendrecv\\r\\n\":e.rtpSender?a+=\"a=sendonly\\r\\n\":e.rtpReceiver?a+=\"a=recvonly\\r\\n\":a+=\"a=inactive\\r\\n\",e.rtpSender){var s=e.rtpSender._initialTrackId||e.rtpSender.track.id;e.rtpSender._initialTrackId=s;var c=\"msid:\"+(i?i.id:\"-\")+\" \"+s+\"\\r\\n\";a+=\"a=\"+c,a+=\"a=ssrc:\"+e.sendEncodingParameters[0].ssrc+\" \"+c,e.sendEncodingParameters[0].rtx&&(a+=\"a=ssrc:\"+e.sendEncodingParameters[0].rtx.ssrc+\" \"+c,a+=\"a=ssrc-group:FID \"+e.sendEncodingParameters[0].ssrc+\" \"+e.sendEncodingParameters[0].rtx.ssrc+\"\\r\\n\")}return a+=\"a=ssrc:\"+e.sendEncodingParameters[0].ssrc+\" cname:\"+r.localCName+\"\\r\\n\",e.rtpSender&&e.sendEncodingParameters[0].rtx&&(a+=\"a=ssrc:\"+e.sendEncodingParameters[0].rtx.ssrc+\" cname:\"+r.localCName+\"\\r\\n\"),a}function o(e,t){var n={codecs:[],headerExtensions:[],fecMechanisms:[]},r=function(e,t){e=parseInt(e,10);for(var n=0;n<t.length;n++)if(t[n].payloadType===e||t[n].preferredPayloadType===e)return t[n]},i=function(e,t,n,i){var o=r(e.parameters.apt,n),a=r(t.parameters.apt,i);return o&&a&&o.name.toLowerCase()===a.name.toLowerCase()};return e.codecs.forEach(function(r){for(var o=0;o<t.codecs.length;o++){var a=t.codecs[o];if(r.name.toLowerCase()===a.name.toLowerCase()&&r.clockRate===a.clockRate){if(\"rtx\"===r.name.toLowerCase()&&r.parameters&&a.parameters.apt&&!i(r,a,e.codecs,t.codecs))continue;(a=JSON.parse(JSON.stringify(a))).numChannels=Math.min(r.numChannels,a.numChannels),n.codecs.push(a),a.rtcpFeedback=a.rtcpFeedback.filter(function(e){for(var t=0;t<r.rtcpFeedback.length;t++)if(r.rtcpFeedback[t].type===e.type&&r.rtcpFeedback[t].parameter===e.parameter)return!0;return!1});break}}}),e.headerExtensions.forEach(function(e){for(var r=0;r<t.headerExtensions.length;r++){var i=t.headerExtensions[r];if(e.uri===i.uri){n.headerExtensions.push(i);break}}}),n}function a(e,t,n){return-1!=={offer:{setLocalDescription:[\"stable\",\"have-local-offer\"],setRemoteDescription:[\"stable\",\"have-remote-offer\"]},answer:{setLocalDescription:[\"have-remote-offer\",\"have-local-pranswer\"],setRemoteDescription:[\"have-local-offer\",\"have-remote-pranswer\"]}}[t][e].indexOf(n)}function s(e,t){var n=e.getRemoteCandidates().find(function(e){return t.foundation===e.foundation&&t.ip===e.ip&&t.port===e.port&&t.priority===e.priority&&t.protocol===e.protocol&&t.type===e.type});return n||e.addRemoteCandidate(t),!n}function c(e,t){var n=new Error(t);return n.name=e,n.code={NotSupportedError:9,InvalidStateError:11,InvalidAccessError:15,TypeError:void 0,OperationError:void 0}[e],n}e.exports=function(e,t){function n(t,n){n.addTrack(t),n.dispatchEvent(new e.MediaStreamTrackEvent(\"addtrack\",{track:t}))}function u(t,n,r,i){var o=new Event(\"track\");o.track=n,o.receiver=r,o.transceiver={receiver:r},o.streams=i,e.setTimeout(function(){t._dispatchEvent(\"track\",o)})}var l=function(n){var i=this,o=document.createDocumentFragment();if([\"addEventListener\",\"removeEventListener\",\"dispatchEvent\"].forEach(function(e){i[e]=o[e].bind(o)}),this.canTrickleIceCandidates=null,this.needNegotiation=!1,this.localStreams=[],this.remoteStreams=[],this._localDescription=null,this._remoteDescription=null,this.signalingState=\"stable\",this.iceConnectionState=\"new\",this.connectionState=\"new\",this.iceGatheringState=\"new\",n=JSON.parse(JSON.stringify(n||{})),this.usingBundle=\"max-bundle\"===n.bundlePolicy,\"negotiate\"===n.rtcpMuxPolicy)throw c(\"NotSupportedError\",\"rtcpMuxPolicy 'negotiate' is not supported\");switch(n.rtcpMuxPolicy||(n.rtcpMuxPolicy=\"require\"),n.iceTransportPolicy){case\"all\":case\"relay\":break;default:n.iceTransportPolicy=\"all\"}switch(n.bundlePolicy){case\"balanced\":case\"max-compat\":case\"max-bundle\":break;default:n.bundlePolicy=\"balanced\"}if(n.iceServers=function(e,t){var n=!1;return(e=JSON.parse(JSON.stringify(e))).filter(function(e){if(e&&(e.urls||e.url)){var r=e.urls||e.url;e.url&&!e.urls&&console.warn(\"RTCIceServer.url is deprecated! Use urls instead.\");var i=\"string\"==typeof r;return i&&(r=[r]),r=r.filter(function(e){return 0!==e.indexOf(\"turn:\")||-1===e.indexOf(\"transport=udp\")||-1!==e.indexOf(\"turn:[\")||n?0===e.indexOf(\"stun:\")&&t>=14393&&-1===e.indexOf(\"?transport=udp\"):(n=!0,!0)}),delete e.url,e.urls=i?r[0]:r,!!r.length}})}(n.iceServers||[],t),this._iceGatherers=[],n.iceCandidatePoolSize)for(var a=n.iceCandidatePoolSize;a>0;a--)this._iceGatherers.push(new e.RTCIceGatherer({iceServers:n.iceServers,gatherPolicy:n.iceTransportPolicy}));else n.iceCandidatePoolSize=0;this._config=n,this.transceivers=[],this._sdpSessionId=r.generateSessionId(),this._sdpSessionVersion=0,this._dtlsRole=void 0,this._isClosed=!1};Object.defineProperty(l.prototype,\"localDescription\",{configurable:!0,get:function(){return this._localDescription}}),Object.defineProperty(l.prototype,\"remoteDescription\",{configurable:!0,get:function(){return this._remoteDescription}}),l.prototype.onicecandidate=null,l.prototype.onaddstream=null,l.prototype.ontrack=null,l.prototype.onremovestream=null,l.prototype.onsignalingstatechange=null,l.prototype.oniceconnectionstatechange=null,l.prototype.onconnectionstatechange=null,l.prototype.onicegatheringstatechange=null,l.prototype.onnegotiationneeded=null,l.prototype.ondatachannel=null,l.prototype._dispatchEvent=function(e,t){this._isClosed||(this.dispatchEvent(t),\"function\"==typeof this[\"on\"+e]&&this[\"on\"+e](t))},l.prototype._emitGatheringStateChange=function(){var e=new Event(\"icegatheringstatechange\");this._dispatchEvent(\"icegatheringstatechange\",e)},l.prototype.getConfiguration=function(){return this._config},l.prototype.getLocalStreams=function(){return this.localStreams},l.prototype.getRemoteStreams=function(){return this.remoteStreams},l.prototype._createTransceiver=function(e,t){var n=this.transceivers.length>0,r={track:null,iceGatherer:null,iceTransport:null,dtlsTransport:null,localCapabilities:null,remoteCapabilities:null,rtpSender:null,rtpReceiver:null,kind:e,mid:null,sendEncodingParameters:null,recvEncodingParameters:null,stream:null,associatedRemoteMediaStreams:[],wantReceive:!0};if(this.usingBundle&&n)r.iceTransport=this.transceivers[0].iceTransport,r.dtlsTransport=this.transceivers[0].dtlsTransport;else{var i=this._createIceAndDtlsTransports();r.iceTransport=i.iceTransport,r.dtlsTransport=i.dtlsTransport}return t||this.transceivers.push(r),r},l.prototype.addTrack=function(t,n){if(this._isClosed)throw c(\"InvalidStateError\",\"Attempted to call addTrack on a closed peerconnection.\");var r;if(this.transceivers.find(function(e){return e.track===t}))throw c(\"InvalidAccessError\",\"Track already exists.\");for(var i=0;i<this.transceivers.length;i++)this.transceivers[i].track||this.transceivers[i].kind!==t.kind||(r=this.transceivers[i]);return r||(r=this._createTransceiver(t.kind)),this._maybeFireNegotiationNeeded(),-1===this.localStreams.indexOf(n)&&this.localStreams.push(n),r.track=t,r.stream=n,r.rtpSender=new e.RTCRtpSender(t,r.dtlsTransport),r.rtpSender},l.prototype.addStream=function(e){var n=this;if(t>=15025)e.getTracks().forEach(function(t){n.addTrack(t,e)});else{var r=e.clone();e.getTracks().forEach(function(e,t){var n=r.getTracks()[t];e.addEventListener(\"enabled\",function(e){n.enabled=e.enabled})}),r.getTracks().forEach(function(e){n.addTrack(e,r)})}},l.prototype.removeTrack=function(t){if(this._isClosed)throw c(\"InvalidStateError\",\"Attempted to call removeTrack on a closed peerconnection.\");if(!(t instanceof e.RTCRtpSender))throw new TypeError(\"Argument 1 of RTCPeerConnection.removeTrack does not implement interface RTCRtpSender.\");var n=this.transceivers.find(function(e){return e.rtpSender===t});if(!n)throw c(\"InvalidAccessError\",\"Sender was not created by this connection.\");var r=n.stream;n.rtpSender.stop(),n.rtpSender=null,n.track=null,n.stream=null,-1===this.transceivers.map(function(e){return e.stream}).indexOf(r)&&this.localStreams.indexOf(r)>-1&&this.localStreams.splice(this.localStreams.indexOf(r),1),this._maybeFireNegotiationNeeded()},l.prototype.removeStream=function(e){var t=this;e.getTracks().forEach(function(e){var n=t.getSenders().find(function(t){return t.track===e});n&&t.removeTrack(n)})},l.prototype.getSenders=function(){return this.transceivers.filter(function(e){return!!e.rtpSender}).map(function(e){return e.rtpSender})},l.prototype.getReceivers=function(){return this.transceivers.filter(function(e){return!!e.rtpReceiver}).map(function(e){return e.rtpReceiver})},l.prototype._createIceGatherer=function(t,n){var r=this;if(n&&t>0)return this.transceivers[0].iceGatherer;if(this._iceGatherers.length)return this._iceGatherers.shift();var i=new e.RTCIceGatherer({iceServers:this._config.iceServers,gatherPolicy:this._config.iceTransportPolicy});return Object.defineProperty(i,\"state\",{value:\"new\",writable:!0}),this.transceivers[t].bufferedCandidateEvents=[],this.transceivers[t].bufferCandidates=function(e){var n=!e.candidate||0===Object.keys(e.candidate).length;i.state=n?\"completed\":\"gathering\",null!==r.transceivers[t].bufferedCandidateEvents&&r.transceivers[t].bufferedCandidateEvents.push(e)},i.addEventListener(\"localcandidate\",this.transceivers[t].bufferCandidates),i},l.prototype._gather=function(t,n){var i=this,o=this.transceivers[n].iceGatherer;if(!o.onlocalcandidate){var a=this.transceivers[n].bufferedCandidateEvents;this.transceivers[n].bufferedCandidateEvents=null,o.removeEventListener(\"localcandidate\",this.transceivers[n].bufferCandidates),o.onlocalcandidate=function(e){if(!(i.usingBundle&&n>0)){var a=new Event(\"icecandidate\");a.candidate={sdpMid:t,sdpMLineIndex:n};var s=e.candidate,c=!s||0===Object.keys(s).length;if(c)\"new\"!==o.state&&\"gathering\"!==o.state||(o.state=\"completed\");else{\"new\"===o.state&&(o.state=\"gathering\"),s.component=1,s.ufrag=o.getLocalParameters().usernameFragment;var u=r.writeCandidate(s);a.candidate=Object.assign(a.candidate,r.parseCandidate(u)),a.candidate.candidate=u,a.candidate.toJSON=function(){return{candidate:a.candidate.candidate,sdpMid:a.candidate.sdpMid,sdpMLineIndex:a.candidate.sdpMLineIndex,usernameFragment:a.candidate.usernameFragment}}}var l=r.getMediaSections(i._localDescription.sdp);l[a.candidate.sdpMLineIndex]+=c?\"a=end-of-candidates\\r\\n\":\"a=\"+a.candidate.candidate+\"\\r\\n\",i._localDescription.sdp=r.getDescription(i._localDescription.sdp)+l.join(\"\");var d=i.transceivers.every(function(e){return e.iceGatherer&&\"completed\"===e.iceGatherer.state});\"gathering\"!==i.iceGatheringState&&(i.iceGatheringState=\"gathering\",i._emitGatheringStateChange()),c||i._dispatchEvent(\"icecandidate\",a),d&&(i._dispatchEvent(\"icecandidate\",new Event(\"icecandidate\")),i.iceGatheringState=\"complete\",i._emitGatheringStateChange())}},e.setTimeout(function(){a.forEach(function(e){o.onlocalcandidate(e)})},0)}},l.prototype._createIceAndDtlsTransports=function(){var t=this,n=new e.RTCIceTransport(null);n.onicestatechange=function(){t._updateIceConnectionState(),t._updateConnectionState()};var r=new e.RTCDtlsTransport(n);return r.ondtlsstatechange=function(){t._updateConnectionState()},r.onerror=function(){Object.defineProperty(r,\"state\",{value:\"failed\",writable:!0}),t._updateConnectionState()},{iceTransport:n,dtlsTransport:r}},l.prototype._disposeIceAndDtlsTransports=function(e){var t=this.transceivers[e].iceGatherer;t&&(delete t.onlocalcandidate,delete this.transceivers[e].iceGatherer);var n=this.transceivers[e].iceTransport;n&&(delete n.onicestatechange,delete this.transceivers[e].iceTransport);var r=this.transceivers[e].dtlsTransport;r&&(delete r.ondtlsstatechange,delete r.onerror,delete this.transceivers[e].dtlsTransport)},l.prototype._transceive=function(e,n,i){var a=o(e.localCapabilities,e.remoteCapabilities);n&&e.rtpSender&&(a.encodings=e.sendEncodingParameters,a.rtcp={cname:r.localCName,compound:e.rtcpParameters.compound},e.recvEncodingParameters.length&&(a.rtcp.ssrc=e.recvEncodingParameters[0].ssrc),e.rtpSender.send(a)),i&&e.rtpReceiver&&a.codecs.length>0&&(\"video\"===e.kind&&e.recvEncodingParameters&&t<15019&&e.recvEncodingParameters.forEach(function(e){delete e.rtx}),e.recvEncodingParameters.length?a.encodings=e.recvEncodingParameters:a.encodings=[{}],a.rtcp={compound:e.rtcpParameters.compound},e.rtcpParameters.cname&&(a.rtcp.cname=e.rtcpParameters.cname),e.sendEncodingParameters.length&&(a.rtcp.ssrc=e.sendEncodingParameters[0].ssrc),e.rtpReceiver.receive(a))},l.prototype.setLocalDescription=function(e){var t,n,i=this;if(-1===[\"offer\",\"answer\"].indexOf(e.type))return Promise.reject(c(\"TypeError\",'Unsupported type \"'+e.type+'\"'));if(!a(\"setLocalDescription\",e.type,i.signalingState)||i._isClosed)return Promise.reject(c(\"InvalidStateError\",\"Can not set local \"+e.type+\" in state \"+i.signalingState));if(\"offer\"===e.type)t=r.splitSections(e.sdp),n=t.shift(),t.forEach(function(e,t){var n=r.parseRtpParameters(e);i.transceivers[t].localCapabilities=n}),i.transceivers.forEach(function(e,t){i._gather(e.mid,t)});else if(\"answer\"===e.type){t=r.splitSections(i._remoteDescription.sdp),n=t.shift();var s=r.matchPrefix(n,\"a=ice-lite\").length>0;t.forEach(function(e,t){var a=i.transceivers[t],c=a.iceGatherer,u=a.iceTransport,l=a.dtlsTransport,d=a.localCapabilities,p=a.remoteCapabilities;if(!(r.isRejected(e)&&0===r.matchPrefix(e,\"a=bundle-only\").length)&&!a.rejected){var h=r.getIceParameters(e,n),f=r.getDtlsParameters(e,n);s&&(f.role=\"server\"),i.usingBundle&&0!==t||(i._gather(a.mid,t),\"new\"===u.state&&u.start(c,h,s?\"controlling\":\"controlled\"),\"new\"===l.state&&l.start(f));var m=o(d,p);i._transceive(a,m.codecs.length>0,!1)}})}return i._localDescription={type:e.type,sdp:e.sdp},\"offer\"===e.type?i._updateSignalingState(\"have-local-offer\"):i._updateSignalingState(\"stable\"),Promise.resolve()},l.prototype.setRemoteDescription=function(i){var l=this;if(-1===[\"offer\",\"answer\"].indexOf(i.type))return Promise.reject(c(\"TypeError\",'Unsupported type \"'+i.type+'\"'));if(!a(\"setRemoteDescription\",i.type,l.signalingState)||l._isClosed)return Promise.reject(c(\"InvalidStateError\",\"Can not set remote \"+i.type+\" in state \"+l.signalingState));var d={};l.remoteStreams.forEach(function(e){d[e.id]=e});var p=[],h=r.splitSections(i.sdp),f=h.shift(),m=r.matchPrefix(f,\"a=ice-lite\").length>0,v=r.matchPrefix(f,\"a=group:BUNDLE \").length>0;l.usingBundle=v;var y=r.matchPrefix(f,\"a=ice-options:\")[0];return l.canTrickleIceCandidates=!!y&&y.substr(14).split(\" \").indexOf(\"trickle\")>=0,h.forEach(function(a,c){var u=r.splitLines(a),h=r.getKind(a),y=r.isRejected(a)&&0===r.matchPrefix(a,\"a=bundle-only\").length,g=u[0].substr(2).split(\" \")[2],_=r.getDirection(a,f),S=r.parseMsid(a),b=r.getMid(a)||r.generateIdentifier();if(y||\"application\"===h&&(\"DTLS/SCTP\"===g||\"UDP/DTLS/SCTP\"===g))l.transceivers[c]={mid:b,kind:h,protocol:g,rejected:!0};else{var E,T,C,R,w,A,k,O,I;!y&&l.transceivers[c]&&l.transceivers[c].rejected&&(l.transceivers[c]=l._createTransceiver(h,!0));var P,D,N=r.parseRtpParameters(a);y||(P=r.getIceParameters(a,f),(D=r.getDtlsParameters(a,f)).role=\"client\"),k=r.parseRtpEncodingParameters(a);var L=r.parseRtcpParameters(a),M=r.matchPrefix(a,\"a=end-of-candidates\",f).length>0,x=r.matchPrefix(a,\"a=candidate:\").map(function(e){return r.parseCandidate(e)}).filter(function(e){return 1===e.component});if((\"offer\"===i.type||\"answer\"===i.type)&&!y&&v&&c>0&&l.transceivers[c]&&(l._disposeIceAndDtlsTransports(c),l.transceivers[c].iceGatherer=l.transceivers[0].iceGatherer,l.transceivers[c].iceTransport=l.transceivers[0].iceTransport,l.transceivers[c].dtlsTransport=l.transceivers[0].dtlsTransport,l.transceivers[c].rtpSender&&l.transceivers[c].rtpSender.setTransport(l.transceivers[0].dtlsTransport),l.transceivers[c].rtpReceiver&&l.transceivers[c].rtpReceiver.setTransport(l.transceivers[0].dtlsTransport)),\"offer\"!==i.type||y){if(\"answer\"===i.type&&!y){T=(E=l.transceivers[c]).iceGatherer,C=E.iceTransport,R=E.dtlsTransport,w=E.rtpReceiver,A=E.sendEncodingParameters,O=E.localCapabilities,l.transceivers[c].recvEncodingParameters=k,l.transceivers[c].remoteCapabilities=N,l.transceivers[c].rtcpParameters=L,x.length&&\"new\"===C.state&&(!m&&!M||v&&0!==c?x.forEach(function(e){s(E.iceTransport,e)}):C.setRemoteCandidates(x)),v&&0!==c||(\"new\"===C.state&&C.start(T,P,\"controlling\"),\"new\"===R.state&&R.start(D)),!o(E.localCapabilities,E.remoteCapabilities).codecs.filter(function(e){return\"rtx\"===e.name.toLowerCase()}).length&&E.sendEncodingParameters[0].rtx&&delete E.sendEncodingParameters[0].rtx,l._transceive(E,\"sendrecv\"===_||\"recvonly\"===_,\"sendrecv\"===_||\"sendonly\"===_),!w||\"sendrecv\"!==_&&\"sendonly\"!==_?delete E.rtpReceiver:(I=w.track,S?(d[S.stream]||(d[S.stream]=new e.MediaStream),n(I,d[S.stream]),p.push([I,w,d[S.stream]])):(d.default||(d.default=new e.MediaStream),n(I,d.default),p.push([I,w,d.default])))}}else{(E=l.transceivers[c]||l._createTransceiver(h)).mid=b,E.iceGatherer||(E.iceGatherer=l._createIceGatherer(c,v)),x.length&&\"new\"===E.iceTransport.state&&(!M||v&&0!==c?x.forEach(function(e){s(E.iceTransport,e)}):E.iceTransport.setRemoteCandidates(x)),O=e.RTCRtpReceiver.getCapabilities(h),t<15019&&(O.codecs=O.codecs.filter(function(e){return\"rtx\"!==e.name})),A=E.sendEncodingParameters||[{ssrc:1001*(2*c+2)}];var j,F=!1;if(\"sendrecv\"===_||\"sendonly\"===_){if(F=!E.rtpReceiver,w=E.rtpReceiver||new e.RTCRtpReceiver(E.dtlsTransport,h),F)I=w.track,S&&\"-\"===S.stream||(S?(d[S.stream]||(d[S.stream]=new e.MediaStream,Object.defineProperty(d[S.stream],\"id\",{get:function(){return S.stream}})),Object.defineProperty(I,\"id\",{get:function(){return S.track}}),j=d[S.stream]):(d.default||(d.default=new e.MediaStream),j=d.default)),j&&(n(I,j),E.associatedRemoteMediaStreams.push(j)),p.push([I,w,j])}else E.rtpReceiver&&E.rtpReceiver.track&&(E.associatedRemoteMediaStreams.forEach(function(t){var n,r,i=t.getTracks().find(function(e){return e.id===E.rtpReceiver.track.id});i&&(n=i,(r=t).removeTrack(n),r.dispatchEvent(new e.MediaStreamTrackEvent(\"removetrack\",{track:n})))}),E.associatedRemoteMediaStreams=[]);E.localCapabilities=O,E.remoteCapabilities=N,E.rtpReceiver=w,E.rtcpParameters=L,E.sendEncodingParameters=A,E.recvEncodingParameters=k,l._transceive(l.transceivers[c],!1,F)}}}),void 0===l._dtlsRole&&(l._dtlsRole=\"offer\"===i.type?\"active\":\"passive\"),l._remoteDescription={type:i.type,sdp:i.sdp},\"offer\"===i.type?l._updateSignalingState(\"have-remote-offer\"):l._updateSignalingState(\"stable\"),Object.keys(d).forEach(function(t){var n=d[t];if(n.getTracks().length){if(-1===l.remoteStreams.indexOf(n)){l.remoteStreams.push(n);var r=new Event(\"addstream\");r.stream=n,e.setTimeout(function(){l._dispatchEvent(\"addstream\",r)})}p.forEach(function(e){var t=e[0],r=e[1];n.id===e[2].id&&u(l,t,r,[n])})}}),p.forEach(function(e){e[2]||u(l,e[0],e[1],[])}),e.setTimeout(function(){l&&l.transceivers&&l.transceivers.forEach(function(e){e.iceTransport&&\"new\"===e.iceTransport.state&&e.iceTransport.getRemoteCandidates().length>0&&(console.warn(\"Timeout for addRemoteCandidate. Consider sending an end-of-candidates notification\"),e.iceTransport.addRemoteCandidate({}))})},4e3),Promise.resolve()},l.prototype.close=function(){this.transceivers.forEach(function(e){e.iceTransport&&e.iceTransport.stop(),e.dtlsTransport&&e.dtlsTransport.stop(),e.rtpSender&&e.rtpSender.stop(),e.rtpReceiver&&e.rtpReceiver.stop()}),this._isClosed=!0,this._updateSignalingState(\"closed\")},l.prototype._updateSignalingState=function(e){this.signalingState=e;var t=new Event(\"signalingstatechange\");this._dispatchEvent(\"signalingstatechange\",t)},l.prototype._maybeFireNegotiationNeeded=function(){var t=this;\"stable\"===this.signalingState&&!0!==this.needNegotiation&&(this.needNegotiation=!0,e.setTimeout(function(){if(t.needNegotiation){t.needNegotiation=!1;var e=new Event(\"negotiationneeded\");t._dispatchEvent(\"negotiationneeded\",e)}},0))},l.prototype._updateIceConnectionState=function(){var e,t={new:0,closed:0,checking:0,connected:0,completed:0,disconnected:0,failed:0};if(this.transceivers.forEach(function(e){e.iceTransport&&!e.rejected&&t[e.iceTransport.state]++}),e=\"new\",t.failed>0?e=\"failed\":t.checking>0?e=\"checking\":t.disconnected>0?e=\"disconnected\":t.new>0?e=\"new\":t.connected>0?e=\"connected\":t.completed>0&&(e=\"completed\"),e!==this.iceConnectionState){this.iceConnectionState=e;var n=new Event(\"iceconnectionstatechange\");this._dispatchEvent(\"iceconnectionstatechange\",n)}},l.prototype._updateConnectionState=function(){var e,t={new:0,closed:0,connecting:0,connected:0,completed:0,disconnected:0,failed:0};if(this.transceivers.forEach(function(e){e.iceTransport&&e.dtlsTransport&&!e.rejected&&(t[e.iceTransport.state]++,t[e.dtlsTransport.state]++)}),t.connected+=t.completed,e=\"new\",t.failed>0?e=\"failed\":t.connecting>0?e=\"connecting\":t.disconnected>0?e=\"disconnected\":t.new>0?e=\"new\":t.connected>0&&(e=\"connected\"),e!==this.connectionState){this.connectionState=e;var n=new Event(\"connectionstatechange\");this._dispatchEvent(\"connectionstatechange\",n)}},l.prototype.createOffer=function(){var n=this;if(n._isClosed)return Promise.reject(c(\"InvalidStateError\",\"Can not call createOffer after close\"));var o=n.transceivers.filter(function(e){return\"audio\"===e.kind}).length,a=n.transceivers.filter(function(e){return\"video\"===e.kind}).length,s=arguments[0];if(s){if(s.mandatory||s.optional)throw new TypeError(\"Legacy mandatory/optional constraints not supported.\");void 0!==s.offerToReceiveAudio&&(o=!0===s.offerToReceiveAudio?1:!1===s.offerToReceiveAudio?0:s.offerToReceiveAudio),void 0!==s.offerToReceiveVideo&&(a=!0===s.offerToReceiveVideo?1:!1===s.offerToReceiveVideo?0:s.offerToReceiveVideo)}for(n.transceivers.forEach(function(e){\"audio\"===e.kind?--o<0&&(e.wantReceive=!1):\"video\"===e.kind&&--a<0&&(e.wantReceive=!1)});o>0||a>0;)o>0&&(n._createTransceiver(\"audio\"),o--),a>0&&(n._createTransceiver(\"video\"),a--);var u=r.writeSessionBoilerplate(n._sdpSessionId,n._sdpSessionVersion++);n.transceivers.forEach(function(i,o){var a=i.track,s=i.kind,c=i.mid||r.generateIdentifier();i.mid=c,i.iceGatherer||(i.iceGatherer=n._createIceGatherer(o,n.usingBundle));var u=e.RTCRtpSender.getCapabilities(s);t<15019&&(u.codecs=u.codecs.filter(function(e){return\"rtx\"!==e.name})),u.codecs.forEach(function(e){\"H264\"===e.name&&void 0===e.parameters[\"level-asymmetry-allowed\"]&&(e.parameters[\"level-asymmetry-allowed\"]=\"1\"),i.remoteCapabilities&&i.remoteCapabilities.codecs&&i.remoteCapabilities.codecs.forEach(function(t){e.name.toLowerCase()===t.name.toLowerCase()&&e.clockRate===t.clockRate&&(e.preferredPayloadType=t.payloadType)})}),u.headerExtensions.forEach(function(e){(i.remoteCapabilities&&i.remoteCapabilities.headerExtensions||[]).forEach(function(t){e.uri===t.uri&&(e.id=t.id)})});var l=i.sendEncodingParameters||[{ssrc:1001*(2*o+1)}];a&&t>=15019&&\"video\"===s&&!l[0].rtx&&(l[0].rtx={ssrc:l[0].ssrc+1}),i.wantReceive&&(i.rtpReceiver=new e.RTCRtpReceiver(i.dtlsTransport,s)),i.localCapabilities=u,i.sendEncodingParameters=l}),\"max-compat\"!==n._config.bundlePolicy&&(u+=\"a=group:BUNDLE \"+n.transceivers.map(function(e){return e.mid}).join(\" \")+\"\\r\\n\"),u+=\"a=ice-options:trickle\\r\\n\",n.transceivers.forEach(function(e,t){u+=i(e,e.localCapabilities,\"offer\",e.stream,n._dtlsRole),u+=\"a=rtcp-rsize\\r\\n\",!e.iceGatherer||\"new\"===n.iceGatheringState||0!==t&&n.usingBundle||(e.iceGatherer.getLocalCandidates().forEach(function(e){e.component=1,u+=\"a=\"+r.writeCandidate(e)+\"\\r\\n\"}),\"completed\"===e.iceGatherer.state&&(u+=\"a=end-of-candidates\\r\\n\"))});var l=new e.RTCSessionDescription({type:\"offer\",sdp:u});return Promise.resolve(l)},l.prototype.createAnswer=function(){var n=this;if(n._isClosed)return Promise.reject(c(\"InvalidStateError\",\"Can not call createAnswer after close\"));if(\"have-remote-offer\"!==n.signalingState&&\"have-local-pranswer\"!==n.signalingState)return Promise.reject(c(\"InvalidStateError\",\"Can not call createAnswer in signalingState \"+n.signalingState));var a=r.writeSessionBoilerplate(n._sdpSessionId,n._sdpSessionVersion++);n.usingBundle&&(a+=\"a=group:BUNDLE \"+n.transceivers.map(function(e){return e.mid}).join(\" \")+\"\\r\\n\"),a+=\"a=ice-options:trickle\\r\\n\";var s=r.getMediaSections(n._remoteDescription.sdp).length;n.transceivers.forEach(function(e,r){if(!(r+1>s)){if(e.rejected)return\"application\"===e.kind?\"DTLS/SCTP\"===e.protocol?a+=\"m=application 0 DTLS/SCTP 5000\\r\\n\":a+=\"m=application 0 \"+e.protocol+\" webrtc-datachannel\\r\\n\":\"audio\"===e.kind?a+=\"m=audio 0 UDP/TLS/RTP/SAVPF 0\\r\\na=rtpmap:0 PCMU/8000\\r\\n\":\"video\"===e.kind&&(a+=\"m=video 0 UDP/TLS/RTP/SAVPF 120\\r\\na=rtpmap:120 VP8/90000\\r\\n\"),void(a+=\"c=IN IP4 0.0.0.0\\r\\na=inactive\\r\\na=mid:\"+e.mid+\"\\r\\n\");var c;if(e.stream)\"audio\"===e.kind?c=e.stream.getAudioTracks()[0]:\"video\"===e.kind&&(c=e.stream.getVideoTracks()[0]),c&&t>=15019&&\"video\"===e.kind&&!e.sendEncodingParameters[0].rtx&&(e.sendEncodingParameters[0].rtx={ssrc:e.sendEncodingParameters[0].ssrc+1});var u=o(e.localCapabilities,e.remoteCapabilities);!u.codecs.filter(function(e){return\"rtx\"===e.name.toLowerCase()}).length&&e.sendEncodingParameters[0].rtx&&delete e.sendEncodingParameters[0].rtx,a+=i(e,u,\"answer\",e.stream,n._dtlsRole),e.rtcpParameters&&e.rtcpParameters.reducedSize&&(a+=\"a=rtcp-rsize\\r\\n\")}});var u=new e.RTCSessionDescription({type:\"answer\",sdp:a});return Promise.resolve(u)},l.prototype.addIceCandidate=function(e){var t,n=this;return e&&void 0===e.sdpMLineIndex&&!e.sdpMid?Promise.reject(new TypeError(\"sdpMLineIndex or sdpMid required\")):new Promise(function(i,o){if(!n._remoteDescription)return o(c(\"InvalidStateError\",\"Can not add ICE candidate without a remote description\"));if(e&&\"\"!==e.candidate){var a=e.sdpMLineIndex;if(e.sdpMid)for(var u=0;u<n.transceivers.length;u++)if(n.transceivers[u].mid===e.sdpMid){a=u;break}var l=n.transceivers[a];if(!l)return o(c(\"OperationError\",\"Can not add ICE candidate\"));if(l.rejected)return i();var d=Object.keys(e.candidate).length>0?r.parseCandidate(e.candidate):{};if(\"tcp\"===d.protocol&&(0===d.port||9===d.port))return i();if(d.component&&1!==d.component)return i();if((0===a||a>0&&l.iceTransport!==n.transceivers[0].iceTransport)&&!s(l.iceTransport,d))return o(c(\"OperationError\",\"Can not add ICE candidate\"));var p=e.candidate.trim();0===p.indexOf(\"a=\")&&(p=p.substr(2)),(t=r.getMediaSections(n._remoteDescription.sdp))[a]+=\"a=\"+(d.type?p:\"end-of-candidates\")+\"\\r\\n\",n._remoteDescription.sdp=r.getDescription(n._remoteDescription.sdp)+t.join(\"\")}else for(var h=0;h<n.transceivers.length&&(n.transceivers[h].rejected||(n.transceivers[h].iceTransport.addRemoteCandidate({}),(t=r.getMediaSections(n._remoteDescription.sdp))[h]+=\"a=end-of-candidates\\r\\n\",n._remoteDescription.sdp=r.getDescription(n._remoteDescription.sdp)+t.join(\"\"),!n.usingBundle));h++);i()})},l.prototype.getStats=function(t){if(t&&t instanceof e.MediaStreamTrack){var n=null;if(this.transceivers.forEach(function(e){e.rtpSender&&e.rtpSender.track===t?n=e.rtpSender:e.rtpReceiver&&e.rtpReceiver.track===t&&(n=e.rtpReceiver)}),!n)throw c(\"InvalidAccessError\",\"Invalid selector.\");return n.getStats()}var r=[];return this.transceivers.forEach(function(e){[\"rtpSender\",\"rtpReceiver\",\"iceGatherer\",\"iceTransport\",\"dtlsTransport\"].forEach(function(t){e[t]&&r.push(e[t].getStats())})}),Promise.all(r).then(function(e){var t=new Map;return e.forEach(function(e){e.forEach(function(e){t.set(e.id,e)})}),t})};[\"RTCRtpSender\",\"RTCRtpReceiver\",\"RTCIceGatherer\",\"RTCIceTransport\",\"RTCDtlsTransport\"].forEach(function(t){var n=e[t];if(n&&n.prototype&&n.prototype.getStats){var r=n.prototype.getStats;n.prototype.getStats=function(){return r.apply(this).then(function(e){var t=new Map;return Object.keys(e).forEach(function(n){var r;e[n].type={inboundrtp:\"inbound-rtp\",outboundrtp:\"outbound-rtp\",candidatepair:\"candidate-pair\",localcandidate:\"local-candidate\",remotecandidate:\"remote-candidate\"}[(r=e[n]).type]||r.type,t.set(n,e[n])}),t})}}});var d=[\"createOffer\",\"createAnswer\"];return d.forEach(function(e){var t=l.prototype[e];l.prototype[e]=function(){var e=arguments;return\"function\"==typeof e[0]||\"function\"==typeof e[1]?t.apply(this,[arguments[2]]).then(function(t){\"function\"==typeof e[0]&&e[0].apply(null,[t])},function(t){\"function\"==typeof e[1]&&e[1].apply(null,[t])}):t.apply(this,arguments)}}),(d=[\"setLocalDescription\",\"setRemoteDescription\",\"addIceCandidate\"]).forEach(function(e){var t=l.prototype[e];l.prototype[e]=function(){var e=arguments;return\"function\"==typeof e[1]||\"function\"==typeof e[2]?t.apply(this,arguments).then(function(){\"function\"==typeof e[1]&&e[1].apply(null)},function(t){\"function\"==typeof e[2]&&e[2].apply(null,[t])}):t.apply(this,arguments)}}),[\"getStats\"].forEach(function(e){var t=l.prototype[e];l.prototype[e]=function(){var e=arguments;return\"function\"==typeof e[1]?t.apply(this,arguments).then(function(){\"function\"==typeof e[1]&&e[1].apply(null)}):t.apply(this,arguments)}}),l}},function(e,t,n){\"use strict\";e.exports=function(e){var t=e&&e.navigator,n=t.mediaDevices.getUserMedia.bind(t.mediaDevices);t.mediaDevices.getUserMedia=function(e){return n(e).catch(function(e){return Promise.reject(function(e){return{name:{PermissionDeniedError:\"NotAllowedError\"}[e.name]||e.name,message:e.message,constraint:e.constraint,toString:function(){return this.name}}}(e))})}}},function(e,t,n){\"use strict\";function r(e){return(r=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}var i=n(42),o={shimOnTrack:function(e){\"object\"!==r(e)||!e.RTCPeerConnection||\"ontrack\"in e.RTCPeerConnection.prototype||Object.defineProperty(e.RTCPeerConnection.prototype,\"ontrack\",{get:function(){return this._ontrack},set:function(e){this._ontrack&&(this.removeEventListener(\"track\",this._ontrack),this.removeEventListener(\"addstream\",this._ontrackpoly)),this.addEventListener(\"track\",this._ontrack=e),this.addEventListener(\"addstream\",this._ontrackpoly=function(e){e.stream.getTracks().forEach(function(t){var n=new Event(\"track\");n.track=t,n.receiver={track:t},n.transceiver={receiver:n.receiver},n.streams=[e.stream],this.dispatchEvent(n)}.bind(this))}.bind(this))}}),\"object\"===r(e)&&e.RTCTrackEvent&&\"receiver\"in e.RTCTrackEvent.prototype&&!(\"transceiver\"in e.RTCTrackEvent.prototype)&&Object.defineProperty(e.RTCTrackEvent.prototype,\"transceiver\",{get:function(){return{receiver:this.receiver}}})},shimSourceObject:function(e){\"object\"===r(e)&&(!e.HTMLMediaElement||\"srcObject\"in e.HTMLMediaElement.prototype||Object.defineProperty(e.HTMLMediaElement.prototype,\"srcObject\",{get:function(){return this.mozSrcObject},set:function(e){this.mozSrcObject=e}}))},shimPeerConnection:function(e){var t=i.detectBrowser(e);if(\"object\"===r(e)&&(e.RTCPeerConnection||e.mozRTCPeerConnection)){e.RTCPeerConnection||(e.RTCPeerConnection=function(n,r){if(t.version<38&&n&&n.iceServers){for(var i=[],o=0;o<n.iceServers.length;o++){var a=n.iceServers[o];if(a.hasOwnProperty(\"urls\"))for(var s=0;s<a.urls.length;s++){var c={url:a.urls[s]};0===a.urls[s].indexOf(\"turn\")&&(c.username=a.username,c.credential=a.credential),i.push(c)}else i.push(n.iceServers[o])}n.iceServers=i}return new e.mozRTCPeerConnection(n,r)},e.RTCPeerConnection.prototype=e.mozRTCPeerConnection.prototype,e.mozRTCPeerConnection.generateCertificate&&Object.defineProperty(e.RTCPeerConnection,\"generateCertificate\",{get:function(){return e.mozRTCPeerConnection.generateCertificate}}),e.RTCSessionDescription=e.mozRTCSessionDescription,e.RTCIceCandidate=e.mozRTCIceCandidate),[\"setLocalDescription\",\"setRemoteDescription\",\"addIceCandidate\"].forEach(function(t){var n=e.RTCPeerConnection.prototype[t];e.RTCPeerConnection.prototype[t]=function(){return arguments[0]=new(\"addIceCandidate\"===t?e.RTCIceCandidate:e.RTCSessionDescription)(arguments[0]),n.apply(this,arguments)}});var n=e.RTCPeerConnection.prototype.addIceCandidate;e.RTCPeerConnection.prototype.addIceCandidate=function(){return arguments[0]?n.apply(this,arguments):(arguments[1]&&arguments[1].apply(null),Promise.resolve())};var o={inboundrtp:\"inbound-rtp\",outboundrtp:\"outbound-rtp\",candidatepair:\"candidate-pair\",localcandidate:\"local-candidate\",remotecandidate:\"remote-candidate\"},a=e.RTCPeerConnection.prototype.getStats;e.RTCPeerConnection.prototype.getStats=function(e,n,r){return a.apply(this,[e||null]).then(function(e){if(t.version<48&&(e=function(e){var t=new Map;return Object.keys(e).forEach(function(n){t.set(n,e[n]),t[n]=e[n]}),t}(e)),t.version<53&&!n)try{e.forEach(function(e){e.type=o[e.type]||e.type})}catch(t){if(\"TypeError\"!==t.name)throw t;e.forEach(function(t,n){e.set(n,Object.assign({},t,{type:o[t.type]||t.type}))})}return e}).then(n,r)}}}};e.exports={shimOnTrack:o.shimOnTrack,shimSourceObject:o.shimSourceObject,shimPeerConnection:o.shimPeerConnection,shimGetUserMedia:n(143)}},function(e,t,n){\"use strict\";function r(e){return(r=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}var i=n(42),o=i.log;e.exports=function(e){var t=i.detectBrowser(e),n=e&&e.navigator,a=e&&e.MediaStreamTrack,s=function(e){return{name:{InternalError:\"NotReadableError\",NotSupportedError:\"TypeError\",PermissionDeniedError:\"NotAllowedError\",SecurityError:\"NotAllowedError\"}[e.name]||e.name,message:{\"The operation is insecure.\":\"The request is not allowed by the user agent or the platform in the current context.\"}[e.message]||e.message,constraint:e.constraint,toString:function(){return this.name+(this.message&&\": \")+this.message}}},c=function(e,i,a){var c=function(e){if(\"object\"!==r(e)||e.require)return e;var t=[];return Object.keys(e).forEach(function(n){if(\"require\"!==n&&\"advanced\"!==n&&\"mediaSource\"!==n){var i=e[n]=\"object\"===r(e[n])?e[n]:{ideal:e[n]};if(void 0===i.min&&void 0===i.max&&void 0===i.exact||t.push(n),void 0!==i.exact&&(\"number\"==typeof i.exact?i.min=i.max=i.exact:e[n]=i.exact,delete i.exact),void 0!==i.ideal){e.advanced=e.advanced||[];var o={};\"number\"==typeof i.ideal?o[n]={min:i.ideal,max:i.ideal}:o[n]=i.ideal,e.advanced.push(o),delete i.ideal,Object.keys(i).length||delete e[n]}}}),t.length&&(e.require=t),e};return e=JSON.parse(JSON.stringify(e)),t.version<38&&(o(\"spec: \"+JSON.stringify(e)),e.audio&&(e.audio=c(e.audio)),e.video&&(e.video=c(e.video)),o(\"ff37: \"+JSON.stringify(e))),n.mozGetUserMedia(e,i,function(e){a(s(e))})};if(n.mediaDevices||(n.mediaDevices={getUserMedia:function(e){return new Promise(function(t,n){c(e,t,n)})},addEventListener:function(){},removeEventListener:function(){}}),n.mediaDevices.enumerateDevices=n.mediaDevices.enumerateDevices||function(){return new Promise(function(e){e([{kind:\"audioinput\",deviceId:\"default\",label:\"\",groupId:\"\"},{kind:\"videoinput\",deviceId:\"default\",label:\"\",groupId:\"\"}])})},t.version<41){var u=n.mediaDevices.enumerateDevices.bind(n.mediaDevices);n.mediaDevices.enumerateDevices=function(){return u().then(void 0,function(e){if(\"NotFoundError\"===e.name)return[];throw e})}}if(t.version<49){var l=n.mediaDevices.getUserMedia.bind(n.mediaDevices);n.mediaDevices.getUserMedia=function(e){return l(e).then(function(t){if(e.audio&&!t.getAudioTracks().length||e.video&&!t.getVideoTracks().length)throw t.getTracks().forEach(function(e){e.stop()}),new DOMException(\"The object can not be found here.\",\"NotFoundError\");return t},function(e){return Promise.reject(s(e))})}}if(!(t.version>55&&\"autoGainControl\"in n.mediaDevices.getSupportedConstraints())){var d=function(e,t,n){t in e&&!(n in e)&&(e[n]=e[t],delete e[t])},p=n.mediaDevices.getUserMedia.bind(n.mediaDevices);if(n.mediaDevices.getUserMedia=function(e){return\"object\"===r(e)&&\"object\"===r(e.audio)&&(e=JSON.parse(JSON.stringify(e)),d(e.audio,\"autoGainControl\",\"mozAutoGainControl\"),d(e.audio,\"noiseSuppression\",\"mozNoiseSuppression\")),p(e)},a&&a.prototype.getSettings){var h=a.prototype.getSettings;a.prototype.getSettings=function(){var e=h.apply(this,arguments);return d(e,\"mozAutoGainControl\",\"autoGainControl\"),d(e,\"mozNoiseSuppression\",\"noiseSuppression\"),e}}if(a&&a.prototype.applyConstraints){var f=a.prototype.applyConstraints;a.prototype.applyConstraints=function(e){return\"audio\"===this.kind&&\"object\"===r(e)&&(e=JSON.parse(JSON.stringify(e)),d(e,\"autoGainControl\",\"mozAutoGainControl\"),d(e,\"noiseSuppression\",\"mozNoiseSuppression\")),f.apply(this,[e])}}}n.getUserMedia=function(e,r,o){if(t.version<44)return c(e,r,o);i.deprecated(\"navigator.getUserMedia\",\"navigator.mediaDevices.getUserMedia\"),n.mediaDevices.getUserMedia(e).then(r,o)}}},function(e,t,n){\"use strict\";function r(e){return(r=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}var i=n(42),o={shimLocalStreamsAPI:function(e){if(\"object\"===r(e)&&e.RTCPeerConnection){if(\"getLocalStreams\"in e.RTCPeerConnection.prototype||(e.RTCPeerConnection.prototype.getLocalStreams=function(){return this._localStreams||(this._localStreams=[]),this._localStreams}),\"getStreamById\"in e.RTCPeerConnection.prototype||(e.RTCPeerConnection.prototype.getStreamById=function(e){var t=null;return this._localStreams&&this._localStreams.forEach(function(n){n.id===e&&(t=n)}),this._remoteStreams&&this._remoteStreams.forEach(function(n){n.id===e&&(t=n)}),t}),!(\"addStream\"in e.RTCPeerConnection.prototype)){var t=e.RTCPeerConnection.prototype.addTrack;e.RTCPeerConnection.prototype.addStream=function(e){this._localStreams||(this._localStreams=[]),-1===this._localStreams.indexOf(e)&&this._localStreams.push(e);var n=this;e.getTracks().forEach(function(r){t.call(n,r,e)})},e.RTCPeerConnection.prototype.addTrack=function(e,n){n&&(this._localStreams?-1===this._localStreams.indexOf(n)&&this._localStreams.push(n):this._localStreams=[n]),t.call(this,e,n)}}\"removeStream\"in e.RTCPeerConnection.prototype||(e.RTCPeerConnection.prototype.removeStream=function(e){this._localStreams||(this._localStreams=[]);var t=this._localStreams.indexOf(e);if(-1!==t){this._localStreams.splice(t,1);var n=this,r=e.getTracks();this.getSenders().forEach(function(e){-1!==r.indexOf(e.track)&&n.removeTrack(e)})}})}},shimRemoteStreamsAPI:function(e){\"object\"===r(e)&&e.RTCPeerConnection&&(\"getRemoteStreams\"in e.RTCPeerConnection.prototype||(e.RTCPeerConnection.prototype.getRemoteStreams=function(){return this._remoteStreams?this._remoteStreams:[]}),\"onaddstream\"in e.RTCPeerConnection.prototype||Object.defineProperty(e.RTCPeerConnection.prototype,\"onaddstream\",{get:function(){return this._onaddstream},set:function(e){this._onaddstream&&(this.removeEventListener(\"addstream\",this._onaddstream),this.removeEventListener(\"track\",this._onaddstreampoly)),this.addEventListener(\"addstream\",this._onaddstream=e),this.addEventListener(\"track\",this._onaddstreampoly=function(e){var t=e.streams[0];if(this._remoteStreams||(this._remoteStreams=[]),!(this._remoteStreams.indexOf(t)>=0)){this._remoteStreams.push(t);var n=new Event(\"addstream\");n.stream=e.streams[0],this.dispatchEvent(n)}}.bind(this))}}))},shimCallbacksAPI:function(e){if(\"object\"===r(e)&&e.RTCPeerConnection){var t=e.RTCPeerConnection.prototype,n=t.createOffer,i=t.createAnswer,o=t.setLocalDescription,a=t.setRemoteDescription,s=t.addIceCandidate;t.createOffer=function(e,t){var r=arguments.length>=2?arguments[2]:arguments[0],i=n.apply(this,[r]);return t?(i.then(e,t),Promise.resolve()):i},t.createAnswer=function(e,t){var n=arguments.length>=2?arguments[2]:arguments[0],r=i.apply(this,[n]);return t?(r.then(e,t),Promise.resolve()):r};var c=function(e,t,n){var r=o.apply(this,[e]);return n?(r.then(t,n),Promise.resolve()):r};t.setLocalDescription=c,c=function(e,t,n){var r=a.apply(this,[e]);return n?(r.then(t,n),Promise.resolve()):r},t.setRemoteDescription=c,c=function(e,t,n){var r=s.apply(this,[e]);return n?(r.then(t,n),Promise.resolve()):r},t.addIceCandidate=c}},shimGetUserMedia:function(e){var t=e&&e.navigator;t.getUserMedia||(t.webkitGetUserMedia?t.getUserMedia=t.webkitGetUserMedia.bind(t):t.mediaDevices&&t.mediaDevices.getUserMedia&&(t.getUserMedia=function(e,n,r){t.mediaDevices.getUserMedia(e).then(n,r)}.bind(t)))},shimRTCIceServerUrls:function(e){var t=e.RTCPeerConnection;e.RTCPeerConnection=function(e,n){if(e&&e.iceServers){for(var r=[],o=0;o<e.iceServers.length;o++){var a=e.iceServers[o];!a.hasOwnProperty(\"urls\")&&a.hasOwnProperty(\"url\")?(i.deprecated(\"RTCIceServer.url\",\"RTCIceServer.urls\"),(a=JSON.parse(JSON.stringify(a))).urls=a.url,delete a.url,r.push(a)):r.push(e.iceServers[o])}e.iceServers=r}return new t(e,n)},e.RTCPeerConnection.prototype=t.prototype,\"generateCertificate\"in e.RTCPeerConnection&&Object.defineProperty(e.RTCPeerConnection,\"generateCertificate\",{get:function(){return t.generateCertificate}})},shimTrackEventTransceiver:function(e){\"object\"===r(e)&&e.RTCPeerConnection&&\"receiver\"in e.RTCTrackEvent.prototype&&!e.RTCTransceiver&&Object.defineProperty(e.RTCTrackEvent.prototype,\"transceiver\",{get:function(){return{receiver:this.receiver}}})},shimCreateOfferLegacy:function(e){var t=e.RTCPeerConnection.prototype.createOffer;e.RTCPeerConnection.prototype.createOffer=function(e){var n=this;if(e){var r=n.getTransceivers().find(function(e){return e.sender.track&&\"audio\"===e.sender.track.kind});!1===e.offerToReceiveAudio&&r?\"sendrecv\"===r.direction?r.setDirection(\"sendonly\"):\"recvonly\"===r.direction&&r.setDirection(\"inactive\"):!0!==e.offerToReceiveAudio||r||n.addTransceiver(\"audio\");var i=n.getTransceivers().find(function(e){return e.sender.track&&\"video\"===e.sender.track.kind});!1===e.offerToReceiveVideo&&i?\"sendrecv\"===i.direction?i.setDirection(\"sendonly\"):\"recvonly\"===i.direction&&i.setDirection(\"inactive\"):!0!==e.offerToReceiveVideo||i||n.addTransceiver(\"video\")}return t.apply(n,arguments)}}};e.exports={shimCallbacksAPI:o.shimCallbacksAPI,shimLocalStreamsAPI:o.shimLocalStreamsAPI,shimRemoteStreamsAPI:o.shimRemoteStreamsAPI,shimGetUserMedia:o.shimGetUserMedia,shimRTCIceServerUrls:o.shimRTCIceServerUrls,shimTrackEventTransceiver:o.shimTrackEventTransceiver,shimCreateOfferLegacy:o.shimCreateOfferLegacy}},function(e,t,n){\"use strict\";function r(e){return(r=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}var i=n(67),o=n(42);e.exports={shimRTCIceCandidate:function(e){if(!(e.RTCIceCandidate&&\"foundation\"in e.RTCIceCandidate.prototype)){var t=e.RTCIceCandidate;e.RTCIceCandidate=function(e){\"object\"===r(e)&&e.candidate&&0===e.candidate.indexOf(\"a=\")&&((e=JSON.parse(JSON.stringify(e))).candidate=e.candidate.substr(2));var n=new t(e),o=i.parseCandidate(e.candidate),a=Object.assign(n,o);return a.toJSON=function(){return{candidate:a.candidate,sdpMid:a.sdpMid,sdpMLineIndex:a.sdpMLineIndex,usernameFragment:a.usernameFragment}},a},function(e,t,n){if(e.RTCPeerConnection){var r=e.RTCPeerConnection.prototype,i=r.addEventListener;r.addEventListener=function(e,r){if(e!==t)return i.apply(this,arguments);var o=function(e){r(n(e))};return this._eventMap=this._eventMap||{},this._eventMap[r]=o,i.apply(this,[e,o])};var o=r.removeEventListener;r.removeEventListener=function(e,n){if(e!==t||!this._eventMap||!this._eventMap[n])return o.apply(this,arguments);var r=this._eventMap[n];return delete this._eventMap[n],o.apply(this,[e,r])},Object.defineProperty(r,\"on\"+t,{get:function(){return this[\"_on\"+t]},set:function(e){this[\"_on\"+t]&&(this.removeEventListener(t,this[\"_on\"+t]),delete this[\"_on\"+t]),e&&this.addEventListener(t,this[\"_on\"+t]=e)}})}}(e,\"icecandidate\",function(t){return t.candidate&&Object.defineProperty(t,\"candidate\",{value:new e.RTCIceCandidate(t.candidate),writable:\"false\"}),t})}},shimCreateObjectURL:function(e){var t=e&&e.URL;if(\"object\"===r(e)&&e.HTMLMediaElement&&\"srcObject\"in e.HTMLMediaElement.prototype&&t.createObjectURL&&t.revokeObjectURL){var n=t.createObjectURL.bind(t),i=t.revokeObjectURL.bind(t),a=new Map,s=0;t.createObjectURL=function(e){if(\"getTracks\"in e){var t=\"polyblob:\"+ ++s;return a.set(t,e),o.deprecated(\"URL.createObjectURL(stream)\",\"elem.srcObject = stream\"),t}return n(e)},t.revokeObjectURL=function(e){i(e),a.delete(e)};var c=Object.getOwnPropertyDescriptor(e.HTMLMediaElement.prototype,\"src\");Object.defineProperty(e.HTMLMediaElement.prototype,\"src\",{get:function(){return c.get.apply(this)},set:function(e){return this.srcObject=a.get(e)||null,c.set.apply(this,[e])}});var u=e.HTMLMediaElement.prototype.setAttribute;e.HTMLMediaElement.prototype.setAttribute=function(){return 2===arguments.length&&\"src\"===(\"\"+arguments[0]).toLowerCase()&&(this.srcObject=a.get(arguments[1])||null),u.apply(this,arguments)}}}}},function(e,t,n){t.Interop=n(147)},function(e,t,n){\"use strict\";function r(e){return(r=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}var i=n(148),o=n(149);function a(e){\"number\"==typeof e.mid&&(e.mid=e.mid.toString())}function s(){this.cache={mlB2UMap:{},mlU2BMap:{}}}e.exports=s,s.prototype.candidateToUnifiedPlan=function(e){var t=new RTCIceCandidate(e);return t.sdpMLineIndex=this.cache.mlB2UMap[t.sdpMLineIndex],t},s.prototype.candidateToPlanB=function(e){var t=new RTCIceCandidate(e);if(0===t.sdpMid.indexOf(\"audio\"))t.sdpMid=\"audio\";else{if(0!==t.sdpMid.indexOf(\"video\"))throw new Error(\"candidate with \"+t.sdpMid+\" not allowed\");t.sdpMid=\"video\"}return t.sdpMLineIndex=this.cache.mlU2BMap[t.sdpMLineIndex],t},s.prototype.getFirstSendingIndexFromAnswer=function(e){if(!this.cache.answer)return null;var t=i.parse(this.cache.answer);if(t&&t.media&&Array.isArray(t.media))for(var n=0;n<t.media.length;n++)if(t.media[n].type==e&&(!t.media[n].direction||\"sendrecv\"===t.media[n].direction||\"sendonly\"===t.media[n].direction))return n;return null},s.prototype.toPlanB=function(e){var t=this;if(\"object\"!==r(e)||null===e||\"string\"!=typeof e.sdp)return console.warn(\"An empty description was passed as an argument.\"),e;var n=i.parse(e.sdp);if(void 0===n.media||!Array.isArray(n.media)||0===n.media.length)return console.warn(\"The description has no media.\"),e;if(n.media.length<=3&&n.media.every(function(e){return-1!==[\"video\",\"audio\",\"data\"].indexOf(e.mid)}))return console.warn(\"This description does not look like Unified Plan.\"),e;for(var s=e.sdp,u=!1,l=0;l<n.media.length;l++){n.media[l].rtp.forEach(function(e){if(\"NULL\"===e.codec){u=!0;var n=i.parse(t.cache.offer);e.codec=n.media[l].rtp[0].codec}})}u&&(s=i.write(n)),this.cache[e.type]=s;var d=n.media;n.media=[];var p={},h=[],f={};d.forEach(function(e){if(a(e),(\"string\"!=typeof e.rtcpMux||\"rtcp-mux\"!==e.rtcpMux)&&\"inactive\"!==e.direction&&\"application\"!==e.type)throw new Error(\"Cannot convert to Plan B because m-lines without the rtcp-mux attribute were found.\");void 0!==p[e.type]&&\"inactive\"!==p[e.type].direction||(p[e.type]=e)}),d.forEach(function(e){var t=e.type;if(\"application\"===t)return e.mid=\"data\",n.media.push(e),void h.push(e.mid);\"object\"===r(e.sources)&&Object.keys(e.sources).forEach(function(n){\"object\"!==r(p[t].sources)&&(p[t].sources={}),p[t].sources[n]=e.sources[n],void 0!==e.msid&&(p[t].sources[n].msid=e.msid)}),void 0!==e.ssrcGroups&&Array.isArray(e.ssrcGroups)&&(void 0!==p[t].ssrcGroups&&Array.isArray(p[t].ssrcGroups)||(p[t].ssrcGroups=[]),o.apply(p[t].ssrcGroups,[e.ssrcGroups])||(p[t].ssrcGroups=p[t].ssrcGroups.concat(e.ssrcGroups)));var i=e.direction;f[t]=(f[t]||0)|c[i||\"inactive\"],p[t]===e&&(e.mid=t,delete e.bundleOnly,delete e.msid,\"inactive\"!==i&&h.push(t),n.media.push(e))}),n.groups.some(function(e){if(\"BUNDLE\"===e.type)return e.mids=h.join(\" \"),!0}),n.msidSemantic={semantic:\"WMS\",token:\"*\"};var m=i.write(n);return new RTCSessionDescription({type:e.type,sdp:m})},s.prototype.toUnifiedPlan=function(e){var t=this;if(\"object\"!==r(e)||null===e||\"string\"!=typeof e.sdp)return console.warn(\"An empty description was passed as an argument.\"),e;var n=i.parse(e.sdp);if(void 0===n.media||!Array.isArray(n.media)||0===n.media.length)return console.warn(\"The description has no media.\"),e;if(n.media.length>3||!n.media.every(function(e){return-1!==[\"video\",\"audio\",\"data\"].indexOf(e.mid)}))return console.warn(\"This description does not look like Plan B.\"),e;var s=[];n.media.forEach(function(e){s.push(e.mid)});var c,u=!1;if(void 0!==n.groups&&Array.isArray(n.groups)&&(u=n.groups.every(function(e){return\"BUNDLE\"!==e.type||o.apply(e.mids.sort(),[s.sort()])})),!u)throw new Error(\"Cannot convert to Unified Plan because m-lines that are not bundled were found.\");void 0!==this.cache[e.type]&&(c=i.parse(this.cache[e.type]));var l={audio:{},video:{}},d={},p=0,h=0;if(n.media.forEach(function(n){if((\"string\"!=typeof n.rtcpMux||\"rtcp-mux\"!==n.rtcpMux)&&\"inactive\"!==n.direction&&\"application\"!==n.type)throw new Error(\"Cannot convert to Unified Plan because m-lines without the rtcp-mux attribute were found.\");if(\"application\"===n.type){var i=null;return c&&c.media&&(i=c.media.find(function(e){return\"application\"===e.type})),void(i?d[i.mid]=i:d[n.mid]=n)}var o=n.sources,s=n.ssrcGroups,u=n.candidates,f=n.iceUfrag,m=n.icePwd,v=n.fingerprint,y=n.port;delete n.sources,delete n.ssrcGroups,delete n.candidates,delete n.iceUfrag,delete n.icePwd,delete n.fingerprint,delete n.port,delete n.mid;var g={};void 0!==s&&Array.isArray(s)&&s.forEach(function(e){\"SIM\"!==e.semantics&&void 0!==e.ssrcs&&Array.isArray(e.ssrcs)&&e.ssrcs.forEach(function(t){void 0===g[t]&&(g[t]=[]),g[t].push(e)})});var _={};\"object\"===r(o)&&Object.keys(o).forEach(function(i){var s;if(\"offer\"!==e.type||o[i].msid)if(void 0!==g[i]&&Array.isArray(g[i])&&g[i].some(function(e){return e.ssrcs.some(function(e){if(\"object\"===r(_[e]))return s=_[e],!0})}),\"object\"===r(s))s.sources[i]=o[i],delete o[i].msid;else{if(s=Object.create(n),_[i]=s,void 0!==o[i].msid&&(s.msid=o[i].msid,delete o[i].msid),s.sources={},s.sources[i]=o[i],s.ssrcGroups=g[i],void 0!==c&&void 0!==c.media&&Array.isArray(c.media)&&c.media.forEach(function(e){\"object\"===r(e.sources)&&Object.keys(e.sources).forEach(function(t){t===i&&(s.mid=e.mid)})}),a(s),void 0===s.mid){if(\"answer\"===e.type)throw new Error(\"An unmapped SSRC was found.\");s.mid=[n.type,\"-\",i].join(\"\")}s.candidates=u,s.iceUfrag=f,s.icePwd=m,s.fingerprint=v,s.port=y,d[s.mid]=s,t.cache.mlU2BMap[h]=p,void 0===t.cache.mlB2UMap[p]&&(t.cache.mlB2UMap[p]=h),h++}else l[n.type][i]=o[i]}),p++}),n.media=[],s=[],\"answer\"===e.type)for(var f=0;f<c.media.length;f++){var m=c.media[f];a(m),void 0===d[m.mid]&&(delete m.msid,delete m.sources,delete m.ssrcGroups,m.direction&&\"sendrecv\"!==m.direction?\"sendonly\"===m.direction&&(m.direction=\"inactive\"):m.direction=\"recvonly\"),n.media.push(m),\"string\"==typeof m.mid&&s.push(m.mid)}else void 0!==c&&void 0!==c.media&&Array.isArray(c.media)&&c.media.forEach(function(e){a(e),s.push(e.mid),void 0!==d[e.mid]?n.media.push(d[e.mid]):(delete e.msid,delete e.sources,delete e.ssrcGroups,e.direction&&\"sendrecv\"!==e.direction||(e.direction=\"recvonly\"),e.direction&&\"sendonly\"!==e.direction||(e.direction=\"inactive\"),n.media.push(e))}),Object.keys(d).forEach(function(e){-1===s.indexOf(e)&&(s.push(e),\"recvonly\"===d[e].direction?n.media.some(function(t){if((\"sendrecv\"===t.direction||\"sendonly\"===t.direction)&&t.type===d[e].type)return Object.keys(d[e].sources).forEach(function(n){t.sources[n]=d[e].sources[n]}),!0}):n.media.push(d[e]))});[\"audio\",\"video\"].forEach(function(e){if(n&&n.media&&Array.isArray(n.media)){var r=null;if(Object.keys(l[e]).length>0&&null===(r=t.getFirstSendingIndexFromAnswer(e)))for(var i=0;i<n.media.length;i++)if(n.media[i].type===e){r=i;break}if(r&&n.media.length>r){var o=n.media[r];Object.keys(l[e]).forEach(function(t){o.sources&&o.sources[t]&&console.warn(\"Replacing an existing SSRC.\"),o.sources||(o.sources={}),o.sources[t]=l[e][t]})}}}),n.groups.some(function(e){if(\"BUNDLE\"===e.type)return e.mids=s.join(\" \"),!0}),n.msidSemantic={semantic:\"WMS\",token:\"*\"};var v=i.write(n);return this.cache[e.type]=v,new RTCSessionDescription({type:e.type,sdp:v})};var c={inactive:0,recvonly:1,sendonly:2,sendrecv:3}},function(e,t,n){var r=n(16);t.write=function(e,t){return void 0!==e&&void 0!==e.media&&Array.isArray(e.media)&&e.media.forEach(function(e){void 0!==e.sources&&0!==Object.keys(e.sources).length&&(e.ssrcs=[],Object.keys(e.sources).forEach(function(t){var n=e.sources[t];Object.keys(n).forEach(function(r){e.ssrcs.push({id:t,attribute:r,value:n[r]})})}),delete e.sources),void 0!==e.ssrcGroups&&Array.isArray(e.ssrcGroups)&&e.ssrcGroups.forEach(function(e){void 0!==e.ssrcs&&Array.isArray(e.ssrcs)&&(e.ssrcs=e.ssrcs.join(\" \"))})}),void 0!==e&&void 0!==e.groups&&Array.isArray(e.groups)&&e.groups.forEach(function(e){void 0!==e.mids&&Array.isArray(e.mids)&&(e.mids=e.mids.join(\" \"))}),r.write(e,t)},t.parse=function(e){var t=r.parse(e);return void 0!==t&&void 0!==t.media&&Array.isArray(t.media)&&t.media.forEach(function(e){void 0!==e.ssrcs&&Array.isArray(e.ssrcs)&&(e.sources={},e.ssrcs.forEach(function(t){e.sources[t.id]||(e.sources[t.id]={}),e.sources[t.id][t.attribute]=t.value}),delete e.ssrcs),void 0!==e.ssrcGroups&&Array.isArray(e.ssrcGroups)&&e.ssrcGroups.forEach(function(e){\"string\"==typeof e.ssrcs&&(e.ssrcs=e.ssrcs.split(\" \"))})}),void 0!==t&&void 0!==t.groups&&Array.isArray(t.groups)&&t.groups.forEach(function(e){\"string\"==typeof e.mids&&(e.mids=e.mids.split(\" \"))}),t}},function(e,t){e.exports=function e(t){if(!t)return!1;if(this.length!=t.length)return!1;for(var n=0,r=this.length;n<r;n++)if(this[n]instanceof Array&&t[n]instanceof Array){if(!e.apply(this[n],[t[n]]))return!1}else if(this[n]!=t[n])return!1;return!0}},function(e,t,n){var r=n(16),i=n(151),o=i.parseSsrcs,a=i.writeSsrcs,s=3;function c(e,t,n){return e.ssrcs.filter(function(e){return e.id===t}).filter(function(e){return e.attribute===n}).map(function(e){return e.value})[0]}function u(e){this.options=e||{},this.options.numOfLayers||(this.options.numOfLayers=s),console.log(\"SdpSimulcast: using \"+this.options.numOfLayers+\" layers\"),this.ssrcCache=[]}function l(e,t){null!=e&&Array.isArray(e.media)&&e.media.forEach(function(e){\"video\"===e.type&&t(e)})}function d(e){return e&&null!=e&&e.type&&\"\"!=e.type&&e.sdp&&\"\"!=e.sdp}u.prototype.clearSsrcCache=function(){this.ssrcCache=[]},u.prototype.setSsrcCache=function(e){this.ssrcCache=e},u.prototype._parseSimLayers=function(e){var t=e.ssrcGroups&&e.ssrcGroups.find(function(e){return\"SIM\"===e.semantics});return t?t.ssrcs.split(\" \").map(function(e){return parseInt(e)}):[e.ssrcs[0].id]},u.prototype._buildNewToOldSsrcMap=function(e,t){for(var n={},r=0;r<e.length;++r){var i=e[r],o=t[r]||null;n[i]=o}return n},u.prototype._fillInSourceDataFromCache=function(e){console.log(\"SdpSimulcast restoring from cache: \",this.ssrcCache);var t=this._parseSimLayers(e);console.log(\"SdpSimulcast Parsed new sim ssrcs: \",t);var n=c(e,t[0],\"msid\"),r=c(e,t[0],\"cname\"),i=this._buildNewToOldSsrcMap(t,this.ssrcCache);console.log(\"SdpSimulcast built replacement map: \",i);var o=this.ssrcCache.filter(function(e){return-1===Object.values(i).indexOf(e)});return console.log(\"SdpSimulcast built ssrcs to add: \",o),e.ssrcs.forEach(function(e){i[e.id]&&(e.id=i[e.id])}),o.forEach(function(t){e.ssrcs.push({id:t,attribute:\"msid\",value:n}),e.ssrcs.push({id:t,attribute:\"cname\",value:r})}),e.ssrcGroups=e.ssrcGroups||[],e.ssrcGroups.push({semantics:\"SIM\",ssrcs:this.ssrcCache.join(\" \")}),e},u.prototype._generateSourceData=function(e,t){for(var n=function(e,t){e.ssrcs.push({id:t,attribute:\"cname\",value:i}),e.ssrcs.push({id:t,attribute:\"msid\",value:r})},r=c(e,t,\"msid\"),i=c(e,t,\"cname\"),o=[],a=0;a<this.options.numOfLayers-1;++a){var s=Math.floor(4294967295*Math.random())+0;n(e,s),o.push(s)}return e.ssrcGroups=e.ssrcGroups||[],e.ssrcGroups.push({semantics:\"SIM\",ssrcs:t+\" \"+o.join(\" \")}),e},u.prototype._restoreSimulcast=function(e){var t,n=e.ssrcs&&e.ssrcs.map(function(e){return e.id}).filter(function(e,t,n){return n.indexOf(e)===t}).length||0,r=e.ssrcGroups&&e.ssrcGroups.length||0;if(0===n||n>2)return e;if(2==n&&0===r)return e;if(1===n)t=e.ssrcs[0].id;else{var i=e.ssrcGroups.filter(function(e){return\"FID\"===e.semantics})[0];if(!i)return e;t=parseInt(i.ssrcs.split(\" \")[0])}return console.log(\"SdpSimulcast: current ssrc cache: \",this.ssrcCache),console.log(\"SdpSimulcast: parsed primary ssrc \"+t),-1!==this.ssrcCache.indexOf(t)?(console.log(\"SdpSimulcast: Have seen primary ssrc before, filling in data from cache\"),e=this._fillInSourceDataFromCache(e)):(console.log(\"SdpSimulcast: Have not seen primary ssrc before, generating source data\"),e=this._generateSourceData(e,t)),this.ssrcCache=this._parseSimLayers(e),e},u.prototype.mungeRemoteDescription=function(e){if(!d(e))return e;var t=r.parse(e.sdp),n=this;return l(t,function(e){n.options.explodeRemoteSimulcast?function(e){if(e&&Array.isArray(e.ssrcGroups))for(var t=o(e),n=[],r=e.ssrcGroups.length;r--;)if(\"SIM\"===e.ssrcGroups[r].semantics){for(var i=e.ssrcGroups[r].ssrcs.split(\" \"),s=0;s<i.length;s++){var c=i[s];n.push(c);var u=t[c].msid.split(\" \");t[c].msid=[u[0],\"/\",s,\" \",u[1],\"/\",s].join(\"\"),t[c].cname=[t[c].cname,\"/\",s].join(\"\"),e.ssrcGroups.forEach(function(e){if(\"SIM\"!==e.semantics){var r=e.ssrcs.split(\" \");-1!==r.indexOf(c)&&r.forEach(function(e){t[e].msid=t[c].msid,t[e].cname=t[c].cname,e!==c&&n.push(e)})}})}e.ssrcs=a(t,n),e.ssrcGroups.splice(r,1)}}(e):function(e){if(e&&Array.isArray(e.ssrcGroups)){var t=o(e);e.ssrcGroups.forEach(function(n){if(\"SIM\"===n.semantics){console.info(\"Imploding SIM group: \"+n.ssrcs),n.nuke=!0;for(var r=n.ssrcs.split(\" \"),i=1;i<r.length;i++){var o=r[i];delete t[o],e.ssrcGroups.forEach(function(e){if(\"SIM\"!==e.semantics){var n=e.ssrcs.split(\" \");-1!==n.indexOf(o)&&(n.forEach(function(e){delete t[e]}),e.nuke=!0)}})}}}),e.ssrcs=a(t);for(var n=e.ssrcGroups.length;n--;)e.ssrcGroups[n].nuke&&e.ssrcGroups.splice(n,1)}else console.info(\"Halt: There are no SSRC groups in the remote description.\")}(e),n.ssrcCache.length<1?function(e){if(e&&Array.isArray(e.invalid))for(var t=e.invalid.length;t--;)\"x-google-flag:conference\"==e.invalid[t].value&&e.invalid.splice(t,1)}(e):function(e){e&&(Array.isArray(e.invalid)||(e.invalid=[]),e.invalid.some(function(e){return\"x-google-flag:conference\"===e.value})||e.invalid.push({value:\"x-google-flag:conference\"}))}(e)}),new RTCSessionDescription({type:e.type,sdp:r.write(t)})},u.prototype.mungeLocalDescription=function(e){if(!d(e))return e;var t=r.parse(e.sdp),n=this;return l(t,function(e){\"recvonly\"!=e.direction&&\"inactive\"!=e.direction&&n._restoreSimulcast(e)}),new RTCSessionDescription({type:e.type,sdp:r.write(t)})},e.exports=u},function(e,t){t.writeSsrcs=function(e,t){var n=[];if(void 0!==e&&0!==Object.keys(e).length){Array.isArray(t)||(t=[]);for(var r=0;r<t.length;r++){var i=t[r],o=e[i];Object.keys(o).forEach(function(e){n.push({id:i,attribute:e,value:o[e]})})}Object.keys(e).forEach(function(r){if(r=parseInt(r),!(t.indexOf(r)>=0)){var i=e[r];Object.keys(i).forEach(function(e){n.push({id:r,attribute:e,value:i[e]})})}})}return n},t.parseSsrcs=function(e){var t={};return void 0!==e.ssrcs&&Array.isArray(e.ssrcs)&&e.ssrcs.forEach(function(e){t[e.id]||(t[e.id]={}),t[e.id][e.attribute]=e.value}),t}},function(e,t){e.exports=function(e,t,n,r){this.blob=e,this.name=t,this.startTime=n,this.wordArray=r}},function(e,t,n){var r=n(154),i=n(155),o=n(68),a=function(){this.url=function(){var e=\"config does not contain an url to a Sphinx4 https server\";if(void 0===config.sphinxURL)console.log(e);else{var t=config.sphinxURL;if(void 0!==t.includes&&t.includes(\"https://\"))return t;console.log(e)}}()};a.prototype=Object.create(r.prototype),a.constructor=a,a.prototype.sendRequest=function(e,t){console.log(\"sending an audio file  to \".concat(this.url)),console.log(\"the audio file being sent: \".concat(e));var n=new XMLHttpRequest;n.onreadystatechange=function(){if(n.readyState===XMLHttpRequest.DONE&&200===n.status)t(n.responseText);else if(n.readyState===XMLHttpRequest.DONE)throw new Error(\"unable to accept response from sphinx server. status: \".concat(n.status))},n.open(\"POST\",this.url),n.setRequestHeader(\"Content-Type\",o.determineCorrectFileType()),n.send(e),console.log(\"send \".concat(e))},a.prototype.formatResponse=function(e){var t=JSON.parse(e).objects;t.shift();var n=[];return t.forEach(function(e){return e.filler||n.push(new i(e.word,e.start,e.end))}),n},a.prototype.verify=function(e){if(console.log(\"response from server:\".concat(e.toString())),\"string\"!=typeof e)return!1;var t;try{t=JSON.parse(e)}catch(e){return console.log(e),!1}if(void 0===t.objects)return!1;var n=t.objects;return!(!n[0]||!n[0][\"session-id\"])},e.exports=a},function(e,t){var n=function(){throw new Error(\"TranscriptionService is abstract and cannot becreated\")};n.prototype.send=function(e,t){var n=this;this.sendRequest(e.blob,function(r){n.verify(r)?e.wordArray=n.formatResponse(r):(console.log(\"the retrieved response from the server is not valid!\"),e.wordArray=[]),t(e)})},n.prototype.sendRequest=function(e,t){throw new Error(\"TranscriptionService.sendRequest is abstract\")},n.prototype.formatResponse=function(e){throw new Error(\"TranscriptionService.format is abstract\")},n.prototype.verify=function(e){throw new Error(\"TranscriptionService.verify is abstract\")},e.exports=n},function(e,t){var n=function(e,t,n){this.word=e,this.begin=t,this.end=n};n.prototype.getWord=function(){return this.word},n.prototype.getBeginTime=function(){return this.begin},n.prototype.getEndTime=function(){return this.end},e.exports=n}])});","extractedComments":[]}