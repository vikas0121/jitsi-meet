"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf3 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _error = _interopRequireDefault(require("@atlaskit/icon/glyph/error"));

var _warning = _interopRequireDefault(require("@atlaskit/icon/glyph/warning"));

var _Content = require("../styled/Content");

var icon = {
  danger: _error.default,
  warning: _warning.default
};

var TitleIcon = function TitleIcon(_ref) {
  var appearance = _ref.appearance;
  if (!appearance) return null;
  var Icon = icon[appearance];
  return _react.default.createElement(_Content.TitleIconWrapper, {
    appearance: appearance
  }, _react.default.createElement(Icon, {
    label: "".concat(appearance, " icon")
  }));
};

var ModalHeader =
/*#__PURE__*/
function (_Component) {
  (0, _inherits2.default)(ModalHeader, _Component);

  function ModalHeader() {
    var _getPrototypeOf2;

    var _this;

    (0, _classCallCheck2.default)(this, ModalHeader);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(ModalHeader)).call.apply(_getPrototypeOf2, [this].concat(args)));
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "props", void 0);
    return _this;
  }

  (0, _createClass2.default)(ModalHeader, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          appearance = _this$props.appearance,
          component = _this$props.component,
          heading = _this$props.heading,
          onClose = _this$props.onClose,
          showKeyline = _this$props.showKeyline,
          isHeadingMultiline = _this$props.isHeadingMultiline;
      var warning = 'You can provide `component` OR `heading`, not both.';
      if (!component && !heading) return null;
      if (component && heading) return console.warn(warning); // eslint-disable-line no-console

      if (component) {
        return (0, _react.createElement)(component, {
          appearance: appearance,
          onClose: onClose,
          showKeyline: showKeyline,
          isHeadingMultiline: isHeadingMultiline
        });
      }

      return _react.default.createElement(_Content.Header, {
        showKeyline: showKeyline
      }, _react.default.createElement(_Content.Title, {
        isHeadingMultiline: isHeadingMultiline
      }, _react.default.createElement(TitleIcon, {
        appearance: appearance
      }), _react.default.createElement(_Content.TitleText, {
        isHeadingMultiline: isHeadingMultiline
      }, heading)));
    }
  }]);
  return ModalHeader;
}(_react.Component);

exports.default = ModalHeader;
(0, _defineProperty2.default)(ModalHeader, "defaultProps", {
  isHeadingMultiline: true
});